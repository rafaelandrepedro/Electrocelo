

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jul 19 14:42:02 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1,group=2
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1,inline
   211                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   236                           	psect	text210,global,reloc=2,class=CODE,delta=1
   237                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   238                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   239                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   240                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   241  0000                     
   242                           ; Version 2.36
   243                           ; Generated 28/01/2022 GMT
   244                           ; 
   245                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   246                           ; All rights reserved.
   247                           ; 
   248                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   249                           ; 
   250                           ; Redistribution and use in source and binary forms, with or without modification, are
   251                           ; permitted provided that the following conditions are met:
   252                           ; 
   253                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   254                           ;        conditions and the following disclaimer.
   255                           ; 
   256                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   257                           ;        of conditions and the following disclaimer in the documentation and/or other
   258                           ;        materials provided with the distribution. Publication is not required when
   259                           ;        this file is used in an embedded application.
   260                           ; 
   261                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   262                           ;        software without specific prior written permission.
   263                           ; 
   264                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   265                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   266                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   267                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   268                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   269                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   270                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   271                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   272                           ; 
   273                           ; 
   274                           ; Code-generator required, PIC18F46K40 Definitions
   275                           ; 
   276                           ; SFR Addresses
   277  0000                     
   278                           	psect	idataBANK0
   279  009F96                     __pidataBANK0:
   280                           	callstack 0
   281                           
   282                           ;initializer for _auxCounter
   283  009F96  03E8               	dw	1000
   284                           
   285                           	psect	idataBANK1
   286  009FA0                     __pidataBANK1:
   287                           	callstack 0
   288                           
   289                           ;initializer for _firstselectflag
   290  009FA0  01                 	db	1
   291                           
   292                           	psect	idataBANK2
   293  009F34                     __pidataBANK2:
   294                           	callstack 0
   295                           
   296                           ;initializer for _tempCounter
   297  009F34  3DDD               	dw	15837
   298  009F36  000F               	dw	15
   299                           
   300                           ;initializer for _zeroCrossingWaitTime
   301  009F38  19                 	db	25
   302  009F39  19                 	db	25
   303                           
   304                           	psect	idataBANK3
   305  009B3E                     __pidataBANK3:
   306                           	callstack 0
   307                           
   308                           ;initializer for _DispTable
   309  009B3E  6F                 	db	111
   310  009B3F  21                 	db	33
   311  009B40  76                 	db	118
   312  009B41  73                 	db	115
   313  009B42  39                 	db	57
   314  009B43  5B                 	db	91
   315  009B44  5F                 	db	95
   316  009B45  61                 	db	97
   317  009B46  7F                 	db	127
   318  009B47  7B                 	db	123
   319  009B48  7D                 	db	125
   320  009B49  7F                 	db	127
   321  009B4A  4E                 	db	78
   322  009B4B  37                 	db	55
   323  009B4C  5E                 	db	94
   324  009B4D  5C                 	db	92
   325  009B4E  7C                 	db	124
   326  009B4F  3D                 	db	61
   327  009B50  0E                 	db	14
   328  009B51  2F                 	db	47
   329  009B52  14                 	db	20
   330  009B53  1E                 	db	30
   331  009B54  07                 	db	7
   332  009B55  45                 	db	69
   333  009B56  10                 	db	16
   334  009B57  0C                 	db	12
   335  009B58  40                 	db	64
   336  009B59  20                 	db	32
   337  009B5A  01                 	db	1
   338  009B5B  02                 	db	2
   339  009B5C  04                 	db	4
   340  009B5D  08                 	db	8
   341  009B5E  00                 	db	0
   342  009B5F  3B                 	db	59
   343  009B60  1F                 	db	31
   344  009B61  16                 	db	22
   345  009B62  17                 	db	23
   346                           
   347                           	psect	smallconst
   348  000F00                     __psmallconst:
   349                           	callstack 0
   350  000F00  00                 	db	0
   351  000F01                     _i2c1_fsmStateTable:
   352                           	callstack 0
   353  000F01  DA                 	db	low _I2C1_DO_IDLE
   354  000F02  9E                 	db	high _I2C1_DO_IDLE
   355  000F03  46                 	db	low _I2C1_DO_SEND_ADR_READ
   356  000F04  9E                 	db	high _I2C1_DO_SEND_ADR_READ
   357  000F05  38                 	db	low _I2C1_DO_SEND_ADR_WRITE
   358  000F06  9E                 	db	high _I2C1_DO_SEND_ADR_WRITE
   359  000F07  86                 	db	low _I2C1_DO_TX
   360  000F08  83                 	db	high _I2C1_DO_TX
   361  000F09  24                 	db	low _I2C1_DO_RX
   362  000F0A  88                 	db	high _I2C1_DO_RX
   363  000F0B  D0                 	db	low _I2C1_DO_RCEN
   364  000F0C  9E                 	db	high _I2C1_DO_RCEN
   365  000F0D  40                 	db	low _I2C1_DO_TX_EMPTY
   366  000F0E  8E                 	db	high _I2C1_DO_TX_EMPTY
   367  000F0F  24                 	db	low _I2C1_DO_SEND_RESTART_READ
   368  000F10  9F                 	db	high _I2C1_DO_SEND_RESTART_READ
   369  000F11  1C                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   370  000F12  9F                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   371  000F13  14                 	db	low _I2C1_DO_SEND_RESTART
   372  000F14  9F                 	db	high _I2C1_DO_SEND_RESTART
   373  000F15  0C                 	db	low _I2C1_DO_SEND_STOP
   374  000F16  9F                 	db	high _I2C1_DO_SEND_STOP
   375  000F17  04                 	db	low _I2C1_DO_RX_ACK
   376  000F18  9F                 	db	high _I2C1_DO_RX_ACK
   377  000F19  FC                 	db	low _I2C1_DO_RX_NACK_STOP
   378  000F1A  9E                 	db	high _I2C1_DO_RX_NACK_STOP
   379  000F1B  F4                 	db	low _I2C1_DO_RX_NACK_RESTART
   380  000F1C  9E                 	db	high _I2C1_DO_RX_NACK_RESTART
   381  000F1D  C6                 	db	low _I2C1_DO_RESET
   382  000F1E  9E                 	db	high _I2C1_DO_RESET
   383  000F1F  54                 	db	low _I2C1_DO_ADDRESS_NACK
   384  000F20  93                 	db	high _I2C1_DO_ADDRESS_NACK
   385  000F21                     __end_of_i2c1_fsmStateTable:
   386                           	callstack 0
   387  0000                     _T2CON	set	4029
   388  0000                     _T1CON	set	4047
   389  0000                     _T1CLK	set	4050
   390  0000                     _T1GATE	set	4049
   391  0000                     _T0CON0	set	4053
   392  0000                     _INLVLD	set	3874
   393  0000                     _SLRCOND	set	3875
   394  0000                     _ODCOND	set	3876
   395  0000                     _WPUD	set	3877
   396  0000                     _TRISD	set	3979
   397  0000                     _TRISC	set	3978
   398  0000                     _TRISB	set	3977
   399  0000                     _TRISA	set	3976
   400  0000                     _TRISE	set	3980
   401  0000                     _LATC	set	3973
   402  0000                     _LATB	set	3972
   403  0000                     _OSCTUNE	set	3805
   404  0000                     _OSCFRQ	set	3806
   405  0000                     _ADERRL	set	3950
   406  0000                     _ADERRH	set	3951
   407  0000                     _ADPREVL	set	3937
   408  0000                     _ADPREVH	set	3938
   409  0000                     _ADFLTRL	set	3954
   410  0000                     _ADFLTRH	set	3955
   411  0000                     _ADACCL	set	3952
   412  0000                     _ADACCH	set	3953
   413  0000                     _ADCNT	set	3943
   414  0000                     _ADRESL	set	3939
   415  0000                     _ADRESH	set	3940
   416  0000                     _ADACQ	set	3932
   417  0000                     _ADCON0	set	3936
   418  0000                     _ADCLK	set	3927
   419  0000                     _ADSTAT	set	3941
   420  0000                     _ADCON3	set	3931
   421  0000                     _ADCON2	set	3930
   422  0000                     _ADPRE	set	3934
   423  0000                     _ADSTPTH	set	3945
   424  0000                     _ADUTHH	set	3949
   425  0000                     _ADUTHL	set	3948
   426  0000                     _ADLTHH	set	3947
   427  0000                     _SP1BRGH	set	3996
   428  0000                     _TX1STA	set	3998
   429  000F21  00                 	db	0	; dummy byte at the end
   430  0000                     
   431                           	psect	nvBANK1
   432  0001FE                     __pnvBANK1:
   433                           	callstack 0
   434  0001FE                     _eusart1TxBufferRemaining:
   435                           	callstack 0
   436  0001FE                     	ds	1
   437                           
   438                           	psect	nvBANK2
   439  0002DB                     __pnvBANK2:
   440                           	callstack 0
   441  0002DB                     _TMR2_InterruptHandler:
   442                           	callstack 0
   443  0002DB                     	ds	2
   444  0002DD                     _TMR1_InterruptHandler:
   445                           	callstack 0
   446  0002DD                     	ds	2
   447  0002DF                     _timer1ReloadVal:
   448                           	callstack 0
   449  0002DF                     	ds	2
   450  0002E1                     _TMR0_InterruptHandler:
   451                           	callstack 0
   452  0002E1                     	ds	2
   453  0002E3                     _EUSART1_ErrorHandler:
   454                           	callstack 0
   455  0002E3                     	ds	2
   456  0002E5                     _EUSART1_OverrunErrorHandler:
   457                           	callstack 0
   458  0002E5                     	ds	2
   459  0002E7                     _EUSART1_FramingErrorHandler:
   460                           	callstack 0
   461  0002E7                     	ds	2
   462  0002E9                     _EUSART1_RxDefaultInterruptHandler:
   463                           	callstack 0
   464  0002E9                     	ds	2
   465  0002EB                     _EUSART1_TxDefaultInterruptHandler:
   466                           	callstack 0
   467  0002EB                     	ds	2
   468  0000                     _WDTCON0bits	set	3794
   469  0000                     _TMR0IE	set	30229
   470  0000                     _TMR0IF	set	30293
   471  0000                     _LATEbits	set	3975
   472  0000                     _LATDbits	set	3974
   473  0000                     _LATAbits	set	3971
   474  0000                     _LATCbits	set	3973
   475  0000                     _PORTB	set	3982
   476  0000                     _T1CONbits	set	4047
   477  0000                     _SSP1CON2bits	set	3991
   478  0000                     _SSP1CON1bits	set	3990
   479  0000                     _ADCON0bits	set	3936
   480  0000                     _RC1STAbits	set	3997
   481  0000                     _GIE	set	32663
   482  0000                     _RX1PPS	set	3765
   483  0000                     _SSP1CLKPPS	set	3767
   484  0000                     _PIE0bits	set	3778
   485  0000                     _PIE3bits	set	3781
   486  0000                     _PIE4bits	set	3782
   487  0000                     _PIR0bits	set	3786
   488  0000                     _PIR3bits	set	3789
   489  0000                     _ADACT	set	3926
   490  0000                     _ADREF	set	3928
   491  0000                     _ADCON1	set	3929
   492  0000                     _ADCAP	set	3933
   493  0000                     _ADPCH	set	3935
   494  0000                     _ADRPT	set	3942
   495  0000                     _ADSTPTL	set	3944
   496  0000                     _ADLTHL	set	3946
   497  0000                     _RC1REG	set	3993
   498  0000                     _TX1REG	set	3994
   499  0000                     _SP1BRGL	set	3995
   500  0000                     _RC1STA	set	3997
   501  0000                     _BAUD1CON	set	3999
   502  0000                     _T2TMR	set	4027
   503  0000                     _T2PR	set	4028
   504  0000                     _T2HLT	set	4030
   505  0000                     _T2CLKCON	set	4031
   506  0000                     _TMR1L	set	4045
   507  0000                     _TMR1H	set	4046
   508  0000                     _T1GCON	set	4048
   509  0000                     _TMR0L	set	4051
   510  0000                     _TMR0H	set	4052
   511  0000                     _T0CON1	set	4054
   512  0000                     _PCON0bits	set	4055
   513  0000                     _INTCONbits	set	4082
   514  0000                     _LATA	set	3971
   515  0000                     _LATD	set	3974
   516  0000                     _LATE	set	3975
   517  0000                     _SSP1BUF	set	3986
   518  0000                     _SSP1ADD	set	3987
   519  0000                     _SSP1STAT	set	3989
   520  0000                     _SSP1CON2	set	3991
   521  0000                     _SSP1CON1	set	3990
   522  0000                     _WDTCON0	set	3794
   523  0000                     _OSCCON1	set	3800
   524  0000                     _PIR4bits	set	3790
   525  0000                     _OSCCON3	set	3802
   526  0000                     _OSCEN	set	3804
   527  0000                     _PMD0	set	3809
   528  0000                     _RC3PPS	set	3834
   529  0000                     _INLVLA	set	3853
   530  0000                     _SLRCONA	set	3854
   531  0000                     _ODCONA	set	3855
   532  0000                     _WPUA	set	3856
   533  0000                     _ANSELA	set	3857
   534  0000                     _ANSELB	set	3865
   535  0000                     _ANSELC	set	3873
   536  0000                     _ANSELD	set	3878
   537  0000                     _PMD5	set	3814
   538  0000                     _PMD4	set	3813
   539  0000                     _PMD3	set	3812
   540  0000                     _PMD2	set	3811
   541  0000                     _PMD1	set	3810
   542  0000                     _WDTCON1	set	3795
   543  0000                     _PORTEbits	set	3985
   544  0000                     _PORTBbits	set	3982
   545  0000                     _PORTAbits	set	3981
   546  0000                     _INLVLE	set	3882
   547  0000                     _SLRCONE	set	3883
   548  0000                     _ODCONE	set	3884
   549  0000                     _WPUE	set	3885
   550  0000                     _ANSELE	set	3886
   551  0000                     _INLVLC	set	3869
   552  0000                     _SLRCONC	set	3870
   553  0000                     _ODCONC	set	3871
   554  0000                     _WPUC	set	3872
   555  0000                     _INLVLB	set	3861
   556  0000                     _SLRCONB	set	3862
   557  0000                     _ODCONB	set	3863
   558  0000                     _WPUB	set	3864
   559  0000                     _IOCBN3	set	30875
   560  0000                     _IOCBP3	set	30883
   561  0000                     _SSP1DATPPS	set	3768
   562  0000                     _RC7PPS	set	3838
   563  0000                     _RC4PPS	set	3835
   564  0000                     _T2RST	set	4032
   565                           
   566                           ; #config settings
   567                           
   568                           	psect	cinit
   569  007D74                     __pcinit:
   570                           	callstack 0
   571  007D74                     start_initialization:
   572                           	callstack 0
   573  007D74                     __initialization:
   574                           	callstack 0
   575                           
   576                           ; Initialize objects allocated to BANK3 (37 bytes)
   577                           ; load TBLPTR registers with __pidataBANK3
   578  007D74  0E3E               	movlw	low __pidataBANK3
   579  007D76  6EF6               	movwf	tblptrl,c
   580  007D78  0E9B               	movlw	high __pidataBANK3
   581  007D7A  6EF7               	movwf	tblptrh,c
   582  007D7C  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   583  007D7E  6EF8               	movwf	tblptru,c
   584  007D80  EE03  F0D2         	lfsr	0,__pdataBANK3
   585  007D84  EE10 F025          	lfsr	1,37
   586  007D88                     copy_data0:
   587  007D88  0009               	tblrd		*+
   588  007D8A  CFF5 FFEE          	movff	tablat,postinc0
   589  007D8E  50E5               	movf	postdec1,w,c
   590  007D90  50E1               	movf	fsr1l,w,c
   591  007D92  E1FA               	bnz	copy_data0
   592                           
   593                           ; Initialize objects allocated to BANK2 (6 bytes)
   594                           ; load TBLPTR registers with __pidataBANK2
   595  007D94  0E34               	movlw	low __pidataBANK2
   596  007D96  6EF6               	movwf	tblptrl,c
   597  007D98  0E9F               	movlw	high __pidataBANK2
   598  007D9A  6EF7               	movwf	tblptrh,c
   599  007D9C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   600  007D9E  6EF8               	movwf	tblptru,c
   601  007DA0  EE02  F0F4         	lfsr	0,__pdataBANK2
   602  007DA4  EE10 F006          	lfsr	1,6
   603  007DA8                     copy_data1:
   604  007DA8  0009               	tblrd		*+
   605  007DAA  CFF5 FFEE          	movff	tablat,postinc0
   606  007DAE  50E5               	movf	postdec1,w,c
   607  007DB0  50E1               	movf	fsr1l,w,c
   608  007DB2  E1FA               	bnz	copy_data1
   609                           
   610                           ; Initialize objects allocated to BANK1 (1 bytes)
   611                           ; load TBLPTR registers with __pidataBANK1
   612  007DB4  0EA0               	movlw	low __pidataBANK1
   613  007DB6  6EF6               	movwf	tblptrl,c
   614  007DB8  0E9F               	movlw	high __pidataBANK1
   615  007DBA  6EF7               	movwf	tblptrh,c
   616  007DBC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   617  007DBE  6EF8               	movwf	tblptru,c
   618  007DC0  0009               	tblrd		*+	;fetch initializer
   619  007DC2  CFF5 F1FF          	movff	tablat,__pdataBANK1
   620                           
   621                           ; Initialize objects allocated to BANK0 (2 bytes)
   622                           ; load TBLPTR registers with __pidataBANK0
   623  007DC6  0E96               	movlw	low __pidataBANK0
   624  007DC8  6EF6               	movwf	tblptrl,c
   625  007DCA  0E9F               	movlw	high __pidataBANK0
   626  007DCC  6EF7               	movwf	tblptrh,c
   627  007DCE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   628  007DD0  6EF8               	movwf	tblptru,c
   629  007DD2  0009               	tblrd		*+	;fetch initializer
   630  007DD4  CFF5 F0FC          	movff	tablat,__pdataBANK0
   631  007DD8  0009               	tblrd		*+	;fetch initializer
   632  007DDA  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   633                           
   634                           ; Clear objects allocated to BANK3 (210 bytes)
   635  007DDE  EE03  F000         	lfsr	0,__pbssBANK3
   636  007DE2  0ED2               	movlw	210
   637  007DE4                     clear_0:
   638  007DE4  6AEE               	clrf	postinc0,c
   639  007DE6  06E8               	decf	wreg,f,c
   640  007DE8  E1FD               	bnz	clear_0
   641                           
   642                           ; Clear objects allocated to BANK2 (219 bytes)
   643  007DEA  EE02  F000         	lfsr	0,__pbssBANK2
   644  007DEE  0EDB               	movlw	219
   645  007DF0                     clear_1:
   646  007DF0  6AEE               	clrf	postinc0,c
   647  007DF2  06E8               	decf	wreg,f,c
   648  007DF4  E1FD               	bnz	clear_1
   649                           
   650                           ; Clear objects allocated to BANK1 (254 bytes)
   651  007DF6  EE01  F000         	lfsr	0,__pbssBANK1
   652  007DFA  0EFE               	movlw	254
   653  007DFC                     clear_2:
   654  007DFC  6AEE               	clrf	postinc0,c
   655  007DFE  06E8               	decf	wreg,f,c
   656  007E00  E1FD               	bnz	clear_2
   657                           
   658                           ; Clear objects allocated to BANK0 (120 bytes)
   659  007E02  EE00  F060         	lfsr	0,__pbssBANK0
   660  007E06  0E78               	movlw	120
   661  007E08                     clear_3:
   662  007E08  6AEE               	clrf	postinc0,c
   663  007E0A  06E8               	decf	wreg,f,c
   664  007E0C  E1FD               	bnz	clear_3
   665                           
   666                           ; Clear objects allocated to COMRAM (21 bytes)
   667  007E0E  EE00  F03B         	lfsr	0,__pbssCOMRAM
   668  007E12  0E15               	movlw	21
   669  007E14                     clear_4:
   670  007E14  6AEE               	clrf	postinc0,c
   671  007E16  06E8               	decf	wreg,f,c
   672  007E18  E1FD               	bnz	clear_4
   673  007E1A                     end_of_initialization:
   674                           	callstack 0
   675  007E1A                     __end_of__initialization:
   676                           	callstack 0
   677  007E1A  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   678  007E1C  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   679  007E1E  0100               	movlb	0
   680  007E20  EFCC  F034         	goto	_main	;jump to C main() function
   681                           
   682                           	psect	bssCOMRAM
   683  00003B                     __pbssCOMRAM:
   684                           	callstack 0
   685  00003B                     _rfCMD:
   686                           	callstack 0
   687  00003B                     	ds	11
   688  000046                     _edit_Param:
   689                           	callstack 0
   690  000046                     	ds	6
   691  00004C                     _button_struct:
   692                           	callstack 0
   693  00004C                     	ds	4
   694                           
   695                           	psect	bssBANK0
   696  000060                     __pbssBANK0:
   697                           	callstack 0
   698  000060                     _learn_st:
   699                           	callstack 0
   700  000060                     	ds	18
   701  000072                     _dispStruct:
   702                           	callstack 0
   703  000072                     	ds	6
   704  000078                     _brakeElectric_st:
   705                           	callstack 0
   706  000078                     	ds	2
   707  00007A                     _pointSync:
   708                           	callstack 0
   709  00007A                     	ds	2
   710  00007C                     _Hop:
   711                           	callstack 0
   712  00007C                     	ds	2
   713  00007E                     _RFcount:
   714                           	callstack 0
   715  00007E                     	ds	2
   716  000080                     _temp:
   717                           	callstack 0
   718  000080                     	ds	1
   719  000081                     _control_limit_switch:
   720                           	callstack 0
   721  000081                     	ds	1
   722  000082                     _fullmotorPower:
   723                           	callstack 0
   724  000082                     	ds	1
   725  000083                     _stateMotor:
   726                           	callstack 0
   727  000083                     	ds	1
   728  000084                     _zeroCrossingWaitTimeIdx:
   729                           	callstack 0
   730  000084                     	ds	1
   731  000085                     _programmer_enable:
   732                           	callstack 0
   733  000085                     	ds	1
   734  000086                     readbutton@key1:
   735                           	callstack 0
   736  000086                     	ds	1
   737  000087                     readRFButtons@keyType:
   738                           	callstack 0
   739  000087                     	ds	1
   740  000088                     readRFButtons@key1:
   741                           	callstack 0
   742  000088                     	ds	1
   743  000089                     _RFBit:
   744                           	callstack 0
   745  000089                     	ds	1
   746  00008A                     _RFFull_12BIT:
   747                           	callstack 0
   748  00008A                     	ds	1
   749  00008B                     _RFFull:
   750                           	callstack 0
   751  00008B                     	ds	1
   752  00008C                     _BitCount:
   753                           	callstack 0
   754  00008C                     	ds	1
   755  00008D                     _Bptr:
   756                           	callstack 0
   757  00008D                     	ds	1
   758  00008E                     _numberOfErrorCurrent:
   759                           	callstack 0
   760  00008E                     	ds	1
   761  00008F                     _idxAdcZeroAquisition:
   762                           	callstack 0
   763  00008F                     	ds	1
   764  000090                     _idxSaveEnergyADCHist:
   765                           	callstack 0
   766  000090                     	ds	1
   767  000091                     _idxAdcAquisition:
   768                           	callstack 0
   769  000091                     	ds	1
   770  000092                     _Counterchoose:
   771                           	callstack 0
   772  000092                     	ds	1
   773  000093                     _eusart1RxCount:
   774                           	callstack 0
   775  000093                     	ds	1
   776  000094                     _eusart1RxTail:
   777                           	callstack 0
   778  000094                     	ds	1
   779  000095                     _eusart1RxHead:
   780                           	callstack 0
   781  000095                     	ds	1
   782  000096                     _eusart1TxTail:
   783                           	callstack 0
   784  000096                     	ds	1
   785  000097                     _eusart1TxHead:
   786                           	callstack 0
   787  000097                     	ds	1
   788  000098                     _var_sys_NVM:
   789                           	callstack 0
   790  000098                     	ds	64
   791                           
   792                           	psect	dataBANK0
   793  0000FC                     __pdataBANK0:
   794                           	callstack 0
   795  0000FC                     _auxCounter:
   796                           	callstack 0
   797  0000FC                     	ds	2
   798                           
   799                           	psect	bssBANK1
   800  000100                     __pbssBANK1:
   801                           	callstack 0
   802  000100                     _var_sys:
   803                           	callstack 0
   804  000100                     	ds	81
   805  000151                     _menu_st:
   806                           	callstack 0
   807  000151                     	ds	25
   808  00016A                     _security:
   809                           	callstack 0
   810  00016A                     	ds	11
   811  000175                     _fimdecurso:
   812                           	callstack 0
   813  000175                     	ds	6
   814  00017B                     _powerControl_st:
   815                           	callstack 0
   816  00017B                     	ds	6
   817  000181                     readRFButtons@serial:
   818                           	callstack 0
   819  000181                     	ds	4
   820  000185                     eusartparser@buffer:
   821                           	callstack 0
   822  000185                     	ds	2
   823  000187                     _NextHop:
   824                           	callstack 0
   825  000187                     	ds	2
   826  000189                     readRFButtons@rollingCode:
   827                           	callstack 0
   828  000189                     	ds	2
   829  00018B                     _BufferRF_12BIT:
   830                           	callstack 0
   831  00018B                     	ds	2
   832  00018D                     _erroranterior:
   833                           	callstack 0
   834  00018D                     	ds	2
   835  00018F                     eusartparser@save_f:
   836                           	callstack 0
   837  00018F                     	ds	1
   838  000190                     _aux_in_auto_close:
   839                           	callstack 0
   840  000190                     	ds	1
   841  000191                     _aux_i:
   842                           	callstack 0
   843  000191                     	ds	1
   844  000192                     _Abertura_pedonal:
   845                           	callstack 0
   846  000192                     	ds	1
   847  000193                     _temppower:
   848                           	callstack 0
   849  000193                     	ds	1
   850  000194                     _difTime:
   851                           	callstack 0
   852  000194                     	ds	1
   853  000195                     _StateTRIAC:
   854                           	callstack 0
   855  000195                     	ds	1
   856  000196                     _waitZeroPeak:
   857                           	callstack 0
   858  000196                     	ds	1
   859  000197                     _zeroCrossing:
   860                           	callstack 0
   861  000197                     	ds	1
   862  000198                     _zeroCrossingLength:
   863                           	callstack 0
   864  000198                     	ds	1
   865  000199                     _lastKey:
   866                           	callstack 0
   867  000199                     	ds	1
   868  00019A                     _F2Chance:
   869                           	callstack 0
   870  00019A                     	ds	1
   871  00019B                     readbutton@key2:
   872                           	callstack 0
   873  00019B                     	ds	1
   874  00019C                     readRFButtons@typeRemote:
   875                           	callstack 0
   876  00019C                     	ds	1
   877  00019D                     _RFstate:
   878                           	callstack 0
   879  00019D                     	ds	1
   880  00019E                     _eusart1RxLastError:
   881                           	callstack 0
   882  00019E                     	ds	1
   883  00019F                     _ts_system:
   884                           	callstack 0
   885  00019F                     	ds	72
   886  0001E7                     _controlGate_stateMachine:
   887                           	callstack 0
   888  0001E7                     	ds	11
   889  0001F2                     _main_stateMachine:
   890                           	callstack 0
   891  0001F2                     	ds	11
   892  0001FD                     setValueToEdit@value:
   893                           	callstack 0
   894  0001FD                     	ds	1
   895                           
   896                           	psect	dataBANK1
   897  0001FF                     __pdataBANK1:
   898                           	callstack 0
   899  0001FF                     _firstselectflag:
   900                           	callstack 0
   901  0001FF                     	ds	1
   902                           
   903                           	psect	bssBANK2
   904  000200                     __pbssBANK2:
   905                           	callstack 0
   906  000200                     _ADC_array:
   907                           	callstack 0
   908  000200                     	ds	60
   909  00023C                     _I2C1_Status:
   910                           	callstack 0
   911  00023C                     	ds	36
   912  000260                     _SumEnergyADCHist_array:
   913                           	callstack 0
   914  000260                     	ds	20
   915  000274                     _eusart1RxStatusBuffer:
   916                           	callstack 0
   917  000274                     	ds	8
   918  00027C                     _eusart1RxBuffer:
   919                           	callstack 0
   920  00027C                     	ds	8
   921  000284                     _eusart1TxBuffer:
   922                           	callstack 0
   923  000284                     	ds	8
   924  00028C                     _EHop:
   925                           	callstack 0
   926  00028C                     	ds	2
   927  00028E                     _timer0ReloadVal16bit:
   928                           	callstack 0
   929  00028E                     	ds	2
   930  000290                     _classic_data:
   931                           	callstack 0
   932  000290                     	ds	16
   933  0002A0                     _memoryTEMP:
   934                           	callstack 0
   935  0002A0                     	ds	16
   936  0002B0                     _controlLearning_stateMachine:
   937                           	callstack 0
   938  0002B0                     	ds	11
   939  0002BB                     _menuConfiguration_stateMachine:
   940                           	callstack 0
   941  0002BB                     	ds	11
   942  0002C6                     _BufferRF:
   943                           	callstack 0
   944  0002C6                     	ds	9
   945  0002CF                     _DKEY:
   946                           	callstack 0
   947  0002CF                     	ds	8
   948  0002D7                     NormalKeyGen@SEED:
   949                           	callstack 0
   950  0002D7                     	ds	4
   951                           
   952                           	psect	dataBANK2
   953  0002F4                     __pdataBANK2:
   954                           	callstack 0
   955  0002F4                     _tempCounter:
   956                           	callstack 0
   957  0002F4                     	ds	4
   958  0002F8                     _zeroCrossingWaitTime:
   959                           	callstack 0
   960  0002F8                     	ds	2
   961                           
   962                           	psect	bssBANK3
   963  000300                     __pbssBANK3:
   964                           	callstack 0
   965  000300                     _listSyncValues:
   966                           	callstack 0
   967  000300                     	ds	150
   968  000396                     _ADC_zero_array:
   969                           	callstack 0
   970  000396                     	ds	60
   971                           
   972                           	psect	dataBANK3
   973  0003D2                     __pdataBANK3:
   974                           	callstack 0
   975  0003D2                     _DispTable:
   976                           	callstack 0
   977  0003D2                     	ds	37
   978                           
   979                           	psect	cstackBANK2
   980  0002ED                     __pcstackBANK2:
   981                           	callstack 0
   982  0002ED                     main@package:
   983                           	callstack 0
   984                           
   985                           ; 7 bytes @ 0x0
   986  0002ED                     	ds	7
   987                           
   988                           	psect	cstackBANK0
   989  0000D8                     __pcstackBANK0:
   990                           	callstack 0
   991  0000D8                     ??_keeloq_classic_decrypt_packet:
   992  0000D8                     ??_setPositionInvertionInClosing:
   993  0000D8                     ??_validateRemoteSerialNumber:
   994  0000D8                     ??_RemoveSerial:
   995  0000D8                     SaveNVM_VarSystem@page:
   996                           	callstack 0
   997  0000D8                     getStateOpenPosition@state:
   998                           	callstack 0
   999  0000D8                     saveNewSerial@tempSerial:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x0
  1003  0000D8                     	ds	1
  1004  0000D9                     getStateOpenPosition@stateMotor:
  1005                           	callstack 0
  1006  0000D9                     SaveNVM_VarSystem@tempAdd:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x1
  1010  0000D9                     	ds	1
  1011  0000DA                     ??_controlVelocity:
  1012  0000DA                     RemoveSerial@cmdType:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x2
  1016  0000DA                     	ds	1
  1017  0000DB                     SaveNVM_VarSystem@point:
  1018                           	callstack 0
  1019  0000DB                     RemoveSerial@tempSerial:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x3
  1023  0000DB                     	ds	1
  1024  0000DC                     ??_setValueToEdit:
  1025  0000DC                     saveNewSerial@position:
  1026                           	callstack 0
  1027  0000DC                     sm_execute_ControlLearning@psm:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x4
  1031  0000DC                     	ds	1
  1032  0000DD                     ??_saveNewSerial:
  1033                           
  1034                           ; 1 bytes @ 0x5
  1035  0000DD                     	ds	1
  1036  0000DE                     ??_sm_execute_ControlLearning:
  1037  0000DE                     setValueToEdit@menuType:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x6
  1041  0000DE                     	ds	1
  1042  0000DF                     setValueToEdit@posindex:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x7
  1046  0000DF                     	ds	1
  1047  0000E0                     ??_controlSelectRemote:
  1048  0000E0                     setValueToEdit@posindex_6979:
  1049                           	callstack 0
  1050  0000E0                     keeloqDecryptPacket@data:
  1051                           	callstack 0
  1052  0000E0                     DecryptPacket_12BIT@data:
  1053                           	callstack 0
  1054  0000E0                     eusartparser@package:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x8
  1058  0000E0                     	ds	1
  1059  0000E1                     setValueToEdit@haveValueToEdit:
  1060                           	callstack 0
  1061  0000E1                     controlSelectRemote@validSerial:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x9
  1065  0000E1                     	ds	1
  1066  0000E2                     ??_eusartparser:
  1067  0000E2                     controlSelectRemote@pos:
  1068                           	callstack 0
  1069  0000E2                     keeloqDecryptPacket@classic_data:
  1070                           	callstack 0
  1071  0000E2                     DecryptPacket_12BIT@classic_data:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xA
  1075  0000E2                     	ds	1
  1076  0000E3                     controlSelectRemote@typeRemote:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0xB
  1080  0000E3                     	ds	1
  1081  0000E4                     ??_keeloqDecryptPacket:
  1082  0000E4                     DecryptPacket_12BIT@commandType:
  1083                           	callstack 0
  1084  0000E4                     actionZone_Opening@securityClosing:
  1085                           	callstack 0
  1086  0000E4                     controlSelectRemote@tempSerial:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0xC
  1090  0000E4                     	ds	1
  1091  0000E5                     actionZone_Opening@securityOpening:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0xD
  1095  0000E5                     	ds	1
  1096  0000E6                     actionZone_Opening@typeOpenOrder:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0xE
  1100  0000E6                     	ds	1
  1101  0000E7                     sm_execute_ControlGate@psm:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0xF
  1105  0000E7                     	ds	1
  1106  0000E8                     keeloqDecryptPacket@hop_error:
  1107                           	callstack 0
  1108  0000E8                     controlSelectRemote@temp:
  1109                           	callstack 0
  1110  0000E8                     eusartparser@i:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x10
  1114  0000E8                     	ds	1
  1115  0000E9                     ??_sm_execute_ControlGate:
  1116  0000E9                     keeloqDecryptPacket@commandType:
  1117                           	callstack 0
  1118  0000E9                     eusartparser@i_7373:
  1119                           	callstack 0
  1120  0000E9                     sm_execute_menuConfiguration@psm:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x11
  1124  0000E9                     	ds	1
  1125  0000EA                     eusartparser@i_7380:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x12
  1129  0000EA                     	ds	1
  1130  0000EB                     ??_sm_execute_menuConfiguration:
  1131  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1132                           	callstack 0
  1133  0000EB                     eusartparser@i_7381:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x13
  1137  0000EB                     	ds	1
  1138  0000EC                     eusartparser@pos:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x14
  1142  0000EC                     	ds	1
  1143  0000ED                     eusartparser@i_7374:
  1144                           	callstack 0
  1145  0000ED                     sm_execute_main@psm:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x15
  1149  0000ED                     	ds	1
  1150  0000EE                     eusartparser@i_7375:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x16
  1154  0000EE                     	ds	1
  1155  0000EF                     ??_sm_execute_main:
  1156  0000EF                     eusartparser@i_7382:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x17
  1160  0000EF                     	ds	1
  1161  0000F0                     eusartparser@i_7383:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x18
  1165  0000F0                     	ds	1
  1166  0000F1                     eusartparser@i_7376:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x19
  1170  0000F1                     	ds	1
  1171  0000F2                     eusartparser@i_7377:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x1A
  1175  0000F2                     	ds	1
  1176  0000F3                     eusartparser@i_7378:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x1B
  1180  0000F3                     	ds	1
  1181  0000F4                     eusartparser@i_7384:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x1C
  1185  0000F4                     	ds	1
  1186  0000F5                     eusartparser@i_7385:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x1D
  1190  0000F5                     	ds	1
  1191  0000F6                     eusartparser@i_7386:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x1E
  1195  0000F6                     	ds	1
  1196  0000F7                     eusartparser@relcounter:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x1F
  1200  0000F7                     	ds	1
  1201  0000F8                     eusartparser@serial:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x20
  1205  0000F8                     	ds	4
  1206                           
  1207                           	psect	cstackCOMRAM
  1208  000001                     __pcstackCOMRAM:
  1209                           	callstack 0
  1210  000001                     ??_rxi:
  1211  000001                     ??i2_GetMotorPower:
  1212  000001                     ADCC_GetSingleConversion@channel:
  1213                           	callstack 0
  1214  000001                     Segments_Set@value:
  1215                           	callstack 0
  1216  000001                     i2VerifyElectricalBrake@tempState:
  1217                           	callstack 0
  1218  000001                     TMR1_WriteTimer@timerVal:
  1219                           	callstack 0
  1220  000001                     decrementTimeslot@ts:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x0
  1224  000001                     	ds	1
  1225  000002                     ??_ReadADC:
  1226  000002                     i2VerifyElectricalBrake@actualState:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x1
  1230  000002                     	ds	1
  1231  000003                     
  1232                           ; 1 bytes @ 0x2
  1233  000003                     	ds	1
  1234  000004                     i2GetMotorPower@defineatraso:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x3
  1238  000004                     	ds	1
  1239  000005                     ??_controlMotorForce:
  1240  000005                     
  1241                           ; 1 bytes @ 0x4
  1242  000005                     	ds	5
  1243  00000A                     ??_INTERRUPT_InterruptManager:
  1244                           
  1245                           ; 1 bytes @ 0x9
  1246  00000A                     	ds	6
  1247  000010                     ??_GetMotorPower:
  1248  000010                     ??_SetSegmentValueLearn:
  1249  000010                     ?_sumEnergyADC:
  1250                           	callstack 0
  1251  000010                     ?_sm_get_current_state:
  1252                           	callstack 0
  1253  000010                     ?___wmul:
  1254                           	callstack 0
  1255  000010                     ?___lwdiv:
  1256                           	callstack 0
  1257  000010                     ?_calculateMean:
  1258                           	callstack 0
  1259  000010                     ?_sumHIST:
  1260                           	callstack 0
  1261  000010                     ?___lldiv:
  1262                           	callstack 0
  1263  000010                     EUSART1_Read@readValue:
  1264                           	callstack 0
  1265  000010                     EUSART1_Write@txData:
  1266                           	callstack 0
  1267  000010                     I2C1_Open@address:
  1268                           	callstack 0
  1269  000010                     I2C1_Close@returnValue:
  1270                           	callstack 0
  1271  000010                     I2C1_MasterSendTxData@data:
  1272                           	callstack 0
  1273  000010                     WWDT_TimerClear@state:
  1274                           	callstack 0
  1275  000010                     getKeyPressed@temp:
  1276                           	callstack 0
  1277  000010                     RGB_Set@value:
  1278                           	callstack 0
  1279  000010                     SetSegmentValueIntermitent@d2:
  1280                           	callstack 0
  1281  000010                     VerifyElectricalBrake@tempState:
  1282                           	callstack 0
  1283  000010                     VerifyFollowMe@securityClose:
  1284                           	callstack 0
  1285  000010                     ___lbdiv@divisor:
  1286                           	callstack 0
  1287  000010                     ___lbmod@divisor:
  1288                           	callstack 0
  1289  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1290                           	callstack 0
  1291  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1292                           	callstack 0
  1293  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1294                           	callstack 0
  1295  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1296                           	callstack 0
  1297  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1298                           	callstack 0
  1299  000010                     I2C1_SetBuffer@buffer:
  1300                           	callstack 0
  1301  000010                     I2C1_SetCallback@cb:
  1302                           	callstack 0
  1303  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1304                           	callstack 0
  1305  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1306                           	callstack 0
  1307  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1308                           	callstack 0
  1309  000010                     saveEnergyADCHist@valueToSave:
  1310                           	callstack 0
  1311  000010                     DecCHK@data:
  1312                           	callstack 0
  1313  000010                     ReqResync@CurrentHop:
  1314                           	callstack 0
  1315  000010                     verifyProgramingMode@classic_data:
  1316                           	callstack 0
  1317  000010                     setFlashLigth_ON@Freq:
  1318                           	callstack 0
  1319  000010                     sm_restart@psm:
  1320                           	callstack 0
  1321  000010                     sm_get_current_state@psm:
  1322                           	callstack 0
  1323  000010                     init_package@package:
  1324                           	callstack 0
  1325  000010                     ___wmul@multiplier:
  1326                           	callstack 0
  1327  000010                     ___lwdiv@dividend:
  1328                           	callstack 0
  1329  000010                     memcpy@d1:
  1330                           	callstack 0
  1331  000010                     calculateMean@meanValue:
  1332                           	callstack 0
  1333  000010                     ___lldiv@dividend:
  1334                           	callstack 0
  1335  000010                     write_eusartparser@package:
  1336                           	callstack 0
  1337                           
  1338                           ; 7 bytes @ 0xF
  1339  000010                     	ds	1
  1340  000011                     ?_read_package:
  1341                           	callstack 0
  1342  000011                     I2C1_Open@returnValue:
  1343                           	callstack 0
  1344  000011                     VerifyElectricalBrake@actualState:
  1345                           	callstack 0
  1346  000011                     ___lbdiv@dividend:
  1347                           	callstack 0
  1348  000011                     ___lbmod@dividend:
  1349                           	callstack 0
  1350  000011                     SetSegmentValueIntermitent@time:
  1351                           	callstack 0
  1352  000011                     setRGB_ON@Freq:
  1353                           	callstack 0
  1354  000011                     write_package@package:
  1355                           	callstack 0
  1356                           
  1357                           ; 7 bytes @ 0x10
  1358  000011                     	ds	1
  1359  000012                     ??_TMR1_Initialize:
  1360  000012                     ??_ControlMotor:
  1361  000012                     ??_sumEnergyADC:
  1362  000012                     ??_DecCHK:
  1363  000012                     SetSegmentValueLearn@direction:
  1364                           	callstack 0
  1365  000012                     ___lbdiv@counter:
  1366                           	callstack 0
  1367  000012                     ___lbmod@counter:
  1368                           	callstack 0
  1369  000012                     I2C1_SetBuffer@bufferSize:
  1370                           	callstack 0
  1371  000012                     I2C1_SetCallback@ptr:
  1372                           	callstack 0
  1373  000012                     sm_init@psm:
  1374                           	callstack 0
  1375  000012                     sm_send_event@psm:
  1376                           	callstack 0
  1377  000012                     confirmpackage@package:
  1378                           	callstack 0
  1379  000012                     ___wmul@multiplicand:
  1380                           	callstack 0
  1381  000012                     ___lwdiv@divisor:
  1382                           	callstack 0
  1383  000012                     memcpy@s1:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x11
  1387  000012                     	ds	1
  1388  000013                     ??_setRGB_ON:
  1389  000013                     SetSegmentValueIntermitent@d1:
  1390                           	callstack 0
  1391  000013                     GetMotorPower@defineatraso:
  1392                           	callstack 0
  1393  000013                     ___lbdiv@quotient:
  1394                           	callstack 0
  1395  000013                     ___lbmod@rem:
  1396                           	callstack 0
  1397                           
  1398                           ; 1 bytes @ 0x12
  1399  000013                     	ds	1
  1400  000014                     ??_InitSoftStop:
  1401  000014                     ??_InitSoftStart:
  1402  000014                     ??_sumHIST:
  1403  000014                     ?___awdiv:
  1404                           	callstack 0
  1405  000014                     I2C1_SetCallback@idx:
  1406                           	callstack 0
  1407  000014                     confirmpackage@confirm:
  1408                           	callstack 0
  1409  000014                     ___lwdiv@counter:
  1410                           	callstack 0
  1411  000014                     sumEnergyADC@sumE:
  1412                           	callstack 0
  1413  000014                     sm_init@initial_state:
  1414                           	callstack 0
  1415  000014                     sm_send_event@event:
  1416                           	callstack 0
  1417  000014                     ___wmul@product:
  1418                           	callstack 0
  1419  000014                     ___awdiv@dividend:
  1420                           	callstack 0
  1421  000014                     memcpy@n:
  1422                           	callstack 0
  1423  000014                     calculateMean@newValue:
  1424                           	callstack 0
  1425  000014                     ___lldiv@divisor:
  1426                           	callstack 0
  1427                           
  1428                           ; 4 bytes @ 0x13
  1429  000014                     	ds	1
  1430  000015                     setRGB_ON@RGBLigth:
  1431                           	callstack 0
  1432  000015                     I2C1_SetDataCompleteCallback@cb:
  1433                           	callstack 0
  1434  000015                     I2C1_SetAddressNackCallback@cb:
  1435                           	callstack 0
  1436  000015                     ___lwdiv@quotient:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x14
  1440  000015                     	ds	1
  1441  000016                     ?_getHopCode:
  1442                           	callstack 0
  1443  000016                     ?_getCurrentComparator:
  1444                           	callstack 0
  1445  000016                     sm_init@hist_mode:
  1446                           	callstack 0
  1447  000016                     memcpy@tmp:
  1448                           	callstack 0
  1449  000016                     sumEnergyADC@auxValue:
  1450                           	callstack 0
  1451  000016                     getHopCode@data:
  1452                           	callstack 0
  1453  000016                     ___awdiv@divisor:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x15
  1457  000016                     	ds	1
  1458  000017                     ??_write_eusartparser:
  1459  000017                     refreshADCZeroOffset@i:
  1460                           	callstack 0
  1461  000017                     I2C1_SetDataCompleteCallback@ptr:
  1462                           	callstack 0
  1463  000017                     I2C1_SetAddressNackCallback@ptr:
  1464                           	callstack 0
  1465  000017                     memcpy@d:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x16
  1469  000017                     	ds	1
  1470  000018                     ??_getHopCode:
  1471  000018                     ??_calculateMean:
  1472  000018                     ??_OpenWalkOrder:
  1473  000018                     sumEnergyADC@i:
  1474                           	callstack 0
  1475  000018                     ControlMotor@stateMotor:
  1476                           	callstack 0
  1477  000018                     ___awdiv@counter:
  1478                           	callstack 0
  1479  000018                     refreshADCZeroOffset@media:
  1480                           	callstack 0
  1481  000018                     sumHIST@max:
  1482                           	callstack 0
  1483  000018                     read_eusartparser@package:
  1484                           	callstack 0
  1485  000018                     ___lldiv@quotient:
  1486                           	callstack 0
  1487  000018                     read_package@package:
  1488                           	callstack 0
  1489                           
  1490                           ; 7 bytes @ 0x17
  1491  000018                     	ds	1
  1492  000019                     ___awdiv@sign:
  1493                           	callstack 0
  1494  000019                     wr1RegCompleteHandler@p:
  1495                           	callstack 0
  1496  000019                     rd1RegCompleteHandler@p:
  1497                           	callstack 0
  1498  000019                     rd2RegCompleteHandler@p:
  1499                           	callstack 0
  1500  000019                     wr2RegCompleteHandler@p:
  1501                           	callstack 0
  1502  000019                     rdBlkRegCompleteHandler@p:
  1503                           	callstack 0
  1504  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1505                           	callstack 0
  1506  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1507                           	callstack 0
  1508  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1509                           	callstack 0
  1510  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1511                           	callstack 0
  1512  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1513                           	callstack 0
  1514  000019                     I2C1_CallbackReturnReset@funPtr:
  1515                           	callstack 0
  1516  000019                     memcpy@s:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x18
  1520  000019                     	ds	1
  1521  00001A                     ??_getCurrentComparator:
  1522  00001A                     ??_read_eusartparser:
  1523  00001A                     sumHIST@min:
  1524                           	callstack 0
  1525  00001A                     OpenWalkOrder@diffTime:
  1526                           	callstack 0
  1527  00001A                     ___awdiv@quotient:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x19
  1531  00001A                     	ds	1
  1532  00001B                     ??_I2C1_DO_TX:
  1533  00001B                     ??_I2C1_DO_RX:
  1534  00001B                     ??_I2C1_DO_TX_EMPTY:
  1535  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1536  00001B                     getSerialCmd@serial:
  1537                           	callstack 0
  1538  00001B                     Decrypt@packet:
  1539                           	callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x1A
  1542  00001B                     	ds	1
  1543  00001C                     getSerialCmd@temp:
  1544                           	callstack 0
  1545  00001C                     SetSegmentValueMain@d2:
  1546                           	callstack 0
  1547  00001C                     SetSegmentValue@d2:
  1548                           	callstack 0
  1549  00001C                     SetSegmentValueIntermitentMain@d2:
  1550                           	callstack 0
  1551  00001C                     ___lldiv@counter:
  1552                           	callstack 0
  1553  00001C                     sumHIST@sumH:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x1B
  1557  00001C                     	ds	1
  1558  00001D                     ??_I2C1_MasterFsm:
  1559  00001D                     ?___lmul:
  1560                           	callstack 0
  1561  00001D                     Decrypt@key:
  1562                           	callstack 0
  1563  00001D                     SetSegmentValueMain@d1:
  1564                           	callstack 0
  1565  00001D                     SetSegmentValue@d1:
  1566                           	callstack 0
  1567  00001D                     SetSegmentValueIntermitentMain@time:
  1568                           	callstack 0
  1569  00001D                     ___lmul@multiplier:
  1570                           	callstack 0
  1571                           
  1572                           ; 4 bytes @ 0x1C
  1573  00001D                     	ds	1
  1574  00001E                     Decrypt@i:
  1575                           	callstack 0
  1576                           
  1577                           ; 1 bytes @ 0x1D
  1578  00001E                     	ds	1
  1579  00001F                     Decrypt@j:
  1580                           	callstack 0
  1581  00001F                     SetSegmentValueIntermitentMain@d1:
  1582                           	callstack 0
  1583  00001F                     write_eusartparser@debug:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x1E
  1587  00001F                     	ds	1
  1588  000020                     ??_load_New_Menu:
  1589  000020                     ??_controlSaveRemote:
  1590  000020                     I2C1_MasterOperation@read:
  1591                           	callstack 0
  1592  000020                     sumHIST@i:
  1593                           	callstack 0
  1594  000020                     Decrypt@p:
  1595                           	callstack 0
  1596  000020                     actionZone_Closed@securityOpening:
  1597                           	callstack 0
  1598  000020                     actionZone_Opened@securityClosing:
  1599                           	callstack 0
  1600  000020                     getCurrentComparator@tempOffset:
  1601                           	callstack 0
  1602  000020                     getHopCode@tempHop:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x1F
  1606  000020                     	ds	1
  1607  000021                     I2C1_MasterOperation@returnValue:
  1608                           	callstack 0
  1609  000021                     Decrypt@aux:
  1610                           	callstack 0
  1611  000021                     actionZone_Closed@typeOpenOrder:
  1612                           	callstack 0
  1613  000021                     actionZone_Opened@typeOpenOrder:
  1614                           	callstack 0
  1615  000021                     write_eusartparser@debug2:
  1616                           	callstack 0
  1617  000021                     ___lmul@multiplicand:
  1618                           	callstack 0
  1619                           
  1620                           ; 4 bytes @ 0x20
  1621  000021                     	ds	1
  1622  000022                     I2C1_Read1ByteRegister@reg:
  1623                           	callstack 0
  1624  000022                     getCurrentComparator@x:
  1625                           	callstack 0
  1626  000022                     getHopCode@tempPos:
  1627                           	callstack 0
  1628  000022                     load_New_Menu@Menu:
  1629                           	callstack 0
  1630  000022                     i2c_writeNBytes@reg:
  1631                           	callstack 0
  1632  000022                     i2c_readDataBlock@reg:
  1633                           	callstack 0
  1634  000022                     Decrypt@Buffer:
  1635                           	callstack 0
  1636                           
  1637                           ; 4 bytes @ 0x21
  1638  000022                     	ds	1
  1639  000023                     ??_ControlCurrent:
  1640  000023                     I2C1_Read1ByteRegister@address:
  1641                           	callstack 0
  1642  000023                     getHopCode@i:
  1643                           	callstack 0
  1644  000023                     load_New_Menu@i:
  1645                           	callstack 0
  1646                           
  1647                           ; 1 bytes @ 0x22
  1648  000023                     	ds	1
  1649  000024                     i2c_writeNBytes@data:
  1650                           	callstack 0
  1651  000024                     I2C1_Read1ByteRegister@returnValue:
  1652                           	callstack 0
  1653  000024                     i2c_readDataBlock@data:
  1654                           	callstack 0
  1655  000024                     HopCHK@data:
  1656                           	callstack 0
  1657                           
  1658                           ; 2 bytes @ 0x23
  1659  000024                     	ds	1
  1660  000025                     i2c_writeNBytes@len:
  1661                           	callstack 0
  1662  000025                     ___lmul@product:
  1663                           	callstack 0
  1664                           
  1665                           ; 4 bytes @ 0x24
  1666  000025                     	ds	1
  1667  000026                     i2c_readDataBlock@len:
  1668                           	callstack 0
  1669  000026                     NormalKeyGen@serial:
  1670                           	callstack 0
  1671  000026                     HopCHK@hopDiff:
  1672                           	callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x25
  1675  000026                     	ds	1
  1676  000027                     ??_i2c_writeNBytes:
  1677                           
  1678                           ; 1 bytes @ 0x26
  1679  000027                     	ds	1
  1680  000028                     ??_i2c_readDataBlock:
  1681  000028                     NormalKeyGen@HOPtemp:
  1682                           	callstack 0
  1683  000028                     i2c_writeNBytes@dat:
  1684                           	callstack 0
  1685                           
  1686                           ; 17 bytes @ 0x27
  1687  000028                     	ds	1
  1688  000029                     ?_getTimeDecelaration:
  1689                           	callstack 0
  1690  000029                     i2c_readDataBlock@address:
  1691                           	callstack 0
  1692                           
  1693                           ; 1 bytes @ 0x28
  1694  000029                     	ds	1
  1695  00002A                     i2c_readDataBlock@d:
  1696                           	callstack 0
  1697                           
  1698                           ; 4 bytes @ 0x29
  1699  00002A                     	ds	2
  1700  00002C                     NormalKeyGen@SKEYtemp:
  1701                           	callstack 0
  1702                           
  1703                           ; 4 bytes @ 0x2B
  1704  00002C                     	ds	1
  1705  00002D                     ??_getTimeDecelaration:
  1706                           
  1707                           ; 1 bytes @ 0x2C
  1708  00002D                     	ds	1
  1709  00002E                     ReadSerial@tempSerial:
  1710                           	callstack 0
  1711  00002E                     cmdMemoryIsEmpty@position:
  1712                           	callstack 0
  1713  00002E                     validateRemoteSerialNumber@serial:
  1714                           	callstack 0
  1715                           
  1716                           ; 4 bytes @ 0x2D
  1717  00002E                     	ds	1
  1718  00002F                     ??_cmdMemoryIsEmpty:
  1719  00002F                     ReadSerial@position:
  1720                           	callstack 0
  1721                           
  1722                           ; 1 bytes @ 0x2E
  1723  00002F                     	ds	1
  1724  000030                     ??_ReadSerial:
  1725  000030                     NormalKeyGen@Buffer:
  1726                           	callstack 0
  1727                           
  1728                           ; 8 bytes @ 0x2F
  1729  000030                     	ds	1
  1730  000031                     cmdMemoryIsEmpty@cmdType:
  1731                           	callstack 0
  1732  000031                     getTimeDecelaration@state:
  1733                           	callstack 0
  1734                           
  1735                           ; 1 bytes @ 0x30
  1736  000031                     	ds	1
  1737  000032                     ??_setPositionInvertionInOpening:
  1738  000032                     ??_getStateOpenPosition:
  1739  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1740                           	callstack 0
  1741  000032                     ReadSerial@cmdType:
  1742                           	callstack 0
  1743  000032                     actionZone_Closing@securityClosing:
  1744                           	callstack 0
  1745  000032                     cmdMemoryIsEmpty@tempSerial:
  1746                           	callstack 0
  1747                           
  1748                           ; 4 bytes @ 0x31
  1749  000032                     	ds	1
  1750  000033                     actionZone_Closing@typeOpenOrder:
  1751                           	callstack 0
  1752  000033                     validateRemoteSerialNumber@position:
  1753                           	callstack 0
  1754                           
  1755                           ; 2 bytes @ 0x32
  1756  000033                     	ds	2
  1757  000035                     validateRemoteSerialNumber@mask:
  1758                           	callstack 0
  1759                           
  1760                           ; 4 bytes @ 0x34
  1761  000035                     	ds	3
  1762  000038                     keeloq_classic_decrypt_packet@data:
  1763                           	callstack 0
  1764                           
  1765                           ; 2 bytes @ 0x37
  1766  000038                     	ds	1
  1767  000039                     i2c_writeNBytes@address:
  1768                           	callstack 0
  1769  000039                     validateRemoteSerialNumber@j:
  1770                           	callstack 0
  1771                           
  1772                           ; 1 bytes @ 0x38
  1773  000039                     	ds	1
  1774  00003A                     validateRemoteSerialNumber@i:
  1775                           	callstack 0
  1776  00003A                     saveNewSerial@cmdType:
  1777                           	callstack 0
  1778  00003A                     RemoveSerial@position:
  1779                           	callstack 0
  1780  00003A                     ResetDefaultMemory@type:
  1781                           	callstack 0
  1782  00003A                     checkNVM_VarSystem@saveParam:
  1783                           	callstack 0
  1784  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1785                           	callstack 0
  1786  00003A                     setValueToEdit@ParameterSelected:
  1787                           	callstack 0
  1788                           
  1789                           ; 1 bytes @ 0x39
  1790  00003A                     	ds	1
  1791  00003B                     
  1792                           ; 1 bytes @ 0x3A
  1793 ;;
  1794 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1795 ;;
  1796 ;; *************** function _main *****************
  1797 ;; Defined at:
  1798 ;;		line 63 in file "main_MC50.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  package         7    0[BANK2 ] struct package_t
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 3F/1
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;Total ram usage:        7 bytes
  1817 ;; Hardware stack levels required when called: 17
  1818 ;; This function calls:
  1819 ;;		_ControlCounterMoves
  1820 ;;		_ControlCurrent
  1821 ;;		_ControlInputs
  1822 ;;		_ControlLights
  1823 ;;		_ControlMotor
  1824 ;;		_EUSART1_is_rx_ready
  1825 ;;		_InitReceiver
  1826 ;;		_SYSTEM_Initialize
  1827 ;;		_SetSegmentValue
  1828 ;;		_ShowVersion
  1829 ;;		_WWDT_SoftEnable
  1830 ;;		_WWDT_TimerClear
  1831 ;;		_controlVelocity
  1832 ;;		_eusartparser
  1833 ;;		_getKeyPressed
  1834 ;;		_loadNVM_VarSystem
  1835 ;;		_readInputs
  1836 ;;		_readRFButtons
  1837 ;;		_read_package
  1838 ;;		_readbutton
  1839 ;;		_sm_execute_ControlGate
  1840 ;;		_sm_execute_main
  1841 ;;		_sm_init
  1842 ;; This function is called by:
  1843 ;;		Startup code after reset
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text0
  1848  006998                     __ptext0:
  1849                           	callstack 0
  1850  006998                     _main:
  1851                           	callstack 14
  1852                           
  1853                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1854                           
  1855                           ;incstack = 0
  1856  006998  0E18               	movlw	24
  1857  00699A  0100               	movlb	0	; () banked
  1858  00699C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1859                           
  1860                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1861  00699E  0E18               	movlw	24
  1862  0069A0  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1863                           
  1864                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1865  0069A2  0E00               	movlw	0
  1866  0069A4  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1867  0069A6  0E00               	movlw	0
  1868  0069A8  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1869                           
  1870                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1871  0069AA  0E01               	movlw	1
  1872  0069AC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1876  0069AE  ECF6  F04B         	call	_SYSTEM_Initialize	;wreg free
  1877                           
  1878                           ; BSR set to: 14
  1879                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1880  0069B2  ECB5  F04F         	call	_WWDT_SoftEnable	;wreg free
  1881                           
  1882                           ; BSR set to: 14
  1883                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1884  0069B6  8EF2               	bsf	242,7,c	;volatile
  1885                           
  1886                           ; BSR set to: 14
  1887                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1888  0069B8  8CF2               	bsf	242,6,c	;volatile
  1889                           
  1890                           ; BSR set to: 14
  1891                           ;main_MC50.c: 86:     IOCBP3=1;
  1892  0069BA  010F               	movlb	15	; () banked
  1893  0069BC  8714               	bsf	20,3,b	;volatile
  1894                           
  1895                           ; BSR set to: 15
  1896                           ;main_MC50.c: 87:     IOCBN3=1;
  1897  0069BE  8713               	bsf	19,3,b	;volatile
  1898                           
  1899                           ; BSR set to: 15
  1900                           ;main_MC50.c: 94:     InitReceiver();
  1901  0069C0  EC40  F04E         	call	_InitReceiver	;wreg free
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1905  0069C4  EC88  F037         	call	_loadNVM_VarSystem	;wreg free
  1906                           
  1907                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1908  0069C8  EC16  F04E         	call	_WWDT_TimerClear	;wreg free
  1909                           
  1910                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1911  0069CC  0E18               	movlw	24
  1912  0069CE  6E1C               	movwf	SetSegmentValue@d2^0,c
  1913  0069D0  0E18               	movlw	24
  1914  0069D2  EC67  F04E         	call	_SetSegmentValue
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1918  0069D6  0E02               	movlw	2
  1919  0069D8  0101               	movlb	1	; () banked
  1920  0069DA  6FA1               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1921                           
  1922                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1923  0069DC  D00B               	goto	l27964
  1924  0069DE                     l27954:
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1928  0069DE  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1929  0069E0  A4D8               	btfss	status,2,c
  1930  0069E2  D008               	goto	l27964
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1934  0069E4  EC16  F04E         	call	_WWDT_TimerClear	;wreg free
  1935                           
  1936                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1937  0069E8  0E32               	movlw	50
  1938  0069EA  0101               	movlb	1	; () banked
  1939  0069EC  6FA2               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1943  0069EE  07A1               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;main_MC50.c: 109:             readInputs();
  1947  0069F0  EC54  F03A         	call	_readInputs	;wreg free
  1948  0069F4                     l27964:
  1949                           
  1950                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1951  0069F4  0101               	movlb	1	; () banked
  1952  0069F6  51A1               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1953  0069F8  A4D8               	btfss	status,2,c
  1954  0069FA  D7F1               	goto	l27954
  1955                           
  1956                           ; BSR set to: 1
  1957                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1958  0069FC  0EBB               	movlw	low _menuConfiguration_stateMachine
  1959  0069FE  6E12               	movwf	sm_init@psm^0,c
  1960  006A00  0E02               	movlw	high _menuConfiguration_stateMachine
  1961  006A02  6E13               	movwf	(sm_init@psm+1)^0,c
  1962  006A04  0E00               	movlw	0
  1963  006A06  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1964  006A08  0E00               	movlw	0
  1965  006A0A  6E14               	movwf	sm_init@initial_state^0,c
  1966  006A0C  0E00               	movlw	0
  1967  006A0E  6E16               	movwf	sm_init@hist_mode^0,c
  1968  006A10  EC5F  F048         	call	_sm_init	;wreg free
  1969                           
  1970                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1971  006A14  0EF2               	movlw	low _main_stateMachine
  1972  006A16  6E12               	movwf	sm_init@psm^0,c
  1973  006A18  0E01               	movlw	high _main_stateMachine
  1974  006A1A  6E13               	movwf	(sm_init@psm+1)^0,c
  1975  006A1C  0E00               	movlw	0
  1976  006A1E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1977  006A20  0E00               	movlw	0
  1978  006A22  6E14               	movwf	sm_init@initial_state^0,c
  1979  006A24  0E00               	movlw	0
  1980  006A26  6E16               	movwf	sm_init@hist_mode^0,c
  1981  006A28  EC5F  F048         	call	_sm_init	;wreg free
  1982                           
  1983                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1984  006A2C  0EE7               	movlw	low _controlGate_stateMachine
  1985  006A2E  6E12               	movwf	sm_init@psm^0,c
  1986  006A30  0E01               	movlw	high _controlGate_stateMachine
  1987  006A32  6E13               	movwf	(sm_init@psm+1)^0,c
  1988  006A34  0E00               	movlw	0
  1989  006A36  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1990  006A38  0E00               	movlw	0
  1991  006A3A  6E14               	movwf	sm_init@initial_state^0,c
  1992  006A3C  0E00               	movlw	0
  1993  006A3E  6E16               	movwf	sm_init@hist_mode^0,c
  1994  006A40  EC5F  F048         	call	_sm_init	;wreg free
  1995                           
  1996                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1997  006A44  0EB0               	movlw	low _controlLearning_stateMachine
  1998  006A46  6E12               	movwf	sm_init@psm^0,c
  1999  006A48  0E02               	movlw	high _controlLearning_stateMachine
  2000  006A4A  6E13               	movwf	(sm_init@psm+1)^0,c
  2001  006A4C  0E00               	movlw	0
  2002  006A4E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  2003  006A50  0E00               	movlw	0
  2004  006A52  6E14               	movwf	sm_init@initial_state^0,c
  2005  006A54  0E00               	movlw	0
  2006  006A56  6E16               	movwf	sm_init@hist_mode^0,c
  2007  006A58  EC5F  F048         	call	_sm_init	;wreg free
  2008                           
  2009                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  2010  006A5C  0E00               	movlw	0
  2011  006A5E  0101               	movlb	1	; () banked
  2012  006A60  6FA8               	movwf	(_ts_system+9)& (0+255),b	;volatile
  2013  006A62  0E14               	movlw	20
  2014  006A64  6FA7               	movwf	(_ts_system+8)& (0+255),b	;volatile
  2015                           
  2016                           ; BSR set to: 1
  2017                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  2018  006A66  0E01               	movlw	1
  2019  006A68  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  2020  006A6A  0EFE               	movlw	254
  2021  006A6C  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  2025  006A6E  0E00               	movlw	0
  2026  006A70  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  2027  006A72  0E64               	movlw	100
  2028  006A74  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  2032  006A76  0E00               	movlw	0
  2033  006A78  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
  2034  006A7A  0E00               	movlw	0
  2035  006A7C  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
  2036                           
  2037                           ; BSR set to: 1
  2038                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  2039  006A7E  0E00               	movlw	0
  2040  006A80  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2041  006A82                     l27978:
  2042                           
  2043                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  2044  006A82  EC05  F04F         	call	_EUSART1_is_rx_ready	;wreg free
  2045  006A86  0900               	iorlw	0
  2046  006A88  B4D8               	btfsc	status,2,c
  2047  006A8A  D010               	goto	l27984
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main_MC50.c: 142:             package=read_package();
  2051  006A8C  EC33  F049         	call	_read_package	;wreg free
  2052  006A90  EE22  F0ED         	lfsr	2,main@package
  2053  006A94  0E06               	movlw	6
  2054  006A96                     u34131:
  2055  006A96  CFEB FFDB          	movff	plusw0,plusw2
  2056  006A9A  06E8               	decf	wreg,f,c
  2057  006A9C  E2FC               	bc	u34131
  2058                           
  2059                           ; BSR set to: 14
  2060                           ;main_MC50.c: 143:             eusartparser(&package);
  2061  006A9E  0EED               	movlw	low main@package
  2062  006AA0  0100               	movlb	0	; () banked
  2063  006AA2  6FE0               	movwf	eusartparser@package& (0+255),b
  2064  006AA4  0E02               	movlw	high main@package
  2065  006AA6  6FE1               	movwf	(eusartparser@package+1)& (0+255),b
  2066  006AA8  EC45  F00C         	call	_eusartparser	;wreg free
  2067  006AAC                     l27984:
  2068                           
  2069                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2070  006AAC  0101               	movlb	1	; () banked
  2071  006AAE  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2072  006AB0  A4D8               	btfss	status,2,c
  2073  006AB2  D7E7               	goto	l27978
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2077  006AB4  0E32               	movlw	50
  2078  006AB6  6FA2               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2082  006AB8  EC16  F04E         	call	_WWDT_TimerClear	;wreg free
  2083                           
  2084                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2085  006ABC  0E04               	movlw	4
  2086  006ABE  0101               	movlb	1	; () banked
  2087  006AC0  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2088  006AC2  D003               	goto	l27994
  2089                           
  2090                           ; BSR set to: 1
  2091                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2092  006AC4  ECBC  F046         	call	_ShowVersion	;wreg free
  2093                           
  2094                           ;main_MC50.c: 156:             }
  2095  006AC8  D7DC               	goto	l27978
  2096  006ACA                     l27994:
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2100  006ACA  EC52  F046         	call	_readbutton	;wreg free
  2101                           
  2102                           ; BSR set to: 1
  2103                           ;main_MC50.c: 162:                 readRFButtons();
  2104  006ACE  EC3C  F033         	call	_readRFButtons	;wreg free
  2105                           
  2106                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2107  006AD2  EC8D  F04E         	call	_getKeyPressed	;wreg free
  2108  006AD6  0101               	movlb	1	; () banked
  2109  006AD8  6F99               	movwf	_lastKey& (0+255),b
  2110                           
  2111                           ; BSR set to: 1
  2112                           ;main_MC50.c: 165:                 readInputs();
  2113  006ADA  EC54  F03A         	call	_readInputs	;wreg free
  2114                           
  2115                           ;main_MC50.c: 166:                 ControlInputs();
  2116  006ADE  ECB3  F038         	call	_ControlInputs	;wreg free
  2117                           
  2118                           ;main_MC50.c: 167:                 ControlCurrent();
  2119  006AE2  EC90  F035         	call	_ControlCurrent	;wreg free
  2120                           
  2121                           ;main_MC50.c: 168:                 controlVelocity();
  2122  006AE6  EC31  F02C         	call	_controlVelocity	;wreg free
  2123                           
  2124                           ;main_MC50.c: 169:                 ControlMotor();
  2125  006AEA  ECFB  F029         	call	_ControlMotor	;wreg free
  2126                           
  2127                           ;main_MC50.c: 170:                 ControlLights();
  2128  006AEE  EC43  F023         	call	_ControlLights	;wreg free
  2129                           
  2130                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2131  006AF2  EC06  F048         	call	_ControlCounterMoves	;wreg free
  2132                           
  2133                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2134  006AF6  0EF2               	movlw	low _main_stateMachine
  2135  006AF8  0100               	movlb	0	; () banked
  2136  006AFA  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2137  006AFC  0E01               	movlw	high _main_stateMachine
  2138  006AFE  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2139  006B00  EC24  F01D         	call	_sm_execute_main	;wreg free
  2140                           
  2141                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2142  006B04  0EE7               	movlw	low _controlGate_stateMachine
  2143  006B06  0100               	movlb	0	; () banked
  2144  006B08  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2145  006B0A  0E01               	movlw	high _controlGate_stateMachine
  2146  006B0C  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2147  006B0E  EC9E  F021         	call	_sm_execute_ControlGate	;wreg free
  2148                           
  2149                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2150  006B12  0101               	movlb	1	; () banked
  2151  006B14  2999               	incf	_lastKey& (0+255),w,b
  2152  006B16  B4D8               	btfsc	status,2,c
  2153  006B18  D7B4               	goto	l27978
  2154                           
  2155                           ; BSR set to: 1
  2156                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2157  006B1A  EC40  F04E         	call	_InitReceiver	;wreg free
  2158                           
  2159                           ; BSR set to: 1
  2160                           
  2161                           ;main_MC50.c: 185:         }
  2162  006B1E  D7B1               	goto	l27978
  2163  006B20                     __end_of_main:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _sm_execute_main *****************
  2167 ;; Defined at:
  2168 ;;		line 26 in file "sm_Main_MC50.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  psm             2   21[BANK0 ] PTR struct .
  2171 ;;		 -> main_stateMachine(11), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 3F/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;Total ram usage:        4 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 16
  2190 ;; This function calls:
  2191 ;;		_SetSegmentValueIntermitentMain
  2192 ;;		_SetSegmentValueMain
  2193 ;;		_load_New_Menu
  2194 ;;		_sm_execute_menuConfiguration
  2195 ;;		_sm_send_event
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text1
  2202  003A48                     __ptext1:
  2203                           	callstack 0
  2204  003A48                     _sm_execute_main:
  2205                           	callstack 14
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2209                           
  2210                           ; BSR set to: 1
  2211                           ;incstack = 0
  2212  003A48  D053               	goto	l25726
  2213  003A4A                     l25702:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2217  003A4A  5185               	movf	_programmer_enable& (0+255),w,b
  2218  003A4C  A4D8               	btfss	status,2,c
  2219  003A4E  D066               	goto	l25728
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2223  003A50  EE20 F004          	lfsr	2,4
  2224  003A54  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2225  003A56  26D9               	addwf	fsr2l,f,c
  2226  003A58  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2227  003A5A  22DA               	addwfc	fsr2h,f,c
  2228  003A5C  0E06               	movlw	6
  2229  003A5E  18DE               	xorwf	postinc2,w,c
  2230  003A60  10DE               	iorwf	postinc2,w,c
  2231  003A62  A4D8               	btfss	status,2,c
  2232  003A64  D006               	goto	l25708
  2233  003A66                     u32300:
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2237  003A66  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2238  003A6A  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2239  003A6E  0E01               	movlw	1
  2240  003A70  D01D               	goto	L2
  2241  003A72                     l25708:
  2242                           
  2243                           ; BSR set to: 0
  2244  003A72  EE20 F004          	lfsr	2,4
  2245  003A76  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2246  003A78  26D9               	addwf	fsr2l,f,c
  2247  003A7A  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2248  003A7C  22DA               	addwfc	fsr2h,f,c
  2249  003A7E  0E11               	movlw	17
  2250  003A80  18DE               	xorwf	postinc2,w,c
  2251  003A82  10DE               	iorwf	postinc2,w,c
  2252  003A84  A4D8               	btfss	status,2,c
  2253  003A86  D04A               	goto	l25728
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2257  003A88  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2258  003A8C  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2259  003A90  0E02               	movlw	2
  2260  003A92  D00C               	goto	L2
  2261  003A94                     l25712:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2265  003A94  EE20 F004          	lfsr	2,4
  2266  003A98  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2267  003A9A  26D9               	addwf	fsr2l,f,c
  2268  003A9C  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2269  003A9E  22DA               	addwfc	fsr2h,f,c
  2270  003AA0  0E07               	movlw	7
  2271  003AA2  18DE               	xorwf	postinc2,w,c
  2272  003AA4  10DE               	iorwf	postinc2,w,c
  2273  003AA6  A4D8               	btfss	status,2,c
  2274  003AA8  D039               	goto	l25728
  2275  003AAA  D00F               	goto	u32330
  2276  003AAC                     L2:
  2277  003AAC  6EDE               	movwf	postinc2,c
  2278  003AAE  0E00               	movlw	0
  2279  003AB0  6EDD               	movwf	postdec2,c
  2280  003AB2  D034               	goto	l25728
  2281  003AB4                     l25716:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2285  003AB4  EE20 F004          	lfsr	2,4
  2286  003AB8  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2287  003ABA  26D9               	addwf	fsr2l,f,c
  2288  003ABC  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2289  003ABE  22DA               	addwfc	fsr2h,f,c
  2290  003AC0  0E07               	movlw	7
  2291  003AC2  18DE               	xorwf	postinc2,w,c
  2292  003AC4  10DE               	iorwf	postinc2,w,c
  2293  003AC6  A4D8               	btfss	status,2,c
  2294  003AC8  D006               	goto	l25720
  2295  003ACA                     u32330:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2299  003ACA  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2300  003ACE  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2301  003AD2  0E00               	movlw	0
  2302  003AD4  D7EB               	goto	L2
  2303  003AD6                     l25720:
  2304                           
  2305                           ; BSR set to: 0
  2306  003AD6  EE20 F004          	lfsr	2,4
  2307  003ADA  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2308  003ADC  26D9               	addwf	fsr2l,f,c
  2309  003ADE  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2310  003AE0  22DA               	addwfc	fsr2h,f,c
  2311  003AE2  0E06               	movlw	6
  2312  003AE4  18DE               	xorwf	postinc2,w,c
  2313  003AE6  10DE               	iorwf	postinc2,w,c
  2314  003AE8  A4D8               	btfss	status,2,c
  2315  003AEA  D018               	goto	l25728
  2316  003AEC  D7BC               	goto	u32300
  2317  003AEE                     l3053:
  2318                           
  2319                           ; BSR set to: 0
  2320  003AEE  D7FF               	goto	l3053
  2321  003AF0                     l25726:
  2322                           
  2323                           ; BSR set to: 0
  2324  003AF0  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2325  003AF4  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2326  003AF8  50DF               	movf	indf2,w,c
  2327  003AFA  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2328  003AFC  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2329                           
  2330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2331                           ; Switch size 1, requested type "simple"
  2332                           ; Number of cases is 1, Range of values is 0 to 0
  2333                           ; switch strategies available:
  2334                           ; Name         Instructions Cycles
  2335                           ; simple_byte            4     3 (average)
  2336                           ;	Chosen strategy is simple_byte
  2337  003AFE  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2338  003B00  0A00               	xorlw	0	; case 0
  2339  003B02  A4D8               	btfss	status,2,c
  2340  003B04  D7F4               	goto	l3053
  2341                           
  2342                           ; BSR set to: 0
  2343                           ; Switch size 1, requested type "simple"
  2344                           ; Number of cases is 3, Range of values is 0 to 2
  2345                           ; switch strategies available:
  2346                           ; Name         Instructions Cycles
  2347                           ; simple_byte           10     6 (average)
  2348                           ;	Chosen strategy is simple_byte
  2349  003B06  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2350  003B08  0A00               	xorlw	0	; case 0
  2351  003B0A  B4D8               	btfsc	status,2,c
  2352  003B0C  D79E               	goto	l25702
  2353  003B0E  0A01               	xorlw	1	; case 1
  2354  003B10  B4D8               	btfsc	status,2,c
  2355  003B12  D7C0               	goto	l25712
  2356  003B14  0A03               	xorlw	3	; case 2
  2357  003B16  B4D8               	btfsc	status,2,c
  2358  003B18  D7CD               	goto	l25716
  2359  003B1A  D7E9               	goto	l3053
  2360  003B1C                     l25728:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2364  003B1C  0EF2               	movlw	low _main_stateMachine
  2365  003B1E  6E12               	movwf	sm_send_event@psm^0,c
  2366  003B20  0E01               	movlw	high _main_stateMachine
  2367  003B22  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2368  003B24  0E00               	movlw	0
  2369  003B26  6E15               	movwf	(sm_send_event@event+1)^0,c
  2370  003B28  0E00               	movlw	0
  2371  003B2A  6E14               	movwf	sm_send_event@event^0,c
  2372  003B2C  EC4F  F047         	call	_sm_send_event	;wreg free
  2373                           
  2374                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2375  003B30  D1FD               	goto	l26006
  2376  003B32                     l25730:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0x27 && button_struct.timer>((1000/50)*5))
  2380  003B32  0E27               	movlw	39
  2381  003B34  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2382  003B36  A4D8               	btfss	status,2,c
  2383  003B38  D016               	goto	l25742
  2384                           
  2385                           ; BSR set to: 0
  2386  003B3A  0E64               	movlw	100
  2387  003B3C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2388  003B3E  D013               	goto	l25742
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2392  003B40  0E01               	movlw	1
  2393  003B42  ECD5  F024         	call	_load_New_Menu
  2394  003B46                     l25736:
  2395                           
  2396                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2397  003B46  0EF2               	movlw	low _main_stateMachine
  2398  003B48  6E12               	movwf	sm_send_event@psm^0,c
  2399  003B4A  0E01               	movlw	high _main_stateMachine
  2400  003B4C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2401  003B4E  0E00               	movlw	0
  2402  003B50  6E15               	movwf	(sm_send_event@event+1)^0,c
  2403  003B52  0E06               	movlw	6
  2404  003B54  6E14               	movwf	sm_send_event@event^0,c
  2405  003B56  EC4F  F047         	call	_sm_send_event	;wreg free
  2406                           
  2407                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2408  003B5A  0E01               	movlw	1
  2409  003B5C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2410                           
  2411                           ;sm_Main_MC50.c: 91:                 temp=0;
  2412  003B5E  0E00               	movlw	0
  2413  003B60  0100               	movlb	0	; () banked
  2414  003B62  6F80               	movwf	_temp& (0+255),b
  2415                           
  2416                           ;sm_Main_MC50.c: 92:             }
  2417  003B64  0012               	return	
  2418  003B66                     l25742:
  2419                           
  2420                           ; BSR set to: 0
  2421  003B66  0E27               	movlw	39
  2422  003B68  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2423  003B6A  A4D8               	btfss	status,2,c
  2424  003B6C  D00B               	goto	l25750
  2425                           
  2426                           ; BSR set to: 0
  2427  003B6E  0E14               	movlw	20
  2428  003B70  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2429  003B72  D008               	goto	l25750
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2433  003B74  0E00               	movlw	0
  2434  003B76  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2435  003B78  0E10               	movlw	16
  2436  003B7A  EC4D  F04E         	call	_SetSegmentValueMain
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;sm_Main_MC50.c: 98:                 temp=1;
  2440  003B7E  0E01               	movlw	1
  2441  003B80  6F80               	movwf	_temp& (0+255),b
  2442                           
  2443                           ;sm_Main_MC50.c: 99:             }
  2444  003B82  0012               	return	
  2445  003B84                     l25750:
  2446                           
  2447                           ; BSR set to: 0
  2448  003B84  0580               	decf	_temp& (0+255),w,b
  2449  003B86  A4D8               	btfss	status,2,c
  2450  003B88  D004               	goto	l25760
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2454  003B8A  0E00               	movlw	0
  2455  003B8C  ECD5  F024         	call	_load_New_Menu
  2456  003B90  D7DA               	goto	l25736
  2457  003B92                     l25760:
  2458                           
  2459                           ; BSR set to: 0
  2460  003B92  0E07               	movlw	7
  2461  003B94  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2462  003B96  A4D8               	btfss	status,2,c
  2463  003B98  D007               	goto	l25772
  2464                           
  2465                           ; BSR set to: 0
  2466  003B9A  0E78               	movlw	120
  2467  003B9C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2468  003B9E  D004               	goto	l25772
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2472  003BA0  0E0D               	movlw	13
  2473  003BA2  ECD5  F024         	call	_load_New_Menu
  2474  003BA6  D7CF               	goto	l25736
  2475  003BA8                     l25772:
  2476                           
  2477                           ; BSR set to: 0
  2478  003BA8  0E07               	movlw	7
  2479  003BAA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2480  003BAC  A4D8               	btfss	status,2,c
  2481  003BAE  D00B               	goto	l25780
  2482                           
  2483                           ; BSR set to: 0
  2484  003BB0  0E14               	movlw	20
  2485  003BB2  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2486  003BB4  D008               	goto	l25780
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2490  003BB6  0E13               	movlw	19
  2491  003BB8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2492  003BBA  0E05               	movlw	5
  2493  003BBC  EC4D  F04E         	call	_SetSegmentValueMain
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;sm_Main_MC50.c: 119:                 temp=2;
  2497  003BC0  0E02               	movlw	2
  2498  003BC2  6F80               	movwf	_temp& (0+255),b
  2499                           
  2500                           ;sm_Main_MC50.c: 120:             }
  2501  003BC4  0012               	return	
  2502  003BC6                     l25780:
  2503                           
  2504                           ; BSR set to: 0
  2505  003BC6  0E02               	movlw	2
  2506  003BC8  1980               	xorwf	_temp& (0+255),w,b
  2507  003BCA  A4D8               	btfss	status,2,c
  2508  003BCC  D004               	goto	l25790
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2512  003BCE  0E0C               	movlw	12
  2513  003BD0  ECD5  F024         	call	_load_New_Menu
  2514  003BD4  D7B8               	goto	l25736
  2515  003BD6                     l25790:
  2516                           
  2517                           ; BSR set to: 0
  2518  003BD6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2519  003BD8  A4D8               	btfss	status,2,c
  2520  003BDA  D009               	goto	l25796
  2521                           
  2522                           ; BSR set to: 0
  2523  003BDC  0101               	movlb	1	; () banked
  2524  003BDE  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2525  003BE0  A4D8               	btfss	status,2,c
  2526  003BE2  D005               	goto	l25796
  2527                           
  2528                           ; BSR set to: 1
  2529                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2530  003BE4  0E01               	movlw	1
  2531  003BE6  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2532                           
  2533                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2534  003BE8  0E03               	movlw	3
  2535  003BEA  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2536                           
  2537                           ;sm_Main_MC50.c: 132:             }
  2538  003BEC  0012               	return	
  2539  003BEE                     l25796:
  2540  003BEE  0E17               	movlw	23
  2541  003BF0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2542  003BF2  A4D8               	btfss	status,2,c
  2543  003BF4  D009               	goto	l25802
  2544  003BF6  0101               	movlb	1	; () banked
  2545  003BF8  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2546  003BFA  A4D8               	btfss	status,2,c
  2547  003BFC  D005               	goto	l25802
  2548                           
  2549                           ; BSR set to: 1
  2550                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2551  003BFE  0E01               	movlw	1
  2552  003C00  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2553                           
  2554                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2555  003C02  0E01               	movlw	1
  2556  003C04  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2557                           
  2558                           ;sm_Main_MC50.c: 137:             }
  2559  003C06  0012               	return	
  2560  003C08                     l25802:
  2561  003C08  0101               	movlb	1	; () banked
  2562  003C0A  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2563  003C0C  A4D8               	btfss	status,2,c
  2564  003C0E  D005               	goto	l25806
  2565                           
  2566                           ; BSR set to: 1
  2567                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2568  003C10  0E00               	movlw	0
  2569  003C12  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2570                           
  2571                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2572  003C14  0E00               	movlw	0
  2573  003C16  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2574                           
  2575                           ;sm_Main_MC50.c: 142:             }
  2576  003C18  0012               	return	
  2577  003C1A                     l25806:
  2578                           
  2579                           ; BSR set to: 1
  2580  003C1A  0E06               	movlw	6
  2581  003C1C  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2582  003C1E  B4D8               	btfsc	status,2,c
  2583  003C20  D004               	goto	u32510
  2584                           
  2585                           ; BSR set to: 1
  2586  003C22  0E05               	movlw	5
  2587  003C24  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2588  003C26  A4D8               	btfss	status,2,c
  2589  003C28  D015               	goto	l25820
  2590  003C2A                     u32510:
  2591                           
  2592                           ; BSR set to: 1
  2593  003C2A  0E63               	movlw	99
  2594  003C2C  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2595  003C2E  D012               	goto	l25820
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2599  003C30  0E0C               	movlw	12
  2600  003C32  ECD5  F024         	call	_load_New_Menu
  2601                           
  2602                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2603  003C36  0EF2               	movlw	low _main_stateMachine
  2604  003C38  6E12               	movwf	sm_send_event@psm^0,c
  2605  003C3A  0E01               	movlw	high _main_stateMachine
  2606  003C3C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2607  003C3E  0E00               	movlw	0
  2608  003C40  6E15               	movwf	(sm_send_event@event+1)^0,c
  2609  003C42  0E06               	movlw	6
  2610  003C44  6E14               	movwf	sm_send_event@event^0,c
  2611  003C46  EC4F  F047         	call	_sm_send_event	;wreg free
  2612                           
  2613                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2614  003C4A  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2615                           
  2616                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2617  003C4E  0E01               	movlw	1
  2618  003C50  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2619                           
  2620                           ;sm_Main_MC50.c: 149:             }
  2621  003C52  0012               	return	
  2622  003C54                     l25820:
  2623                           
  2624                           ; BSR set to: 1
  2625  003C54  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2626  003C56  D005               	goto	u32530
  2627  003C58  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2628  003C5A  E111               	bnz	l3065
  2629  003C5C  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2630  003C5E  B0D8               	btfsc	status,0,c
  2631  003C60  0012               	return	
  2632  003C62                     u32530:
  2633                           
  2634                           ; BSR set to: 1
  2635                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2636  003C62  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2637  003C64  A4D8               	btfss	status,2,c
  2638  003C66  D006               	goto	l25826
  2639                           
  2640                           ; BSR set to: 1
  2641                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2642  003C68  0E0C               	movlw	12
  2643  003C6A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2644  003C6C  0E0F               	movlw	15
  2645  003C6E  EC4D  F04E         	call	_SetSegmentValueMain
  2646                           
  2647                           ;sm_Main_MC50.c: 157:                     }
  2648  003C72  0012               	return	
  2649  003C74                     l25826:
  2650                           
  2651                           ; BSR set to: 1
  2652                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2653  003C74  0E18               	movlw	24
  2654  003C76  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2655  003C78  0E18               	movlw	24
  2656  003C7A  EC4D  F04E         	call	_SetSegmentValueMain
  2657  003C7E                     l3065:
  2658                           
  2659                           ; BSR set to: 1
  2660  003C7E  0012               	return	
  2661  003C80                     l25828:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2665  003C80  0EBB               	movlw	low _menuConfiguration_stateMachine
  2666  003C82  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2667  003C84  0E02               	movlw	high _menuConfiguration_stateMachine
  2668  003C86  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2669  003C88  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2670                           
  2671                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2672  003C8C  0012               	return	
  2673  003C8E                     l25830:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2677  003C8E  0E00               	movlw	0
  2678  003C90  0101               	movlb	1	; () banked
  2679  003C92  6F90               	movwf	_aux_in_auto_close& (0+255),b
  2680                           
  2681                           ; BSR set to: 1
  2682                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2683  003C94  0E04               	movlw	4
  2684  003C96  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2685  003C98  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2686  003C9A  A4D8               	btfss	status,2,c
  2687  003C9C  D013               	goto	l3088
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2691  003C9E  0100               	movlb	0	; () banked
  2692  003CA0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2693  003CA2  A4D8               	btfss	status,2,c
  2694  003CA4  D007               	goto	l25840
  2695                           
  2696                           ; BSR set to: 0
  2697  003CA6  0101               	movlb	1	; () banked
  2698  003CA8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2699  003CAA  A4D8               	btfss	status,2,c
  2700  003CAC  D003               	goto	l25840
  2701  003CAE                     u32570:
  2702                           
  2703                           ; BSR set to: 1
  2704                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2705  003CAE  0E01               	movlw	1
  2706  003CB0  6F90               	movwf	_aux_in_auto_close& (0+255),b
  2707                           
  2708                           ;sm_Main_MC50.c: 182:                 }
  2709  003CB2  D008               	goto	l3088
  2710  003CB4                     l25840:
  2711  003CB4  0100               	movlb	0	; () banked
  2712  003CB6  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2713  003CB8  B4D8               	btfsc	status,2,c
  2714  003CBA  D004               	goto	l3088
  2715                           
  2716                           ; BSR set to: 0
  2717  003CBC  0101               	movlb	1	; () banked
  2718  003CBE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2719  003CC0  A4D8               	btfss	status,2,c
  2720  003CC2  D7F5               	goto	u32570
  2721  003CC4                     l3088:
  2722                           
  2723                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2724  003CC4  0101               	movlb	1	; () banked
  2725  003CC6  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2726  003CC8  A4D8               	btfss	status,2,c
  2727  003CCA  D06B               	goto	l3102
  2728                           
  2729                           ; BSR set to: 1
  2730  003CCC  0E04               	movlw	4
  2731  003CCE  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2732  003CD0  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2733  003CD2  A4D8               	btfss	status,2,c
  2734  003CD4  D003               	goto	u32620
  2735                           
  2736                           ; BSR set to: 1
  2737  003CD6  5190               	movf	_aux_in_auto_close& (0+255),w,b
  2738  003CD8  B4D8               	btfsc	status,2,c
  2739  003CDA  D008               	goto	u32640
  2740  003CDC                     u32620:
  2741                           
  2742                           ; BSR set to: 1
  2743  003CDC  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
  2744  003CDE  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2745  003CE0  B4D8               	btfsc	status,2,c
  2746  003CE2  D004               	goto	u32640
  2747                           
  2748                           ; BSR set to: 1
  2749  003CE4  51E7               	movf	_controlGate_stateMachine& (0+255),w,b
  2750  003CE6  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2751  003CE8  A4D8               	btfss	status,2,c
  2752  003CEA  D05B               	goto	l3102
  2753  003CEC                     u32640:
  2754                           
  2755                           ; BSR set to: 1
  2756                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0x27 && button_struct.timer>((1000/50)*5))
  2757  003CEC  0E27               	movlw	39
  2758  003CEE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2759  003CF0  A4D8               	btfss	status,2,c
  2760  003CF2  D015               	goto	l25868
  2761                           
  2762                           ; BSR set to: 1
  2763  003CF4  0E64               	movlw	100
  2764  003CF6  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2765  003CF8  D012               	goto	l25868
  2766                           
  2767                           ; BSR set to: 1
  2768                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2769  003CFA  0E01               	movlw	1
  2770  003CFC  ECD5  F024         	call	_load_New_Menu
  2771  003D00                     l25862:
  2772                           
  2773                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2774  003D00  0EF2               	movlw	low _main_stateMachine
  2775  003D02  6E12               	movwf	sm_send_event@psm^0,c
  2776  003D04  0E01               	movlw	high _main_stateMachine
  2777  003D06  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2778  003D08  0E00               	movlw	0
  2779  003D0A  6E15               	movwf	(sm_send_event@event+1)^0,c
  2780  003D0C  0E06               	movlw	6
  2781  003D0E  6E14               	movwf	sm_send_event@event^0,c
  2782  003D10  EC4F  F047         	call	_sm_send_event	;wreg free
  2783                           
  2784                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2785  003D14  0E01               	movlw	1
  2786  003D16  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2787                           
  2788                           ;sm_Main_MC50.c: 200:                     temp=0;
  2789  003D18  0E00               	movlw	0
  2790  003D1A  0100               	movlb	0	; () banked
  2791  003D1C  D038               	goto	L4
  2792  003D1E                     l25868:
  2793                           
  2794                           ; BSR set to: 1
  2795  003D1E  0E27               	movlw	39
  2796  003D20  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2797  003D22  A4D8               	btfss	status,2,c
  2798  003D24  D00A               	goto	l25876
  2799                           
  2800                           ; BSR set to: 1
  2801  003D26  0E14               	movlw	20
  2802  003D28  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2803  003D2A  D007               	goto	l25876
  2804                           
  2805                           ; BSR set to: 1
  2806                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2807  003D2C  0E00               	movlw	0
  2808  003D2E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2809  003D30  0E10               	movlw	16
  2810  003D32  EC4D  F04E         	call	_SetSegmentValueMain
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;sm_Main_MC50.c: 206:                     temp=1;
  2814  003D36  0E01               	movlw	1
  2815  003D38  D02A               	goto	L4
  2816  003D3A                     l25876:
  2817                           
  2818                           ; BSR set to: 1
  2819  003D3A  0100               	movlb	0	; () banked
  2820  003D3C  0580               	decf	_temp& (0+255),w,b
  2821  003D3E  A4D8               	btfss	status,2,c
  2822  003D40  D00E               	goto	l25890
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2826  003D42  0E00               	movlw	0
  2827  003D44  ECD5  F024         	call	_load_New_Menu
  2828                           
  2829                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2830  003D48  0E01               	movlw	1
  2831  003D4A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2832                           
  2833                           ;sm_Main_MC50.c: 213:                     temp=0;
  2834  003D4C  0E00               	movlw	0
  2835  003D4E  0100               	movlb	0	; () banked
  2836  003D50  6F80               	movwf	_temp& (0+255),b
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2840  003D52  0E00               	movlw	0
  2841  003D54  0101               	movlb	1	; () banked
  2842  003D56  6FF3               	movwf	(_main_stateMachine+1)& (0+255),b
  2843  003D58  0E01               	movlw	1
  2844  003D5A  6FF2               	movwf	_main_stateMachine& (0+255),b
  2845  003D5C  0012               	return	
  2846  003D5E                     l25890:
  2847                           
  2848                           ; BSR set to: 0
  2849  003D5E  0E07               	movlw	7
  2850  003D60  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2851  003D62  A4D8               	btfss	status,2,c
  2852  003D64  D007               	goto	l25902
  2853                           
  2854                           ; BSR set to: 0
  2855  003D66  0E78               	movlw	120
  2856  003D68  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2857  003D6A  D004               	goto	l25902
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2861  003D6C  0E0D               	movlw	13
  2862  003D6E  ECD5  F024         	call	_load_New_Menu
  2863  003D72  D7C6               	goto	l25862
  2864  003D74                     l25902:
  2865                           
  2866                           ; BSR set to: 0
  2867  003D74  0E07               	movlw	7
  2868  003D76  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2869  003D78  A4D8               	btfss	status,2,c
  2870  003D7A  D00B               	goto	l25910
  2871                           
  2872                           ; BSR set to: 0
  2873  003D7C  0E14               	movlw	20
  2874  003D7E  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2875  003D80  D008               	goto	l25910
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2879  003D82  0E13               	movlw	19
  2880  003D84  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2881  003D86  0E05               	movlw	5
  2882  003D88  EC4D  F04E         	call	_SetSegmentValueMain
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;sm_Main_MC50.c: 229:                 temp=2;
  2886  003D8C  0E02               	movlw	2
  2887  003D8E                     L4:
  2888  003D8E  6F80               	movwf	_temp& (0+255),b
  2889                           
  2890                           ;sm_Main_MC50.c: 230:             }
  2891  003D90  D008               	goto	l3102
  2892  003D92                     l25910:
  2893                           
  2894                           ; BSR set to: 0
  2895  003D92  0E02               	movlw	2
  2896  003D94  1980               	xorwf	_temp& (0+255),w,b
  2897  003D96  A4D8               	btfss	status,2,c
  2898  003D98  D004               	goto	l3102
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2902  003D9A  0E0C               	movlw	12
  2903  003D9C  ECD5  F024         	call	_load_New_Menu
  2904  003DA0  D6D2               	goto	l25736
  2905  003DA2                     l3102:
  2906                           
  2907                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0x27 && button_struct.current!=0x07) )
  2908                           
  2909                           ; BSR set to: 0
  2910  003DA2  0101               	movlb	1	; () banked
  2911  003DA4  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2912  003DA6  D005               	goto	u32750
  2913  003DA8  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2914  003DAA  E102               	bnz	u32751
  2915  003DAC  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2916  003DAE  B0D8               	btfsc	status,0,c
  2917  003DB0                     u32751:
  2918  003DB0  0012               	return	
  2919  003DB2                     u32750:
  2920                           
  2921                           ; BSR set to: 1
  2922  003DB2  0E27               	movlw	39
  2923  003DB4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2924  003DB6  B4D8               	btfsc	status,2,c
  2925  003DB8  0012               	return	
  2926                           
  2927                           ; BSR set to: 1
  2928  003DBA  0E07               	movlw	7
  2929  003DBC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2930  003DBE  B4D8               	btfsc	status,2,c
  2931  003DC0  0012               	return	
  2932                           
  2933                           ; BSR set to: 1
  2934                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2935  003DC2  0E03               	movlw	3
  2936  003DC4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2937  003DC6  A4D8               	btfss	status,2,c
  2938  003DC8  D011               	goto	l25936
  2939                           
  2940                           ; BSR set to: 1
  2941                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2942  003DCA  0E12               	movlw	18
  2943  003DCC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2944  003DCE  0E00               	movlw	0
  2945  003DD0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2946  003DD2  0E0A               	movlw	10
  2947  003DD4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2948  003DD6  0E0C               	movlw	12
  2949  003DD8  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  2950  003DDC                     l25932:
  2951                           
  2952                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2953  003DDC  0E00               	movlw	0
  2954  003DDE  0101               	movlb	1	; () banked
  2955  003DE0  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2956  003DE2  0E04               	movlw	4
  2957  003DE4  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2958                           
  2959                           ; BSR set to: 1
  2960                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2961  003DE6  0E00               	movlw	0
  2962  003DE8  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2963                           
  2964                           ;sm_Main_MC50.c: 252:                 }
  2965  003DEA  0012               	return	
  2966  003DEC                     l25936:
  2967                           
  2968                           ; BSR set to: 1
  2969  003DEC  0E02               	movlw	2
  2970  003DEE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2971  003DF0  B4D8               	btfsc	status,2,c
  2972  003DF2  D003               	goto	u32800
  2973                           
  2974                           ; BSR set to: 1
  2975  003DF4  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2976  003DF6  A4D8               	btfss	status,2,c
  2977  003DF8  D00A               	goto	l25946
  2978  003DFA                     u32800:
  2979                           
  2980                           ; BSR set to: 1
  2981                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2982  003DFA  0E10               	movlw	16
  2983  003DFC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2984  003DFE  0E00               	movlw	0
  2985  003E00  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2986  003E02  0E0A               	movlw	10
  2987  003E04  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2988  003E06  0E00               	movlw	0
  2989  003E08  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  2990  003E0C  D7E7               	goto	l25932
  2991  003E0E                     l25946:
  2992                           
  2993                           ; BSR set to: 1
  2994  003E0E  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2995  003E10  A4D8               	btfss	status,2,c
  2996  003E12  D00F               	goto	l25952
  2997                           
  2998                           ; BSR set to: 1
  2999  003E14  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
  3000  003E16  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3001  003E18  A4D8               	btfss	status,2,c
  3002  003E1A  D00B               	goto	l25952
  3003                           
  3004                           ; BSR set to: 1
  3005                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  3006  003E1C  0EF2               	movlw	low _main_stateMachine
  3007  003E1E  6E12               	movwf	sm_send_event@psm^0,c
  3008  003E20  0E01               	movlw	high _main_stateMachine
  3009  003E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3010  003E24  0E00               	movlw	0
  3011  003E26  6E15               	movwf	(sm_send_event@event+1)^0,c
  3012  003E28  0E07               	movlw	7
  3013  003E2A  6E14               	movwf	sm_send_event@event^0,c
  3014  003E2C  EC4F  F047         	call	_sm_send_event	;wreg free
  3015                           
  3016                           ;sm_Main_MC50.c: 264:                 }
  3017  003E30  0012               	return	
  3018  003E32                     l25952:
  3019                           
  3020                           ; BSR set to: 1
  3021  003E32  5100               	movf	_var_sys& (0+255),w,b	;volatile
  3022  003E34  A4D8               	btfss	status,2,c
  3023  003E36  D074               	goto	l26002
  3024                           
  3025                           ; BSR set to: 1
  3026  003E38  0E04               	movlw	4
  3027  003E3A  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
  3028  003E3C  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  3029  003E3E  A4D8               	btfss	status,2,c
  3030  003E40  D06F               	goto	l26002
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  3034  003E42  0100               	movlb	0	; () banked
  3035  003E44  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3036  003E46  B4D8               	btfsc	status,2,c
  3037  003E48  D00B               	goto	u32880
  3038                           
  3039                           ; BSR set to: 0
  3040  003E4A  0101               	movlb	1	; () banked
  3041  003E4C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3042  003E4E  B4D8               	btfsc	status,2,c
  3043  003E50  D007               	goto	u32880
  3044                           
  3045                           ; BSR set to: 1
  3046  003E52  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  3047  003E54  B4D8               	btfsc	status,2,c
  3048  003E56  D013               	goto	u32920
  3049                           
  3050                           ; BSR set to: 1
  3051  003E58  0E03               	movlw	3
  3052  003E5A  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3053  003E5C  B4D8               	btfsc	status,2,c
  3054  003E5E  D00F               	goto	u32920
  3055  003E60                     u32880:
  3056  003E60  0100               	movlb	0	; () banked
  3057  003E62  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3058  003E64  A4D8               	btfss	status,2,c
  3059  003E66  D026               	goto	l25980
  3060                           
  3061                           ; BSR set to: 0
  3062  003E68  0101               	movlb	1	; () banked
  3063  003E6A  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3064  003E6C  A4D8               	btfss	status,2,c
  3065  003E6E  D022               	goto	l25980
  3066                           
  3067                           ; BSR set to: 1
  3068  003E70  0E02               	movlw	2
  3069  003E72  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3070  003E74  B4D8               	btfsc	status,2,c
  3071  003E76  D01E               	goto	l25980
  3072                           
  3073                           ; BSR set to: 1
  3074  003E78  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3075  003E7A  B4D8               	btfsc	status,2,c
  3076  003E7C  D01B               	goto	l25980
  3077  003E7E                     u32920:
  3078                           
  3079                           ; BSR set to: 1
  3080                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3081  003E7E  0E00               	movlw	0
  3082  003E80  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3083  003E82  0E0A               	movlw	10
  3084  003E84  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3088  003E86  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3089  003E88  A4D8               	btfss	status,2,c
  3090  003E8A  D00A               	goto	l25978
  3091                           
  3092                           ; BSR set to: 1
  3093                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3094  003E8C  0E10               	movlw	16
  3095  003E8E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3096  003E90  0E00               	movlw	0
  3097  003E92  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3098  003E94  0E0A               	movlw	10
  3099  003E96  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3100  003E98  0E0A               	movlw	10
  3101  003E9A  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  3102                           
  3103                           ;sm_Main_MC50.c: 282:                         }
  3104  003E9E  0012               	return	
  3105  003EA0                     l25978:
  3106                           
  3107                           ; BSR set to: 1
  3108                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3109  003EA0  0E0F               	movlw	15
  3110  003EA2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3111  003EA4  0E00               	movlw	0
  3112  003EA6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3113  003EA8  0E0A               	movlw	10
  3114  003EAA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3115  003EAC  0E0A               	movlw	10
  3116  003EAE  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  3117  003EB2  0012               	return	
  3118  003EB4                     l25980:
  3119  003EB4  0100               	movlb	0	; () banked
  3120  003EB6  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3121  003EB8  B4D8               	btfsc	status,2,c
  3122  003EBA  D008               	goto	u32960
  3123                           
  3124                           ; BSR set to: 0
  3125  003EBC  0101               	movlb	1	; () banked
  3126  003EBE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3127  003EC0  B4D8               	btfsc	status,2,c
  3128  003EC2  D004               	goto	u32960
  3129                           
  3130                           ; BSR set to: 1
  3131  003EC4  0E02               	movlw	2
  3132  003EC6  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3133  003EC8  B4D8               	btfsc	status,2,c
  3134  003ECA  D00C               	goto	u32990
  3135  003ECC                     u32960:
  3136  003ECC  0100               	movlb	0	; () banked
  3137  003ECE  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3138  003ED0  A4D8               	btfss	status,2,c
  3139  003ED2  D016               	goto	l25996
  3140                           
  3141                           ; BSR set to: 0
  3142  003ED4  0101               	movlb	1	; () banked
  3143  003ED6  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3144  003ED8  A4D8               	btfss	status,2,c
  3145  003EDA  D012               	goto	l25996
  3146                           
  3147                           ; BSR set to: 1
  3148  003EDC  0E02               	movlw	2
  3149  003EDE  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3150  003EE0  A4D8               	btfss	status,2,c
  3151  003EE2  D00E               	goto	l25996
  3152  003EE4                     u32990:
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3156  003EE4  0E00               	movlw	0
  3157  003EE6  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3158  003EE8  0E0A               	movlw	10
  3159  003EEA  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3160                           
  3161                           ; BSR set to: 1
  3162                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3163  003EEC  0E10               	movlw	16
  3164  003EEE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3165  003EF0  0E00               	movlw	0
  3166  003EF2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3167  003EF4  0E0A               	movlw	10
  3168  003EF6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3169  003EF8  0E0A               	movlw	10
  3170  003EFA  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  3171                           
  3172                           ;sm_Main_MC50.c: 298:                     }
  3173  003EFE  0012               	return	
  3174  003F00                     l25996:
  3175  003F00  0101               	movlb	1	; () banked
  3176  003F02  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3177  003F04  A4D8               	btfss	status,2,c
  3178  003F06  D006               	goto	l26000
  3179                           
  3180                           ; BSR set to: 1
  3181                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3182  003F08  0E00               	movlw	0
  3183  003F0A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3184  003F0C  0E0F               	movlw	15
  3185  003F0E  EC4D  F04E         	call	_SetSegmentValueMain
  3186                           
  3187                           ;sm_Main_MC50.c: 304:                     }
  3188  003F12  0012               	return	
  3189  003F14                     l26000:
  3190                           
  3191                           ; BSR set to: 1
  3192                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3193  003F14  0E18               	movlw	24
  3194  003F16  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3195  003F18  0E18               	movlw	24
  3196  003F1A  EC4D  F04E         	call	_SetSegmentValueMain
  3197  003F1E  0012               	return	
  3198  003F20                     l26002:
  3199                           
  3200                           ; BSR set to: 1
  3201                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3202  003F20  0E18               	movlw	24
  3203  003F22  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3204  003F24  0E18               	movlw	24
  3205  003F26  EC4D  F04E         	call	_SetSegmentValueMain
  3206  003F2A  0012               	return	
  3207  003F2C                     l26006:
  3208  003F2C  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3209  003F30  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3210  003F34  50DF               	movf	indf2,w,c
  3211  003F36  0100               	movlb	0	; () banked
  3212  003F38  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3213  003F3A  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3214                           
  3215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3216                           ; Switch size 1, requested type "simple"
  3217                           ; Number of cases is 1, Range of values is 0 to 0
  3218                           ; switch strategies available:
  3219                           ; Name         Instructions Cycles
  3220                           ; simple_byte            4     3 (average)
  3221                           ;	Chosen strategy is simple_byte
  3222  003F3C  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3223  003F3E  0A00               	xorlw	0	; case 0
  3224  003F40  A4D8               	btfss	status,2,c
  3225  003F42  0012               	return	
  3226                           
  3227                           ; BSR set to: 0
  3228                           ; Switch size 1, requested type "simple"
  3229                           ; Number of cases is 3, Range of values is 0 to 2
  3230                           ; switch strategies available:
  3231                           ; Name         Instructions Cycles
  3232                           ; simple_byte           10     6 (average)
  3233                           ;	Chosen strategy is simple_byte
  3234  003F44  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3235  003F46  0A00               	xorlw	0	; case 0
  3236  003F48  B4D8               	btfsc	status,2,c
  3237  003F4A  D5F3               	goto	l25730
  3238  003F4C  0A01               	xorlw	1	; case 1
  3239  003F4E  B4D8               	btfsc	status,2,c
  3240  003F50  D697               	goto	l25828
  3241  003F52  0A03               	xorlw	3	; case 2
  3242  003F54  A4D8               	btfss	status,2,c
  3243  003F56  0012               	return	
  3244  003F58  D69A               	goto	l25830
  3245  003F5A                     __end_of_sm_execute_main:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _sm_execute_menuConfiguration *****************
  3249 ;; Defined at:
  3250 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  psm             2   17[BANK0 ] PTR struct .
  3253 ;;		 -> menuConfiguration_stateMachine(11), 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      void 
  3258 ;; Registers used:
  3259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3260 ;; Tracked objects:
  3261 ;;		On entry : 3F/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3267 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;Total ram usage:        4 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; Hardware stack levels required when called: 15
  3272 ;; This function calls:
  3273 ;;		_ClearFlag_rfCMD
  3274 ;;		_ResetDefaultMemory
  3275 ;;		_SaveNVM_VarSystem
  3276 ;;		_SetSegmentValueIntermitentMain
  3277 ;;		_SetSegmentValueMain
  3278 ;;		___lbdiv
  3279 ;;		___lldiv
  3280 ;;		___lmul
  3281 ;;		___lwdiv
  3282 ;;		_controlLearnDigit
  3283 ;;		_controlSaveRemote
  3284 ;;		_controlSelectRemote
  3285 ;;		_load_New_Menu
  3286 ;;		_setValueToEdit
  3287 ;;		_sm_send_event
  3288 ;; This function is called by:
  3289 ;;		_sm_execute_main
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text2
  3294  000F22                     __ptext2:
  3295                           	callstack 0
  3296  000F22                     _sm_execute_menuConfiguration:
  3297                           	callstack 14
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3301                           
  3302                           ;incstack = 0
  3303  000F22  D0A2               	goto	l23996
  3304  000F24                     l23938:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3308  000F24  EE20 F004          	lfsr	2,4
  3309  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3310  000F2A  26D9               	addwf	fsr2l,f,c
  3311  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3312  000F2E  22DA               	addwfc	fsr2h,f,c
  3313  000F30  04DE               	decf	postinc2,w,c
  3314  000F32  10DE               	iorwf	postinc2,w,c
  3315  000F34  A4D8               	btfss	status,2,c
  3316  000F36  D006               	goto	l23942
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3320  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3321  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3322  000F40  0E01               	movlw	1
  3323  000F42  D04C               	goto	L9
  3324  000F44                     l23942:
  3325                           
  3326                           ; BSR set to: 0
  3327  000F44  EE20 F004          	lfsr	2,4
  3328  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3329  000F4A  26D9               	addwf	fsr2l,f,c
  3330  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3331  000F4E  22DA               	addwfc	fsr2h,f,c
  3332  000F50  0E05               	movlw	5
  3333  000F52  18DE               	xorwf	postinc2,w,c
  3334  000F54  10DE               	iorwf	postinc2,w,c
  3335  000F56  A4D8               	btfss	status,2,c
  3336  000F58  D006               	goto	l23946
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3340  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3341  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3342  000F62  0E03               	movlw	3
  3343  000F64  D03B               	goto	L9
  3344  000F66                     l23946:
  3345                           
  3346                           ; BSR set to: 0
  3347  000F66  EE20 F004          	lfsr	2,4
  3348  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3349  000F6C  26D9               	addwf	fsr2l,f,c
  3350  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3351  000F70  22DA               	addwfc	fsr2h,f,c
  3352  000F72  0E08               	movlw	8
  3353  000F74  18DE               	xorwf	postinc2,w,c
  3354  000F76  10DE               	iorwf	postinc2,w,c
  3355  000F78  A4D8               	btfss	status,2,c
  3356  000F7A  D006               	goto	l23950
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3360  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3361  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3362  000F84  0E04               	movlw	4
  3363  000F86  D02A               	goto	L9
  3364  000F88                     l23950:
  3365                           
  3366                           ; BSR set to: 0
  3367  000F88  EE20 F004          	lfsr	2,4
  3368  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3369  000F8E  26D9               	addwf	fsr2l,f,c
  3370  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3371  000F92  22DA               	addwfc	fsr2h,f,c
  3372  000F94  0E14               	movlw	20
  3373  000F96  18DE               	xorwf	postinc2,w,c
  3374  000F98  10DE               	iorwf	postinc2,w,c
  3375  000F9A  A4D8               	btfss	status,2,c
  3376  000F9C  D087               	goto	l23998
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3380  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3381  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3382  000FA6  0E06               	movlw	6
  3383  000FA8  D019               	goto	L9
  3384  000FAA                     l23954:
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3388  000FAA  EE20 F004          	lfsr	2,4
  3389  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3390  000FB0  26D9               	addwf	fsr2l,f,c
  3391  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3392  000FB4  22DA               	addwfc	fsr2h,f,c
  3393  000FB6  0E02               	movlw	2
  3394  000FB8  18DE               	xorwf	postinc2,w,c
  3395  000FBA  10DE               	iorwf	postinc2,w,c
  3396  000FBC  A4D8               	btfss	status,2,c
  3397  000FBE  D006               	goto	l23958
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3401  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3402  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3403  000FC8  0E02               	movlw	2
  3404  000FCA  D008               	goto	L9
  3405  000FCC                     l23958:
  3406                           
  3407                           ; BSR set to: 0
  3408  000FCC  EE20 F004          	lfsr	2,4
  3409  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3410  000FD2  26D9               	addwf	fsr2l,f,c
  3411  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3412  000FD6  22DA               	addwfc	fsr2h,f,c
  3413  000FD8  0E03               	movlw	3
  3414  000FDA  D03B               	goto	L125
  3415  000FDC                     L9:
  3416  000FDC  6EDE               	movwf	postinc2,c
  3417  000FDE  0E00               	movlw	0
  3418  000FE0  6EDD               	movwf	postdec2,c
  3419  000FE2  D064               	goto	l23998
  3420  000FE4                     l23966:
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3424  000FE4  EE20 F004          	lfsr	2,4
  3425  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3426  000FEA  26D9               	addwf	fsr2l,f,c
  3427  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3428  000FEE  22DA               	addwfc	fsr2h,f,c
  3429  000FF0  0E04               	movlw	4
  3430  000FF2  18DE               	xorwf	postinc2,w,c
  3431  000FF4  10DE               	iorwf	postinc2,w,c
  3432  000FF6  A4D8               	btfss	status,2,c
  3433  000FF8  D7E9               	goto	l23958
  3434  000FFA  D02F               	goto	u28920
  3435  000FFC                     l23974:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3439  000FFC  EE20 F004          	lfsr	2,4
  3440  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3441  001002  26D9               	addwf	fsr2l,f,c
  3442  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3443  001006  22DA               	addwfc	fsr2h,f,c
  3444  001008  0E08               	movlw	8
  3445  00100A  18DE               	xorwf	postinc2,w,c
  3446  00100C  10DE               	iorwf	postinc2,w,c
  3447  00100E  A4D8               	btfss	status,2,c
  3448  001010  D7DD               	goto	l23958
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3452  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3453  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3454  00101A  0E05               	movlw	5
  3455  00101C  D7DF               	goto	L9
  3456  00101E                     l23982:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3460  00101E  EE20 F004          	lfsr	2,4
  3461  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3462  001024  26D9               	addwf	fsr2l,f,c
  3463  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3464  001028  22DA               	addwfc	fsr2h,f,c
  3465  00102A  0E09               	movlw	9
  3466  00102C  18DE               	xorwf	postinc2,w,c
  3467  00102E  10DE               	iorwf	postinc2,w,c
  3468  001030  A4D8               	btfss	status,2,c
  3469  001032  D008               	goto	l23990
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3473  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3474  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3475  00103C  0E04               	movlw	4
  3476  00103E  6EDE               	movwf	postinc2,c
  3477  001040  0E00               	movlw	0
  3478  001042  6EDD               	movwf	postdec2,c
  3479  001044                     l23990:
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3483  001044  EE20 F004          	lfsr	2,4
  3484  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3485  00104A  26D9               	addwf	fsr2l,f,c
  3486  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3487  00104E  22DA               	addwfc	fsr2h,f,c
  3488  001050  0E04               	movlw	4
  3489  001052                     L125:
  3490  001052  18DE               	xorwf	postinc2,w,c
  3491  001054  10DE               	iorwf	postinc2,w,c
  3492  001056  A4D8               	btfss	status,2,c
  3493  001058  D029               	goto	l23998
  3494  00105A                     u28920:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3498  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3499  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3500  001062  0E00               	movlw	0
  3501  001064  D7BB               	goto	L9
  3502  001066                     l3233:
  3503                           
  3504                           ; BSR set to: 0
  3505  001066  D7FF               	goto	l3233
  3506  001068                     l23996:
  3507                           
  3508                           ; BSR set to: 0
  3509  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3510  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3511  001070  50DF               	movf	indf2,w,c
  3512  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3513  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3514                           
  3515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3516                           ; Switch size 1, requested type "simple"
  3517                           ; Number of cases is 1, Range of values is 0 to 0
  3518                           ; switch strategies available:
  3519                           ; Name         Instructions Cycles
  3520                           ; simple_byte            4     3 (average)
  3521                           ;	Chosen strategy is simple_byte
  3522  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3523  001078  0A00               	xorlw	0	; case 0
  3524  00107A  A4D8               	btfss	status,2,c
  3525  00107C  D7F4               	goto	l3233
  3526                           
  3527                           ; BSR set to: 0
  3528                           ; Switch size 1, requested type "simple"
  3529                           ; Number of cases is 7, Range of values is 0 to 6
  3530                           ; switch strategies available:
  3531                           ; Name         Instructions Cycles
  3532                           ; simple_byte           22    12 (average)
  3533                           ;	Chosen strategy is simple_byte
  3534  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3535  001080  0A00               	xorlw	0	; case 0
  3536  001082  B4D8               	btfsc	status,2,c
  3537  001084  D74F               	goto	l23938
  3538  001086  0A01               	xorlw	1	; case 1
  3539  001088  B4D8               	btfsc	status,2,c
  3540  00108A  D78F               	goto	l23954
  3541  00108C  0A03               	xorlw	3	; case 2
  3542  00108E  B4D8               	btfsc	status,2,c
  3543  001090  D7D9               	goto	l23990
  3544  001092  0A01               	xorlw	1	; case 3
  3545  001094  B4D8               	btfsc	status,2,c
  3546  001096  D7A6               	goto	l23966
  3547  001098  0A07               	xorlw	7	; case 4
  3548  00109A  B4D8               	btfsc	status,2,c
  3549  00109C  D7AF               	goto	l23974
  3550  00109E  0A01               	xorlw	1	; case 5
  3551  0010A0  B4D8               	btfsc	status,2,c
  3552  0010A2  D7BD               	goto	l23982
  3553  0010A4  0A03               	xorlw	3	; case 6
  3554  0010A6  B4D8               	btfsc	status,2,c
  3555  0010A8  D7CD               	goto	l23990
  3556  0010AA  D7DD               	goto	l3233
  3557  0010AC                     l23998:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3561  0010AC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3562  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3563  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3564  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3565  0010B4  0E00               	movlw	0
  3566  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3567  0010B8  0E00               	movlw	0
  3568  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3569  0010BC  EC4F  F047         	call	_sm_send_event	;wreg free
  3570                           
  3571                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3572  0010C0  D3C1               	goto	l24310
  3573  0010C2                     l24000:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3577  0010C2  0E06               	movlw	6
  3578  0010C4  0101               	movlb	1	; () banked
  3579  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3580  0010C8  A4D8               	btfss	status,2,c
  3581  0010CA  D02F               	goto	l24010
  3582                           
  3583                           ; BSR set to: 1
  3584                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3585  0010CC  0E00               	movlw	0
  3586  0010CE  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3587  0010D0  0EC8               	movlw	200
  3588  0010D2  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3589                           
  3590                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3591  0010D4  0E01               	movlw	1
  3592  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3593                           
  3594                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3595  0010D8  0E00               	movlw	0
  3596  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3597                           
  3598                           ; BSR set to: 1
  3599                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3600  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3601  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3602  0010E2  EC8B  F01A         	call	_setValueToEdit
  3603  0010E6  0900               	iorlw	0
  3604  0010E8  B4D8               	btfsc	status,2,c
  3605  0010EA  0012               	return	
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3609  0010EC  0EBB               	movlw	low _menuConfiguration_stateMachine
  3610  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3611  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3612  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3613  0010F4  0E00               	movlw	0
  3614  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3615  0010F8  0E08               	movlw	8
  3616  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3617  0010FC  EC4F  F047         	call	_sm_send_event	;wreg free
  3618                           
  3619                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3620  001100  0E0A               	movlw	10
  3621  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3622  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3623  001106  EC40  F04B         	call	___lbdiv
  3624  00110A  0DF6               	mullw	246
  3625  00110C  50F3               	movf	243,w,c
  3626  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3627  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3628  001112  0E00               	movlw	0
  3629  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3630  001116  0E14               	movlw	20
  3631  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3632  00111A  0E0A               	movlw	10
  3633  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3634  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3635  001120  EC40  F04B         	call	___lbdiv
  3636  001124  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  3637  001128  0012               	return	
  3638  00112A                     l24010:
  3639                           
  3640                           ; BSR set to: 1
  3641  00112A  0E05               	movlw	5
  3642  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3643  00112E  A4D8               	btfss	status,2,c
  3644  001130  D02F               	goto	l24020
  3645                           
  3646                           ; BSR set to: 1
  3647                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3648  001132  0E00               	movlw	0
  3649  001134  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3650  001136  0EC8               	movlw	200
  3651  001138  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3652                           
  3653                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3654  00113A  0E01               	movlw	1
  3655  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3656                           
  3657                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3658  00113E  0E01               	movlw	1
  3659  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3660                           
  3661                           ; BSR set to: 1
  3662                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3663  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3664  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3665  001148  EC8B  F01A         	call	_setValueToEdit
  3666  00114C  0900               	iorlw	0
  3667  00114E  B4D8               	btfsc	status,2,c
  3668  001150  0012               	return	
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3672  001152  0EBB               	movlw	low _menuConfiguration_stateMachine
  3673  001154  6E12               	movwf	sm_send_event@psm^0,c
  3674  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3675  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3676  00115A  0E00               	movlw	0
  3677  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3678  00115E  0E08               	movlw	8
  3679  001160  6E14               	movwf	sm_send_event@event^0,c
  3680  001162  EC4F  F047         	call	_sm_send_event	;wreg free
  3681                           
  3682                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3683  001166  0E0A               	movlw	10
  3684  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3685  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3686  00116C  EC40  F04B         	call	___lbdiv
  3687  001170  0DF6               	mullw	246
  3688  001172  50F3               	movf	243,w,c
  3689  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3690  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3691  001178  0E00               	movlw	0
  3692  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3693  00117C  0E14               	movlw	20
  3694  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3695  001180  0E0A               	movlw	10
  3696  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3697  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3698  001186  EC40  F04B         	call	___lbdiv
  3699  00118A  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  3700                           
  3701                           ; BSR set to: 1
  3702                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3703                           
  3704                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3705  00118E  0012               	return	
  3706  001190                     l24020:
  3707                           
  3708                           ; BSR set to: 1
  3709  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3710  001192  A4D8               	btfss	status,2,c
  3711  001194  D023               	goto	l24032
  3712                           
  3713                           ; BSR set to: 1
  3714                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3715  001196  0E00               	movlw	0
  3716  001198  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3717  00119A  0E64               	movlw	100
  3718  00119C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3719                           
  3720                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3721  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3722  0011A0  A4D8               	btfss	status,2,c
  3723  0011A2  D003               	goto	l24026
  3724                           
  3725                           ; BSR set to: 1
  3726                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3727  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3728  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3729                           
  3730                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3731  0011A8  D001               	goto	l24028
  3732  0011AA                     l24026:
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3736  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3737  0011AC                     l24028:
  3738                           
  3739                           ; BSR set to: 1
  3740                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3741  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3742  0011AE  0D02               	mullw	2
  3743  0011B0  0E52               	movlw	low (_menu_st+1)
  3744  0011B2  24F3               	addwf	243,w,c
  3745  0011B4  6ED9               	movwf	fsr2l,c
  3746  0011B6  0E01               	movlw	high (_menu_st+1)
  3747  0011B8  20F4               	addwfc	prodh,w,c
  3748  0011BA  6EDA               	movwf	fsr2h,c
  3749  0011BC  50DF               	movf	indf2,w,c
  3750  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3751  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3752  0011C2  0D02               	mullw	2
  3753  0011C4  0E51               	movlw	low _menu_st
  3754  0011C6  24F3               	addwf	243,w,c
  3755  0011C8  6ED9               	movwf	fsr2l,c
  3756  0011CA  0E01               	movlw	high _menu_st
  3757  0011CC  20F4               	addwfc	prodh,w,c
  3758  0011CE  6EDA               	movwf	fsr2h,c
  3759  0011D0  50DF               	movf	indf2,w,c
  3760  0011D2  EC4D  F04E         	call	_SetSegmentValueMain
  3761  0011D6                     l24030:
  3762                           
  3763                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3764  0011D6  0E01               	movlw	1
  3765  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3766                           
  3767                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3768  0011DA  0012               	return	
  3769  0011DC                     l24032:
  3770                           
  3771                           ; BSR set to: 1
  3772  0011DC  0E17               	movlw	23
  3773  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3774  0011E0  A4D8               	btfss	status,2,c
  3775  0011E2  D021               	goto	l24046
  3776                           
  3777                           ; BSR set to: 1
  3778                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3779  0011E4  0E00               	movlw	0
  3780  0011E6  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3781  0011E8  0E64               	movlw	100
  3782  0011EA  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3783                           
  3784                           ; BSR set to: 1
  3785                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3786  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3787                           
  3788                           ; BSR set to: 1
  3789                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3790  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3791  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3792  0011F2  A0D8               	btfss	status,0,c
  3793  0011F4  D002               	goto	l24042
  3794                           
  3795                           ; BSR set to: 1
  3796                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3797  0011F6  0E00               	movlw	0
  3798  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3799  0011FA                     l24042:
  3800                           
  3801                           ; BSR set to: 1
  3802                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3803  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3804  0011FC  0D02               	mullw	2
  3805  0011FE  0E52               	movlw	low (_menu_st+1)
  3806  001200  24F3               	addwf	243,w,c
  3807  001202  6ED9               	movwf	fsr2l,c
  3808  001204  0E01               	movlw	high (_menu_st+1)
  3809  001206  20F4               	addwfc	prodh,w,c
  3810  001208  6EDA               	movwf	fsr2h,c
  3811  00120A  50DF               	movf	indf2,w,c
  3812  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3813  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3814  001210  0D02               	mullw	2
  3815  001212  0E51               	movlw	low _menu_st
  3816  001214  24F3               	addwf	243,w,c
  3817  001216  6ED9               	movwf	fsr2l,c
  3818  001218  0E01               	movlw	high _menu_st
  3819  00121A  20F4               	addwfc	prodh,w,c
  3820  00121C  6EDA               	movwf	fsr2h,c
  3821  00121E  50DF               	movf	indf2,w,c
  3822  001220  EC4D  F04E         	call	_SetSegmentValueMain
  3823  001224  D7D8               	goto	l24030
  3824  001226                     l24046:
  3825                           
  3826                           ; BSR set to: 1
  3827  001226  0E0C               	movlw	12
  3828  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3829  00122A  D09B               	goto	l24102
  3830                           
  3831                           ; BSR set to: 1
  3832                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0x27 && button_struct.timer>(( 500/50)) )
  3833  00122C  0E27               	movlw	39
  3834  00122E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3835  001230  A4D8               	btfss	status,2,c
  3836  001232  D053               	goto	l24068
  3837                           
  3838                           ; BSR set to: 1
  3839  001234  0E0A               	movlw	10
  3840  001236  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3841  001238  D050               	goto	l24068
  3842                           
  3843                           ; BSR set to: 1
  3844                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3845  00123A  0E00               	movlw	0
  3846  00123C  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3847  00123E  0E64               	movlw	100
  3848  001240  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3849                           
  3850                           ; BSR set to: 1
  3851                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3852  001242  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3853  001246  5166               	movf	(_menu_st+21)& (0+255),w,b
  3854  001248  EC8B  F01A         	call	_setValueToEdit
  3855  00124C  0900               	iorlw	0
  3856  00124E  B4D8               	btfsc	status,2,c
  3857  001250  D7C2               	goto	l24030
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3861  001252  0EBB               	movlw	low _menuConfiguration_stateMachine
  3862  001254  6E12               	movwf	sm_send_event@psm^0,c
  3863  001256  0E02               	movlw	high _menuConfiguration_stateMachine
  3864  001258  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3865  00125A  0E00               	movlw	0
  3866  00125C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3867  00125E  0E01               	movlw	1
  3868  001260  6E14               	movwf	sm_send_event@event^0,c
  3869  001262  EC4F  F047         	call	_sm_send_event	;wreg free
  3870                           
  3871                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3872  001266  0E98               	movlw	_var_sys_NVM& (0+255)
  3873  001268  0F1C               	addlw	28
  3874  00126A  0100               	movlb	0	; () banked
  3875  00126C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3876  00126E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3877  001270  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3878  001272  E101               	bnz	u29055
  3879  001274  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3880  001276                     u29055:
  3881  001276  B4D8               	btfsc	status,2,c
  3882  001278  D009               	goto	u29060
  3883                           
  3884                           ; BSR set to: 0
  3885  00127A  0E98               	movlw	_var_sys_NVM& (0+255)
  3886  00127C  0F1B               	addlw	27
  3887  00127E  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3888  001280  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3889  001282  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3890  001284  E101               	bnz	u29065
  3891  001286  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3892  001288                     u29065:
  3893  001288  A4D8               	btfss	status,2,c
  3894  00128A  D016               	goto	l24064
  3895  00128C                     u29060:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3899  00128C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3900  00128E  0D02               	mullw	2
  3901  001290  0E52               	movlw	low (_menu_st+1)
  3902  001292  24F3               	addwf	243,w,c
  3903  001294  6ED9               	movwf	fsr2l,c
  3904  001296  0E01               	movlw	high (_menu_st+1)
  3905  001298  20F4               	addwfc	prodh,w,c
  3906  00129A  6EDA               	movwf	fsr2h,c
  3907  00129C  50DF               	movf	indf2,w,c
  3908  00129E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3909  0012A0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3910  0012A2  0D02               	mullw	2
  3911  0012A4  0E51               	movlw	low _menu_st
  3912  0012A6  24F3               	addwf	243,w,c
  3913  0012A8  6ED9               	movwf	fsr2l,c
  3914  0012AA  0E01               	movlw	high _menu_st
  3915  0012AC  20F4               	addwfc	prodh,w,c
  3916  0012AE  6EDA               	movwf	fsr2h,c
  3917  0012B0  50DF               	movf	indf2,w,c
  3918  0012B2  EC4D  F04E         	call	_SetSegmentValueMain
  3919                           
  3920                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3921  0012B6  D78F               	goto	l24030
  3922  0012B8                     l24064:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3926  0012B8  0E0A               	movlw	10
  3927  0012BA  6E10               	movwf	___lbdiv@divisor^0,c
  3928  0012BC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3929  0012BE  EC40  F04B         	call	___lbdiv
  3930  0012C2  0DF6               	mullw	246
  3931  0012C4  50F3               	movf	243,w,c
  3932  0012C6  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3933  0012C8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3934  0012CA  0E0A               	movlw	10
  3935  0012CC  6E10               	movwf	___lbdiv@divisor^0,c
  3936  0012CE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3937  0012D0  EC40  F04B         	call	___lbdiv
  3938  0012D4  EC4D  F04E         	call	_SetSegmentValueMain
  3939  0012D8  D77E               	goto	l24030
  3940  0012DA                     l24068:
  3941                           
  3942                           ; BSR set to: 1
  3943  0012DA  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3944  0012DC  D008               	goto	u29080
  3945  0012DE  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3946  0012E0  E103               	bnz	u29070
  3947  0012E2  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3948  0012E4  A0D8               	btfss	status,0,c
  3949  0012E6  D003               	goto	u29080
  3950  0012E8                     u29070:
  3951                           
  3952                           ; BSR set to: 1
  3953  0012E8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3954  0012EA  A4D8               	btfss	status,2,c
  3955  0012EC  D01E               	goto	l24086
  3956  0012EE                     u29080:
  3957                           
  3958                           ; BSR set to: 1
  3959  0012EE  0E02               	movlw	2
  3960  0012F0  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3961  0012F2  D01B               	goto	l24086
  3962                           
  3963                           ; BSR set to: 1
  3964                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3965  0012F4  0E00               	movlw	0
  3966  0012F6  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3967  0012F8  0E00               	movlw	0
  3968  0012FA  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3972  0012FC  0EF2               	movlw	low _main_stateMachine
  3973  0012FE  6E12               	movwf	sm_send_event@psm^0,c
  3974  001300  0E01               	movlw	high _main_stateMachine
  3975  001302  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3976  001304  0E00               	movlw	0
  3977  001306  6E15               	movwf	(sm_send_event@event+1)^0,c
  3978  001308  0E07               	movlw	7
  3979  00130A  6E14               	movwf	sm_send_event@event^0,c
  3980  00130C  EC4F  F047         	call	_sm_send_event	;wreg free
  3981                           
  3982                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3983  001310  0E18               	movlw	24
  3984  001312  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3985  001314  0E18               	movlw	24
  3986  001316  EC4D  F04E         	call	_SetSegmentValueMain
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3990  00131A  0E00               	movlw	0
  3991  00131C  0101               	movlb	1	; () banked
  3992  00131E  6F69               	movwf	(_menu_st+24)& (0+255),b
  3993                           
  3994                           ; BSR set to: 1
  3995                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3996  001320  0E01               	movlw	1
  3997  001322  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  4001  001324  ECA0  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4002                           
  4003                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  4004  001328  0012               	return	
  4005  00132A                     l24086:
  4006                           
  4007                           ; BSR set to: 1
  4008  00132A  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4009  00132C  D008               	goto	u29110
  4010  00132E  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4011  001330  E103               	bnz	u29100
  4012  001332  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4013  001334  A0D8               	btfss	status,0,c
  4014  001336  D003               	goto	u29110
  4015  001338                     u29100:
  4016                           
  4017                           ; BSR set to: 1
  4018  001338  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4019  00133A  A4D8               	btfss	status,2,c
  4020  00133C  D004               	goto	l24094
  4021  00133E                     u29110:
  4022                           
  4023                           ; BSR set to: 1
  4024                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4025  00133E  5165               	movf	(_menu_st+20)& (0+255),w,b
  4026  001340  ECD5  F024         	call	_load_New_Menu
  4027  001344  D748               	goto	l24030
  4028  001346                     l24094:
  4029                           
  4030                           ; BSR set to: 1
  4031  001346  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4032  001348  D005               	goto	u29120
  4033  00134A  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4034  00134C  E102               	bnz	u29121
  4035  00134E  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4036  001350  B0D8               	btfsc	status,0,c
  4037  001352                     u29121:
  4038  001352  0012               	return	
  4039  001354                     u29120:
  4040                           
  4041                           ; BSR set to: 1
  4042  001354  0E01               	movlw	1
  4043  001356  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  4044  001358  0012               	return	
  4045                           
  4046                           ; BSR set to: 1
  4047                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  4048  00135A  5165               	movf	(_menu_st+20)& (0+255),w,b
  4049  00135C  ECD5  F024         	call	_load_New_Menu
  4050  001360  D73A               	goto	l24030
  4051  001362                     l24102:
  4052                           
  4053                           ; BSR set to: 1
  4054  001362  0E07               	movlw	7
  4055  001364  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4056  001366  A4D8               	btfss	status,2,c
  4057  001368  D032               	goto	l24118
  4058                           
  4059                           ; BSR set to: 1
  4060  00136A  0E0A               	movlw	10
  4061  00136C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4062  00136E  D02F               	goto	l24118
  4063                           
  4064                           ; BSR set to: 1
  4065  001370  0E0D               	movlw	13
  4066  001372  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4067  001374  B4D8               	btfsc	status,2,c
  4068  001376  D02B               	goto	l24118
  4069                           
  4070                           ; BSR set to: 1
  4071                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4072  001378  0E00               	movlw	0
  4073  00137A  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4074  00137C  0E64               	movlw	100
  4075  00137E  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4076                           
  4077                           ; BSR set to: 1
  4078                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4079  001380  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4080  001384  5166               	movf	(_menu_st+21)& (0+255),w,b
  4081  001386  EC8B  F01A         	call	_setValueToEdit
  4082  00138A  0900               	iorlw	0
  4083  00138C  B4D8               	btfsc	status,2,c
  4084  00138E  D723               	goto	l24030
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4088  001390  0EBB               	movlw	low _menuConfiguration_stateMachine
  4089  001392  6E12               	movwf	sm_send_event@psm^0,c
  4090  001394  0E02               	movlw	high _menuConfiguration_stateMachine
  4091  001396  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4092  001398  0E00               	movlw	0
  4093  00139A  6E15               	movwf	(sm_send_event@event+1)^0,c
  4094  00139C  0E08               	movlw	8
  4095  00139E  6E14               	movwf	sm_send_event@event^0,c
  4096  0013A0  EC4F  F047         	call	_sm_send_event	;wreg free
  4097                           
  4098                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4099  0013A4  0E0A               	movlw	10
  4100  0013A6  6E10               	movwf	___lbdiv@divisor^0,c
  4101  0013A8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4102  0013AA  EC40  F04B         	call	___lbdiv
  4103  0013AE  0DF6               	mullw	246
  4104  0013B0  50F3               	movf	243,w,c
  4105  0013B2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4106  0013B4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4107  0013B6  0E00               	movlw	0
  4108  0013B8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4109  0013BA  0E14               	movlw	20
  4110  0013BC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4111  0013BE  0E0A               	movlw	10
  4112  0013C0  6E10               	movwf	___lbdiv@divisor^0,c
  4113  0013C2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4114  0013C4  EC40  F04B         	call	___lbdiv
  4115  0013C8  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  4116  0013CC  D704               	goto	l24030
  4117  0013CE                     l24118:
  4118                           
  4119                           ; BSR set to: 1
  4120  0013CE  0E0D               	movlw	13
  4121  0013D0  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4122  0013D2  A4D8               	btfss	status,2,c
  4123  0013D4  D027               	goto	l24136
  4124                           
  4125                           ; BSR set to: 1
  4126  0013D6  51AB               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4127  0013D8  11AC               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4128  0013DA  A4D8               	btfss	status,2,c
  4129  0013DC  D023               	goto	l24136
  4130                           
  4131                           ; BSR set to: 1
  4132                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4133  0013DE  0E00               	movlw	0
  4134  0013E0  0100               	movlb	0	; () banked
  4135  0013E2  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4136                           
  4137                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4138  0013E4  0E00               	movlw	0
  4139  0013E6  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4140                           
  4141                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4142  0013E8  0E00               	movlw	0
  4143  0013EA  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4147  0013EC  0E02               	movlw	2
  4148  0013EE  EC5D  F04B         	call	_SaveNVM_VarSystem
  4149                           
  4150                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4151  0013F2  0EF2               	movlw	low _main_stateMachine
  4152  0013F4  6E12               	movwf	sm_send_event@psm^0,c
  4153  0013F6  0E01               	movlw	high _main_stateMachine
  4154  0013F8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4155  0013FA  0E00               	movlw	0
  4156  0013FC  6E15               	movwf	(sm_send_event@event+1)^0,c
  4157  0013FE  0E07               	movlw	7
  4158  001400  6E14               	movwf	sm_send_event@event^0,c
  4159  001402  EC4F  F047         	call	_sm_send_event	;wreg free
  4160                           
  4161                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4162  001406  0E18               	movlw	24
  4163  001408  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4164  00140A  0E18               	movlw	24
  4165  00140C  EC4D  F04E         	call	_SetSegmentValueMain
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4169  001410  0E01               	movlw	1
  4170  001412  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4171  001414                     l24132:
  4172                           
  4173                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4174  001414  ECA0  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4175  001418                     l24134:
  4176                           
  4177                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4178  001418  0E00               	movlw	0
  4179  00141A  0101               	movlb	1	; () banked
  4180  00141C  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4181  00141E  0E00               	movlw	0
  4182  001420  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4183                           
  4184                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4185  001422  0012               	return	
  4186  001424                     l24136:
  4187                           
  4188                           ; BSR set to: 1
  4189  001424  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4190  001426  D008               	goto	u29210
  4191  001428  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4192  00142A  E103               	bnz	u29200
  4193  00142C  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4194  00142E  A0D8               	btfss	status,0,c
  4195  001430  D003               	goto	u29210
  4196  001432                     u29200:
  4197                           
  4198                           ; BSR set to: 1
  4199  001432  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4200  001434  A4D8               	btfss	status,2,c
  4201  001436  0012               	return	
  4202  001438                     u29210:
  4203                           
  4204                           ; BSR set to: 1
  4205                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4206  001438  0EF2               	movlw	low _main_stateMachine
  4207  00143A  6E12               	movwf	sm_send_event@psm^0,c
  4208  00143C  0E01               	movlw	high _main_stateMachine
  4209  00143E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4210  001440  0E00               	movlw	0
  4211  001442  6E15               	movwf	(sm_send_event@event+1)^0,c
  4212  001444  0E07               	movlw	7
  4213  001446  6E14               	movwf	sm_send_event@event^0,c
  4214  001448  EC4F  F047         	call	_sm_send_event	;wreg free
  4215                           
  4216                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4217  00144C  0E18               	movlw	24
  4218  00144E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4219  001450  0E18               	movlw	24
  4220  001452  EC4D  F04E         	call	_SetSegmentValueMain
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4224  001456  ECA0  F04F         	call	_ClearFlag_rfCMD	;wreg free
  4225                           
  4226                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4227  00145A  0E01               	movlw	1
  4228  00145C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4229  00145E  D7DC               	goto	l24134
  4230  001460                     l24150:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4234  001460  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4235  001462  A4D8               	btfss	status,2,c
  4236  001464  D047               	goto	l24170
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4240  001466  0E00               	movlw	0
  4241  001468  0101               	movlb	1	; () banked
  4242  00146A  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4243  00146C  0E64               	movlw	100
  4244  00146E  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4245                           
  4246                           ; BSR set to: 1
  4247                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4248  001470  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4249  001472  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4250  001474  A0D8               	btfss	status,0,c
  4251  001476  D003               	goto	l24158
  4252                           
  4253                           ; BSR set to: 1
  4254                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4255  001478  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4256                           
  4257                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4258  00147C  D001               	goto	l24160
  4259  00147E                     l24158:
  4260                           
  4261                           ; BSR set to: 1
  4262                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4263  00147E  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4264  001480                     l24160:
  4265                           
  4266                           ; BSR set to: 1
  4267                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4268  001480  0E98               	movlw	_var_sys_NVM& (0+255)
  4269  001482  0F1C               	addlw	28
  4270  001484  0100               	movlb	0	; () banked
  4271  001486  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4272  001488  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4273  00148A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4274  00148C  E101               	bnz	u29245
  4275  00148E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4276  001490                     u29245:
  4277  001490  B4D8               	btfsc	status,2,c
  4278  001492  D009               	goto	u29250
  4279                           
  4280                           ; BSR set to: 0
  4281  001494  0E98               	movlw	_var_sys_NVM& (0+255)
  4282  001496  0F1B               	addlw	27
  4283  001498  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4284  00149A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4285  00149C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4286  00149E  E101               	bnz	u29255
  4287  0014A0  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4288  0014A2                     u29255:
  4289  0014A2  A4D8               	btfss	status,2,c
  4290  0014A4  D016               	goto	l24166
  4291  0014A6                     u29250:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4295  0014A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4296  0014A8  0D02               	mullw	2
  4297  0014AA  0E52               	movlw	low (_menu_st+1)
  4298  0014AC  24F3               	addwf	243,w,c
  4299  0014AE  6ED9               	movwf	fsr2l,c
  4300  0014B0  0E01               	movlw	high (_menu_st+1)
  4301  0014B2  20F4               	addwfc	prodh,w,c
  4302  0014B4  6EDA               	movwf	fsr2h,c
  4303  0014B6  50DF               	movf	indf2,w,c
  4304  0014B8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4305  0014BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4306  0014BC  0D02               	mullw	2
  4307  0014BE  0E51               	movlw	low _menu_st
  4308  0014C0  24F3               	addwf	243,w,c
  4309  0014C2  6ED9               	movwf	fsr2l,c
  4310  0014C4  0E01               	movlw	high _menu_st
  4311  0014C6  20F4               	addwfc	prodh,w,c
  4312  0014C8  6EDA               	movwf	fsr2h,c
  4313  0014CA  50DF               	movf	indf2,w,c
  4314  0014CC  EC4D  F04E         	call	_SetSegmentValueMain
  4315                           
  4316                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4317  0014D0  D682               	goto	l24030
  4318  0014D2                     l24166:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4322  0014D2  0E0A               	movlw	10
  4323  0014D4  6E10               	movwf	___lbdiv@divisor^0,c
  4324  0014D6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4325  0014D8  EC40  F04B         	call	___lbdiv
  4326  0014DC  0DF6               	mullw	246
  4327  0014DE  50F3               	movf	243,w,c
  4328  0014E0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4329  0014E2  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4330  0014E4  0E0A               	movlw	10
  4331  0014E6  6E10               	movwf	___lbdiv@divisor^0,c
  4332  0014E8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4333  0014EA  EC40  F04B         	call	___lbdiv
  4334  0014EE  EC4D  F04E         	call	_SetSegmentValueMain
  4335  0014F2  D671               	goto	l24030
  4336  0014F4                     l24170:
  4337                           
  4338                           ; BSR set to: 0
  4339  0014F4  0E17               	movlw	23
  4340  0014F6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4341  0014F8  A4D8               	btfss	status,2,c
  4342  0014FA  D045               	goto	l24190
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4346  0014FC  0E00               	movlw	0
  4347  0014FE  0101               	movlb	1	; () banked
  4348  001500  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4349  001502  0E64               	movlw	100
  4350  001504  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4351                           
  4352                           ; BSR set to: 1
  4353                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4354  001506  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4358  001508  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4359  00150A  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4360  00150C  A0D8               	btfss	status,0,c
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4364  00150E  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4365                           
  4366                           ; BSR set to: 1
  4367                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4368  001512  0E98               	movlw	_var_sys_NVM& (0+255)
  4369  001514  0F1C               	addlw	28
  4370  001516  0100               	movlb	0	; () banked
  4371  001518  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4372  00151A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4373  00151C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4374  00151E  E101               	bnz	u29285
  4375  001520  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4376  001522                     u29285:
  4377  001522  B4D8               	btfsc	status,2,c
  4378  001524  D009               	goto	u29290
  4379                           
  4380                           ; BSR set to: 0
  4381  001526  0E98               	movlw	_var_sys_NVM& (0+255)
  4382  001528  0F1B               	addlw	27
  4383  00152A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4384  00152C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4385  00152E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4386  001530  E101               	bnz	u29295
  4387  001532  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4388  001534                     u29295:
  4389  001534  A4D8               	btfss	status,2,c
  4390  001536  D016               	goto	l24186
  4391  001538                     u29290:
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4395  001538  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4396  00153A  0D02               	mullw	2
  4397  00153C  0E52               	movlw	low (_menu_st+1)
  4398  00153E  24F3               	addwf	243,w,c
  4399  001540  6ED9               	movwf	fsr2l,c
  4400  001542  0E01               	movlw	high (_menu_st+1)
  4401  001544  20F4               	addwfc	prodh,w,c
  4402  001546  6EDA               	movwf	fsr2h,c
  4403  001548  50DF               	movf	indf2,w,c
  4404  00154A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4405  00154C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4406  00154E  0D02               	mullw	2
  4407  001550  0E51               	movlw	low _menu_st
  4408  001552  24F3               	addwf	243,w,c
  4409  001554  6ED9               	movwf	fsr2l,c
  4410  001556  0E01               	movlw	high _menu_st
  4411  001558  20F4               	addwfc	prodh,w,c
  4412  00155A  6EDA               	movwf	fsr2h,c
  4413  00155C  50DF               	movf	indf2,w,c
  4414  00155E  EC4D  F04E         	call	_SetSegmentValueMain
  4415                           
  4416                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4417  001562  D639               	goto	l24030
  4418  001564                     l24186:
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4422  001564  0E0A               	movlw	10
  4423  001566  6E10               	movwf	___lbdiv@divisor^0,c
  4424  001568  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4425  00156A  EC40  F04B         	call	___lbdiv
  4426  00156E  0DF6               	mullw	246
  4427  001570  50F3               	movf	243,w,c
  4428  001572  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4429  001574  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4430  001576  0E0A               	movlw	10
  4431  001578  6E10               	movwf	___lbdiv@divisor^0,c
  4432  00157A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4433  00157C  EC40  F04B         	call	___lbdiv
  4434  001580  EC4D  F04E         	call	_SetSegmentValueMain
  4435  001584  D628               	goto	l24030
  4436  001586                     l24190:
  4437                           
  4438                           ; BSR set to: 0
  4439  001586  0E27               	movlw	39
  4440  001588  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4441  00158A  A4D8               	btfss	status,2,c
  4442  00158C  D023               	goto	l24206
  4443                           
  4444                           ; BSR set to: 0
  4445  00158E  0E09               	movlw	9
  4446  001590  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4447  001592  D020               	goto	l24206
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4451  001594  0E00               	movlw	0
  4452  001596  0101               	movlb	1	; () banked
  4453  001598  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4454  00159A  0E64               	movlw	100
  4455  00159C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4456                           
  4457                           ; BSR set to: 1
  4458                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4459  00159E  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4460  0015A2  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4461  0015A6  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4462                           
  4463                           ; BSR set to: 1
  4464                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4465  0015AA  0EBB               	movlw	low _menuConfiguration_stateMachine
  4466  0015AC  6E12               	movwf	sm_send_event@psm^0,c
  4467  0015AE  0E02               	movlw	high _menuConfiguration_stateMachine
  4468  0015B0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4469  0015B2  0E00               	movlw	0
  4470  0015B4  6E15               	movwf	(sm_send_event@event+1)^0,c
  4471  0015B6  0E02               	movlw	2
  4472  0015B8  6E14               	movwf	sm_send_event@event^0,c
  4473  0015BA  EC4F  F047         	call	_sm_send_event	;wreg free
  4474                           
  4475                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4476  0015BE  0E01               	movlw	1
  4477  0015C0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4478  0015C2  0E19               	movlw	25
  4479  0015C4  EC4D  F04E         	call	_SetSegmentValueMain
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4483  0015C8  0E00               	movlw	0
  4484  0015CA  0101               	movlb	1	; () banked
  4485  0015CC  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4486  0015CE  0E28               	movlw	40
  4487  0015D0  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4488  0015D2  D601               	goto	l24030
  4489  0015D4                     l24206:
  4490                           
  4491                           ; BSR set to: 0
  4492  0015D4  0101               	movlb	1	; () banked
  4493  0015D6  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4494  0015D8  D008               	goto	u29330
  4495  0015DA  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4496  0015DC  E103               	bnz	u29320
  4497  0015DE  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4498  0015E0  A0D8               	btfss	status,0,c
  4499  0015E2  D003               	goto	u29330
  4500  0015E4                     u29320:
  4501                           
  4502                           ; BSR set to: 1
  4503  0015E4  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4504  0015E6  A4D8               	btfss	status,2,c
  4505  0015E8  0012               	return	
  4506  0015EA                     u29330:
  4507                           
  4508                           ; BSR set to: 1
  4509                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4510  0015EA  0E00               	movlw	0
  4511  0015EC  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4512  0015EE  0E64               	movlw	100
  4513  0015F0  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4514                           
  4515                           ; BSR set to: 1
  4516                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4517  0015F2  5166               	movf	(_menu_st+21)& (0+255),w,b
  4518  0015F4  ECD5  F024         	call	_load_New_Menu
  4519                           
  4520                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4521  0015F8  0EBB               	movlw	low _menuConfiguration_stateMachine
  4522  0015FA  6E12               	movwf	sm_send_event@psm^0,c
  4523  0015FC  0E02               	movlw	high _menuConfiguration_stateMachine
  4524  0015FE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4525  001600  0E00               	movlw	0
  4526  001602  6E15               	movwf	(sm_send_event@event+1)^0,c
  4527  001604  0E03               	movlw	3
  4528  001606  6E14               	movwf	sm_send_event@event^0,c
  4529  001608  EC4F  F047         	call	_sm_send_event	;wreg free
  4530  00160C  D5E4               	goto	l24030
  4531  00160E                     l24218:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4535  00160E  0101               	movlb	1	; () banked
  4536  001610  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4537  001612  D005               	goto	u29340
  4538  001614  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4539  001616  E102               	bnz	u29341
  4540  001618  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4541  00161A  B0D8               	btfsc	status,0,c
  4542  00161C                     u29341:
  4543  00161C  0012               	return	
  4544  00161E                     u29340:
  4545                           
  4546                           ; BSR set to: 1
  4547                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4548  00161E  0E00               	movlw	0
  4549  001620  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4550  001622  0E64               	movlw	100
  4551  001624  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4552                           
  4553                           ; BSR set to: 1
  4554                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4555  001626  0566               	decf	(_menu_st+21)& (0+255),w,b
  4556  001628  A4D8               	btfss	status,2,c
  4557  00162A  D004               	goto	u29360
  4558                           
  4559                           ; BSR set to: 1
  4560  00162C  0E08               	movlw	8
  4561  00162E  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4562  001630  B4D8               	btfsc	status,2,c
  4563  001632  D00A               	goto	u29370
  4564  001634                     u29360:
  4565                           
  4566                           ; BSR set to: 1
  4567  001634  0E98               	movlw	_var_sys_NVM& (0+255)
  4568  001636  0F1C               	addlw	28
  4569  001638  0100               	movlb	0	; () banked
  4570  00163A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4571  00163C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4572  00163E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4573  001640  E101               	bnz	u29375
  4574  001642  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4575  001644                     u29375:
  4576  001644  A4D8               	btfss	status,2,c
  4577  001646  D005               	goto	l24230
  4578  001648                     u29370:
  4579                           
  4580                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4581  001648  0100               	movlb	0	; () banked
  4582  00164A  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4583  00164C  EC07  F034         	call	_ResetDefaultMemory
  4584                           
  4585                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4586  001650  D023               	goto	l24248
  4587  001652                     l24230:
  4588                           
  4589                           ; BSR set to: 0
  4590  001652  0101               	movlb	1	; () banked
  4591  001654  0566               	decf	(_menu_st+21)& (0+255),w,b
  4592  001656  B4D8               	btfsc	status,2,c
  4593  001658  D004               	goto	u29390
  4594                           
  4595                           ; BSR set to: 1
  4596  00165A  0E0A               	movlw	10
  4597  00165C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4598  00165E  A4D8               	btfss	status,2,c
  4599  001660  D004               	goto	l24236
  4600  001662                     u29390:
  4601                           
  4602                           ; BSR set to: 1
  4603                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4604  001662  0E01               	movlw	1
  4605  001664  EC5D  F04B         	call	_SaveNVM_VarSystem
  4606                           
  4607                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4608  001668  D017               	goto	l24248
  4609  00166A                     l24236:
  4610                           
  4611                           ; BSR set to: 1
  4612                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4613  00166A  0568               	decf	(_menu_st+23)& (0+255),w,b
  4614  00166C  A4D8               	btfss	status,2,c
  4615  00166E  D00E               	goto	l24244
  4616                           
  4617                           ; BSR set to: 1
  4618  001670  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4619  001674  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4620  001678  50DF               	movf	indf2,w,c
  4621  00167A  B4D8               	btfsc	status,2,c
  4622  00167C  D007               	goto	l24244
  4623                           
  4624                           ; BSR set to: 1
  4625  00167E  0E06               	movlw	6
  4626  001680  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4627  001682  A4D8               	btfss	status,2,c
  4628  001684  D003               	goto	l24244
  4629                           
  4630                           ; BSR set to: 1
  4631                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4632  001686  0E09               	movlw	9
  4633  001688  0100               	movlb	0	; () banked
  4634  00168A  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4635  00168C                     l24244:
  4636                           
  4637                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4638  00168C  0E01               	movlw	1
  4639  00168E  EC5D  F04B         	call	_SaveNVM_VarSystem
  4640                           
  4641                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4642  001692  0E00               	movlw	0
  4643  001694  EC5D  F04B         	call	_SaveNVM_VarSystem
  4644  001698                     l24248:
  4645                           
  4646                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4647  001698  0EBB               	movlw	low _menuConfiguration_stateMachine
  4648  00169A  6E12               	movwf	sm_send_event@psm^0,c
  4649  00169C  0E02               	movlw	high _menuConfiguration_stateMachine
  4650  00169E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4651  0016A0  0E00               	movlw	0
  4652  0016A2  6E15               	movwf	(sm_send_event@event+1)^0,c
  4653  0016A4  0E04               	movlw	4
  4654  0016A6  6E14               	movwf	sm_send_event@event^0,c
  4655  0016A8  EC4F  F047         	call	_sm_send_event	;wreg free
  4656                           
  4657                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4658  0016AC  0101               	movlb	1	; () banked
  4659  0016AE  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4660                           
  4661                           ; BSR set to: 1
  4662                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4663  0016B0  0E02               	movlw	2
  4664  0016B2  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4665  0016B4  D005               	goto	l24258
  4666                           
  4667                           ; BSR set to: 1
  4668                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4669  0016B6  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4670                           
  4671                           ; BSR set to: 1
  4672                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4673  0016B8  5166               	movf	(_menu_st+21)& (0+255),w,b
  4674  0016BA  ECD5  F024         	call	_load_New_Menu
  4675                           
  4676                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4677  0016BE  0012               	return	
  4678  0016C0                     l24258:
  4679                           
  4680                           ; BSR set to: 1
  4681  0016C0  5167               	movf	(_menu_st+22)& (0+255),w,b
  4682  0016C2  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4683  0016C4  A0D8               	btfss	status,0,c
  4684  0016C6  D005               	goto	l24264
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4688  0016C8  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4689                           
  4690                           ; BSR set to: 1
  4691                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4692  0016CA  5165               	movf	(_menu_st+20)& (0+255),w,b
  4693  0016CC  ECD5  F024         	call	_load_New_Menu
  4694                           
  4695                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4696  0016D0  0012               	return	
  4697  0016D2                     l24264:
  4698                           
  4699                           ; BSR set to: 1
  4700                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4701  0016D2  5166               	movf	(_menu_st+21)& (0+255),w,b
  4702  0016D4  ECD5  F024         	call	_load_New_Menu
  4703  0016D8  0012               	return	
  4704  0016DA                     l24266:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4708  0016DA  0101               	movlb	1	; () banked
  4709  0016DC  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4710  0016DE  D005               	goto	u29450
  4711  0016E0  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4712  0016E2  E102               	bnz	u29451
  4713  0016E4  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4714  0016E6  B0D8               	btfsc	status,0,c
  4715  0016E8                     u29451:
  4716  0016E8  0012               	return	
  4717  0016EA                     u29450:
  4718                           
  4719                           ; BSR set to: 1
  4720                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4721  0016EA  0100               	movlb	0	; () banked
  4722  0016EC  51FC               	movf	_auxCounter& (0+255),w,b
  4723  0016EE  11FD               	iorwf	(_auxCounter+1)& (0+255),w,b
  4724  0016F0  A4D8               	btfss	status,2,c
  4725  0016F2  D010               	goto	l24276
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4729  0016F4  0101               	movlb	1	; () banked
  4730  0016F6  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4731                           
  4732                           ; BSR set to: 1
  4733                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4734  0016F8  5166               	movf	(_menu_st+21)& (0+255),w,b
  4735  0016FA  ECD5  F024         	call	_load_New_Menu
  4736                           
  4737                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4738  0016FE  0EBB               	movlw	low _menuConfiguration_stateMachine
  4739  001700  6E12               	movwf	sm_send_event@psm^0,c
  4740  001702  0E02               	movlw	high _menuConfiguration_stateMachine
  4741  001704  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4742  001706  0E00               	movlw	0
  4743  001708  6E15               	movwf	(sm_send_event@event+1)^0,c
  4744  00170A  0E04               	movlw	4
  4745  00170C  6E14               	movwf	sm_send_event@event^0,c
  4746  00170E  EC4F  F047         	call	_sm_send_event	;wreg free
  4747                           
  4748                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4749  001712  0012               	return	
  4750  001714                     l24276:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4754  001714  0E00               	movlw	0
  4755  001716  0101               	movlb	1	; () banked
  4756  001718  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4757  00171A  0E3C               	movlw	60
  4758  00171C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4759                           
  4760                           ; BSR set to: 1
  4761                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4762  00171E  C2F4  F010         	movff	_tempCounter,___lldiv@dividend
  4763  001722  C2F5  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4764  001726  C2F6  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4765  00172A  C2F7  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4766  00172E  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4767  001732  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4768  001736  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4769  001738  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4770  00173A  EC14  F043         	call	___lldiv	;wreg free
  4771  00173E  5010               	movf	?___lldiv^0,w,c
  4772  001740  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4773                           
  4774                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4775  001742  C0FC  F014         	movff	_auxCounter,___lldiv@divisor
  4776  001746  C0FD  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4777  00174A  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4778  00174C  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4779  00174E  C2F4  F010         	movff	_tempCounter,___lldiv@dividend
  4780  001752  C2F5  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4781  001756  C2F6  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4782  00175A  C2F7  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4783  00175E  EC14  F043         	call	___lldiv	;wreg free
  4784  001762  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4785  001766  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4786  00176A  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4787  00176E  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4788  001772  C0FC  F021         	movff	_auxCounter,___lmul@multiplicand
  4789  001776  C0FD  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4790  00177A  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4791  00177C  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4792  00177E  EC8A  F048         	call	___lmul	;wreg free
  4793  001782  501D               	movf	?___lmul^0,w,c
  4794  001784  0102               	movlb	2	; () banked
  4795  001786  5DF4               	subwf	_tempCounter& (0+255),w,b
  4796  001788  6FF4               	movwf	_tempCounter& (0+255),b
  4797  00178A  501E               	movf	(?___lmul+1)^0,w,c
  4798  00178C  59F5               	subwfb	(_tempCounter+1)& (0+255),w,b
  4799  00178E  6FF5               	movwf	(_tempCounter+1)& (0+255),b
  4800  001790  501F               	movf	(?___lmul+2)^0,w,c
  4801  001792  59F6               	subwfb	(_tempCounter+2)& (0+255),w,b
  4802  001794  6FF6               	movwf	(_tempCounter+2)& (0+255),b
  4803  001796  5020               	movf	(?___lmul+3)^0,w,c
  4804  001798  59F7               	subwfb	(_tempCounter+3)& (0+255),w,b
  4805  00179A  6FF7               	movwf	(_tempCounter+3)& (0+255),b
  4806                           
  4807                           ; BSR set to: 2
  4808                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4809  00179C  C0FC  F010         	movff	_auxCounter,___lwdiv@dividend
  4810  0017A0  C0FD  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4811  0017A4  0E00               	movlw	0
  4812  0017A6  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4813  0017A8  0E64               	movlw	100
  4814  0017AA  6E12               	movwf	___lwdiv@divisor^0,c
  4815  0017AC  EC0A  F049         	call	___lwdiv	;wreg free
  4816  0017B0  C010  F0FC         	movff	?___lwdiv,_auxCounter
  4817  0017B4  C011  F0FD         	movff	?___lwdiv+1,_auxCounter+1
  4818                           
  4819                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4820  0017B8  0E0A               	movlw	10
  4821  0017BA  6E10               	movwf	___lbdiv@divisor^0,c
  4822  0017BC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4823  0017BE  EC40  F04B         	call	___lbdiv
  4824  0017C2  0DF6               	mullw	246
  4825  0017C4  50F3               	movf	243,w,c
  4826  0017C6  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4827  0017C8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4828  0017CA  0E00               	movlw	0
  4829  0017CC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4830  0017CE  0E0A               	movlw	10
  4831  0017D0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4832  0017D2  0E0A               	movlw	10
  4833  0017D4  6E10               	movwf	___lbdiv@divisor^0,c
  4834  0017D6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4835  0017D8  EC40  F04B         	call	___lbdiv
  4836  0017DC  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  4837  0017E0  0012               	return	
  4838  0017E2                     l24286:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4842  0017E2  0101               	movlb	1	; () banked
  4843  0017E4  05FF               	decf	_firstselectflag& (0+255),w,b
  4844  0017E6  A4D8               	btfss	status,2,c
  4845  0017E8  D004               	goto	l24290
  4846                           
  4847                           ; BSR set to: 1
  4848                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4849  0017EA  0E00               	movlw	0
  4850  0017EC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4851                           
  4852                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4853  0017EE  0E00               	movlw	0
  4854  0017F0  6FFF               	movwf	_firstselectflag& (0+255),b
  4855  0017F2                     l24290:
  4856                           
  4857                           ; BSR set to: 1
  4858                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4859  0017F2  ECAD  F01F         	call	_controlSelectRemote	;wreg free
  4860                           
  4861                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4862  0017F6  0012               	return	
  4863  0017F8                     l24292:
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4867  0017F8  EC60  F03E         	call	_controlSaveRemote	;wreg free
  4868                           
  4869                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4870  0017FC  0012               	return	
  4871  0017FE                     l24294:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4875  0017FE  ECDE  F04B         	call	_controlLearnDigit	;wreg free
  4876                           
  4877                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4878  001802  0101               	movlb	1	; () banked
  4879  001804  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4880  001806  A4D8               	btfss	status,2,c
  4881  001808  0012               	return	
  4882                           
  4883                           ; BSR set to: 1
  4884                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4885  00180A  0EF2               	movlw	low _main_stateMachine
  4886  00180C  6E12               	movwf	sm_send_event@psm^0,c
  4887  00180E  0E01               	movlw	high _main_stateMachine
  4888  001810  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4889  001812  0E00               	movlw	0
  4890  001814  6E15               	movwf	(sm_send_event@event+1)^0,c
  4891  001816  0E07               	movlw	7
  4892  001818  6E14               	movwf	sm_send_event@event^0,c
  4893  00181A  EC4F  F047         	call	_sm_send_event	;wreg free
  4894                           
  4895                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4896  00181E  0EBB               	movlw	low _menuConfiguration_stateMachine
  4897  001820  6E12               	movwf	sm_send_event@psm^0,c
  4898  001822  0E02               	movlw	high _menuConfiguration_stateMachine
  4899  001824  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4900  001826  0E00               	movlw	0
  4901  001828  6E15               	movwf	(sm_send_event@event+1)^0,c
  4902  00182A  0E04               	movlw	4
  4903  00182C  6E14               	movwf	sm_send_event@event^0,c
  4904  00182E  EC4F  F047         	call	_sm_send_event	;wreg free
  4905                           
  4906                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4907  001832  0E18               	movlw	24
  4908  001834  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4909  001836  0E18               	movlw	24
  4910  001838  EC4D  F04E         	call	_SetSegmentValueMain
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4914  00183C  0E02               	movlw	2
  4915  00183E  EC5D  F04B         	call	_SaveNVM_VarSystem
  4916  001842  D5E8               	goto	l24132
  4917  001844                     l24310:
  4918  001844  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4919  001848  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4920  00184C  50DF               	movf	indf2,w,c
  4921  00184E  0100               	movlb	0	; () banked
  4922  001850  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4923  001852  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4924                           
  4925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4926                           ; Switch size 1, requested type "simple"
  4927                           ; Number of cases is 1, Range of values is 0 to 0
  4928                           ; switch strategies available:
  4929                           ; Name         Instructions Cycles
  4930                           ; simple_byte            4     3 (average)
  4931                           ;	Chosen strategy is simple_byte
  4932  001854  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4933  001856  0A00               	xorlw	0	; case 0
  4934  001858  A4D8               	btfss	status,2,c
  4935  00185A  0012               	return	
  4936                           
  4937                           ; BSR set to: 0
  4938                           ; Switch size 1, requested type "simple"
  4939                           ; Number of cases is 7, Range of values is 0 to 6
  4940                           ; switch strategies available:
  4941                           ; Name         Instructions Cycles
  4942                           ; simple_byte           22    12 (average)
  4943                           ;	Chosen strategy is simple_byte
  4944  00185C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4945  00185E  0A00               	xorlw	0	; case 0
  4946  001860  B4D8               	btfsc	status,2,c
  4947  001862  D42F               	goto	l24000
  4948  001864  0A01               	xorlw	1	; case 1
  4949  001866  B4D8               	btfsc	status,2,c
  4950  001868  D5FB               	goto	l24150
  4951  00186A  0A03               	xorlw	3	; case 2
  4952  00186C  B4D8               	btfsc	status,2,c
  4953  00186E  D6CF               	goto	l24218
  4954  001870  0A01               	xorlw	1	; case 3
  4955  001872  B4D8               	btfsc	status,2,c
  4956  001874  D732               	goto	l24266
  4957  001876  0A07               	xorlw	7	; case 4
  4958  001878  B4D8               	btfsc	status,2,c
  4959  00187A  D7B3               	goto	l24286
  4960  00187C  0A01               	xorlw	1	; case 5
  4961  00187E  B4D8               	btfsc	status,2,c
  4962  001880  D7BB               	goto	l24292
  4963  001882  0A03               	xorlw	3	; case 6
  4964  001884  A4D8               	btfss	status,2,c
  4965  001886  0012               	return	
  4966  001888  D7BA               	goto	l24294
  4967  00188A                     __end_of_sm_execute_menuConfiguration:
  4968                           	callstack 0
  4969                           
  4970 ;; *************** function _setValueToEdit *****************
  4971 ;; Defined at:
  4972 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  menuType        1    wreg     enum E10813
  4975 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  menuType        1    6[BANK0 ] enum E10813
  4978 ;;  posindex        1    8[BANK0 ] unsigned char 
  4979 ;;  posindex        1    7[BANK0 ] unsigned char 
  4980 ;;  haveValueToE    1    9[BANK0 ] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      unsigned char 
  4983 ;; Registers used:
  4984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 3F/1
  4987 ;;		On exit  : 3F/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4991 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4993 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4994 ;;Total ram usage:        7 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; Hardware stack levels required when called: 14
  4997 ;; This function calls:
  4998 ;;		_InitReceiver
  4999 ;;		_SaveNVM_VarSystem
  5000 ;;		_cmdMemoryIsEmpty
  5001 ;;		_load_New_Menu
  5002 ;;		_sm_send_event
  5003 ;; This function is called by:
  5004 ;;		_sm_execute_menuConfiguration
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text3
  5009  003516                     __ptext3:
  5010                           	callstack 0
  5011  003516                     _setValueToEdit:
  5012                           	callstack 14
  5013                           
  5014                           ;incstack = 0
  5015                           ;setValueToEdit@menuType stored from wreg
  5016  003516  0100               	movlb	0	; () banked
  5017  003518  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  5018                           
  5019                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  5020  00351A  0E00               	movlw	0
  5021  00351C  0100               	movlb	0	; () banked
  5022  00351E  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5023                           
  5024                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  5025  003520  D267               	goto	l22186
  5026  003522                     l3358:
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5030  003522  C168  F169         	movff	_menu_st+23,_menu_st+24
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  5034  003526  0E00               	movlw	0
  5035  003528  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5036                           
  5037                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  5038  00352A  D034               	goto	l21934
  5039  00352C                     l21888:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  5043  00352C  0E04               	movlw	4
  5044  00352E  ECD5  F024         	call	_load_New_Menu
  5045                           
  5046                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  5047  003532  D287               	goto	l22188
  5048  003534                     l21890:
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  5052  003534  0E05               	movlw	5
  5053  003536  ECD5  F024         	call	_load_New_Menu
  5054                           
  5055                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  5056  00353A  D283               	goto	l22188
  5057  00353C                     l21892:
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5061  00353C  0E06               	movlw	6
  5062  00353E  ECD5  F024         	call	_load_New_Menu
  5063                           
  5064                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5065  003542  D27F               	goto	l22188
  5066  003544                     l21894:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5070  003544  0E63               	movlw	99
  5071  003546  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5075  003548  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5079  00354C  0E9C               	movlw	low (_var_sys_NVM+4)
  5080  00354E                     L13:
  5081  00354E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5082  003550  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5086  003552  0E01               	movlw	1
  5087  003554  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5088                           
  5089                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5090  003556  D275               	goto	l22188
  5091  003558                     l21902:
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5095  003558  0E07               	movlw	7
  5096  00355A  ECD5  F024         	call	_load_New_Menu
  5097                           
  5098                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5099  00355E  D271               	goto	l22188
  5100  003560                     l21904:
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5104  003560  0E08               	movlw	8
  5105  003562  ECD5  F024         	call	_load_New_Menu
  5106                           
  5107                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5108  003566  D26D               	goto	l22188
  5109  003568                     l21906:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5113  003568  0E09               	movlw	9
  5114  00356A  ECD5  F024         	call	_load_New_Menu
  5115                           
  5116                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5117  00356E  D269               	goto	l22188
  5118  003570                     l21908:
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5122  003570  0E02               	movlw	2
  5123  003572  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5127  003574  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5131  003578  0EA4               	movlw	low (_var_sys_NVM+12)
  5132  00357A  D7E9               	goto	L13
  5133  00357C                     l21916:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5137  00357C  0E03               	movlw	3
  5138  00357E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5142  003580  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5146  003584  0EA5               	movlw	low (_var_sys_NVM+13)
  5147  003586  D7E3               	goto	L13
  5148  003588                     l21924:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5152  003588  0E01               	movlw	1
  5153  00358A  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5157  00358C  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5161  003590  0EA6               	movlw	low (_var_sys_NVM+14)
  5162  003592  D7DD               	goto	L13
  5163  003594                     l21934:
  5164                           
  5165                           ; BSR set to: 0
  5166  003594  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5167  003596  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5168  003598  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5169                           
  5170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5171                           ; Switch size 1, requested type "simple"
  5172                           ; Number of cases is 1, Range of values is 0 to 0
  5173                           ; switch strategies available:
  5174                           ; Name         Instructions Cycles
  5175                           ; simple_byte            4     3 (average)
  5176                           ;	Chosen strategy is simple_byte
  5177  00359A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5178  00359C  0A00               	xorlw	0	; case 0
  5179  00359E  A4D8               	btfss	status,2,c
  5180  0035A0  D250               	goto	l22188
  5181                           
  5182                           ; BSR set to: 0
  5183                           ; Switch size 1, requested type "simple"
  5184                           ; Number of cases is 10, Range of values is 0 to 9
  5185                           ; switch strategies available:
  5186                           ; Name         Instructions Cycles
  5187                           ; simple_byte           31    16 (average)
  5188                           ;	Chosen strategy is simple_byte
  5189  0035A2  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5190  0035A4  0A00               	xorlw	0	; case 0
  5191  0035A6  B4D8               	btfsc	status,2,c
  5192  0035A8  D7C1               	goto	l21888
  5193  0035AA  0A01               	xorlw	1	; case 1
  5194  0035AC  B4D8               	btfsc	status,2,c
  5195  0035AE  D7C2               	goto	l21890
  5196  0035B0  0A03               	xorlw	3	; case 2
  5197  0035B2  B4D8               	btfsc	status,2,c
  5198  0035B4  D7C3               	goto	l21892
  5199  0035B6  0A01               	xorlw	1	; case 3
  5200  0035B8  B4D8               	btfsc	status,2,c
  5201  0035BA  D7C4               	goto	l21894
  5202  0035BC  0A07               	xorlw	7	; case 4
  5203  0035BE  B4D8               	btfsc	status,2,c
  5204  0035C0  D7CB               	goto	l21902
  5205  0035C2  0A01               	xorlw	1	; case 5
  5206  0035C4  B4D8               	btfsc	status,2,c
  5207  0035C6  D7CC               	goto	l21904
  5208  0035C8  0A03               	xorlw	3	; case 6
  5209  0035CA  B4D8               	btfsc	status,2,c
  5210  0035CC  D7CD               	goto	l21906
  5211  0035CE  0A01               	xorlw	1	; case 7
  5212  0035D0  B4D8               	btfsc	status,2,c
  5213  0035D2  D7CE               	goto	l21908
  5214  0035D4  0A0F               	xorlw	15	; case 8
  5215  0035D6  B4D8               	btfsc	status,2,c
  5216  0035D8  D7D1               	goto	l21916
  5217  0035DA  0A01               	xorlw	1	; case 9
  5218  0035DC  B4D8               	btfsc	status,2,c
  5219  0035DE  D7D4               	goto	l21924
  5220  0035E0  D230               	goto	l22188
  5221  0035E2                     l3372:
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5225  0035E2  C168  F169         	movff	_menu_st+23,_menu_st+24
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5229  0035E6  0E01               	movlw	1
  5230  0035E8  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5231                           
  5232                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5233  0035EA  0E00               	movlw	0
  5234  0035EC  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5235                           
  5236                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5237  0035EE  D057               	goto	l21990
  5238  0035F0                     l21938:
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5242  0035F0  0E0A               	movlw	10
  5243  0035F2  ECD5  F024         	call	_load_New_Menu
  5244                           
  5245                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5246  0035F6  D225               	goto	l22188
  5247  0035F8                     l21940:
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5251  0035F8  0E0B               	movlw	11
  5252  0035FA  ECD5  F024         	call	_load_New_Menu
  5253                           
  5254                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5255  0035FE  D221               	goto	l22188
  5256  003600                     l21942:
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5260  003600  0E63               	movlw	99
  5261  003602  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5265  003604  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5269  003608  0EAC               	movlw	low (_var_sys_NVM+20)
  5270  00360A  D7A1               	goto	L13
  5271  00360C                     l21950:
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5275  00360C  0E09               	movlw	9
  5276  00360E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5277                           
  5278                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5279  003610  0E01               	movlw	1
  5280  003612  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5284  003614  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5288  003618  0EAD               	movlw	low (_var_sys_NVM+21)
  5289  00361A  D799               	goto	L13
  5290  00361C                     l3380:
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5294  00361C  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5298  003620  0EAF               	movlw	low (_var_sys_NVM+23)
  5299  003622  D795               	goto	L13
  5300  003624                     l21962:
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5304  003624  0E09               	movlw	9
  5305  003626  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5306                           
  5307                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5308  003628  0E01               	movlw	1
  5309  00362A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5313  00362C  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5317  003630  0EB0               	movlw	low (_var_sys_NVM+24)
  5318  003632  D78D               	goto	L13
  5319  003634                     l21970:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5323  003634  0E00               	movlw	0
  5324  003636  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5325                           
  5326                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5327  003638  0E00               	movlw	0
  5328  00363A  0101               	movlb	1	; () banked
  5329  00363C  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5330  00363E  0E00               	movlw	0
  5331  003640  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5332                           
  5333                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5334  003642  0E27               	movlw	39
  5335  003644  0100               	movlb	0	; () banked
  5336  003646  6FFD               	movwf	(_auxCounter+1)& (0+255),b
  5337  003648  0E10               	movlw	16
  5338  00364A  6FFC               	movwf	_auxCounter& (0+255),b
  5339                           
  5340                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5341  00364C  0E00               	movlw	0
  5342  00364E  0101               	movlb	1	; () banked
  5343  003650  6FC6               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5344  003652  0E00               	movlw	0
  5345  003654  6FC5               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5346                           
  5347                           ; BSR set to: 1
  5348                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5349  003656  C13C  F2F4         	movff	_var_sys+60,_tempCounter	;volatile
  5350  00365A  C13D  F2F5         	movff	_var_sys+61,_tempCounter+1	;volatile
  5351  00365E  C13E  F2F6         	movff	_var_sys+62,_tempCounter+2	;volatile
  5352  003662  C13F  F2F7         	movff	_var_sys+63,_tempCounter+3	;volatile
  5353                           
  5354                           ; BSR set to: 1
  5355                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5356  003666  0EBB               	movlw	low _menuConfiguration_stateMachine
  5357  003668  6E12               	movwf	sm_send_event@psm^0,c
  5358  00366A  0E02               	movlw	high _menuConfiguration_stateMachine
  5359  00366C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5360  00366E  0E00               	movlw	0
  5361  003670  6E15               	movwf	(sm_send_event@event+1)^0,c
  5362  003672  0E05               	movlw	5
  5363  003674  6E14               	movwf	sm_send_event@event^0,c
  5364  003676  EC4F  F047         	call	_sm_send_event	;wreg free
  5365                           
  5366                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5367  00367A  D1E3               	goto	l22188
  5368  00367C                     l21976:
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5372  00367C  0E00               	movlw	0
  5373  00367E  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5374                           
  5375                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5376  003680  0E01               	movlw	1
  5377  003682  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5381  003684  0E00               	movlw	0
  5382  003686  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5383  003688  0E00               	movlw	0
  5384  00368A  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5385                           
  5386                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5387  00368C  D1DA               	goto	l22188
  5388  00368E                     l21980:
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5392  00368E  0E03               	movlw	3
  5393  003690  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5394                           
  5395                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5396  003692  0E00               	movlw	0
  5397  003694  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5401  003696  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5405  00369A  0EB1               	movlw	low (_var_sys_NVM+25)
  5406  00369C  D758               	goto	L13
  5407  00369E                     l21990:
  5408                           
  5409                           ; BSR set to: 0
  5410  00369E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5411  0036A0  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5412  0036A2  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5413                           
  5414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5415                           ; Switch size 1, requested type "simple"
  5416                           ; Number of cases is 1, Range of values is 0 to 0
  5417                           ; switch strategies available:
  5418                           ; Name         Instructions Cycles
  5419                           ; simple_byte            4     3 (average)
  5420                           ;	Chosen strategy is simple_byte
  5421  0036A4  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5422  0036A6  0A00               	xorlw	0	; case 0
  5423  0036A8  A4D8               	btfss	status,2,c
  5424  0036AA  D1CB               	goto	l22188
  5425                           
  5426                           ; BSR set to: 0
  5427                           ; Switch size 1, requested type "simple"
  5428                           ; Number of cases is 10, Range of values is 0 to 9
  5429                           ; switch strategies available:
  5430                           ; Name         Instructions Cycles
  5431                           ; simple_byte           31    16 (average)
  5432                           ;	Chosen strategy is simple_byte
  5433  0036AC  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5434  0036AE  0A00               	xorlw	0	; case 0
  5435  0036B0  B4D8               	btfsc	status,2,c
  5436  0036B2  D79E               	goto	l21938
  5437  0036B4  0A01               	xorlw	1	; case 1
  5438  0036B6  B4D8               	btfsc	status,2,c
  5439  0036B8  D79F               	goto	l21940
  5440  0036BA  0A03               	xorlw	3	; case 2
  5441  0036BC  B4D8               	btfsc	status,2,c
  5442  0036BE  D7A0               	goto	l21942
  5443  0036C0  0A01               	xorlw	1	; case 3
  5444  0036C2  B4D8               	btfsc	status,2,c
  5445  0036C4  D7A3               	goto	l21950
  5446  0036C6  0A07               	xorlw	7	; case 4
  5447  0036C8  B4D8               	btfsc	status,2,c
  5448  0036CA  D1BB               	goto	l22188
  5449  0036CC  0A01               	xorlw	1	; case 5
  5450  0036CE  B4D8               	btfsc	status,2,c
  5451  0036D0  D7A5               	goto	l3380
  5452  0036D2  0A03               	xorlw	3	; case 6
  5453  0036D4  B4D8               	btfsc	status,2,c
  5454  0036D6  D7A6               	goto	l21962
  5455  0036D8  0A01               	xorlw	1	; case 7
  5456  0036DA  B4D8               	btfsc	status,2,c
  5457  0036DC  D7AB               	goto	l21970
  5458  0036DE  0A0F               	xorlw	15	; case 8
  5459  0036E0  B4D8               	btfsc	status,2,c
  5460  0036E2  D7CC               	goto	l21976
  5461  0036E4  0A01               	xorlw	1	; case 9
  5462  0036E6  B4D8               	btfsc	status,2,c
  5463  0036E8  D7D2               	goto	l21980
  5464  0036EA  D1AB               	goto	l22188
  5465  0036EC                     l21992:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5469  0036EC  0EBB               	movlw	low _menuConfiguration_stateMachine
  5470  0036EE  6E12               	movwf	sm_send_event@psm^0,c
  5471  0036F0  0E02               	movlw	high _menuConfiguration_stateMachine
  5472  0036F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5473  0036F4  0E00               	movlw	0
  5474  0036F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  5475  0036F8  0E14               	movlw	20
  5476  0036FA  6E14               	movwf	sm_send_event@event^0,c
  5477  0036FC  EC4F  F047         	call	_sm_send_event	;wreg free
  5478                           
  5479                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5480  003700  0EE7               	movlw	low _controlGate_stateMachine
  5481  003702  6E12               	movwf	sm_send_event@psm^0,c
  5482  003704  0E01               	movlw	high _controlGate_stateMachine
  5483  003706  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5484  003708  0E00               	movlw	0
  5485  00370A  6E15               	movwf	(sm_send_event@event+1)^0,c
  5486  00370C  0E14               	movlw	20
  5487  00370E  6E14               	movwf	sm_send_event@event^0,c
  5488  003710  EC4F  F047         	call	_sm_send_event	;wreg free
  5489                           
  5490                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5491  003714  0E01               	movlw	1
  5492  003716  0101               	movlb	1	; () banked
  5493  003718  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5494                           
  5495                           ; BSR set to: 1
  5496                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5497  00371A  0E00               	movlw	0
  5498  00371C  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5499                           
  5500                           ; BSR set to: 1
  5501                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5502  00371E  0E01               	movlw	1
  5503  003720  EC5D  F04B         	call	_SaveNVM_VarSystem
  5504                           
  5505                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5506  003724  D18E               	goto	l22188
  5507  003726                     l22000:
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5511  003726  0EBB               	movlw	low _menuConfiguration_stateMachine
  5512  003728  6E12               	movwf	sm_send_event@psm^0,c
  5513  00372A  0E02               	movlw	high _menuConfiguration_stateMachine
  5514  00372C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5515  00372E  0E00               	movlw	0
  5516  003730  6E15               	movwf	(sm_send_event@event+1)^0,c
  5517  003732  0E14               	movlw	20
  5518  003734  6E14               	movwf	sm_send_event@event^0,c
  5519  003736  EC4F  F047         	call	_sm_send_event	;wreg free
  5520                           
  5521                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5522  00373A  0EE7               	movlw	low _controlGate_stateMachine
  5523  00373C  6E12               	movwf	sm_send_event@psm^0,c
  5524  00373E  0E01               	movlw	high _controlGate_stateMachine
  5525  003740  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5526  003742  0E00               	movlw	0
  5527  003744  6E15               	movwf	(sm_send_event@event+1)^0,c
  5528  003746  0E14               	movlw	20
  5529  003748  6E14               	movwf	sm_send_event@event^0,c
  5530  00374A  EC4F  F047         	call	_sm_send_event	;wreg free
  5531                           
  5532                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5533  00374E  0E01               	movlw	1
  5534  003750  0101               	movlb	1	; () banked
  5535  003752  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5536                           
  5537                           ; BSR set to: 1
  5538                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5539  003754  0E01               	movlw	1
  5540  003756  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5541                           
  5542                           ; BSR set to: 1
  5543                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5544  003758  0E01               	movlw	1
  5545  00375A  EC5D  F04B         	call	_SaveNVM_VarSystem
  5546                           
  5547                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5548  00375E  D171               	goto	l22188
  5549  003760                     l3390:
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5553  003760  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5557  003764  0E03               	movlw	3
  5558  003766  ECD5  F024         	call	_load_New_Menu
  5559                           
  5560                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5561  00376A  0EB4               	movlw	low (_var_sys_NVM+28)
  5562  00376C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5563  00376E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5564                           
  5565                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5566  003770  0E01               	movlw	1
  5567  003772  0100               	movlb	0	; () banked
  5568  003774  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5572  003776  0E02               	movlw	2
  5573  003778  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5577  00377A  0E00               	movlw	0
  5578  00377C  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5579                           
  5580                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5581  00377E  D161               	goto	l22188
  5582  003780                     l3391:
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5586  003780  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5590  003784  0E02               	movlw	2
  5591  003786  ECD5  F024         	call	_load_New_Menu
  5592                           
  5593                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5594  00378A  0EB3               	movlw	low (_var_sys_NVM+27)
  5595  00378C  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5596  00378E  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5597                           
  5598                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5599  003790  0E01               	movlw	1
  5600  003792  0100               	movlb	0	; () banked
  5601  003794  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5605  003796  0E01               	movlw	1
  5606  003798  D7EF               	goto	L14
  5607  00379A                     l22030:
  5608                           
  5609                           ; BSR set to: 0
  5610  00379A  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5611  00379C  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5612  00379E  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5613                           
  5614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5615                           ; Switch size 1, requested type "simple"
  5616                           ; Number of cases is 1, Range of values is 0 to 0
  5617                           ; switch strategies available:
  5618                           ; Name         Instructions Cycles
  5619                           ; simple_byte            4     3 (average)
  5620                           ;	Chosen strategy is simple_byte
  5621  0037A0  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5622  0037A2  0A00               	xorlw	0	; case 0
  5623  0037A4  A4D8               	btfss	status,2,c
  5624  0037A6  D14D               	goto	l22188
  5625                           
  5626                           ; BSR set to: 0
  5627                           ; Switch size 1, requested type "simple"
  5628                           ; Number of cases is 4, Range of values is 0 to 3
  5629                           ; switch strategies available:
  5630                           ; Name         Instructions Cycles
  5631                           ; simple_byte           13     7 (average)
  5632                           ;	Chosen strategy is simple_byte
  5633  0037A8  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5634  0037AA  0A00               	xorlw	0	; case 0
  5635  0037AC  B4D8               	btfsc	status,2,c
  5636  0037AE  D79E               	goto	l21992
  5637  0037B0  0A01               	xorlw	1	; case 1
  5638  0037B2  B4D8               	btfsc	status,2,c
  5639  0037B4  D7B8               	goto	l22000
  5640  0037B6  0A03               	xorlw	3	; case 2
  5641  0037B8  B4D8               	btfsc	status,2,c
  5642  0037BA  D7D2               	goto	l3390
  5643  0037BC  0A01               	xorlw	1	; case 3
  5644  0037BE  B4D8               	btfsc	status,2,c
  5645  0037C0  D7DF               	goto	l3391
  5646  0037C2  D13F               	goto	l22188
  5647  0037C4                     l22032:
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5651  0037C4  0E98               	movlw	low _var_sys_NVM
  5652  0037C6  D001               	goto	L15
  5653  0037C8                     l22034:
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5657  0037C8  0E99               	movlw	low (_var_sys_NVM+1)
  5658  0037CA                     L15:
  5659  0037CA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5660  0037CC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5661                           
  5662                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5663  0037CE  D00E               	goto	l22040
  5664  0037D0                     l22038:
  5665                           
  5666                           ; BSR set to: 0
  5667  0037D0  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5668  0037D2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5669  0037D4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5670                           
  5671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5672                           ; Switch size 1, requested type "simple"
  5673                           ; Number of cases is 1, Range of values is 0 to 0
  5674                           ; switch strategies available:
  5675                           ; Name         Instructions Cycles
  5676                           ; simple_byte            4     3 (average)
  5677                           ;	Chosen strategy is simple_byte
  5678  0037D6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5679  0037D8  0A00               	xorlw	0	; case 0
  5680  0037DA  A4D8               	btfss	status,2,c
  5681  0037DC  D007               	goto	l22040
  5682                           
  5683                           ; BSR set to: 0
  5684                           ; Switch size 1, requested type "simple"
  5685                           ; Number of cases is 2, Range of values is 0 to 1
  5686                           ; switch strategies available:
  5687                           ; Name         Instructions Cycles
  5688                           ; simple_byte            7     4 (average)
  5689                           ;	Chosen strategy is simple_byte
  5690  0037DE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5691  0037E0  0A00               	xorlw	0	; case 0
  5692  0037E2  B4D8               	btfsc	status,2,c
  5693  0037E4  D7EF               	goto	l22032
  5694  0037E6  0A01               	xorlw	1	; case 1
  5695  0037E8  B4D8               	btfsc	status,2,c
  5696  0037EA  D7EE               	goto	l22034
  5697  0037EC                     l22040:
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5701  0037EC  0E2D               	movlw	45
  5702  0037EE                     L29:
  5703  0037EE  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5704                           
  5705                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5706  0037F0  0E00               	movlw	0
  5707  0037F2  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5708  0037F4                     L19:
  5709                           
  5710                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5711  0037F4  0E01               	movlw	1
  5712  0037F6  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5716  0037F8  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5717  0037FC  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5718  003800  50DF               	movf	indf2,w,c
  5719  003802  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5720                           
  5721                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5722  003804  D11E               	goto	l22188
  5723  003806                     l22044:
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5727  003806  0E09               	movlw	9
  5728  003808  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5729                           
  5730                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5731  00380A  0E00               	movlw	0
  5732  00380C  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5733                           
  5734                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5735  00380E  D00F               	goto	l22060
  5736  003810                     l22046:
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5740  003810  0E02               	movlw	2
  5741  003812  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5742  003814  D002               	goto	l22050
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5746  003816  0E00               	movlw	0
  5747  003818  D001               	goto	L16
  5748  00381A                     l22050:
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5752  00381A  0E09               	movlw	9
  5753  00381C                     L16:
  5754  00381C  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5758  00381E  0E9A               	movlw	low (_var_sys_NVM+2)
  5759  003820  D003               	goto	L18
  5760  003822                     l22054:
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5764  003822  0E9B               	movlw	low (_var_sys_NVM+3)
  5765  003824  D001               	goto	L18
  5766  003826                     l22056:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5770  003826  0EA7               	movlw	low (_var_sys_NVM+15)
  5771  003828                     L18:
  5772  003828  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5773  00382A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5774                           
  5775                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5776  00382C  D7E3               	goto	L19
  5777  00382E                     l22060:
  5778                           
  5779                           ; BSR set to: 0
  5780  00382E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5781  003830  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5782  003832  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5783                           
  5784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5785                           ; Switch size 1, requested type "simple"
  5786                           ; Number of cases is 1, Range of values is 0 to 0
  5787                           ; switch strategies available:
  5788                           ; Name         Instructions Cycles
  5789                           ; simple_byte            4     3 (average)
  5790                           ;	Chosen strategy is simple_byte
  5791  003834  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5792  003836  0A00               	xorlw	0	; case 0
  5793  003838  A4D8               	btfss	status,2,c
  5794  00383A  D7DC               	goto	L19
  5795                           
  5796                           ; BSR set to: 0
  5797                           ; Switch size 1, requested type "simple"
  5798                           ; Number of cases is 3, Range of values is 0 to 2
  5799                           ; switch strategies available:
  5800                           ; Name         Instructions Cycles
  5801                           ; simple_byte           10     6 (average)
  5802                           ;	Chosen strategy is simple_byte
  5803  00383C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5804  00383E  0A00               	xorlw	0	; case 0
  5805  003840  B4D8               	btfsc	status,2,c
  5806  003842  D7E6               	goto	l22046
  5807  003844  0A01               	xorlw	1	; case 1
  5808  003846  B4D8               	btfsc	status,2,c
  5809  003848  D7EC               	goto	l22054
  5810  00384A  0A03               	xorlw	3	; case 2
  5811  00384C  B4D8               	btfsc	status,2,c
  5812  00384E  D7EB               	goto	l22056
  5813  003850  D7D1               	goto	L19
  5814  003852                     l22066:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5818  003852  0E9D               	movlw	low (_var_sys_NVM+5)
  5819  003854  D001               	goto	L20
  5820  003856                     l22068:
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5824  003856  0E9E               	movlw	low (_var_sys_NVM+6)
  5825  003858                     L20:
  5826  003858  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5827  00385A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5828                           
  5829                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5830  00385C  D00E               	goto	l22074
  5831  00385E                     l22072:
  5832                           
  5833                           ; BSR set to: 0
  5834  00385E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5835  003860  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5836  003862  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5837                           
  5838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5839                           ; Switch size 1, requested type "simple"
  5840                           ; Number of cases is 1, Range of values is 0 to 0
  5841                           ; switch strategies available:
  5842                           ; Name         Instructions Cycles
  5843                           ; simple_byte            4     3 (average)
  5844                           ;	Chosen strategy is simple_byte
  5845  003864  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5846  003866  0A00               	xorlw	0	; case 0
  5847  003868  A4D8               	btfss	status,2,c
  5848  00386A  D007               	goto	l22074
  5849                           
  5850                           ; BSR set to: 0
  5851                           ; Switch size 1, requested type "simple"
  5852                           ; Number of cases is 2, Range of values is 0 to 1
  5853                           ; switch strategies available:
  5854                           ; Name         Instructions Cycles
  5855                           ; simple_byte            7     4 (average)
  5856                           ;	Chosen strategy is simple_byte
  5857  00386C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5858  00386E  0A00               	xorlw	0	; case 0
  5859  003870  B4D8               	btfsc	status,2,c
  5860  003872  D7EF               	goto	l22066
  5861  003874  0A01               	xorlw	1	; case 1
  5862  003876  B4D8               	btfsc	status,2,c
  5863  003878  D7EE               	goto	l22068
  5864  00387A                     l22074:
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5868  00387A  0E63               	movlw	99
  5869  00387C  D7B8               	goto	L29
  5870  00387E                     l22078:
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5874  00387E  0E9F               	movlw	low (_var_sys_NVM+7)
  5875  003880  D034               	goto	L127
  5876  003882                     l22080:
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5880  003882  0EA0               	movlw	low (_var_sys_NVM+8)
  5881  003884  D032               	goto	L127
  5882  003886                     l22084:
  5883                           
  5884                           ; BSR set to: 0
  5885  003886  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5886  003888  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5887  00388A  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5888                           
  5889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5890                           ; Switch size 1, requested type "simple"
  5891                           ; Number of cases is 1, Range of values is 0 to 0
  5892                           ; switch strategies available:
  5893                           ; Name         Instructions Cycles
  5894                           ; simple_byte            4     3 (average)
  5895                           ;	Chosen strategy is simple_byte
  5896  00388C  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5897  00388E  0A00               	xorlw	0	; case 0
  5898  003890  A4D8               	btfss	status,2,c
  5899  003892  D02D               	goto	L126
  5900                           
  5901                           ; BSR set to: 0
  5902                           ; Switch size 1, requested type "simple"
  5903                           ; Number of cases is 2, Range of values is 0 to 1
  5904                           ; switch strategies available:
  5905                           ; Name         Instructions Cycles
  5906                           ; simple_byte            7     4 (average)
  5907                           ;	Chosen strategy is simple_byte
  5908  003894  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5909  003896  0A00               	xorlw	0	; case 0
  5910  003898  B4D8               	btfsc	status,2,c
  5911  00389A  D7F1               	goto	l22078
  5912  00389C  0A01               	xorlw	1	; case 1
  5913  00389E  B4D8               	btfsc	status,2,c
  5914  0038A0  D7F0               	goto	l22080
  5915  0038A2  D025               	goto	L126
  5916  0038A4                     l22090:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5920  0038A4  0EA1               	movlw	low (_var_sys_NVM+9)
  5921  0038A6  D021               	goto	L127
  5922  0038A8                     l22092:
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5926  0038A8  0EA2               	movlw	low (_var_sys_NVM+10)
  5927  0038AA  D01F               	goto	L127
  5928  0038AC                     l22094:
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5932  0038AC  0EA3               	movlw	low (_var_sys_NVM+11)
  5933  0038AE  D01D               	goto	L127
  5934  0038B0                     l22096:
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5938  0038B0  0EAE               	movlw	low (_var_sys_NVM+22)
  5939  0038B2  D01B               	goto	L127
  5940  0038B4                     l22100:
  5941                           
  5942                           ; BSR set to: 0
  5943  0038B4  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5944  0038B6  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5945  0038B8  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5946                           
  5947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5948                           ; Switch size 1, requested type "simple"
  5949                           ; Number of cases is 1, Range of values is 0 to 0
  5950                           ; switch strategies available:
  5951                           ; Name         Instructions Cycles
  5952                           ; simple_byte            4     3 (average)
  5953                           ;	Chosen strategy is simple_byte
  5954  0038BA  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5955  0038BC  0A00               	xorlw	0	; case 0
  5956  0038BE  A4D8               	btfss	status,2,c
  5957  0038C0  D016               	goto	L126
  5958                           
  5959                           ; BSR set to: 0
  5960                           ; Switch size 1, requested type "simple"
  5961                           ; Number of cases is 4, Range of values is 0 to 3
  5962                           ; switch strategies available:
  5963                           ; Name         Instructions Cycles
  5964                           ; simple_byte           13     7 (average)
  5965                           ;	Chosen strategy is simple_byte
  5966  0038C2  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5967  0038C4  0A00               	xorlw	0	; case 0
  5968  0038C6  B4D8               	btfsc	status,2,c
  5969  0038C8  D7ED               	goto	l22090
  5970  0038CA  0A01               	xorlw	1	; case 1
  5971  0038CC  B4D8               	btfsc	status,2,c
  5972  0038CE  D7EC               	goto	l22092
  5973  0038D0  0A03               	xorlw	3	; case 2
  5974  0038D2  B4D8               	btfsc	status,2,c
  5975  0038D4  D7EB               	goto	l22094
  5976  0038D6  0A01               	xorlw	1	; case 3
  5977  0038D8  B4D8               	btfsc	status,2,c
  5978  0038DA  D7EA               	goto	l22096
  5979  0038DC  D008               	goto	L126
  5980  0038DE                     l22106:
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5984  0038DE  0EA8               	movlw	low (_var_sys_NVM+16)
  5985  0038E0  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5986  0038E2  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5990  0038E4  0E02               	movlw	2
  5991  0038E6  D783               	goto	L29
  5992  0038E8                     l22112:
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5996  0038E8  0EA9               	movlw	low (_var_sys_NVM+17)
  5997  0038EA                     L127:
  5998  0038EA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5999  0038EC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6000  0038EE                     L126:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  6004  0038EE  0E01               	movlw	1
  6005  0038F0  D77E               	goto	L29
  6006  0038F2                     l22120:
  6007                           
  6008                           ; BSR set to: 0
  6009  0038F2  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6010  0038F4  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6011  0038F6  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6012                           
  6013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6014                           ; Switch size 1, requested type "simple"
  6015                           ; Number of cases is 1, Range of values is 0 to 0
  6016                           ; switch strategies available:
  6017                           ; Name         Instructions Cycles
  6018                           ; simple_byte            4     3 (average)
  6019                           ;	Chosen strategy is simple_byte
  6020  0038F8  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6021  0038FA  0A00               	xorlw	0	; case 0
  6022  0038FC  A4D8               	btfss	status,2,c
  6023  0038FE  D77A               	goto	L19
  6024                           
  6025                           ; BSR set to: 0
  6026                           ; Switch size 1, requested type "simple"
  6027                           ; Number of cases is 2, Range of values is 0 to 1
  6028                           ; switch strategies available:
  6029                           ; Name         Instructions Cycles
  6030                           ; simple_byte            7     4 (average)
  6031                           ;	Chosen strategy is simple_byte
  6032  003900  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6033  003902  0A00               	xorlw	0	; case 0
  6034  003904  B4D8               	btfsc	status,2,c
  6035  003906  D7EB               	goto	l22106
  6036  003908  0A01               	xorlw	1	; case 1
  6037  00390A  B4D8               	btfsc	status,2,c
  6038  00390C  D7ED               	goto	l22112
  6039  00390E  D772               	goto	L19
  6040  003910                     l22126:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  6044  003910  0EAA               	movlw	low (_var_sys_NVM+18)
  6045  003912  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6046  003914  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  6050  003916  0E09               	movlw	9
  6051  003918  D76A               	goto	L29
  6052  00391A                     l22132:
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  6056  00391A  0EAB               	movlw	low (_var_sys_NVM+19)
  6057  00391C  D7FA               	goto	L27
  6058  00391E                     l22140:
  6059                           
  6060                           ; BSR set to: 0
  6061  00391E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6062  003920  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6063  003922  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6064                           
  6065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6066                           ; Switch size 1, requested type "simple"
  6067                           ; Number of cases is 1, Range of values is 0 to 0
  6068                           ; switch strategies available:
  6069                           ; Name         Instructions Cycles
  6070                           ; simple_byte            4     3 (average)
  6071                           ;	Chosen strategy is simple_byte
  6072  003924  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6073  003926  0A00               	xorlw	0	; case 0
  6074  003928  A4D8               	btfss	status,2,c
  6075  00392A  D764               	goto	L19
  6076                           
  6077                           ; BSR set to: 0
  6078                           ; Switch size 1, requested type "simple"
  6079                           ; Number of cases is 2, Range of values is 0 to 1
  6080                           ; switch strategies available:
  6081                           ; Name         Instructions Cycles
  6082                           ; simple_byte            7     4 (average)
  6083                           ;	Chosen strategy is simple_byte
  6084  00392C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6085  00392E  0A00               	xorlw	0	; case 0
  6086  003930  B4D8               	btfsc	status,2,c
  6087  003932  D7EE               	goto	l22126
  6088  003934  0A01               	xorlw	1	; case 1
  6089  003936  B4D8               	btfsc	status,2,c
  6090  003938  D7F0               	goto	l22132
  6091  00393A  D75C               	goto	L19
  6092  00393C                     l22146:
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6096  00393C  0EFD               	movlw	low setValueToEdit@value
  6097  00393E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6098  003940  0E01               	movlw	high setValueToEdit@value
  6099  003942  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6103  003944  0E00               	movlw	0
  6104  003946  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6105  003948  D00D               	goto	l22156
  6106  00394A                     l3438:
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6110  00394A  C0DF  F1FD         	movff	setValueToEdit@posindex,setValueToEdit@value
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6114  00394E  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6115  003952  0101               	movlb	1	; () banked
  6116  003954  5168               	movf	(_menu_st+23)& (0+255),w,b
  6117  003956  ECA6  F040         	call	_cmdMemoryIsEmpty
  6118  00395A  0900               	iorlw	0
  6119  00395C  A4D8               	btfss	status,2,c
  6120  00395E  D008               	goto	u25520
  6121                           
  6122                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6123  003960  0100               	movlb	0	; () banked
  6124  003962  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6125  003964                     l22156:
  6126                           
  6127                           ; BSR set to: 0
  6128  003964  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6129  003968  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6130  00396A  5CDE               	subwf	postinc2,w,c
  6131  00396C  B0D8               	btfsc	status,0,c
  6132  00396E  D7ED               	goto	l3438
  6133  003970                     u25520:
  6134                           
  6135                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6136  003970  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6137  003974  D018               	goto	L28
  6138  003976                     l22160:
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               for(unsigned char posindex=0; posindex <= *(unsigned char*)&var_sys
      +                          _NVM.positionRemotesWalk; posindex++)
  6142  003976  0E00               	movlw	0
  6143  003978  6FE0               	movwf	setValueToEdit@posindex_6979& (0+255),b
  6144  00397A  D00D               	goto	l22168
  6145  00397C                     l3444:
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;sm_MenuConfiguration_MC50.c: 1082:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          083:                         value=posindex;
  6149  00397C  C0E0  F1FD         	movff	setValueToEdit@posindex_6979,setValueToEdit@value
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;sm_MenuConfiguration_MC50.c: 1084:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6153  003980  C0E0  F02E         	movff	setValueToEdit@posindex_6979,cmdMemoryIsEmpty@position
  6154  003984  0101               	movlb	1	; () banked
  6155  003986  5168               	movf	(_menu_st+23)& (0+255),w,b
  6156  003988  ECA6  F040         	call	_cmdMemoryIsEmpty
  6157  00398C  0900               	iorlw	0
  6158  00398E  A4D8               	btfss	status,2,c
  6159  003990  D008               	goto	u25540
  6160                           
  6161                           ;sm_MenuConfiguration_MC50.c: 1086:                     }
  6162  003992  0100               	movlb	0	; () banked
  6163  003994  2BE0               	incf	setValueToEdit@posindex_6979& (0+255),f,b
  6164  003996                     l22168:
  6165                           
  6166                           ; BSR set to: 0
  6167  003996  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6168  00399A  51E0               	movf	setValueToEdit@posindex_6979& (0+255),w,b
  6169  00399C  5CDE               	subwf	postinc2,w,c
  6170  00399E  B0D8               	btfsc	status,0,c
  6171  0039A0  D7ED               	goto	l3444
  6172  0039A2                     u25540:
  6173                           
  6174                           ;sm_MenuConfiguration_MC50.c: 1087:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6175  0039A2  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6176  0039A6                     L28:
  6177  0039A6  50DF               	movf	indf2,w,c
  6178  0039A8  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6179                           
  6180                           ;sm_MenuConfiguration_MC50.c: 1088:                 };sm_MenuConfiguration_MC50.c: 1089:
      +                                           break;
  6181  0039AA  D00E               	goto	l22176
  6182  0039AC                     l22174:
  6183                           
  6184                           ; BSR set to: 0
  6185  0039AC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6186  0039AE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6187  0039B0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6188                           
  6189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6190                           ; Switch size 1, requested type "simple"
  6191                           ; Number of cases is 1, Range of values is 0 to 0
  6192                           ; switch strategies available:
  6193                           ; Name         Instructions Cycles
  6194                           ; simple_byte            4     3 (average)
  6195                           ;	Chosen strategy is simple_byte
  6196  0039B2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6197  0039B4  0A00               	xorlw	0	; case 0
  6198  0039B6  A4D8               	btfss	status,2,c
  6199  0039B8  D007               	goto	l22176
  6200                           
  6201                           ; BSR set to: 0
  6202                           ; Switch size 1, requested type "simple"
  6203                           ; Number of cases is 2, Range of values is 0 to 1
  6204                           ; switch strategies available:
  6205                           ; Name         Instructions Cycles
  6206                           ; simple_byte            7     4 (average)
  6207                           ;	Chosen strategy is simple_byte
  6208  0039BA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6209  0039BC  0A00               	xorlw	0	; case 0
  6210  0039BE  B4D8               	btfsc	status,2,c
  6211  0039C0  D7BD               	goto	l22146
  6212  0039C2  0A01               	xorlw	1	; case 1
  6213  0039C4  B4D8               	btfsc	status,2,c
  6214  0039C6  D7D7               	goto	l22160
  6215  0039C8                     l22176:
  6216                           
  6217                           ;sm_MenuConfiguration_MC50.c: 1091:             edit_Param.position=*edit_Param.Value;
  6218  0039C8  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6219  0039CC  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6220  0039D0  50DF               	movf	indf2,w,c
  6221  0039D2  6E46               	movwf	_edit_Param^0,c	;volatile
  6222                           
  6223                           ;sm_MenuConfiguration_MC50.c: 1092:             edit_Param.Min=0;
  6224  0039D4  0E00               	movlw	0
  6225  0039D6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6226                           
  6227                           ;sm_MenuConfiguration_MC50.c: 1093:             haveValueToEdit=1;
  6228  0039D8  0E01               	movlw	1
  6229  0039DA  0100               	movlb	0	; () banked
  6230  0039DC  6FE1               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6231                           
  6232                           ;sm_MenuConfiguration_MC50.c: 1094:             edit_Param.tempValue=*edit_Param.Value;
  6233  0039DE  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6234  0039E2  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6235  0039E6  50DF               	movf	indf2,w,c
  6236  0039E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;sm_MenuConfiguration_MC50.c: 1095:             InitReceiver();
  6240  0039EA  EC40  F04E         	call	_InitReceiver	;wreg free
  6241                           
  6242                           ;sm_MenuConfiguration_MC50.c: 1096:         };sm_MenuConfiguration_MC50.c: 1097:        
      +                           break;
  6243  0039EE  D029               	goto	l22188
  6244  0039F0                     l22186:
  6245                           
  6246                           ; BSR set to: 0
  6247  0039F0  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6248  0039F2  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6249  0039F4  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6250                           
  6251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6252                           ; Switch size 1, requested type "simple"
  6253                           ; Number of cases is 1, Range of values is 0 to 0
  6254                           ; switch strategies available:
  6255                           ; Name         Instructions Cycles
  6256                           ; simple_byte            4     3 (average)
  6257                           ;	Chosen strategy is simple_byte
  6258  0039F6  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6259  0039F8  0A00               	xorlw	0	; case 0
  6260  0039FA  A4D8               	btfss	status,2,c
  6261  0039FC  D022               	goto	l22188
  6262                           
  6263                           ; BSR set to: 0
  6264                           ; Switch size 1, requested type "simple"
  6265                           ; Number of cases is 11, Range of values is 0 to 12
  6266                           ; switch strategies available:
  6267                           ; Name         Instructions Cycles
  6268                           ; simple_byte           34    18 (average)
  6269                           ;	Chosen strategy is simple_byte
  6270  0039FE  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6271  003A00  0A00               	xorlw	0	; case 0
  6272  003A02  B4D8               	btfsc	status,2,c
  6273  003A04  D58E               	goto	l3358
  6274  003A06  0A01               	xorlw	1	; case 1
  6275  003A08  B4D8               	btfsc	status,2,c
  6276  003A0A  D5EB               	goto	l3372
  6277  003A0C  0A05               	xorlw	5	; case 4
  6278  003A0E  B4D8               	btfsc	status,2,c
  6279  003A10  D6C4               	goto	l22030
  6280  003A12  0A01               	xorlw	1	; case 5
  6281  003A14  B4D8               	btfsc	status,2,c
  6282  003A16  D6DC               	goto	l22038
  6283  003A18  0A03               	xorlw	3	; case 6
  6284  003A1A  B4D8               	btfsc	status,2,c
  6285  003A1C  D6F4               	goto	l22044
  6286  003A1E  0A01               	xorlw	1	; case 7
  6287  003A20  B4D8               	btfsc	status,2,c
  6288  003A22  D71D               	goto	l22072
  6289  003A24  0A0F               	xorlw	15	; case 8
  6290  003A26  B4D8               	btfsc	status,2,c
  6291  003A28  D72E               	goto	l22084
  6292  003A2A  0A01               	xorlw	1	; case 9
  6293  003A2C  B4D8               	btfsc	status,2,c
  6294  003A2E  D742               	goto	l22100
  6295  003A30  0A03               	xorlw	3	; case 10
  6296  003A32  B4D8               	btfsc	status,2,c
  6297  003A34  D75E               	goto	l22120
  6298  003A36  0A01               	xorlw	1	; case 11
  6299  003A38  B4D8               	btfsc	status,2,c
  6300  003A3A  D771               	goto	l22140
  6301  003A3C  0A07               	xorlw	7	; case 12
  6302  003A3E  B4D8               	btfsc	status,2,c
  6303  003A40  D7B5               	goto	l22174
  6304  003A42                     l22188:
  6305                           
  6306                           ;sm_MenuConfiguration_MC50.c: 1100:     return haveValueToEdit;
  6307  003A42  0100               	movlb	0	; () banked
  6308  003A44  51E1               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6309                           
  6310                           ; BSR set to: 0
  6311  003A46  0012               	return		;funcret
  6312  003A48                     __end_of_setValueToEdit:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _load_New_Menu *****************
  6316 ;; Defined at:
  6317 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  Menu            1    wreg     enum E10813
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  Menu            1   33[COMRAM] enum E10813
  6322 ;;  i               1   34[COMRAM] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      void 
  6325 ;; Registers used:
  6326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6335 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;Total ram usage:        4 bytes
  6337 ;; Hardware stack levels used: 1
  6338 ;; Hardware stack levels required when called: 5
  6339 ;; This function calls:
  6340 ;;		_SetSegmentValueIntermitentMain
  6341 ;;		_SetSegmentValueMain
  6342 ;; This function is called by:
  6343 ;;		_sm_execute_main
  6344 ;;		_sm_execute_menuConfiguration
  6345 ;;		_setValueToEdit
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text4
  6350  0049AA                     __ptext4:
  6351                           	callstack 0
  6352  0049AA                     _load_New_Menu:
  6353                           	callstack 22
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;incstack = 0
  6357                           ;load_New_Menu@Menu stored from wreg
  6358  0049AA  6E22               	movwf	load_New_Menu@Menu^0,c
  6359                           
  6360                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6361  0049AC  0E00               	movlw	0
  6362  0049AE  0101               	movlb	1	; () banked
  6363  0049B0  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6364  0049B2  0E64               	movlw	100
  6365  0049B4  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6366                           
  6367                           ; BSR set to: 1
  6368                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6369  0049B6  5022               	movf	load_New_Menu@Menu^0,w,c
  6370  0049B8  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6371  0049BA  B4D8               	btfsc	status,2,c
  6372  0049BC  D006               	goto	l21058
  6373                           
  6374                           ; BSR set to: 1
  6375  0049BE  0E01               	movlw	1
  6376  0049C0  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6377  0049C2  D003               	goto	l21058
  6378                           
  6379                           ; BSR set to: 1
  6380                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6381  0049C4  0E00               	movlw	0
  6382  0049C6  6F68               	movwf	(_menu_st+23)& (0+255),b
  6383                           
  6384                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6385  0049C8  D005               	goto	l21062
  6386  0049CA                     l21058:
  6387                           
  6388                           ; BSR set to: 1
  6389  0049CA  0E02               	movlw	2
  6390  0049CC  6022               	cpfslt	load_New_Menu@Menu^0,c
  6391  0049CE  D002               	goto	l21062
  6392                           
  6393                           ; BSR set to: 1
  6394                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6395  0049D0  C169  F168         	movff	_menu_st+24,_menu_st+23
  6396  0049D4                     l21062:
  6397                           
  6398                           ; BSR set to: 1
  6399                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6400  0049D4  0E00               	movlw	0
  6401  0049D6  6F65               	movwf	(_menu_st+20)& (0+255),b
  6402                           
  6403                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6404  0049D8  D0F6               	goto	l21114
  6405  0049DA                     l21064:
  6406                           
  6407                           ; BSR set to: 1
  6408                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6409  0049DA  0E00               	movlw	0
  6410  0049DC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6411                           
  6412                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6413  0049DE  0E0A               	movlw	10
  6414  0049E0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6415                           
  6416                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6417  0049E2  0E00               	movlw	0
  6418  0049E4  6F69               	movwf	(_menu_st+24)& (0+255),b
  6419                           
  6420                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6421  0049E6  0E00               	movlw	0
  6422  0049E8  6E23               	movwf	load_New_Menu@i^0,c
  6423  0049EA                     l21070:
  6424                           
  6425                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6426  0049EA  5023               	movf	load_New_Menu@i^0,w,c
  6427  0049EC  0D02               	mullw	2
  6428  0049EE  0E51               	movlw	low _menu_st
  6429  0049F0  24F3               	addwf	243,w,c
  6430  0049F2  6ED9               	movwf	fsr2l,c
  6431  0049F4  0E01               	movlw	high _menu_st
  6432  0049F6  20F4               	addwfc	prodh,w,c
  6433  0049F8  6EDA               	movwf	fsr2h,c
  6434  0049FA  0E10               	movlw	16
  6435  0049FC  6EDF               	movwf	indf2,c
  6436                           
  6437                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6438  0049FE  5023               	movf	load_New_Menu@i^0,w,c
  6439  004A00  0D02               	mullw	2
  6440  004A02  0E52               	movlw	low (_menu_st+1)
  6441  004A04  24F3               	addwf	243,w,c
  6442  004A06  6ED9               	movwf	fsr2l,c
  6443  004A08  0E01               	movlw	high (_menu_st+1)
  6444  004A0A  20F4               	addwfc	prodh,w,c
  6445  004A0C  6EDA               	movwf	fsr2h,c
  6446  004A0E  C023  FFDF         	movff	load_New_Menu@i,indf2
  6447                           
  6448                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6449  004A12  2A23               	incf	load_New_Menu@i^0,f,c
  6450  004A14  0E09               	movlw	9
  6451  004A16  6423               	cpfsgt	load_New_Menu@i^0,c
  6452  004A18  D7E8               	goto	l21070
  6453  004A1A  D107               	goto	l21116
  6454  004A1C                     l21076:
  6455                           
  6456                           ; BSR set to: 1
  6457                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6458  004A1C  0E01               	movlw	1
  6459  004A1E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6460                           
  6461                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6462  004A20  0E0A               	movlw	10
  6463  004A22  6F67               	movwf	(_menu_st+22)& (0+255),b
  6464                           
  6465                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6466  004A24  0E00               	movlw	0
  6467  004A26  6F69               	movwf	(_menu_st+24)& (0+255),b
  6468                           
  6469                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6470  004A28  0E00               	movlw	0
  6471  004A2A  6E23               	movwf	load_New_Menu@i^0,c
  6472  004A2C                     l21082:
  6473                           
  6474                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6475  004A2C  5023               	movf	load_New_Menu@i^0,w,c
  6476  004A2E  0D02               	mullw	2
  6477  004A30  0E51               	movlw	low _menu_st
  6478  004A32  24F3               	addwf	243,w,c
  6479  004A34  6ED9               	movwf	fsr2l,c
  6480  004A36  0E01               	movlw	high _menu_st
  6481  004A38  20F4               	addwfc	prodh,w,c
  6482  004A3A  6EDA               	movwf	fsr2h,c
  6483  004A3C  0E0E               	movlw	14
  6484  004A3E  6EDF               	movwf	indf2,c
  6485                           
  6486                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6487  004A40  5023               	movf	load_New_Menu@i^0,w,c
  6488  004A42  0D02               	mullw	2
  6489  004A44  0E52               	movlw	low (_menu_st+1)
  6490  004A46  24F3               	addwf	243,w,c
  6491  004A48  6ED9               	movwf	fsr2l,c
  6492  004A4A  0E01               	movlw	high (_menu_st+1)
  6493  004A4C  20F4               	addwfc	prodh,w,c
  6494  004A4E  6EDA               	movwf	fsr2h,c
  6495  004A50  C023  FFDF         	movff	load_New_Menu@i,indf2
  6496                           
  6497                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6498  004A54  2A23               	incf	load_New_Menu@i^0,f,c
  6499  004A56  0E09               	movlw	9
  6500  004A58  6423               	cpfsgt	load_New_Menu@i^0,c
  6501  004A5A  D7E8               	goto	l21082
  6502  004A5C  D0E6               	goto	l21116
  6503  004A5E                     l21088:
  6504                           
  6505                           ; BSR set to: 1
  6506                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6507  004A5E  0E00               	movlw	0
  6508  004A60  6F65               	movwf	(_menu_st+20)& (0+255),b
  6509                           
  6510                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6511  004A62  0E04               	movlw	4
  6512  004A64  6F66               	movwf	(_menu_st+21)& (0+255),b
  6513                           
  6514                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6515  004A66  0E04               	movlw	4
  6516  004A68  6F67               	movwf	(_menu_st+22)& (0+255),b
  6517                           
  6518                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6519  004A6A  0E0A               	movlw	10
  6520  004A6C  6F51               	movwf	_menu_st& (0+255),b
  6521                           
  6522                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6523  004A6E  0E13               	movlw	19
  6524  004A70  6F52               	movwf	(_menu_st+1)& (0+255),b
  6525                           
  6526                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6527  004A72  0E17               	movlw	23
  6528  004A74  6F53               	movwf	(_menu_st+2)& (0+255),b
  6529                           
  6530                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6531  004A76  0E0A               	movlw	10
  6532  004A78  6F54               	movwf	(_menu_st+3)& (0+255),b
  6533                           
  6534                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6535  004A7A  0E05               	movlw	5
  6536  004A7C  6F55               	movwf	(_menu_st+4)& (0+255),b
  6537                           
  6538                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6539  004A7E  0E21               	movlw	33
  6540  004A80  6F56               	movwf	(_menu_st+5)& (0+255),b
  6541                           
  6542                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6543  004A82  0E0D               	movlw	13
  6544  004A84  6F57               	movwf	(_menu_st+6)& (0+255),b
  6545                           
  6546                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6547  004A86  0E01               	movlw	1
  6548  004A88  D051               	goto	L31
  6549  004A8A                     l21090:
  6550                           
  6551                           ; BSR set to: 1
  6552                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6553  004A8A  0E00               	movlw	0
  6554  004A8C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6555                           
  6556                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6557  004A8E  0E05               	movlw	5
  6558  004A90  6F66               	movwf	(_menu_st+21)& (0+255),b
  6559                           
  6560                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6561  004A92  0E02               	movlw	2
  6562  004A94  6F67               	movwf	(_menu_st+22)& (0+255),b
  6563                           
  6564                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6565  004A96  0E0D               	movlw	13
  6566  004A98  6F51               	movwf	_menu_st& (0+255),b
  6567                           
  6568                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6569  004A9A  0E0A               	movlw	10
  6570  004A9C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6571                           
  6572                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6573  004A9E  0E0D               	movlw	13
  6574  004AA0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6575                           
  6576                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6577  004AA2  0E0F               	movlw	15
  6578  004AA4  D08E               	goto	L38
  6579  004AA6                     l21092:
  6580                           
  6581                           ; BSR set to: 1
  6582                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6583  004AA6  0E00               	movlw	0
  6584  004AA8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6585                           
  6586                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6587  004AAA  0E06               	movlw	6
  6588  004AAC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6589                           
  6590                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6591  004AAE  0E03               	movlw	3
  6592  004AB0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6593                           
  6594                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6595  004AB2  0E0F               	movlw	15
  6596  004AB4  6F51               	movwf	_menu_st& (0+255),b
  6597                           
  6598                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6599  004AB6  0E00               	movlw	0
  6600  004AB8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6601                           
  6602                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6603  004ABA  0E0F               	movlw	15
  6604  004ABC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6605                           
  6606                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6607  004ABE  0E05               	movlw	5
  6608  004AC0  6F54               	movwf	(_menu_st+3)& (0+255),b
  6609                           
  6610                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6611  004AC2  0E0F               	movlw	15
  6612  004AC4  6F55               	movwf	(_menu_st+4)& (0+255),b
  6613                           
  6614                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6615  004AC6  0E0D               	movlw	13
  6616  004AC8  D073               	goto	L33
  6617  004ACA                     l21094:
  6618                           
  6619                           ; BSR set to: 1
  6620                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6621  004ACA  0E00               	movlw	0
  6622  004ACC  6F65               	movwf	(_menu_st+20)& (0+255),b
  6623                           
  6624                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6625  004ACE  0E07               	movlw	7
  6626  004AD0  6F66               	movwf	(_menu_st+21)& (0+255),b
  6627                           
  6628                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6629  004AD2  0E02               	movlw	2
  6630  004AD4  6F67               	movwf	(_menu_st+22)& (0+255),b
  6631                           
  6632                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6633  004AD6  0E0A               	movlw	10
  6634  004AD8  6F51               	movwf	_menu_st& (0+255),b
  6635                           
  6636                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6637  004ADA  0E0F               	movlw	15
  6638  004ADC  6F52               	movwf	(_menu_st+1)& (0+255),b
  6639                           
  6640                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6641  004ADE  0E0A               	movlw	10
  6642  004AE0  6F53               	movwf	(_menu_st+2)& (0+255),b
  6643                           
  6644                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6645  004AE2  0E10               	movlw	16
  6646  004AE4  D06E               	goto	L38
  6647  004AE6                     l21096:
  6648                           
  6649                           ; BSR set to: 1
  6650                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6651  004AE6  0E00               	movlw	0
  6652  004AE8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6653                           
  6654                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6655  004AEA  0E08               	movlw	8
  6656  004AEC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6657                           
  6658                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6659  004AEE  0E02               	movlw	2
  6660  004AF0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6661                           
  6662                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6663  004AF2  0E12               	movlw	18
  6664  004AF4  6F51               	movwf	_menu_st& (0+255),b
  6665                           
  6666                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6667  004AF6  0E0E               	movlw	14
  6668  004AF8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6669                           
  6670                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6671  004AFA  0E11               	movlw	17
  6672  004AFC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6673                           
  6674                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6675  004AFE  0E0C               	movlw	12
  6676  004B00  D060               	goto	L38
  6677  004B02                     l21098:
  6678                           
  6679                           ; BSR set to: 1
  6680                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6681  004B02  0E00               	movlw	0
  6682  004B04  6F65               	movwf	(_menu_st+20)& (0+255),b
  6683                           
  6684                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6685  004B06  0E09               	movlw	9
  6686  004B08  6F66               	movwf	(_menu_st+21)& (0+255),b
  6687                           
  6688                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6689  004B0A  0E04               	movlw	4
  6690  004B0C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6691                           
  6692                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6693  004B0E  0E12               	movlw	18
  6694  004B10  6F51               	movwf	_menu_st& (0+255),b
  6695                           
  6696                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6697  004B12  0E0A               	movlw	10
  6698  004B14  6F52               	movwf	(_menu_st+1)& (0+255),b
  6699                           
  6700                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6701  004B16  0E11               	movlw	17
  6702  004B18  6F53               	movwf	(_menu_st+2)& (0+255),b
  6703                           
  6704                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6705  004B1A  0E0A               	movlw	10
  6706  004B1C  6F54               	movwf	(_menu_st+3)& (0+255),b
  6707                           
  6708                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6709  004B1E  0E11               	movlw	17
  6710  004B20  6F55               	movwf	(_menu_st+4)& (0+255),b
  6711                           
  6712                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6713  004B22  0E12               	movlw	18
  6714  004B24  6F56               	movwf	(_menu_st+5)& (0+255),b
  6715                           
  6716                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6717  004B26  0E05               	movlw	5
  6718  004B28  6F57               	movwf	(_menu_st+6)& (0+255),b
  6719                           
  6720                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6721  004B2A  0E15               	movlw	21
  6722  004B2C                     L31:
  6723  004B2C  6F58               	movwf	(_menu_st+7)& (0+255),b
  6724                           
  6725                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6726  004B2E  D07D               	goto	l21116
  6727  004B30                     l21100:
  6728                           
  6729                           ; BSR set to: 1
  6730                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6731  004B30  0E01               	movlw	1
  6732  004B32  6F65               	movwf	(_menu_st+20)& (0+255),b
  6733                           
  6734                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6735  004B34  0E0A               	movlw	10
  6736  004B36  6F66               	movwf	(_menu_st+21)& (0+255),b
  6737                           
  6738                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6739  004B38  0E02               	movlw	2
  6740  004B3A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6741                           
  6742                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6743  004B3C  0E11               	movlw	17
  6744  004B3E  6F51               	movwf	_menu_st& (0+255),b
  6745                           
  6746                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6747  004B40  0E10               	movlw	16
  6748  004B42  6F52               	movwf	(_menu_st+1)& (0+255),b
  6749                           
  6750                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6751  004B44  0E10               	movlw	16
  6752  004B46  6F53               	movwf	(_menu_st+2)& (0+255),b
  6753                           
  6754                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6755  004B48  0E12               	movlw	18
  6756  004B4A  D03B               	goto	L38
  6757  004B4C                     l21102:
  6758                           
  6759                           ; BSR set to: 1
  6760                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6761  004B4C  0E01               	movlw	1
  6762  004B4E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6763                           
  6764                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6765  004B50  0E0B               	movlw	11
  6766  004B52  6F66               	movwf	(_menu_st+21)& (0+255),b
  6767                           
  6768                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6769  004B54  0E02               	movlw	2
  6770  004B56  6F67               	movwf	(_menu_st+22)& (0+255),b
  6771                           
  6772                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6773  004B58  0E14               	movlw	20
  6774  004B5A  6F51               	movwf	_menu_st& (0+255),b
  6775                           
  6776                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6777  004B5C  0E24               	movlw	36
  6778  004B5E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6779                           
  6780                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6781  004B60  0E14               	movlw	20
  6782  004B62  6F53               	movwf	(_menu_st+2)& (0+255),b
  6783                           
  6784                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6785  004B64  0E23               	movlw	35
  6786  004B66  D02D               	goto	L38
  6787  004B68                     l21104:
  6788                           
  6789                           ; BSR set to: 1
  6790                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6791  004B68  0E0C               	movlw	12
  6792  004B6A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6793                           
  6794                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6795  004B6C  0E00               	movlw	0
  6796  004B6E  6F68               	movwf	(_menu_st+23)& (0+255),b
  6797                           
  6798                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6799  004B70  0E02               	movlw	2
  6800  004B72  6F67               	movwf	(_menu_st+22)& (0+255),b
  6801                           
  6802                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6803  004B74  0E05               	movlw	5
  6804  004B76  6F51               	movwf	_menu_st& (0+255),b
  6805                           
  6806                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6807  004B78  0E13               	movlw	19
  6808  004B7A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6809                           
  6810                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6811  004B7C  0E05               	movlw	5
  6812  004B7E  D7B0               	goto	L39
  6813  004B80                     l21106:
  6814                           
  6815                           ; BSR set to: 1
  6816                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6817  004B80  0E0D               	movlw	13
  6818  004B82  6F66               	movwf	(_menu_st+21)& (0+255),b
  6819                           
  6820                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6821  004B84  0E01               	movlw	1
  6822  004B86  6F67               	movwf	(_menu_st+22)& (0+255),b
  6823                           
  6824                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6825  004B88  0E0D               	movlw	13
  6826  004B8A  6F51               	movwf	_menu_st& (0+255),b
  6827                           
  6828                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6829  004B8C  0E12               	movlw	18
  6830  004B8E  6F52               	movwf	(_menu_st+1)& (0+255),b
  6831                           
  6832                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6833  004B90  0E00               	movlw	0
  6834  004B92  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6835  004B94  0E3C               	movlw	60
  6836  004B96  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6837                           
  6838                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6839  004B98  D048               	goto	l21116
  6840  004B9A                     l21108:
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6844  004B9A  0E05               	movlw	5
  6845  004B9C  6F51               	movwf	_menu_st& (0+255),b
  6846                           
  6847                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6848  004B9E  0E0C               	movlw	12
  6849  004BA0  6F52               	movwf	(_menu_st+1)& (0+255),b
  6850                           
  6851                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6852  004BA2  0E05               	movlw	5
  6853  004BA4  6F53               	movwf	(_menu_st+2)& (0+255),b
  6854                           
  6855                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6856  004BA6  0E0E               	movlw	14
  6857  004BA8  6F54               	movwf	(_menu_st+3)& (0+255),b
  6858                           
  6859                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6860  004BAA  0E22               	movlw	34
  6861  004BAC  6F55               	movwf	(_menu_st+4)& (0+255),b
  6862                           
  6863                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6864  004BAE  0E14               	movlw	20
  6865  004BB0                     L33:
  6866  004BB0  6F56               	movwf	(_menu_st+5)& (0+255),b
  6867                           
  6868                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6869  004BB2  D03B               	goto	l21116
  6870  004BB4                     l21110:
  6871                           
  6872                           ; BSR set to: 1
  6873                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6874  004BB4  0E12               	movlw	18
  6875  004BB6  6F51               	movwf	_menu_st& (0+255),b
  6876                           
  6877                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6878  004BB8  0E0E               	movlw	14
  6879  004BBA  6F52               	movwf	(_menu_st+1)& (0+255),b
  6880                           
  6881                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6882  004BBC  0E14               	movlw	20
  6883  004BBE  6F53               	movwf	(_menu_st+2)& (0+255),b
  6884                           
  6885                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6886  004BC0  0E15               	movlw	21
  6887  004BC2                     L38:
  6888  004BC2  6F54               	movwf	(_menu_st+3)& (0+255),b
  6889                           
  6890                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6891  004BC4  D032               	goto	l21116
  6892  004BC6                     l21114:
  6893                           
  6894                           ; BSR set to: 1
  6895  004BC6  5022               	movf	load_New_Menu@Menu^0,w,c
  6896  004BC8  6E20               	movwf	??_load_New_Menu^0,c
  6897  004BCA  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6898                           
  6899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6900                           ; Switch size 1, requested type "simple"
  6901                           ; Number of cases is 1, Range of values is 0 to 0
  6902                           ; switch strategies available:
  6903                           ; Name         Instructions Cycles
  6904                           ; simple_byte            4     3 (average)
  6905                           ;	Chosen strategy is simple_byte
  6906  004BCC  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6907  004BCE  0A00               	xorlw	0	; case 0
  6908  004BD0  A4D8               	btfss	status,2,c
  6909  004BD2  D02B               	goto	l21116
  6910                           
  6911                           ; BSR set to: 1
  6912                           ; Switch size 1, requested type "simple"
  6913                           ; Number of cases is 14, Range of values is 0 to 13
  6914                           ; switch strategies available:
  6915                           ; Name         Instructions Cycles
  6916                           ; simple_byte           43    22 (average)
  6917                           ;	Chosen strategy is simple_byte
  6918  004BD4  5020               	movf	??_load_New_Menu^0,w,c
  6919  004BD6  0A00               	xorlw	0	; case 0
  6920  004BD8  B4D8               	btfsc	status,2,c
  6921  004BDA  D6FF               	goto	l21064
  6922  004BDC  0A01               	xorlw	1	; case 1
  6923  004BDE  B4D8               	btfsc	status,2,c
  6924  004BE0  D71D               	goto	l21076
  6925  004BE2  0A03               	xorlw	3	; case 2
  6926  004BE4  B4D8               	btfsc	status,2,c
  6927  004BE6  D7E6               	goto	l21110
  6928  004BE8  0A01               	xorlw	1	; case 3
  6929  004BEA  B4D8               	btfsc	status,2,c
  6930  004BEC  D7D6               	goto	l21108
  6931  004BEE  0A07               	xorlw	7	; case 4
  6932  004BF0  B4D8               	btfsc	status,2,c
  6933  004BF2  D735               	goto	l21088
  6934  004BF4  0A01               	xorlw	1	; case 5
  6935  004BF6  B4D8               	btfsc	status,2,c
  6936  004BF8  D748               	goto	l21090
  6937  004BFA  0A03               	xorlw	3	; case 6
  6938  004BFC  B4D8               	btfsc	status,2,c
  6939  004BFE  D753               	goto	l21092
  6940  004C00  0A01               	xorlw	1	; case 7
  6941  004C02  B4D8               	btfsc	status,2,c
  6942  004C04  D762               	goto	l21094
  6943  004C06  0A0F               	xorlw	15	; case 8
  6944  004C08  B4D8               	btfsc	status,2,c
  6945  004C0A  D76D               	goto	l21096
  6946  004C0C  0A01               	xorlw	1	; case 9
  6947  004C0E  B4D8               	btfsc	status,2,c
  6948  004C10  D778               	goto	l21098
  6949  004C12  0A03               	xorlw	3	; case 10
  6950  004C14  B4D8               	btfsc	status,2,c
  6951  004C16  D78C               	goto	l21100
  6952  004C18  0A01               	xorlw	1	; case 11
  6953  004C1A  B4D8               	btfsc	status,2,c
  6954  004C1C  D797               	goto	l21102
  6955  004C1E  0A07               	xorlw	7	; case 12
  6956  004C20  B4D8               	btfsc	status,2,c
  6957  004C22  D7A2               	goto	l21104
  6958  004C24  0A01               	xorlw	1	; case 13
  6959  004C26  B4D8               	btfsc	status,2,c
  6960  004C28  D7AB               	goto	l21106
  6961  004C2A                     l21116:
  6962                           
  6963                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6964  004C2A  0101               	movlb	1	; () banked
  6965  004C2C  5167               	movf	(_menu_st+22)& (0+255),w,b
  6966  004C2E  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6967  004C30  A0D8               	btfss	status,0,c
  6968  004C32  D002               	goto	l21120
  6969                           
  6970                           ; BSR set to: 1
  6971                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6972  004C34  0E00               	movlw	0
  6973  004C36  6F68               	movwf	(_menu_st+23)& (0+255),b
  6974  004C38                     l21120:
  6975                           
  6976                           ; BSR set to: 1
  6977                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6978  004C38  0E0D               	movlw	13
  6979  004C3A  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6980  004C3C  A4D8               	btfss	status,2,c
  6981  004C3E  D01A               	goto	l21124
  6982                           
  6983                           ; BSR set to: 1
  6984                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6985  004C40  5168               	movf	(_menu_st+23)& (0+255),w,b
  6986  004C42  0D02               	mullw	2
  6987  004C44  0E52               	movlw	low (_menu_st+1)
  6988  004C46  24F3               	addwf	243,w,c
  6989  004C48  6ED9               	movwf	fsr2l,c
  6990  004C4A  0E01               	movlw	high (_menu_st+1)
  6991  004C4C  20F4               	addwfc	prodh,w,c
  6992  004C4E  6EDA               	movwf	fsr2h,c
  6993  004C50  50DF               	movf	indf2,w,c
  6994  004C52  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6995  004C54  0E00               	movlw	0
  6996  004C56  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6997  004C58  0E0A               	movlw	10
  6998  004C5A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6999  004C5C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7000  004C5E  0D02               	mullw	2
  7001  004C60  0E51               	movlw	low _menu_st
  7002  004C62  24F3               	addwf	243,w,c
  7003  004C64  6ED9               	movwf	fsr2l,c
  7004  004C66  0E01               	movlw	high _menu_st
  7005  004C68  20F4               	addwfc	prodh,w,c
  7006  004C6A  6EDA               	movwf	fsr2h,c
  7007  004C6C  50DF               	movf	indf2,w,c
  7008  004C6E  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  7009                           
  7010                           ;sm_MenuConfiguration_MC50.c: 640:     }
  7011  004C72  0012               	return	
  7012  004C74                     l21124:
  7013                           
  7014                           ; BSR set to: 1
  7015                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  7016  004C74  5168               	movf	(_menu_st+23)& (0+255),w,b
  7017  004C76  0D02               	mullw	2
  7018  004C78  0E52               	movlw	low (_menu_st+1)
  7019  004C7A  24F3               	addwf	243,w,c
  7020  004C7C  6ED9               	movwf	fsr2l,c
  7021  004C7E  0E01               	movlw	high (_menu_st+1)
  7022  004C80  20F4               	addwfc	prodh,w,c
  7023  004C82  6EDA               	movwf	fsr2h,c
  7024  004C84  50DF               	movf	indf2,w,c
  7025  004C86  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7026  004C88  5168               	movf	(_menu_st+23)& (0+255),w,b
  7027  004C8A  0D02               	mullw	2
  7028  004C8C  0E51               	movlw	low _menu_st
  7029  004C8E  24F3               	addwf	243,w,c
  7030  004C90  6ED9               	movwf	fsr2l,c
  7031  004C92  0E01               	movlw	high _menu_st
  7032  004C94  20F4               	addwfc	prodh,w,c
  7033  004C96  6EDA               	movwf	fsr2h,c
  7034  004C98  50DF               	movf	indf2,w,c
  7035  004C9A  EC4D  F04E         	call	_SetSegmentValueMain
  7036  004C9E  0012               	return		;funcret
  7037  004CA0                     __end_of_load_New_Menu:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function _InitReceiver *****************
  7041 ;; Defined at:
  7042 ;;		line 207 in file "inputs_MC50.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		wreg, status,2
  7051 ;; Tracked objects:
  7052 ;;		On entry : 30/F
  7053 ;;		On exit  : 3F/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;Total ram usage:        0 bytes
  7061 ;; Hardware stack levels used: 1
  7062 ;; Hardware stack levels required when called: 4
  7063 ;; This function calls:
  7064 ;;		Nothing
  7065 ;; This function is called by:
  7066 ;;		_main
  7067 ;;		_setValueToEdit
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text5
  7072  009C80                     __ptext5:
  7073                           	callstack 0
  7074  009C80                     _InitReceiver:
  7075                           	callstack 23
  7076                           
  7077                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  7078                           
  7079                           ;incstack = 0
  7080  009C80  010E               	movlb	14	; () banked
  7081  009C82  9BCA               	bcf	202,5,b	;volatile
  7082                           
  7083                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  7084  009C84  8BC2               	bsf	194,5,b	;volatile
  7085                           
  7086                           ;inputs_MC50.c: 210:     GIE = 1;
  7087  009C86  8EF2               	bsf	4082,7,c	;volatile
  7088                           
  7089                           ; BSR set to: 14
  7090                           ;inputs_MC50.c: 211:     RFstate = 0;
  7091  009C88  0E00               	movlw	0
  7092  009C8A  0101               	movlb	1	; () banked
  7093  009C8C  6F9D               	movwf	_RFstate& (0+255),b
  7094                           
  7095                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7096  009C8E  0E00               	movlw	0
  7097  009C90  0100               	movlb	0	; () banked
  7098  009C92  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7099                           
  7100                           ;inputs_MC50.c: 213:     RFFull = 0;
  7101  009C94  0E00               	movlw	0
  7102  009C96  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7103                           
  7104                           ; BSR set to: 0
  7105  009C98  0012               	return		;funcret
  7106  009C9A                     __end_of_InitReceiver:
  7107                           	callstack 0
  7108                           
  7109 ;; *************** function _controlSelectRemote *****************
  7110 ;; Defined at:
  7111 ;;		line 1103 in file "sm_MenuConfiguration_MC50.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;		None
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7116 ;;  pos             1   10[BANK0 ] unsigned char 
  7117 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7118 ;;  temp            1   16[BANK0 ] unsigned char 
  7119 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7124 ;; Tracked objects:
  7125 ;;		On entry : 3F/1
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7130 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7132 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7133 ;;Total ram usage:        9 bytes
  7134 ;; Hardware stack levels used: 1
  7135 ;; Hardware stack levels required when called: 14
  7136 ;; This function calls:
  7137 ;;		_ClearFlag_rfCMD
  7138 ;;		_RemoveSerial
  7139 ;;		_SaveNVM_VarSystem
  7140 ;;		_SetSegmentValue
  7141 ;;		_SetSegmentValueIntermitentMain
  7142 ;;		_SetSegmentValueMain
  7143 ;;		___awdiv
  7144 ;;		___lbmod
  7145 ;;		_cmdMemoryIsEmpty
  7146 ;;		_getSerialCmd
  7147 ;;		_getTypeRemote
  7148 ;;		_saveNewSerial
  7149 ;;		_sm_send_event
  7150 ;;		_validateRemoteSerialNumber
  7151 ;; This function is called by:
  7152 ;;		_sm_execute_menuConfiguration
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text6
  7157  003F5A                     __ptext6:
  7158                           	callstack 0
  7159  003F5A                     _controlSelectRemote:
  7160                           	callstack 14
  7161                           
  7162                           ; BSR set to: 1
  7163                           ;sm_MenuConfiguration_MC50.c: 1104:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1105:     char temp=getSerialCmd(&tempSerial);
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;incstack = 0
  7167  003F5A  0EE4               	movlw	low controlSelectRemote@tempSerial
  7168  003F5C  6E1B               	movwf	getSerialCmd@serial^0,c
  7169  003F5E  EC83  F049         	call	_getSerialCmd	;wreg free
  7170  003F62  0100               	movlb	0	; () banked
  7171  003F64  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;sm_MenuConfiguration_MC50.c: 1106:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          107:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7175  003F66  0101               	movlb	1	; () banked
  7176  003F68  BFAE               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7177  003F6A  D008               	goto	u25560
  7178  003F6C  51AE               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7179  003F6E  E103               	bnz	u25550
  7180  003F70  05AD               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7181  003F72  A0D8               	btfss	status,0,c
  7182  003F74  D003               	goto	u25560
  7183  003F76                     u25550:
  7184                           
  7185                           ; BSR set to: 1
  7186  003F76  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7187  003F78  A4D8               	btfss	status,2,c
  7188  003F7A  D028               	goto	l22332
  7189  003F7C                     u25560:
  7190                           
  7191                           ; BSR set to: 1
  7192                           ;sm_MenuConfiguration_MC50.c: 1108:     {;sm_MenuConfiguration_MC50.c: 1109:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7193  003F7C  0EF2               	movlw	low _main_stateMachine
  7194  003F7E  6E12               	movwf	sm_send_event@psm^0,c
  7195  003F80  0E01               	movlw	high _main_stateMachine
  7196  003F82  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7197  003F84  0E00               	movlw	0
  7198  003F86  6E15               	movwf	(sm_send_event@event+1)^0,c
  7199  003F88  0E07               	movlw	7
  7200  003F8A  6E14               	movwf	sm_send_event@event^0,c
  7201  003F8C  EC4F  F047         	call	_sm_send_event	;wreg free
  7202                           
  7203                           ;sm_MenuConfiguration_MC50.c: 1110:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7204  003F90  0EBB               	movlw	low _menuConfiguration_stateMachine
  7205  003F92  6E12               	movwf	sm_send_event@psm^0,c
  7206  003F94  0E02               	movlw	high _menuConfiguration_stateMachine
  7207  003F96  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7208  003F98  0E00               	movlw	0
  7209  003F9A  6E15               	movwf	(sm_send_event@event+1)^0,c
  7210  003F9C  0E03               	movlw	3
  7211  003F9E  6E14               	movwf	sm_send_event@event^0,c
  7212  003FA0  EC4F  F047         	call	_sm_send_event	;wreg free
  7213                           
  7214                           ;sm_MenuConfiguration_MC50.c: 1111:         var_sys.DistanceProgrammingActive=NO;
  7215  003FA4  0E00               	movlw	0
  7216  003FA6  0101               	movlb	1	; () banked
  7217  003FA8  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7218                           
  7219                           ; BSR set to: 1
  7220                           ;sm_MenuConfiguration_MC50.c: 1112:         var_sys.ProgrammingDistanceIs=NoCMD;
  7221  003FAA  0E00               	movlw	0
  7222  003FAC  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7223                           
  7224                           ; BSR set to: 1
  7225                           ;sm_MenuConfiguration_MC50.c: 1113:         SetSegmentValueMain(dMinus,dMinus);
  7226  003FAE  0E18               	movlw	24
  7227  003FB0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7228  003FB2  0E18               	movlw	24
  7229  003FB4  EC4D  F04E         	call	_SetSegmentValueMain
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;sm_MenuConfiguration_MC50.c: 1114:         ClearFlag_rfCMD();
  7233  003FB8  ECA0  F04F         	call	_ClearFlag_rfCMD	;wreg free
  7234                           
  7235                           ;sm_MenuConfiguration_MC50.c: 1115:         button_struct.processed=1;
  7236  003FBC  0E01               	movlw	1
  7237  003FBE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7238                           
  7239                           ;sm_MenuConfiguration_MC50.c: 1116:         ts_system.timeoutMenu = 0;
  7240  003FC0  0E00               	movlw	0
  7241  003FC2  0101               	movlb	1	; () banked
  7242  003FC4  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7243  003FC6  0E00               	movlw	0
  7244  003FC8  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7245                           
  7246                           ;sm_MenuConfiguration_MC50.c: 1118:     }
  7247  003FCA  0012               	return	
  7248  003FCC                     l22332:
  7249                           
  7250                           ; BSR set to: 1
  7251  003FCC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7252  003FCE  A4D8               	btfss	status,2,c
  7253  003FD0  D05B               	goto	l22354
  7254                           
  7255                           ; BSR set to: 1
  7256  003FD2  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7257  003FD4  B4D8               	btfsc	status,2,c
  7258  003FD6  D058               	goto	l22354
  7259                           
  7260                           ; BSR set to: 1
  7261                           ;sm_MenuConfiguration_MC50.c: 1120:     {;sm_MenuConfiguration_MC50.c: 1121:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7262  003FD8  0E00               	movlw	0
  7263  003FDA  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7264  003FDC  0E64               	movlw	100
  7265  003FDE  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;sm_MenuConfiguration_MC50.c: 1122:         if(edit_Param.tempValue<=edit_Param.Min)
  7269  003FE0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7270  003FE2  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7271  003FE4  A0D8               	btfss	status,0,c
  7272  003FE6  D003               	goto	l22342
  7273                           
  7274                           ; BSR set to: 1
  7275                           ;sm_MenuConfiguration_MC50.c: 1123:         {;sm_MenuConfiguration_MC50.c: 1124:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7276  003FE8  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7277                           
  7278                           ;sm_MenuConfiguration_MC50.c: 1125:         }
  7279  003FEC  D001               	goto	l22344
  7280  003FEE                     l22342:
  7281                           
  7282                           ; BSR set to: 1
  7283                           ;sm_MenuConfiguration_MC50.c: 1127:         {;sm_MenuConfiguration_MC50.c: 1128:        
      +                               edit_Param.tempValue--;
  7284  003FEE  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7285  003FF0                     l22344:
  7286                           
  7287                           ; BSR set to: 1
  7288                           ;sm_MenuConfiguration_MC50.c: 1130:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7289  003FF0  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7290  003FF4  5168               	movf	(_menu_st+23)& (0+255),w,b
  7291  003FF6  ECA6  F040         	call	_cmdMemoryIsEmpty
  7292  003FFA  06E8               	decf	wreg,f,c
  7293  003FFC  B4D8               	btfsc	status,2,c
  7294  003FFE  D004               	goto	u25610
  7295  004000  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7296  004002  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7297  004004  A4D8               	btfss	status,2,c
  7298  004006  D021               	goto	l22350
  7299  004008                     u25610:
  7300                           
  7301                           ;sm_MenuConfiguration_MC50.c: 1131:         {;sm_MenuConfiguration_MC50.c: 1132:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7302  004008  0E0A               	movlw	10
  7303  00400A  6E10               	movwf	___lbmod@divisor^0,c
  7304  00400C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7305  00400E  EC15  F04D         	call	___lbmod
  7306  004012  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7307  004014  0E00               	movlw	0
  7308  004016  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7309  004018  0E14               	movlw	20
  7310  00401A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7311  00401C  0E0A               	movlw	10
  7312  00401E  6E10               	movwf	___lbmod@divisor^0,c
  7313  004020  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7314  004022  EC15  F04D         	call	___lbmod
  7315  004026  0100               	movlb	0	; () banked
  7316  004028  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7317  00402A  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7318  00402C  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7319  00402E  6E14               	movwf	___awdiv@dividend^0,c
  7320  004030  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7321  004032  A0D8               	btfss	status,0,c
  7322  004034  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7323  004036  0E00               	movlw	0
  7324  004038  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7325  00403A  0E0A               	movlw	10
  7326  00403C  6E16               	movwf	___awdiv@divisor^0,c
  7327  00403E  EC90  F042         	call	___awdiv	;wreg free
  7328  004042  5014               	movf	?___awdiv^0,w,c
  7329  004044  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  7330                           
  7331                           ;sm_MenuConfiguration_MC50.c: 1133:         }
  7332  004048  D01C               	goto	l22352
  7333  00404A                     l22350:
  7334                           
  7335                           ;sm_MenuConfiguration_MC50.c: 1135:         {;sm_MenuConfiguration_MC50.c: 1136:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7336  00404A  0E0A               	movlw	10
  7337  00404C  6E10               	movwf	___lbmod@divisor^0,c
  7338  00404E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7339  004050  EC15  F04D         	call	___lbmod
  7340  004054  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7341  004056  0E0A               	movlw	10
  7342  004058  6E10               	movwf	___lbmod@divisor^0,c
  7343  00405A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7344  00405C  EC15  F04D         	call	___lbmod
  7345  004060  0100               	movlb	0	; () banked
  7346  004062  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7347  004064  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7348  004066  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7349  004068  6E14               	movwf	___awdiv@dividend^0,c
  7350  00406A  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7351  00406C  A0D8               	btfss	status,0,c
  7352  00406E  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7353  004070  0E00               	movlw	0
  7354  004072  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7355  004074  0E0A               	movlw	10
  7356  004076  6E16               	movwf	___awdiv@divisor^0,c
  7357  004078  EC90  F042         	call	___awdiv	;wreg free
  7358  00407C  5014               	movf	?___awdiv^0,w,c
  7359  00407E  EC4D  F04E         	call	_SetSegmentValueMain
  7360  004082                     l22352:
  7361                           
  7362                           ;sm_MenuConfiguration_MC50.c: 1138:         button_struct.processed=1;
  7363  004082  0E01               	movlw	1
  7364  004084  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7365                           
  7366                           ;sm_MenuConfiguration_MC50.c: 1139:     }
  7367  004086  0012               	return	
  7368  004088                     l22354:
  7369                           
  7370                           ; BSR set to: 1
  7371  004088  0E17               	movlw	23
  7372  00408A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7373  00408C  A4D8               	btfss	status,2,c
  7374  00408E  D057               	goto	l22376
  7375                           
  7376                           ; BSR set to: 1
  7377  004090  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7378  004092  B4D8               	btfsc	status,2,c
  7379  004094  D054               	goto	l22376
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;sm_MenuConfiguration_MC50.c: 1141:     {;sm_MenuConfiguration_MC50.c: 1142:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7383  004096  0E00               	movlw	0
  7384  004098  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7385  00409A  0E64               	movlw	100
  7386  00409C  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7387                           
  7388                           ; BSR set to: 1
  7389                           ;sm_MenuConfiguration_MC50.c: 1143:         edit_Param.tempValue++;
  7390  00409E  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7391                           
  7392                           ; BSR set to: 1
  7393                           ;sm_MenuConfiguration_MC50.c: 1144:         if(edit_Param.tempValue>edit_Param.Max)
  7394  0040A0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7395  0040A2  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7396  0040A4  A0D8               	btfss	status,0,c
  7397                           
  7398                           ; BSR set to: 1
  7399                           ;sm_MenuConfiguration_MC50.c: 1145:         {;sm_MenuConfiguration_MC50.c: 1146:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7400  0040A6  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7401                           
  7402                           ; BSR set to: 1
  7403                           ;sm_MenuConfiguration_MC50.c: 1148:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7404  0040AA  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7405  0040AE  5168               	movf	(_menu_st+23)& (0+255),w,b
  7406  0040B0  ECA6  F040         	call	_cmdMemoryIsEmpty
  7407  0040B4  06E8               	decf	wreg,f,c
  7408  0040B6  B4D8               	btfsc	status,2,c
  7409  0040B8  D004               	goto	u25660
  7410  0040BA  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7411  0040BC  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7412  0040BE  A4D8               	btfss	status,2,c
  7413  0040C0  D021               	goto	l22372
  7414  0040C2                     u25660:
  7415                           
  7416                           ;sm_MenuConfiguration_MC50.c: 1149:         {;sm_MenuConfiguration_MC50.c: 1150:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7417  0040C2  0E0A               	movlw	10
  7418  0040C4  6E10               	movwf	___lbmod@divisor^0,c
  7419  0040C6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7420  0040C8  EC15  F04D         	call	___lbmod
  7421  0040CC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7422  0040CE  0E00               	movlw	0
  7423  0040D0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7424  0040D2  0E14               	movlw	20
  7425  0040D4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7426  0040D6  0E0A               	movlw	10
  7427  0040D8  6E10               	movwf	___lbmod@divisor^0,c
  7428  0040DA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7429  0040DC  EC15  F04D         	call	___lbmod
  7430  0040E0  0100               	movlb	0	; () banked
  7431  0040E2  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7432  0040E4  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7433  0040E6  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7434  0040E8  6E14               	movwf	___awdiv@dividend^0,c
  7435  0040EA  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7436  0040EC  A0D8               	btfss	status,0,c
  7437  0040EE  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7438  0040F0  0E00               	movlw	0
  7439  0040F2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7440  0040F4  0E0A               	movlw	10
  7441  0040F6  6E16               	movwf	___awdiv@divisor^0,c
  7442  0040F8  EC90  F042         	call	___awdiv	;wreg free
  7443  0040FC  5014               	movf	?___awdiv^0,w,c
  7444  0040FE  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  7445                           
  7446                           ;sm_MenuConfiguration_MC50.c: 1151:         }
  7447  004102  D7BF               	goto	l22352
  7448  004104                     l22372:
  7449                           
  7450                           ;sm_MenuConfiguration_MC50.c: 1153:         {;sm_MenuConfiguration_MC50.c: 1154:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7451  004104  0E0A               	movlw	10
  7452  004106  6E10               	movwf	___lbmod@divisor^0,c
  7453  004108  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7454  00410A  EC15  F04D         	call	___lbmod
  7455  00410E  6E1C               	movwf	SetSegmentValue@d2^0,c
  7456  004110  0E0A               	movlw	10
  7457  004112  6E10               	movwf	___lbmod@divisor^0,c
  7458  004114  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7459  004116  EC15  F04D         	call	___lbmod
  7460  00411A  0100               	movlb	0	; () banked
  7461  00411C  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7462  00411E  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7463  004120  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7464  004122  6E14               	movwf	___awdiv@dividend^0,c
  7465  004124  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7466  004126  A0D8               	btfss	status,0,c
  7467  004128  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7468  00412A  0E00               	movlw	0
  7469  00412C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7470  00412E  0E0A               	movlw	10
  7471  004130  6E16               	movwf	___awdiv@divisor^0,c
  7472  004132  EC90  F042         	call	___awdiv	;wreg free
  7473  004136  5014               	movf	?___awdiv^0,w,c
  7474  004138  EC67  F04E         	call	_SetSegmentValue
  7475  00413C  D7A2               	goto	l22352
  7476  00413E                     l22376:
  7477                           
  7478                           ; BSR set to: 1
  7479  00413E  0E63               	movlw	99
  7480  004140  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7481  004142  D01A               	goto	l22386
  7482                           
  7483                           ; BSR set to: 1
  7484  004144  0E63               	movlw	99
  7485  004146  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7486  004148  D017               	goto	l22386
  7487                           
  7488                           ; BSR set to: 1
  7489                           ;sm_MenuConfiguration_MC50.c: 1159:     {;sm_MenuConfiguration_MC50.c: 1160:         if(
      +                          menu_st.parameterSelected==0)
  7490  00414A  5168               	movf	(_menu_st+23)& (0+255),w,b
  7491  00414C  A4D8               	btfss	status,2,c
  7492  00414E  D00A               	goto	l22384
  7493                           
  7494                           ; BSR set to: 1
  7495                           ;sm_MenuConfiguration_MC50.c: 1161:         {;sm_MenuConfiguration_MC50.c: 1162:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7496  004150  0E13               	movlw	19
  7497  004152  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7498  004154  0E00               	movlw	0
  7499  004156  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7500  004158  0E0A               	movlw	10
  7501  00415A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7502  00415C  0E12               	movlw	18
  7503  00415E  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  7504                           
  7505                           ;sm_MenuConfiguration_MC50.c: 1163:         }
  7506  004162  0012               	return	
  7507  004164                     l22384:
  7508                           
  7509                           ; BSR set to: 1
  7510                           ;sm_MenuConfiguration_MC50.c: 1165:         {;sm_MenuConfiguration_MC50.c: 1166:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7511  004164  0E10               	movlw	16
  7512  004166  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7513  004168  0E00               	movlw	0
  7514  00416A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7515  00416C  0E0A               	movlw	10
  7516  00416E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7517  004170  0E12               	movlw	18
  7518  004172  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  7519  004176  0012               	return	
  7520  004178                     l22386:
  7521                           
  7522                           ; BSR set to: 1
  7523  004178  0100               	movlb	0	; () banked
  7524  00417A  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7525  00417C  B4D8               	btfsc	status,2,c
  7526  00417E  D0A8               	goto	l22454
  7527                           
  7528                           ; BSR set to: 0
  7529  004180  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7530  004182  B4D8               	btfsc	status,2,c
  7531  004184  D00F               	goto	u25750
  7532                           
  7533                           ; BSR set to: 0
  7534  004186  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7535  004188  B4D8               	btfsc	status,2,c
  7536  00418A  D00C               	goto	u25750
  7537                           
  7538                           ; BSR set to: 0
  7539  00418C  0E02               	movlw	2
  7540  00418E  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7541  004190  B4D8               	btfsc	status,2,c
  7542  004192  D008               	goto	u25750
  7543                           
  7544                           ; BSR set to: 0
  7545  004194  0E04               	movlw	4
  7546  004196  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7547  004198  B4D8               	btfsc	status,2,c
  7548  00419A  D004               	goto	u25750
  7549                           
  7550                           ; BSR set to: 0
  7551  00419C  0E08               	movlw	8
  7552  00419E  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7553  0041A0  A4D8               	btfss	status,2,c
  7554  0041A2  D096               	goto	l22454
  7555  0041A4                     u25750:
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;sm_MenuConfiguration_MC50.c: 1170:     {;sm_MenuConfiguration_MC50.c: 1171:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1172:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7559  0041A4  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7560  0041A8  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7561  0041AC  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7562  0041B0  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7563  0041B4  0E00               	movlw	0
  7564  0041B6  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7565  0041B8  0EE2               	movlw	low controlSelectRemote@pos
  7566  0041BA  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7567  0041BC  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7568  0041BE  ECD4  F030         	call	_validateRemoteSerialNumber	;wreg free
  7569  0041C2  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;sm_MenuConfiguration_MC50.c: 1174:         TypeRemote_st typeRemote = getTypeRemote();
  7573  0041C4  EC9D  F04F         	call	_getTypeRemote	;wreg free
  7574  0041C8  0100               	movlb	0	; () banked
  7575  0041CA  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;sm_MenuConfiguration_MC50.c: 1175:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7579  0041CC  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7580  0041CE  A4D8               	btfss	status,2,c
  7581  0041D0  0012               	return	
  7582                           
  7583                           ; BSR set to: 0
  7584  0041D2  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7585  0041D4  B4D8               	btfsc	status,2,c
  7586  0041D6  D003               	goto	u25780
  7587                           
  7588                           ; BSR set to: 0
  7589  0041D8  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7590  0041DA  A4D8               	btfss	status,2,c
  7591  0041DC  0012               	return	
  7592  0041DE                     u25780:
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;sm_MenuConfiguration_MC50.c: 1176:         {;sm_MenuConfiguration_MC50.c: 1177:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7596  0041DE  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7597  0041E2  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7598  0041E6  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7599  0041EA  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7600  0041EE  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7601  0041F2  0101               	movlb	1	; () banked
  7602  0041F4  5168               	movf	(_menu_st+23)& (0+255),w,b
  7603  0041F6  EC74  F045         	call	_saveNewSerial
  7604                           
  7605                           ;sm_MenuConfiguration_MC50.c: 1178:             if(menu_st.parameterSelected==0&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7606  0041FA  0101               	movlb	1	; () banked
  7607  0041FC  5168               	movf	(_menu_st+23)& (0+255),w,b
  7608  0041FE  A4D8               	btfss	status,2,c
  7609  004200  D009               	goto	l22418
  7610                           
  7611                           ; BSR set to: 1
  7612  004202  0100               	movlb	0	; () banked
  7613  004204  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7614  004206  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7615  004208  A4D8               	btfss	status,2,c
  7616  00420A  D004               	goto	l22418
  7617                           
  7618                           ; BSR set to: 0
  7619  00420C  0E63               	movlw	99
  7620  00420E  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7621  004210  D001               	goto	l22418
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;sm_MenuConfiguration_MC50.c: 1179:                 var_sys_NVM.positionRemotesFull++;
  7625  004212  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7626  004214                     l22418:
  7627                           
  7628                           ;sm_MenuConfiguration_MC50.c: 1180:             if(menu_st.parameterSelected==1&&edit_Pa
      +                          ram.tempValue==var_sys_NVM.positionRemotesWalk&&var_sys_NVM.positionRemotesWalk<99)
  7629  004214  0101               	movlb	1	; () banked
  7630  004216  0568               	decf	(_menu_st+23)& (0+255),w,b
  7631  004218  A4D8               	btfss	status,2,c
  7632  00421A  D009               	goto	l22426
  7633                           
  7634                           ; BSR set to: 1
  7635  00421C  0100               	movlb	0	; () banked
  7636  00421E  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7637  004220  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7638  004222  A4D8               	btfss	status,2,c
  7639  004224  D004               	goto	l22426
  7640                           
  7641                           ; BSR set to: 0
  7642  004226  0E63               	movlw	99
  7643  004228  61B9               	cpfslt	(_var_sys_NVM+33)& (0+255),b	;volatile
  7644  00422A  D001               	goto	l22426
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;sm_MenuConfiguration_MC50.c: 1181:                 var_sys_NVM.positionRemotesWalk++;
  7648  00422C  2BB9               	incf	(_var_sys_NVM+33)& (0+255),f,b	;volatile
  7649  00422E                     l22426:
  7650                           
  7651                           ;sm_MenuConfiguration_MC50.c: 1182:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7652  00422E  0EBB               	movlw	low _menuConfiguration_stateMachine
  7653  004230  6E12               	movwf	sm_send_event@psm^0,c
  7654  004232  0E02               	movlw	high _menuConfiguration_stateMachine
  7655  004234  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7656  004236  0E00               	movlw	0
  7657  004238  6E15               	movwf	(sm_send_event@event+1)^0,c
  7658  00423A  0E08               	movlw	8
  7659  00423C  6E14               	movwf	sm_send_event@event^0,c
  7660  00423E  EC4F  F047         	call	_sm_send_event	;wreg free
  7661                           
  7662                           ;sm_MenuConfiguration_MC50.c: 1183:             var_sys.DistanceProgrammingActive=NO;
  7663  004242  0E00               	movlw	0
  7664  004244  0101               	movlb	1	; () banked
  7665  004246  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7666                           
  7667                           ; BSR set to: 1
  7668                           ;sm_MenuConfiguration_MC50.c: 1184:             var_sys.ProgrammingDistanceIs=NoCMD;
  7669  004248  0E00               	movlw	0
  7670  00424A  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7671                           
  7672                           ; BSR set to: 1
  7673                           ;sm_MenuConfiguration_MC50.c: 1185:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7674  00424C  0E00               	movlw	0
  7675  00424E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7676  004250  0E28               	movlw	40
  7677  004252  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7678                           
  7679                           ; BSR set to: 1
  7680                           ;sm_MenuConfiguration_MC50.c: 1186:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7681  004254  0E0A               	movlw	10
  7682  004256  6E10               	movwf	___lbmod@divisor^0,c
  7683  004258  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7684  00425A  EC15  F04D         	call	___lbmod
  7685  00425E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7686  004260  0E00               	movlw	0
  7687  004262  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7688  004264  0E04               	movlw	4
  7689  004266  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7690  004268  0E0A               	movlw	10
  7691  00426A  6E10               	movwf	___lbmod@divisor^0,c
  7692  00426C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7693  00426E  EC15  F04D         	call	___lbmod
  7694  004272  0100               	movlb	0	; () banked
  7695  004274  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7696  004276  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7697  004278  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7698  00427A  6E14               	movwf	___awdiv@dividend^0,c
  7699  00427C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7700  00427E  A0D8               	btfss	status,0,c
  7701  004280  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7702  004282  0E00               	movlw	0
  7703  004284  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7704  004286  0E0A               	movlw	10
  7705  004288  6E16               	movwf	___awdiv@divisor^0,c
  7706  00428A  EC90  F042         	call	___awdiv	;wreg free
  7707  00428E  5014               	movf	?___awdiv^0,w,c
  7708  004290  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  7709                           
  7710                           ;sm_MenuConfiguration_MC50.c: 1187:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7711  004294  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7712  004296  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7713  004298  B4D8               	btfsc	status,2,c
  7714  00429A  D003               	goto	u25860
  7715  00429C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7716  00429E  A4D8               	btfss	status,2,c
  7717  0042A0  0012               	return	
  7718  0042A2                     u25860:
  7719                           
  7720                           ;sm_MenuConfiguration_MC50.c: 1188:             {;sm_MenuConfiguration_MC50.c: 1192:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesWalk==0
      +                           && typeRemote==Keeloq_RollingCode)
  7721  0042A2  0100               	movlb	0	; () banked
  7722  0042A4  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7723  0042A6  A4D8               	btfss	status,2,c
  7724  0042A8  D008               	goto	l22448
  7725                           
  7726                           ; BSR set to: 0
  7727  0042AA  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
  7728  0042AC  A4D8               	btfss	status,2,c
  7729  0042AE  D005               	goto	l22448
  7730                           
  7731                           ; BSR set to: 0
  7732  0042B0  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7733  0042B2  A4D8               	btfss	status,2,c
  7734  0042B4  D002               	goto	l22448
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;sm_MenuConfiguration_MC50.c: 1193:                 {;sm_MenuConfiguration_MC50.c: 1195:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7738  0042B6  0E01               	movlw	1
  7739  0042B8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7740  0042BA                     l22448:
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;sm_MenuConfiguration_MC50.c: 1199:                 edit_Param.tempValue++;
  7744  0042BA  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;sm_MenuConfiguration_MC50.c: 1200:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7748  0042BC  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7749  0042C0  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7750  0042C4  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;sm_MenuConfiguration_MC50.c: 1201:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7754  0042C8  0E02               	movlw	2
  7755  0042CA  EC5D  F04B         	call	_SaveNVM_VarSystem
  7756  0042CE  0012               	return	
  7757  0042D0                     l22454:
  7758                           
  7759                           ; BSR set to: 0
  7760  0042D0  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7761  0042D2  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7762  0042D4  B4D8               	btfsc	status,2,c
  7763  0042D6  0012               	return	
  7764                           
  7765                           ; BSR set to: 0
  7766  0042D8  0E07               	movlw	7
  7767  0042DA  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7768  0042DC  A4D8               	btfss	status,2,c
  7769  0042DE  0012               	return	
  7770                           
  7771                           ; BSR set to: 0
  7772  0042E0  0E27               	movlw	39
  7773  0042E2  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7774  0042E4  0012               	return	
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;sm_MenuConfiguration_MC50.c: 1208:     {;sm_MenuConfiguration_MC50.c: 1209:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7778  0042E6  0E00               	movlw	0
  7779  0042E8  0101               	movlb	1	; () banked
  7780  0042EA  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7781  0042EC  0E64               	movlw	100
  7782  0042EE  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7783                           
  7784                           ; BSR set to: 1
  7785                           ;sm_MenuConfiguration_MC50.c: 1210:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7786  0042F0  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7787  0042F4  5168               	movf	(_menu_st+23)& (0+255),w,b
  7788  0042F6  EC55  F043         	call	_RemoveSerial
  7789                           
  7790                           ;sm_MenuConfiguration_MC50.c: 1211:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7791  0042FA  0E0A               	movlw	10
  7792  0042FC  6E10               	movwf	___lbmod@divisor^0,c
  7793  0042FE  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7794  004300  EC15  F04D         	call	___lbmod
  7795  004304  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7796  004306  0E00               	movlw	0
  7797  004308  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7798  00430A  0E14               	movlw	20
  7799  00430C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7800  00430E  0E0A               	movlw	10
  7801  004310  6E10               	movwf	___lbmod@divisor^0,c
  7802  004312  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7803  004314  EC15  F04D         	call	___lbmod
  7804  004318  0100               	movlb	0	; () banked
  7805  00431A  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7806  00431C  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7807  00431E  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7808  004320  6E14               	movwf	___awdiv@dividend^0,c
  7809  004322  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7810  004324  A0D8               	btfss	status,0,c
  7811  004326  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7812  004328  0E00               	movlw	0
  7813  00432A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7814  00432C  0E0A               	movlw	10
  7815  00432E  6E16               	movwf	___awdiv@divisor^0,c
  7816  004330  EC90  F042         	call	___awdiv	;wreg free
  7817  004334  5014               	movf	?___awdiv^0,w,c
  7818  004336  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  7819  00433A  0012               	return	
  7820  00433C                     __end_of_controlSelectRemote:
  7821                           	callstack 0
  7822                           
  7823 ;; *************** function _getTypeRemote *****************
  7824 ;; Defined at:
  7825 ;;		line 459 in file "inputs_MC50.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;		None
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;		None
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  1    wreg      enum E10559
  7832 ;; Registers used:
  7833 ;;		wreg, status,2
  7834 ;; Tracked objects:
  7835 ;;		On entry : 3F/0
  7836 ;;		On exit  : 3F/2
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7843 ;;Total ram usage:        0 bytes
  7844 ;; Hardware stack levels used: 1
  7845 ;; Hardware stack levels required when called: 4
  7846 ;; This function calls:
  7847 ;;		Nothing
  7848 ;; This function is called by:
  7849 ;;		_controlSelectRemote
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text7
  7854  009F3A                     __ptext7:
  7855                           	callstack 0
  7856  009F3A                     _getTypeRemote:
  7857                           	callstack 23
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;inputs_MC50.c: 460:     return classic_data.type;
  7861                           
  7862                           ;incstack = 0
  7863  009F3A  0102               	movlb	2	; () banked
  7864  009F3C  519E               	movf	(_classic_data+14)& (0+255),w,b
  7865                           
  7866                           ; BSR set to: 2
  7867  009F3E  0012               	return		;funcret
  7868  009F40                     __end_of_getTypeRemote:
  7869                           	callstack 0
  7870                           
  7871 ;; *************** function _getSerialCmd *****************
  7872 ;; Defined at:
  7873 ;;		line 442 in file "inputs_MC50.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7876 ;;		 -> controlSelectRemote@tempSerial(4), 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  temp            1   27[COMRAM] char 
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      char 
  7881 ;; Registers used:
  7882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 3F/1
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7888 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7892 ;;Total ram usage:        2 bytes
  7893 ;; Hardware stack levels used: 1
  7894 ;; Hardware stack levels required when called: 5
  7895 ;; This function calls:
  7896 ;;		_memcpy
  7897 ;; This function is called by:
  7898 ;;		_controlSelectRemote
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           	psect	text8
  7903  009306                     __ptext8:
  7904                           	callstack 0
  7905  009306                     _getSerialCmd:
  7906                           	callstack 22
  7907                           
  7908                           ; BSR set to: 1
  7909                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7910                           
  7911                           ; BSR set to: 2
  7912                           ;incstack = 0
  7913  009306  681C               	setf	getSerialCmd@temp^0,c
  7914                           
  7915                           ; BSR set to: 1
  7916                           ;inputs_MC50.c: 444:     if(RFFull)
  7917  009308  0100               	movlb	0	; () banked
  7918  00930A  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7919  00930C  B4D8               	btfsc	status,2,c
  7920  00930E  D020               	goto	l20818
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7924  009310  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7925  009312  B4D8               	btfsc	status,2,c
  7926  009314  D00E               	goto	l20814
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7930  009316  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7931  00931A  6A11               	clrf	(memcpy@d1+1)^0,c
  7932  00931C  0E94               	movlw	low (_classic_data+4)
  7933  00931E  6E12               	movwf	memcpy@s1^0,c
  7934  009320  0E02               	movlw	high (_classic_data+4)
  7935  009322  6E13               	movwf	(memcpy@s1+1)^0,c
  7936  009324  0E00               	movlw	0
  7937  009326  6E15               	movwf	(memcpy@n+1)^0,c
  7938  009328  0E04               	movlw	4
  7939  00932A  6E14               	movwf	memcpy@n^0,c
  7940  00932C  EC5F  F04A         	call	_memcpy	;wreg free
  7941                           
  7942                           ;inputs_MC50.c: 449:         }
  7943  009330  D00D               	goto	l20816
  7944  009332                     l20814:
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7948  009332  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7949  009336  6A11               	clrf	(memcpy@d1+1)^0,c
  7950  009338  0ECA               	movlw	low (_BufferRF+4)
  7951  00933A  6E12               	movwf	memcpy@s1^0,c
  7952  00933C  0E02               	movlw	high (_BufferRF+4)
  7953  00933E  6E13               	movwf	(memcpy@s1+1)^0,c
  7954  009340  0E00               	movlw	0
  7955  009342  6E15               	movwf	(memcpy@n+1)^0,c
  7956  009344  0E04               	movlw	4
  7957  009346  6E14               	movwf	memcpy@n^0,c
  7958  009348  EC5F  F04A         	call	_memcpy	;wreg free
  7959  00934C                     l20816:
  7960                           
  7961                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7962  00934C  C29C  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7963  009350                     l20818:
  7964                           
  7965                           ;inputs_MC50.c: 456:     return temp;
  7966  009350  501C               	movf	getSerialCmd@temp^0,w,c
  7967  009352  0012               	return		;funcret
  7968  009354                     __end_of_getSerialCmd:
  7969                           	callstack 0
  7970                           
  7971 ;; *************** function _controlSaveRemote *****************
  7972 ;; Defined at:
  7973 ;;		line 1216 in file "sm_MenuConfiguration_MC50.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 3F/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7991 ;;Total ram usage:        1 bytes
  7992 ;; Hardware stack levels used: 1
  7993 ;; Hardware stack levels required when called: 6
  7994 ;; This function calls:
  7995 ;;		_ClearFlag_rfCMD
  7996 ;;		_SetSegmentValueIntermitentMain
  7997 ;;		_SetSegmentValueMain
  7998 ;;		___awdiv
  7999 ;;		___lbmod
  8000 ;;		_sm_send_event
  8001 ;; This function is called by:
  8002 ;;		_sm_execute_menuConfiguration
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           	psect	text9
  8007  007CC0                     __ptext9:
  8008                           	callstack 0
  8009  007CC0                     _controlSaveRemote:
  8010                           	callstack 22
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;sm_MenuConfiguration_MC50.c: 1217:      if (ts_system.timeSinalizationDigit<=0)
  8014                           
  8015                           ;incstack = 0
  8016  007CC0  0101               	movlb	1	; () banked
  8017  007CC2  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8018  007CC4  D005               	goto	u25930
  8019  007CC6  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8020  007CC8  E154               	bnz	l3493
  8021  007CCA  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8022  007CCC  B0D8               	btfsc	status,0,c
  8023  007CCE  0012               	return	
  8024  007CD0                     u25930:
  8025                           
  8026                           ; BSR set to: 1
  8027                           ;sm_MenuConfiguration_MC50.c: 1218:      {;sm_MenuConfiguration_MC50.c: 1219:          i
      +                          f(edit_Param.Max==0)
  8028  007CD0  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8029  007CD2  A4D8               	btfss	status,2,c
  8030  007CD4  D02E               	goto	l22476
  8031                           
  8032                           ; BSR set to: 1
  8033                           ;sm_MenuConfiguration_MC50.c: 1220:          {;sm_MenuConfiguration_MC50.c: 1221:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8034  007CD6  0E00               	movlw	0
  8035  007CD8  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8036  007CDA  0EC8               	movlw	200
  8037  007CDC  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8038                           
  8039                           ; BSR set to: 1
  8040                           ;sm_MenuConfiguration_MC50.c: 1222:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8041  007CDE  0EBB               	movlw	low _menuConfiguration_stateMachine
  8042  007CE0  6E12               	movwf	sm_send_event@psm^0,c
  8043  007CE2  0E02               	movlw	high _menuConfiguration_stateMachine
  8044  007CE4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8045  007CE6  0E00               	movlw	0
  8046  007CE8  6E15               	movwf	(sm_send_event@event+1)^0,c
  8047  007CEA  0E09               	movlw	9
  8048  007CEC  6E14               	movwf	sm_send_event@event^0,c
  8049  007CEE  EC4F  F047         	call	_sm_send_event	;wreg free
  8050                           
  8051                           ;sm_MenuConfiguration_MC50.c: 1223:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8052  007CF2  0E0A               	movlw	10
  8053  007CF4  6E10               	movwf	___lbmod@divisor^0,c
  8054  007CF6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8055  007CF8  EC15  F04D         	call	___lbmod
  8056  007CFC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8057  007CFE  0E00               	movlw	0
  8058  007D00  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8059  007D02  0E14               	movlw	20
  8060  007D04  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8061  007D06  0E0A               	movlw	10
  8062  007D08  6E10               	movwf	___lbmod@divisor^0,c
  8063  007D0A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8064  007D0C  EC15  F04D         	call	___lbmod
  8065  007D10  6E20               	movwf	??_controlSaveRemote^0,c
  8066  007D12  5020               	movf	??_controlSaveRemote^0,w,c
  8067  007D14  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8068  007D16  6E14               	movwf	___awdiv@dividend^0,c
  8069  007D18  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8070  007D1A  A0D8               	btfss	status,0,c
  8071  007D1C  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8072  007D1E  0E00               	movlw	0
  8073  007D20  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8074  007D22  0E0A               	movlw	10
  8075  007D24  6E16               	movwf	___awdiv@divisor^0,c
  8076  007D26  EC90  F042         	call	___awdiv	;wreg free
  8077  007D2A  5014               	movf	?___awdiv^0,w,c
  8078  007D2C  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
  8079                           
  8080                           ;sm_MenuConfiguration_MC50.c: 1224:          }
  8081  007D30  0012               	return	
  8082  007D32                     l22476:
  8083                           
  8084                           ; BSR set to: 1
  8085                           ;sm_MenuConfiguration_MC50.c: 1226:          {;sm_MenuConfiguration_MC50.c: 1227:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8086  007D32  0EF2               	movlw	low _main_stateMachine
  8087  007D34  6E12               	movwf	sm_send_event@psm^0,c
  8088  007D36  0E01               	movlw	high _main_stateMachine
  8089  007D38  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8090  007D3A  0E00               	movlw	0
  8091  007D3C  6E15               	movwf	(sm_send_event@event+1)^0,c
  8092  007D3E  0E07               	movlw	7
  8093  007D40  6E14               	movwf	sm_send_event@event^0,c
  8094  007D42  EC4F  F047         	call	_sm_send_event	;wreg free
  8095                           
  8096                           ;sm_MenuConfiguration_MC50.c: 1228:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8097  007D46  0EBB               	movlw	low _menuConfiguration_stateMachine
  8098  007D48  6E12               	movwf	sm_send_event@psm^0,c
  8099  007D4A  0E02               	movlw	high _menuConfiguration_stateMachine
  8100  007D4C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8101  007D4E  0E00               	movlw	0
  8102  007D50  6E15               	movwf	(sm_send_event@event+1)^0,c
  8103  007D52  0E04               	movlw	4
  8104  007D54  6E14               	movwf	sm_send_event@event^0,c
  8105  007D56  EC4F  F047         	call	_sm_send_event	;wreg free
  8106                           
  8107                           ;sm_MenuConfiguration_MC50.c: 1229:             SetSegmentValueMain(dMinus,dMinus);
  8108  007D5A  0E18               	movlw	24
  8109  007D5C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8110  007D5E  0E18               	movlw	24
  8111  007D60  EC4D  F04E         	call	_SetSegmentValueMain
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;sm_MenuConfiguration_MC50.c: 1230:             ClearFlag_rfCMD();
  8115  007D64  ECA0  F04F         	call	_ClearFlag_rfCMD	;wreg free
  8116                           
  8117                           ;sm_MenuConfiguration_MC50.c: 1231:             ts_system.timeoutMenu = 0;
  8118  007D68  0E00               	movlw	0
  8119  007D6A  0101               	movlb	1	; () banked
  8120  007D6C  6FAE               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8121  007D6E  0E00               	movlw	0
  8122  007D70  6FAD               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8123  007D72                     l3493:
  8124  007D72  0012               	return		;funcret
  8125  007D74                     __end_of_controlSaveRemote:
  8126                           	callstack 0
  8127                           
  8128 ;; *************** function ___lbmod *****************
  8129 ;; Defined at:
  8130 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  dividend        1    wreg     unsigned char 
  8133 ;;  divisor         1   15[COMRAM] unsigned char 
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  dividend        1   16[COMRAM] unsigned char 
  8136 ;;  rem             1   18[COMRAM] unsigned char 
  8137 ;;  counter         1   17[COMRAM] unsigned char 
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      unsigned char 
  8140 ;; Registers used:
  8141 ;;		wreg, status,2, status,0
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/1
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8147 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8148 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8151 ;;Total ram usage:        4 bytes
  8152 ;; Hardware stack levels used: 1
  8153 ;; Hardware stack levels required when called: 4
  8154 ;; This function calls:
  8155 ;;		Nothing
  8156 ;; This function is called by:
  8157 ;;		_controlSelectRemote
  8158 ;;		_controlSaveRemote
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	text10
  8163  009A2A                     __ptext10:
  8164                           	callstack 0
  8165  009A2A                     ___lbmod:
  8166                           	callstack 23
  8167                           
  8168                           ;incstack = 0
  8169                           ;___lbmod@dividend stored from wreg
  8170  009A2A  6E11               	movwf	___lbmod@dividend^0,c
  8171  009A2C  0E08               	movlw	8
  8172  009A2E  6E12               	movwf	___lbmod@counter^0,c
  8173  009A30  0E00               	movlw	0
  8174  009A32  6E13               	movwf	___lbmod@rem^0,c
  8175  009A34                     l21202:
  8176  009A34  90D8               	bcf	status,0,c
  8177  009A36  3411               	rlcf	___lbmod@dividend^0,w,c
  8178  009A38  3413               	rlcf	___lbmod@rem^0,w,c
  8179  009A3A  6E13               	movwf	___lbmod@rem^0,c
  8180  009A3C  90D8               	bcf	status,0,c
  8181  009A3E  3611               	rlcf	___lbmod@dividend^0,f,c
  8182  009A40  5010               	movf	___lbmod@divisor^0,w,c
  8183  009A42  5C13               	subwf	___lbmod@rem^0,w,c
  8184  009A44  A0D8               	btfss	status,0,c
  8185  009A46  D002               	goto	l21210
  8186  009A48  5010               	movf	___lbmod@divisor^0,w,c
  8187  009A4A  5E13               	subwf	___lbmod@rem^0,f,c
  8188  009A4C                     l21210:
  8189  009A4C  2E12               	decfsz	___lbmod@counter^0,f,c
  8190  009A4E  D7F2               	goto	l21202
  8191  009A50  5013               	movf	___lbmod@rem^0,w,c
  8192  009A52  0012               	return		;funcret
  8193  009A54                     __end_of___lbmod:
  8194                           	callstack 0
  8195                           
  8196 ;; *************** function ___awdiv *****************
  8197 ;; Defined at:
  8198 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  dividend        2   19[COMRAM] int 
  8201 ;;  divisor         2   21[COMRAM] int 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;  quotient        2   25[COMRAM] int 
  8204 ;;  sign            1   24[COMRAM] unsigned char 
  8205 ;;  counter         1   23[COMRAM] unsigned char 
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  2   19[COMRAM] int 
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8216 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8218 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8219 ;;Total ram usage:        8 bytes
  8220 ;; Hardware stack levels used: 1
  8221 ;; Hardware stack levels required when called: 4
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		_controlSelectRemote
  8226 ;;		_controlSaveRemote
  8227 ;; This function uses a non-reentrant model
  8228 ;;
  8229                           
  8230                           	psect	text11
  8231  008520                     __ptext11:
  8232                           	callstack 0
  8233  008520                     ___awdiv:
  8234                           	callstack 23
  8235                           
  8236                           ;incstack = 0
  8237  008520  0E00               	movlw	0
  8238  008522  6E19               	movwf	___awdiv@sign^0,c
  8239  008524  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8240  008526  D006               	goto	l21138
  8241  008528  6C16               	negf	___awdiv@divisor^0,c
  8242  00852A  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8243  00852C  B0D8               	btfsc	status,0,c
  8244  00852E  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8245  008530  0E01               	movlw	1
  8246  008532  6E19               	movwf	___awdiv@sign^0,c
  8247  008534                     l21138:
  8248  008534  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8249  008536  D006               	goto	l21144
  8250  008538  6C14               	negf	___awdiv@dividend^0,c
  8251  00853A  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8252  00853C  B0D8               	btfsc	status,0,c
  8253  00853E  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8254  008540  0E01               	movlw	1
  8255  008542  1A19               	xorwf	___awdiv@sign^0,f,c
  8256  008544                     l21144:
  8257  008544  0E00               	movlw	0
  8258  008546  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8259  008548  0E00               	movlw	0
  8260  00854A  6E1A               	movwf	___awdiv@quotient^0,c
  8261  00854C  5016               	movf	___awdiv@divisor^0,w,c
  8262  00854E  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8263  008550  B4D8               	btfsc	status,2,c
  8264  008552  D01C               	goto	l21166
  8265  008554  0E01               	movlw	1
  8266  008556  6E18               	movwf	___awdiv@counter^0,c
  8267  008558  D004               	goto	l21152
  8268  00855A                     l21150:
  8269  00855A  90D8               	bcf	status,0,c
  8270  00855C  3616               	rlcf	___awdiv@divisor^0,f,c
  8271  00855E  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8272  008560  2A18               	incf	___awdiv@counter^0,f,c
  8273  008562                     l21152:
  8274  008562  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8275  008564  D7FA               	goto	l21150
  8276  008566                     u24350:
  8277  008566  90D8               	bcf	status,0,c
  8278  008568  361A               	rlcf	___awdiv@quotient^0,f,c
  8279  00856A  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8280  00856C  5016               	movf	___awdiv@divisor^0,w,c
  8281  00856E  5C14               	subwf	___awdiv@dividend^0,w,c
  8282  008570  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8283  008572  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8284  008574  A0D8               	btfss	status,0,c
  8285  008576  D005               	goto	l21162
  8286  008578  5016               	movf	___awdiv@divisor^0,w,c
  8287  00857A  5E14               	subwf	___awdiv@dividend^0,f,c
  8288  00857C  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8289  00857E  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8290  008580  801A               	bsf	___awdiv@quotient^0,0,c
  8291  008582                     l21162:
  8292  008582  90D8               	bcf	status,0,c
  8293  008584  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8294  008586  3216               	rrcf	___awdiv@divisor^0,f,c
  8295  008588  2E18               	decfsz	___awdiv@counter^0,f,c
  8296  00858A  D7ED               	goto	u24350
  8297  00858C                     l21166:
  8298  00858C  5019               	movf	___awdiv@sign^0,w,c
  8299  00858E  B4D8               	btfsc	status,2,c
  8300  008590  D004               	goto	l21170
  8301  008592  6C1A               	negf	___awdiv@quotient^0,c
  8302  008594  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8303  008596  B0D8               	btfsc	status,0,c
  8304  008598  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8305  00859A                     l21170:
  8306  00859A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8307  00859E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8308  0085A2  0012               	return		;funcret
  8309  0085A4                     __end_of___awdiv:
  8310                           	callstack 0
  8311                           
  8312 ;; *************** function _SetSegmentValueMain *****************
  8313 ;; Defined at:
  8314 ;;		line 104 in file "outputs_MC50.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  d1              1    wreg     unsigned char 
  8317 ;;  d2              1   27[COMRAM] unsigned char 
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  d1              1   28[COMRAM] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 3F/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8329 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;Total ram usage:        2 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 4
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_sm_execute_main
  8340 ;;		_sm_execute_menuConfiguration
  8341 ;;		_load_New_Menu
  8342 ;;		_controlSelectRemote
  8343 ;;		_controlSaveRemote
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           	psect	text12
  8348  009C9A                     __ptext12:
  8349                           	callstack 0
  8350  009C9A                     _SetSegmentValueMain:
  8351                           	callstack 22
  8352                           
  8353                           ;incstack = 0
  8354                           ;SetSegmentValueMain@d1 stored from wreg
  8355  009C9A  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8356                           
  8357                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8358  009C9C  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8359                           
  8360                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8361  009CA0  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8362                           
  8363                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8364  009CA4  0E00               	movlw	0
  8365  009CA6  0100               	movlb	0	; () banked
  8366  009CA8  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8367  009CAA  0E00               	movlw	0
  8368  009CAC  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8372  009CAE  0E00               	movlw	0
  8373  009CB0  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8374                           
  8375                           ; BSR set to: 0
  8376  009CB2  0012               	return		;funcret
  8377  009CB4                     __end_of_SetSegmentValueMain:
  8378                           	callstack 0
  8379                           
  8380 ;; *************** function _ClearFlag_rfCMD *****************
  8381 ;; Defined at:
  8382 ;;		line 463 in file "inputs_MC50.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;		None
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      void 
  8389 ;; Registers used:
  8390 ;;		wreg, status,2
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/1
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8400 ;;Total ram usage:        0 bytes
  8401 ;; Hardware stack levels used: 1
  8402 ;; Hardware stack levels required when called: 4
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_sm_execute_menuConfiguration
  8407 ;;		_controlSelectRemote
  8408 ;;		_controlSaveRemote
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text13
  8413  009F40                     __ptext13:
  8414                           	callstack 0
  8415  009F40                     _ClearFlag_rfCMD:
  8416                           	callstack 23
  8417                           
  8418                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;incstack = 0
  8422  009F40  0E01               	movlw	1
  8423  009F42  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8424  009F44  0012               	return		;funcret
  8425  009F46                     __end_of_ClearFlag_rfCMD:
  8426                           	callstack 0
  8427                           
  8428 ;; *************** function _controlLearnDigit *****************
  8429 ;; Defined at:
  8430 ;;		line 1237 in file "sm_MenuConfiguration_MC50.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, status,2, status,0, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 3F/0
  8441 ;;		On exit  : 3E/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8448 ;;Total ram usage:        0 bytes
  8449 ;; Hardware stack levels used: 1
  8450 ;; Hardware stack levels required when called: 5
  8451 ;; This function calls:
  8452 ;;		_SetSegmentValueLearn
  8453 ;; This function is called by:
  8454 ;;		_sm_execute_menuConfiguration
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text14
  8459  0097BC                     __ptext14:
  8460                           	callstack 0
  8461  0097BC                     _controlLearnDigit:
  8462                           	callstack 23
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;sm_MenuConfiguration_MC50.c: 1239:     if(ts_system.timeSinalizationDigit<=0 )
  8466                           
  8467                           ;incstack = 0
  8468  0097BC  0101               	movlb	1	; () banked
  8469  0097BE  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8470  0097C0  D005               	goto	u25950
  8471  0097C2  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8472  0097C4  E112               	bnz	l3499
  8473  0097C6  05AB               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8474  0097C8  B0D8               	btfsc	status,0,c
  8475  0097CA  0012               	return	
  8476  0097CC                     u25950:
  8477                           
  8478                           ; BSR set to: 1
  8479                           ;sm_MenuConfiguration_MC50.c: 1240:     {;sm_MenuConfiguration_MC50.c: 1241:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8480  0097CC  0E00               	movlw	0
  8481  0097CE  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8482  0097D0  0E02               	movlw	2
  8483  0097D2  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8484                           
  8485                           ; BSR set to: 1
  8486                           ;sm_MenuConfiguration_MC50.c: 1242:         if(var_sys.StateMotor==InClose)
  8487  0097D4  0E03               	movlw	3
  8488  0097D6  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8489  0097D8  A4D8               	btfss	status,2,c
  8490  0097DA  D004               	goto	l22492
  8491                           
  8492                           ; BSR set to: 1
  8493                           ;sm_MenuConfiguration_MC50.c: 1243:         {;sm_MenuConfiguration_MC50.c: 1244:        
      +                               SetSegmentValueLearn(Left);
  8494  0097DC  0E00               	movlw	0
  8495  0097DE  EC57  F03B         	call	_SetSegmentValueLearn
  8496                           
  8497                           ;sm_MenuConfiguration_MC50.c: 1245:         }
  8498  0097E2  0012               	return	
  8499  0097E4                     l22492:
  8500                           
  8501                           ; BSR set to: 1
  8502                           ;sm_MenuConfiguration_MC50.c: 1247:         {;sm_MenuConfiguration_MC50.c: 1248:        
      +                               SetSegmentValueLearn(Rigth);
  8503  0097E4  0E01               	movlw	1
  8504  0097E6  EC57  F03B         	call	_SetSegmentValueLearn
  8505  0097EA                     l3499:
  8506  0097EA  0012               	return		;funcret
  8507  0097EC                     __end_of_controlLearnDigit:
  8508                           	callstack 0
  8509                           
  8510 ;; *************** function _SetSegmentValueLearn *****************
  8511 ;; Defined at:
  8512 ;;		line 124 in file "outputs_MC50.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  direction       1    wreg     enum E10602
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  direction       1   17[COMRAM] enum E10602
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  1    wreg      void 
  8519 ;; Registers used:
  8520 ;;		wreg, status,2, status,0
  8521 ;; Tracked objects:
  8522 ;;		On entry : 3F/1
  8523 ;;		On exit  : 3F/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8530 ;;Total ram usage:        3 bytes
  8531 ;; Hardware stack levels used: 1
  8532 ;; Hardware stack levels required when called: 4
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		_controlLearnDigit
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           	psect	text15
  8541  0076AE                     __ptext15:
  8542                           	callstack 0
  8543  0076AE                     _SetSegmentValueLearn:
  8544                           	callstack 23
  8545                           
  8546                           ;incstack = 0
  8547                           ;SetSegmentValueLearn@direction stored from wreg
  8548  0076AE  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8549                           
  8550                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8551  0076B0  0E00               	movlw	0
  8552  0076B2  0100               	movlb	0	; () banked
  8553  0076B4  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8554  0076B6  0E00               	movlw	0
  8555  0076B8  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8556                           
  8557                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8558  0076BA  0E00               	movlw	0
  8559  0076BC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8560                           
  8561                           ;outputs_MC50.c: 128:     switch (direction)
  8562  0076BE  D066               	goto	l20976
  8563  0076C0                     l20922:
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8567  0076C0  0E1A               	movlw	26
  8568  0076C2  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8569  0076C4  A4D8               	btfss	status,2,c
  8570  0076C6  D009               	goto	l20928
  8571                           
  8572                           ; BSR set to: 0
  8573  0076C8  0E20               	movlw	32
  8574  0076CA  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8575  0076CC  A4D8               	btfss	status,2,c
  8576  0076CE  D005               	goto	l20928
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8580  0076D0  0E20               	movlw	32
  8581  0076D2  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8582                           
  8583                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8584  0076D4  0E1A               	movlw	26
  8585  0076D6  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8586                           
  8587                           ;outputs_MC50.c: 135:             }
  8588  0076D8  0012               	return	
  8589  0076DA                     l20928:
  8590                           
  8591                           ; BSR set to: 0
  8592  0076DA  0E20               	movlw	32
  8593  0076DC  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8594  0076DE  A4D8               	btfss	status,2,c
  8595  0076E0  D009               	goto	l20934
  8596                           
  8597                           ; BSR set to: 0
  8598  0076E2  0E1D               	movlw	29
  8599  0076E4  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8600  0076E6  A4D8               	btfss	status,2,c
  8601  0076E8  D005               	goto	l20934
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8605  0076EA  0E1D               	movlw	29
  8606  0076EC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8607                           
  8608                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8609  0076EE  0E20               	movlw	32
  8610  0076F0  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8611                           
  8612                           ;outputs_MC50.c: 140:             }
  8613  0076F2  0012               	return	
  8614  0076F4                     l20934:
  8615                           
  8616                           ; BSR set to: 0
  8617  0076F4  0E1F               	movlw	31
  8618  0076F6  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8619  0076F8  A4D8               	btfss	status,2,c
  8620  0076FA  D005               	goto	l20938
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8624  0076FC  0E1A               	movlw	26
  8625  0076FE  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8626                           
  8627                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8628  007700  0E20               	movlw	32
  8629  007702  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8630                           
  8631                           ;outputs_MC50.c: 145:             }
  8632  007704  0012               	return	
  8633  007706                     l20938:
  8634                           
  8635                           ; BSR set to: 0
  8636  007706  0E20               	movlw	32
  8637  007708  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8638  00770A  A4D8               	btfss	status,2,c
  8639  00770C  D002               	goto	l20942
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8643  00770E  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8644                           
  8645                           ;outputs_MC50.c: 149:             }
  8646  007710  0012               	return	
  8647  007712                     l20942:
  8648                           
  8649                           ; BSR set to: 0
  8650  007712  0E20               	movlw	32
  8651  007714  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8652  007716  A4D8               	btfss	status,2,c
  8653  007718  D002               	goto	l20946
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8657  00771A  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8658                           
  8659                           ;outputs_MC50.c: 153:             }
  8660  00771C  0012               	return	
  8661  00771E                     l20946:
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8665  00771E  0E1A               	movlw	26
  8666  007720  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8667                           
  8668                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8669  007722  0E20               	movlw	32
  8670  007724  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8671  007726  0012               	return	
  8672  007728                     l20948:
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8676  007728  0E1A               	movlw	26
  8677  00772A  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8678  00772C  A4D8               	btfss	status,2,c
  8679  00772E  D009               	goto	l20954
  8680                           
  8681                           ; BSR set to: 0
  8682  007730  0E20               	movlw	32
  8683  007732  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8684  007734  A4D8               	btfss	status,2,c
  8685  007736  D005               	goto	l20954
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8689  007738  0E1A               	movlw	26
  8690  00773A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8691                           
  8692                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8693  00773C  0E20               	movlw	32
  8694  00773E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8695                           
  8696                           ;outputs_MC50.c: 165:             }
  8697  007740  0012               	return	
  8698  007742                     l20954:
  8699                           
  8700                           ; BSR set to: 0
  8701  007742  0E20               	movlw	32
  8702  007744  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8703  007746  A4D8               	btfss	status,2,c
  8704  007748  D009               	goto	l20960
  8705                           
  8706                           ; BSR set to: 0
  8707  00774A  0E1D               	movlw	29
  8708  00774C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8709  00774E  A4D8               	btfss	status,2,c
  8710  007750  D005               	goto	l20960
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8714  007752  0E20               	movlw	32
  8715  007754  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8716                           
  8717                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8718  007756  0E1D               	movlw	29
  8719  007758  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8720                           
  8721                           ;outputs_MC50.c: 170:             }
  8722  00775A  0012               	return	
  8723  00775C                     l20960:
  8724                           
  8725                           ; BSR set to: 0
  8726  00775C  0E1A               	movlw	26
  8727  00775E  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8728  007760  A4D8               	btfss	status,2,c
  8729  007762  D003               	goto	l20964
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8733  007764  0E1F               	movlw	31
  8734  007766  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8735                           
  8736                           ;outputs_MC50.c: 174:             }
  8737  007768  0012               	return	
  8738  00776A                     l20964:
  8739                           
  8740                           ; BSR set to: 0
  8741  00776A  0E20               	movlw	32
  8742  00776C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8743  00776E  A4D8               	btfss	status,2,c
  8744  007770  D002               	goto	l20968
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8748  007772  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8749                           
  8750                           ;outputs_MC50.c: 178:             }
  8751  007774  0012               	return	
  8752  007776                     l20968:
  8753                           
  8754                           ; BSR set to: 0
  8755  007776  0E20               	movlw	32
  8756  007778  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8757  00777A  A4D8               	btfss	status,2,c
  8758  00777C  D002               	goto	l20972
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8762  00777E  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8763                           
  8764                           ;outputs_MC50.c: 182:             }
  8765  007780  0012               	return	
  8766  007782                     l20972:
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8770  007782  0E1A               	movlw	26
  8771  007784  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8772                           
  8773                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8774  007786  0E20               	movlw	32
  8775  007788  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8776  00778A  0012               	return	
  8777  00778C                     l20976:
  8778                           
  8779                           ; BSR set to: 0
  8780  00778C  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8781  00778E  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8782  007790  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8783                           
  8784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8785                           ; Switch size 1, requested type "simple"
  8786                           ; Number of cases is 1, Range of values is 0 to 0
  8787                           ; switch strategies available:
  8788                           ; Name         Instructions Cycles
  8789                           ; simple_byte            4     3 (average)
  8790                           ;	Chosen strategy is simple_byte
  8791  007792  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8792  007794  0A00               	xorlw	0	; case 0
  8793  007796  A4D8               	btfss	status,2,c
  8794  007798  0012               	return	
  8795                           
  8796                           ; BSR set to: 0
  8797                           ; Switch size 1, requested type "simple"
  8798                           ; Number of cases is 2, Range of values is 0 to 1
  8799                           ; switch strategies available:
  8800                           ; Name         Instructions Cycles
  8801                           ; simple_byte            7     4 (average)
  8802                           ;	Chosen strategy is simple_byte
  8803  00779A  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8804  00779C  0A00               	xorlw	0	; case 0
  8805  00779E  B4D8               	btfsc	status,2,c
  8806  0077A0  D7C3               	goto	l20948
  8807  0077A2  0A01               	xorlw	1	; case 1
  8808  0077A4  A4D8               	btfss	status,2,c
  8809  0077A6  0012               	return	
  8810  0077A8  D78B               	goto	l20922
  8811  0077AA                     __end_of_SetSegmentValueLearn:
  8812                           	callstack 0
  8813                           
  8814 ;; *************** function ___lldiv *****************
  8815 ;; Defined at:
  8816 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  dividend        4   15[COMRAM] unsigned long 
  8819 ;;  divisor         4   19[COMRAM] unsigned long 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  quotient        4   23[COMRAM] unsigned long 
  8822 ;;  counter         1   27[COMRAM] unsigned char 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  4   15[COMRAM] unsigned long 
  8825 ;; Registers used:
  8826 ;;		wreg, status,2, status,0
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/1
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8832 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8833 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;Total ram usage:       13 bytes
  8837 ;; Hardware stack levels used: 1
  8838 ;; Hardware stack levels required when called: 4
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_sm_execute_menuConfiguration
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text16
  8847  008628                     __ptext16:
  8848                           	callstack 0
  8849  008628                     ___lldiv:
  8850                           	callstack 24
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;incstack = 0
  8854  008628  0E00               	movlw	0
  8855  00862A  6E18               	movwf	___lldiv@quotient^0,c
  8856  00862C  0E00               	movlw	0
  8857  00862E  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8858  008630  0E00               	movlw	0
  8859  008632  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8860  008634  0E00               	movlw	0
  8861  008636  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8862  008638  5014               	movf	___lldiv@divisor^0,w,c
  8863  00863A  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8864  00863C  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8865  00863E  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8866  008640  B4D8               	btfsc	status,2,c
  8867  008642  D02A               	goto	l3822
  8868  008644  0E01               	movlw	1
  8869  008646  6E1C               	movwf	___lldiv@counter^0,c
  8870  008648  D006               	goto	l22512
  8871  00864A                     l22510:
  8872  00864A  90D8               	bcf	status,0,c
  8873  00864C  3614               	rlcf	___lldiv@divisor^0,f,c
  8874  00864E  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8875  008650  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8876  008652  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8877  008654  2A1C               	incf	___lldiv@counter^0,f,c
  8878  008656                     l22512:
  8879  008656  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8880  008658  D7F8               	goto	l22510
  8881  00865A                     u25990:
  8882  00865A  90D8               	bcf	status,0,c
  8883  00865C  3618               	rlcf	___lldiv@quotient^0,f,c
  8884  00865E  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8885  008660  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8886  008662  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8887  008664  5014               	movf	___lldiv@divisor^0,w,c
  8888  008666  5C10               	subwf	___lldiv@dividend^0,w,c
  8889  008668  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8890  00866A  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8891  00866C  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8892  00866E  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8893  008670  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8894  008672  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8895  008674  A0D8               	btfss	status,0,c
  8896  008676  D009               	goto	l22522
  8897  008678  5014               	movf	___lldiv@divisor^0,w,c
  8898  00867A  5E10               	subwf	___lldiv@dividend^0,f,c
  8899  00867C  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8900  00867E  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8901  008680  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8902  008682  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8903  008684  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8904  008686  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8905  008688  8018               	bsf	___lldiv@quotient^0,0,c
  8906  00868A                     l22522:
  8907  00868A  90D8               	bcf	status,0,c
  8908  00868C  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8909  00868E  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8910  008690  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8911  008692  3214               	rrcf	___lldiv@divisor^0,f,c
  8912  008694  2E1C               	decfsz	___lldiv@counter^0,f,c
  8913  008696  D7E1               	goto	u25990
  8914  008698                     l3822:
  8915  008698  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8916  00869C  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8917  0086A0  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8918  0086A4  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8919  0086A8  0012               	return		;funcret
  8920  0086AA                     __end_of___lldiv:
  8921                           	callstack 0
  8922                           
  8923 ;; *************** function _sm_execute_ControlGate *****************
  8924 ;; Defined at:
  8925 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  psm             2   15[BANK0 ] PTR struct .
  8928 ;;		 -> controlGate_stateMachine(11), 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 3F/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8943 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8944 ;;Total ram usage:        5 bytes
  8945 ;; Hardware stack levels used: 1
  8946 ;; Hardware stack levels required when called: 15
  8947 ;; This function calls:
  8948 ;;		_GetOpenOrder
  8949 ;;		_SetSegmentValueIntermitent
  8950 ;;		_WaitPreFlash
  8951 ;;		_actionZone_Closed
  8952 ;;		_actionZone_Closing
  8953 ;;		_actionZone_Opened
  8954 ;;		_actionZone_Opening
  8955 ;;		_sm_execute_ControlLearning
  8956 ;;		_sm_send_event
  8957 ;; This function is called by:
  8958 ;;		_main
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text17
  8963  00433C                     __ptext17:
  8964                           	callstack 0
  8965  00433C                     _sm_execute_ControlGate:
  8966                           	callstack 15
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8970                           
  8971                           ;incstack = 0
  8972  00433C  0101               	movlb	1	; () banked
  8973  00433E  05F2               	decf	_main_stateMachine& (0+255),w,b
  8974  004340  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8975  004342  A4D8               	btfss	status,2,c
  8976  004344  D006               	goto	l26022
  8977                           
  8978                           ; BSR set to: 1
  8979  004346  0E06               	movlw	6
  8980  004348  0102               	movlb	2	; () banked
  8981  00434A  19BB               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8982  00434C  11BC               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8983  00434E  A4D8               	btfss	status,2,c
  8984  004350  0012               	return	
  8985  004352                     l26022:
  8986                           
  8987                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8988  004352  0101               	movlb	1	; () banked
  8989  004354  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8990  004356  A4D8               	btfss	status,2,c
  8991  004358  D0CE               	goto	l26096
  8992                           
  8993                           ; BSR set to: 1
  8994                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  8995  00435A  EC3C  F045         	call	_WaitPreFlash	;wreg free
  8996  00435E  D0CB               	goto	l26096
  8997  004360                     l26026:
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9001  004360  EE20 F004          	lfsr	2,4
  9002  004364  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9003  004366  26D9               	addwf	fsr2l,f,c
  9004  004368  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9005  00436A  22DA               	addwfc	fsr2h,f,c
  9006  00436C  0E0A               	movlw	10
  9007  00436E  18DE               	xorwf	postinc2,w,c
  9008  004370  10DE               	iorwf	postinc2,w,c
  9009  004372  A4D8               	btfss	status,2,c
  9010  004374  D006               	goto	l26030
  9011  004376                     u33040:
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9015  004376  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9016  00437A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9017  00437E  0E01               	movlw	1
  9018  004380  D0B5               	goto	L55
  9019  004382                     l26030:
  9020                           
  9021                           ; BSR set to: 0
  9022  004382  EE20 F004          	lfsr	2,4
  9023  004386  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9024  004388  26D9               	addwf	fsr2l,f,c
  9025  00438A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9026  00438C  22DA               	addwfc	fsr2h,f,c
  9027  00438E  0E0B               	movlw	11
  9028  004390  18DE               	xorwf	postinc2,w,c
  9029  004392  10DE               	iorwf	postinc2,w,c
  9030  004394  A4D8               	btfss	status,2,c
  9031  004396  D0CF               	goto	l26098
  9032  004398  D038               	goto	u33110
  9033  00439A                     l26034:
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9037  00439A  EE20 F004          	lfsr	2,4
  9038  00439E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9039  0043A0  26D9               	addwf	fsr2l,f,c
  9040  0043A2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9041  0043A4  22DA               	addwfc	fsr2h,f,c
  9042  0043A6  0E0C               	movlw	12
  9043  0043A8  18DE               	xorwf	postinc2,w,c
  9044  0043AA  10DE               	iorwf	postinc2,w,c
  9045  0043AC  A4D8               	btfss	status,2,c
  9046  0043AE  D072               	goto	l26082
  9047  0043B0                     u33060:
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9051  0043B0  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9052  0043B4  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9053  0043B8  0E02               	movlw	2
  9054  0043BA  D098               	goto	L55
  9055  0043BC                     l26042:
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9059  0043BC  EE20 F004          	lfsr	2,4
  9060  0043C0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9061  0043C2  26D9               	addwf	fsr2l,f,c
  9062  0043C4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9063  0043C6  22DA               	addwfc	fsr2h,f,c
  9064  0043C8  0E0D               	movlw	13
  9065  0043CA  18DE               	xorwf	postinc2,w,c
  9066  0043CC  10DE               	iorwf	postinc2,w,c
  9067  0043CE  B4D8               	btfsc	status,2,c
  9068  0043D0  D01C               	goto	u33110
  9069                           
  9070                           ; BSR set to: 0
  9071                           
  9072                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9076  0043D2  EE20 F004          	lfsr	2,4
  9077  0043D6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9078  0043D8  26D9               	addwf	fsr2l,f,c
  9079  0043DA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9080  0043DC  22DA               	addwfc	fsr2h,f,c
  9081  0043DE  0E0E               	movlw	14
  9082  0043E0  18DE               	xorwf	postinc2,w,c
  9083  0043E2  10DE               	iorwf	postinc2,w,c
  9084  0043E4  A4D8               	btfss	status,2,c
  9085  0043E6  D02D               	goto	L131
  9086  0043E8                     u33090:
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9090  0043E8  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9091  0043EC  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9092  0043F0  0E03               	movlw	3
  9093  0043F2  D07C               	goto	L55
  9094  0043F4                     l26054:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9098  0043F4  EE20 F004          	lfsr	2,4
  9099  0043F8  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9100  0043FA  26D9               	addwf	fsr2l,f,c
  9101  0043FC  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9102  0043FE  22DA               	addwfc	fsr2h,f,c
  9103  004400  0E0D               	movlw	13
  9104  004402  18DE               	xorwf	postinc2,w,c
  9105  004404  10DE               	iorwf	postinc2,w,c
  9106  004406  A4D8               	btfss	status,2,c
  9107  004408  D006               	goto	l26058
  9108  00440A                     u33110:
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9112  00440A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9113  00440E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9114  004412  0E04               	movlw	4
  9115  004414  D06B               	goto	L55
  9116  004416                     l26058:
  9117                           
  9118                           ; BSR set to: 0
  9119  004416  EE20 F004          	lfsr	2,4
  9120  00441A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9121  00441C  26D9               	addwf	fsr2l,f,c
  9122  00441E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9123  004420  22DA               	addwfc	fsr2h,f,c
  9124  004422  0E0F               	movlw	15
  9125  004424  18DE               	xorwf	postinc2,w,c
  9126  004426  10DE               	iorwf	postinc2,w,c
  9127  004428  B4D8               	btfsc	status,2,c
  9128  00442A  D7A5               	goto	u33040
  9129                           
  9130                           ; BSR set to: 0
  9131                           
  9132                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9136  00442C  EE20 F004          	lfsr	2,4
  9137  004430  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9138  004432  26D9               	addwf	fsr2l,f,c
  9139  004434  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9140  004436  22DA               	addwfc	fsr2h,f,c
  9141  004438  0E0C               	movlw	12
  9142  00443A  18DE               	xorwf	postinc2,w,c
  9143  00443C  10DE               	iorwf	postinc2,w,c
  9144  00443E  B4D8               	btfsc	status,2,c
  9145  004440  D7B7               	goto	u33060
  9146  004442                     L131:
  9147                           
  9148                           ; BSR set to: 0
  9149                           
  9150                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9154  004442  EE20 F004          	lfsr	2,4
  9155  004446  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9156  004448  26D9               	addwf	fsr2l,f,c
  9157  00444A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9158  00444C  22DA               	addwfc	fsr2h,f,c
  9159  00444E  0E10               	movlw	16
  9160  004450  D044               	goto	L128
  9161  004452                     l26070:
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9165  004452  EE20 F004          	lfsr	2,4
  9166  004456  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9167  004458  26D9               	addwf	fsr2l,f,c
  9168  00445A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9169  00445C  22DA               	addwfc	fsr2h,f,c
  9170  00445E  0E0E               	movlw	14
  9171  004460  18DE               	xorwf	postinc2,w,c
  9172  004462  10DE               	iorwf	postinc2,w,c
  9173  004464  B4D8               	btfsc	status,2,c
  9174  004466  D7C0               	goto	u33090
  9175                           
  9176                           ; BSR set to: 0
  9177                           
  9178                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9182  004468  EE20 F004          	lfsr	2,4
  9183  00446C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9184  00446E  26D9               	addwf	fsr2l,f,c
  9185  004470  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9186  004472  22DA               	addwfc	fsr2h,f,c
  9187  004474  0E0C               	movlw	12
  9188  004476  18DE               	xorwf	postinc2,w,c
  9189  004478  10DE               	iorwf	postinc2,w,c
  9190  00447A  B4D8               	btfsc	status,2,c
  9191  00447C  D799               	goto	u33060
  9192                           
  9193                           ; BSR set to: 0
  9194                           
  9195                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9199  00447E  EE20 F004          	lfsr	2,4
  9200  004482  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9201  004484  26D9               	addwf	fsr2l,f,c
  9202  004486  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9203  004488  22DA               	addwfc	fsr2h,f,c
  9204  00448A  0E10               	movlw	16
  9205  00448C  18DE               	xorwf	postinc2,w,c
  9206  00448E  10DE               	iorwf	postinc2,w,c
  9207  004490  B4D8               	btfsc	status,2,c
  9208  004492  D027               	goto	L129
  9209  004494                     l26082:
  9210                           
  9211                           ; BSR set to: 0
  9212  004494  EE20 F004          	lfsr	2,4
  9213  004498  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9214  00449A  26D9               	addwf	fsr2l,f,c
  9215  00449C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9216  00449E  22DA               	addwfc	fsr2h,f,c
  9217  0044A0  0E14               	movlw	20
  9218  0044A2  18DE               	xorwf	postinc2,w,c
  9219  0044A4  10DE               	iorwf	postinc2,w,c
  9220  0044A6  A4D8               	btfss	status,2,c
  9221  0044A8  D046               	goto	l26098
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9225  0044AA  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9226  0044AE  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9227  0044B2  0E05               	movlw	5
  9228  0044B4  D01B               	goto	L55
  9229  0044B6                     l26086:
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9233  0044B6  EE20 F004          	lfsr	2,4
  9234  0044BA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9235  0044BC  26D9               	addwf	fsr2l,f,c
  9236  0044BE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9237  0044C0  22DA               	addwfc	fsr2h,f,c
  9238  0044C2  0E13               	movlw	19
  9239  0044C4  18DE               	xorwf	postinc2,w,c
  9240  0044C6  10DE               	iorwf	postinc2,w,c
  9241  0044C8  B4D8               	btfsc	status,2,c
  9242  0044CA  D755               	goto	u33040
  9243                           
  9244                           ; BSR set to: 0
  9245                           
  9246                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9250  0044CC  EE20 F004          	lfsr	2,4
  9251  0044D0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9252  0044D2  26D9               	addwf	fsr2l,f,c
  9253  0044D4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9254  0044D6  22DA               	addwfc	fsr2h,f,c
  9255  0044D8  0E12               	movlw	18
  9256  0044DA                     L128:
  9257  0044DA  18DE               	xorwf	postinc2,w,c
  9258  0044DC  10DE               	iorwf	postinc2,w,c
  9259  0044DE  A4D8               	btfss	status,2,c
  9260  0044E0  D02A               	goto	l26098
  9261  0044E2                     L129:
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9265  0044E2  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9266  0044E6  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9267  0044EA  0E00               	movlw	0
  9268  0044EC                     L55:
  9269  0044EC  6EDE               	movwf	postinc2,c
  9270  0044EE  0E00               	movlw	0
  9271  0044F0  6EDD               	movwf	postdec2,c
  9272  0044F2  D021               	goto	l26098
  9273  0044F4                     l2653:
  9274                           
  9275                           ; BSR set to: 0
  9276  0044F4  D7FF               	goto	l2653
  9277  0044F6                     l26096:
  9278                           
  9279                           ; BSR set to: 1
  9280  0044F6  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9281  0044FA  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9282  0044FE  50DF               	movf	indf2,w,c
  9283  004500  0100               	movlb	0	; () banked
  9284  004502  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9285  004504  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9286                           
  9287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9288                           ; Switch size 1, requested type "simple"
  9289                           ; Number of cases is 1, Range of values is 0 to 0
  9290                           ; switch strategies available:
  9291                           ; Name         Instructions Cycles
  9292                           ; simple_byte            4     3 (average)
  9293                           ;	Chosen strategy is simple_byte
  9294  004506  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9295  004508  0A00               	xorlw	0	; case 0
  9296  00450A  A4D8               	btfss	status,2,c
  9297  00450C  D7F3               	goto	l2653
  9298                           
  9299                           ; BSR set to: 0
  9300                           ; Switch size 1, requested type "simple"
  9301                           ; Number of cases is 6, Range of values is 0 to 5
  9302                           ; switch strategies available:
  9303                           ; Name         Instructions Cycles
  9304                           ; simple_byte           19    10 (average)
  9305                           ;	Chosen strategy is simple_byte
  9306  00450E  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9307  004510  0A00               	xorlw	0	; case 0
  9308  004512  B4D8               	btfsc	status,2,c
  9309  004514  D725               	goto	l26026
  9310  004516  0A01               	xorlw	1	; case 1
  9311  004518  B4D8               	btfsc	status,2,c
  9312  00451A  D73F               	goto	l26034
  9313  00451C  0A03               	xorlw	3	; case 2
  9314  00451E  B4D8               	btfsc	status,2,c
  9315  004520  D74D               	goto	l26042
  9316  004522  0A01               	xorlw	1	; case 3
  9317  004524  B4D8               	btfsc	status,2,c
  9318  004526  D766               	goto	l26054
  9319  004528  0A07               	xorlw	7	; case 4
  9320  00452A  B4D8               	btfsc	status,2,c
  9321  00452C  D792               	goto	l26070
  9322  00452E  0A01               	xorlw	1	; case 5
  9323  004530  B4D8               	btfsc	status,2,c
  9324  004532  D7C1               	goto	l26086
  9325  004534  D7DF               	goto	l2653
  9326  004536                     l26098:
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9330  004536  0EE7               	movlw	low _controlGate_stateMachine
  9331  004538  6E12               	movwf	sm_send_event@psm^0,c
  9332  00453A  0E01               	movlw	high _controlGate_stateMachine
  9333  00453C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9334  00453E  0E00               	movlw	0
  9335  004540  6E15               	movwf	(sm_send_event@event+1)^0,c
  9336  004542  0E00               	movlw	0
  9337  004544  6E14               	movwf	sm_send_event@event^0,c
  9338  004546  EC4F  F047         	call	_sm_send_event	;wreg free
  9339                           
  9340                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9341  00454A  D07D               	goto	l26162
  9342  00454C                     l26100:
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9346  00454C  0E00               	movlw	0
  9347  00454E  0101               	movlb	1	; () banked
  9348  004550  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9349  004552  0E64               	movlw	100
  9350  004554  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9351                           
  9352                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9353  004556  0E01               	movlw	1
  9354  004558  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9355                           
  9356                           ; BSR set to: 1
  9357                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9358  00455A  0E02               	movlw	2
  9359  00455C  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9360  00455E  B4D8               	btfsc	status,2,c
  9361  004560  D003               	goto	u33220
  9362                           
  9363                           ; BSR set to: 1
  9364  004562  0E03               	movlw	3
  9365  004564  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9366  004566  D027               	goto	l26122
  9367  004568                     u33220:
  9368                           
  9369                           ; BSR set to: 1
  9370                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9371  004568  EC20  F02F         	call	_GetOpenOrder	;wreg free
  9372  00456C  0100               	movlb	0	; () banked
  9373  00456E  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9377  004570  0E14               	movlw	20
  9378  004572  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9379  004574  0E00               	movlw	0
  9380  004576  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9381  004578  0E14               	movlw	20
  9382  00457A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9383  00457C  0E0E               	movlw	14
  9384  00457E  EC0D  F04C         	call	_SetSegmentValueIntermitent
  9385                           
  9386                           ; BSR set to: 1
  9387                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9388  004582  0E00               	movlw	0
  9389  004584  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9390  004586  0E0A               	movlw	10
  9391  004588  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9392                           
  9393                           ; BSR set to: 1
  9394                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9395  00458A  0100               	movlb	0	; () banked
  9396  00458C  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9397  00458E  A4D8               	btfss	status,2,c
  9398  004590  D00A               	goto	u33260
  9399                           
  9400                           ; BSR set to: 0
  9401  004592  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9402  004594  B4D8               	btfsc	status,2,c
  9403  004596  D007               	goto	u33260
  9404                           
  9405                           ; BSR set to: 0
  9406  004598  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9407  00459A  B4D8               	btfsc	status,2,c
  9408  00459C  D004               	goto	u33260
  9409                           
  9410                           ; BSR set to: 0
  9411  00459E  0E17               	movlw	23
  9412  0045A0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9413  0045A2  A4D8               	btfss	status,2,c
  9414  0045A4  0012               	return	
  9415  0045A6                     u33260:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9419  0045A6  0E00               	movlw	0
  9420  0045A8  0101               	movlb	1	; () banked
  9421  0045AA  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9422                           
  9423                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9424  0045AC  0E00               	movlw	0
  9425  0045AE  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9426                           
  9427                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9428  0045B0  0E01               	movlw	1
  9429  0045B2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9430  0045B4  0012               	return	
  9431  0045B6                     l26122:
  9432                           
  9433                           ; BSR set to: 1
  9434                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9435  0045B6  0E01               	movlw	1
  9436  0045B8  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9437                           
  9438                           ; BSR set to: 1
  9439                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9440  0045BA  0E01               	movlw	1
  9441  0045BC  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9442  0045BE  0E00               	movlw	0
  9443  0045C0  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9444  0045C2  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9445  0045C4  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9446                           
  9447                           ; BSR set to: 1
  9448                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9449  0045C6  0E00               	movlw	0
  9450  0045C8  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9451                           
  9452                           ; BSR set to: 1
  9453                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9454  0045CA  0E00               	movlw	0
  9455  0045CC  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9456  0045CE  0E00               	movlw	0
  9457  0045D0  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9458  0045D2  0E00               	movlw	0
  9459  0045D4  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9460  0045D6  0E00               	movlw	0
  9461  0045D8  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9462                           
  9463                           ; BSR set to: 1
  9464                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9465  0045DA  0E00               	movlw	0
  9466  0045DC  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9467                           
  9468                           ; BSR set to: 1
  9469                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9470  0045DE  0E00               	movlw	0
  9471  0045E0  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9472                           
  9473                           ; BSR set to: 1
  9474                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9475  0045E2  0E00               	movlw	0
  9476  0045E4  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9477                           
  9478                           ; BSR set to: 1
  9479                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9480  0045E6  0E00               	movlw	0
  9481  0045E8  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9482  0045EA  0E28               	movlw	40
  9483  0045EC  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9484                           
  9485                           ; BSR set to: 1
  9486                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9487  0045EE  0E0C               	movlw	12
  9488  0045F0  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9489  0045F2  0E00               	movlw	0
  9490  0045F4  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9491  0045F6  0E04               	movlw	4
  9492  0045F8  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9493  0045FA  0E0F               	movlw	15
  9494  0045FC  EC0D  F04C         	call	_SetSegmentValueIntermitent
  9495                           
  9496                           ; BSR set to: 1
  9497                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9498  004600  0EE7               	movlw	low _controlGate_stateMachine
  9499  004602  6E12               	movwf	sm_send_event@psm^0,c
  9500  004604  0E01               	movlw	high _controlGate_stateMachine
  9501  004606  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9502  004608  0E00               	movlw	0
  9503  00460A  6E15               	movwf	(sm_send_event@event+1)^0,c
  9504  00460C  0E0A               	movlw	10
  9505  00460E  6E14               	movwf	sm_send_event@event^0,c
  9506  004610  EC4F  F047         	call	_sm_send_event	;wreg free
  9507  004614  0012               	return	
  9508  004616                     l26142:
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9512  004616  EC12  F03F         	call	_actionZone_Closed	;wreg free
  9513                           
  9514                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9515  00461A  0012               	return	
  9516  00461C                     l26144:
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9520  00461C  ECD1  F028         	call	_actionZone_Opening	;wreg free
  9521  004620                     l26146:
  9522                           
  9523                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9524  004620  0E00               	movlw	0
  9525  004622  0101               	movlb	1	; () banked
  9526  004624  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9527  004626  0E64               	movlw	100
  9528  004628  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9529                           
  9530                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9531  00462A  0012               	return	
  9532  00462C                     l26148:
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9536  00462C  EC40  F02D         	call	_actionZone_Opened	;wreg free
  9537  004630  D7F7               	goto	l26146
  9538  004632                     l26152:
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9542  004632  EC50  F026         	call	_actionZone_Closing	;wreg free
  9543  004636  D7F4               	goto	l26146
  9544  004638                     l26156:
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9548  004638  0EB0               	movlw	low _controlLearning_stateMachine
  9549  00463A  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9550  00463C  0E02               	movlw	high _controlLearning_stateMachine
  9551  00463E  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9552  004640  ECE7  F010         	call	_sm_execute_ControlLearning	;wreg free
  9553  004644  D7ED               	goto	l26146
  9554  004646                     l26162:
  9555  004646  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9556  00464A  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9557  00464E  50DF               	movf	indf2,w,c
  9558  004650  0100               	movlb	0	; () banked
  9559  004652  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9560  004654  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9561                           
  9562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9563                           ; Switch size 1, requested type "simple"
  9564                           ; Number of cases is 1, Range of values is 0 to 0
  9565                           ; switch strategies available:
  9566                           ; Name         Instructions Cycles
  9567                           ; simple_byte            4     3 (average)
  9568                           ;	Chosen strategy is simple_byte
  9569  004656  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9570  004658  0A00               	xorlw	0	; case 0
  9571  00465A  A4D8               	btfss	status,2,c
  9572  00465C  0012               	return	
  9573                           
  9574                           ; BSR set to: 0
  9575                           ; Switch size 1, requested type "simple"
  9576                           ; Number of cases is 6, Range of values is 0 to 5
  9577                           ; switch strategies available:
  9578                           ; Name         Instructions Cycles
  9579                           ; simple_byte           19    10 (average)
  9580                           ;	Chosen strategy is simple_byte
  9581  00465E  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9582  004660  0A00               	xorlw	0	; case 0
  9583  004662  B4D8               	btfsc	status,2,c
  9584  004664  D773               	goto	l26100
  9585  004666  0A01               	xorlw	1	; case 1
  9586  004668  B4D8               	btfsc	status,2,c
  9587  00466A  D7D5               	goto	l26142
  9588  00466C  0A03               	xorlw	3	; case 2
  9589  00466E  B4D8               	btfsc	status,2,c
  9590  004670  D7D5               	goto	l26144
  9591  004672  0A01               	xorlw	1	; case 3
  9592  004674  B4D8               	btfsc	status,2,c
  9593  004676  D7DD               	goto	l26152
  9594  004678  0A07               	xorlw	7	; case 4
  9595  00467A  B4D8               	btfsc	status,2,c
  9596  00467C  D7D7               	goto	l26148
  9597  00467E  0A01               	xorlw	1	; case 5
  9598  004680  A4D8               	btfss	status,2,c
  9599  004682  0012               	return	
  9600  004684  D7D9               	goto	l26156
  9601  004686                     __end_of_sm_execute_ControlGate:
  9602                           	callstack 0
  9603                           
  9604 ;; *************** function _sm_execute_ControlLearning *****************
  9605 ;; Defined at:
  9606 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;  psm             2    4[BANK0 ] PTR struct .
  9609 ;;		 -> controlLearning_stateMachine(11), 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 3F/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9623 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9624 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9625 ;;Total ram usage:        5 bytes
  9626 ;; Hardware stack levels used: 1
  9627 ;; Hardware stack levels required when called: 14
  9628 ;; This function calls:
  9629 ;;		_GetOpenOrder
  9630 ;;		_SaveNVM_VarSystem
  9631 ;;		_calculateMean
  9632 ;;		_clearLearningValue
  9633 ;;		_generateErrorLearnig
  9634 ;;		_sm_send_event
  9635 ;; This function is called by:
  9636 ;;		_sm_execute_ControlGate
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text18
  9641  0021CE                     __ptext18:
  9642                           	callstack 0
  9643  0021CE                     _sm_execute_ControlLearning:
  9644                           	callstack 15
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9648                           
  9649                           ;incstack = 0
  9650  0021CE  EC20  F02F         	call	_GetOpenOrder	;wreg free
  9651  0021D2  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9652                           
  9653                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9654  0021D4  D0B8               	goto	l23664
  9655  0021D6                     l23590:
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9659  0021D6  EE20 F004          	lfsr	2,4
  9660  0021DA  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9661  0021DC  26D9               	addwf	fsr2l,f,c
  9662  0021DE  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9663  0021E0  22DA               	addwfc	fsr2h,f,c
  9664  0021E2  0E0A               	movlw	10
  9665  0021E4  18DE               	xorwf	postinc2,w,c
  9666  0021E6  10DE               	iorwf	postinc2,w,c
  9667  0021E8  A4D8               	btfss	status,2,c
  9668  0021EA  D00D               	goto	l23598
  9669                           
  9670                           ; BSR set to: 0
  9671  0021EC  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9672  0021EE  B4D8               	btfsc	status,2,c
  9673  0021F0  D00A               	goto	l23598
  9674                           
  9675                           ; BSR set to: 0
  9676  0021F2  0101               	movlb	1	; () banked
  9677  0021F4  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9678  0021F6  A4D8               	btfss	status,2,c
  9679  0021F8  D006               	goto	l23598
  9680  0021FA                     u28040:
  9681                           
  9682                           ; BSR set to: 1
  9683                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9684  0021FA  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9685  0021FE  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9686  002202  0E02               	movlw	2
  9687  002204  D08A               	goto	L66
  9688  002206                     l23598:
  9689  002206  0100               	movlb	0	; () banked
  9690  002208  EE20 F004          	lfsr	2,4
  9691  00220C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9692  00220E  26D9               	addwf	fsr2l,f,c
  9693  002210  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9694  002212  22DA               	addwfc	fsr2h,f,c
  9695  002214  0E0A               	movlw	10
  9696  002216  18DE               	xorwf	postinc2,w,c
  9697  002218  10DE               	iorwf	postinc2,w,c
  9698  00221A  A4D8               	btfss	status,2,c
  9699  00221C  D00D               	goto	l23606
  9700                           
  9701                           ; BSR set to: 0
  9702  00221E  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9703  002220  B4D8               	btfsc	status,2,c
  9704  002222  D004               	goto	u28070
  9705                           
  9706                           ; BSR set to: 0
  9707  002224  0101               	movlb	1	; () banked
  9708  002226  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9709  002228  A4D8               	btfss	status,2,c
  9710  00222A  D006               	goto	l23606
  9711  00222C                     u28070:
  9712                           
  9713                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9714  00222C  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9715  002230  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9716  002234  0E04               	movlw	4
  9717  002236  D071               	goto	L66
  9718  002238                     l23606:
  9719  002238  0100               	movlb	0	; () banked
  9720  00223A  EE20 F004          	lfsr	2,4
  9721  00223E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9722  002240  26D9               	addwf	fsr2l,f,c
  9723  002242  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9724  002244  22DA               	addwfc	fsr2h,f,c
  9725  002246  0E0B               	movlw	11
  9726  002248  18DE               	xorwf	postinc2,w,c
  9727  00224A  10DE               	iorwf	postinc2,w,c
  9728  00224C  A4D8               	btfss	status,2,c
  9729  00224E  D09B               	goto	l23666
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9733  002250  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9734  002254  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9735  002258  0E01               	movlw	1
  9736  00225A  D05F               	goto	L66
  9737  00225C                     l23610:
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9741  00225C  EE20 F004          	lfsr	2,4
  9742  002260  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9743  002262  26D9               	addwf	fsr2l,f,c
  9744  002264  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9745  002266  22DA               	addwfc	fsr2h,f,c
  9746  002268  0E0A               	movlw	10
  9747  00226A  18DE               	xorwf	postinc2,w,c
  9748  00226C  10DE               	iorwf	postinc2,w,c
  9749  00226E  A4D8               	btfss	status,2,c
  9750  002270  D007               	goto	l23618
  9751                           
  9752                           ; BSR set to: 0
  9753  002272  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9754  002274  B4D8               	btfsc	status,2,c
  9755  002276  D004               	goto	l23618
  9756                           
  9757                           ; BSR set to: 0
  9758  002278  0101               	movlb	1	; () banked
  9759  00227A  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9760  00227C  B4D8               	btfsc	status,2,c
  9761  00227E  D7BD               	goto	u28040
  9762  002280                     l23618:
  9763  002280  0100               	movlb	0	; () banked
  9764  002282  EE20 F004          	lfsr	2,4
  9765  002286  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9766  002288  26D9               	addwf	fsr2l,f,c
  9767  00228A  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9768  00228C  22DA               	addwfc	fsr2h,f,c
  9769  00228E  0E0A               	movlw	10
  9770  002290  18DE               	xorwf	postinc2,w,c
  9771  002292  10DE               	iorwf	postinc2,w,c
  9772  002294  A4D8               	btfss	status,2,c
  9773  002296  D007               	goto	l23626
  9774                           
  9775                           ; BSR set to: 0
  9776  002298  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9777  00229A  B4D8               	btfsc	status,2,c
  9778  00229C  D7C7               	goto	u28070
  9779                           
  9780                           ; BSR set to: 0
  9781  00229E  0101               	movlb	1	; () banked
  9782  0022A0  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9783  0022A2  B4D8               	btfsc	status,2,c
  9784  0022A4  D7C3               	goto	u28070
  9785  0022A6                     l23626:
  9786  0022A6  0100               	movlb	0	; () banked
  9787  0022A8                     L68:
  9788  0022A8  EE20 F004          	lfsr	2,4
  9789  0022AC  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9790  0022AE  26D9               	addwf	fsr2l,f,c
  9791  0022B0  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9792  0022B2  22DA               	addwfc	fsr2h,f,c
  9793  0022B4  0E10               	movlw	16
  9794  0022B6  18DE               	xorwf	postinc2,w,c
  9795  0022B8  10DE               	iorwf	postinc2,w,c
  9796  0022BA  A4D8               	btfss	status,2,c
  9797  0022BC  D064               	goto	l23666
  9798  0022BE  D03C               	goto	L130
  9799  0022C0                     l23630:
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9803  0022C0  EE20 F004          	lfsr	2,4
  9804  0022C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9805  0022C6  26D9               	addwf	fsr2l,f,c
  9806  0022C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9807  0022CA  22DA               	addwfc	fsr2h,f,c
  9808  0022CC  0E0B               	movlw	11
  9809  0022CE  18DE               	xorwf	postinc2,w,c
  9810  0022D0  10DE               	iorwf	postinc2,w,c
  9811  0022D2  A4D8               	btfss	status,2,c
  9812  0022D4  D7E9               	goto	L68
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9816  0022D6  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9817  0022DA  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9818  0022DE  0E03               	movlw	3
  9819  0022E0  D01C               	goto	L66
  9820  0022E2                     l23638:
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9824  0022E2  EE20 F004          	lfsr	2,4
  9825  0022E6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9826  0022E8  26D9               	addwf	fsr2l,f,c
  9827  0022EA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9828  0022EC  22DA               	addwfc	fsr2h,f,c
  9829  0022EE  0E0A               	movlw	10
  9830  0022F0  18DE               	xorwf	postinc2,w,c
  9831  0022F2  10DE               	iorwf	postinc2,w,c
  9832  0022F4  A4D8               	btfss	status,2,c
  9833  0022F6  D7D8               	goto	L68
  9834  0022F8  D799               	goto	u28070
  9835  0022FA                     l23646:
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9839  0022FA  EE20 F004          	lfsr	2,4
  9840  0022FE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9841  002300  26D9               	addwf	fsr2l,f,c
  9842  002302  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9843  002304  22DA               	addwfc	fsr2h,f,c
  9844  002306  0E0B               	movlw	11
  9845  002308  18DE               	xorwf	postinc2,w,c
  9846  00230A  10DE               	iorwf	postinc2,w,c
  9847  00230C  A4D8               	btfss	status,2,c
  9848  00230E  D7CC               	goto	L68
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9852  002310  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9853  002314  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9854  002318  0E05               	movlw	5
  9855  00231A                     L66:
  9856  00231A  6EDE               	movwf	postinc2,c
  9857  00231C  0E00               	movlw	0
  9858  00231E  6EDD               	movwf	postdec2,c
  9859  002320  D032               	goto	l23666
  9860  002322                     l23654:
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9864  002322  EE20 F004          	lfsr	2,4
  9865  002326  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9866  002328  26D9               	addwf	fsr2l,f,c
  9867  00232A  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9868  00232C  22DA               	addwfc	fsr2h,f,c
  9869  00232E  0E0A               	movlw	10
  9870  002330  18DE               	xorwf	postinc2,w,c
  9871  002332  10DE               	iorwf	postinc2,w,c
  9872  002334  A4D8               	btfss	status,2,c
  9873  002336  D7B8               	goto	L68
  9874  002338                     L130:
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9878  002338  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9879  00233C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9880  002340  0E00               	movlw	0
  9881  002342  D7EB               	goto	L66
  9882  002344                     l2912:
  9883                           
  9884                           ; BSR set to: 0
  9885  002344  D7FF               	goto	l2912
  9886  002346                     l23664:
  9887  002346  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9888  00234A  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9889  00234E  50DF               	movf	indf2,w,c
  9890  002350  0100               	movlb	0	; () banked
  9891  002352  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9892  002354  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9893                           
  9894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9895                           ; Switch size 1, requested type "simple"
  9896                           ; Number of cases is 1, Range of values is 0 to 0
  9897                           ; switch strategies available:
  9898                           ; Name         Instructions Cycles
  9899                           ; simple_byte            4     3 (average)
  9900                           ;	Chosen strategy is simple_byte
  9901  002356  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9902  002358  0A00               	xorlw	0	; case 0
  9903  00235A  A4D8               	btfss	status,2,c
  9904  00235C  D7F3               	goto	l2912
  9905                           
  9906                           ; BSR set to: 0
  9907                           ; Switch size 1, requested type "simple"
  9908                           ; Number of cases is 6, Range of values is 0 to 5
  9909                           ; switch strategies available:
  9910                           ; Name         Instructions Cycles
  9911                           ; simple_byte           19    10 (average)
  9912                           ;	Chosen strategy is simple_byte
  9913  00235E  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9914  002360  0A00               	xorlw	0	; case 0
  9915  002362  B4D8               	btfsc	status,2,c
  9916  002364  D738               	goto	l23590
  9917  002366  0A01               	xorlw	1	; case 1
  9918  002368  B4D8               	btfsc	status,2,c
  9919  00236A  D778               	goto	l23610
  9920  00236C  0A03               	xorlw	3	; case 2
  9921  00236E  B4D8               	btfsc	status,2,c
  9922  002370  D7A7               	goto	l23630
  9923  002372  0A01               	xorlw	1	; case 3
  9924  002374  B4D8               	btfsc	status,2,c
  9925  002376  D7B5               	goto	l23638
  9926  002378  0A07               	xorlw	7	; case 4
  9927  00237A  B4D8               	btfsc	status,2,c
  9928  00237C  D7BE               	goto	l23646
  9929  00237E  0A01               	xorlw	1	; case 5
  9930  002380  B4D8               	btfsc	status,2,c
  9931  002382  D7CF               	goto	l23654
  9932  002384  D7DF               	goto	l2912
  9933  002386                     l23666:
  9934                           
  9935                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9936  002386  0EB0               	movlw	low _controlLearning_stateMachine
  9937  002388  6E12               	movwf	sm_send_event@psm^0,c
  9938  00238A  0E02               	movlw	high _controlLearning_stateMachine
  9939  00238C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9940  00238E  0E00               	movlw	0
  9941  002390  6E15               	movwf	(sm_send_event@event+1)^0,c
  9942  002392  0E00               	movlw	0
  9943  002394  6E14               	movwf	sm_send_event@event^0,c
  9944  002396  EC4F  F047         	call	_sm_send_event	;wreg free
  9945                           
  9946                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9947  00239A  D285               	goto	l23922
  9948  00239C                     l23668:
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9952  00239C  0101               	movlb	1	; () banked
  9953  00239E  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9954  0023A0  A4D8               	btfss	status,2,c
  9955  0023A2  D03A               	goto	l23686
  9956                           
  9957                           ; BSR set to: 1
  9958                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9959  0023A4  0E01               	movlw	1
  9960  0023A6  0100               	movlb	0	; () banked
  9961  0023A8  6F81               	movwf	_control_limit_switch& (0+255),b
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9965  0023AA  0EB0               	movlw	low _controlLearning_stateMachine
  9966  0023AC  6E12               	movwf	sm_send_event@psm^0,c
  9967  0023AE  0E02               	movlw	high _controlLearning_stateMachine
  9968  0023B0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9969  0023B2  0E00               	movlw	0
  9970  0023B4  6E15               	movwf	(sm_send_event@event+1)^0,c
  9971  0023B6  0E0A               	movlw	10
  9972  0023B8  6E14               	movwf	sm_send_event@event^0,c
  9973  0023BA  EC4F  F047         	call	_sm_send_event	;wreg free
  9974                           
  9975                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9976  0023BE  0E01               	movlw	1
  9977  0023C0  0101               	movlb	1	; () banked
  9978  0023C2  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9979                           
  9980                           ; BSR set to: 1
  9981                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9982  0023C4  ECD4  F043         	call	_clearLearningValue	;wreg free
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9986  0023C8  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9987  0023CA  B4D8               	btfsc	status,2,c
  9988  0023CC  D016               	goto	l23684
  9989                           
  9990                           ; BSR set to: 0
  9991  0023CE  0101               	movlb	1	; () banked
  9992  0023D0  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9993  0023D2  A4D8               	btfss	status,2,c
  9994  0023D4  D012               	goto	l23684
  9995  0023D6                     u28260:
  9996                           
  9997                           ; BSR set to: 1
  9998                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
  9999  0023D6  0E01               	movlw	1
 10000  0023D8  6FD6               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10001  0023DA  0E2C               	movlw	44
 10002  0023DC  6FD5               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10003                           
 10004                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10005  0023DE  0E00               	movlw	0
 10006  0023E0  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10007  0023E2  0E78               	movlw	120
 10008  0023E4  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10009                           
 10010                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10011  0023E6  0E00               	movlw	0
 10012  0023E8  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10013  0023EA  0E14               	movlw	20
 10014  0023EC  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10015                           
 10016                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10017  0023EE  0E01               	movlw	1
 10018  0023F0  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10019                           
 10020                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10021  0023F2  0E00               	movlw	0
 10022  0023F4  0100               	movlb	0	; () banked
 10023  0023F6  6F81               	movwf	_control_limit_switch& (0+255),b
 10024                           
 10025                           ;sm_ControlLearning_MC50.c: 148:                  }
 10026  0023F8  0012               	return	
 10027  0023FA                     l23684:
 10028                           
 10029                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10030  0023FA  0E00               	movlw	0
 10031  0023FC  0101               	movlb	1	; () banked
 10032  0023FE  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10033                           
 10034                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10035  002400  0E00               	movlw	0
 10036  002402  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10037  002404  0E50               	movlw	80
 10038  002406  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10039                           
 10040                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10041  002408  0E00               	movlw	0
 10042  00240A  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10043  00240C  0E14               	movlw	20
 10044  00240E  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10045                           
 10046                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10047  002410  0E00               	movlw	0
 10048  002412  0100               	movlb	0	; () banked
 10049  002414  6F81               	movwf	_control_limit_switch& (0+255),b
 10050  002416  0012               	return	
 10051  002418                     l23686:
 10052                           
 10053                           ; BSR set to: 1
 10054                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10055  002418  0EB0               	movlw	low _controlLearning_stateMachine
 10056  00241A  6E12               	movwf	sm_send_event@psm^0,c
 10057  00241C  0E02               	movlw	high _controlLearning_stateMachine
 10058  00241E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10059  002420  0E00               	movlw	0
 10060  002422  6E15               	movwf	(sm_send_event@event+1)^0,c
 10061  002424  0E0B               	movlw	11
 10062  002426  6E14               	movwf	sm_send_event@event^0,c
 10063  002428  EC4F  F047         	call	_sm_send_event	;wreg free
 10064                           
 10065                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10066  00242C  0E03               	movlw	3
 10067  00242E  0101               	movlb	1	; () banked
 10068  002430  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10069                           
 10070                           ; BSR set to: 1
 10071                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10072  002432  0E01               	movlw	1
 10073  002434  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10074                           
 10075                           ; BSR set to: 1
 10076                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10077                           
 10078                           ;sm_ControlLearning_MC50.c: 163:             }
 10079  002436  0012               	return	
 10080  002438                     l23692:
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0x27 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10084  002438  0101               	movlb	1	; () banked
 10085  00243A  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10086  00243C  B4D8               	btfsc	status,2,c
 10087  00243E  D00F               	goto	u28310
 10088                           
 10089                           ; BSR set to: 1
 10090  002440  0100               	movlb	0	; () banked
 10091  002442  0581               	decf	_control_limit_switch& (0+255),w,b
 10092  002444  B4D8               	btfsc	status,2,c
 10093  002446  D00B               	goto	u28310
 10094                           
 10095                           ; BSR set to: 0
 10096  002448  0E27               	movlw	39
 10097  00244A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10098  00244C  B4D8               	btfsc	status,2,c
 10099  00244E  D003               	goto	u28300
 10100                           
 10101                           ; BSR set to: 0
 10102  002450  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10103  002452  A4D8               	btfss	status,2,c
 10104  002454  D028               	goto	l23720
 10105  002456                     u28300:
 10106                           
 10107                           ; BSR set to: 0
 10108  002456  0101               	movlb	1	; () banked
 10109  002458  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10110  00245A  A4D8               	btfss	status,2,c
 10111  00245C  D024               	goto	l23720
 10112  00245E                     u28310:
 10113                           
 10114                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10115  00245E  0E01               	movlw	1
 10116  002460  0100               	movlb	0	; () banked
 10117  002462  6F81               	movwf	_control_limit_switch& (0+255),b
 10118                           
 10119                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10120  002464  0E00               	movlw	0
 10121  002466  0101               	movlb	1	; () banked
 10122  002468  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10123                           
 10124                           ; BSR set to: 1
 10125                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10126  00246A  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10127  00246C  D005               	goto	u28320
 10128  00246E  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10129  002470  E102               	bnz	u28321
 10130  002472  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10131  002474  B0D8               	btfsc	status,0,c
 10132  002476                     u28321:
 10133  002476  0012               	return	
 10134  002478                     u28320:
 10135                           
 10136                           ; BSR set to: 1
 10137                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10138  002478  0EB0               	movlw	low _controlLearning_stateMachine
 10139  00247A  6E12               	movwf	sm_send_event@psm^0,c
 10140  00247C  0E02               	movlw	high _controlLearning_stateMachine
 10141  00247E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10142  002480  0E00               	movlw	0
 10143  002482  6E15               	movwf	(sm_send_event@event+1)^0,c
 10144  002484  0E0A               	movlw	10
 10145  002486  6E14               	movwf	sm_send_event@event^0,c
 10146  002488  EC4F  F047         	call	_sm_send_event	;wreg free
 10147                           
 10148                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10149  00248C  0E01               	movlw	1
 10150  00248E  0101               	movlb	1	; () banked
 10151  002490  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10152                           
 10153                           ; BSR set to: 1
 10154                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10155  002492  ECD4  F043         	call	_clearLearningValue	;wreg free
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10159  002496  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10160  002498  B4D8               	btfsc	status,2,c
 10161  00249A  D7AF               	goto	l23684
 10162                           
 10163                           ; BSR set to: 0
 10164  00249C  0101               	movlb	1	; () banked
 10165  00249E  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10166  0024A0  B4D8               	btfsc	status,2,c
 10167  0024A2  D799               	goto	u28260
 10168  0024A4  D7AA               	goto	l23684
 10169  0024A6                     l23720:
 10170  0024A6  0101               	movlb	1	; () banked
 10171  0024A8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10172  0024AA  A4D8               	btfss	status,2,c
 10173  0024AC  D003               	goto	l23724
 10174  0024AE                     u28350:
 10175                           
 10176                           ; BSR set to: 1
 10177                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10178  0024AE  EC88  F046         	call	_generateErrorLearnig	;wreg free
 10179                           
 10180                           ;sm_ControlLearning_MC50.c: 198:             }
 10181  0024B2  0012               	return	
 10182  0024B4                     l23724:
 10183                           
 10184                           ; BSR set to: 1
 10185                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10186  0024B4  0E00               	movlw	0
 10187  0024B6  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10188  0024B8  0E28               	movlw	40
 10189  0024BA  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10190  0024BC  0012               	return	
 10191  0024BE                     l23726:
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10195  0024BE  0101               	movlb	1	; () banked
 10196  0024C0  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10197  0024C2  A4D8               	btfss	status,2,c
 10198                           
 10199                           ; BSR set to: 1
 10200  0024C4  BFD6               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10201  0024C6  D009               	goto	u28380
 10202  0024C8  51D6               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10203  0024CA  E103               	bnz	u28370
 10204  0024CC  05D5               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10205  0024CE  A0D8               	btfss	status,0,c
 10206  0024D0  D004               	goto	u28380
 10207  0024D2                     u28370:
 10208                           
 10209                           ; BSR set to: 1
 10210  0024D2  0100               	movlb	0	; () banked
 10211  0024D4  0581               	decf	_control_limit_switch& (0+255),w,b
 10212  0024D6  A4D8               	btfss	status,2,c
 10213  0024D8  D02A               	goto	l23748
 10214  0024DA                     u28380:
 10215                           
 10216                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10217  0024DA  0E01               	movlw	1
 10218  0024DC  0100               	movlb	0	; () banked
 10219  0024DE  6F81               	movwf	_control_limit_switch& (0+255),b
 10220                           
 10221                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10222  0024E0  0E00               	movlw	0
 10223  0024E2  0101               	movlb	1	; () banked
 10224  0024E4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10225                           
 10226                           ; BSR set to: 1
 10227                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10228  0024E6  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10229  0024E8  D005               	goto	u28390
 10230  0024EA  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10231  0024EC  E102               	bnz	u28391
 10232  0024EE  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10233  0024F0  B0D8               	btfsc	status,0,c
 10234  0024F2                     u28391:
 10235  0024F2  0012               	return	
 10236  0024F4                     u28390:
 10237                           
 10238                           ; BSR set to: 1
 10239                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10240  0024F4  0EB0               	movlw	low _controlLearning_stateMachine
 10241  0024F6  6E12               	movwf	sm_send_event@psm^0,c
 10242  0024F8  0E02               	movlw	high _controlLearning_stateMachine
 10243  0024FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10244  0024FC  0E00               	movlw	0
 10245  0024FE  6E15               	movwf	(sm_send_event@event+1)^0,c
 10246  002500  0E0B               	movlw	11
 10247  002502  6E14               	movwf	sm_send_event@event^0,c
 10248  002504  EC4F  F047         	call	_sm_send_event	;wreg free
 10249                           
 10250                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10251  002508  0E03               	movlw	3
 10252  00250A  0101               	movlb	1	; () banked
 10253  00250C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10254                           
 10255                           ; BSR set to: 1
 10256                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10257  00250E  0E00               	movlw	0
 10258  002510  6FD6               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10259  002512  0E64               	movlw	100
 10260  002514  6FD5               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10261                           
 10262                           ; BSR set to: 1
 10263                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10264  002516  0E00               	movlw	0
 10265  002518  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10266  00251A  0E64               	movlw	100
 10267  00251C                     L67:
 10268  00251C  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10269                           
 10270                           ; BSR set to: 1
 10271                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10272  00251E  0E00               	movlw	0
 10273  002520  6FE4               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10274  002522  0E14               	movlw	20
 10275  002524  6FE3               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10276                           
 10277                           ; BSR set to: 1
 10278                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10279  002526  0E00               	movlw	0
 10280  002528  0100               	movlb	0	; () banked
 10281  00252A  6F81               	movwf	_control_limit_switch& (0+255),b
 10282  00252C  0012               	return	
 10283  00252E                     l23748:
 10284                           
 10285                           ; BSR set to: 0
 10286  00252E  0101               	movlb	1	; () banked
 10287  002530  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10288  002532  B4D8               	btfsc	status,2,c
 10289  002534  D7BC               	goto	u28350
 10290                           
 10291                           ; BSR set to: 1
 10292                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10293  002536  0E00               	movlw	0
 10294  002538  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10295  00253A  0E28               	movlw	40
 10296  00253C  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10297                           
 10298                           ; BSR set to: 1
 10299                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10300  00253E  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10301  002540  D005               	goto	u28410
 10302  002542  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10303  002544  E102               	bnz	u28411
 10304  002546  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10305  002548  B0D8               	btfsc	status,0,c
 10306  00254A                     u28411:
 10307  00254A  0012               	return	
 10308  00254C                     u28410:
 10309                           
 10310                           ; BSR set to: 1
 10311                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10312  00254C  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10313  00254E  0012               	return	
 10314  002550  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10315  002552  E103               	bnz	u28420
 10316  002554  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10317  002556  A0D8               	btfss	status,0,c
 10318  002558  0012               	return	
 10319  00255A                     u28420:
 10320                           
 10321                           ; BSR set to: 1
 10322                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10323  00255A  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10324  00255E  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10325  002562  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10326  002564  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10327  002566  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10328  00256A  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10329  00256E  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10330  002572  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10331  002576  ECEF  F046         	call	_calculateMean	;wreg free
 10332  00257A  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10333  00257E  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10334  002582  0012               	return	
 10335  002584                     l23760:
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10339  002584  0101               	movlb	1	; () banked
 10340  002586  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10341  002588  B4D8               	btfsc	status,2,c
 10342  00258A  D004               	goto	u28440
 10343                           
 10344                           ; BSR set to: 1
 10345  00258C  0100               	movlb	0	; () banked
 10346  00258E  0581               	decf	_control_limit_switch& (0+255),w,b
 10347  002590  A4D8               	btfss	status,2,c
 10348  002592  D020               	goto	l23780
 10349  002594                     u28440:
 10350                           
 10351                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10352  002594  0E01               	movlw	1
 10353  002596  0100               	movlb	0	; () banked
 10354  002598  6F81               	movwf	_control_limit_switch& (0+255),b
 10355                           
 10356                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10357  00259A  0E00               	movlw	0
 10358  00259C  0101               	movlb	1	; () banked
 10359  00259E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10360                           
 10361                           ; BSR set to: 1
 10362                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10363  0025A0  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10364  0025A2  D005               	goto	u28450
 10365  0025A4  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10366  0025A6  E102               	bnz	u28451
 10367  0025A8  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10368  0025AA  B0D8               	btfsc	status,0,c
 10369  0025AC                     u28451:
 10370  0025AC  0012               	return	
 10371  0025AE                     u28450:
 10372                           
 10373                           ; BSR set to: 1
 10374                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10375  0025AE  0EB0               	movlw	low _controlLearning_stateMachine
 10376  0025B0  6E12               	movwf	sm_send_event@psm^0,c
 10377  0025B2  0E02               	movlw	high _controlLearning_stateMachine
 10378  0025B4  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10379  0025B6  0E00               	movlw	0
 10380  0025B8  6E15               	movwf	(sm_send_event@event+1)^0,c
 10381  0025BA  0E0A               	movlw	10
 10382  0025BC  6E14               	movwf	sm_send_event@event^0,c
 10383  0025BE  EC4F  F047         	call	_sm_send_event	;wreg free
 10384                           
 10385                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10386  0025C2  0E01               	movlw	1
 10387  0025C4  0101               	movlb	1	; () banked
 10388  0025C6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10389                           
 10390                           ; BSR set to: 1
 10391                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10392  0025C8  0E00               	movlw	0
 10393  0025CA  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10394                           
 10395                           ; BSR set to: 1
 10396                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10397  0025CC  0E00               	movlw	0
 10398  0025CE  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10399  0025D0  0E3C               	movlw	60
 10400  0025D2  D7A4               	goto	L67
 10401  0025D4                     l23780:
 10402                           
 10403                           ; BSR set to: 0
 10404  0025D4  0101               	movlb	1	; () banked
 10405  0025D6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10406  0025D8  B4D8               	btfsc	status,2,c
 10407  0025DA  D769               	goto	u28350
 10408                           
 10409                           ; BSR set to: 1
 10410                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10411  0025DC  0E00               	movlw	0
 10412  0025DE  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10413  0025E0  0E28               	movlw	40
 10414  0025E2  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10415                           
 10416                           ; BSR set to: 1
 10417                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10418  0025E4  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10419  0025E6  D005               	goto	u28470
 10420  0025E8  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10421  0025EA  E102               	bnz	u28471
 10422  0025EC  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10423  0025EE  B0D8               	btfsc	status,0,c
 10424  0025F0                     u28471:
 10425  0025F0  0012               	return	
 10426  0025F2                     u28470:
 10427                           
 10428                           ; BSR set to: 1
 10429                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10430  0025F2  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10431  0025F4  0012               	return	
 10432  0025F6  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10433  0025F8  E103               	bnz	u28480
 10434  0025FA  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10435  0025FC  A0D8               	btfss	status,0,c
 10436  0025FE  0012               	return	
 10437  002600                     u28480:
 10438                           
 10439                           ; BSR set to: 1
 10440                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10441  002600  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10442  002604  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10443  002608  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10444  00260A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10445  00260C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10446  002610  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10447  002614  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10448  002618  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10449  00261C  ECEF  F046         	call	_calculateMean	;wreg free
 10450  002620  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10451  002624  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10452  002628  0012               	return	
 10453  00262A                     l23792:
 10454                           
 10455                           ; BSR set to: 0
 10456                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0x27 ||typeOpenOrder == TypeFull) && var_s
      +                          ys.programinAutomatic == 1))
 10457  00262A  0101               	movlb	1	; () banked
 10458  00262C  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10459  00262E  B4D8               	btfsc	status,2,c
 10460  002630  D012               	goto	u28540
 10461                           
 10462                           ; BSR set to: 1
 10463  002632  0100               	movlb	0	; () banked
 10464  002634  0581               	decf	_control_limit_switch& (0+255),w,b
 10465  002636  B4D8               	btfsc	status,2,c
 10466  002638  D00E               	goto	u28540
 10467                           
 10468                           ; BSR set to: 0
 10469  00263A  0101               	movlb	1	; () banked
 10470  00263C  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10471  00263E  A4D8               	btfss	status,2,c
 10472  002640  D02D               	goto	l23818
 10473                           
 10474                           ; BSR set to: 1
 10475  002642  0E27               	movlw	39
 10476  002644  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10477  002646  B4D8               	btfsc	status,2,c
 10478  002648  D003               	goto	u28530
 10479                           
 10480                           ; BSR set to: 1
 10481  00264A  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10482  00264C  A4D8               	btfss	status,2,c
 10483  00264E  D026               	goto	l23818
 10484  002650                     u28530:
 10485                           
 10486                           ; BSR set to: 1
 10487  002650  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10488  002652  A4D8               	btfss	status,2,c
 10489  002654  D023               	goto	l23818
 10490  002656                     u28540:
 10491                           
 10492                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10493  002656  0E00               	movlw	0
 10494  002658  0101               	movlb	1	; () banked
 10495  00265A  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10496                           
 10497                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10498  00265C  0E00               	movlw	0
 10499  00265E  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10500                           
 10501                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10502  002660  0E01               	movlw	1
 10503  002662  0100               	movlb	0	; () banked
 10504  002664  6F81               	movwf	_control_limit_switch& (0+255),b
 10505                           
 10506                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10507  002666  0E00               	movlw	0
 10508  002668  0101               	movlb	1	; () banked
 10509  00266A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10510                           
 10511                           ; BSR set to: 1
 10512                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10513  00266C  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10514  00266E  D005               	goto	u28550
 10515  002670  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10516  002672  E102               	bnz	u28551
 10517  002674  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10518  002676  B0D8               	btfsc	status,0,c
 10519  002678                     u28551:
 10520  002678  0012               	return	
 10521  00267A                     u28550:
 10522                           
 10523                           ; BSR set to: 1
 10524                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10525  00267A  0EB0               	movlw	low _controlLearning_stateMachine
 10526  00267C  6E12               	movwf	sm_send_event@psm^0,c
 10527  00267E  0E02               	movlw	high _controlLearning_stateMachine
 10528  002680  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10529  002682  0E00               	movlw	0
 10530  002684  6E15               	movwf	(sm_send_event@event+1)^0,c
 10531  002686  0E0B               	movlw	11
 10532  002688  6E14               	movwf	sm_send_event@event^0,c
 10533  00268A  EC4F  F047         	call	_sm_send_event	;wreg free
 10534                           
 10535                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10536  00268E  0E03               	movlw	3
 10537  002690  0101               	movlb	1	; () banked
 10538  002692  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10539                           
 10540                           ; BSR set to: 1
 10541                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10542  002694  0E00               	movlw	0
 10543  002696  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10544  002698  0E50               	movlw	80
 10545  00269A  D740               	goto	L67
 10546  00269C                     l23818:
 10547                           
 10548                           ; BSR set to: 1
 10549  00269C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10550  00269E  B4D8               	btfsc	status,2,c
 10551  0026A0  D706               	goto	u28350
 10552                           
 10553                           ; BSR set to: 1
 10554  0026A2  0E27               	movlw	39
 10555  0026A4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10556  0026A6  B4D8               	btfsc	status,2,c
 10557  0026A8  D003               	goto	u28580
 10558                           
 10559                           ; BSR set to: 1
 10560  0026AA  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10561  0026AC  A4D8               	btfss	status,2,c
 10562  0026AE  D00F               	goto	l23832
 10563  0026B0                     u28580:
 10564                           
 10565                           ; BSR set to: 1
 10566  0026B0  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10567  0026B2  A4D8               	btfss	status,2,c
 10568  0026B4  D00C               	goto	l23832
 10569                           
 10570                           ; BSR set to: 1
 10571  0026B6  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10572  0026B8  A4D8               	btfss	status,2,c
 10573  0026BA  D009               	goto	l23832
 10574  0026BC                     u28600:
 10575                           
 10576                           ; BSR set to: 1
 10577                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10578  0026BC  0E01               	movlw	1
 10579  0026BE  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10580                           
 10581                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10582  0026C0  0E01               	movlw	1
 10583  0026C2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10584                           
 10585                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10586  0026C4  0E00               	movlw	0
 10587  0026C6  6FD4               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10588  0026C8  0E50               	movlw	80
 10589  0026CA  6FD3               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10590                           
 10591                           ;sm_ControlLearning_MC50.c: 309:             }
 10592  0026CC  0012               	return	
 10593  0026CE                     l23832:
 10594                           
 10595                           ; BSR set to: 1
 10596  0026CE  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10597  0026D0  A4D8               	btfss	status,2,c
 10598  0026D2  D00C               	goto	l23840
 10599                           
 10600                           ; BSR set to: 1
 10601                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10602  0026D4  0E00               	movlw	0
 10603  0026D6  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10604  0026D8  0E28               	movlw	40
 10605  0026DA  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10606                           
 10607                           ; BSR set to: 1
 10608                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10609  0026DC  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10610  0026DE  0012               	return	
 10611  0026E0  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10612  0026E2  E103               	bnz	u28620
 10613  0026E4  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10614  0026E6  A0D8               	btfss	status,0,c
 10615  0026E8  0012               	return	
 10616  0026EA                     u28620:
 10617  0026EA  D737               	goto	u28420
 10618  0026EC                     l23840:
 10619                           
 10620                           ; BSR set to: 1
 10621                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10622  0026EC  0E01               	movlw	1
 10623  0026EE  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10624                           
 10625                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10626  0026F0  0E00               	movlw	0
 10627  0026F2  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10628  0026F4  0E28               	movlw	40
 10629  0026F6  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10630                           
 10631                           ; BSR set to: 1
 10632                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10633  0026F8  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10634  0026FA  D005               	goto	u28630
 10635  0026FC  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10636  0026FE  E102               	bnz	u28631
 10637  002700  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10638  002702  B0D8               	btfsc	status,0,c
 10639  002704                     u28631:
 10640  002704  0012               	return	
 10641  002706                     u28630:
 10642                           
 10643                           ; BSR set to: 1
 10644                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10645  002706  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10646  002708  0012               	return	
 10647  00270A  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10648  00270C  E103               	bnz	u28640
 10649  00270E  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10650  002710  A0D8               	btfss	status,0,c
 10651  002712  0012               	return	
 10652  002714                     u28640:
 10653                           
 10654                           ; BSR set to: 1
 10655                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10656  002714  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10657  002718  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10658  00271C  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10659  00271E  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10660  002720  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10661  002724  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10662  002728  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10663  00272A  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10664  00272C  ECEF  F046         	call	_calculateMean	;wreg free
 10665  002730  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10666  002734  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10667  002738  0012               	return	
 10668  00273A                     l23848:
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0x27 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1
      +                          ))
 10672  00273A  0101               	movlb	1	; () banked
 10673  00273C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10674  00273E  B4D8               	btfsc	status,2,c
 10675  002740  D00D               	goto	u28690
 10676                           
 10677                           ; BSR set to: 1
 10678  002742  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10679  002744  A4D8               	btfss	status,2,c
 10680  002746  D070               	goto	l23894
 10681                           
 10682                           ; BSR set to: 1
 10683  002748  0E27               	movlw	39
 10684  00274A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10685  00274C  B4D8               	btfsc	status,2,c
 10686  00274E  D003               	goto	u28680
 10687                           
 10688                           ; BSR set to: 1
 10689  002750  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10690  002752  A4D8               	btfss	status,2,c
 10691  002754  D069               	goto	l23894
 10692  002756                     u28680:
 10693                           
 10694                           ; BSR set to: 1
 10695  002756  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10696  002758  A4D8               	btfss	status,2,c
 10697  00275A  D066               	goto	l23894
 10698  00275C                     u28690:
 10699                           
 10700                           ; BSR set to: 1
 10701                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10702  00275C  0E01               	movlw	1
 10703  00275E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10704                           
 10705                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10706  002760  0E00               	movlw	0
 10707  002762  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10708                           
 10709                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10710  002764  0E00               	movlw	0
 10711  002766  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10712                           
 10713                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10714  002768  0E00               	movlw	0
 10715  00276A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10716                           
 10717                           ; BSR set to: 1
 10718                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10719  00276C  0EB0               	movlw	low _controlLearning_stateMachine
 10720  00276E  6E12               	movwf	sm_send_event@psm^0,c
 10721  002770  0E02               	movlw	high _controlLearning_stateMachine
 10722  002772  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10723  002774  0E00               	movlw	0
 10724  002776  6E15               	movwf	(sm_send_event@event+1)^0,c
 10725  002778  0E0A               	movlw	10
 10726  00277A  6E14               	movwf	sm_send_event@event^0,c
 10727  00277C  EC4F  F047         	call	_sm_send_event	;wreg free
 10728                           
 10729                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10730  002780  0EE7               	movlw	low _controlGate_stateMachine
 10731  002782  6E12               	movwf	sm_send_event@psm^0,c
 10732  002784  0E01               	movlw	high _controlGate_stateMachine
 10733  002786  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10734  002788  0E00               	movlw	0
 10735  00278A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10736  00278C  0E13               	movlw	19
 10737  00278E  6E14               	movwf	sm_send_event@event^0,c
 10738  002790  EC4F  F047         	call	_sm_send_event	;wreg free
 10739                           
 10740                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10741  002794  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10742  002798  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10743  00279C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10744  0027A0  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10745                           
 10746                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10747  0027A4  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10748  0027A8  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10749  0027AC  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10750  0027B0  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10751                           
 10752                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10753  0027B4  0101               	movlb	1	; () banked
 10754  0027B6  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10755  0027B8  A4D8               	btfss	status,2,c
 10756  0027BA  D005               	goto	l23872
 10757                           
 10758                           ; BSR set to: 1
 10759                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10760  0027BC  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10761                           
 10762                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10763  0027C0  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10764                           
 10765                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10766  0027C4  D005               	goto	l23874
 10767  0027C6                     l23872:
 10768                           
 10769                           ; BSR set to: 1
 10770                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10771  0027C6  0E04               	movlw	4
 10772  0027C8  0100               	movlb	0	; () banked
 10773  0027CA  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10774                           
 10775                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10776  0027CC  0E04               	movlw	4
 10777  0027CE  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10778  0027D0                     l23874:
 10779                           
 10780                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10781  0027D0  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10782  0027D4  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10783                           
 10784                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10785  0027D8  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10786  0027DC  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10787                           
 10788                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10789  0027E0  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10790  0027E4  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10791  0027E8  0100               	movlb	0	; () banked
 10792  0027EA  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10793  0027EC  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10797  0027EE  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10798  0027F2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10799  0027F6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10800  0027F8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10801                           
 10802                           ; BSR set to: 0
 10803                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10804  0027FA  0E00               	movlw	0
 10805  0027FC  EC5D  F04B         	call	_SaveNVM_VarSystem
 10806                           
 10807                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10808  002800  0E03               	movlw	3
 10809  002802  EC5D  F04B         	call	_SaveNVM_VarSystem
 10810                           
 10811                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10812  002806  0E02               	movlw	2
 10813  002808  EC5D  F04B         	call	_SaveNVM_VarSystem
 10814                           
 10815                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10816  00280C  0E00               	movlw	0
 10817  00280E  0101               	movlb	1	; () banked
 10818  002810  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10819                           
 10820                           ; BSR set to: 1
 10821                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10822  002812  0E00               	movlw	0
 10823  002814  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10824  002816  0E00               	movlw	0
 10825  002818  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10826  00281A  0E00               	movlw	0
 10827  00281C  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10828  00281E  0E00               	movlw	0
 10829  002820  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10830                           
 10831                           ; BSR set to: 1
 10832                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10833  002822  0E00               	movlw	0
 10834  002824  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10835                           
 10836                           ;sm_ControlLearning_MC50.c: 369:             }
 10837  002826  0012               	return	
 10838  002828                     l23894:
 10839                           
 10840                           ; BSR set to: 1
 10841  002828  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10842  00282A  B4D8               	btfsc	status,2,c
 10843  00282C  D640               	goto	u28350
 10844                           
 10845                           ; BSR set to: 1
 10846  00282E  0E27               	movlw	39
 10847  002830  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 10848  002832  B4D8               	btfsc	status,2,c
 10849  002834  D003               	goto	u28730
 10850                           
 10851                           ; BSR set to: 1
 10852  002836  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10853  002838  A4D8               	btfss	status,2,c
 10854  00283A  D003               	goto	l23906
 10855  00283C                     u28730:
 10856                           
 10857                           ; BSR set to: 1
 10858  00283C  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10859  00283E  B4D8               	btfsc	status,2,c
 10860  002840  D73D               	goto	u28600
 10861  002842                     l23906:
 10862                           
 10863                           ; BSR set to: 1
 10864  002842  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10865  002844  A4D8               	btfss	status,2,c
 10866  002846  D008               	goto	l23912
 10867                           
 10868                           ; BSR set to: 1
 10869                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10870  002848  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10871  00284A  0012               	return	
 10872  00284C  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10873  00284E  E103               	bnz	u28760
 10874  002850  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10875  002852  A0D8               	btfss	status,0,c
 10876  002854  0012               	return	
 10877  002856                     u28760:
 10878  002856  D6D4               	goto	u28480
 10879  002858                     l23912:
 10880                           
 10881                           ; BSR set to: 1
 10882                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10883  002858  0E01               	movlw	1
 10884  00285A  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10885                           
 10886                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10887  00285C  0E00               	movlw	0
 10888  00285E  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10889  002860  0E28               	movlw	40
 10890  002862  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10891                           
 10892                           ; BSR set to: 1
 10893                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10894  002864  BFE4               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10895  002866  D005               	goto	u28770
 10896  002868  51E4               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10897  00286A  E102               	bnz	u28771
 10898  00286C  05E3               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10899  00286E  B0D8               	btfsc	status,0,c
 10900  002870                     u28771:
 10901  002870  0012               	return	
 10902  002872                     u28770:
 10903                           
 10904                           ; BSR set to: 1
 10905                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10906  002872  BFD4               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10907  002874  0012               	return	
 10908  002876  51D4               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10909  002878  E103               	bnz	u28780
 10910  00287A  05D3               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10911  00287C  A0D8               	btfss	status,0,c
 10912  00287E  0012               	return	
 10913  002880                     u28780:
 10914                           
 10915                           ; BSR set to: 1
 10916                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10917  002880  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10918  002884  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10919  002888  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10920  00288A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10921  00288C  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10922  002890  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10923  002894  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10924  002896  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10925  002898  ECEF  F046         	call	_calculateMean	;wreg free
 10926  00289C  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10927  0028A0  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10928  0028A4  0012               	return	
 10929  0028A6                     l23922:
 10930  0028A6  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10931  0028AA  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10932  0028AE  50DF               	movf	indf2,w,c
 10933  0028B0  0100               	movlb	0	; () banked
 10934  0028B2  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10935  0028B4  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10936                           
 10937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10938                           ; Switch size 1, requested type "simple"
 10939                           ; Number of cases is 1, Range of values is 0 to 0
 10940                           ; switch strategies available:
 10941                           ; Name         Instructions Cycles
 10942                           ; simple_byte            4     3 (average)
 10943                           ;	Chosen strategy is simple_byte
 10944  0028B6  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10945  0028B8  0A00               	xorlw	0	; case 0
 10946  0028BA  A4D8               	btfss	status,2,c
 10947  0028BC  0012               	return	
 10948                           
 10949                           ; BSR set to: 0
 10950                           ; Switch size 1, requested type "simple"
 10951                           ; Number of cases is 6, Range of values is 0 to 5
 10952                           ; switch strategies available:
 10953                           ; Name         Instructions Cycles
 10954                           ; simple_byte           19    10 (average)
 10955                           ;	Chosen strategy is simple_byte
 10956  0028BE  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10957  0028C0  0A00               	xorlw	0	; case 0
 10958  0028C2  B4D8               	btfsc	status,2,c
 10959  0028C4  D56B               	goto	l23668
 10960  0028C6  0A01               	xorlw	1	; case 1
 10961  0028C8  B4D8               	btfsc	status,2,c
 10962  0028CA  D5B6               	goto	l23692
 10963  0028CC  0A03               	xorlw	3	; case 2
 10964  0028CE  B4D8               	btfsc	status,2,c
 10965  0028D0  D5F6               	goto	l23726
 10966  0028D2  0A01               	xorlw	1	; case 3
 10967  0028D4  B4D8               	btfsc	status,2,c
 10968  0028D6  D656               	goto	l23760
 10969  0028D8  0A07               	xorlw	7	; case 4
 10970  0028DA  B4D8               	btfsc	status,2,c
 10971  0028DC  D6A6               	goto	l23792
 10972  0028DE  0A01               	xorlw	1	; case 5
 10973  0028E0  A4D8               	btfss	status,2,c
 10974  0028E2  0012               	return	
 10975  0028E4  D72A               	goto	l23848
 10976  0028E6                     __end_of_sm_execute_ControlLearning:
 10977                           	callstack 0
 10978                           
 10979 ;; *************** function _generateErrorLearnig *****************
 10980 ;; Defined at:
 10981 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10982 ;; Parameters:    Size  Location     Type
 10983 ;;		None
 10984 ;; Auto vars:     Size  Location     Type
 10985 ;;		None
 10986 ;; Return value:  Size  Location     Type
 10987 ;;                  1    wreg      void 
 10988 ;; Registers used:
 10989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10990 ;; Tracked objects:
 10991 ;;		On entry : 3E/1
 10992 ;;		On exit  : 0/0
 10993 ;;		Unchanged: 0/0
 10994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10999 ;;Total ram usage:        0 bytes
 11000 ;; Hardware stack levels used: 1
 11001 ;; Hardware stack levels required when called: 6
 11002 ;; This function calls:
 11003 ;;		_sm_init
 11004 ;; This function is called by:
 11005 ;;		_sm_execute_ControlLearning
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009                           	psect	text19
 11010  008D10                     __ptext19:
 11011                           	callstack 0
 11012  008D10                     _generateErrorLearnig:
 11013                           	callstack 22
 11014                           
 11015                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11016                           
 11017                           ;incstack = 0
 11018  008D10  0E00               	movlw	0
 11019  008D12  0101               	movlb	1	; () banked
 11020  008D14  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11021                           
 11022                           ; BSR set to: 1
 11023                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11024  008D16  0EBB               	movlw	low _menuConfiguration_stateMachine
 11025  008D18  6E12               	movwf	sm_init@psm^0,c
 11026  008D1A  0E02               	movlw	high _menuConfiguration_stateMachine
 11027  008D1C  6E13               	movwf	(sm_init@psm+1)^0,c
 11028  008D1E  0E00               	movlw	0
 11029  008D20  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11030  008D22  0E00               	movlw	0
 11031  008D24  6E14               	movwf	sm_init@initial_state^0,c
 11032  008D26  0E00               	movlw	0
 11033  008D28  6E16               	movwf	sm_init@hist_mode^0,c
 11034  008D2A  EC5F  F048         	call	_sm_init	;wreg free
 11035                           
 11036                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11037  008D2E  0EF2               	movlw	low _main_stateMachine
 11038  008D30  6E12               	movwf	sm_init@psm^0,c
 11039  008D32  0E01               	movlw	high _main_stateMachine
 11040  008D34  6E13               	movwf	(sm_init@psm+1)^0,c
 11041  008D36  0E00               	movlw	0
 11042  008D38  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11043  008D3A  0E00               	movlw	0
 11044  008D3C  6E14               	movwf	sm_init@initial_state^0,c
 11045  008D3E  0E00               	movlw	0
 11046  008D40  6E16               	movwf	sm_init@hist_mode^0,c
 11047  008D42  EC5F  F048         	call	_sm_init	;wreg free
 11048                           
 11049                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11050  008D46  0EE7               	movlw	low _controlGate_stateMachine
 11051  008D48  6E12               	movwf	sm_init@psm^0,c
 11052  008D4A  0E01               	movlw	high _controlGate_stateMachine
 11053  008D4C  6E13               	movwf	(sm_init@psm+1)^0,c
 11054  008D4E  0E00               	movlw	0
 11055  008D50  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11056  008D52  0E00               	movlw	0
 11057  008D54  6E14               	movwf	sm_init@initial_state^0,c
 11058  008D56  0E00               	movlw	0
 11059  008D58  6E16               	movwf	sm_init@hist_mode^0,c
 11060  008D5A  EC5F  F048         	call	_sm_init	;wreg free
 11061                           
 11062                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11063  008D5E  0EB0               	movlw	low _controlLearning_stateMachine
 11064  008D60  6E12               	movwf	sm_init@psm^0,c
 11065  008D62  0E02               	movlw	high _controlLearning_stateMachine
 11066  008D64  6E13               	movwf	(sm_init@psm+1)^0,c
 11067  008D66  0E00               	movlw	0
 11068  008D68  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11069  008D6A  0E00               	movlw	0
 11070  008D6C  6E14               	movwf	sm_init@initial_state^0,c
 11071  008D6E  0E00               	movlw	0
 11072  008D70  6E16               	movwf	sm_init@hist_mode^0,c
 11073  008D72  EC5F  F048         	call	_sm_init	;wreg free
 11074  008D76  0012               	return		;funcret
 11075  008D78                     __end_of_generateErrorLearnig:
 11076                           	callstack 0
 11077                           
 11078 ;; *************** function _sm_init *****************
 11079 ;; Defined at:
 11080 ;;		line 12 in file "sm_common_MC50.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  psm             2   17[COMRAM] PTR struct .
 11083 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11084 ;;  initial_stat    2   19[COMRAM] int 
 11085 ;;  hist_mode       1   21[COMRAM] enum E348
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;		None
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1    wreg      void 
 11090 ;; Registers used:
 11091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/1
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11097 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11100 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11101 ;;Total ram usage:        5 bytes
 11102 ;; Hardware stack levels used: 1
 11103 ;; Hardware stack levels required when called: 5
 11104 ;; This function calls:
 11105 ;;		_sm_restart
 11106 ;; This function is called by:
 11107 ;;		_main
 11108 ;;		_generateErrorLearnig
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           	psect	text20
 11113  0090BE                     __ptext20:
 11114                           	callstack 0
 11115  0090BE                     _sm_init:
 11116                           	callstack 25
 11117                           
 11118                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11119                           
 11120                           ;incstack = 0
 11121  0090BE  EE20 F002          	lfsr	2,2
 11122  0090C2  5012               	movf	sm_init@psm^0,w,c
 11123  0090C4  26D9               	addwf	fsr2l,f,c
 11124  0090C6  5013               	movf	(sm_init@psm+1)^0,w,c
 11125  0090C8  22DA               	addwfc	fsr2h,f,c
 11126  0090CA  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11127  0090CE  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11128                           
 11129                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11130  0090D2  EE20 F006          	lfsr	2,6
 11131  0090D6  5012               	movf	sm_init@psm^0,w,c
 11132  0090D8  26D9               	addwf	fsr2l,f,c
 11133  0090DA  5013               	movf	(sm_init@psm+1)^0,w,c
 11134  0090DC  22DA               	addwfc	fsr2h,f,c
 11135  0090DE  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11136                           
 11137                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11138  0090E2  C012  FFD9         	movff	sm_init@psm,fsr2l
 11139  0090E6  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11140  0090EA  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11141  0090EE  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11142                           
 11143                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11144  0090F2  EE20 F007          	lfsr	2,7
 11145  0090F6  5012               	movf	sm_init@psm^0,w,c
 11146  0090F8  26D9               	addwf	fsr2l,f,c
 11147  0090FA  5013               	movf	(sm_init@psm+1)^0,w,c
 11148  0090FC  22DA               	addwfc	fsr2h,f,c
 11149  0090FE  0E00               	movlw	0
 11150  009100  6EDE               	movwf	postinc2,c
 11151  009102  0E00               	movlw	0
 11152  009104  6EDD               	movwf	postdec2,c
 11153                           
 11154                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11155  009106  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11156  00910A  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11157  00910E  EC3D  F04A         	call	_sm_restart	;wreg free
 11158  009112  0012               	return		;funcret
 11159  009114                     __end_of_sm_init:
 11160                           	callstack 0
 11161                           
 11162 ;; *************** function _sm_restart *****************
 11163 ;; Defined at:
 11164 ;;		line 23 in file "sm_common_MC50.c"
 11165 ;; Parameters:    Size  Location     Type
 11166 ;;  psm             2   15[COMRAM] PTR struct .
 11167 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;		None
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1    wreg      void 
 11172 ;; Registers used:
 11173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/1
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11182 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11183 ;;Total ram usage:        2 bytes
 11184 ;; Hardware stack levels used: 1
 11185 ;; Hardware stack levels required when called: 4
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_sm_init
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           
 11193                           	psect	text21
 11194  00947A                     __ptext21:
 11195                           	callstack 0
 11196  00947A                     _sm_restart:
 11197                           	callstack 25
 11198                           
 11199                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11200                           
 11201                           ;incstack = 0
 11202  00947A  EE20 F006          	lfsr	2,6
 11203  00947E  5010               	movf	sm_restart@psm^0,w,c
 11204  009480  26D9               	addwf	fsr2l,f,c
 11205  009482  5011               	movf	(sm_restart@psm+1)^0,w,c
 11206  009484  22DA               	addwfc	fsr2h,f,c
 11207  009486  50DF               	movf	indf2,w,c
 11208  009488  A4D8               	btfss	status,2,c
 11209  00948A  D00E               	goto	l20684
 11210                           
 11211                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11212  00948C  EE20 F002          	lfsr	2,2
 11213  009490  5010               	movf	sm_restart@psm^0,w,c
 11214  009492  26D9               	addwf	fsr2l,f,c
 11215  009494  5011               	movf	(sm_restart@psm+1)^0,w,c
 11216  009496  22DA               	addwfc	fsr2h,f,c
 11217  009498  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11218  00949C  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11219  0094A0  CFDE FFE6          	movff	postinc2,postinc1
 11220  0094A4  CFDD FFE5          	movff	postdec2,postdec1
 11221  0094A8                     l20684:
 11222                           
 11223                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11224  0094A8  EE20 F004          	lfsr	2,4
 11225  0094AC  5010               	movf	sm_restart@psm^0,w,c
 11226  0094AE  26D9               	addwf	fsr2l,f,c
 11227  0094B0  5011               	movf	(sm_restart@psm+1)^0,w,c
 11228  0094B2  22DA               	addwfc	fsr2h,f,c
 11229  0094B4  0E00               	movlw	0
 11230  0094B6  6EDE               	movwf	postinc2,c
 11231  0094B8  0E00               	movlw	0
 11232  0094BA  6EDD               	movwf	postdec2,c
 11233  0094BC  0012               	return		;funcret
 11234  0094BE                     __end_of_sm_restart:
 11235                           	callstack 0
 11236                           
 11237 ;; *************** function _clearLearningValue *****************
 11238 ;; Defined at:
 11239 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;		None
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;		None
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1    wreg      void 
 11246 ;; Registers used:
 11247 ;;		wreg, status,2
 11248 ;; Tracked objects:
 11249 ;;		On entry : 3F/1
 11250 ;;		On exit  : 3F/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11257 ;;Total ram usage:        0 bytes
 11258 ;; Hardware stack levels used: 1
 11259 ;; Hardware stack levels required when called: 4
 11260 ;; This function calls:
 11261 ;;		Nothing
 11262 ;; This function is called by:
 11263 ;;		_sm_execute_ControlLearning
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text22
 11268  0087A8                     __ptext22:
 11269                           	callstack 0
 11270  0087A8                     _clearLearningValue:
 11271                           	callstack 24
 11272                           
 11273                           ; BSR set to: 1
 11274                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11275                           
 11276                           ;incstack = 0
 11277  0087A8  0E00               	movlw	0
 11278  0087AA  0100               	movlb	0	; () banked
 11279  0087AC  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11280  0087AE  0E00               	movlw	0
 11281  0087B0  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11282  0087B2  0E00               	movlw	0
 11283  0087B4  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11284  0087B6  0E00               	movlw	0
 11285  0087B8  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11286                           
 11287                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11288  0087BA  0E00               	movlw	0
 11289  0087BC  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11290  0087BE  0E00               	movlw	0
 11291  0087C0  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11292  0087C2  0E00               	movlw	0
 11293  0087C4  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11294  0087C6  0E00               	movlw	0
 11295  0087C8  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11296                           
 11297                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11298  0087CA  0E00               	movlw	0
 11299  0087CC  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11300                           
 11301                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11302  0087CE  0E00               	movlw	0
 11303  0087D0  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11304                           
 11305                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11306  0087D2  0E00               	movlw	0
 11307  0087D4  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11308  0087D6  0E00               	movlw	0
 11309  0087D8  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11310                           
 11311                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11312  0087DA  0E00               	movlw	0
 11313  0087DC  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11314  0087DE  0E00               	movlw	0
 11315  0087E0  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11316                           
 11317                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11318  0087E2  0E00               	movlw	0
 11319  0087E4  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11320  0087E6  0E00               	movlw	0
 11321  0087E8  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11322                           
 11323                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11324  0087EA  0E00               	movlw	0
 11325  0087EC  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11326  0087EE  0E00               	movlw	0
 11327  0087F0  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11328                           
 11329                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11330  0087F2  0E00               	movlw	0
 11331  0087F4  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11332  0087F6  0E00               	movlw	0
 11333  0087F8  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11334                           
 11335                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11336  0087FA  0E00               	movlw	0
 11337  0087FC  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11338  0087FE  0E00               	movlw	0
 11339  008800  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11340                           
 11341                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11342  008802  0E00               	movlw	0
 11343  008804  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11344  008806  0E00               	movlw	0
 11345  008808  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11346  00880A  0E00               	movlw	0
 11347  00880C  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11348  00880E  0E00               	movlw	0
 11349  008810  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11350                           
 11351                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11352  008812  0E00               	movlw	0
 11353  008814  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11354  008816  0E00               	movlw	0
 11355  008818  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11356  00881A  0E00               	movlw	0
 11357  00881C  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11358  00881E  0E00               	movlw	0
 11359  008820  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11360                           
 11361                           ; BSR set to: 0
 11362  008822  0012               	return		;funcret
 11363  008824                     __end_of_clearLearningValue:
 11364                           	callstack 0
 11365                           
 11366 ;; *************** function _calculateMean *****************
 11367 ;; Defined at:
 11368 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  meanValue       4   15[COMRAM] unsigned long 
 11371 ;;  newValue        4   19[COMRAM] unsigned long 
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;		None
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  4   15[COMRAM] unsigned long 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2, status,0
 11378 ;; Tracked objects:
 11379 ;;		On entry : 3E/1
 11380 ;;		On exit  : 3E/0
 11381 ;;		Unchanged: 3E/0
 11382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11383 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11386 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11387 ;;Total ram usage:       12 bytes
 11388 ;; Hardware stack levels used: 1
 11389 ;; Hardware stack levels required when called: 4
 11390 ;; This function calls:
 11391 ;;		Nothing
 11392 ;; This function is called by:
 11393 ;;		_sm_execute_ControlLearning
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text23
 11398  008DDE                     __ptext23:
 11399                           	callstack 0
 11400  008DDE                     _calculateMean:
 11401                           	callstack 24
 11402                           
 11403                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;incstack = 0
 11407  008DDE  5010               	movf	calculateMean@meanValue^0,w,c
 11408  008DE0  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11409  008DE2  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11410  008DE4  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11411  008DE6  A4D8               	btfss	status,2,c
 11412  008DE8  D009               	goto	l21878
 11413                           
 11414                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11415  008DEA  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11416  008DEE  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11417  008DF2  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11418  008DF6  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11419                           
 11420                           ;sm_ControlLearning_MC50.c: 416:     }
 11421  008DFA  D019               	goto	l21880
 11422  008DFC                     l21878:
 11423                           
 11424                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11425  008DFC  5014               	movf	calculateMean@newValue^0,w,c
 11426  008DFE  2410               	addwf	calculateMean@meanValue^0,w,c
 11427  008E00  6E18               	movwf	??_calculateMean^0,c
 11428  008E02  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11429  008E04  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11430  008E06  6E19               	movwf	(??_calculateMean+1)^0,c
 11431  008E08  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11432  008E0A  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11433  008E0C  6E1A               	movwf	(??_calculateMean+2)^0,c
 11434  008E0E  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11435  008E10  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11436  008E12  6E1B               	movwf	(??_calculateMean+3)^0,c
 11437  008E14  90D8               	bcf	status,0,c
 11438  008E16  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11439  008E18  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11440  008E1A  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11441  008E1C  3218               	rrcf	??_calculateMean^0,f,c
 11442  008E1E  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11443  008E22  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11444  008E26  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11445  008E2A  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11446  008E2E                     l21880:
 11447                           
 11448                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11449  008E2E  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11450  008E32  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11451  008E36  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11452  008E3A  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11453  008E3E  0012               	return		;funcret
 11454  008E40                     __end_of_calculateMean:
 11455                           	callstack 0
 11456                           
 11457 ;; *************** function _actionZone_Opening *****************
 11458 ;; Defined at:
 11459 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;		None
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11464 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11465 ;;  securityClos    1   12[BANK0 ] enum E10397
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  1    wreg      void 
 11468 ;; Registers used:
 11469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11470 ;; Tracked objects:
 11471 ;;		On entry : 3F/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11476 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11479 ;;Total ram usage:        3 bytes
 11480 ;; Hardware stack levels used: 1
 11481 ;; Hardware stack levels required when called: 8
 11482 ;; This function calls:
 11483 ;;		_CloseOrder
 11484 ;;		_GetOpenOrder
 11485 ;;		_GetSecurityStateInClosing
 11486 ;;		_GetSecurityStateInOpening
 11487 ;;		_InitFullAutoTime
 11488 ;;		_InitWalkAutoTime
 11489 ;;		_SetSegmentValueIntermitent
 11490 ;;		_StopOrder
 11491 ;;		_VerifyFollowMe
 11492 ;;		_controlVelocity
 11493 ;;		_setPositionInvertionInClosing
 11494 ;;		_setPositionInvertionInOpening
 11495 ;;		_sm_send_event
 11496 ;; This function is called by:
 11497 ;;		_sm_execute_ControlGate
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text24
 11502  0051A2                     __ptext24:
 11503                           	callstack 0
 11504  0051A2                     _actionZone_Opening:
 11505                           	callstack 21
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11509                           
 11510                           ;incstack = 0
 11511  0051A2  EC67  F03F         	call	_GetSecurityStateInClosing	;wreg free
 11512  0051A6  0100               	movlb	0	; () banked
 11513  0051A8  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11514                           
 11515                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11516  0051AA  ECBA  F03F         	call	_GetSecurityStateInOpening	;wreg free
 11517  0051AE  0100               	movlb	0	; () banked
 11518  0051B0  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11522  0051B2  EC20  F02F         	call	_GetOpenOrder	;wreg free
 11523  0051B6  0100               	movlb	0	; () banked
 11524  0051B8  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11528  0051BA  EC31  F02C         	call	_controlVelocity	;wreg free
 11529                           
 11530                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11531  0051BE  EC5A  F04E         	call	_InitFullAutoTime	;wreg free
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11535  0051C2  0E00               	movlw	0
 11536  0051C4  0101               	movlb	1	; () banked
 11537  0051C6  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11538                           
 11539                           ; BSR set to: 1
 11540                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11541  0051C8  0100               	movlb	0	; () banked
 11542  0051CA  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11543  0051CC  ECB2  F04D         	call	_VerifyFollowMe
 11544                           
 11545                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11546  0051D0  0E03               	movlw	3
 11547  0051D2  0101               	movlb	1	; () banked
 11548  0051D4  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11549  0051D6  D00D               	goto	l23124
 11550                           
 11551                           ; BSR set to: 1
 11552                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11553  0051D8  0E00               	movlw	0
 11554  0051DA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11555  0051DC                     l23122:
 11556                           
 11557                           ; BSR set to: 1
 11558                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11559  0051DC  0EE7               	movlw	low _controlGate_stateMachine
 11560  0051DE  6E12               	movwf	sm_send_event@psm^0,c
 11561  0051E0  0E01               	movlw	high _controlGate_stateMachine
 11562  0051E2  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11563  0051E4  0E00               	movlw	0
 11564  0051E6  6E15               	movwf	(sm_send_event@event+1)^0,c
 11565  0051E8  0E10               	movlw	16
 11566  0051EA  6E14               	movwf	sm_send_event@event^0,c
 11567  0051EC  EC4F  F047         	call	_sm_send_event	;wreg free
 11568                           
 11569                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11570  0051F0  0012               	return	
 11571  0051F2                     l23124:
 11572                           
 11573                           ; BSR set to: 1
 11574  0051F2  0E02               	movlw	2
 11575  0051F4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11576  0051F6  A4D8               	btfss	status,2,c
 11577  0051F8  D013               	goto	l23138
 11578                           
 11579                           ; BSR set to: 1
 11580  0051FA  BFB0               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11581  0051FC  D005               	goto	u26970
 11582  0051FE  51B0               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11583  005200  E10F               	bnz	l23138
 11584  005202  05AF               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11585  005204  B0D8               	btfsc	status,0,c
 11586  005206  D00C               	goto	l23138
 11587  005208                     u26970:
 11588                           
 11589                           ; BSR set to: 1
 11590                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11591  005208  ECC6  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11592                           
 11593                           ; BSR set to: 1
 11594                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11595  00520C  EC08  F04E         	call	_StopOrder	;wreg free
 11596                           
 11597                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11598  005210  ECDE  F04E         	call	_InitWalkAutoTime	;wreg free
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11602  005214  0E01               	movlw	1
 11603  005216  0101               	movlb	1	; () banked
 11604  005218  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11605                           
 11606                           ; BSR set to: 1
 11607                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11608  00521A  0E01               	movlw	1
 11609  00521C  6F92               	movwf	_Abertura_pedonal& (0+255),b
 11610                           
 11611                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11612  00521E  0012               	return	
 11613  005220                     l23138:
 11614                           
 11615                           ; BSR set to: 1
 11616  005220  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11617  005222  B4D8               	btfsc	status,2,c
 11618  005224  D010               	goto	u27020
 11619                           
 11620                           ; BSR set to: 1
 11621  005226  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11622  005228  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11623  00522A  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11624  00522C  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11625  00522E  A4D8               	btfss	status,2,c
 11626  005230  D02F               	goto	l23158
 11627                           
 11628                           ; BSR set to: 1
 11629  005232  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11630  005234  A4D8               	btfss	status,2,c
 11631  005236  D02C               	goto	l23158
 11632                           
 11633                           ; BSR set to: 1
 11634  005238  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11635  00523A  A4D8               	btfss	status,2,c
 11636  00523C  D029               	goto	l23158
 11637                           
 11638                           ; BSR set to: 1
 11639  00523E  0E02               	movlw	2
 11640  005240  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11641  005242  A4D8               	btfss	status,2,c
 11642  005244  D025               	goto	l23158
 11643  005246                     u27020:
 11644                           
 11645                           ; BSR set to: 1
 11646                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11647  005246  0E04               	movlw	4
 11648  005248  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11649                           
 11650                           ; BSR set to: 1
 11651                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11652  00524A  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11653  00524E  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11654  005252  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11655  005256  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11656                           
 11657                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11658  00525A  0E00               	movlw	0
 11659  00525C  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11660                           
 11661                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11662  00525E  0E00               	movlw	0
 11663  005260  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11664                           
 11665                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11666  005262  0E01               	movlw	1
 11667  005264  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11668                           
 11669                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11670  005266  0E00               	movlw	0
 11671  005268  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11672                           
 11673                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11674  00526A  0E00               	movlw	0
 11675  00526C  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11676  00526E  0E28               	movlw	40
 11677  005270  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11678                           
 11679                           ; BSR set to: 1
 11680                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11681  005272  0E00               	movlw	0
 11682  005274  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11683  005276  0E00               	movlw	0
 11684  005278  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11685  00527A  0E04               	movlw	4
 11686  00527C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11687  00527E  0E0F               	movlw	15
 11688  005280  EC0D  F04C         	call	_SetSegmentValueIntermitent
 11689                           
 11690                           ; BSR set to: 1
 11691                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11692  005284  EC08  F04E         	call	_StopOrder	;wreg free
 11693                           
 11694                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11695  005288  0E01               	movlw	1
 11696  00528A  0101               	movlb	1	; () banked
 11697  00528C  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11698                           
 11699                           ;sm_ControlGate_MC50.c: 419:     }
 11700  00528E  0012               	return	
 11701  005290                     l23158:
 11702                           
 11703                           ; BSR set to: 1
 11704  005290  0100               	movlb	0	; () banked
 11705  005292  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11706  005294  B4D8               	btfsc	status,2,c
 11707  005296  D012               	goto	u27060
 11708                           
 11709                           ; BSR set to: 0
 11710  005298  0101               	movlb	1	; () banked
 11711  00529A  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11712  00529C  D025               	goto	l23178
 11713  00529E  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11714  0052A0  E103               	bnz	u27040
 11715  0052A2  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11716  0052A4  A0D8               	btfss	status,0,c
 11717  0052A6  D020               	goto	l23178
 11718  0052A8                     u27040:
 11719                           
 11720                           ; BSR set to: 1
 11721  0052A8  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11722  0052AA  A4D8               	btfss	status,2,c
 11723  0052AC  D01D               	goto	l23178
 11724                           
 11725                           ; BSR set to: 1
 11726  0052AE  BFD0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11727  0052B0  D005               	goto	u27060
 11728  0052B2  51D0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11729  0052B4  E119               	bnz	l23178
 11730  0052B6  05CF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11731  0052B8  B0D8               	btfsc	status,0,c
 11732  0052BA  D016               	goto	l23178
 11733  0052BC                     u27060:
 11734  0052BC  0101               	movlb	1	; () banked
 11735  0052BE  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11736  0052C0  A4D8               	btfss	status,2,c
 11737  0052C2  D012               	goto	l23178
 11738                           
 11739                           ; BSR set to: 1
 11740                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11741  0052C4  0100               	movlb	0	; () banked
 11742  0052C6  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11743  0052C8  B4D8               	btfsc	status,2,c
 11744  0052CA  D002               	goto	l23172
 11745                           
 11746                           ; BSR set to: 0
 11747                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11748  0052CC  0101               	movlb	1	; () banked
 11749  0052CE  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11750  0052D0                     l23172:
 11751                           
 11752                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11753  0052D0  0E01               	movlw	1
 11754  0052D2  0101               	movlb	1	; () banked
 11755  0052D4  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11756                           
 11757                           ; BSR set to: 1
 11758                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11759  0052D6  0E00               	movlw	0
 11760  0052D8  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11761  0052DA  0E0A               	movlw	10
 11762  0052DC  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11763                           
 11764                           ; BSR set to: 1
 11765                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11766  0052DE  0E00               	movlw	0
 11767  0052E0  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11768  0052E2  0E1E               	movlw	30
 11769  0052E4  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11770                           
 11771                           ;sm_ControlGate_MC50.c: 430:     }
 11772  0052E6  0012               	return	
 11773  0052E8                     l23178:
 11774                           
 11775                           ; BSR set to: 1
 11776  0052E8  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11777  0052EA  D02D               	goto	l23208
 11778  0052EC  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11779  0052EE  E103               	bnz	u27090
 11780  0052F0  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11781  0052F2  A0D8               	btfss	status,0,c
 11782  0052F4  D028               	goto	l23208
 11783  0052F6                     u27090:
 11784                           
 11785                           ; BSR set to: 1
 11786  0052F6  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11787  0052F8  A4D8               	btfss	status,2,c
 11788  0052FA  D025               	goto	l23208
 11789                           
 11790                           ; BSR set to: 1
 11791                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11792  0052FC  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11793  0052FE  A4D8               	btfss	status,2,c
 11794  005300  D005               	goto	l23190
 11795                           
 11796                           ; BSR set to: 1
 11797                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11798  005302  0E00               	movlw	0
 11799  005304  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11800                           
 11801                           ; BSR set to: 1
 11802                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11803  005306  EC1F  F038         	call	_setPositionInvertionInClosing	;wreg free
 11804  00530A  D768               	goto	l23122
 11805  00530C                     l23190:
 11806                           
 11807                           ; BSR set to: 1
 11808  00530C  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11809  00530E  D005               	goto	u27120
 11810  005310  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11811  005312  E116               	bnz	l23206
 11812  005314  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11813  005316  B0D8               	btfsc	status,0,c
 11814  005318  D013               	goto	l23206
 11815  00531A                     u27120:
 11816                           
 11817                           ; BSR set to: 1
 11818                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11819  00531A  EC53  F04D         	call	_CloseOrder	;wreg free
 11820                           
 11821                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11822  00531E  ECC6  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11823                           
 11824                           ; BSR set to: 1
 11825                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11826  005322  0E00               	movlw	0
 11827  005324  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11828                           
 11829                           ; BSR set to: 1
 11830                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11831  005326  0E01               	movlw	1
 11832  005328  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11833                           
 11834                           ; BSR set to: 1
 11835                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11836  00532A  0E00               	movlw	0
 11837  00532C  6FD0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11838  00532E  0E14               	movlw	20
 11839  005330  6FCF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11840                           
 11841                           ; BSR set to: 1
 11842                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11843  005332  0E00               	movlw	0
 11844  005334  6FD2               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11845  005336  0E28               	movlw	40
 11846  005338  6FD1               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11847                           
 11848                           ; BSR set to: 1
 11849                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11850  00533A  0E01               	movlw	1
 11851  00533C  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11852                           
 11853                           ;sm_ControlGate_MC50.c: 449:         } else
 11854  00533E  0012               	return	
 11855  005340                     l23206:
 11856                           
 11857                           ; BSR set to: 1
 11858                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11859  005340  0E00               	movlw	0
 11860  005342  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11861  005344  0012               	return	
 11862  005346                     l23208:
 11863                           
 11864                           ; BSR set to: 1
 11865  005346  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11866  005348  A4D8               	btfss	status,2,c
 11867  00534A  D00A               	goto	l23228
 11868                           
 11869                           ; BSR set to: 1
 11870                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11871  00534C  0E00               	movlw	0
 11872  00534E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11873                           
 11874                           ; BSR set to: 1
 11875                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11876  005350  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11877  005352  D7E3               	goto	u27120
 11878  005354  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11879  005356  E14E               	bnz	l2723
 11880  005358  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11881  00535A  B0D8               	btfsc	status,0,c
 11882  00535C  0012               	return	
 11883  00535E  D7DD               	goto	u27120
 11884  005360                     l23228:
 11885                           
 11886                           ; BSR set to: 1
 11887  005360  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11888  005362  A4D8               	btfss	status,2,c
 11889  005364  D018               	goto	l23246
 11890                           
 11891                           ; BSR set to: 1
 11892  005366  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11893  005368  D005               	goto	u27160
 11894  00536A  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11895  00536C  E114               	bnz	l23246
 11896  00536E  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11897  005370  B0D8               	btfsc	status,0,c
 11898  005372  D011               	goto	l23246
 11899  005374                     u27160:
 11900                           
 11901                           ; BSR set to: 1
 11902                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11903  005374  0E02               	movlw	2
 11904  005376  0100               	movlb	0	; () banked
 11905  005378  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11906  00537A  B4D8               	btfsc	status,2,c
 11907  00537C  D007               	goto	l23242
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11911  00537E  0101               	movlb	1	; () banked
 11912  005380  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11913                           
 11914                           ; BSR set to: 1
 11915                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11916  005382  0E00               	movlw	0
 11917  005384  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11918                           
 11919                           ; BSR set to: 1
 11920                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11921  005386  ECC6  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11922  00538A  D728               	goto	l23122
 11923  00538C                     l23242:
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11927  00538C  ECC6  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11928  005390                     l23244:
 11929                           
 11930                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11931  005390  EC08  F04E         	call	_StopOrder	;wreg free
 11932  005394  0012               	return	
 11933  005396                     l23246:
 11934                           
 11935                           ; BSR set to: 1
 11936  005396  0100               	movlb	0	; () banked
 11937  005398  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11938  00539A  A4D8               	btfss	status,2,c
 11939  00539C  D005               	goto	l23252
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11943  00539E  0E03               	movlw	3
 11944  0053A0  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11945  0053A2  B4D8               	btfsc	status,2,c
 11946  0053A4  0012               	return	
 11947  0053A6  D7F4               	goto	l23244
 11948  0053A8                     l23252:
 11949                           
 11950                           ; BSR set to: 0
 11951  0053A8  0E02               	movlw	2
 11952  0053AA  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11953  0053AC  A4D8               	btfss	status,2,c
 11954  0053AE  D011               	goto	l23264
 11955                           
 11956                           ; BSR set to: 0
 11957  0053B0  0E02               	movlw	2
 11958  0053B2  0101               	movlb	1	; () banked
 11959  0053B4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11960  0053B6  A4D8               	btfss	status,2,c
 11961  0053B8  D00C               	goto	l23264
 11962                           
 11963                           ; BSR set to: 1
 11964  0053BA  0E02               	movlw	2
 11965  0053BC  0100               	movlb	0	; () banked
 11966  0053BE  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11967  0053C0  B4D8               	btfsc	status,2,c
 11968  0053C2  D007               	goto	l23264
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11972  0053C4  ECC6  F03C         	call	_setPositionInvertionInOpening	;wreg free
 11973                           
 11974                           ; BSR set to: 1
 11975                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11976  0053C8  EC08  F04E         	call	_StopOrder	;wreg free
 11977                           
 11978                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11979  0053CC  ECDE  F04E         	call	_InitWalkAutoTime	;wreg free
 11980                           
 11981                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11982  0053D0  0012               	return	
 11983  0053D2                     l23264:
 11984  0053D2  0100               	movlb	0	; () banked
 11985  0053D4  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11986  0053D6  B4D8               	btfsc	status,2,c
 11987  0053D8  D008               	goto	u27250
 11988                           
 11989                           ; BSR set to: 0
 11990  0053DA  0E03               	movlw	3
 11991  0053DC  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11992  0053DE  B4D8               	btfsc	status,2,c
 11993  0053E0  D004               	goto	u27250
 11994                           
 11995                           ; BSR set to: 0
 11996  0053E2  0E04               	movlw	4
 11997  0053E4  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11998  0053E6  A4D8               	btfss	status,2,c
 11999  0053E8  0012               	return	
 12000  0053EA                     u27250:
 12001                           
 12002                           ; BSR set to: 0
 12003  0053EA  0E02               	movlw	2
 12004  0053EC  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12005  0053EE  B4D8               	btfsc	status,2,c
 12006  0053F0  0012               	return	
 12007  0053F2  D7CC               	goto	l23242
 12008  0053F4                     l2723:
 12009  0053F4  0012               	return		;funcret
 12010  0053F6                     __end_of_actionZone_Opening:
 12011                           	callstack 0
 12012                           
 12013 ;; *************** function _setPositionInvertionInOpening *****************
 12014 ;; Defined at:
 12015 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;		None
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;		None
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      void 
 12022 ;; Registers used:
 12023 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12024 ;; Tracked objects:
 12025 ;;		On entry : 3E/1
 12026 ;;		On exit  : 3F/1
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12031 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12032 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12033 ;;Total ram usage:        8 bytes
 12034 ;; Hardware stack levels used: 1
 12035 ;; Hardware stack levels required when called: 6
 12036 ;; This function calls:
 12037 ;;		_getTimeDecelaration
 12038 ;; This function is called by:
 12039 ;;		_actionZone_Opening
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text25
 12044  00798C                     __ptext25:
 12045                           	callstack 0
 12046  00798C                     _setPositionInvertionInOpening:
 12047                           	callstack 22
 12048                           
 12049                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12050                           
 12051                           ;incstack = 0
 12052  00798C  0E02               	movlw	2
 12053  00798E  0100               	movlb	0	; () banked
 12054  007990  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12055  007992  B4D8               	btfsc	status,2,c
 12056  007994  D009               	goto	l21830
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12060  007996  0EFE               	movlw	254
 12061  007998  0101               	movlb	1	; () banked
 12062  00799A  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12063  00799C  0EFF               	movlw	255
 12064  00799E  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12065  0079A0  0EFF               	movlw	255
 12066  0079A2  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12067  0079A4  0EFF               	movlw	255
 12068  0079A6  D006               	goto	L69
 12069  0079A8                     l21830:
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12073  0079A8  0E01               	movlw	1
 12074  0079AA  0101               	movlb	1	; () banked
 12075  0079AC  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12076  0079AE  0E00               	movlw	0
 12077  0079B0  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12078  0079B2  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12079  0079B4                     L69:
 12080  0079B4  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12081                           
 12082                           ; BSR set to: 1
 12083                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12084  0079B6  0E03               	movlw	3
 12085  0079B8  EC52  F03C         	call	_getTimeDecelaration
 12086  0079BC  5029               	movf	?_getTimeDecelaration^0,w,c
 12087  0079BE  0101               	movlb	1	; () banked
 12088  0079C0  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12089  0079C2  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12090  0079C4  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12091  0079C6  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12092  0079C8  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12093  0079CA  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12094  0079CC  0A80               	xorlw	128
 12095  0079CE  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12096  0079D0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12097  0079D2  0A80               	xorlw	128
 12098  0079D4  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12099  0079D6  B0D8               	btfsc	status,0,c
 12100  0079D8  D004               	goto	l21836
 12101                           
 12102                           ; BSR set to: 1
 12103                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12104  0079DA  0E03               	movlw	3
 12105  0079DC  EC52  F03C         	call	_getTimeDecelaration
 12106  0079E0  D015               	goto	L70
 12107  0079E2                     l21836:
 12108                           
 12109                           ; BSR set to: 1
 12110  0079E2  0E01               	movlw	1
 12111  0079E4  EC52  F03C         	call	_getTimeDecelaration
 12112  0079E8  0101               	movlb	1	; () banked
 12113  0079EA  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12114  0079EC  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12115  0079EE  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12116  0079F0  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12117  0079F2  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12118  0079F4  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12119  0079F6  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12120  0079F8  0A80               	xorlw	128
 12121  0079FA  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12122  0079FC  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12123  0079FE  0A80               	xorlw	128
 12124  007A00  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12125  007A02  B0D8               	btfsc	status,0,c
 12126  007A04  D00B               	goto	l21840
 12127                           
 12128                           ; BSR set to: 1
 12129                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12130  007A06  0E01               	movlw	1
 12131  007A08  EC52  F03C         	call	_getTimeDecelaration
 12132  007A0C                     L70:
 12133  007A0C  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12134  007A10  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12135  007A14  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12136  007A18  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12137  007A1C                     l21840:
 12138                           
 12139                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12140  007A1C  0100               	movlb	0	; () banked
 12141  007A1E  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12142  007A20  0D0A               	mullw	10
 12143  007A22  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12144  007A26  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12145  007A2A  0E00               	movlw	0
 12146  007A2C  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12147  007A2E  0EFF               	movlw	255
 12148  007A30  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12149  007A32  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12150  007A34  0101               	movlb	1	; () banked
 12151  007A36  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12152  007A38  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12153  007A3A  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12154  007A3C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12155  007A3E  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12156  007A40  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12157  007A42  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12158  007A44  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12159  007A46  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12160  007A48  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12161  007A4A  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12162  007A4C  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12163  007A4E  0EC8               	movlw	200
 12164  007A50  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12165  007A52  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12166  007A54  0E00               	movlw	0
 12167  007A56  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12168  007A58  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12169  007A5A  0E00               	movlw	0
 12170  007A5C  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12171  007A5E  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12172  007A60  0E00               	movlw	0
 12173  007A62  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12174  007A64  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12175                           
 12176                           ; BSR set to: 1
 12177  007A66  0012               	return		;funcret
 12178  007A68                     __end_of_setPositionInvertionInOpening:
 12179                           	callstack 0
 12180                           
 12181 ;; *************** function _controlVelocity *****************
 12182 ;; Defined at:
 12183 ;;		line 527 in file "outputs_MC50.c"
 12184 ;; Parameters:    Size  Location     Type
 12185 ;;		None
 12186 ;; Auto vars:     Size  Location     Type
 12187 ;;		None
 12188 ;; Return value:  Size  Location     Type
 12189 ;;                  1    wreg      void 
 12190 ;; Registers used:
 12191 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12192 ;; Tracked objects:
 12193 ;;		On entry : 3E/1
 12194 ;;		On exit  : 3E/0
 12195 ;;		Unchanged: 0/0
 12196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12199 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12200 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12201 ;;Total ram usage:        1 bytes
 12202 ;; Hardware stack levels used: 1
 12203 ;; Hardware stack levels required when called: 7
 12204 ;; This function calls:
 12205 ;;		_ControlDecelarationFactor
 12206 ;;		_InitSoftStop
 12207 ;;		_getStateOpenPosition
 12208 ;;		_getTimeDecelaration
 12209 ;; This function is called by:
 12210 ;;		_main
 12211 ;;		_actionZone_Opening
 12212 ;; This function uses a non-reentrant model
 12213 ;;
 12214                           
 12215                           	psect	text26
 12216  005862                     __ptext26:
 12217                           	callstack 0
 12218  005862                     _controlVelocity:
 12219                           	callstack 21
 12220                           
 12221                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12222                           
 12223                           ; BSR set to: 1
 12224                           ;incstack = 0
 12225  005862  0101               	movlb	1	; () banked
 12226  005864  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12227  005866  A4D8               	btfss	status,2,c
 12228  005868  D017               	goto	l21638
 12229                           
 12230                           ; BSR set to: 1
 12231  00586A  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12232  00586C  A4D8               	btfss	status,2,c
 12233  00586E  D014               	goto	l21638
 12234                           
 12235                           ; BSR set to: 1
 12236                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12237  005870  517B               	movf	_powerControl_st& (0+255),w,b
 12238  005872  A4D8               	btfss	status,2,c
 12239  005874  D008               	goto	l21632
 12240                           
 12241                           ; BSR set to: 1
 12242                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12243  005876  0E00               	movlw	0
 12244  005878  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12245  00587A  0E0A               	movlw	10
 12246  00587C  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12247                           
 12248                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12249  00587E  0E00               	movlw	0
 12250  005880  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12251  005882  0E14               	movlw	20
 12252  005884  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12253  005886                     l21632:
 12254                           
 12255                           ; BSR set to: 1
 12256                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12257  005886  EC81  F04E         	call	_ControlDecelarationFactor	;wreg free
 12258                           
 12259                           ; BSR set to: 1
 12260                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12261  00588A  0E01               	movlw	1
 12262  00588C  6F7B               	movwf	_powerControl_st& (0+255),b
 12263                           
 12264                           ; BSR set to: 1
 12265                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12266  00588E  0E00               	movlw	0
 12267  005890  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12268  005892  0E00               	movlw	0
 12269  005894  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12270                           
 12271                           ;outputs_MC50.c: 541:     }
 12272  005896  0012               	return	
 12273  005898                     l21638:
 12274                           
 12275                           ; BSR set to: 1
 12276  005898  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12277  00589A  B4D8               	btfsc	status,2,c
 12278  00589C  D003               	goto	u25000
 12279                           
 12280                           ; BSR set to: 1
 12281  00589E  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12282  0058A0  A4D8               	btfss	status,2,c
 12283  0058A2  D007               	goto	l21644
 12284  0058A4                     u25000:
 12285                           
 12286                           ; BSR set to: 1
 12287                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12288  0058A4  0E00               	movlw	0
 12289  0058A6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12290  0058A8  0E00               	movlw	0
 12291  0058AA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12292                           
 12293                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12294  0058AC  0E00               	movlw	0
 12295  0058AE  6F7B               	movwf	_powerControl_st& (0+255),b
 12296                           
 12297                           ;outputs_MC50.c: 547:     }
 12298  0058B0  0012               	return	
 12299  0058B2                     l21644:
 12300                           
 12301                           ; BSR set to: 1
 12302  0058B2  0E03               	movlw	3
 12303  0058B4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12304  0058B6  A4D8               	btfss	status,2,c
 12305  0058B8  D068               	goto	l21692
 12306                           
 12307                           ; BSR set to: 1
 12308  0058BA  0E03               	movlw	3
 12309  0058BC  EC52  F03C         	call	_getTimeDecelaration
 12310  0058C0  5029               	movf	?_getTimeDecelaration^0,w,c
 12311  0058C2  0101               	movlb	1	; () banked
 12312  0058C4  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12313  0058C6  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12314  0058C8  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12315  0058CA  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12316  0058CC  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12317  0058CE  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12318  0058D0  0A80               	xorlw	128
 12319  0058D2  0100               	movlb	0	; () banked
 12320  0058D4  6FDA               	movwf	??_controlVelocity& (0+255),b
 12321  0058D6  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12322  0058D8  0A80               	xorlw	128
 12323  0058DA  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12324  0058DC  A0D8               	btfss	status,0,c
 12325  0058DE  D004               	goto	u25030
 12326                           
 12327                           ; BSR set to: 0
 12328  0058E0  0101               	movlb	1	; () banked
 12329  0058E2  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12330  0058E4  A4D8               	btfss	status,2,c
 12331  0058E6  D051               	goto	l21692
 12332  0058E8                     u25030:
 12333  0058E8  0100               	movlb	0	; () banked
 12334  0058EA  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12335  0058EC  B4D8               	btfsc	status,2,c
 12336  0058EE  D004               	goto	u25050
 12337                           
 12338                           ; BSR set to: 0
 12339  0058F0  0101               	movlb	1	; () banked
 12340  0058F2  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12341  0058F4  B4D8               	btfsc	status,2,c
 12342  0058F6  D00C               	goto	u25070
 12343  0058F8                     u25050:
 12344  0058F8  0101               	movlb	1	; () banked
 12345  0058FA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12346  0058FC  D005               	goto	u25060
 12347  0058FE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12348  005900  E144               	bnz	l21692
 12349  005902  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12350  005904  B0D8               	btfsc	status,0,c
 12351  005906  D041               	goto	l21692
 12352  005908                     u25060:
 12353                           
 12354                           ; BSR set to: 1
 12355  005908  0100               	movlb	0	; () banked
 12356  00590A  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12357  00590C  B4D8               	btfsc	status,2,c
 12358  00590E  D03D               	goto	l21692
 12359  005910                     u25070:
 12360                           
 12361                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12362  005910  0101               	movlb	1	; () banked
 12363  005912  517B               	movf	_powerControl_st& (0+255),w,b
 12364  005914  A4D8               	btfss	status,2,c
 12365  005916  D022               	goto	l21678
 12366                           
 12367                           ; BSR set to: 1
 12368  005918  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12369  00591A  A4D8               	btfss	status,2,c
 12370  00591C  D01F               	goto	l21678
 12371                           
 12372                           ; BSR set to: 1
 12373                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12374  00591E  0E00               	movlw	0
 12375  005920  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12376  005922  0E14               	movlw	20
 12377  005924  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12378                           
 12379                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12380  005926  0100               	movlb	0	; () banked
 12381  005928  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12382  00592A  B4D8               	btfsc	status,2,c
 12383  00592C  D008               	goto	l21668
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12387  00592E  0E00               	movlw	0
 12388  005930  0101               	movlb	1	; () banked
 12389  005932  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12390                           
 12391                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12392  005934  0E01               	movlw	1
 12393  005936  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12394                           
 12395                           ; BSR set to: 1
 12396                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12397  005938  ECD1  F049         	call	_InitSoftStop	;wreg free
 12398                           
 12399                           ;outputs_MC50.c: 563:                     }
 12400  00593C  D00F               	goto	l21678
 12401  00593E                     l21668:
 12402                           
 12403                           ; BSR set to: 0
 12404                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12405  00593E  0E00               	movlw	0
 12406  005940  0101               	movlb	1	; () banked
 12407  005942  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12408  005944  0E0A               	movlw	10
 12409  005946  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12410                           
 12411                           ; BSR set to: 1
 12412                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12413  005948  EC81  F04E         	call	_ControlDecelarationFactor	;wreg free
 12414                           
 12415                           ; BSR set to: 1
 12416                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12417  00594C  0E01               	movlw	1
 12418  00594E  6F7B               	movwf	_powerControl_st& (0+255),b
 12419                           
 12420                           ; BSR set to: 1
 12421                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12422  005950  0E00               	movlw	0
 12423  005952  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12424  005954  0E00               	movlw	0
 12425  005956  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12426                           
 12427                           ; BSR set to: 1
 12428                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12429  005958  0E00               	movlw	0
 12430  00595A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12431  00595C                     l21678:
 12432                           
 12433                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12434  00595C  0101               	movlb	1	; () banked
 12435  00595E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12436  005960  D005               	goto	u25110
 12437  005962  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12438  005964  E102               	bnz	u25111
 12439  005966  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12440  005968  B0D8               	btfsc	status,0,c
 12441  00596A                     u25111:
 12442  00596A  0012               	return	
 12443  00596C                     u25110:
 12444                           
 12445                           ; BSR set to: 1
 12446  00596C  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12447  00596E  A4D8               	btfss	status,2,c
 12448  005970  0012               	return	
 12449                           
 12450                           ; BSR set to: 1
 12451  005972  0100               	movlb	0	; () banked
 12452  005974  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12453  005976  B4D8               	btfsc	status,2,c
 12454  005978  0012               	return	
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12458  00597A  0E00               	movlw	0
 12459  00597C  0101               	movlb	1	; () banked
 12460  00597E  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12461  005980  0E02               	movlw	2
 12462  005982  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12463                           
 12464                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12465  005984  0E00               	movlw	0
 12466  005986  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12467  005988  D77E               	goto	l21632
 12468  00598A                     l21692:
 12469  00598A  0101               	movlb	1	; () banked
 12470  00598C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12471  00598E  EC45  F039         	call	_getStateOpenPosition
 12472  005992  06E8               	decf	wreg,f,c
 12473  005994  A4D8               	btfss	status,2,c
 12474  005996  D042               	goto	l21734
 12475                           
 12476                           ; BSR set to: 0
 12477  005998  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12478  00599A  B4D8               	btfsc	status,2,c
 12479  00599C  D004               	goto	u25160
 12480                           
 12481                           ; BSR set to: 0
 12482  00599E  0101               	movlb	1	; () banked
 12483  0059A0  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12484  0059A2  B4D8               	btfsc	status,2,c
 12485  0059A4  D00C               	goto	u25180
 12486  0059A6                     u25160:
 12487  0059A6  0101               	movlb	1	; () banked
 12488  0059A8  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12489  0059AA  D005               	goto	u25170
 12490  0059AC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12491  0059AE  E136               	bnz	l21734
 12492  0059B0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12493  0059B2  B0D8               	btfsc	status,0,c
 12494  0059B4  D033               	goto	l21734
 12495  0059B6                     u25170:
 12496                           
 12497                           ; BSR set to: 1
 12498  0059B6  0100               	movlb	0	; () banked
 12499  0059B8  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12500  0059BA  B4D8               	btfsc	status,2,c
 12501  0059BC  D02F               	goto	l21734
 12502  0059BE                     u25180:
 12503                           
 12504                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12505  0059BE  0101               	movlb	1	; () banked
 12506  0059C0  517B               	movf	_powerControl_st& (0+255),w,b
 12507  0059C2  A4D8               	btfss	status,2,c
 12508  0059C4  D022               	goto	l21720
 12509                           
 12510                           ; BSR set to: 1
 12511  0059C6  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12512  0059C8  A4D8               	btfss	status,2,c
 12513  0059CA  D01F               	goto	l21720
 12514                           
 12515                           ; BSR set to: 1
 12516                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12517  0059CC  0E00               	movlw	0
 12518  0059CE  6FCE               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12519  0059D0  0E14               	movlw	20
 12520  0059D2  6FCD               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12521                           
 12522                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12523  0059D4  0100               	movlb	0	; () banked
 12524  0059D6  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12525  0059D8  B4D8               	btfsc	status,2,c
 12526  0059DA  D008               	goto	l21712
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12530  0059DC  0E00               	movlw	0
 12531  0059DE  0101               	movlb	1	; () banked
 12532  0059E0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12533                           
 12534                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12535  0059E2  0E01               	movlw	1
 12536  0059E4  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12537                           
 12538                           ; BSR set to: 1
 12539                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12540  0059E6  ECD1  F049         	call	_InitSoftStop	;wreg free
 12541                           
 12542                           ;outputs_MC50.c: 598:             }else{
 12543  0059EA  D00F               	goto	l21720
 12544  0059EC                     l21712:
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12548  0059EC  0E00               	movlw	0
 12549  0059EE  0101               	movlb	1	; () banked
 12550  0059F0  6FCC               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12551  0059F2  0E0A               	movlw	10
 12552  0059F4  6FCB               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12553                           
 12554                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12555  0059F6  0E00               	movlw	0
 12556  0059F8  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12557                           
 12558                           ; BSR set to: 1
 12559                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12560  0059FA  EC81  F04E         	call	_ControlDecelarationFactor	;wreg free
 12561                           
 12562                           ; BSR set to: 1
 12563                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12564  0059FE  0E01               	movlw	1
 12565  005A00  6F7B               	movwf	_powerControl_st& (0+255),b
 12566                           
 12567                           ; BSR set to: 1
 12568                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12569  005A02  0E00               	movlw	0
 12570  005A04  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12571  005A06  0E00               	movlw	0
 12572  005A08  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12573  005A0A                     l21720:
 12574                           
 12575                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12576  005A0A  0101               	movlb	1	; () banked
 12577  005A0C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12578  005A0E  D7AE               	goto	u25110
 12579  005A10  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12580  005A12  E135               	bnz	l2311
 12581  005A14  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12582  005A16  B0D8               	btfsc	status,0,c
 12583  005A18  0012               	return	
 12584  005A1A  D7A8               	goto	u25110
 12585  005A1C                     l21734:
 12586  005A1C  0101               	movlb	1	; () banked
 12587  005A1E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12588  005A20  D012               	goto	l21742
 12589  005A22  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12590  005A24  E103               	bnz	u25250
 12591  005A26  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12592  005A28  A0D8               	btfss	status,0,c
 12593  005A2A  D00D               	goto	l21742
 12594  005A2C                     u25250:
 12595                           
 12596                           ; BSR set to: 1
 12597  005A2C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12598  005A2E  B4D8               	btfsc	status,2,c
 12599  005A30  D00A               	goto	l21742
 12600                           
 12601                           ; BSR set to: 1
 12602                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12603  005A32  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12604  005A34  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12605  005A36  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12606  005A38  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12607  005A3A  A0D8               	btfss	status,0,c
 12608  005A3C  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12609  005A3E  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12610  005A40                     l21740:
 12611                           
 12612                           ; BSR set to: 1
 12613                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12614  005A40  0E00               	movlw	0
 12615  005A42  6F7B               	movwf	_powerControl_st& (0+255),b
 12616                           
 12617                           ;outputs_MC50.c: 623:     }
 12618  005A44  0012               	return	
 12619  005A46                     l21742:
 12620                           
 12621                           ; BSR set to: 1
 12622  005A46  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12623  005A48  D010               	goto	l21750
 12624  005A4A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12625  005A4C  E103               	bnz	u25270
 12626  005A4E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12627  005A50  A0D8               	btfss	status,0,c
 12628  005A52  D00B               	goto	l21750
 12629  005A54                     u25270:
 12630                           
 12631                           ; BSR set to: 1
 12632  005A54  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12633  005A56  B4D8               	btfsc	status,2,c
 12634  005A58  D008               	goto	l21750
 12635                           
 12636                           ; BSR set to: 1
 12637                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12638  005A5A  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12639  005A5C  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12640  005A5E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12641  005A60  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12642  005A62  A0D8               	btfss	status,0,c
 12643  005A64  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12644  005A66  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12645  005A68  D7EB               	goto	l21740
 12646  005A6A                     l21750:
 12647                           
 12648                           ; BSR set to: 1
 12649                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12650  005A6A  0E00               	movlw	0
 12651  005A6C  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12652  005A6E  0E00               	movlw	0
 12653  005A70  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12654                           
 12655                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12656  005A72  0E00               	movlw	0
 12657  005A74  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12658  005A76  0E00               	movlw	0
 12659  005A78  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12660                           
 12661                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12662  005A7A  0E00               	movlw	0
 12663  005A7C  6F7B               	movwf	_powerControl_st& (0+255),b
 12664  005A7E                     l2311:
 12665  005A7E  0012               	return		;funcret
 12666  005A80                     __end_of_controlVelocity:
 12667                           	callstack 0
 12668                           
 12669 ;; *************** function _getStateOpenPosition *****************
 12670 ;; Defined at:
 12671 ;;		line 470 in file "outputs_MC50.c"
 12672 ;; Parameters:    Size  Location     Type
 12673 ;;  stateMotor      1    wreg     enum E10381
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12676 ;;  state           1    0[BANK0 ] _Bool 
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  1    wreg      _Bool 
 12679 ;; Registers used:
 12680 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12681 ;; Tracked objects:
 12682 ;;		On entry : 3F/1
 12683 ;;		On exit  : 3F/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12687 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12688 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12689 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12690 ;;Total ram usage:       11 bytes
 12691 ;; Hardware stack levels used: 1
 12692 ;; Hardware stack levels required when called: 6
 12693 ;; This function calls:
 12694 ;;		___lmul
 12695 ;;		_getTimeDecelaration
 12696 ;; This function is called by:
 12697 ;;		_controlVelocity
 12698 ;; This function uses a non-reentrant model
 12699 ;;
 12700                           
 12701                           	psect	text27
 12702  00728A                     __ptext27:
 12703                           	callstack 0
 12704  00728A                     _getStateOpenPosition:
 12705                           	callstack 21
 12706                           
 12707                           ;incstack = 0
 12708                           ;getStateOpenPosition@stateMotor stored from wreg
 12709  00728A  0100               	movlb	0	; () banked
 12710  00728C  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12711                           
 12712                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12713  00728E  0E00               	movlw	0
 12714  007290  0100               	movlb	0	; () banked
 12715  007292  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12719  007294  0101               	movlb	1	; () banked
 12720  007296  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12721  007298  A4D8               	btfss	status,2,c
 12722  00729A  D002               	goto	l20992
 12723  00729C                     u24120:
 12724                           
 12725                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12726  00729C  0E01               	movlw	1
 12727  00729E  D046               	goto	L71
 12728  0072A0                     l20992:
 12729                           
 12730                           ; BSR set to: 1
 12731  0072A0  0100               	movlb	0	; () banked
 12732  0072A2  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12733  0072A4  0D14               	mullw	20
 12734  0072A6  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12735  0072AA  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12736  0072AE  0E00               	movlw	0
 12737  0072B0  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12738  0072B2  0EFF               	movlw	255
 12739  0072B4  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12740  0072B6  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12741  0072B8  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12742  0072BA  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12743  0072BC  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12744  0072BE  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12745  0072C0  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12746  0072C2  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12747  0072C4  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12748  0072C6  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12749  0072C8  B0D8               	btfsc	status,0,c
 12750  0072CA  D033               	goto	l21006
 12751                           
 12752                           ; BSR set to: 0
 12753  0072CC  0E02               	movlw	2
 12754  0072CE  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12755  0072D0  A4D8               	btfss	status,2,c
 12756  0072D2  D02F               	goto	l21006
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12760  0072D4  90D8               	bcf	status,0,c
 12761  0072D6  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12762  0072D8  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12763  0072DA  D001               	goto	l21000
 12764  0072DC  D7DF               	goto	u24120
 12765  0072DE                     l21000:
 12766                           
 12767                           ; BSR set to: 0
 12768  0072DE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12769  0072E0  0D14               	mullw	20
 12770  0072E2  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12771  0072E6  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12772  0072EA  0E00               	movlw	0
 12773  0072EC  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12774  0072EE  0EFF               	movlw	255
 12775  0072F0  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12776  0072F2  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12777  0072F4  0ED8               	movlw	216
 12778  0072F6  2432               	addwf	??_getStateOpenPosition^0,w,c
 12779  0072F8  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12780  0072FA  0EFF               	movlw	255
 12781  0072FC  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12782  0072FE  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12783  007300  0EFF               	movlw	255
 12784  007302  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12785  007304  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12786  007306  0EFF               	movlw	255
 12787  007308  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12788  00730A  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12789  00730C  0101               	movlb	1	; () banked
 12790  00730E  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12791  007310  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12792  007312  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12793  007314  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12794  007316  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12795  007318  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12796  00731A  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12797  00731C  0A80               	xorlw	128
 12798  00731E  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12799  007320  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12800  007322  0A80               	xorlw	128
 12801  007324  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12802  007326  A0D8               	btfss	status,0,c
 12803  007328  D7B9               	goto	u24120
 12804                           
 12805                           ; BSR set to: 1
 12806                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12807  00732A  0E00               	movlw	0
 12808  00732C                     L71:
 12809  00732C  0100               	movlb	0	; () banked
 12810  00732E  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12811  007330  D032               	goto	l2254
 12812  007332                     l21006:
 12813                           
 12814                           ; BSR set to: 0
 12815  007332  0E02               	movlw	2
 12816  007334  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12817  007336  B4D8               	btfsc	status,2,c
 12818  007338  D003               	goto	u24180
 12819                           
 12820                           ; BSR set to: 0
 12821  00733A  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12822  00733C  A4D8               	btfss	status,2,c
 12823  00733E  D02B               	goto	l2254
 12824  007340                     u24180:
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12828  007340  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12829  007342  6E1D               	movwf	___lmul@multiplier^0,c
 12830  007344  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12831  007346  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12832  007348  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12833  00734A  0E0A               	movlw	10
 12834  00734C  6E21               	movwf	___lmul@multiplicand^0,c
 12835  00734E  0E00               	movlw	0
 12836  007350  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12837  007352  0E00               	movlw	0
 12838  007354  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12839  007356  0E00               	movlw	0
 12840  007358  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12841  00735A  EC8A  F048         	call	___lmul	;wreg free
 12842  00735E  501D               	movf	?___lmul^0,w,c
 12843  007360  0100               	movlb	0	; () banked
 12844  007362  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12845  007364  501E               	movf	(?___lmul+1)^0,w,c
 12846  007366  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12847  007368  501F               	movf	(?___lmul+2)^0,w,c
 12848  00736A  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12849  00736C  5020               	movf	(?___lmul+3)^0,w,c
 12850  00736E  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12851  007370  A0D8               	btfss	status,0,c
 12852  007372  D794               	goto	u24120
 12853                           
 12854                           ; BSR set to: 0
 12855  007374  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12856  007376  EC52  F03C         	call	_getTimeDecelaration
 12857  00737A  0101               	movlb	1	; () banked
 12858  00737C  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12859  00737E  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12860  007380  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12861  007382  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12862  007384  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12863  007386  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12864  007388  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12865  00738A  0A80               	xorlw	128
 12866  00738C  6E32               	movwf	??_getStateOpenPosition^0,c
 12867  00738E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12868  007390  0A80               	xorlw	128
 12869  007392  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12870  007394  D7C8               	goto	L72
 12871  007396                     l2254:
 12872                           
 12873                           ; BSR set to: 0
 12874                           ;outputs_MC50.c: 507:     return state;
 12875  007396  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12876                           
 12877                           ; BSR set to: 0
 12878  007398  0012               	return		;funcret
 12879  00739A                     __end_of_getStateOpenPosition:
 12880                           	callstack 0
 12881                           
 12882 ;; *************** function _InitSoftStop *****************
 12883 ;; Defined at:
 12884 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;		None
 12887 ;; Auto vars:     Size  Location     Type
 12888 ;;		None
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  1    wreg      void 
 12891 ;; Registers used:
 12892 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12893 ;; Tracked objects:
 12894 ;;		On entry : 3F/1
 12895 ;;		On exit  : 3E/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12902 ;;Total ram usage:        1 bytes
 12903 ;; Hardware stack levels used: 1
 12904 ;; Hardware stack levels required when called: 5
 12905 ;; This function calls:
 12906 ;;		_GetMotorPower
 12907 ;; This function is called by:
 12908 ;;		_controlVelocity
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text28
 12913  0093A2                     __ptext28:
 12914                           	callstack 0
 12915  0093A2                     _InitSoftStop:
 12916                           	callstack 22
 12917                           
 12918                           ; BSR set to: 1
 12919                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;incstack = 0
 12923  0093A2  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12924  0093A4  B4D8               	btfsc	status,2,c
 12925  0093A6  D003               	goto	u24220
 12926                           
 12927                           ; BSR set to: 1
 12928  0093A8  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12929  0093AA  A4D8               	btfss	status,2,c
 12930  0093AC  0012               	return	
 12931  0093AE                     u24220:
 12932                           
 12933                           ; BSR set to: 1
 12934  0093AE  0100               	movlb	0	; () banked
 12935  0093B0  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12936  0093B2  B4D8               	btfsc	status,2,c
 12937  0093B4  0012               	return	
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12941  0093B6  0E00               	movlw	0
 12942  0093B8  0101               	movlb	1	; () banked
 12943  0093BA  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12944  0093BC  0E00               	movlw	0
 12945  0093BE  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12946                           
 12947                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12948  0093C0  0E00               	movlw	0
 12949  0093C2  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12950  0093C4  0E00               	movlw	0
 12951  0093C6  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12952                           
 12953                           ; BSR set to: 1
 12954                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12955  0093C8  EC9A  F03D         	call	_GetMotorPower	;wreg free
 12956  0093CC  6E14               	movwf	??_InitSoftStop^0,c
 12957  0093CE  5014               	movf	??_InitSoftStop^0,w,c
 12958  0093D0  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12959  0093D2  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12960                           
 12961                           ; BSR set to: 1
 12962                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12963  0093D4  0E01               	movlw	1
 12964  0093D6  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12965  0093D8  6FB7               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12966  0093DA  0E00               	movlw	0
 12967  0093DC  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12968  0093DE  6FB8               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12969                           
 12970                           ; BSR set to: 1
 12971                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12972  0093E0  0100               	movlb	0	; () banked
 12973  0093E2  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12974  0093E4  080A               	sublw	10
 12975  0093E6  0101               	movlb	1	; () banked
 12976  0093E8  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12977  0093EA  0012               	return		;funcret
 12978  0093EC                     __end_of_InitSoftStop:
 12979                           	callstack 0
 12980                           
 12981 ;; *************** function _ControlDecelarationFactor *****************
 12982 ;; Defined at:
 12983 ;;		line 463 in file "outputs_MC50.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;		None
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;		None
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      void 
 12990 ;; Registers used:
 12991 ;;		wreg, status,2, status,0, prodl, prodh
 12992 ;; Tracked objects:
 12993 ;;		On entry : 3E/1
 12994 ;;		On exit  : 3F/1
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13001 ;;Total ram usage:        0 bytes
 13002 ;; Hardware stack levels used: 1
 13003 ;; Hardware stack levels required when called: 4
 13004 ;; This function calls:
 13005 ;;		Nothing
 13006 ;; This function is called by:
 13007 ;;		_controlVelocity
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           	psect	text29
 13012  009D02                     __ptext29:
 13013                           	callstack 0
 13014  009D02                     _ControlDecelarationFactor:
 13015                           	callstack 23
 13016                           
 13017                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13018                           
 13019                           ;incstack = 0
 13020  009D02  0E01               	movlw	1
 13021  009D04  0101               	movlb	1	; () banked
 13022  009D06  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13023                           
 13024                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13025  009D08  0E02               	movlw	2
 13026  009D0A  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13027                           
 13028                           ; BSR set to: 1
 13029                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13030  009D0C  0100               	movlb	0	; () banked
 13031  009D0E  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13032  009D10  0101               	movlb	1	; () banked
 13033  009D12  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13034  009D14  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13035                           
 13036                           ; BSR set to: 1
 13037  009D18  0012               	return		;funcret
 13038  009D1A                     __end_of_ControlDecelarationFactor:
 13039                           	callstack 0
 13040                           
 13041 ;; *************** function _actionZone_Opened *****************
 13042 ;; Defined at:
 13043 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13044 ;; Parameters:    Size  Location     Type
 13045 ;;		None
 13046 ;; Auto vars:     Size  Location     Type
 13047 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13048 ;;  securityClos    1   31[COMRAM] enum E10397
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      void 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13053 ;; Tracked objects:
 13054 ;;		On entry : 3F/0
 13055 ;;		On exit  : 3E/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13062 ;;Total ram usage:        2 bytes
 13063 ;; Hardware stack levels used: 1
 13064 ;; Hardware stack levels required when called: 7
 13065 ;; This function calls:
 13066 ;;		_CloseOrder
 13067 ;;		_GetOpenOrder
 13068 ;;		_GetSecurityStateInClosing
 13069 ;;		_InitFullAutoTime
 13070 ;;		_InitWalkAutoTime
 13071 ;;		_OpenFullOrder
 13072 ;;		_OpenWalkOrder
 13073 ;;		_VerifyFollowMe
 13074 ;; This function is called by:
 13075 ;;		_sm_execute_ControlGate
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           	psect	text30
 13080  005A80                     __ptext30:
 13081                           	callstack 0
 13082  005A80                     _actionZone_Opened:
 13083                           	callstack 22
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13087                           
 13088                           ; BSR set to: 1
 13089                           ;incstack = 0
 13090  005A80  EC67  F03F         	call	_GetSecurityStateInClosing	;wreg free
 13091  005A84  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13092                           
 13093                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13094  005A86  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13095  005A88  B4D8               	btfsc	status,2,c
 13096  005A8A  D007               	goto	l23284
 13097  005A8C  0101               	movlb	1	; () banked
 13098  005A8E  5192               	movf	_Abertura_pedonal& (0+255),w,b
 13099  005A90  A4D8               	btfss	status,2,c
 13100  005A92  D003               	goto	l23284
 13101                           
 13102                           ; BSR set to: 1
 13103                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13104  005A94  EC5A  F04E         	call	_InitFullAutoTime	;wreg free
 13105                           
 13106                           ;sm_ControlGate_MC50.c: 519:     }
 13107  005A98  D008               	goto	l2727
 13108  005A9A                     l23284:
 13109  005A9A  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13110  005A9C  B4D8               	btfsc	status,2,c
 13111  005A9E  D005               	goto	l2727
 13112  005AA0  0101               	movlb	1	; () banked
 13113  005AA2  0592               	decf	_Abertura_pedonal& (0+255),w,b
 13114  005AA4  B4D8               	btfsc	status,2,c
 13115                           
 13116                           ; BSR set to: 1
 13117                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13118  005AA6  ECDE  F04E         	call	_InitWalkAutoTime	;wreg free
 13119  005AAA                     l2727:
 13120                           
 13121                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13122  005AAA  EC20  F02F         	call	_GetOpenOrder	;wreg free
 13123  005AAE  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13124                           
 13125                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13126  005AB0  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13127  005AB2  ECB2  F04D         	call	_VerifyFollowMe
 13128                           
 13129                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13130  005AB6  B28E               	btfsc	142,1,c	;volatile
 13131  005AB8  D013               	goto	l2729
 13132  005ABA  0100               	movlb	0	; () banked
 13133  005ABC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13134  005ABE  B4D8               	btfsc	status,2,c
 13135  005AC0  D00F               	goto	l2729
 13136                           
 13137                           ; BSR set to: 0
 13138  005AC2  0101               	movlb	1	; () banked
 13139  005AC4  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13140  005AC6  B4D8               	btfsc	status,2,c
 13141  005AC8  D00B               	goto	l2729
 13142                           
 13143                           ; BSR set to: 1
 13144  005ACA  0E35               	movlw	53
 13145  005ACC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13146  005ACE  B4D8               	btfsc	status,2,c
 13147  005AD0  D007               	goto	l2729
 13148                           
 13149                           ; BSR set to: 1
 13150  005AD2  0E02               	movlw	2
 13151  005AD4  0100               	movlb	0	; () banked
 13152  005AD6  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13153  005AD8  A4D8               	btfss	status,2,c
 13154  005ADA  D002               	goto	l2729
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13158  005ADC  0E00               	movlw	0
 13159  005ADE  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13160  005AE0                     l2729:
 13161                           
 13162                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13163  005AE0  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13164  005AE2  B4D8               	btfsc	status,2,c
 13165  005AE4  D05D               	goto	l2730
 13166                           
 13167                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13168  005AE6  0E00               	movlw	0
 13169  005AE8  0101               	movlb	1	; () banked
 13170  005AEA  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13171  005AEC  0E3C               	movlw	60
 13172  005AEE  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13173                           
 13174                           ; BSR set to: 1
 13175                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13176  005AF0  0E02               	movlw	2
 13177  005AF2  0100               	movlb	0	; () banked
 13178  005AF4  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13179  005AF6  A4D8               	btfss	status,2,c
 13180  005AF8  D00D               	goto	l23316
 13181                           
 13182                           ; BSR set to: 0
 13183  005AFA  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13184  005AFC  A4D8               	btfss	status,2,c
 13185  005AFE  D00A               	goto	l23316
 13186                           
 13187                           ; BSR set to: 0
 13188  005B00  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13189  005B02  B4D8               	btfsc	status,2,c
 13190  005B04  D004               	goto	u27400
 13191                           
 13192                           ; BSR set to: 0
 13193  005B06  0E04               	movlw	4
 13194  005B08  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13195  005B0A  A4D8               	btfss	status,2,c
 13196  005B0C  D003               	goto	l23316
 13197  005B0E                     u27400:
 13198                           
 13199                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13200  005B0E  EC53  F04D         	call	_CloseOrder	;wreg free
 13201                           
 13202                           ;sm_ControlGate_MC50.c: 546:         }
 13203  005B12  0012               	return	
 13204  005B14                     l23316:
 13205                           
 13206                           ; BSR set to: 0
 13207  005B14  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13208  005B16  B4D8               	btfsc	status,2,c
 13209  005B18  D014               	goto	l23330
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13213  005B1A  0E03               	movlw	3
 13214  005B1C  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13215  005B1E  A4D8               	btfss	status,2,c
 13216  005B20  D00B               	goto	l23326
 13217                           
 13218                           ; BSR set to: 0
 13219  005B22  0101               	movlb	1	; () banked
 13220  005B24  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13221  005B26  A4D8               	btfss	status,2,c
 13222  005B28  D007               	goto	l23326
 13223                           
 13224                           ; BSR set to: 1
 13225  005B2A  0E04               	movlw	4
 13226  005B2C  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13227  005B2E  B4D8               	btfsc	status,2,c
 13228  005B30  D003               	goto	l23326
 13229  005B32                     u27440:
 13230                           
 13231                           ; BSR set to: 1
 13232                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13233  005B32  EC66  F04D         	call	_OpenFullOrder	;wreg free
 13234                           
 13235                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13236  005B36  0012               	return	
 13237  005B38                     l23326:
 13238  005B38  0E04               	movlw	4
 13239  005B3A  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13240  005B3C  A4D8               	btfss	status,2,c
 13241  005B3E  0012               	return	
 13242  005B40  D7E6               	goto	u27400
 13243  005B42                     l23330:
 13244                           
 13245                           ; BSR set to: 0
 13246  005B42  0E03               	movlw	3
 13247  005B44  0101               	movlb	1	; () banked
 13248  005B46  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13249  005B48  A4D8               	btfss	status,2,c
 13250  005B4A  D009               	goto	l23338
 13251                           
 13252                           ; BSR set to: 1
 13253  005B4C  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13254  005B4E  A4D8               	btfss	status,2,c
 13255  005B50  D006               	goto	l23338
 13256  005B52                     u27470:
 13257                           
 13258                           ; BSR set to: 1
 13259                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13260  005B52  EC66  F04D         	call	_OpenFullOrder	;wreg free
 13261  005B56                     l23336:
 13262                           
 13263                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13264  005B56  0E00               	movlw	0
 13265  005B58  0101               	movlb	1	; () banked
 13266  005B5A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13267                           
 13268                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13269  005B5C  0012               	return	
 13270  005B5E                     l23338:
 13271                           
 13272                           ; BSR set to: 1
 13273  005B5E  0E03               	movlw	3
 13274  005B60  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13275  005B62  A4D8               	btfss	status,2,c
 13276  005B64  D007               	goto	l23346
 13277                           
 13278                           ; BSR set to: 1
 13279  005B66  0E02               	movlw	2
 13280  005B68  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13281  005B6A  A4D8               	btfss	status,2,c
 13282  005B6C  D003               	goto	l23346
 13283                           
 13284                           ; BSR set to: 1
 13285                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13286  005B6E  ECE4  F045         	call	_OpenWalkOrder	;wreg free
 13287  005B72  D7F1               	goto	l23336
 13288  005B74                     l23346:
 13289                           
 13290                           ; BSR set to: 1
 13291  005B74  0E03               	movlw	3
 13292  005B76  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13293  005B78  A4D8               	btfss	status,2,c
 13294  005B7A  D005               	goto	l23356
 13295                           
 13296                           ; BSR set to: 1
 13297                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13298  005B7C  0E04               	movlw	4
 13299  005B7E  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13300  005B80  B4D8               	btfsc	status,2,c
 13301  005B82  0012               	return	
 13302  005B84  D7E6               	goto	u27470
 13303  005B86                     l23356:
 13304                           
 13305                           ; BSR set to: 1
 13306  005B86  0100               	movlb	0	; () banked
 13307  005B88  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13308  005B8A  B4D8               	btfsc	status,2,c
 13309  005B8C  D007               	goto	l23362
 13310                           
 13311                           ; BSR set to: 0
 13312  005B8E  0E02               	movlw	2
 13313  005B90  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13314  005B92  A4D8               	btfss	status,2,c
 13315  005B94  D003               	goto	l23362
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13319  005B96  EC5A  F04E         	call	_InitFullAutoTime	;wreg free
 13320                           
 13321                           ;sm_ControlGate_MC50.c: 586:         }
 13322  005B9A  0012               	return	
 13323  005B9C                     l23362:
 13324                           
 13325                           ; BSR set to: 0
 13326  005B9C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13327  005B9E  D7CE               	goto	L73
 13328  005BA0                     l2730:
 13329  005BA0  B28E               	btfsc	142,1,c	;volatile
 13330  005BA2  D00B               	goto	l23370
 13331  005BA4  0100               	movlb	0	; () banked
 13332  005BA6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13333  005BA8  B4D8               	btfsc	status,2,c
 13334  005BAA  D007               	goto	l23370
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13338  005BAC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13339  005BAE  0D14               	mullw	20
 13340  005BB0  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 13341  005BB4  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 13342                           
 13343                           ;sm_ControlGate_MC50.c: 599:     }
 13344  005BB8  0012               	return	
 13345  005BBA                     l23370:
 13346  005BBA  0101               	movlb	1	; () banked
 13347  005BBC  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13348  005BBE  A4D8               	btfss	status,2,c
 13349  005BC0  D00F               	goto	l23380
 13350                           
 13351                           ; BSR set to: 1
 13352  005BC2  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13353  005BC4  A4D8               	btfss	status,2,c
 13354  005BC6  D00C               	goto	l23380
 13355                           
 13356                           ; BSR set to: 1
 13357                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13358  005BC8  0E00               	movlw	0
 13359  005BCA  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13360                           
 13361                           ; BSR set to: 1
 13362                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13363  005BCC  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13364                           
 13365                           ; BSR set to: 1
 13366                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13367  005BD0  0100               	movlb	0	; () banked
 13368  005BD2  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13369  005BD4  0D14               	mullw	20
 13370  005BD6  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 13371  005BDA  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 13372                           
 13373                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13374  005BDE  0012               	return	
 13375  005BE0                     l23380:
 13376                           
 13377                           ; BSR set to: 1
 13378  005BE0  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13379  005BE2  D005               	goto	u27590
 13380  005BE4  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13381  005BE6  E113               	bnz	l23392
 13382  005BE8  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13383  005BEA  B0D8               	btfsc	status,0,c
 13384  005BEC  D010               	goto	l23392
 13385  005BEE                     u27590:
 13386                           
 13387                           ; BSR set to: 1
 13388  005BEE  0100               	movlb	0	; () banked
 13389  005BF0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13390  005BF2  A4D8               	btfss	status,2,c
 13391  005BF4  D00C               	goto	l23392
 13392                           
 13393                           ; BSR set to: 0
 13394  005BF6  0101               	movlb	1	; () banked
 13395  005BF8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13396  005BFA  A4D8               	btfss	status,2,c
 13397  005BFC  D008               	goto	l23392
 13398                           
 13399                           ; BSR set to: 1
 13400  005BFE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13401  005C00  B4D8               	btfsc	status,2,c
 13402  005C02  D005               	goto	l23392
 13403                           
 13404                           ; BSR set to: 1
 13405                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13406  005C04  0E00               	movlw	0
 13407  005C06  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13408                           
 13409                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13410  005C08  0E00               	movlw	0
 13411  005C0A  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13412  005C0C  D780               	goto	u27400
 13413  005C0E                     l23392:
 13414  005C0E  0101               	movlb	1	; () banked
 13415  005C10  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13416  005C12  D005               	goto	u27630
 13417  005C14  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13418  005C16  E119               	bnz	l23410
 13419  005C18  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13420  005C1A  B0D8               	btfsc	status,0,c
 13421  005C1C  D016               	goto	l23410
 13422  005C1E                     u27630:
 13423                           
 13424                           ; BSR set to: 1
 13425  005C1E  0100               	movlb	0	; () banked
 13426  005C20  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13427  005C22  B4D8               	btfsc	status,2,c
 13428  005C24  D012               	goto	l23410
 13429                           
 13430                           ; BSR set to: 0
 13431  005C26  0101               	movlb	1	; () banked
 13432  005C28  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13433  005C2A  B4D8               	btfsc	status,2,c
 13434  005C2C  D00E               	goto	l23410
 13435                           
 13436                           ; BSR set to: 1
 13437                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13438  005C2E  0E00               	movlw	0
 13439  005C30  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13440                           
 13441                           ; BSR set to: 1
 13442                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13443  005C32  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13444  005C34  A4D8               	btfss	status,2,c
 13445  005C36  D003               	goto	l23406
 13446                           
 13447                           ; BSR set to: 1
 13448                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13449  005C38  0E00               	movlw	0
 13450  005C3A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13451  005C3C  D77A               	goto	u27440
 13452  005C3E                     l23406:
 13453                           
 13454                           ; BSR set to: 1
 13455                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13456  005C3E  EC53  F04D         	call	_CloseOrder	;wreg free
 13457                           
 13458                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13459  005C42  0E00               	movlw	0
 13460  005C44  0101               	movlb	1	; () banked
 13461  005C46  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13462  005C48  0012               	return	
 13463  005C4A                     l23410:
 13464  005C4A  0101               	movlb	1	; () banked
 13465  005C4C  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13466  005C4E  A4D8               	btfss	status,2,c
 13467  005C50  0012               	return	
 13468                           
 13469                           ; BSR set to: 1
 13470  005C52  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13471  005C54  A4D8               	btfss	status,2,c
 13472  005C56  0012               	return	
 13473                           
 13474                           ; BSR set to: 1
 13475                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13476  005C58  BFAC               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13477  005C5A  D006               	goto	u27690
 13478  005C5C  51AC               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13479  005C5E  E103               	bnz	u27691
 13480  005C60  0E02               	movlw	2
 13481  005C62  5DAB               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13482  005C64  B0D8               	btfsc	status,0,c
 13483  005C66                     u27691:
 13484  005C66  0012               	return	
 13485  005C68                     u27690:
 13486                           
 13487                           ; BSR set to: 1
 13488                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13489  005C68  0E00               	movlw	0
 13490  005C6A  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13491  005C6C  0012               	return		;funcret
 13492  005C6E                     __end_of_actionZone_Opened:
 13493                           	callstack 0
 13494                           
 13495 ;; *************** function _VerifyFollowMe *****************
 13496 ;; Defined at:
 13497 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13498 ;; Parameters:    Size  Location     Type
 13499 ;;  securityClos    1    wreg     enum E10397
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;  securityClos    1   15[COMRAM] enum E10397
 13502 ;; Return value:  Size  Location     Type
 13503 ;;                  1    wreg      void 
 13504 ;; Registers used:
 13505 ;;		wreg, status,2, status,0
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/0
 13508 ;;		On exit  : 3E/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13515 ;;Total ram usage:        1 bytes
 13516 ;; Hardware stack levels used: 1
 13517 ;; Hardware stack levels required when called: 4
 13518 ;; This function calls:
 13519 ;;		Nothing
 13520 ;; This function is called by:
 13521 ;;		_actionZone_Opening
 13522 ;;		_actionZone_Opened
 13523 ;; This function uses a non-reentrant model
 13524 ;;
 13525                           
 13526                           	psect	text31
 13527  009B64                     __ptext31:
 13528                           	callstack 0
 13529  009B64                     _VerifyFollowMe:
 13530                           	callstack 24
 13531                           
 13532                           ;incstack = 0
 13533                           ;VerifyFollowMe@securityClose stored from wreg
 13534  009B64  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13535                           
 13536                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13537  009B66  0100               	movlb	0	; () banked
 13538  009B68  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13539  009B6A  B4D8               	btfsc	status,2,c
 13540  009B6C  0012               	return	
 13541                           
 13542                           ; BSR set to: 0
 13543  009B6E  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13544  009B70  A4D8               	btfss	status,2,c
 13545  009B72  0012               	return	
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13549  009B74  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13550  009B76  A4D8               	btfss	status,2,c
 13551  009B78  0012               	return	
 13552                           
 13553                           ; BSR set to: 0
 13554  009B7A  0101               	movlb	1	; () banked
 13555  009B7C  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13556  009B7E  A4D8               	btfss	status,2,c
 13557  009B80  0012               	return	
 13558                           
 13559                           ; BSR set to: 1
 13560                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13561  009B82  0E01               	movlw	1
 13562  009B84  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13563  009B86  0012               	return		;funcret
 13564  009B88                     __end_of_VerifyFollowMe:
 13565                           	callstack 0
 13566                           
 13567 ;; *************** function _CloseOrder *****************
 13568 ;; Defined at:
 13569 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13570 ;; Parameters:    Size  Location     Type
 13571 ;;		None
 13572 ;; Auto vars:     Size  Location     Type
 13573 ;;		None
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  1    wreg      void 
 13576 ;; Registers used:
 13577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13578 ;; Tracked objects:
 13579 ;;		On entry : 3E/1
 13580 ;;		On exit  : 3E/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13587 ;;Total ram usage:        0 bytes
 13588 ;; Hardware stack levels used: 1
 13589 ;; Hardware stack levels required when called: 6
 13590 ;; This function calls:
 13591 ;;		_InitSoftStart
 13592 ;;		_sm_send_event
 13593 ;; This function is called by:
 13594 ;;		_actionZone_Opening
 13595 ;;		_actionZone_Opened
 13596 ;; This function uses a non-reentrant model
 13597 ;;
 13598                           
 13599                           	psect	text32
 13600  009AA6                     __ptext32:
 13601                           	callstack 0
 13602  009AA6                     _CloseOrder:
 13603                           	callstack 22
 13604                           
 13605                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13606                           
 13607                           ;incstack = 0
 13608  009AA6  0E03               	movlw	3
 13609  009AA8  0101               	movlb	1	; () banked
 13610  009AAA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13611                           
 13612                           ; BSR set to: 1
 13613                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13614  009AAC  0EE7               	movlw	low _controlGate_stateMachine
 13615  009AAE  6E12               	movwf	sm_send_event@psm^0,c
 13616  009AB0  0E01               	movlw	high _controlGate_stateMachine
 13617  009AB2  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13618  009AB4  0E00               	movlw	0
 13619  009AB6  6E15               	movwf	(sm_send_event@event+1)^0,c
 13620  009AB8  0E0E               	movlw	14
 13621  009ABA  6E14               	movwf	sm_send_event@event^0,c
 13622  009ABC  EC4F  F047         	call	_sm_send_event	;wreg free
 13623                           
 13624                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13625  009AC0  0E03               	movlw	3
 13626  009AC2  0101               	movlb	1	; () banked
 13627  009AC4  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13628                           
 13629                           ; BSR set to: 1
 13630                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13631  009AC6  EC7D  F047         	call	_InitSoftStart	;wreg free
 13632  009ACA  0012               	return		;funcret
 13633  009ACC                     __end_of_CloseOrder:
 13634                           	callstack 0
 13635                           
 13636 ;; *************** function _actionZone_Closing *****************
 13637 ;; Defined at:
 13638 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13639 ;; Parameters:    Size  Location     Type
 13640 ;;		None
 13641 ;; Auto vars:     Size  Location     Type
 13642 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13643 ;;  securityClos    1   49[COMRAM] enum E10397
 13644 ;; Return value:  Size  Location     Type
 13645 ;;                  1    wreg      void 
 13646 ;; Registers used:
 13647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13648 ;; Tracked objects:
 13649 ;;		On entry : 3F/0
 13650 ;;		On exit  : 0/0
 13651 ;;		Unchanged: 0/0
 13652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13657 ;;Total ram usage:        2 bytes
 13658 ;; Hardware stack levels used: 1
 13659 ;; Hardware stack levels required when called: 7
 13660 ;; This function calls:
 13661 ;;		_GetOpenOrder
 13662 ;;		_GetSecurityStateInClosing
 13663 ;;		_InitFullAutoTime
 13664 ;;		_InitWalkAutoTime
 13665 ;;		_OpenFullOrder
 13666 ;;		_OpenWalkOrder
 13667 ;;		_SetSegmentValueIntermitent
 13668 ;;		_StopOrder
 13669 ;;		___lmul
 13670 ;;		_setPositionInvertionInClosing
 13671 ;;		_sm_send_event
 13672 ;; This function is called by:
 13673 ;;		_sm_execute_ControlGate
 13674 ;; This function uses a non-reentrant model
 13675 ;;
 13676                           
 13677                           	psect	text33
 13678  004CA0                     __ptext33:
 13679                           	callstack 0
 13680  004CA0                     _actionZone_Closing:
 13681                           	callstack 22
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13685                           
 13686                           ;incstack = 0
 13687  004CA0  EC20  F02F         	call	_GetOpenOrder	;wreg free
 13688  004CA4  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13689                           
 13690                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13691  004CA6  EC67  F03F         	call	_GetSecurityStateInClosing	;wreg free
 13692  004CAA  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13693                           
 13694                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13695  004CAC  0E00               	movlw	0
 13696  004CAE  0101               	movlb	1	; () banked
 13697  004CB0  6F92               	movwf	_Abertura_pedonal& (0+255),b
 13698                           
 13699                           ; BSR set to: 1
 13700                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13701  004CB2  EC5A  F04E         	call	_InitFullAutoTime	;wreg free
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13705  004CB6  0E00               	movlw	0
 13706  004CB8  0101               	movlb	1	; () banked
 13707  004CBA  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13708                           
 13709                           ; BSR set to: 1
 13710                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13711  004CBC  0E03               	movlw	3
 13712  004CBE  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13713  004CC0  D00D               	goto	l23434
 13714                           
 13715                           ; BSR set to: 1
 13716                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13717  004CC2  0E00               	movlw	0
 13718  004CC4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13719  004CC6                     l23432:
 13720                           
 13721                           ; BSR set to: 1
 13722                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13723  004CC6  0EE7               	movlw	low _controlGate_stateMachine
 13724  004CC8  6E12               	movwf	sm_send_event@psm^0,c
 13725  004CCA  0E01               	movlw	high _controlGate_stateMachine
 13726  004CCC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13727  004CCE  0E00               	movlw	0
 13728  004CD0  6E15               	movwf	(sm_send_event@event+1)^0,c
 13729  004CD2  0E10               	movlw	16
 13730  004CD4  6E14               	movwf	sm_send_event@event^0,c
 13731  004CD6  EC4F  F047         	call	_sm_send_event	;wreg free
 13732                           
 13733                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13734  004CDA  0012               	return	
 13735  004CDC                     l23434:
 13736                           
 13737                           ; BSR set to: 1
 13738  004CDC  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13739  004CDE  B4D8               	btfsc	status,2,c
 13740  004CE0  D00C               	goto	u27740
 13741                           
 13742                           ; BSR set to: 1
 13743  004CE2  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13744  004CE4  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13745  004CE6  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13746  004CE8  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13747  004CEA  A4D8               	btfss	status,2,c
 13748  004CEC  D05F               	goto	l23466
 13749                           
 13750                           ; BSR set to: 1
 13751  004CEE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13752  004CF0  A4D8               	btfss	status,2,c
 13753  004CF2  D05C               	goto	l23466
 13754                           
 13755                           ; BSR set to: 1
 13756  004CF4  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13757  004CF6  A4D8               	btfss	status,2,c
 13758  004CF8  D059               	goto	l23466
 13759  004CFA                     u27740:
 13760                           
 13761                           ; BSR set to: 1
 13762                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13763  004CFA  0E02               	movlw	2
 13764  004CFC  0100               	movlb	0	; () banked
 13765  004CFE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13766  004D00  A4D8               	btfss	status,2,c
 13767  004D02  D018               	goto	l23446
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13771  004D04  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13772  004D06  6E1D               	movwf	___lmul@multiplier^0,c
 13773  004D08  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13774  004D0A  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13775  004D0C  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13776  004D0E  0EB0               	movlw	176
 13777  004D10  6E21               	movwf	___lmul@multiplicand^0,c
 13778  004D12  0E04               	movlw	4
 13779  004D14  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13780  004D16  0E00               	movlw	0
 13781  004D18  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13782  004D1A  0E00               	movlw	0
 13783  004D1C  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13784  004D1E  EC8A  F048         	call	___lmul	;wreg free
 13785  004D22  C01D  F1BF         	movff	?___lmul,_ts_system+32	;volatile
 13786  004D26  C01E  F1C0         	movff	?___lmul+1,_ts_system+33	;volatile
 13787  004D2A  C01F  F1C1         	movff	?___lmul+2,_ts_system+34	;volatile
 13788  004D2E  C020  F1C2         	movff	?___lmul+3,_ts_system+35	;volatile
 13789                           
 13790                           ;sm_ControlGate_MC50.c: 668:         }
 13791  004D32  D009               	goto	l2773
 13792  004D34                     l23446:
 13793                           
 13794                           ; BSR set to: 0
 13795                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13796  004D34  0E00               	movlw	0
 13797  004D36  0101               	movlb	1	; () banked
 13798  004D38  6FBF               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13799  004D3A  0E00               	movlw	0
 13800  004D3C  6FC0               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13801  004D3E  0E00               	movlw	0
 13802  004D40  6FC1               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13803  004D42  0E00               	movlw	0
 13804  004D44  6FC2               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13805  004D46                     l2773:
 13806                           
 13807                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13808  004D46  0E00               	movlw	0
 13809  004D48  0101               	movlb	1	; () banked
 13810  004D4A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13811                           
 13812                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13813  004D4C  0E01               	movlw	1
 13814  004D4E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13815                           
 13816                           ; BSR set to: 1
 13817                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13818  004D50  0E01               	movlw	1
 13819  004D52  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13820  004D54  0E00               	movlw	0
 13821  004D56  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13822  004D58  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13823  004D5A  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13824                           
 13825                           ; BSR set to: 1
 13826                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13827  004D5C  0E00               	movlw	0
 13828  004D5E  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13829                           
 13830                           ; BSR set to: 1
 13831                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13832  004D60  0E00               	movlw	0
 13833  004D62  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13834  004D64  0E00               	movlw	0
 13835  004D66  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13836  004D68  0E00               	movlw	0
 13837  004D6A  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13838  004D6C  0E00               	movlw	0
 13839  004D6E  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13840                           
 13841                           ; BSR set to: 1
 13842                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13843  004D70  0E00               	movlw	0
 13844  004D72  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13845                           
 13846                           ; BSR set to: 1
 13847                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13848  004D74  0E00               	movlw	0
 13849  004D76  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13850                           
 13851                           ; BSR set to: 1
 13852                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13853  004D78  0E00               	movlw	0
 13854  004D7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13855                           
 13856                           ; BSR set to: 1
 13857                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13858  004D7C  0E00               	movlw	0
 13859  004D7E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13860  004D80  0E28               	movlw	40
 13861  004D82  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13862                           
 13863                           ; BSR set to: 1
 13864                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13865  004D84  0E0C               	movlw	12
 13866  004D86  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13867  004D88  0E00               	movlw	0
 13868  004D8A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13869  004D8C  0E04               	movlw	4
 13870  004D8E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13871  004D90  0E0F               	movlw	15
 13872  004D92  EC0D  F04C         	call	_SetSegmentValueIntermitent
 13873                           
 13874                           ; BSR set to: 1
 13875                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13876  004D96  0EE7               	movlw	low _controlGate_stateMachine
 13877  004D98  6E12               	movwf	sm_send_event@psm^0,c
 13878  004D9A  0E01               	movlw	high _controlGate_stateMachine
 13879  004D9C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13880  004D9E  0E00               	movlw	0
 13881  004DA0  6E15               	movwf	(sm_send_event@event+1)^0,c
 13882  004DA2  0E0F               	movlw	15
 13883  004DA4  6E14               	movwf	sm_send_event@event^0,c
 13884  004DA6  EC4F  F047         	call	_sm_send_event	;wreg free
 13885                           
 13886                           ;sm_ControlGate_MC50.c: 691:     }
 13887  004DAA  0012               	return	
 13888  004DAC                     l23466:
 13889                           
 13890                           ; BSR set to: 1
 13891  004DAC  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13892  004DAE  B4D8               	btfsc	status,2,c
 13893  004DB0  D011               	goto	u27790
 13894                           
 13895                           ; BSR set to: 1
 13896  004DB2  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13897  004DB4  D021               	goto	l23486
 13898  004DB6  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13899  004DB8  E103               	bnz	u27770
 13900  004DBA  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13901  004DBC  A0D8               	btfss	status,0,c
 13902  004DBE  D01C               	goto	l23486
 13903  004DC0                     u27770:
 13904                           
 13905                           ; BSR set to: 1
 13906  004DC0  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13907  004DC2  A4D8               	btfss	status,2,c
 13908  004DC4  D019               	goto	l23486
 13909                           
 13910                           ; BSR set to: 1
 13911  004DC6  BFD0               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13912  004DC8  D005               	goto	u27790
 13913  004DCA  51D0               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13914  004DCC  E115               	bnz	l23486
 13915  004DCE  05CF               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13916  004DD0  B0D8               	btfsc	status,0,c
 13917  004DD2  D012               	goto	l23486
 13918  004DD4                     u27790:
 13919                           
 13920                           ; BSR set to: 1
 13921  004DD4  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13922  004DD6  A4D8               	btfss	status,2,c
 13923  004DD8  D00F               	goto	l23486
 13924                           
 13925                           ; BSR set to: 1
 13926                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13927  004DDA  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13928  004DDC  A4D8               	btfss	status,2,c
 13929                           
 13930                           ; BSR set to: 1
 13931                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13932  004DDE  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13933                           
 13934                           ; BSR set to: 1
 13935                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13936                           
 13937                           ;sm_ControlGate_MC50.c: 696:         }
 13938  004DE0  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13939                           
 13940                           ; BSR set to: 1
 13941                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13942  004DE2  0E01               	movlw	1
 13943  004DE4  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13944                           
 13945                           ; BSR set to: 1
 13946                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13947  004DE6  0E00               	movlw	0
 13948  004DE8  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13949  004DEA  0E0A               	movlw	10
 13950  004DEC  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13951                           
 13952                           ; BSR set to: 1
 13953                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13954  004DEE  0E00               	movlw	0
 13955  004DF0  6FE0               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13956  004DF2  0E1E               	movlw	30
 13957  004DF4  6FDF               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13958                           
 13959                           ;sm_ControlGate_MC50.c: 702:     }
 13960  004DF6  0012               	return	
 13961  004DF8                     l23486:
 13962                           
 13963                           ; BSR set to: 1
 13964  004DF8  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13965  004DFA  D02E               	goto	l23516
 13966  004DFC  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13967  004DFE  E103               	bnz	u27820
 13968  004E00  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13969  004E02  A0D8               	btfss	status,0,c
 13970  004E04  D029               	goto	l23516
 13971  004E06                     u27820:
 13972                           
 13973                           ; BSR set to: 1
 13974  004E06  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13975  004E08  A4D8               	btfss	status,2,c
 13976  004E0A  D026               	goto	l23516
 13977                           
 13978                           ; BSR set to: 1
 13979                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13980  004E0C  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13981  004E0E  A4D8               	btfss	status,2,c
 13982  004E10  D005               	goto	l23498
 13983  004E12                     u27840:
 13984                           
 13985                           ; BSR set to: 1
 13986                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13987  004E12  0E00               	movlw	0
 13988  004E14  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13989                           
 13990                           ; BSR set to: 1
 13991                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 13992  004E16  EC1F  F038         	call	_setPositionInvertionInClosing	;wreg free
 13993  004E1A  D755               	goto	l23432
 13994  004E1C                     l23498:
 13995                           
 13996                           ; BSR set to: 1
 13997  004E1C  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13998  004E1E  D005               	goto	u27850
 13999  004E20  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14000  004E22  E117               	bnz	l23514
 14001  004E24  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14002  004E26  B0D8               	btfsc	status,0,c
 14003  004E28  D014               	goto	l23514
 14004  004E2A                     u27850:
 14005                           
 14006                           ; BSR set to: 1
 14007                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14008  004E2A  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14009  004E2C  A4D8               	btfss	status,2,c
 14010  004E2E  D003               	goto	l23504
 14011                           
 14012                           ; BSR set to: 1
 14013                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14014  004E30  ECE4  F045         	call	_OpenWalkOrder	;wreg free
 14015                           
 14016                           ;sm_ControlGate_MC50.c: 713:             }
 14017  004E34  D004               	goto	l23508
 14018  004E36                     l23504:
 14019                           
 14020                           ; BSR set to: 1
 14021                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14022  004E36  EC66  F04D         	call	_OpenFullOrder	;wreg free
 14023                           
 14024                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14025  004E3A  EC1F  F038         	call	_setPositionInvertionInClosing	;wreg free
 14026  004E3E                     l23508:
 14027                           
 14028                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14029  004E3E  0E00               	movlw	0
 14030  004E40  0101               	movlb	1	; () banked
 14031  004E42  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14032                           
 14033                           ; BSR set to: 1
 14034                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14035  004E44  0E01               	movlw	1
 14036  004E46  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14037                           
 14038                           ; BSR set to: 1
 14039                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14040  004E48  0E00               	movlw	0
 14041  004E4A  6FD0               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14042  004E4C  0E14               	movlw	20
 14043  004E4E  6FCF               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14044                           
 14045                           ;sm_ControlGate_MC50.c: 726:         } else
 14046  004E50  0012               	return	
 14047  004E52                     l23514:
 14048                           
 14049                           ; BSR set to: 1
 14050                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14051  004E52  0E00               	movlw	0
 14052  004E54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14053  004E56  0012               	return	
 14054  004E58                     l23516:
 14055                           
 14056                           ; BSR set to: 1
 14057  004E58  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14058  004E5A  A4D8               	btfss	status,2,c
 14059  004E5C  D017               	goto	l23532
 14060                           
 14061                           ; BSR set to: 1
 14062                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14063  004E5E  0E00               	movlw	0
 14064  004E60  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14065                           
 14066                           ; BSR set to: 1
 14067                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14068  004E62  BFC4               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14069  004E64  D005               	goto	u27880
 14070  004E66  51C4               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14071  004E68  E160               	bnz	l2810
 14072  004E6A  05C3               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14073  004E6C  B0D8               	btfsc	status,0,c
 14074  004E6E  0012               	return	
 14075  004E70                     u27880:
 14076                           
 14077                           ; BSR set to: 1
 14078                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14079  004E70  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14080  004E72  A4D8               	btfss	status,2,c
 14081  004E74  D003               	goto	l23526
 14082                           
 14083                           ; BSR set to: 1
 14084                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14085  004E76  ECE4  F045         	call	_OpenWalkOrder	;wreg free
 14086                           
 14087                           ;sm_ControlGate_MC50.c: 741:             }
 14088  004E7A  D004               	goto	l23530
 14089  004E7C                     l23526:
 14090                           
 14091                           ; BSR set to: 1
 14092                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14093  004E7C  EC66  F04D         	call	_OpenFullOrder	;wreg free
 14094                           
 14095                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14096  004E80  EC1F  F038         	call	_setPositionInvertionInClosing	;wreg free
 14097  004E84                     l23530:
 14098                           
 14099                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14100  004E84  0E00               	movlw	0
 14101  004E86  0101               	movlb	1	; () banked
 14102  004E88  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14103  004E8A  0012               	return	
 14104  004E8C                     l23532:
 14105                           
 14106                           ; BSR set to: 1
 14107  004E8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14108  004E8E  A4D8               	btfss	status,2,c
 14109  004E90  D00B               	goto	l23548
 14110                           
 14111                           ; BSR set to: 1
 14112                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14113  004E92  0E02               	movlw	2
 14114  004E94  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14115  004E96  B4D8               	btfsc	status,2,c
 14116  004E98  D002               	goto	l23544
 14117                           
 14118                           ; BSR set to: 1
 14119                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14120  004E9A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14121  004E9C  D7BA               	goto	u27840
 14122  004E9E                     l23544:
 14123                           
 14124                           ; BSR set to: 1
 14125                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14126  004E9E  EC1F  F038         	call	_setPositionInvertionInClosing	;wreg free
 14127  004EA2                     l23546:
 14128                           
 14129                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14130  004EA2  EC08  F04E         	call	_StopOrder	;wreg free
 14131  004EA6  0012               	return	
 14132  004EA8                     l23548:
 14133                           
 14134                           ; BSR set to: 1
 14135  004EA8  BFD2               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14136  004EAA  D005               	goto	u27920
 14137  004EAC  51D2               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14138  004EAE  E10B               	bnz	l23558
 14139  004EB0  05D1               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14140  004EB2  B0D8               	btfsc	status,0,c
 14141  004EB4  D008               	goto	l23558
 14142  004EB6                     u27920:
 14143                           
 14144                           ; BSR set to: 1
 14145  004EB6  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14146  004EB8  A4D8               	btfss	status,2,c
 14147  004EBA  D005               	goto	l23558
 14148                           
 14149                           ; BSR set to: 1
 14150                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14151  004EBC  EC1F  F038         	call	_setPositionInvertionInClosing	;wreg free
 14152                           
 14153                           ; BSR set to: 1
 14154                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14155  004EC0  0E00               	movlw	0
 14156  004EC2  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14157  004EC4  D7EE               	goto	l23546
 14158  004EC6                     l23558:
 14159                           
 14160                           ; BSR set to: 1
 14161  004EC6  0100               	movlb	0	; () banked
 14162  004EC8  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14163  004ECA  B4D8               	btfsc	status,2,c
 14164  004ECC  D004               	goto	u27950
 14165                           
 14166                           ; BSR set to: 0
 14167  004ECE  0E02               	movlw	2
 14168  004ED0  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14169  004ED2  A4D8               	btfss	status,2,c
 14170  004ED4  D005               	goto	l23566
 14171  004ED6                     u27950:
 14172                           
 14173                           ; BSR set to: 0
 14174                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14175  004ED6  0E04               	movlw	4
 14176  004ED8  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14177  004EDA  B4D8               	btfsc	status,2,c
 14178  004EDC  0012               	return	
 14179  004EDE  D7E1               	goto	l23546
 14180  004EE0                     l23566:
 14181                           
 14182                           ; BSR set to: 0
 14183  004EE0  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14184  004EE2  B4D8               	btfsc	status,2,c
 14185  004EE4  0012               	return	
 14186                           
 14187                           ; BSR set to: 0
 14188                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14189  004EE6  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14190  004EE8  A4D8               	btfss	status,2,c
 14191  004EEA  D013               	goto	l23582
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14195  004EEC  EC1F  F038         	call	_setPositionInvertionInClosing	;wreg free
 14196                           
 14197                           ; BSR set to: 1
 14198                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14199  004EF0  EC08  F04E         	call	_StopOrder	;wreg free
 14200                           
 14201                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14202  004EF4  0E02               	movlw	2
 14203  004EF6  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14204  004EF8  A4D8               	btfss	status,2,c
 14205  004EFA  0012               	return	
 14206  004EFC  0E02               	movlw	2
 14207  004EFE  0100               	movlb	0	; () banked
 14208  004F00  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14209  004F02  B4D8               	btfsc	status,2,c
 14210  004F04  0012               	return	
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14214  004F06  ECDE  F04E         	call	_InitWalkAutoTime	;wreg free
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14218  004F0A  0E01               	movlw	1
 14219  004F0C  0101               	movlb	1	; () banked
 14220  004F0E  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14221  004F10  0012               	return	
 14222  004F12                     l23582:
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14226  004F12  0E04               	movlw	4
 14227  004F14  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14228  004F16  B4D8               	btfsc	status,2,c
 14229  004F18  D7C4               	goto	l23546
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14233  004F1A  0E01               	movlw	1
 14234  004F1C  0101               	movlb	1	; () banked
 14235  004F1E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14236                           
 14237                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14238  004F20  0E00               	movlw	0
 14239  004F22  6FC4               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14240  004F24  0E0A               	movlw	10
 14241  004F26  6FC3               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14242                           
 14243                           ;sm_ControlGate_MC50.c: 806:             }
 14244  004F28  0012               	return	
 14245  004F2A                     l2810:
 14246  004F2A  0012               	return		;funcret
 14247  004F2C                     __end_of_actionZone_Closing:
 14248                           	callstack 0
 14249                           
 14250 ;; *************** function _setPositionInvertionInClosing *****************
 14251 ;; Defined at:
 14252 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;		None
 14255 ;; Auto vars:     Size  Location     Type
 14256 ;;		None
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  1    wreg      void 
 14259 ;; Registers used:
 14260 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14261 ;; Tracked objects:
 14262 ;;		On entry : 3E/1
 14263 ;;		On exit  : 3F/1
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14268 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14269 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14270 ;;Total ram usage:       12 bytes
 14271 ;; Hardware stack levels used: 1
 14272 ;; Hardware stack levels required when called: 6
 14273 ;; This function calls:
 14274 ;;		_getTimeDecelaration
 14275 ;; This function is called by:
 14276 ;;		_actionZone_Opening
 14277 ;;		_actionZone_Closing
 14278 ;; This function uses a non-reentrant model
 14279 ;;
 14280                           
 14281                           	psect	text34
 14282  00703E                     __ptext34:
 14283                           	callstack 0
 14284  00703E                     _setPositionInvertionInClosing:
 14285                           	callstack 22
 14286                           
 14287                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14288                           
 14289                           ;incstack = 0
 14290  00703E  0E02               	movlw	2
 14291  007040  0100               	movlb	0	; () banked
 14292  007042  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14293  007044  B4D8               	btfsc	status,2,c
 14294  007046  D007               	goto	l21846
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14298  007048  0E02               	movlw	2
 14299  00704A  0101               	movlb	1	; () banked
 14300  00704C  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14301  00704E  0E00               	movlw	0
 14302  007050  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14303  007052  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14304  007054  D008               	goto	L74
 14305  007056                     l21846:
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14309  007056  0EFF               	movlw	255
 14310  007058  0101               	movlb	1	; () banked
 14311  00705A  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14312  00705C  0EFF               	movlw	255
 14313  00705E  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14314  007060  0EFF               	movlw	255
 14315  007062  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14316  007064  0EFF               	movlw	255
 14317  007066                     L74:
 14318  007066  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14319                           
 14320                           ; BSR set to: 1
 14321                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14322  007068  0E01               	movlw	1
 14323  00706A  EC52  F03C         	call	_getTimeDecelaration
 14324  00706E  0101               	movlb	1	; () banked
 14325  007070  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14326  007072  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14327  007074  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14328  007076  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14329  007078  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14330  00707A  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14331  00707C  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14332  00707E  0A80               	xorlw	128
 14333  007080  0100               	movlb	0	; () banked
 14334  007082  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14335  007084  0101               	movlb	1	; () banked
 14336  007086  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14337  007088  0A80               	xorlw	128
 14338  00708A  0100               	movlb	0	; () banked
 14339  00708C  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14340  00708E  B0D8               	btfsc	status,0,c
 14341  007090  D008               	goto	l21854
 14342                           
 14343                           ; BSR set to: 0
 14344  007092  0E02               	movlw	2
 14345  007094  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14346  007096  B4D8               	btfsc	status,2,c
 14347  007098  D004               	goto	l21854
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14351  00709A  0E01               	movlw	1
 14352  00709C  EC52  F03C         	call	_getTimeDecelaration
 14353  0070A0  D01A               	goto	L75
 14354  0070A2                     l21854:
 14355                           
 14356                           ; BSR set to: 0
 14357  0070A2  0E03               	movlw	3
 14358  0070A4  EC52  F03C         	call	_getTimeDecelaration
 14359  0070A8  5029               	movf	?_getTimeDecelaration^0,w,c
 14360  0070AA  0101               	movlb	1	; () banked
 14361  0070AC  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14362  0070AE  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14363  0070B0  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14364  0070B2  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14365  0070B4  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14366  0070B6  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14367  0070B8  0A80               	xorlw	128
 14368  0070BA  0100               	movlb	0	; () banked
 14369  0070BC  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14370  0070BE  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14371  0070C0  0A80               	xorlw	128
 14372  0070C2  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14373  0070C4  B0D8               	btfsc	status,0,c
 14374  0070C6  D00F               	goto	l21860
 14375                           
 14376                           ; BSR set to: 0
 14377  0070C8  0E02               	movlw	2
 14378  0070CA  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14379  0070CC  B4D8               	btfsc	status,2,c
 14380  0070CE  D00B               	goto	l21860
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14384  0070D0  0E03               	movlw	3
 14385  0070D2  EC52  F03C         	call	_getTimeDecelaration
 14386  0070D6                     L75:
 14387  0070D6  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14388  0070DA  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14389  0070DE  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14390  0070E2  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14391  0070E6                     l21860:
 14392                           
 14393                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14394  0070E6  0100               	movlb	0	; () banked
 14395  0070E8  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14396  0070EA  0D0A               	mullw	10
 14397  0070EC  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14398  0070F0  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14399  0070F4  0E00               	movlw	0
 14400  0070F6  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14401  0070F8  0EFF               	movlw	255
 14402  0070FA  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14403  0070FC  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14404  0070FE  0101               	movlb	1	; () banked
 14405  007100  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14406  007102  0100               	movlb	0	; () banked
 14407  007104  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14408  007106  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14409  007108  0101               	movlb	1	; () banked
 14410  00710A  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14411  00710C  0100               	movlb	0	; () banked
 14412  00710E  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14413  007110  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14414  007112  0101               	movlb	1	; () banked
 14415  007114  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14416  007116  0100               	movlb	0	; () banked
 14417  007118  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14418  00711A  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14419  00711C  0101               	movlb	1	; () banked
 14420  00711E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14421  007120  0100               	movlb	0	; () banked
 14422  007122  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14423  007124  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14424  007126  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14425  007128  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14426  00712A  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14427  00712C  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14428  00712E  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14429  007130  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14430  007132  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14431  007134  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14432  007136  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14433  007138  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14434  00713A  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14435  00713C  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14436  00713E  0EC8               	movlw	200
 14437  007140  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14438  007142  0101               	movlb	1	; () banked
 14439  007144  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14440  007146  0E00               	movlw	0
 14441  007148  0100               	movlb	0	; () banked
 14442  00714A  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14443  00714C  0101               	movlb	1	; () banked
 14444  00714E  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14445  007150  0E00               	movlw	0
 14446  007152  0100               	movlb	0	; () banked
 14447  007154  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14448  007156  0101               	movlb	1	; () banked
 14449  007158  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14450  00715A  0E00               	movlw	0
 14451  00715C  0100               	movlb	0	; () banked
 14452  00715E  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14453  007160  0101               	movlb	1	; () banked
 14454  007162  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14455                           
 14456                           ; BSR set to: 1
 14457  007164  0012               	return		;funcret
 14458  007166                     __end_of_setPositionInvertionInClosing:
 14459                           	callstack 0
 14460                           
 14461 ;; *************** function _getTimeDecelaration *****************
 14462 ;; Defined at:
 14463 ;;		line 641 in file "outputs_MC50.c"
 14464 ;; Parameters:    Size  Location     Type
 14465 ;;  state           1    wreg     enum E10381
 14466 ;; Auto vars:     Size  Location     Type
 14467 ;;  state           1   48[COMRAM] enum E10381
 14468 ;; Return value:  Size  Location     Type
 14469 ;;                  4   40[COMRAM] long 
 14470 ;; Registers used:
 14471 ;;		wreg, status,2, status,0, cstack
 14472 ;; Tracked objects:
 14473 ;;		On entry : 3E/1
 14474 ;;		On exit  : 0/0
 14475 ;;		Unchanged: 0/0
 14476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14479 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14480 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14481 ;;Total ram usage:        9 bytes
 14482 ;; Hardware stack levels used: 1
 14483 ;; Hardware stack levels required when called: 5
 14484 ;; This function calls:
 14485 ;;		___lmul
 14486 ;; This function is called by:
 14487 ;;		_getStateOpenPosition
 14488 ;;		_controlVelocity
 14489 ;;		_setPositionInvertionInClosing
 14490 ;;		_setPositionInvertionInOpening
 14491 ;; This function uses a non-reentrant model
 14492 ;;
 14493                           
 14494                           	psect	text35
 14495  0078A4                     __ptext35:
 14496                           	callstack 0
 14497  0078A4                     _getTimeDecelaration:
 14498                           	callstack 22
 14499                           
 14500                           ; BSR set to: 1
 14501                           ;incstack = 0
 14502                           ;getTimeDecelaration@state stored from wreg
 14503  0078A4  6E31               	movwf	getTimeDecelaration@state^0,c
 14504                           
 14505                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14506  0078A6  0E03               	movlw	3
 14507  0078A8  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14508  0078AA  A4D8               	btfss	status,2,c
 14509  0078AC  D033               	goto	l20648
 14510                           
 14511                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14512  0078AE  0E02               	movlw	2
 14513  0078B0  0100               	movlb	0	; () banked
 14514  0078B2  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14515  0078B4  B4D8               	btfsc	status,2,c
 14516  0078B6  D018               	goto	l20644
 14517                           
 14518                           ; BSR set to: 0
 14519                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14520  0078B8  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14521  0078BA  6E1D               	movwf	___lmul@multiplier^0,c
 14522  0078BC  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14523  0078BE  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14524  0078C0  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14525  0078C2  0E0A               	movlw	10
 14526  0078C4  6E21               	movwf	___lmul@multiplicand^0,c
 14527  0078C6  0E00               	movlw	0
 14528  0078C8  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14529  0078CA  0E00               	movlw	0
 14530  0078CC  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14531  0078CE  0E00               	movlw	0
 14532  0078D0  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14533  0078D2  EC8A  F048         	call	___lmul	;wreg free
 14534  0078D6  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14535  0078DA  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14536  0078DE  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14537  0078E2  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14538  0078E6  0012               	return	
 14539  0078E8                     l20644:
 14540                           
 14541                           ; BSR set to: 0
 14542  0078E8  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14543  0078EC  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14544  0078EE  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14545  0078F0  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14546  0078F2  0E02               	movlw	2
 14547  0078F4                     u23665:
 14548  0078F4  90D8               	bcf	status,0,c
 14549  0078F6  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14550  0078F8  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14551  0078FA  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14552  0078FC  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14553  0078FE  2EE8               	decfsz	wreg,f,c
 14554  007900  D7F9               	goto	u23665
 14555  007902  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14556  007906  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14557  00790A  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14558  00790E  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14559  007912  0012               	return	
 14560  007914                     l20648:
 14561                           
 14562                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14563  007914  0E02               	movlw	2
 14564  007916  0100               	movlb	0	; () banked
 14565  007918  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14566  00791A  B4D8               	btfsc	status,2,c
 14567  00791C  D01D               	goto	l20656
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14571  00791E  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14572  007920  6E1D               	movwf	___lmul@multiplier^0,c
 14573  007922  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14574  007924  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14575  007926  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14576  007928  0EF6               	movlw	246
 14577  00792A  6E21               	movwf	___lmul@multiplicand^0,c
 14578  00792C  0EFF               	movlw	255
 14579  00792E  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14580  007930  0EFF               	movlw	255
 14581  007932  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14582  007934  0EFF               	movlw	255
 14583  007936  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14584  007938  EC8A  F048         	call	___lmul	;wreg free
 14585  00793C  0100               	movlb	0	; () banked
 14586  00793E  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14587  007940  241D               	addwf	?___lmul^0,w,c
 14588  007942  6E29               	movwf	?_getTimeDecelaration^0,c
 14589  007944  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14590  007946  201E               	addwfc	(?___lmul+1)^0,w,c
 14591  007948  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14592  00794A  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14593  00794C  201F               	addwfc	(?___lmul+2)^0,w,c
 14594  00794E  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14595  007950  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14596  007952  2020               	addwfc	(?___lmul+3)^0,w,c
 14597  007954  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14598  007956  0012               	return	
 14599  007958                     l20656:
 14600                           
 14601                           ; BSR set to: 0
 14602  007958  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14603  00795C  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14604  00795E  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14605  007960  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14606  007962  0E02               	movlw	2
 14607  007964                     u23685:
 14608  007964  90D8               	bcf	status,0,c
 14609  007966  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14610  007968  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14611  00796A  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14612  00796C  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14613  00796E  2EE8               	decfsz	wreg,f,c
 14614  007970  D7F9               	goto	u23685
 14615  007972  502D               	movf	??_getTimeDecelaration^0,w,c
 14616  007974  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14617  007976  6E29               	movwf	?_getTimeDecelaration^0,c
 14618  007978  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14619  00797A  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14620  00797C  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14621  00797E  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14622  007980  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14623  007982  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14624  007984  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14625  007986  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14626  007988  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14627  00798A  0012               	return		;funcret
 14628  00798C                     __end_of_getTimeDecelaration:
 14629                           	callstack 0
 14630                           
 14631 ;; *************** function ___lmul *****************
 14632 ;; Defined at:
 14633 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14634 ;; Parameters:    Size  Location     Type
 14635 ;;  multiplier      4   28[COMRAM] unsigned long 
 14636 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;  product         4   36[COMRAM] unsigned long 
 14639 ;; Return value:  Size  Location     Type
 14640 ;;                  4   28[COMRAM] unsigned long 
 14641 ;; Registers used:
 14642 ;;		wreg, status,2, status,0
 14643 ;; Tracked objects:
 14644 ;;		On entry : 0/1
 14645 ;;		On exit  : 0/0
 14646 ;;		Unchanged: 0/0
 14647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14648 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14649 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14651 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14652 ;;Total ram usage:       12 bytes
 14653 ;; Hardware stack levels used: 1
 14654 ;; Hardware stack levels required when called: 4
 14655 ;; This function calls:
 14656 ;;		Nothing
 14657 ;; This function is called by:
 14658 ;;		_getStateOpenPosition
 14659 ;;		_getTimeDecelaration
 14660 ;;		_actionZone_Closing
 14661 ;;		_sm_execute_menuConfiguration
 14662 ;; This function uses a non-reentrant model
 14663 ;;
 14664                           
 14665                           	psect	text36
 14666  009114                     __ptext36:
 14667                           	callstack 0
 14668  009114                     ___lmul:
 14669                           	callstack 24
 14670                           
 14671                           ;incstack = 0
 14672  009114  0E00               	movlw	0
 14673  009116  6E25               	movwf	___lmul@product^0,c
 14674  009118  0E00               	movlw	0
 14675  00911A  6E26               	movwf	(___lmul@product+1)^0,c
 14676  00911C  0E00               	movlw	0
 14677  00911E  6E27               	movwf	(___lmul@product+2)^0,c
 14678  009120  0E00               	movlw	0
 14679  009122  6E28               	movwf	(___lmul@product+3)^0,c
 14680  009124                     l20514:
 14681  009124  A01D               	btfss	___lmul@multiplier^0,0,c
 14682  009126  D008               	goto	l20518
 14683  009128  5021               	movf	___lmul@multiplicand^0,w,c
 14684  00912A  2625               	addwf	___lmul@product^0,f,c
 14685  00912C  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14686  00912E  2226               	addwfc	(___lmul@product+1)^0,f,c
 14687  009130  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14688  009132  2227               	addwfc	(___lmul@product+2)^0,f,c
 14689  009134  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14690  009136  2228               	addwfc	(___lmul@product+3)^0,f,c
 14691  009138                     l20518:
 14692  009138  90D8               	bcf	status,0,c
 14693  00913A  3621               	rlcf	___lmul@multiplicand^0,f,c
 14694  00913C  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14695  00913E  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14696  009140  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14697  009142  90D8               	bcf	status,0,c
 14698  009144  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14699  009146  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14700  009148  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14701  00914A  321D               	rrcf	___lmul@multiplier^0,f,c
 14702  00914C  501D               	movf	___lmul@multiplier^0,w,c
 14703  00914E  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14704  009150  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14705  009152  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14706  009154  A4D8               	btfss	status,2,c
 14707  009156  D7E6               	goto	l20514
 14708  009158  C025  F01D         	movff	___lmul@product,?___lmul
 14709  00915C  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14710  009160  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14711  009164  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14712  009168  0012               	return		;funcret
 14713  00916A                     __end_of___lmul:
 14714                           	callstack 0
 14715                           
 14716 ;; *************** function _StopOrder *****************
 14717 ;; Defined at:
 14718 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14719 ;; Parameters:    Size  Location     Type
 14720 ;;		None
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;		None
 14723 ;; Return value:  Size  Location     Type
 14724 ;;                  1    wreg      void 
 14725 ;; Registers used:
 14726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14727 ;; Tracked objects:
 14728 ;;		On entry : 3E/1
 14729 ;;		On exit  : 0/0
 14730 ;;		Unchanged: 0/0
 14731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14736 ;;Total ram usage:        0 bytes
 14737 ;; Hardware stack levels used: 1
 14738 ;; Hardware stack levels required when called: 6
 14739 ;; This function calls:
 14740 ;;		_sm_send_event
 14741 ;; This function is called by:
 14742 ;;		_actionZone_Opening
 14743 ;;		_actionZone_Closing
 14744 ;; This function uses a non-reentrant model
 14745 ;;
 14746                           
 14747                           	psect	text37
 14748  009C10                     __ptext37:
 14749                           	callstack 0
 14750  009C10                     _StopOrder:
 14751                           	callstack 22
 14752                           
 14753                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14754                           
 14755                           ;incstack = 0
 14756  009C10  0E00               	movlw	0
 14757  009C12  0101               	movlb	1	; () banked
 14758  009C14  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14759                           
 14760                           ; BSR set to: 1
 14761                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14762  009C16  0EE7               	movlw	low _controlGate_stateMachine
 14763  009C18  6E12               	movwf	sm_send_event@psm^0,c
 14764  009C1A  0E01               	movlw	high _controlGate_stateMachine
 14765  009C1C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14766  009C1E  0E00               	movlw	0
 14767  009C20  6E15               	movwf	(sm_send_event@event+1)^0,c
 14768  009C22  0E0D               	movlw	13
 14769  009C24  6E14               	movwf	sm_send_event@event^0,c
 14770  009C26  EC4F  F047         	call	_sm_send_event	;wreg free
 14771  009C2A  0012               	return		;funcret
 14772  009C2C                     __end_of_StopOrder:
 14773                           	callstack 0
 14774                           
 14775 ;; *************** function _GetSecurityStateInClosing *****************
 14776 ;; Defined at:
 14777 ;;		line 776 in file "inputs_MC50.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;		None
 14780 ;; Auto vars:     Size  Location     Type
 14781 ;;		None
 14782 ;; Return value:  Size  Location     Type
 14783 ;;                  1    wreg      enum E10564
 14784 ;; Registers used:
 14785 ;;		wreg, status,2, status,0, cstack
 14786 ;; Tracked objects:
 14787 ;;		On entry : 0/0
 14788 ;;		On exit  : 3E/0
 14789 ;;		Unchanged: 0/0
 14790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14795 ;;Total ram usage:        0 bytes
 14796 ;; Hardware stack levels used: 1
 14797 ;; Hardware stack levels required when called: 5
 14798 ;; This function calls:
 14799 ;;		_SetSegmentValueIntermitent
 14800 ;; This function is called by:
 14801 ;;		_actionZone_Opening
 14802 ;;		_actionZone_Opened
 14803 ;;		_actionZone_Closing
 14804 ;; This function uses a non-reentrant model
 14805 ;;
 14806                           
 14807                           	psect	text38
 14808  007ECE                     __ptext38:
 14809                           	callstack 0
 14810  007ECE                     _GetSecurityStateInClosing:
 14811                           	callstack 23
 14812                           
 14813                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14814                           
 14815                           ;incstack = 0
 14816  007ECE  0100               	movlb	0	; () banked
 14817  007ED0  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14818  007ED2  A4D8               	btfss	status,2,c
 14819  007ED4  D01B               	goto	l21522
 14820                           
 14821                           ; BSR set to: 0
 14822  007ED6  0101               	movlb	1	; () banked
 14823  007ED8  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14824  007EDA  A4D8               	btfss	status,2,c
 14825  007EDC  D017               	goto	l21522
 14826                           
 14827                           ; BSR set to: 1
 14828  007EDE  0100               	movlb	0	; () banked
 14829  007EE0  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14830  007EE2  A4D8               	btfss	status,2,c
 14831  007EE4  D013               	goto	l21522
 14832                           
 14833                           ; BSR set to: 0
 14834  007EE6  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14835  007EE8  A4D8               	btfss	status,2,c
 14836  007EEA  D010               	goto	l21522
 14837                           
 14838                           ; BSR set to: 0
 14839                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14840  007EEC  0E00               	movlw	0
 14841  007EEE  0101               	movlb	1	; () banked
 14842  007EF0  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14843  007EF2  0E04               	movlw	4
 14844  007EF4  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14845                           
 14846                           ; BSR set to: 1
 14847                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14848  007EF6  0E0A               	movlw	10
 14849  007EF8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14850  007EFA  0E00               	movlw	0
 14851  007EFC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14852  007EFE  0E14               	movlw	20
 14853  007F00  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14854  007F02  0E12               	movlw	18
 14855  007F04  EC0D  F04C         	call	_SetSegmentValueIntermitent
 14856  007F08                     l21516:
 14857                           
 14858                           ; BSR set to: 1
 14859                           ;inputs_MC50.c: 792:         return YES;
 14860  007F08  0E01               	movlw	1
 14861  007F0A  0012               	return	
 14862  007F0C                     l21522:
 14863  007F0C  0100               	movlb	0	; () banked
 14864  007F0E  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14865  007F10  A4D8               	btfss	status,2,c
 14866  007F12  D013               	goto	l21536
 14867                           
 14868                           ; BSR set to: 0
 14869  007F14  0101               	movlb	1	; () banked
 14870  007F16  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14871  007F18  A4D8               	btfss	status,2,c
 14872  007F1A  D00F               	goto	l21536
 14873                           
 14874                           ; BSR set to: 1
 14875                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14876  007F1C  0E00               	movlw	0
 14877  007F1E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14878  007F20  0E04               	movlw	4
 14879  007F22  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14880                           
 14881                           ; BSR set to: 1
 14882                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14883  007F24  0E15               	movlw	21
 14884  007F26  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14885  007F28  0E00               	movlw	0
 14886  007F2A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14887  007F2C  0E14               	movlw	20
 14888  007F2E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14889  007F30  0E05               	movlw	5
 14890  007F32  EC0D  F04C         	call	_SetSegmentValueIntermitent
 14891                           
 14892                           ; BSR set to: 1
 14893                           ;inputs_MC50.c: 799:         return ST;
 14894  007F36  0E02               	movlw	2
 14895  007F38  0012               	return	
 14896  007F3A                     l21536:
 14897  007F3A  0100               	movlb	0	; () banked
 14898  007F3C  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14899  007F3E  A4D8               	btfss	status,2,c
 14900  007F40  D017               	goto	l21552
 14901                           
 14902                           ; BSR set to: 0
 14903  007F42  0101               	movlb	1	; () banked
 14904  007F44  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14905  007F46  A4D8               	btfss	status,2,c
 14906  007F48  D013               	goto	l21552
 14907                           
 14908                           ; BSR set to: 1
 14909  007F4A  0100               	movlb	0	; () banked
 14910  007F4C  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14911  007F4E  A4D8               	btfss	status,2,c
 14912  007F50  D00F               	goto	l21552
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14916  007F52  0E00               	movlw	0
 14917  007F54  0101               	movlb	1	; () banked
 14918  007F56  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14919  007F58  0E04               	movlw	4
 14920  007F5A  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14921                           
 14922                           ; BSR set to: 1
 14923                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14924  007F5C  0E0E               	movlw	14
 14925  007F5E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14926  007F60  0E00               	movlw	0
 14927  007F62  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14928  007F64  0E14               	movlw	20
 14929  007F66  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14930  007F68  0E12               	movlw	18
 14931  007F6A  EC0D  F04C         	call	_SetSegmentValueIntermitent
 14932  007F6E  D7CC               	goto	l21516
 14933  007F70                     l21552:
 14934                           
 14935                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14936  007F70  0E00               	movlw	0
 14937  007F72  0012               	return		;funcret
 14938  007F74                     __end_of_GetSecurityStateInClosing:
 14939                           	callstack 0
 14940                           
 14941 ;; *************** function _actionZone_Closed *****************
 14942 ;; Defined at:
 14943 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;		None
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14948 ;;  securityOpen    1   31[COMRAM] enum E10397
 14949 ;; Return value:  Size  Location     Type
 14950 ;;                  1    wreg      void 
 14951 ;; Registers used:
 14952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14953 ;; Tracked objects:
 14954 ;;		On entry : 3F/0
 14955 ;;		On exit  : 0/0
 14956 ;;		Unchanged: 0/0
 14957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14962 ;;Total ram usage:        2 bytes
 14963 ;; Hardware stack levels used: 1
 14964 ;; Hardware stack levels required when called: 8
 14965 ;; This function calls:
 14966 ;;		_GetOpenOrder
 14967 ;;		_GetSecurityStateInOpening
 14968 ;;		_InitFullAutoTime
 14969 ;;		_InitWalkAutoTime
 14970 ;;		_OpenFullOrder
 14971 ;;		_OpenWalkOrder
 14972 ;;		_WaitPreFlash
 14973 ;;		_sm_send_event
 14974 ;; This function is called by:
 14975 ;;		_sm_execute_ControlGate
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           	psect	text39
 14980  007E24                     __ptext39:
 14981                           	callstack 0
 14982  007E24                     _actionZone_Closed:
 14983                           	callstack 21
 14984                           
 14985                           ; BSR set to: 0
 14986                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14987                           
 14988                           ;incstack = 0
 14989  007E24  0101               	movlb	1	; () banked
 14990  007E26  05F2               	decf	_main_stateMachine& (0+255),w,b
 14991  007E28  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 14992  007E2A  B4D8               	btfsc	status,2,c
 14993  007E2C  0012               	return	
 14994                           
 14995                           ; BSR set to: 1
 14996                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 14997  007E2E  EC20  F02F         	call	_GetOpenOrder	;wreg free
 14998  007E32  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 14999                           
 15000                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15001  007E34  ECBA  F03F         	call	_GetSecurityStateInOpening	;wreg free
 15002  007E38  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15003                           
 15004                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15005  007E3A  0100               	movlb	0	; () banked
 15006  007E3C  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15007  007E3E  A4D8               	btfss	status,2,c
 15008  007E40  D018               	goto	l23074
 15009                           
 15010                           ; BSR set to: 0
 15011                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15012  007E42  0E03               	movlw	3
 15013  007E44  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15014  007E46  A4D8               	btfss	status,2,c
 15015  007E48  0012               	return	
 15016                           
 15017                           ; BSR set to: 0
 15018  007E4A  0101               	movlb	1	; () banked
 15019  007E4C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15020  007E4E  A4D8               	btfss	status,2,c
 15021  007E50  0012               	return	
 15022                           
 15023                           ; BSR set to: 1
 15024  007E52  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15025  007E54  A4D8               	btfss	status,2,c
 15026  007E56  0012               	return	
 15027                           
 15028                           ; BSR set to: 1
 15029                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15030  007E58  EC66  F04D         	call	_OpenFullOrder	;wreg free
 15031  007E5C                     l23072:
 15032                           
 15033                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15034  007E5C  0EF2               	movlw	low _main_stateMachine
 15035  007E5E  6E12               	movwf	sm_send_event@psm^0,c
 15036  007E60  0E01               	movlw	high _main_stateMachine
 15037  007E62  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15038  007E64  0E00               	movlw	0
 15039  007E66  6E15               	movwf	(sm_send_event@event+1)^0,c
 15040  007E68  0E11               	movlw	17
 15041  007E6A  6E14               	movwf	sm_send_event@event^0,c
 15042  007E6C  EC4F  F047         	call	_sm_send_event	;wreg free
 15043  007E70  0012               	return	
 15044  007E72                     l23074:
 15045                           
 15046                           ; BSR set to: 0
 15047  007E72  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15048  007E74  B4D8               	btfsc	status,2,c
 15049  007E76  D004               	goto	u26880
 15050                           
 15051                           ; BSR set to: 0
 15052  007E78  0E03               	movlw	3
 15053  007E7A  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15054  007E7C  A4D8               	btfss	status,2,c
 15055  007E7E  D017               	goto	l23094
 15056  007E80                     u26880:
 15057                           
 15058                           ; BSR set to: 0
 15059  007E80  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15060  007E82  A4D8               	btfss	status,2,c
 15061  007E84  D014               	goto	l23094
 15062                           
 15063                           ; BSR set to: 0
 15064  007E86  0101               	movlb	1	; () banked
 15065  007E88  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15066  007E8A  A4D8               	btfss	status,2,c
 15067  007E8C  D010               	goto	l23094
 15068                           
 15069                           ; BSR set to: 1
 15070                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15071  007E8E  0E02               	movlw	2
 15072  007E90  0100               	movlb	0	; () banked
 15073  007E92  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15074  007E94  A4D8               	btfss	status,2,c
 15075  007E96  D006               	goto	l23088
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15079  007E98  0E01               	movlw	1
 15080  007E9A  0101               	movlb	1	; () banked
 15081  007E9C  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15082                           
 15083                           ; BSR set to: 1
 15084                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15085  007E9E  EC3C  F045         	call	_WaitPreFlash	;wreg free
 15086                           
 15087                           ;sm_ControlGate_MC50.c: 356:             }
 15088  007EA2  0012               	return	
 15089  007EA4                     l23088:
 15090                           
 15091                           ; BSR set to: 0
 15092                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15093  007EA4  EC66  F04D         	call	_OpenFullOrder	;wreg free
 15094                           
 15095                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15096  007EA8  EC5A  F04E         	call	_InitFullAutoTime	;wreg free
 15097  007EAC  D7D7               	goto	l23072
 15098  007EAE                     l23094:
 15099  007EAE  0E02               	movlw	2
 15100  007EB0  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15101  007EB2  A4D8               	btfss	status,2,c
 15102  007EB4  0012               	return	
 15103  007EB6  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15104  007EB8  A4D8               	btfss	status,2,c
 15105  007EBA  0012               	return	
 15106  007EBC  0100               	movlb	0	; () banked
 15107  007EBE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15108  007EC0  B4D8               	btfsc	status,2,c
 15109  007EC2  0012               	return	
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15113  007EC4  ECE4  F045         	call	_OpenWalkOrder	;wreg free
 15114                           
 15115                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15116  007EC8  ECDE  F04E         	call	_InitWalkAutoTime	;wreg free
 15117  007ECC  D7C7               	goto	l23072
 15118  007ECE                     __end_of_actionZone_Closed:
 15119                           	callstack 0
 15120                           
 15121 ;; *************** function _WaitPreFlash *****************
 15122 ;; Defined at:
 15123 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15124 ;; Parameters:    Size  Location     Type
 15125 ;;		None
 15126 ;; Auto vars:     Size  Location     Type
 15127 ;;		None
 15128 ;; Return value:  Size  Location     Type
 15129 ;;                  1    wreg      void 
 15130 ;; Registers used:
 15131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15132 ;; Tracked objects:
 15133 ;;		On entry : 3F/1
 15134 ;;		On exit  : 3F/1
 15135 ;;		Unchanged: 0/0
 15136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15141 ;;Total ram usage:        0 bytes
 15142 ;; Hardware stack levels used: 1
 15143 ;; Hardware stack levels required when called: 7
 15144 ;; This function calls:
 15145 ;;		_InitFullAutoTime
 15146 ;;		_OpenFullOrder
 15147 ;;		_sm_send_event
 15148 ;; This function is called by:
 15149 ;;		_sm_execute_ControlGate
 15150 ;;		_actionZone_Closed
 15151 ;; This function uses a non-reentrant model
 15152 ;;
 15153                           
 15154                           	psect	text40
 15155  008A78                     __ptext40:
 15156                           	callstack 0
 15157  008A78                     _WaitPreFlash:
 15158                           	callstack 21
 15159                           
 15160                           ; BSR set to: 1
 15161                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15162                           
 15163                           ;incstack = 0
 15164  008A78  0E02               	movlw	2
 15165  008A7A  0100               	movlb	0	; () banked
 15166  008A7C  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15167  008A7E  A4D8               	btfss	status,2,c
 15168  008A80  D014               	goto	l21766
 15169                           
 15170                           ; BSR set to: 0
 15171  008A82  0101               	movlb	1	; () banked
 15172  008A84  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15173  008A86  A4D8               	btfss	status,2,c
 15174  008A88  D010               	goto	l21766
 15175                           
 15176                           ; BSR set to: 1
 15177  008A8A  BFE6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15178  008A8C  D005               	goto	u25310
 15179  008A8E  51E6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15180  008A90  E10C               	bnz	l21766
 15181  008A92  05E5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15182  008A94  B0D8               	btfsc	status,0,c
 15183  008A96  D009               	goto	l21766
 15184  008A98                     u25310:
 15185                           
 15186                           ; BSR set to: 1
 15187  008A98  5191               	movf	_aux_i& (0+255),w,b
 15188  008A9A  A4D8               	btfss	status,2,c
 15189  008A9C  D006               	goto	l21766
 15190                           
 15191                           ; BSR set to: 1
 15192                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15193  008A9E  0E00               	movlw	0
 15194  008AA0  6FE6               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15195  008AA2  0E3C               	movlw	60
 15196  008AA4  6FE5               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15197                           
 15198                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15199  008AA6  0E01               	movlw	1
 15200  008AA8  6F91               	movwf	_aux_i& (0+255),b
 15201  008AAA                     l21766:
 15202                           
 15203                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15204  008AAA  0101               	movlb	1	; () banked
 15205  008AAC  BFE6               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15206  008AAE  D005               	goto	u25330
 15207  008AB0  51E6               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15208  008AB2  E119               	bnz	l2585
 15209  008AB4  05E5               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15210  008AB6  B0D8               	btfsc	status,0,c
 15211  008AB8  0012               	return	
 15212  008ABA                     u25330:
 15213                           
 15214                           ; BSR set to: 1
 15215  008ABA  0591               	decf	_aux_i& (0+255),w,b
 15216  008ABC  A4D8               	btfss	status,2,c
 15217  008ABE  0012               	return	
 15218                           
 15219                           ; BSR set to: 1
 15220                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15221  008AC0  0E00               	movlw	0
 15222  008AC2  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15223                           
 15224                           ; BSR set to: 1
 15225                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15226  008AC4  EC66  F04D         	call	_OpenFullOrder	;wreg free
 15227                           
 15228                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15229  008AC8  EC5A  F04E         	call	_InitFullAutoTime	;wreg free
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15233  008ACC  0EF2               	movlw	low _main_stateMachine
 15234  008ACE  6E12               	movwf	sm_send_event@psm^0,c
 15235  008AD0  0E01               	movlw	high _main_stateMachine
 15236  008AD2  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15237  008AD4  0E00               	movlw	0
 15238  008AD6  6E15               	movwf	(sm_send_event@event+1)^0,c
 15239  008AD8  0E11               	movlw	17
 15240  008ADA  6E14               	movwf	sm_send_event@event^0,c
 15241  008ADC  EC4F  F047         	call	_sm_send_event	;wreg free
 15242                           
 15243                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15244  008AE0  0E00               	movlw	0
 15245  008AE2  0101               	movlb	1	; () banked
 15246  008AE4  6F91               	movwf	_aux_i& (0+255),b
 15247  008AE6                     l2585:
 15248                           
 15249                           ; BSR set to: 1
 15250  008AE6  0012               	return		;funcret
 15251  008AE8                     __end_of_WaitPreFlash:
 15252                           	callstack 0
 15253                           
 15254 ;; *************** function _OpenFullOrder *****************
 15255 ;; Defined at:
 15256 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;		None
 15259 ;; Auto vars:     Size  Location     Type
 15260 ;;		None
 15261 ;; Return value:  Size  Location     Type
 15262 ;;                  1    wreg      void 
 15263 ;; Registers used:
 15264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15265 ;; Tracked objects:
 15266 ;;		On entry : 3E/1
 15267 ;;		On exit  : 3E/0
 15268 ;;		Unchanged: 0/0
 15269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15274 ;;Total ram usage:        0 bytes
 15275 ;; Hardware stack levels used: 1
 15276 ;; Hardware stack levels required when called: 6
 15277 ;; This function calls:
 15278 ;;		_InitSoftStart
 15279 ;;		_sm_send_event
 15280 ;; This function is called by:
 15281 ;;		_WaitPreFlash
 15282 ;;		_actionZone_Closed
 15283 ;;		_actionZone_Opened
 15284 ;;		_actionZone_Closing
 15285 ;; This function uses a non-reentrant model
 15286 ;;
 15287                           
 15288                           	psect	text41
 15289  009ACC                     __ptext41:
 15290                           	callstack 0
 15291  009ACC                     _OpenFullOrder:
 15292                           	callstack 22
 15293                           
 15294                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15295                           
 15296                           ; BSR set to: 1
 15297                           ;incstack = 0
 15298  009ACC  0E01               	movlw	1
 15299  009ACE  0101               	movlb	1	; () banked
 15300  009AD0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15301                           
 15302                           ; BSR set to: 1
 15303                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15304  009AD2  0EE7               	movlw	low _controlGate_stateMachine
 15305  009AD4  6E12               	movwf	sm_send_event@psm^0,c
 15306  009AD6  0E01               	movlw	high _controlGate_stateMachine
 15307  009AD8  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15308  009ADA  0E00               	movlw	0
 15309  009ADC  6E15               	movwf	(sm_send_event@event+1)^0,c
 15310  009ADE  0E0C               	movlw	12
 15311  009AE0  6E14               	movwf	sm_send_event@event^0,c
 15312  009AE2  EC4F  F047         	call	_sm_send_event	;wreg free
 15313                           
 15314                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15315  009AE6  0E01               	movlw	1
 15316  009AE8  0101               	movlb	1	; () banked
 15317  009AEA  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15318                           
 15319                           ; BSR set to: 1
 15320                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15321  009AEC  EC7D  F047         	call	_InitSoftStart	;wreg free
 15322  009AF0  0012               	return		;funcret
 15323  009AF2                     __end_of_OpenFullOrder:
 15324                           	callstack 0
 15325                           
 15326 ;; *************** function _InitFullAutoTime *****************
 15327 ;; Defined at:
 15328 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;		None
 15331 ;; Auto vars:     Size  Location     Type
 15332 ;;		None
 15333 ;; Return value:  Size  Location     Type
 15334 ;;                  1    wreg      void 
 15335 ;; Registers used:
 15336 ;;		wreg, status,2, status,0, prodl, prodh
 15337 ;; Tracked objects:
 15338 ;;		On entry : 3E/0
 15339 ;;		On exit  : 3F/0
 15340 ;;		Unchanged: 0/0
 15341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15346 ;;Total ram usage:        0 bytes
 15347 ;; Hardware stack levels used: 1
 15348 ;; Hardware stack levels required when called: 4
 15349 ;; This function calls:
 15350 ;;		Nothing
 15351 ;; This function is called by:
 15352 ;;		_WaitPreFlash
 15353 ;;		_actionZone_Closed
 15354 ;;		_actionZone_Opening
 15355 ;;		_actionZone_Opened
 15356 ;;		_actionZone_Closing
 15357 ;; This function uses a non-reentrant model
 15358 ;;
 15359                           
 15360                           	psect	text42
 15361  009CB4                     __ptext42:
 15362                           	callstack 0
 15363  009CB4                     _InitFullAutoTime:
 15364                           	callstack 24
 15365                           
 15366                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15367                           
 15368                           ;incstack = 0
 15369  009CB4  0100               	movlb	0	; () banked
 15370  009CB6  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15371  009CB8  A4D8               	btfss	status,2,c
 15372  009CBA  0012               	return	
 15373                           
 15374                           ; BSR set to: 0
 15375                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15376  009CBC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15377  009CBE  0D14               	mullw	20
 15378  009CC0  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 15379  009CC4  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 15380                           
 15381                           ; BSR set to: 0
 15382                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15383  009CC8  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15384                           
 15385                           ; BSR set to: 0
 15386  009CCC  0012               	return		;funcret
 15387  009CCE                     __end_of_InitFullAutoTime:
 15388                           	callstack 0
 15389                           
 15390 ;; *************** function _OpenWalkOrder *****************
 15391 ;; Defined at:
 15392 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15393 ;; Parameters:    Size  Location     Type
 15394 ;;		None
 15395 ;; Auto vars:     Size  Location     Type
 15396 ;;  diffTime        2   25[COMRAM] int 
 15397 ;; Return value:  Size  Location     Type
 15398 ;;                  1    wreg      void 
 15399 ;; Registers used:
 15400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15401 ;; Tracked objects:
 15402 ;;		On entry : 3E/1
 15403 ;;		On exit  : 3E/0
 15404 ;;		Unchanged: 0/0
 15405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15408 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15409 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15410 ;;Total ram usage:        4 bytes
 15411 ;; Hardware stack levels used: 1
 15412 ;; Hardware stack levels required when called: 6
 15413 ;; This function calls:
 15414 ;;		_InitSoftStart
 15415 ;;		_sm_send_event
 15416 ;; This function is called by:
 15417 ;;		_actionZone_Closed
 15418 ;;		_actionZone_Opened
 15419 ;;		_actionZone_Closing
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           	psect	text43
 15424  008BC8                     __ptext43:
 15425                           	callstack 0
 15426  008BC8                     _OpenWalkOrder:
 15427                           	callstack 22
 15428                           
 15429                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15430                           
 15431                           ; BSR set to: 0
 15432                           ;incstack = 0
 15433  008BC8  0100               	movlb	0	; () banked
 15434  008BCA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15435  008BCC  0D14               	mullw	20
 15436  008BCE  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15437  008BD2  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15438  008BD6  0101               	movlb	1	; () banked
 15439  008BD8  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15440  008BDA  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15441  008BDC  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15442  008BDE  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15443  008BE0  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15444  008BE2  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15445                           
 15446                           ; BSR set to: 1
 15447                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15448  008BE4  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15449  008BE6  D022               	goto	l21804
 15450  008BE8  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15451  008BEA  E103               	bnz	u25350
 15452  008BEC  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15453  008BEE  A0D8               	btfss	status,0,c
 15454  008BF0  D01D               	goto	l21804
 15455  008BF2                     u25350:
 15456                           
 15457                           ; BSR set to: 1
 15458                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15459  008BF2  0EE7               	movlw	low _controlGate_stateMachine
 15460  008BF4  6E12               	movwf	sm_send_event@psm^0,c
 15461  008BF6  0E01               	movlw	high _controlGate_stateMachine
 15462  008BF8  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15463  008BFA  0E00               	movlw	0
 15464  008BFC  6E15               	movwf	(sm_send_event@event+1)^0,c
 15465  008BFE  0E0C               	movlw	12
 15466  008C00  6E14               	movwf	sm_send_event@event^0,c
 15467  008C02  EC4F  F047         	call	_sm_send_event	;wreg free
 15468                           
 15469                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15470  008C06  0101               	movlb	1	; () banked
 15471  008C08  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15472  008C0A  A4D8               	btfss	status,2,c
 15473  008C0C  D005               	goto	l21798
 15474                           
 15475                           ; BSR set to: 1
 15476                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15477  008C0E  C01A  F1AF         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15478  008C12  C01B  F1B0         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15479                           
 15480                           ;sm_ControlGate_MC50.c: 79:         }
 15481  008C16  D006               	goto	l21800
 15482  008C18                     l21798:
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15486  008C18  0E14               	movlw	20
 15487  008C1A  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15488  008C1C  6FAF               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15489  008C1E  0E00               	movlw	0
 15490  008C20  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15491  008C22  6FB0               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15492  008C24                     l21800:
 15493                           
 15494                           ; BSR set to: 1
 15495                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15496  008C24  0E02               	movlw	2
 15497  008C26  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15498                           
 15499                           ; BSR set to: 1
 15500                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15501  008C28  0E01               	movlw	1
 15502  008C2A  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15503  008C2C                     l21804:
 15504                           
 15505                           ; BSR set to: 1
 15506                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15507  008C2C  0E02               	movlw	2
 15508  008C2E  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15509                           
 15510                           ; BSR set to: 1
 15511                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15512  008C30  EC7D  F047         	call	_InitSoftStart	;wreg free
 15513  008C34  0012               	return		;funcret
 15514  008C36                     __end_of_OpenWalkOrder:
 15515                           	callstack 0
 15516                           
 15517 ;; *************** function _sm_send_event *****************
 15518 ;; Defined at:
 15519 ;;		line 34 in file "sm_common_MC50.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;  psm             2   17[COMRAM] PTR struct .
 15522 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15523 ;;  event           2   19[COMRAM] int 
 15524 ;; Auto vars:     Size  Location     Type
 15525 ;;		None
 15526 ;; Return value:  Size  Location     Type
 15527 ;;                  1    wreg      void 
 15528 ;; Registers used:
 15529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15530 ;; Tracked objects:
 15531 ;;		On entry : 0/0
 15532 ;;		On exit  : 0/0
 15533 ;;		Unchanged: 0/0
 15534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15535 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15539 ;;Total ram usage:        6 bytes
 15540 ;; Hardware stack levels used: 1
 15541 ;; Hardware stack levels required when called: 5
 15542 ;; This function calls:
 15543 ;;		_sm_get_current_state
 15544 ;; This function is called by:
 15545 ;;		_OpenFullOrder
 15546 ;;		_WaitPreFlash
 15547 ;;		_CloseOrder
 15548 ;;		_OpenWalkOrder
 15549 ;;		_StopOrder
 15550 ;;		_sm_execute_ControlGate
 15551 ;;		_actionZone_Closed
 15552 ;;		_actionZone_Opening
 15553 ;;		_actionZone_Closing
 15554 ;;		_sm_execute_ControlLearning
 15555 ;;		_sm_execute_main
 15556 ;;		_sm_execute_menuConfiguration
 15557 ;;		_setValueToEdit
 15558 ;;		_controlSelectRemote
 15559 ;;		_controlSaveRemote
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           	psect	text44
 15564  008E9E                     __ptext44:
 15565                           	callstack 0
 15566  008E9E                     _sm_send_event:
 15567                           	callstack 24
 15568                           
 15569                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15570                           
 15571                           ;incstack = 0
 15572  008E9E  EE20 F007          	lfsr	2,7
 15573  008EA2  5012               	movf	sm_send_event@psm^0,w,c
 15574  008EA4  26D9               	addwf	fsr2l,f,c
 15575  008EA6  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15576  008EA8  22DA               	addwfc	fsr2h,f,c
 15577  008EAA  50DE               	movf	postinc2,w,c
 15578  008EAC  10DE               	iorwf	postinc2,w,c
 15579  008EAE  B4D8               	btfsc	status,2,c
 15580  008EB0  D019               	goto	u23700
 15581  008EB2  EE20 F007          	lfsr	2,7
 15582  008EB6  5012               	movf	sm_send_event@psm^0,w,c
 15583  008EB8  26D9               	addwf	fsr2l,f,c
 15584  008EBA  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15585  008EBC  22DA               	addwfc	fsr2h,f,c
 15586  008EBE  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15587  008EC2  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15588  008EC6  ECFC  F04E         	call	_sm_get_current_state	;wreg free
 15589  008ECA  EE20 F009          	lfsr	2,9
 15590  008ECE  5012               	movf	sm_send_event@psm^0,w,c
 15591  008ED0  26D9               	addwf	fsr2l,f,c
 15592  008ED2  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15593  008ED4  22DA               	addwfc	fsr2h,f,c
 15594  008ED6  50DE               	movf	postinc2,w,c
 15595  008ED8  1810               	xorwf	?_sm_get_current_state^0,w,c
 15596  008EDA  E10E               	bnz	l3517
 15597  008EDC  50DE               	movf	postinc2,w,c
 15598  008EDE  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15599  008EE0  A4D8               	btfss	status,2,c
 15600  008EE2  0012               	return	
 15601  008EE4                     u23700:
 15602                           
 15603                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15604  008EE4  EE20 F004          	lfsr	2,4
 15605  008EE8  5012               	movf	sm_send_event@psm^0,w,c
 15606  008EEA  26D9               	addwf	fsr2l,f,c
 15607  008EEC  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15608  008EEE  22DA               	addwfc	fsr2h,f,c
 15609  008EF0  C014  FFDE         	movff	sm_send_event@event,postinc2
 15610  008EF4  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15611  008EF8                     l3517:
 15612  008EF8  0012               	return		;funcret
 15613  008EFA                     __end_of_sm_send_event:
 15614                           	callstack 0
 15615                           
 15616 ;; *************** function _sm_get_current_state *****************
 15617 ;; Defined at:
 15618 ;;		line 30 in file "sm_common_MC50.c"
 15619 ;; Parameters:    Size  Location     Type
 15620 ;;  psm             2   15[COMRAM] PTR struct .
 15621 ;;		 -> NULL(0), 
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;		None
 15624 ;; Return value:  Size  Location     Type
 15625 ;;                  2   15[COMRAM] int 
 15626 ;; Registers used:
 15627 ;;		fsr2l, fsr2h
 15628 ;; Tracked objects:
 15629 ;;		On entry : 0/0
 15630 ;;		On exit  : 0/0
 15631 ;;		Unchanged: 0/0
 15632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15637 ;;Total ram usage:        2 bytes
 15638 ;; Hardware stack levels used: 1
 15639 ;; Hardware stack levels required when called: 4
 15640 ;; This function calls:
 15641 ;;		Nothing
 15642 ;; This function is called by:
 15643 ;;		_sm_send_event
 15644 ;; This function uses a non-reentrant model
 15645 ;;
 15646                           
 15647                           	psect	text45
 15648  009DF8                     __ptext45:
 15649                           	callstack 0
 15650  009DF8                     _sm_get_current_state:
 15651                           	callstack 24
 15652                           
 15653                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15654                           
 15655                           ;incstack = 0
 15656  009DF8  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15657  009DFC  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15658  009E00  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15659  009E04  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15660  009E08  0012               	return		;funcret
 15661  009E0A                     __end_of_sm_get_current_state:
 15662                           	callstack 0
 15663                           
 15664 ;; *************** function _InitSoftStart *****************
 15665 ;; Defined at:
 15666 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15667 ;; Parameters:    Size  Location     Type
 15668 ;;		None
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;		None
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  1    wreg      void 
 15673 ;; Registers used:
 15674 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15675 ;; Tracked objects:
 15676 ;;		On entry : 3F/1
 15677 ;;		On exit  : 3E/0
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15684 ;;Total ram usage:        1 bytes
 15685 ;; Hardware stack levels used: 1
 15686 ;; Hardware stack levels required when called: 5
 15687 ;; This function calls:
 15688 ;;		_GetMotorPower
 15689 ;; This function is called by:
 15690 ;;		_OpenFullOrder
 15691 ;;		_CloseOrder
 15692 ;;		_OpenWalkOrder
 15693 ;; This function uses a non-reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text46
 15697  008EFA                     __ptext46:
 15698                           	callstack 0
 15699  008EFA                     _InitSoftStart:
 15700                           	callstack 22
 15701                           
 15702                           ; BSR set to: 1
 15703                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15704                           
 15705                           ;incstack = 0
 15706  008EFA  0100               	movlb	0	; () banked
 15707  008EFC  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15708  008EFE  B4D8               	btfsc	status,2,c
 15709  008F00  0012               	return	
 15710                           
 15711                           ; BSR set to: 0
 15712  008F02  0101               	movlb	1	; () banked
 15713  008F04  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15714  008F06  A4D8               	btfss	status,2,c
 15715  008F08  0012               	return	
 15716                           
 15717                           ; BSR set to: 1
 15718                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15719  008F0A  0E00               	movlw	0
 15720  008F0C  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15721  008F0E  0E00               	movlw	0
 15722  008F10  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15723                           
 15724                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15725  008F12  0E00               	movlw	0
 15726  008F14  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15727  008F16  0E00               	movlw	0
 15728  008F18  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15729                           
 15730                           ; BSR set to: 1
 15731                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15732  008F1A  EC9A  F03D         	call	_GetMotorPower	;wreg free
 15733  008F1E  6E14               	movwf	??_InitSoftStart^0,c
 15734  008F20  5014               	movf	??_InitSoftStart^0,w,c
 15735  008F22  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15736  008F24  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15737                           
 15738                           ; BSR set to: 1
 15739                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15740  008F26  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15741  008F28  D00A               	goto	l20678
 15742  008F2A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15743  008F2C  E104               	bnz	u23730
 15744  008F2E  0E52               	movlw	82
 15745  008F30  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15746  008F32  A0D8               	btfss	status,0,c
 15747  008F34  D004               	goto	l20678
 15748  008F36                     u23730:
 15749                           
 15750                           ; BSR set to: 1
 15751                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15752  008F36  0E00               	movlw	0
 15753  008F38  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15754  008F3A  0E51               	movlw	81
 15755  008F3C  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15756  008F3E                     l20678:
 15757                           
 15758                           ; BSR set to: 1
 15759                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15760  008F3E  0E01               	movlw	1
 15761  008F40  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15762  008F42  6FB5               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15763  008F44  0E00               	movlw	0
 15764  008F46  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15765  008F48  6FB6               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15766                           
 15767                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15768  008F4A  0100               	movlb	0	; () banked
 15769  008F4C  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15770  008F4E  080A               	sublw	10
 15771  008F50  0101               	movlb	1	; () banked
 15772  008F52  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15773  008F54  0012               	return		;funcret
 15774  008F56                     __end_of_InitSoftStart:
 15775                           	callstack 0
 15776                           
 15777 ;; *************** function _InitWalkAutoTime *****************
 15778 ;; Defined at:
 15779 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15780 ;; Parameters:    Size  Location     Type
 15781 ;;		None
 15782 ;; Auto vars:     Size  Location     Type
 15783 ;;		None
 15784 ;; Return value:  Size  Location     Type
 15785 ;;                  1    wreg      void 
 15786 ;; Registers used:
 15787 ;;		wreg, status,2, status,0, prodl, prodh
 15788 ;; Tracked objects:
 15789 ;;		On entry : 0/1
 15790 ;;		On exit  : 3F/0
 15791 ;;		Unchanged: 0/0
 15792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15797 ;;Total ram usage:        0 bytes
 15798 ;; Hardware stack levels used: 1
 15799 ;; Hardware stack levels required when called: 4
 15800 ;; This function calls:
 15801 ;;		Nothing
 15802 ;; This function is called by:
 15803 ;;		_actionZone_Closed
 15804 ;;		_actionZone_Opening
 15805 ;;		_actionZone_Opened
 15806 ;;		_actionZone_Closing
 15807 ;; This function uses a non-reentrant model
 15808 ;;
 15809                           
 15810                           	psect	text47
 15811  009DBC                     __ptext47:
 15812                           	callstack 0
 15813  009DBC                     _InitWalkAutoTime:
 15814                           	callstack 24
 15815                           
 15816                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15817                           
 15818                           ;incstack = 0
 15819  009DBC  0100               	movlb	0	; () banked
 15820  009DBE  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15821  009DC0  0D14               	mullw	20
 15822  009DC2  CFF3 F1B1          	movff	prodl,_ts_system+18	;volatile
 15823  009DC6  CFF4 F1B2          	movff	prodh,_ts_system+19	;volatile
 15824                           
 15825                           ; BSR set to: 0
 15826                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15827  009DCA  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15828                           
 15829                           ; BSR set to: 0
 15830  009DCE  0012               	return		;funcret
 15831  009DD0                     __end_of_InitWalkAutoTime:
 15832                           	callstack 0
 15833                           
 15834 ;; *************** function _GetSecurityStateInOpening *****************
 15835 ;; Defined at:
 15836 ;;		line 738 in file "inputs_MC50.c"
 15837 ;; Parameters:    Size  Location     Type
 15838 ;;		None
 15839 ;; Auto vars:     Size  Location     Type
 15840 ;;		None
 15841 ;; Return value:  Size  Location     Type
 15842 ;;                  1    wreg      enum E10564
 15843 ;; Registers used:
 15844 ;;		wreg, status,2, status,0, cstack
 15845 ;; Tracked objects:
 15846 ;;		On entry : 0/0
 15847 ;;		On exit  : 3E/0
 15848 ;;		Unchanged: 0/0
 15849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15854 ;;Total ram usage:        0 bytes
 15855 ;; Hardware stack levels used: 1
 15856 ;; Hardware stack levels required when called: 5
 15857 ;; This function calls:
 15858 ;;		_SetSegmentValueIntermitent
 15859 ;; This function is called by:
 15860 ;;		_actionZone_Closed
 15861 ;;		_actionZone_Opening
 15862 ;; This function uses a non-reentrant model
 15863 ;;
 15864                           
 15865                           	psect	text48
 15866  007F74                     __ptext48:
 15867                           	callstack 0
 15868  007F74                     _GetSecurityStateInOpening:
 15869                           	callstack 23
 15870                           
 15871                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15872                           
 15873                           ; BSR set to: 0
 15874                           ;incstack = 0
 15875  007F74  0100               	movlb	0	; () banked
 15876  007F76  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15877  007F78  A4D8               	btfss	status,2,c
 15878  007F7A  D01B               	goto	l21470
 15879                           
 15880                           ; BSR set to: 0
 15881  007F7C  0101               	movlb	1	; () banked
 15882  007F7E  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15883  007F80  A4D8               	btfss	status,2,c
 15884  007F82  D017               	goto	l21470
 15885                           
 15886                           ; BSR set to: 1
 15887  007F84  0100               	movlb	0	; () banked
 15888  007F86  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15889  007F88  A4D8               	btfss	status,2,c
 15890  007F8A  D013               	goto	l21470
 15891                           
 15892                           ; BSR set to: 0
 15893  007F8C  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15894  007F8E  A4D8               	btfss	status,2,c
 15895  007F90  D010               	goto	l21470
 15896                           
 15897                           ; BSR set to: 0
 15898                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15899  007F92  0E00               	movlw	0
 15900  007F94  0101               	movlb	1	; () banked
 15901  007F96  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15902  007F98  0E04               	movlw	4
 15903  007F9A  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15904                           
 15905                           ; BSR set to: 1
 15906                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15907  007F9C  0E0A               	movlw	10
 15908  007F9E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15909  007FA0  0E00               	movlw	0
 15910  007FA2  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15911  007FA4  0E14               	movlw	20
 15912  007FA6  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15913  007FA8  0E12               	movlw	18
 15914  007FAA  EC0D  F04C         	call	_SetSegmentValueIntermitent
 15915  007FAE                     l21464:
 15916                           
 15917                           ; BSR set to: 1
 15918                           ;inputs_MC50.c: 752:         return YES;
 15919  007FAE  0E01               	movlw	1
 15920  007FB0  0012               	return	
 15921  007FB2                     l21470:
 15922  007FB2  0100               	movlb	0	; () banked
 15923  007FB4  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15924  007FB6  A4D8               	btfss	status,2,c
 15925  007FB8  D013               	goto	l21484
 15926                           
 15927                           ; BSR set to: 0
 15928  007FBA  0101               	movlb	1	; () banked
 15929  007FBC  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15930  007FBE  A4D8               	btfss	status,2,c
 15931  007FC0  D00F               	goto	l21484
 15932                           
 15933                           ; BSR set to: 1
 15934                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15935  007FC2  0E00               	movlw	0
 15936  007FC4  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15937  007FC6  0E04               	movlw	4
 15938  007FC8  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15939                           
 15940                           ; BSR set to: 1
 15941                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15942  007FCA  0E15               	movlw	21
 15943  007FCC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15944  007FCE  0E00               	movlw	0
 15945  007FD0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15946  007FD2  0E14               	movlw	20
 15947  007FD4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15948  007FD6  0E05               	movlw	5
 15949  007FD8  EC0D  F04C         	call	_SetSegmentValueIntermitent
 15950                           
 15951                           ; BSR set to: 1
 15952                           ;inputs_MC50.c: 760:         return ST;
 15953  007FDC  0E02               	movlw	2
 15954  007FDE  0012               	return	
 15955  007FE0                     l21484:
 15956  007FE0  0100               	movlb	0	; () banked
 15957  007FE2  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15958  007FE4  A4D8               	btfss	status,2,c
 15959  007FE6  D017               	goto	l21500
 15960                           
 15961                           ; BSR set to: 0
 15962  007FE8  0101               	movlb	1	; () banked
 15963  007FEA  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15964  007FEC  A4D8               	btfss	status,2,c
 15965  007FEE  D013               	goto	l21500
 15966                           
 15967                           ; BSR set to: 1
 15968  007FF0  0100               	movlb	0	; () banked
 15969  007FF2  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15970  007FF4  A4D8               	btfss	status,2,c
 15971  007FF6  D00F               	goto	l21500
 15972                           
 15973                           ; BSR set to: 0
 15974                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15975  007FF8  0E00               	movlw	0
 15976  007FFA  0101               	movlb	1	; () banked
 15977  007FFC  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15978  007FFE  0E04               	movlw	4
 15979  008000  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15980                           
 15981                           ; BSR set to: 1
 15982                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15983  008002  0E0E               	movlw	14
 15984  008004  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15985  008006  0E00               	movlw	0
 15986  008008  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15987  00800A  0E14               	movlw	20
 15988  00800C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15989  00800E  0E12               	movlw	18
 15990  008010  EC0D  F04C         	call	_SetSegmentValueIntermitent
 15991  008014  D7CC               	goto	l21464
 15992  008016                     l21500:
 15993                           
 15994                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 15995  008016  0E00               	movlw	0
 15996  008018  0012               	return		;funcret
 15997  00801A                     __end_of_GetSecurityStateInOpening:
 15998                           	callstack 0
 15999                           
 16000 ;; *************** function _SetSegmentValueIntermitent *****************
 16001 ;; Defined at:
 16002 ;;		line 201 in file "outputs_MC50.c"
 16003 ;; Parameters:    Size  Location     Type
 16004 ;;  d1              1    wreg     unsigned char 
 16005 ;;  d2              1   15[COMRAM] unsigned char 
 16006 ;;  time            2   16[COMRAM] int 
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;  d1              1   18[COMRAM] unsigned char 
 16009 ;; Return value:  Size  Location     Type
 16010 ;;                  1    wreg      void 
 16011 ;; Registers used:
 16012 ;;		wreg, status,2, status,0
 16013 ;; Tracked objects:
 16014 ;;		On entry : 3E/0
 16015 ;;		On exit  : 3F/1
 16016 ;;		Unchanged: 0/0
 16017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16018 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16022 ;;Total ram usage:        4 bytes
 16023 ;; Hardware stack levels used: 1
 16024 ;; Hardware stack levels required when called: 4
 16025 ;; This function calls:
 16026 ;;		Nothing
 16027 ;; This function is called by:
 16028 ;;		_GetSecurityStateInOpening
 16029 ;;		_GetSecurityStateInClosing
 16030 ;;		_sm_execute_ControlGate
 16031 ;;		_actionZone_Opening
 16032 ;;		_actionZone_Closing
 16033 ;; This function uses a non-reentrant model
 16034 ;;
 16035                           
 16036                           	psect	text49
 16037  00981A                     __ptext49:
 16038                           	callstack 0
 16039  00981A                     _SetSegmentValueIntermitent:
 16040                           	callstack 24
 16041                           
 16042                           ;incstack = 0
 16043                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16044  00981A  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16045                           
 16046                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16047  00981C  0101               	movlb	1	; () banked
 16048  00981E  05F2               	decf	_main_stateMachine& (0+255),w,b
 16049  009820  11F3               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16050  009822  B4D8               	btfsc	status,2,c
 16051  009824  0012               	return	
 16052                           
 16053                           ; BSR set to: 1
 16054  009826  51AD               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16055  009828  11AE               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16056  00982A  A4D8               	btfss	status,2,c
 16057  00982C  0012               	return	
 16058                           
 16059                           ; BSR set to: 1
 16060  00982E  0E14               	movlw	20
 16061  009830  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16062  009832  0012               	return	
 16063                           
 16064                           ; BSR set to: 1
 16065                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16066  009834  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16067                           
 16068                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16069  009838  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16070                           
 16071                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16072  00983C  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16073  009840  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16074                           
 16075                           ; BSR set to: 1
 16076  009844  0012               	return		;funcret
 16077  009846                     __end_of_SetSegmentValueIntermitent:
 16078                           	callstack 0
 16079                           
 16080 ;; *************** function _GetOpenOrder *****************
 16081 ;; Defined at:
 16082 ;;		line 330 in file "inputs_MC50.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;		None
 16085 ;; Auto vars:     Size  Location     Type
 16086 ;;		None
 16087 ;; Return value:  Size  Location     Type
 16088 ;;                  1    wreg      enum E10539
 16089 ;; Registers used:
 16090 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16091 ;; Tracked objects:
 16092 ;;		On entry : 3E/1
 16093 ;;		On exit  : 0/0
 16094 ;;		Unchanged: 0/0
 16095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16100 ;;Total ram usage:        0 bytes
 16101 ;; Hardware stack levels used: 1
 16102 ;; Hardware stack levels required when called: 5
 16103 ;; This function calls:
 16104 ;;		_SetSegmentValueIntermitentMain
 16105 ;;		___lbdiv
 16106 ;; This function is called by:
 16107 ;;		_sm_execute_ControlGate
 16108 ;;		_actionZone_Closed
 16109 ;;		_actionZone_Opening
 16110 ;;		_actionZone_Opened
 16111 ;;		_actionZone_Closing
 16112 ;;		_sm_execute_ControlLearning
 16113 ;; This function uses a non-reentrant model
 16114 ;;
 16115                           
 16116                           	psect	text50
 16117  005E40                     __ptext50:
 16118                           	callstack 0
 16119  005E40                     _GetOpenOrder:
 16120                           	callstack 23
 16121                           
 16122                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16123                           
 16124                           ; BSR set to: 1
 16125                           ;incstack = 0
 16126  005E40  0101               	movlb	1	; () banked
 16127  005E42  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16128  005E44  A4D8               	btfss	status,2,c
 16129  005E46  D0C0               	goto	l21440
 16130                           
 16131                           ; BSR set to: 1
 16132                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16133  005E48  BFCA               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16134  005E4A  D019               	goto	l21332
 16135  005E4C  51CA               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16136  005E4E  E103               	bnz	u24560
 16137  005E50  05C9               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16138  005E52  A0D8               	btfss	status,0,c
 16139  005E54  D014               	goto	l21332
 16140  005E56                     u24560:
 16141                           
 16142                           ; BSR set to: 1
 16143                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16144  005E56  0E01               	movlw	1
 16145  005E58  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16146  005E5A  0E00               	movlw	0
 16147  005E5C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16148  005E5E  0E14               	movlw	20
 16149  005E60  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16150  005E62  0E12               	movlw	18
 16151  005E64  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
 16152                           
 16153                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16154  005E68  0E00               	movlw	0
 16155  005E6A  0101               	movlb	1	; () banked
 16156  005E6C  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16157  005E6E  0E0A               	movlw	10
 16158  005E70  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16159                           
 16160                           ; BSR set to: 1
 16161                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16162  005E72  0E01               	movlw	1
 16163  005E74  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16164                           
 16165                           ; BSR set to: 1
 16166                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16167  005E76  0E01               	movlw	1
 16168  005E78  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16169  005E7A                     l21326:
 16170                           
 16171                           ;inputs_MC50.c: 341:             return NoCMD;
 16172  005E7A  0E00               	movlw	0
 16173  005E7C  0012               	return	
 16174  005E7E                     l21332:
 16175                           
 16176                           ; BSR set to: 1
 16177  005E7E  0100               	movlb	0	; () banked
 16178  005E80  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16179  005E82  B4D8               	btfsc	status,2,c
 16180  005E84  D02F               	goto	l21366
 16181                           
 16182                           ; BSR set to: 0
 16183                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16184  005E86  0E35               	movlw	53
 16185  005E88  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16186  005E8A  A4D8               	btfss	status,2,c
 16187  005E8C  D017               	goto	l21350
 16188                           
 16189                           ; BSR set to: 0
 16190                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16191  005E8E  0E00               	movlw	0
 16192  005E90  0101               	movlb	1	; () banked
 16193  005E92  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16194  005E94  0E0A               	movlw	10
 16195  005E96  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16196                           
 16197                           ; BSR set to: 1
 16198                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16199  005E98  0E00               	movlw	0
 16200  005E9A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16201  005E9C  0E00               	movlw	0
 16202  005E9E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16203  005EA0  0E04               	movlw	4
 16204  005EA2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16205  005EA4  0E12               	movlw	18
 16206  005EA6  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
 16207                           
 16208                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16209  005EAA  0E02               	movlw	2
 16210  005EAC  0100               	movlb	0	; () banked
 16211  005EAE  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16212  005EB0  A4D8               	btfss	status,2,c
 16213  005EB2  D002               	goto	l21344
 16214  005EB4                     u24590:
 16215                           
 16216                           ; BSR set to: 0
 16217                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16218  005EB4  0E01               	movlw	1
 16219  005EB6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16220  005EB8                     l21344:
 16221                           
 16222                           ; BSR set to: 0
 16223                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16224  005EB8  0E03               	movlw	3
 16225  005EBA  0012               	return	
 16226  005EBC                     l21350:
 16227                           
 16228                           ; BSR set to: 0
 16229  005EBC  0E33               	movlw	51
 16230  005EBE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16231  005EC0  A4D8               	btfss	status,2,c
 16232  005EC2  D7DB               	goto	l21326
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16236  005EC4  0E00               	movlw	0
 16237  005EC6  0101               	movlb	1	; () banked
 16238  005EC8  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16239  005ECA  0E0A               	movlw	10
 16240  005ECC  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16241                           
 16242                           ; BSR set to: 1
 16243                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16244  005ECE  0E05               	movlw	5
 16245  005ED0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16246  005ED2  0E00               	movlw	0
 16247  005ED4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16248  005ED6  0E04               	movlw	4
 16249  005ED8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16250  005EDA  0E12               	movlw	18
 16251  005EDC  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
 16252  005EE0                     l21356:
 16253                           
 16254                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16255  005EE0  0E04               	movlw	4
 16256  005EE2  0012               	return	
 16257  005EE4                     l21366:
 16258                           
 16259                           ; BSR set to: 0
 16260  005EE4  0E35               	movlw	53
 16261  005EE6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16262  005EE8  A4D8               	btfss	status,2,c
 16263  005EEA  D016               	goto	l21388
 16264                           
 16265                           ; BSR set to: 0
 16266                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16267  005EEC  0E00               	movlw	0
 16268  005EEE  0101               	movlb	1	; () banked
 16269  005EF0  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16270  005EF2  0E28               	movlw	40
 16271  005EF4  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16272                           
 16273                           ; BSR set to: 1
 16274                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16275  005EF6  0E00               	movlw	0
 16276  005EF8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16277  005EFA  0E00               	movlw	0
 16278  005EFC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16279  005EFE  0E04               	movlw	4
 16280  005F00  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16281  005F02  0E12               	movlw	18
 16282  005F04  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
 16283                           
 16284                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16285  005F08  0100               	movlb	0	; () banked
 16286  005F0A  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16287  005F0C  B4D8               	btfsc	status,2,c
 16288  005F0E  D7D2               	goto	u24590
 16289  005F10                     l21382:
 16290                           
 16291                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16292  005F10  0E01               	movlw	1
 16293  005F12  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16294                           
 16295                           ;inputs_MC50.c: 382:                 return TypeFull;
 16296  005F14  0E01               	movlw	1
 16297  005F16  0012               	return	
 16298  005F18                     l21388:
 16299                           
 16300                           ; BSR set to: 0
 16301  005F18  0E33               	movlw	51
 16302  005F1A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16303  005F1C  A4D8               	btfss	status,2,c
 16304  005F1E  D019               	goto	l21410
 16305                           
 16306                           ; BSR set to: 0
 16307                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16308  005F20  0E00               	movlw	0
 16309  005F22  0101               	movlb	1	; () banked
 16310  005F24  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16311  005F26  0E28               	movlw	40
 16312  005F28  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16313                           
 16314                           ; BSR set to: 1
 16315                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16316  005F2A  0E05               	movlw	5
 16317  005F2C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16318  005F2E  0E00               	movlw	0
 16319  005F30  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16320  005F32  0E04               	movlw	4
 16321  005F34  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16322  005F36  0E12               	movlw	18
 16323  005F38  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
 16324                           
 16325                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16326  005F3C  0100               	movlb	0	; () banked
 16327  005F3E  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16328  005F40  A4D8               	btfss	status,2,c
 16329  005F42  D003               	goto	l21404
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16333  005F44  0E01               	movlw	1
 16334  005F46  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16335  005F48  D7CB               	goto	l21356
 16336  005F4A                     l21404:
 16337                           
 16338                           ; BSR set to: 0
 16339                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16340  005F4A  0E01               	movlw	1
 16341  005F4C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16345  005F4E  0E02               	movlw	2
 16346  005F50  0012               	return	
 16347  005F52                     l21410:
 16348                           
 16349                           ; BSR set to: 0
 16350  005F52  0E36               	movlw	54
 16351  005F54  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16352  005F56  A4D8               	btfss	status,2,c
 16353  005F58  D00F               	goto	l21424
 16354                           
 16355                           ; BSR set to: 0
 16356                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16357  005F5A  0E00               	movlw	0
 16358  005F5C  0101               	movlb	1	; () banked
 16359  005F5E  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16360  005F60  0E28               	movlw	40
 16361  005F62  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16362                           
 16363                           ; BSR set to: 1
 16364                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16365  005F64  0E13               	movlw	19
 16366  005F66  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16367  005F68  0E00               	movlw	0
 16368  005F6A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16369  005F6C  0E04               	movlw	4
 16370  005F6E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16371  005F70  0E10               	movlw	16
 16372  005F72  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
 16373  005F76  D7CC               	goto	l21382
 16374  005F78                     l21424:
 16375                           
 16376                           ; BSR set to: 0
 16377                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16378  005F78  503B               	movf	_rfCMD^0,w,c	;volatile
 16379  005F7A  B4D8               	btfsc	status,2,c
 16380  005F7C  D023               	goto	l21436
 16381                           
 16382                           ; BSR set to: 0
 16383  005F7E  0E06               	movlw	6
 16384  005F80  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16385  005F82  B4D8               	btfsc	status,2,c
 16386  005F84  D01F               	goto	l21436
 16387                           
 16388                           ; BSR set to: 0
 16389  005F86  0E05               	movlw	5
 16390  005F88  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16391  005F8A  B4D8               	btfsc	status,2,c
 16392  005F8C  D01B               	goto	l21436
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16396  005F8E  0E0A               	movlw	10
 16397  005F90  6E10               	movwf	___lbdiv@divisor^0,c
 16398  005F92  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16399  005F94  EC40  F04B         	call	___lbdiv
 16400  005F98  0DF6               	mullw	246
 16401  005F9A  50F3               	movf	243,w,c
 16402  005F9C  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16403  005F9E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16404  005FA0  0E00               	movlw	0
 16405  005FA2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16406  005FA4  0E04               	movlw	4
 16407  005FA6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16408  005FA8  0E0A               	movlw	10
 16409  005FAA  6E10               	movwf	___lbdiv@divisor^0,c
 16410  005FAC  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16411  005FAE  EC40  F04B         	call	___lbdiv
 16412  005FB2  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
 16413                           
 16414                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16415  005FB6  0E00               	movlw	0
 16416  005FB8  0101               	movlb	1	; () banked
 16417  005FBA  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16418  005FBC  0E28               	movlw	40
 16419  005FBE  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16420                           
 16421                           ; BSR set to: 1
 16422                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16423  005FC0  0E01               	movlw	1
 16424  005FC2  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16425  005FC4                     l21436:
 16426                           
 16427                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16428  005FC4  503B               	movf	_rfCMD^0,w,c	;volatile
 16429  005FC6  0012               	return	
 16430  005FC8                     l21440:
 16431                           
 16432                           ; BSR set to: 1
 16433                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16434  005FC8  503B               	movf	_rfCMD^0,w,c	;volatile
 16435  005FCA  B4D8               	btfsc	status,2,c
 16436  005FCC  D01B               	goto	l21448
 16437                           
 16438                           ; BSR set to: 1
 16439                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16440  005FCE  0E0A               	movlw	10
 16441  005FD0  6E10               	movwf	___lbdiv@divisor^0,c
 16442  005FD2  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16443  005FD4  EC40  F04B         	call	___lbdiv
 16444  005FD8  0DF6               	mullw	246
 16445  005FDA  50F3               	movf	243,w,c
 16446  005FDC  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16447  005FDE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16448  005FE0  0E00               	movlw	0
 16449  005FE2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16450  005FE4  0E04               	movlw	4
 16451  005FE6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16452  005FE8  0E0A               	movlw	10
 16453  005FEA  6E10               	movwf	___lbdiv@divisor^0,c
 16454  005FEC  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16455  005FEE  EC40  F04B         	call	___lbdiv
 16456  005FF2  ECE8  F04E         	call	_SetSegmentValueIntermitentMain
 16457                           
 16458                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16459  005FF6  0E00               	movlw	0
 16460  005FF8  0101               	movlb	1	; () banked
 16461  005FFA  6FAC               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16462  005FFC  0E14               	movlw	20
 16463  005FFE  6FAB               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16464                           
 16465                           ; BSR set to: 1
 16466                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16467  006000  0E01               	movlw	1
 16468  006002  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16469  006004                     l21448:
 16470                           
 16471                           ; BSR set to: 1
 16472                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16473  006004  503B               	movf	_rfCMD^0,w,c	;volatile
 16474  006006  0012               	return		;funcret
 16475  006008                     __end_of_GetOpenOrder:
 16476                           	callstack 0
 16477                           
 16478 ;; *************** function ___lbdiv *****************
 16479 ;; Defined at:
 16480 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;  dividend        1    wreg     unsigned char 
 16483 ;;  divisor         1   15[COMRAM] unsigned char 
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;  dividend        1   16[COMRAM] unsigned char 
 16486 ;;  quotient        1   18[COMRAM] unsigned char 
 16487 ;;  counter         1   17[COMRAM] unsigned char 
 16488 ;; Return value:  Size  Location     Type
 16489 ;;                  1    wreg      unsigned char 
 16490 ;; Registers used:
 16491 ;;		wreg, status,2, status,0
 16492 ;; Tracked objects:
 16493 ;;		On entry : 0/0
 16494 ;;		On exit  : 0/0
 16495 ;;		Unchanged: 0/0
 16496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16497 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16498 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16500 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16501 ;;Total ram usage:        4 bytes
 16502 ;; Hardware stack levels used: 1
 16503 ;; Hardware stack levels required when called: 4
 16504 ;; This function calls:
 16505 ;;		Nothing
 16506 ;; This function is called by:
 16507 ;;		_GetOpenOrder
 16508 ;;		_sm_execute_menuConfiguration
 16509 ;; This function uses a non-reentrant model
 16510 ;;
 16511                           
 16512                           	psect	text51
 16513  009680                     __ptext51:
 16514                           	callstack 0
 16515  009680                     ___lbdiv:
 16516                           	callstack 24
 16517                           
 16518                           ;incstack = 0
 16519                           ;___lbdiv@dividend stored from wreg
 16520  009680  6E11               	movwf	___lbdiv@dividend^0,c
 16521  009682  0E00               	movlw	0
 16522  009684  6E13               	movwf	___lbdiv@quotient^0,c
 16523  009686  5010               	movf	___lbdiv@divisor^0,w,c
 16524  009688  B4D8               	btfsc	status,2,c
 16525  00968A  D015               	goto	l21196
 16526  00968C  0E01               	movlw	1
 16527  00968E  6E12               	movwf	___lbdiv@counter^0,c
 16528  009690  D003               	goto	l21184
 16529  009692                     l21180:
 16530  009692  90D8               	bcf	status,0,c
 16531  009694  3610               	rlcf	___lbdiv@divisor^0,f,c
 16532  009696  2A12               	incf	___lbdiv@counter^0,f,c
 16533  009698                     l21184:
 16534  009698  AE10               	btfss	___lbdiv@divisor^0,7,c
 16535  00969A  D7FB               	goto	l21180
 16536  00969C                     u24390:
 16537  00969C  90D8               	bcf	status,0,c
 16538  00969E  3613               	rlcf	___lbdiv@quotient^0,f,c
 16539  0096A0  5010               	movf	___lbdiv@divisor^0,w,c
 16540  0096A2  5C11               	subwf	___lbdiv@dividend^0,w,c
 16541  0096A4  A0D8               	btfss	status,0,c
 16542  0096A6  D003               	goto	l21192
 16543  0096A8  5010               	movf	___lbdiv@divisor^0,w,c
 16544  0096AA  5E11               	subwf	___lbdiv@dividend^0,f,c
 16545  0096AC  8013               	bsf	___lbdiv@quotient^0,0,c
 16546  0096AE                     l21192:
 16547  0096AE  90D8               	bcf	status,0,c
 16548  0096B0  3210               	rrcf	___lbdiv@divisor^0,f,c
 16549  0096B2  2E12               	decfsz	___lbdiv@counter^0,f,c
 16550  0096B4  D7F3               	goto	u24390
 16551  0096B6                     l21196:
 16552  0096B6  5013               	movf	___lbdiv@quotient^0,w,c
 16553  0096B8  0012               	return		;funcret
 16554  0096BA                     __end_of___lbdiv:
 16555                           	callstack 0
 16556                           
 16557 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16558 ;; Defined at:
 16559 ;;		line 193 in file "outputs_MC50.c"
 16560 ;; Parameters:    Size  Location     Type
 16561 ;;  d1              1    wreg     unsigned char 
 16562 ;;  d2              1   27[COMRAM] unsigned char 
 16563 ;;  time            2   28[COMRAM] int 
 16564 ;; Auto vars:     Size  Location     Type
 16565 ;;  d1              1   30[COMRAM] unsigned char 
 16566 ;; Return value:  Size  Location     Type
 16567 ;;                  1    wreg      void 
 16568 ;; Registers used:
 16569 ;;		wreg
 16570 ;; Tracked objects:
 16571 ;;		On entry : 0/1
 16572 ;;		On exit  : 0/0
 16573 ;;		Unchanged: 0/0
 16574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16575 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16579 ;;Total ram usage:        4 bytes
 16580 ;; Hardware stack levels used: 1
 16581 ;; Hardware stack levels required when called: 4
 16582 ;; This function calls:
 16583 ;;		Nothing
 16584 ;; This function is called by:
 16585 ;;		_GetOpenOrder
 16586 ;;		_sm_execute_main
 16587 ;;		_sm_execute_menuConfiguration
 16588 ;;		_load_New_Menu
 16589 ;;		_controlSelectRemote
 16590 ;;		_controlSaveRemote
 16591 ;; This function uses a non-reentrant model
 16592 ;;
 16593                           
 16594                           	psect	text52
 16595  009DD0                     __ptext52:
 16596                           	callstack 0
 16597  009DD0                     _SetSegmentValueIntermitentMain:
 16598                           	callstack 22
 16599                           
 16600                           ;incstack = 0
 16601                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16602  009DD0  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16603                           
 16604                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16605  009DD2  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16606                           
 16607                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16608  009DD6  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16609                           
 16610                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16611  009DDA  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16612  009DDE  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16613  009DE2  0012               	return		;funcret
 16614  009DE4                     __end_of_SetSegmentValueIntermitentMain:
 16615                           	callstack 0
 16616                           
 16617 ;; *************** function _readbutton *****************
 16618 ;; Defined at:
 16619 ;;		line 471 in file "inputs_MC50.c"
 16620 ;; Parameters:    Size  Location     Type
 16621 ;;		None
 16622 ;; Auto vars:     Size  Location     Type
 16623 ;;		None
 16624 ;; Return value:  Size  Location     Type
 16625 ;;                  1    wreg      void 
 16626 ;; Registers used:
 16627 ;;		wreg, status,2, status,0
 16628 ;; Tracked objects:
 16629 ;;		On entry : 3F/1
 16630 ;;		On exit  : 3F/1
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16637 ;;Total ram usage:        0 bytes
 16638 ;; Hardware stack levels used: 1
 16639 ;; Hardware stack levels required when called: 4
 16640 ;; This function calls:
 16641 ;;		Nothing
 16642 ;; This function is called by:
 16643 ;;		_main
 16644 ;; This function uses a non-reentrant model
 16645 ;;
 16646                           
 16647                           	psect	text53
 16648  008CA4                     __ptext53:
 16649                           	callstack 0
 16650  008CA4                     _readbutton:
 16651                           	callstack 26
 16652                           
 16653                           ; BSR set to: 1
 16654                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16655                           
 16656                           ;incstack = 0
 16657  008CA4  508E               	movf	142,w,c	;volatile
 16658  008CA6  0B37               	andlw	55
 16659  008CA8  6F9B               	movwf	readbutton@key2& (0+255),b
 16660  008CAA  F000               	nop		;# 
 16661  008CAC  F000               	nop		;# 
 16662  008CAE  F000               	nop		;# 
 16663                           
 16664                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16665  008CB0  508E               	movf	142,w,c	;volatile
 16666  008CB2  0B37               	andlw	55
 16667  008CB4  0100               	movlb	0	; () banked
 16668  008CB6  6F86               	movwf	readbutton@key1& (0+255),b
 16669                           
 16670                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16671  008CB8  5186               	movf	readbutton@key1& (0+255),w,b
 16672  008CBA  0101               	movlb	1	; () banked
 16673  008CBC  199B               	xorwf	readbutton@key2& (0+255),w,b
 16674  008CBE  A4D8               	btfss	status,2,c
 16675  008CC0  D003               	goto	l24770
 16676                           
 16677                           ; BSR set to: 1
 16678                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16679  008CC2  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16680                           
 16681                           ;inputs_MC50.c: 488:  }
 16682  008CC6  D002               	goto	l24772
 16683  008CC8                     l24770:
 16684                           
 16685                           ; BSR set to: 1
 16686                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16687  008CC8  0E37               	movlw	55
 16688  008CCA  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16689  008CCC                     l24772:
 16690                           
 16691                           ; BSR set to: 1
 16692                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16693  008CCC  0E37               	movlw	55
 16694  008CCE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16695  008CD0  B4D8               	btfsc	status,2,c
 16696  008CD2  D007               	goto	u30120
 16697                           
 16698                           ; BSR set to: 1
 16699  008CD4  504C               	movf	_button_struct^0,w,c	;volatile
 16700  008CD6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16701  008CD8  B4D8               	btfsc	status,2,c
 16702  008CDA  D007               	goto	l24780
 16703                           
 16704                           ; BSR set to: 1
 16705  008CDC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16706  008CDE  A4D8               	btfss	status,2,c
 16707  008CE0  D004               	goto	l24780
 16708  008CE2                     u30120:
 16709                           
 16710                           ; BSR set to: 1
 16711                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16712  008CE2  0E00               	movlw	0
 16713  008CE4  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16714                           
 16715                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16716  008CE6  0E00               	movlw	0
 16717  008CE8  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16718  008CEA                     l24780:
 16719                           
 16720                           ; BSR set to: 1
 16721                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16722  008CEA  0E37               	movlw	55
 16723  008CEC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16724  008CEE  B4D8               	btfsc	status,2,c
 16725  008CF0  D007               	goto	l24788
 16726                           
 16727                           ; BSR set to: 1
 16728                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16729  008CF2  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16730                           
 16731                           ; BSR set to: 1
 16732                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16733  008CF6  0EFA               	movlw	250
 16734  008CF8  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16735  008CFA  D004               	goto	l24790
 16736                           
 16737                           ; BSR set to: 1
 16738                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16739  008CFC  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16740  008CFE  D002               	goto	l24790
 16741  008D00                     l24788:
 16742                           
 16743                           ; BSR set to: 1
 16744                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16745  008D00  0E00               	movlw	0
 16746  008D02  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16747  008D04                     l24790:
 16748                           
 16749                           ; BSR set to: 1
 16750                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16751  008D04  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16752  008D06  A4D8               	btfss	status,2,c
 16753  008D08  0012               	return	
 16754                           
 16755                           ; BSR set to: 1
 16756                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16757  008D0A  0E37               	movlw	55
 16758  008D0C  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16759                           
 16760                           ; BSR set to: 1
 16761  008D0E  0012               	return		;funcret
 16762  008D10                     __end_of_readbutton:
 16763                           	callstack 0
 16764                           
 16765 ;; *************** function _read_package *****************
 16766 ;; Defined at:
 16767 ;;		line 21 in file "eusartpackage.c"
 16768 ;; Parameters:    Size  Location     Type
 16769 ;;		None
 16770 ;; Auto vars:     Size  Location     Type
 16771 ;;  package         7   23[COMRAM] struct package_t
 16772 ;; Return value:  Size  Location     Type
 16773 ;;                  7   16[COMRAM] struct package_t
 16774 ;; Registers used:
 16775 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16776 ;; Tracked objects:
 16777 ;;		On entry : 3F/0
 16778 ;;		On exit  : 3F/E
 16779 ;;		Unchanged: 0/0
 16780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16781 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16782 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16784 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16785 ;;Total ram usage:       14 bytes
 16786 ;; Hardware stack levels used: 1
 16787 ;; Hardware stack levels required when called: 5
 16788 ;; This function calls:
 16789 ;;		_EUSART1_Read
 16790 ;; This function is called by:
 16791 ;;		_main
 16792 ;; This function uses a non-reentrant model
 16793 ;;
 16794                           
 16795                           	psect	text54
 16796  009266                     __ptext54:
 16797                           	callstack 0
 16798  009266                     _read_package:
 16799                           	callstack 25
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16803                           
 16804                           ; BSR set to: 1
 16805                           ;incstack = 0
 16806  009266  ECF6  F049         	call	_EUSART1_Read	;wreg free
 16807  00926A  0A0A               	xorlw	10
 16808  00926C  B4D8               	btfsc	status,2,c
 16809  00926E  D00C               	goto	l24948
 16810  009270                     u30650:
 16811                           
 16812                           ; BSR set to: 14
 16813                           ;eusartpackage.c: 25:             package.valid=0;
 16814  009270  0E00               	movlw	0
 16815  009272  6E1E               	movwf	(read_package@package+6)^0,c
 16816                           
 16817                           ; BSR set to: 14
 16818                           ;eusartpackage.c: 26:             return package;
 16819  009274  EE20  F018         	lfsr	2,read_package@package
 16820  009278  EE00  F011         	lfsr	0,?_read_package
 16821  00927C  0E06               	movlw	6
 16822  00927E                     u30661:
 16823  00927E  CFDB FFEB          	movff	plusw2,plusw0
 16824  009282  06E8               	decf	wreg,f,c
 16825  009284  E2FC               	bc	u30661
 16826  009286  0012               	return	
 16827  009288                     l24948:
 16828                           
 16829                           ; BSR set to: 14
 16830                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16831  009288  0E0A               	movlw	10
 16832  00928A  6E1C               	movwf	(read_package@package+4)^0,c
 16833                           
 16834                           ; BSR set to: 14
 16835                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16836  00928C  ECF6  F049         	call	_EUSART1_Read	;wreg free
 16837  009290  6E18               	movwf	read_package@package^0,c
 16838                           
 16839                           ; BSR set to: 14
 16840                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16841  009292  ECF6  F049         	call	_EUSART1_Read	;wreg free
 16842  009296  6E19               	movwf	(read_package@package+1)^0,c
 16843                           
 16844                           ; BSR set to: 14
 16845                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16846  009298  ECF6  F049         	call	_EUSART1_Read	;wreg free
 16847  00929C  6E1A               	movwf	(read_package@package+2)^0,c
 16848                           
 16849                           ; BSR set to: 14
 16850                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16851  00929E  ECF6  F049         	call	_EUSART1_Read	;wreg free
 16852  0092A2  6E1B               	movwf	(read_package@package+3)^0,c
 16853                           
 16854                           ; BSR set to: 14
 16855                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16856  0092A4  ECF6  F049         	call	_EUSART1_Read	;wreg free
 16857  0092A8  0A0D               	xorlw	13
 16858  0092AA  A4D8               	btfss	status,2,c
 16859  0092AC  D7E1               	goto	u30650
 16860                           
 16861                           ; BSR set to: 14
 16862                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16863  0092AE  0E0D               	movlw	13
 16864  0092B0  6E1D               	movwf	(read_package@package+5)^0,c
 16865                           
 16866                           ; BSR set to: 14
 16867                           ;eusartpackage.c: 46:         package.valid=1;
 16868  0092B2  0E01               	movlw	1
 16869  0092B4  D7DE               	goto	L76
 16870  0092B6                     __end_of_read_package:
 16871                           	callstack 0
 16872                           
 16873 ;; *************** function _EUSART1_Read *****************
 16874 ;; Defined at:
 16875 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16876 ;; Parameters:    Size  Location     Type
 16877 ;;		None
 16878 ;; Auto vars:     Size  Location     Type
 16879 ;;  readValue       1   15[COMRAM] unsigned char 
 16880 ;; Return value:  Size  Location     Type
 16881 ;;                  1    wreg      unsigned char 
 16882 ;; Registers used:
 16883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16884 ;; Tracked objects:
 16885 ;;		On entry : 31/0
 16886 ;;		On exit  : 3F/E
 16887 ;;		Unchanged: 0/0
 16888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16892 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16893 ;;Total ram usage:        1 bytes
 16894 ;; Hardware stack levels used: 1
 16895 ;; Hardware stack levels required when called: 4
 16896 ;; This function calls:
 16897 ;;		Nothing
 16898 ;; This function is called by:
 16899 ;;		_read_package
 16900 ;; This function uses a non-reentrant model
 16901 ;;
 16902                           
 16903                           	psect	text55
 16904  0093EC                     __ptext55:
 16905                           	callstack 0
 16906  0093EC                     _EUSART1_Read:
 16907                           	callstack 25
 16908                           
 16909                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16910                           
 16911                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16912                           
 16913                           ; BSR set to: 14
 16914                           ;incstack = 0
 16915  0093EC  0100               	movlb	0	; () banked
 16916  0093EE  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16917  0093F0  B4D8               	btfsc	status,2,c
 16918  0093F2  D7FC               	goto	__ptext55
 16919                           
 16920                           ; BSR set to: 0
 16921                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16922  0093F4  0E74               	movlw	low _eusart1RxStatusBuffer
 16923  0093F6  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16924  0093F8  6ED9               	movwf	fsr2l,c
 16925  0093FA  6ADA               	clrf	fsr2h,c
 16926  0093FC  0E02               	movlw	high _eusart1RxStatusBuffer
 16927  0093FE  22DA               	addwfc	fsr2h,f,c
 16928  009400  50DF               	movf	indf2,w,c
 16929  009402  0101               	movlb	1	; () banked
 16930  009404  6F9E               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16931                           
 16932                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16933  009406  0E7C               	movlw	low _eusart1RxBuffer
 16934  009408  0100               	movlb	0	; () banked
 16935  00940A  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16936  00940C  6ED9               	movwf	fsr2l,c
 16937  00940E  6ADA               	clrf	fsr2h,c
 16938  009410  0E02               	movlw	high _eusart1RxBuffer
 16939  009412  22DA               	addwfc	fsr2h,f,c
 16940  009414  50DF               	movf	indf2,w,c
 16941  009416  6E10               	movwf	EUSART1_Read@readValue^0,c
 16942                           
 16943                           ; BSR set to: 0
 16944  009418  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16945                           
 16946                           ; BSR set to: 0
 16947                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16948  00941A  0E07               	movlw	7
 16949  00941C  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16950  00941E  D002               	goto	l22584
 16951                           
 16952                           ; BSR set to: 0
 16953                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16954  009420  0E00               	movlw	0
 16955  009422  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16956  009424                     l22584:
 16957                           
 16958                           ; BSR set to: 0
 16959                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16960  009424  010E               	movlb	14	; () banked
 16961  009426  9BC5               	bcf	197,5,b	;volatile
 16962                           
 16963                           ; BSR set to: 14
 16964                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16965  009428  0100               	movlb	0	; () banked
 16966  00942A  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16967                           
 16968                           ; BSR set to: 0
 16969                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16970  00942C  010E               	movlb	14	; () banked
 16971  00942E  8BC5               	bsf	197,5,b	;volatile
 16972                           
 16973                           ; BSR set to: 14
 16974                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16975  009430  5010               	movf	EUSART1_Read@readValue^0,w,c
 16976                           
 16977                           ; BSR set to: 14
 16978  009432  0012               	return		;funcret
 16979  009434                     __end_of_EUSART1_Read:
 16980                           	callstack 0
 16981                           
 16982 ;; *************** function _readRFButtons *****************
 16983 ;; Defined at:
 16984 ;;		line 231 in file "inputs_MC50.c"
 16985 ;; Parameters:    Size  Location     Type
 16986 ;;		None
 16987 ;; Auto vars:     Size  Location     Type
 16988 ;;		None
 16989 ;; Return value:  Size  Location     Type
 16990 ;;                  1    wreg      void 
 16991 ;; Registers used:
 16992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16993 ;; Tracked objects:
 16994 ;;		On entry : 3F/1
 16995 ;;		On exit  : 3E/0
 16996 ;;		Unchanged: 0/0
 16997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17002 ;;Total ram usage:        0 bytes
 17003 ;; Hardware stack levels used: 1
 17004 ;; Hardware stack levels required when called: 15
 17005 ;; This function calls:
 17006 ;;		_DecryptPacket_12BIT
 17007 ;;		_keeloqDecryptPacket
 17008 ;; This function is called by:
 17009 ;;		_main
 17010 ;; This function uses a non-reentrant model
 17011 ;;
 17012                           
 17013                           	psect	text56
 17014  006678                     __ptext56:
 17015                           	callstack 0
 17016  006678                     _readRFButtons:
 17017                           	callstack 15
 17018                           
 17019                           ; BSR set to: 1
 17020                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17021                           
 17022                           ; BSR set to: 14
 17023                           ;incstack = 0
 17024  006678  0100               	movlb	0	; () banked
 17025  00667A  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17026  00667C  B4D8               	btfsc	status,2,c
 17027  00667E  D0B9               	goto	l24756
 17028                           
 17029                           ; BSR set to: 0
 17030                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17031  006680  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17032  006682  A4D8               	btfss	status,2,c
 17033  006684  D00B               	goto	l24702
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17037  006686  0EC6               	movlw	low _BufferRF
 17038  006688  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17039  00668A  0E02               	movlw	high _BufferRF
 17040  00668C  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17041  00668E  0E90               	movlw	low _classic_data
 17042  006690  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17043  006692  0E02               	movlw	high _classic_data
 17044  006694  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17045  006696  EC37  F02E         	call	_keeloqDecryptPacket	;wreg free
 17046  00669A  D00A               	goto	L77
 17047  00669C                     l24702:
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17051  00669C  0EC6               	movlw	low _BufferRF
 17052  00669E  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17053  0066A0  0E02               	movlw	high _BufferRF
 17054  0066A2  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17055  0066A4  0E90               	movlw	low _classic_data
 17056  0066A6  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17057  0066A8  0E02               	movlw	high _classic_data
 17058  0066AA  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17059  0066AC  EC37  F041         	call	_DecryptPacket_12BIT	;wreg free
 17060  0066B0                     L77:
 17061  0066B0  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17062                           
 17063                           ; BSR set to: 0
 17064                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17065  0066B2  C29C  F088         	movff	_classic_data+12,readRFButtons@key1
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17069  0066B6  C294  F181         	movff	_classic_data+4,readRFButtons@serial
 17070  0066BA  C295  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17071  0066BE  C296  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17072  0066C2  C297  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17073                           
 17074                           ; BSR set to: 0
 17075                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17076  0066C6  C298  F189         	movff	_classic_data+8,readRFButtons@rollingCode
 17077  0066CA  C299  F18A         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17078                           
 17079                           ; BSR set to: 0
 17080                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17081  0066CE  C29E  F19C         	movff	_classic_data+14,readRFButtons@typeRemote
 17082                           
 17083                           ; BSR set to: 0
 17084                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17085  0066D2  0101               	movlb	1	; () banked
 17086  0066D4  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17087  0066D6  A4D8               	btfss	status,2,c
 17088  0066D8  D01E               	goto	l24724
 17089                           
 17090                           ; BSR set to: 1
 17091                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17092  0066DA  0100               	movlb	0	; () banked
 17093  0066DC  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17094  0066DE  B4D8               	btfsc	status,2,c
 17095  0066E0  D044               	goto	u29990
 17096                           
 17097                           ; BSR set to: 0
 17098  0066E2  5188               	movf	readRFButtons@key1& (0+255),w,b
 17099  0066E4  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17100  0066E6  A4D8               	btfss	status,2,c
 17101  0066E8  D040               	goto	u29990
 17102                           
 17103                           ; BSR set to: 0
 17104  0066EA  0101               	movlb	1	; () banked
 17105  0066EC  5181               	movf	readRFButtons@serial& (0+255),w,b
 17106  0066EE  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17107  0066F0  E13C               	bnz	l24736
 17108  0066F2  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17109  0066F4  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17110  0066F6  E139               	bnz	l24736
 17111  0066F8  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17112  0066FA  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17113  0066FC  E136               	bnz	l24736
 17114  0066FE  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17115  006700  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17116  006702  A4D8               	btfss	status,2,c
 17117  006704  D032               	goto	u29990
 17118                           
 17119                           ; BSR set to: 1
 17120  006706  0100               	movlb	0	; () banked
 17121  006708  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17122  00670A  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17123  00670C  A4D8               	btfss	status,2,c
 17124  00670E  D02D               	goto	u29990
 17125  006710                     l1654:
 17126                           
 17127                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17128  006710  0E00               	movlw	0
 17129  006712  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17130                           
 17131                           ;inputs_MC50.c: 275:         }
 17132  006714  D038               	goto	l1657
 17133  006716                     l24724:
 17134                           
 17135                           ; BSR set to: 1
 17136  006716  0100               	movlb	0	; () banked
 17137  006718  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17138  00671A  B4D8               	btfsc	status,2,c
 17139  00671C  D026               	goto	u29990
 17140                           
 17141                           ; BSR set to: 0
 17142  00671E  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17143  006720  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17144  006722  B4D8               	btfsc	status,2,c
 17145  006724  D00F               	goto	u29970
 17146                           
 17147                           ; BSR set to: 0
 17148  006726  0101               	movlb	1	; () banked
 17149  006728  BFB4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17150  00672A  D005               	goto	u29960
 17151  00672C  51B4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17152  00672E  E10A               	bnz	l24732
 17153  006730  05B3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17154  006732  B0D8               	btfsc	status,0,c
 17155  006734  D007               	goto	u29970
 17156  006736                     u29960:
 17157                           
 17158                           ; BSR set to: 1
 17159  006736  5189               	movf	readRFButtons@rollingCode& (0+255),w,b
 17160  006738  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17161  00673A  E117               	bnz	l24736
 17162  00673C  518A               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17163  00673E  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17164  006740  A4D8               	btfss	status,2,c
 17165  006742  D013               	goto	u29990
 17166  006744                     u29970:
 17167  006744                     l24732:
 17168  006744  0100               	movlb	0	; () banked
 17169  006746  5188               	movf	readRFButtons@key1& (0+255),w,b
 17170  006748  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17171  00674A  A4D8               	btfss	status,2,c
 17172  00674C  D00E               	goto	u29990
 17173                           
 17174                           ; BSR set to: 0
 17175  00674E  0101               	movlb	1	; () banked
 17176  006750  5181               	movf	readRFButtons@serial& (0+255),w,b
 17177  006752  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17178  006754  E10A               	bnz	u29990
 17179  006756  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17180  006758  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17181  00675A  E107               	bnz	u29990
 17182  00675C  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17183  00675E  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17184  006760  E104               	bnz	u29990
 17185  006762  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17186  006764  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17187  006766  B4D8               	btfsc	status,2,c
 17188  006768  D003               	goto	l24738
 17189  00676A                     u29990:
 17190  00676A                     l24736:
 17191                           
 17192                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17193  00676A  0E00               	movlw	0
 17194  00676C  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17195  00676E  D7D0               	goto	l1654
 17196  006770                     l24738:
 17197                           
 17198                           ; BSR set to: 1
 17199  006770  BFB4               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17200  006772  D005               	goto	u30000
 17201  006774  51B4               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17202  006776  E107               	bnz	l1657
 17203  006778  05B3               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17204  00677A  B0D8               	btfsc	status,0,c
 17205  00677C  D004               	goto	l1657
 17206  00677E                     u30000:
 17207                           
 17208                           ; BSR set to: 1
 17209  00677E  0E02               	movlw	2
 17210  006780  199C               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17211  006782  B4D8               	btfsc	status,2,c
 17212  006784  D7F2               	goto	u29990
 17213  006786                     l1657:
 17214                           
 17215                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17216  006786  0E00               	movlw	0
 17217  006788  0101               	movlb	1	; () banked
 17218  00678A  6FB4               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17219  00678C  0E0A               	movlw	10
 17220  00678E  6FB3               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17221                           
 17222                           ; BSR set to: 1
 17223                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17224  006790  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17225                           
 17226                           ;inputs_MC50.c: 292:         if
 17227  006794  503B               	movf	_rfCMD^0,w,c	;volatile
 17228  006796  B4D8               	btfsc	status,2,c
 17229  006798  D01A               	goto	u30050
 17230                           
 17231                           ; BSR set to: 1
 17232  00679A  0100               	movlb	0	; () banked
 17233  00679C  5188               	movf	readRFButtons@key1& (0+255),w,b
 17234  00679E  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17235  0067A0  A4D8               	btfss	status,2,c
 17236  0067A2  D015               	goto	u30050
 17237                           
 17238                           ; BSR set to: 0
 17239  0067A4  0101               	movlb	1	; () banked
 17240  0067A6  5181               	movf	readRFButtons@serial& (0+255),w,b
 17241  0067A8  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17242  0067AA  E111               	bnz	l1667
 17243  0067AC  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17244  0067AE  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17245  0067B0  E10E               	bnz	l1667
 17246  0067B2  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17247  0067B4  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17248  0067B6  E10B               	bnz	l1667
 17249  0067B8  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17250  0067BA  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17251  0067BC  A4D8               	btfss	status,2,c
 17252  0067BE  D007               	goto	u30050
 17253                           
 17254                           ; BSR set to: 1
 17255  0067C0  5189               	movf	readRFButtons@rollingCode& (0+255),w,b
 17256  0067C2  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17257  0067C4  E104               	bnz	u30050
 17258  0067C6  518A               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17259  0067C8  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17260  0067CA  B4D8               	btfsc	status,2,c
 17261  0067CC  D00E               	goto	l24754
 17262  0067CE                     u30050:
 17263  0067CE                     l1667:
 17264                           
 17265                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17266  0067CE  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17267                           
 17268                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17269  0067D2  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17270  0067D6  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17271  0067DA  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17272  0067DE  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17273                           
 17274                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17275  0067E2  C29F  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17276                           
 17277                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17278  0067E6  0E00               	movlw	0
 17279  0067E8  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17280  0067EA                     l24754:
 17281                           
 17282                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17283  0067EA  C189  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17284  0067EE  C18A  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17285  0067F2                     l24756:
 17286                           
 17287                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17288  0067F2  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17289  0067F4  A4D8               	btfss	status,2,c
 17290  0067F6  D003               	goto	l24760
 17291                           
 17292                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17293  0067F8  0E00               	movlw	0
 17294  0067FA  6E3B               	movwf	_rfCMD^0,c	;volatile
 17295                           
 17296                           ;inputs_MC50.c: 313:     }
 17297  0067FC  0012               	return	
 17298  0067FE                     l24760:
 17299  0067FE  503B               	movf	_rfCMD^0,w,c	;volatile
 17300  006800  B4D8               	btfsc	status,2,c
 17301  006802  0012               	return	
 17302                           
 17303                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17304  006804  0EFA               	movlw	250
 17305  006806  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17306  006808  0012               	return	
 17307                           
 17308                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17309  00680A  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17310  00680C  0012               	return		;funcret
 17311  00680E                     __end_of_readRFButtons:
 17312                           	callstack 0
 17313                           
 17314 ;; *************** function _keeloqDecryptPacket *****************
 17315 ;; Defined at:
 17316 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17317 ;; Parameters:    Size  Location     Type
 17318 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17319 ;;		 -> BufferRF(9), 
 17320 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17321 ;;		 -> classic_data(16), 
 17322 ;; Auto vars:     Size  Location     Type
 17323 ;;  commandType     1   17[BANK0 ] enum E10539
 17324 ;;  hop_error       1   16[BANK0 ] enum E10730
 17325 ;; Return value:  Size  Location     Type
 17326 ;;                  1    wreg      enum E10539
 17327 ;; Registers used:
 17328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17329 ;; Tracked objects:
 17330 ;;		On entry : 3F/0
 17331 ;;		On exit  : 3F/0
 17332 ;;		Unchanged: 0/0
 17333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17334 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17335 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17336 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17337 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17338 ;;Total ram usage:       10 bytes
 17339 ;; Hardware stack levels used: 1
 17340 ;; Hardware stack levels required when called: 14
 17341 ;; This function calls:
 17342 ;;		_DecCHK
 17343 ;;		_HopCHK
 17344 ;;		_keeloq_classic_decrypt_packet
 17345 ;;		_memcpy
 17346 ;;		_validateRemoteSerialNumber
 17347 ;;		_verifyProgramingMode
 17348 ;; This function is called by:
 17349 ;;		_readRFButtons
 17350 ;; This function uses a non-reentrant model
 17351 ;;
 17352                           
 17353                           	psect	text57
 17354  005C6E                     __ptext57:
 17355                           	callstack 0
 17356  005C6E                     _keeloqDecryptPacket:
 17357                           	callstack 15
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17361                           
 17362                           ;incstack = 0
 17363  005C6E  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17364  005C72  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17365  005C76  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17366  005C7A  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17367  005C7E  0E00               	movlw	0
 17368  005C80  6E15               	movwf	(memcpy@n+1)^0,c
 17369  005C82  0E08               	movlw	8
 17370  005C84  6E14               	movwf	memcpy@n^0,c
 17371  005C86  EC5F  F04A         	call	_memcpy	;wreg free
 17372                           
 17373                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17374  005C8A  0E08               	movlw	8
 17375  005C8C  0100               	movlb	0	; () banked
 17376  005C8E  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17377  005C90  6E10               	movwf	memcpy@d1^0,c
 17378  005C92  0E00               	movlw	0
 17379  005C94  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17380  005C96  6E11               	movwf	(memcpy@d1+1)^0,c
 17381  005C98  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17382  005C9C  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17383  005CA0  0E00               	movlw	0
 17384  005CA2  6E15               	movwf	(memcpy@n+1)^0,c
 17385  005CA4  0E04               	movlw	4
 17386  005CA6  6E14               	movwf	memcpy@n^0,c
 17387  005CA8  EC5F  F04A         	call	_memcpy	;wreg free
 17388                           
 17389                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17390  005CAC  0100               	movlb	0	; () banked
 17391  005CAE  EE20 F00C          	lfsr	2,12
 17392  005CB2  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17393  005CB4  26D9               	addwf	fsr2l,f,c
 17394  005CB6  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17395  005CB8  22DA               	addwfc	fsr2h,f,c
 17396  005CBA  EE10 F007          	lfsr	1,7
 17397  005CBE  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17398  005CC0  26E1               	addwf	fsr1l,f,c
 17399  005CC2  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17400  005CC4  22E2               	addwfc	fsr1h,f,c
 17401  005CC6  50E7               	movf	indf1,w,c
 17402  005CC8  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17403  005CCA  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17404  005CCC  0B0F               	andlw	15
 17405  005CCE  6EDF               	movwf	indf2,c
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17409  005CD0  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17410  005CD4  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17411  005CD8  EC79  F04B         	call	_verifyProgramingMode	;wreg free
 17412  005CDC  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17413                           
 17414                           ; BSR set to: 0
 17415                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17416  005CDE  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17417  005CE0  A4D8               	btfss	status,2,c
 17418  005CE2  D019               	goto	l22908
 17419                           
 17420                           ; BSR set to: 0
 17421                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17422  005CE4  EE20 F004          	lfsr	2,4
 17423  005CE8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17424  005CEA  26D9               	addwf	fsr2l,f,c
 17425  005CEC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17426  005CEE  22DA               	addwfc	fsr2h,f,c
 17427  005CF0  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17428  005CF4  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17429  005CF8  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17430  005CFC  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17431  005D00  0E00               	movlw	0
 17432  005D02  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17433  005D04  0E0F               	movlw	15
 17434  005D06  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17435  005D08  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17436  005D0A  0E00               	movlw	0
 17437  005D0C  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17438  005D0E  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17439  005D10  ECD4  F030         	call	_validateRemoteSerialNumber	;wreg free
 17440  005D14  D004               	goto	L78
 17441  005D16                     l22908:
 17442                           
 17443                           ; BSR set to: 0
 17444  005D16  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17445  005D18  A4D8               	btfss	status,2,c
 17446  005D1A  D002               	goto	l22912
 17447                           
 17448                           ; BSR set to: 0
 17449                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17450  005D1C  0E00               	movlw	0
 17451  005D1E                     L78:
 17452  005D1E  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17453  005D20                     l22912:
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17457  005D20  EE20 F004          	lfsr	2,4
 17458  005D24  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17459  005D26  26D9               	addwf	fsr2l,f,c
 17460  005D28  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17461  005D2A  22DA               	addwfc	fsr2h,f,c
 17462  005D2C  0EFF               	movlw	255
 17463  005D2E  14DE               	andwf	postinc2,w,c
 17464  005D30  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17465  005D32  0EFF               	movlw	255
 17466  005D34  14DE               	andwf	postinc2,w,c
 17467  005D36  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17468  005D38  0EFF               	movlw	255
 17469  005D3A  14DE               	andwf	postinc2,w,c
 17470  005D3C  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17471  005D3E  0E0F               	movlw	15
 17472  005D40  14DE               	andwf	postinc2,w,c
 17473  005D42  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17474  005D44  EE20 F004          	lfsr	2,4
 17475  005D48  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17476  005D4A  26D9               	addwf	fsr2l,f,c
 17477  005D4C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17478  005D4E  22DA               	addwfc	fsr2h,f,c
 17479  005D50  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17480  005D54  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17481  005D58  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17482  005D5C  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17486  005D60  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17487  005D64  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17488  005D68  EC33  F048         	call	_keeloq_classic_decrypt_packet	;wreg free
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17492  005D6C  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17493  005D6E  A4D8               	btfss	status,2,c
 17494  005D70  D01B               	goto	l22930
 17495                           
 17496                           ; BSR set to: 0
 17497                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17498  005D72  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17499  005D76  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17500  005D7A  EC93  F04B         	call	_DecCHK	;wreg free
 17501  005D7E  0900               	iorlw	0
 17502  005D80  A4D8               	btfss	status,2,c
 17503  005D82  D008               	goto	l22922
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17507  005D84  EE20 F00E          	lfsr	2,14
 17508  005D88  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17509  005D8A  26D9               	addwf	fsr2l,f,c
 17510  005D8C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17511  005D8E  22DA               	addwfc	fsr2h,f,c
 17512  005D90  0E01               	movlw	1
 17513  005D92  D007               	goto	L79
 17514  005D94                     l22922:
 17515                           
 17516                           ; BSR set to: 0
 17517                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17518  005D94  EE20 F00E          	lfsr	2,14
 17519  005D98  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17520  005D9A  26D9               	addwf	fsr2l,f,c
 17521  005D9C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17522  005D9E  22DA               	addwfc	fsr2h,f,c
 17523  005DA0  0E00               	movlw	0
 17524  005DA2                     L79:
 17525  005DA2  6EDF               	movwf	indf2,c
 17526  005DA4                     l22924:
 17527                           
 17528                           ; BSR set to: 0
 17529                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17530  005DA4  0E00               	movlw	0
 17531  005DA6  0012               	return	
 17532  005DA8                     l22930:
 17533                           
 17534                           ; BSR set to: 0
 17535  005DA8  0E06               	movlw	6
 17536  005DAA  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17537  005DAC  B4D8               	btfsc	status,2,c
 17538  005DAE  D004               	goto	u26610
 17539                           
 17540                           ; BSR set to: 0
 17541  005DB0  0E05               	movlw	5
 17542  005DB2  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17543  005DB4  A4D8               	btfss	status,2,c
 17544  005DB6  D01B               	goto	l22940
 17545  005DB8                     u26610:
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17549  005DB8  EE20 F004          	lfsr	2,4
 17550  005DBC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17551  005DBE  26D9               	addwf	fsr2l,f,c
 17552  005DC0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17553  005DC2  22DA               	addwfc	fsr2h,f,c
 17554  005DC4  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17555  005DC8  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17556  005DCC  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17557  005DD0  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17558  005DD4  0E01               	movlw	1
 17559  005DD6  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17560  005DD8  0E0F               	movlw	15
 17561  005DDA  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17562  005DDC  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17563  005DDE  0E00               	movlw	0
 17564  005DE0  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17565  005DE2  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17566  005DE4  ECD4  F030         	call	_validateRemoteSerialNumber	;wreg free
 17567  005DE8  0900               	iorlw	0
 17568  005DEA  B4D8               	btfsc	status,2,c
 17569  005DEC  D7DB               	goto	l22924
 17570  005DEE                     l22940:
 17571                           
 17572                           ; BSR set to: 0
 17573                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17574  005DEE  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17575  005DF2  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17576  005DF6  EC93  F04B         	call	_DecCHK	;wreg free
 17577  005DFA  0900               	iorlw	0
 17578  005DFC  A4D8               	btfss	status,2,c
 17579  005DFE  D00D               	goto	l22956
 17580                           
 17581                           ; BSR set to: 0
 17582                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17583  005E00  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17584  005E02  B4D8               	btfsc	status,2,c
 17585  005E04  D7CF               	goto	l22924
 17586                           
 17587                           ; BSR set to: 0
 17588                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17589  005E06  EE20 F00E          	lfsr	2,14
 17590  005E0A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17591  005E0C  26D9               	addwf	fsr2l,f,c
 17592  005E0E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17593  005E10  22DA               	addwfc	fsr2h,f,c
 17594  005E12  0E01               	movlw	1
 17595  005E14  6EDF               	movwf	indf2,c
 17596                           
 17597                           ; BSR set to: 0
 17598                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17599  005E16  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17600  005E18  0012               	return	
 17601  005E1A                     l22956:
 17602                           
 17603                           ; BSR set to: 0
 17604                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17605  005E1A  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17606  005E1E  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17607  005E22  EC09  F042         	call	_HopCHK	;wreg free
 17608  005E26  0100               	movlb	0	; () banked
 17609  005E28  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17613  005E2A  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17614  005E2C  A4D8               	btfss	status,2,c
 17615  005E2E  D7BA               	goto	l22924
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17619  005E30  EE20 F00E          	lfsr	2,14
 17620  005E34  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17621  005E36  26D9               	addwf	fsr2l,f,c
 17622  005E38  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17623  005E3A  22DA               	addwfc	fsr2h,f,c
 17624  005E3C  0E00               	movlw	0
 17625  005E3E  D7EA               	goto	L80
 17626  005E40                     __end_of_keeloqDecryptPacket:
 17627                           	callstack 0
 17628                           
 17629 ;; *************** function _verifyProgramingMode *****************
 17630 ;; Defined at:
 17631 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17632 ;; Parameters:    Size  Location     Type
 17633 ;;  classic_data    2   15[COMRAM] PTR struct .
 17634 ;;		 -> classic_data(16), 
 17635 ;; Auto vars:     Size  Location     Type
 17636 ;;		None
 17637 ;; Return value:  Size  Location     Type
 17638 ;;                  1    wreg      enum E10539
 17639 ;; Registers used:
 17640 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17641 ;; Tracked objects:
 17642 ;;		On entry : 3F/0
 17643 ;;		On exit  : 3F/0
 17644 ;;		Unchanged: 3F/0
 17645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17650 ;;Total ram usage:        3 bytes
 17651 ;; Hardware stack levels used: 1
 17652 ;; Hardware stack levels required when called: 4
 17653 ;; This function calls:
 17654 ;;		Nothing
 17655 ;; This function is called by:
 17656 ;;		_keeloqDecryptPacket
 17657 ;; This function uses a non-reentrant model
 17658 ;;
 17659                           
 17660                           	psect	text58
 17661  0096F2                     __ptext58:
 17662                           	callstack 0
 17663  0096F2                     _verifyProgramingMode:
 17664                           	callstack 24
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;incstack = 0
 17671  0096F2  EE20 F00C          	lfsr	2,12
 17672  0096F6  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17673  0096F8  26D9               	addwf	fsr2l,f,c
 17674  0096FA  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17675  0096FC  22DA               	addwfc	fsr2h,f,c
 17676  0096FE  0E0A               	movlw	10
 17677  009700  18DE               	xorwf	postinc2,w,c
 17678  009702  A4D8               	btfss	status,2,c
 17679  009704  D002               	goto	l21608
 17680                           
 17681                           ; BSR set to: 0
 17682                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17683  009706  0E06               	movlw	6
 17684  009708  0012               	return	
 17685  00970A                     l21608:
 17686                           
 17687                           ; BSR set to: 0
 17688  00970A  EE20 F00C          	lfsr	2,12
 17689  00970E  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17690  009710  26D9               	addwf	fsr2l,f,c
 17691  009712  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17692  009714  22DA               	addwfc	fsr2h,f,c
 17693  009716  0E05               	movlw	5
 17694  009718  18DE               	xorwf	postinc2,w,c
 17695  00971A  A4D8               	btfss	status,2,c
 17696  00971C  D002               	goto	l21616
 17697                           
 17698                           ; BSR set to: 0
 17699                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17700  00971E  0E05               	movlw	5
 17701  009720  0012               	return	
 17702  009722                     l21616:
 17703                           
 17704                           ; BSR set to: 0
 17705                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17706  009722  0E00               	movlw	0
 17707                           
 17708                           ; BSR set to: 0
 17709  009724  0012               	return		;funcret
 17710  009726                     __end_of_verifyProgramingMode:
 17711                           	callstack 0
 17712                           
 17713 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17714 ;; Defined at:
 17715 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17716 ;; Parameters:    Size  Location     Type
 17717 ;;  data            2   55[COMRAM] PTR struct .
 17718 ;;		 -> classic_data(16), 
 17719 ;; Auto vars:     Size  Location     Type
 17720 ;;		None
 17721 ;; Return value:  Size  Location     Type
 17722 ;;                  1    wreg      void 
 17723 ;; Registers used:
 17724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17725 ;; Tracked objects:
 17726 ;;		On entry : 3F/0
 17727 ;;		On exit  : 3F/0
 17728 ;;		Unchanged: 0/0
 17729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17732 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17733 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17734 ;;Total ram usage:        5 bytes
 17735 ;; Hardware stack levels used: 1
 17736 ;; Hardware stack levels required when called: 7
 17737 ;; This function calls:
 17738 ;;		_Decrypt
 17739 ;;		_NormalKeyGen
 17740 ;; This function is called by:
 17741 ;;		_keeloqDecryptPacket
 17742 ;; This function uses a non-reentrant model
 17743 ;;
 17744                           
 17745                           	psect	text59
 17746  009066                     __ptext59:
 17747                           	callstack 0
 17748  009066                     _keeloq_classic_decrypt_packet:
 17749                           	callstack 21
 17750                           
 17751                           ; BSR set to: 0
 17752                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17753                           
 17754                           ; BSR set to: 0
 17755                           ;incstack = 0
 17756  009066  0E04               	movlw	4
 17757  009068  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17758  00906A  6E26               	movwf	NormalKeyGen@serial^0,c
 17759  00906C  0E00               	movlw	0
 17760  00906E  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17761  009070  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17762  009072  ECCD  F039         	call	_NormalKeyGen	;wreg free
 17763                           
 17764                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17765  009076  0E08               	movlw	8
 17766  009078  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17767  00907A  6E1B               	movwf	Decrypt@packet^0,c
 17768  00907C  0E00               	movlw	0
 17769  00907E  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17770  009080  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17771  009082  EC34  F03D         	call	_Decrypt	;wreg free
 17772                           
 17773                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17774  009086  EE20 F00D          	lfsr	2,13
 17775  00908A  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17776  00908C  26D9               	addwf	fsr2l,f,c
 17777  00908E  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17778  009090  22DA               	addwfc	fsr2h,f,c
 17779  009092  EE10 F00A          	lfsr	1,10
 17780  009096  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17781  009098  26E1               	addwf	fsr1l,f,c
 17782  00909A  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17783  00909C  22E2               	addwfc	fsr1h,f,c
 17784  00909E  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17785  0090A2  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17786  0090A6  0E0C               	movlw	12
 17787  0090A8  0100               	movlb	0	; () banked
 17788  0090AA  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17789  0090AC                     u24955:
 17790  0090AC  90D8               	bcf	status,0,c
 17791  0090AE  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17792  0090B0  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17793  0090B2  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17794  0090B4  D7FB               	goto	u24955
 17795  0090B6  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17796  0090B8  0B0F               	andlw	15
 17797  0090BA  6EDF               	movwf	indf2,c
 17798                           
 17799                           ; BSR set to: 0
 17800  0090BC  0012               	return		;funcret
 17801  0090BE                     __end_of_keeloq_classic_decrypt_packet:
 17802                           	callstack 0
 17803                           
 17804 ;; *************** function _NormalKeyGen *****************
 17805 ;; Defined at:
 17806 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17807 ;; Parameters:    Size  Location     Type
 17808 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17809 ;;		 -> classic_data(16), 
 17810 ;; Auto vars:     Size  Location     Type
 17811 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17812 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17813 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17814 ;; Return value:  Size  Location     Type
 17815 ;;                  1    wreg      void 
 17816 ;; Registers used:
 17817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17818 ;; Tracked objects:
 17819 ;;		On entry : 3F/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17824 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17826 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17827 ;;Total ram usage:       18 bytes
 17828 ;; Hardware stack levels used: 1
 17829 ;; Hardware stack levels required when called: 6
 17830 ;; This function calls:
 17831 ;;		_Decrypt
 17832 ;;		_LoadManufCode
 17833 ;;		_memcpy
 17834 ;; This function is called by:
 17835 ;;		_keeloq_classic_decrypt_packet
 17836 ;; This function uses a non-reentrant model
 17837 ;;
 17838                           
 17839                           	psect	text60
 17840  00739A                     __ptext60:
 17841                           	callstack 0
 17842  00739A                     _NormalKeyGen:
 17843                           	callstack 21
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17847                           
 17848                           ; BSR set to: 0
 17849                           ;incstack = 0
 17850  00739A  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17851  00739C  6E10               	movwf	memcpy@d1^0,c
 17852  00739E  6A11               	clrf	(memcpy@d1+1)^0,c
 17853  0073A0  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17854  0073A4  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17855  0073A8  0E00               	movlw	0
 17856  0073AA  6E15               	movwf	(memcpy@n+1)^0,c
 17857  0073AC  0E04               	movlw	4
 17858  0073AE  6E14               	movwf	memcpy@n^0,c
 17859  0073B0  EC5F  F04A         	call	_memcpy	;wreg free
 17860                           
 17861                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17862  0073B4  0E28               	movlw	low NormalKeyGen@HOPtemp
 17863  0073B6  6E10               	movwf	memcpy@d1^0,c
 17864  0073B8  6A11               	clrf	(memcpy@d1+1)^0,c
 17865  0073BA  0E30               	movlw	low NormalKeyGen@Buffer
 17866  0073BC  6E12               	movwf	memcpy@s1^0,c
 17867  0073BE  6A13               	clrf	(memcpy@s1+1)^0,c
 17868  0073C0  0E00               	movlw	0
 17869  0073C2  6E15               	movwf	(memcpy@n+1)^0,c
 17870  0073C4  0E04               	movlw	4
 17871  0073C6  6E14               	movwf	memcpy@n^0,c
 17872  0073C8  EC5F  F04A         	call	_memcpy	;wreg free
 17873                           
 17874                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17875  0073CC  0ED7               	movlw	low NormalKeyGen@SEED
 17876  0073CE  6E10               	movwf	memcpy@d1^0,c
 17877  0073D0  0E02               	movlw	high NormalKeyGen@SEED
 17878  0073D2  6E11               	movwf	(memcpy@d1+1)^0,c
 17879  0073D4  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17880  0073D6  6E12               	movwf	memcpy@s1^0,c
 17881  0073D8  6A13               	clrf	(memcpy@s1+1)^0,c
 17882  0073DA  0E00               	movlw	0
 17883  0073DC  6E15               	movwf	(memcpy@n+1)^0,c
 17884  0073DE  0E04               	movlw	4
 17885  0073E0  6E14               	movwf	memcpy@n^0,c
 17886  0073E2  EC5F  F04A         	call	_memcpy	;wreg free
 17887                           
 17888                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17889  0073E6  0E0F               	movlw	15
 17890  0073E8  0102               	movlb	2	; () banked
 17891  0073EA  17DA               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17892                           
 17893                           ; BSR set to: 2
 17894                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17895  0073EC  0E30               	movlw	low NormalKeyGen@Buffer
 17896  0073EE  6E10               	movwf	memcpy@d1^0,c
 17897  0073F0  6A11               	clrf	(memcpy@d1+1)^0,c
 17898  0073F2  0ED7               	movlw	low NormalKeyGen@SEED
 17899  0073F4  6E12               	movwf	memcpy@s1^0,c
 17900  0073F6  0E02               	movlw	high NormalKeyGen@SEED
 17901  0073F8  6E13               	movwf	(memcpy@s1+1)^0,c
 17902  0073FA  0E00               	movlw	0
 17903  0073FC  6E15               	movwf	(memcpy@n+1)^0,c
 17904  0073FE  0E04               	movlw	4
 17905  007400  6E14               	movwf	memcpy@n^0,c
 17906  007402  EC5F  F04A         	call	_memcpy	;wreg free
 17907                           
 17908                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17909  007406  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17910                           
 17911                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17912  007408  ECC4  F04D         	call	_LoadManufCode	;wreg free
 17913                           
 17914                           ; BSR set to: 2
 17915                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17916  00740C  0E30               	movlw	low NormalKeyGen@Buffer
 17917  00740E  6E1B               	movwf	Decrypt@packet^0,c
 17918  007410  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17919  007412  EC34  F03D         	call	_Decrypt	;wreg free
 17920                           
 17921                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17922  007416  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17923  007418  6E10               	movwf	memcpy@d1^0,c
 17924  00741A  6A11               	clrf	(memcpy@d1+1)^0,c
 17925  00741C  0E30               	movlw	low NormalKeyGen@Buffer
 17926  00741E  6E12               	movwf	memcpy@s1^0,c
 17927  007420  6A13               	clrf	(memcpy@s1+1)^0,c
 17928  007422  0E00               	movlw	0
 17929  007424  6E15               	movwf	(memcpy@n+1)^0,c
 17930  007426  0E04               	movlw	4
 17931  007428  6E14               	movwf	memcpy@n^0,c
 17932  00742A  EC5F  F04A         	call	_memcpy	;wreg free
 17933                           
 17934                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17935  00742E  0E30               	movlw	low NormalKeyGen@Buffer
 17936  007430  6E10               	movwf	memcpy@d1^0,c
 17937  007432  6A11               	clrf	(memcpy@d1+1)^0,c
 17938  007434  0ED7               	movlw	low NormalKeyGen@SEED
 17939  007436  6E12               	movwf	memcpy@s1^0,c
 17940  007438  0E02               	movlw	high NormalKeyGen@SEED
 17941  00743A  6E13               	movwf	(memcpy@s1+1)^0,c
 17942  00743C  0E00               	movlw	0
 17943  00743E  6E15               	movwf	(memcpy@n+1)^0,c
 17944  007440  0E04               	movlw	4
 17945  007442  6E14               	movwf	memcpy@n^0,c
 17946  007444  EC5F  F04A         	call	_memcpy	;wreg free
 17947                           
 17948                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17949  007448  0E60               	movlw	96
 17950  00744A  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17951                           
 17952                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17953  00744C  ECC4  F04D         	call	_LoadManufCode	;wreg free
 17954                           
 17955                           ; BSR set to: 2
 17956                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17957  007450  0E30               	movlw	low NormalKeyGen@Buffer
 17958  007452  6E1B               	movwf	Decrypt@packet^0,c
 17959  007454  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17960  007456  EC34  F03D         	call	_Decrypt	;wreg free
 17961                           
 17962                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17963  00745A  0ED3               	movlw	low (_DKEY+4)
 17964  00745C  6E10               	movwf	memcpy@d1^0,c
 17965  00745E  0E02               	movlw	high (_DKEY+4)
 17966  007460  6E11               	movwf	(memcpy@d1+1)^0,c
 17967  007462  0E30               	movlw	low NormalKeyGen@Buffer
 17968  007464  6E12               	movwf	memcpy@s1^0,c
 17969  007466  6A13               	clrf	(memcpy@s1+1)^0,c
 17970  007468  0E00               	movlw	0
 17971  00746A  6E15               	movwf	(memcpy@n+1)^0,c
 17972  00746C  0E04               	movlw	4
 17973  00746E  6E14               	movwf	memcpy@n^0,c
 17974  007470  EC5F  F04A         	call	_memcpy	;wreg free
 17975                           
 17976                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17977  007474  0ECF               	movlw	low _DKEY
 17978  007476  6E10               	movwf	memcpy@d1^0,c
 17979  007478  0E02               	movlw	high _DKEY
 17980  00747A  6E11               	movwf	(memcpy@d1+1)^0,c
 17981  00747C  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17982  00747E  6E12               	movwf	memcpy@s1^0,c
 17983  007480  6A13               	clrf	(memcpy@s1+1)^0,c
 17984  007482  0E00               	movlw	0
 17985  007484  6E15               	movwf	(memcpy@n+1)^0,c
 17986  007486  0E04               	movlw	4
 17987  007488  6E14               	movwf	memcpy@n^0,c
 17988  00748A  EC5F  F04A         	call	_memcpy	;wreg free
 17989                           
 17990                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 17991  00748E  0E30               	movlw	low NormalKeyGen@Buffer
 17992  007490  6E10               	movwf	memcpy@d1^0,c
 17993  007492  6A11               	clrf	(memcpy@d1+1)^0,c
 17994  007494  0E28               	movlw	low NormalKeyGen@HOPtemp
 17995  007496  6E12               	movwf	memcpy@s1^0,c
 17996  007498  6A13               	clrf	(memcpy@s1+1)^0,c
 17997  00749A  0E00               	movlw	0
 17998  00749C  6E15               	movwf	(memcpy@n+1)^0,c
 17999  00749E  0E04               	movlw	4
 18000  0074A0  6E14               	movwf	memcpy@n^0,c
 18001  0074A2  EC5F  F04A         	call	_memcpy	;wreg free
 18002  0074A6  0012               	return		;funcret
 18003  0074A8                     __end_of_NormalKeyGen:
 18004                           	callstack 0
 18005                           
 18006 ;; *************** function _LoadManufCode *****************
 18007 ;; Defined at:
 18008 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18009 ;; Parameters:    Size  Location     Type
 18010 ;;		None
 18011 ;; Auto vars:     Size  Location     Type
 18012 ;;		None
 18013 ;; Return value:  Size  Location     Type
 18014 ;;                  1    wreg      void 
 18015 ;; Registers used:
 18016 ;;		wreg, status,2
 18017 ;; Tracked objects:
 18018 ;;		On entry : 0/2
 18019 ;;		On exit  : 3F/2
 18020 ;;		Unchanged: 0/0
 18021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18026 ;;Total ram usage:        0 bytes
 18027 ;; Hardware stack levels used: 1
 18028 ;; Hardware stack levels required when called: 4
 18029 ;; This function calls:
 18030 ;;		Nothing
 18031 ;; This function is called by:
 18032 ;;		_NormalKeyGen
 18033 ;; This function uses a non-reentrant model
 18034 ;;
 18035                           
 18036                           	psect	text61
 18037  009B88                     __ptext61:
 18038                           	callstack 0
 18039  009B88                     _LoadManufCode:
 18040                           	callstack 22
 18041                           
 18042                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18043                           
 18044                           ;incstack = 0
 18045  009B88  0102               	movlb	2	; () banked
 18046  009B8A  69CF               	setf	_DKEY& (0+255),b
 18047                           
 18048                           ; BSR set to: 2
 18049                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18050  009B8C  0ECA               	movlw	202
 18051  009B8E  6FD0               	movwf	(_DKEY+1)& (0+255),b
 18052                           
 18053                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18054  009B90  0E76               	movlw	118
 18055  009B92  6FD1               	movwf	(_DKEY+2)& (0+255),b
 18056                           
 18057                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18058  009B94  0E94               	movlw	148
 18059  009B96  6FD2               	movwf	(_DKEY+3)& (0+255),b
 18060                           
 18061                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18062  009B98  0E22               	movlw	34
 18063  009B9A  6FD3               	movwf	(_DKEY+4)& (0+255),b
 18064                           
 18065                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18066  009B9C  0E68               	movlw	104
 18067  009B9E  6FD4               	movwf	(_DKEY+5)& (0+255),b
 18068                           
 18069                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18070  009BA0  0E27               	movlw	39
 18071  009BA2  6FD5               	movwf	(_DKEY+6)& (0+255),b
 18072                           
 18073                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18074  009BA4  0E57               	movlw	87
 18075  009BA6  6FD6               	movwf	(_DKEY+7)& (0+255),b
 18076                           
 18077                           ; BSR set to: 2
 18078  009BA8  0012               	return		;funcret
 18079  009BAA                     __end_of_LoadManufCode:
 18080                           	callstack 0
 18081                           
 18082 ;; *************** function _Decrypt *****************
 18083 ;; Defined at:
 18084 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18085 ;; Parameters:    Size  Location     Type
 18086 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18087 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18088 ;; Auto vars:     Size  Location     Type
 18089 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18090 ;;  aux             1   32[COMRAM] unsigned char 
 18091 ;;  p               1   31[COMRAM] char 
 18092 ;;  j               1   30[COMRAM] unsigned char 
 18093 ;;  i               1   29[COMRAM] unsigned char 
 18094 ;;  key             1   28[COMRAM] unsigned char 
 18095 ;; Return value:  Size  Location     Type
 18096 ;;                  1    wreg      void 
 18097 ;; Registers used:
 18098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18099 ;; Tracked objects:
 18100 ;;		On entry : 0/0
 18101 ;;		On exit  : 0/0
 18102 ;;		Unchanged: 0/0
 18103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18105 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18107 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18108 ;;Total ram usage:       11 bytes
 18109 ;; Hardware stack levels used: 1
 18110 ;; Hardware stack levels required when called: 5
 18111 ;; This function calls:
 18112 ;;		_memcpy
 18113 ;; This function is called by:
 18114 ;;		_NormalKeyGen
 18115 ;;		_keeloq_classic_decrypt_packet
 18116 ;; This function uses a non-reentrant model
 18117 ;;
 18118                           
 18119                           	psect	text62
 18120  007A68                     __ptext62:
 18121                           	callstack 0
 18122  007A68                     _Decrypt:
 18123                           	callstack 21
 18124                           
 18125                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18126                           
 18127                           ; BSR set to: 2
 18128                           ;incstack = 0
 18129  007A68  0E22               	movlw	low Decrypt@Buffer
 18130  007A6A  6E10               	movwf	memcpy@d1^0,c
 18131  007A6C  6A11               	clrf	(memcpy@d1+1)^0,c
 18132  007A6E  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18133  007A72  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18134  007A76  0E00               	movlw	0
 18135  007A78  6E15               	movwf	(memcpy@n+1)^0,c
 18136  007A7A  0E04               	movlw	4
 18137  007A7C  6E14               	movwf	memcpy@n^0,c
 18138  007A7E  EC5F  F04A         	call	_memcpy	;wreg free
 18139                           
 18140                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18141  007A82  0E01               	movlw	1
 18142  007A84  6E20               	movwf	Decrypt@p^0,c
 18143                           
 18144                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18145  007A86  0E42               	movlw	66
 18146  007A88  6E1F               	movwf	Decrypt@j^0,c
 18147  007A8A                     l20574:
 18148                           
 18149                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18150  007A8A  0ECF               	movlw	low _DKEY
 18151  007A8C  2420               	addwf	Decrypt@p^0,w,c
 18152  007A8E  6ED9               	movwf	fsr2l,c
 18153  007A90  6ADA               	clrf	fsr2h,c
 18154  007A92  0E02               	movlw	high _DKEY
 18155  007A94  22DA               	addwfc	fsr2h,f,c
 18156  007A96  50DF               	movf	indf2,w,c
 18157  007A98  6E1D               	movwf	Decrypt@key^0,c
 18158  007A9A  0620               	decf	Decrypt@p^0,f,c
 18159                           
 18160                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18161  007A9C  AE20               	btfss	Decrypt@p^0,7,c
 18162  007A9E  D002               	goto	l20582
 18163                           
 18164                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18165  007AA0  0E08               	movlw	8
 18166  007AA2  2620               	addwf	Decrypt@p^0,f,c
 18167  007AA4                     l20582:
 18168                           
 18169                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18170  007AA4  0E08               	movlw	8
 18171  007AA6  6E1E               	movwf	Decrypt@i^0,c
 18172  007AA8                     l1859:
 18173                           
 18174                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18175  007AA8  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18176  007AAA  D006               	goto	l1861
 18177                           
 18178                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18179  007AAC  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18180  007AAE  D002               	goto	l20592
 18181                           
 18182                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18183  007AB0  0E3A               	movlw	58
 18184  007AB2  D007               	goto	L81
 18185  007AB4                     l20592:
 18186                           
 18187                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18188  007AB4  0E5C               	movlw	92
 18189  007AB6  D005               	goto	L81
 18190  007AB8                     l1861:
 18191                           
 18192                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18193  007AB8  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18194  007ABA  D002               	goto	l20596
 18195                           
 18196                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18197  007ABC  0E74               	movlw	116
 18198  007ABE  D001               	goto	L81
 18199  007AC0                     l20596:
 18200                           
 18201                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18202  007AC0  0E2E               	movlw	46
 18203  007AC2                     L81:
 18204  007AC2  6E21               	movwf	Decrypt@aux^0,c
 18205                           
 18206                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18207  007AC4  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18208                           
 18209                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18210  007AC6  3A21               	swapf	Decrypt@aux^0,f,c
 18211                           
 18212                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18213  007AC8  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18214  007ACA  D004               	goto	l20604
 18215                           
 18216                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18217  007ACC  90D8               	bcf	status,0,c
 18218  007ACE  3621               	rlcf	Decrypt@aux^0,f,c
 18219  007AD0  90D8               	bcf	status,0,c
 18220  007AD2  3621               	rlcf	Decrypt@aux^0,f,c
 18221  007AD4                     l20604:
 18222                           
 18223                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18224  007AD4  A022               	btfss	Decrypt@Buffer^0,0,c
 18225  007AD6  D002               	goto	l1869
 18226                           
 18227                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18228  007AD8  90D8               	bcf	status,0,c
 18229  007ADA  3621               	rlcf	Decrypt@aux^0,f,c
 18230  007ADC                     l1869:
 18231                           
 18232                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18233  007ADC  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18234  007ADE  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18235  007AE0  181D               	xorwf	Decrypt@key^0,w,c
 18236  007AE2  1A21               	xorwf	Decrypt@aux^0,f,c
 18237                           
 18238                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18239  007AE4  90D8               	bcf	status,0,c
 18240  007AE6  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18241  007AE8  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18242  007AEA  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18243                           
 18244                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18245  007AEC  90D8               	bcf	status,0,c
 18246  007AEE  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18247  007AF0  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18248  007AF2  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18249                           
 18250                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18251  007AF4  90D8               	bcf	status,0,c
 18252  007AF6  3422               	rlcf	Decrypt@Buffer^0,w,c
 18253  007AF8  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18254  007AFA  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18255                           
 18256                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18257  007AFC  90D8               	bcf	status,0,c
 18258  007AFE  3421               	rlcf	Decrypt@aux^0,w,c
 18259  007B00  3422               	rlcf	Decrypt@Buffer^0,w,c
 18260  007B02  6E22               	movwf	Decrypt@Buffer^0,c
 18261                           
 18262                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18263  007B04  90D8               	bcf	status,0,c
 18264  007B06  361D               	rlcf	Decrypt@key^0,f,c
 18265                           
 18266                           ;keeloqDecrypt_MC50.c: 189:         }
 18267  007B08  061E               	decf	Decrypt@i^0,f,c
 18268  007B0A  501E               	movf	Decrypt@i^0,w,c
 18269  007B0C  A4D8               	btfss	status,2,c
 18270  007B0E  D7CC               	goto	l1859
 18271                           
 18272                           ;keeloqDecrypt_MC50.c: 190:     }
 18273  007B10  061F               	decf	Decrypt@j^0,f,c
 18274  007B12  501F               	movf	Decrypt@j^0,w,c
 18275  007B14  A4D8               	btfss	status,2,c
 18276  007B16  D7B9               	goto	l20574
 18277                           
 18278                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18279  007B18  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18280  007B1C  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18281  007B20  0E22               	movlw	low Decrypt@Buffer
 18282  007B22  6E12               	movwf	memcpy@s1^0,c
 18283  007B24  6A13               	clrf	(memcpy@s1+1)^0,c
 18284  007B26  0E00               	movlw	0
 18285  007B28  6E15               	movwf	(memcpy@n+1)^0,c
 18286  007B2A  0E04               	movlw	4
 18287  007B2C  6E14               	movwf	memcpy@n^0,c
 18288  007B2E  EC5F  F04A         	call	_memcpy	;wreg free
 18289  007B32  0012               	return		;funcret
 18290  007B34                     __end_of_Decrypt:
 18291                           	callstack 0
 18292                           
 18293 ;; *************** function _HopCHK *****************
 18294 ;; Defined at:
 18295 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18296 ;; Parameters:    Size  Location     Type
 18297 ;;  data            2   35[COMRAM] PTR struct .
 18298 ;;		 -> classic_data(16), 
 18299 ;; Auto vars:     Size  Location     Type
 18300 ;;  hopDiff         2   37[COMRAM] short 
 18301 ;; Return value:  Size  Location     Type
 18302 ;;                  1    wreg      enum E10730
 18303 ;; Registers used:
 18304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18305 ;; Tracked objects:
 18306 ;;		On entry : 3F/0
 18307 ;;		On exit  : 3E/0
 18308 ;;		Unchanged: 0/0
 18309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18313 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18314 ;;Total ram usage:        4 bytes
 18315 ;; Hardware stack levels used: 1
 18316 ;; Hardware stack levels required when called: 6
 18317 ;; This function calls:
 18318 ;;		_ReqResync
 18319 ;;		_getHopCode
 18320 ;; This function is called by:
 18321 ;;		_keeloqDecryptPacket
 18322 ;; This function uses a non-reentrant model
 18323 ;;
 18324                           
 18325                           	psect	text63
 18326  008412                     __ptext63:
 18327                           	callstack 0
 18328  008412                     _HopCHK:
 18329                           	callstack 22
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18333                           
 18334                           ;incstack = 0
 18335  008412  EE20 F008          	lfsr	2,8
 18336  008416  5024               	movf	HopCHK@data^0,w,c
 18337  008418  26D9               	addwf	fsr2l,f,c
 18338  00841A  5025               	movf	(HopCHK@data+1)^0,w,c
 18339  00841C  22DA               	addwfc	fsr2h,f,c
 18340  00841E  CFDE F07C          	movff	postinc2,_Hop
 18341  008422  CFDD F07D          	movff	postdec2,_Hop+1
 18342                           
 18343                           ; BSR set to: 0
 18344                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18345  008426  C024  F016         	movff	HopCHK@data,getHopCode@data
 18346  00842A  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18347  00842E  ECF1  F036         	call	_getHopCode	;wreg free
 18348  008432  C016  F28C         	movff	?_getHopCode,_EHop
 18349  008436  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18350                           
 18351                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18352  00843A  0101               	movlb	1	; () banked
 18353  00843C  519A               	movf	_F2Chance& (0+255),w,b
 18354  00843E  B4D8               	btfsc	status,2,c
 18355  008440  D00F               	goto	l21580
 18356                           
 18357                           ; BSR set to: 1
 18358                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18359  008442  0100               	movlb	0	; () banked
 18360  008444  517C               	movf	_Hop& (0+255),w,b
 18361  008446  0101               	movlb	1	; () banked
 18362  008448  1987               	xorwf	_NextHop& (0+255),w,b
 18363  00844A  E10A               	bnz	l21580
 18364  00844C  0100               	movlb	0	; () banked
 18365  00844E  517D               	movf	(_Hop+1)& (0+255),w,b
 18366  008450  0101               	movlb	1	; () banked
 18367  008452  1988               	xorwf	(_NextHop+1)& (0+255),w,b
 18368  008454  A4D8               	btfss	status,2,c
 18369  008456  D004               	goto	l21580
 18370                           
 18371                           ; BSR set to: 1
 18372                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18373  008458  0E00               	movlw	0
 18374  00845A  6F9A               	movwf	_F2Chance& (0+255),b
 18375  00845C                     l21576:
 18376                           
 18377                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18378  00845C  0E01               	movlw	1
 18379  00845E  0012               	return	
 18380  008460                     l21580:
 18381                           
 18382                           ; BSR set to: 1
 18383                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18384  008460  0102               	movlb	2	; () banked
 18385  008462  518C               	movf	_EHop& (0+255),w,b
 18386  008464  0100               	movlb	0	; () banked
 18387  008466  5D7C               	subwf	_Hop& (0+255),w,b
 18388  008468  6E26               	movwf	HopCHK@hopDiff^0,c
 18389  00846A  0102               	movlb	2	; () banked
 18390  00846C  518D               	movf	(_EHop+1)& (0+255),w,b
 18391  00846E  0100               	movlb	0	; () banked
 18392  008470  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18393  008472  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18394                           
 18395                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18396  008474  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18397  008476  D002               	goto	l21588
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18401  008478  0E0A               	movlw	10
 18402  00847A  0012               	return	
 18403  00847C                     l21588:
 18404                           
 18405                           ; BSR set to: 0
 18406  00847C  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18407  00847E  D7EE               	goto	l21576
 18408  008480  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18409  008482  E104               	bnz	u24920
 18410  008484  0E11               	movlw	17
 18411  008486  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18412  008488  A0D8               	btfss	status,0,c
 18413  00848A  D7E8               	goto	l21576
 18414  00848C                     u24920:
 18415                           
 18416                           ; BSR set to: 0
 18417                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18418  00848C  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18419  008490  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18420  008494  ECBD  F04E         	call	_ReqResync	;wreg free
 18421  008498  0012               	return		;funcret
 18422  00849A                     __end_of_HopCHK:
 18423                           	callstack 0
 18424                           
 18425 ;; *************** function _getHopCode *****************
 18426 ;; Defined at:
 18427 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18428 ;; Parameters:    Size  Location     Type
 18429 ;;  data            2   21[COMRAM] PTR struct .
 18430 ;;		 -> classic_data(16), 
 18431 ;; Auto vars:     Size  Location     Type
 18432 ;;  tempHop         2   31[COMRAM] unsigned short 
 18433 ;;  i               1   34[COMRAM] unsigned char 
 18434 ;;  tempPos         1   33[COMRAM] char 
 18435 ;; Return value:  Size  Location     Type
 18436 ;;                  2   21[COMRAM] unsigned short 
 18437 ;; Registers used:
 18438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18439 ;; Tracked objects:
 18440 ;;		On entry : 3F/0
 18441 ;;		On exit  : 3E/0
 18442 ;;		Unchanged: 0/0
 18443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18445 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18446 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18447 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18448 ;;Total ram usage:       14 bytes
 18449 ;; Hardware stack levels used: 1
 18450 ;; Hardware stack levels required when called: 5
 18451 ;; This function calls:
 18452 ;;		_ReqResync
 18453 ;;		___wmul
 18454 ;; This function is called by:
 18455 ;;		_HopCHK
 18456 ;; This function uses a non-reentrant model
 18457 ;;
 18458                           
 18459                           	psect	text64
 18460  006DE2                     __ptext64:
 18461                           	callstack 0
 18462  006DE2                     _getHopCode:
 18463                           	callstack 22
 18464                           
 18465                           ; BSR set to: 0
 18466                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18467                           
 18468                           ;incstack = 0
 18469  006DE2  0E00               	movlw	0
 18470  006DE4  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18471  006DE6  0E00               	movlw	0
 18472  006DE8  6E20               	movwf	getHopCode@tempHop^0,c
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18476  006DEA  6822               	setf	getHopCode@tempPos^0,c
 18477                           
 18478                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18479  006DEC  0E00               	movlw	0
 18480  006DEE  6E23               	movwf	getHopCode@i^0,c
 18481  006DF0                     l20872:
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18485  006DF0  EE20 F004          	lfsr	2,4
 18486  006DF4  5016               	movf	getHopCode@data^0,w,c
 18487  006DF6  26D9               	addwf	fsr2l,f,c
 18488  006DF8  5017               	movf	(getHopCode@data+1)^0,w,c
 18489  006DFA  22DA               	addwfc	fsr2h,f,c
 18490  006DFC  5023               	movf	getHopCode@i^0,w,c
 18491  006DFE  0D06               	mullw	6
 18492  006E00  0E00               	movlw	low _listSyncValues
 18493  006E02  24F3               	addwf	243,w,c
 18494  006E04  6EE1               	movwf	fsr1l,c
 18495  006E06  0E03               	movlw	high _listSyncValues
 18496  006E08  20F4               	addwfc	prodh,w,c
 18497  006E0A  6EE2               	movwf	fsr1h,c
 18498  006E0C  50DE               	movf	postinc2,w,c
 18499  006E0E  18E6               	xorwf	postinc1,w,c
 18500  006E10  E118               	bnz	l20878
 18501  006E12  50DE               	movf	postinc2,w,c
 18502  006E14  18E6               	xorwf	postinc1,w,c
 18503  006E16  E115               	bnz	l20878
 18504  006E18  50DE               	movf	postinc2,w,c
 18505  006E1A  18E6               	xorwf	postinc1,w,c
 18506  006E1C  E112               	bnz	l20878
 18507  006E1E  50DE               	movf	postinc2,w,c
 18508  006E20  18E6               	xorwf	postinc1,w,c
 18509  006E22  A4D8               	btfss	status,2,c
 18510  006E24  D00E               	goto	l20878
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18514  006E26  5023               	movf	getHopCode@i^0,w,c
 18515  006E28  0D06               	mullw	6
 18516  006E2A  0E04               	movlw	low (_listSyncValues+4)
 18517  006E2C  24F3               	addwf	243,w,c
 18518  006E2E  6ED9               	movwf	fsr2l,c
 18519  006E30  0E03               	movlw	high (_listSyncValues+4)
 18520  006E32  20F4               	addwfc	prodh,w,c
 18521  006E34  6EDA               	movwf	fsr2h,c
 18522  006E36  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18523  006E3A  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18524                           
 18525                           ; BSR set to: 0
 18526                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18527  006E3E  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18528  006E42                     l20878:
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;keeloqDecrypt_MC50.c: 278:     }
 18532  006E42  2A23               	incf	getHopCode@i^0,f,c
 18533                           
 18534                           ; BSR set to: 0
 18535  006E44  0E18               	movlw	24
 18536  006E46  6423               	cpfsgt	getHopCode@i^0,c
 18537  006E48  D7D3               	goto	l20872
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18541  006E4A  AE22               	btfss	getHopCode@tempPos^0,7,c
 18542  006E4C  D050               	goto	l20898
 18543                           
 18544                           ; BSR set to: 0
 18545                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18546  006E4E  EE20 F004          	lfsr	2,4
 18547  006E52  5016               	movf	getHopCode@data^0,w,c
 18548  006E54  26D9               	addwf	fsr2l,f,c
 18549  006E56  5017               	movf	(getHopCode@data+1)^0,w,c
 18550  006E58  22DA               	addwfc	fsr2h,f,c
 18551  006E5A  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18552  006E5E  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18553  006E62  0E00               	movlw	0
 18554  006E64  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18555  006E66  0E06               	movlw	6
 18556  006E68  6E12               	movwf	___wmul@multiplicand^0,c
 18557  006E6A  EC79  F04D         	call	___wmul	;wreg free
 18558  006E6E  0E00               	movlw	low _listSyncValues
 18559  006E70  2410               	addwf	?___wmul^0,w,c
 18560  006E72  6EE1               	movwf	fsr1l,c
 18561  006E74  0E03               	movlw	high _listSyncValues
 18562  006E76  2011               	addwfc	(?___wmul+1)^0,w,c
 18563  006E78  6EE2               	movwf	fsr1h,c
 18564  006E7A  CFDE FFE6          	movff	postinc2,postinc1
 18565  006E7E  CFDE FFE6          	movff	postinc2,postinc1
 18566  006E82  CFDE FFE6          	movff	postinc2,postinc1
 18567  006E86  CFDE FFE6          	movff	postinc2,postinc1
 18568                           
 18569                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18570  006E8A  EE20 F008          	lfsr	2,8
 18571  006E8E  5016               	movf	getHopCode@data^0,w,c
 18572  006E90  26D9               	addwf	fsr2l,f,c
 18573  006E92  5017               	movf	(getHopCode@data+1)^0,w,c
 18574  006E94  22DA               	addwfc	fsr2h,f,c
 18575  006E96  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18576  006E9A  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18577  006E9E  0E00               	movlw	0
 18578  006EA0  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18579  006EA2  0E06               	movlw	6
 18580  006EA4  6E12               	movwf	___wmul@multiplicand^0,c
 18581  006EA6  EC79  F04D         	call	___wmul	;wreg free
 18582  006EAA  0E04               	movlw	low (_listSyncValues+4)
 18583  006EAC  2410               	addwf	?___wmul^0,w,c
 18584  006EAE  6EE1               	movwf	fsr1l,c
 18585  006EB0  0E03               	movlw	high (_listSyncValues+4)
 18586  006EB2  2011               	addwfc	(?___wmul+1)^0,w,c
 18587  006EB4  6EE2               	movwf	fsr1h,c
 18588  006EB6  CFDE FFE6          	movff	postinc2,postinc1
 18589  006EBA  CFDD FFE5          	movff	postdec2,postdec1
 18590                           
 18591                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18592  006EBE  0100               	movlb	0	; () banked
 18593  006EC0  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18594  006EC2  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18595                           
 18596                           ; BSR set to: 0
 18597                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18598  006EC4  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18599  006EC6  E104               	bnz	u23970
 18600  006EC8  0E19               	movlw	25
 18601  006ECA  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18602  006ECC  A0D8               	btfss	status,0,c
 18603  006ECE  D004               	goto	l20892
 18604  006ED0                     u23970:
 18605                           
 18606                           ; BSR set to: 0
 18607                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18608  006ED0  0E00               	movlw	0
 18609  006ED2  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18610  006ED4  0E00               	movlw	0
 18611  006ED6  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18612  006ED8                     l20892:
 18613                           
 18614                           ; BSR set to: 0
 18615                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18616  006ED8  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18617  006EDC  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18618  006EE0  ECBD  F04E         	call	_ReqResync	;wreg free
 18619  006EE4  6E18               	movwf	??_getHopCode^0,c
 18620  006EE6  5018               	movf	??_getHopCode^0,w,c
 18621  006EE8  6E16               	movwf	?_getHopCode^0,c
 18622  006EEA  6A17               	clrf	(?_getHopCode+1)^0,c
 18623  006EEC  0012               	return	
 18624  006EEE                     l20898:
 18625                           
 18626                           ; BSR set to: 0
 18627                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18628  006EEE  5022               	movf	getHopCode@tempPos^0,w,c
 18629  006EF0  0D06               	mullw	6
 18630  006EF2  0E04               	movlw	low (_listSyncValues+4)
 18631  006EF4  24F3               	addwf	243,w,c
 18632  006EF6  6ED9               	movwf	fsr2l,c
 18633  006EF8  0E03               	movlw	high (_listSyncValues+4)
 18634  006EFA  20F4               	addwfc	prodh,w,c
 18635  006EFC  6EDA               	movwf	fsr2h,c
 18636  006EFE  C07C  FFDE         	movff	_Hop,postinc2
 18637  006F02  C07D  FFDD         	movff	_Hop+1,postdec2
 18638                           
 18639                           ; BSR set to: 0
 18640                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18641  006F06  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18642  006F0A  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18643  006F0E  0012               	return		;funcret
 18644  006F10                     __end_of_getHopCode:
 18645                           	callstack 0
 18646                           
 18647 ;; *************** function _ReqResync *****************
 18648 ;; Defined at:
 18649 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18650 ;; Parameters:    Size  Location     Type
 18651 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18652 ;; Auto vars:     Size  Location     Type
 18653 ;;		None
 18654 ;; Return value:  Size  Location     Type
 18655 ;;                  1    wreg      enum E10730
 18656 ;; Registers used:
 18657 ;;		wreg, status,2, status,0
 18658 ;; Tracked objects:
 18659 ;;		On entry : 3F/0
 18660 ;;		On exit  : 3F/1
 18661 ;;		Unchanged: 0/0
 18662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18667 ;;Total ram usage:        2 bytes
 18668 ;; Hardware stack levels used: 1
 18669 ;; Hardware stack levels required when called: 4
 18670 ;; This function calls:
 18671 ;;		Nothing
 18672 ;; This function is called by:
 18673 ;;		_HopCHK
 18674 ;;		_getHopCode
 18675 ;; This function uses a non-reentrant model
 18676 ;;
 18677                           
 18678                           	psect	text65
 18679  009D7A                     __ptext65:
 18680                           	callstack 0
 18681  009D7A                     _ReqResync:
 18682                           	callstack 22
 18683                           
 18684                           ; BSR set to: 0
 18685                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18686                           
 18687                           ;incstack = 0
 18688  009D7A  0E01               	movlw	1
 18689  009D7C  0101               	movlb	1	; () banked
 18690  009D7E  6F9A               	movwf	_F2Chance& (0+255),b
 18691                           
 18692                           ; BSR set to: 1
 18693                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18694  009D80  0E01               	movlw	1
 18695  009D82  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18696  009D84  6F87               	movwf	_NextHop& (0+255),b
 18697  009D86  0E00               	movlw	0
 18698  009D88  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18699  009D8A  6F88               	movwf	(_NextHop+1)& (0+255),b
 18700                           
 18701                           ; BSR set to: 1
 18702                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18703  009D8C  0E09               	movlw	9
 18704                           
 18705                           ; BSR set to: 1
 18706  009D8E  0012               	return		;funcret
 18707  009D90                     __end_of_ReqResync:
 18708                           	callstack 0
 18709                           
 18710 ;; *************** function _DecCHK *****************
 18711 ;; Defined at:
 18712 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18713 ;; Parameters:    Size  Location     Type
 18714 ;;  data            2   15[COMRAM] PTR struct .
 18715 ;;		 -> classic_data(16), 
 18716 ;; Auto vars:     Size  Location     Type
 18717 ;;		None
 18718 ;; Return value:  Size  Location     Type
 18719 ;;                  1    wreg      _Bool 
 18720 ;; Registers used:
 18721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18722 ;; Tracked objects:
 18723 ;;		On entry : 3F/0
 18724 ;;		On exit  : 3F/0
 18725 ;;		Unchanged: 3F/0
 18726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18731 ;;Total ram usage:        4 bytes
 18732 ;; Hardware stack levels used: 1
 18733 ;; Hardware stack levels required when called: 4
 18734 ;; This function calls:
 18735 ;;		Nothing
 18736 ;; This function is called by:
 18737 ;;		_keeloqDecryptPacket
 18738 ;; This function uses a non-reentrant model
 18739 ;;
 18740                           
 18741                           	psect	text66
 18742  009726                     __ptext66:
 18743                           	callstack 0
 18744  009726                     _DecCHK:
 18745                           	callstack 24
 18746                           
 18747                           ; BSR set to: 0
 18748                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18749                           
 18750                           ; BSR set to: 1
 18751                           ;incstack = 0
 18752  009726  EE20 F00D          	lfsr	2,13
 18753  00972A  5010               	movf	DecCHK@data^0,w,c
 18754  00972C  26D9               	addwf	fsr2l,f,c
 18755  00972E  5011               	movf	(DecCHK@data+1)^0,w,c
 18756  009730  22DA               	addwfc	fsr2h,f,c
 18757  009732  50DF               	movf	indf2,w,c
 18758  009734  6E12               	movwf	??_DecCHK^0,c
 18759  009736  EE20 F00C          	lfsr	2,12
 18760  00973A  5010               	movf	DecCHK@data^0,w,c
 18761  00973C  26D9               	addwf	fsr2l,f,c
 18762  00973E  5011               	movf	(DecCHK@data+1)^0,w,c
 18763  009740  22DA               	addwfc	fsr2h,f,c
 18764  009742  50DF               	movf	indf2,w,c
 18765  009744  1812               	xorwf	??_DecCHK^0,w,c
 18766  009746  6E13               	movwf	(??_DecCHK+1)^0,c
 18767  009748  0E0F               	movlw	15
 18768  00974A  1613               	andwf	(??_DecCHK+1)^0,f,c
 18769  00974C  B4D8               	btfsc	status,2,c
 18770  00974E  D002               	goto	l21562
 18771                           
 18772                           ; BSR set to: 0
 18773                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18774  009750  0E00               	movlw	0
 18775  009752  0012               	return	
 18776  009754                     l21562:
 18777                           
 18778                           ; BSR set to: 0
 18779                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18780  009754  0E01               	movlw	1
 18781                           
 18782                           ; BSR set to: 0
 18783  009756  0012               	return		;funcret
 18784  009758                     __end_of_DecCHK:
 18785                           	callstack 0
 18786                           
 18787 ;; *************** function _DecryptPacket_12BIT *****************
 18788 ;; Defined at:
 18789 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18790 ;; Parameters:    Size  Location     Type
 18791 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18792 ;;		 -> BufferRF(9), 
 18793 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18794 ;;		 -> classic_data(16), 
 18795 ;; Auto vars:     Size  Location     Type
 18796 ;;  commandType     1   12[BANK0 ] enum E10539
 18797 ;; Return value:  Size  Location     Type
 18798 ;;                  1    wreg      enum E10539
 18799 ;; Registers used:
 18800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18801 ;; Tracked objects:
 18802 ;;		On entry : 3F/0
 18803 ;;		On exit  : 3F/0
 18804 ;;		Unchanged: 0/0
 18805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18809 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18810 ;;Total ram usage:        5 bytes
 18811 ;; Hardware stack levels used: 1
 18812 ;; Hardware stack levels required when called: 14
 18813 ;; This function calls:
 18814 ;;		_memcpy
 18815 ;;		_validateRemoteSerialNumber
 18816 ;; This function is called by:
 18817 ;;		_readRFButtons
 18818 ;; This function uses a non-reentrant model
 18819 ;;
 18820                           
 18821                           	psect	text67
 18822  00826E                     __ptext67:
 18823                           	callstack 0
 18824  00826E                     _DecryptPacket_12BIT:
 18825                           	callstack 15
 18826                           
 18827                           ; BSR set to: 0
 18828                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;incstack = 0
 18832  00826E  0E04               	movlw	4
 18833  008270  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18834  008272  6E10               	movwf	memcpy@d1^0,c
 18835  008274  0E00               	movlw	0
 18836  008276  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18837  008278  6E11               	movwf	(memcpy@d1+1)^0,c
 18838  00827A  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18839  00827E  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18840  008282  0E00               	movlw	0
 18841  008284  6E15               	movwf	(memcpy@n+1)^0,c
 18842  008286  0E04               	movlw	4
 18843  008288  6E14               	movwf	memcpy@n^0,c
 18844  00828A  EC5F  F04A         	call	_memcpy	;wreg free
 18845                           
 18846                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18847  00828E  0100               	movlb	0	; () banked
 18848  008290  EE20 F004          	lfsr	2,4
 18849  008294  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18850  008296  26D9               	addwf	fsr2l,f,c
 18851  008298  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18852  00829A  22DA               	addwfc	fsr2h,f,c
 18853  00829C  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18854  0082A0  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18855  0082A4  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18856  0082A8  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18857  0082AC  0E00               	movlw	0
 18858  0082AE  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18859  0082B0  0E0F               	movlw	15
 18860  0082B2  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18861  0082B4  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18862  0082B6  0E00               	movlw	0
 18863  0082B8  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18864  0082BA  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18865  0082BC  ECD4  F030         	call	_validateRemoteSerialNumber	;wreg free
 18866  0082C0  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18867                           
 18868                           ; BSR set to: 0
 18869                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18870  0082C2  EE20 F00C          	lfsr	2,12
 18871  0082C6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18872  0082C8  26D9               	addwf	fsr2l,f,c
 18873  0082CA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18874  0082CC  22DA               	addwfc	fsr2h,f,c
 18875  0082CE  0E00               	movlw	0
 18876  0082D0  6EDF               	movwf	indf2,c
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18880  0082D2  EE20 F008          	lfsr	2,8
 18881  0082D6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18882  0082D8  26D9               	addwf	fsr2l,f,c
 18883  0082DA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18884  0082DC  22DA               	addwfc	fsr2h,f,c
 18885  0082DE  0E00               	movlw	0
 18886  0082E0  6EDE               	movwf	postinc2,c
 18887  0082E2  0E00               	movlw	0
 18888  0082E4  6EDD               	movwf	postdec2,c
 18889                           
 18890                           ; BSR set to: 0
 18891                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18892  0082E6  EE20 F00E          	lfsr	2,14
 18893  0082EA  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18894  0082EC  26D9               	addwf	fsr2l,f,c
 18895  0082EE  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18896  0082F0  22DA               	addwfc	fsr2h,f,c
 18897  0082F2  0E02               	movlw	2
 18898  0082F4  6EDF               	movwf	indf2,c
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18902  0082F6  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18903                           
 18904                           ; BSR set to: 0
 18905  0082F8  0012               	return		;funcret
 18906  0082FA                     __end_of_DecryptPacket_12BIT:
 18907                           	callstack 0
 18908                           
 18909 ;; *************** function _readInputs *****************
 18910 ;; Defined at:
 18911 ;;		line 528 in file "inputs_MC50.c"
 18912 ;; Parameters:    Size  Location     Type
 18913 ;;		None
 18914 ;; Auto vars:     Size  Location     Type
 18915 ;;		None
 18916 ;; Return value:  Size  Location     Type
 18917 ;;                  1    wreg      void 
 18918 ;; Registers used:
 18919 ;;		wreg, status,2, status,0
 18920 ;; Tracked objects:
 18921 ;;		On entry : 3F/1
 18922 ;;		On exit  : 3E/0
 18923 ;;		Unchanged: 0/0
 18924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18929 ;;Total ram usage:        0 bytes
 18930 ;; Hardware stack levels used: 1
 18931 ;; Hardware stack levels required when called: 4
 18932 ;; This function calls:
 18933 ;;		Nothing
 18934 ;; This function is called by:
 18935 ;;		_main
 18936 ;; This function uses a non-reentrant model
 18937 ;;
 18938                           
 18939                           	psect	text68
 18940  0074A8                     __ptext68:
 18941                           	callstack 0
 18942  0074A8                     _readInputs:
 18943                           	callstack 26
 18944                           
 18945                           ; BSR set to: 1
 18946                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18947                           
 18948                           ; BSR set to: 0
 18949                           ;incstack = 0
 18950  0074A8  0100               	movlb	0	; () banked
 18951  0074AA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18952  0074AC  A4D8               	btfss	status,2,c
 18953  0074AE  D006               	goto	l24798
 18954                           
 18955                           ; BSR set to: 0
 18956  0074B0  0E00               	movlw	0
 18957  0074B2  B28D               	btfsc	141,1,c	;volatile
 18958  0074B4  0E01               	movlw	1
 18959  0074B6  0101               	movlb	1	; () banked
 18960  0074B8  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18961  0074BA  D005               	goto	l24800
 18962  0074BC                     l24798:
 18963                           
 18964                           ; BSR set to: 0
 18965  0074BC  0E00               	movlw	0
 18966  0074BE  B48D               	btfsc	141,2,c	;volatile
 18967  0074C0  0E01               	movlw	1
 18968  0074C2  0101               	movlb	1	; () banked
 18969  0074C4  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18970  0074C6                     l24800:
 18971                           
 18972                           ; BSR set to: 1
 18973                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18974  0074C6  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18975  0074C8  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18976  0074CA  A4D8               	btfss	status,2,c
 18977  0074CC  D002               	goto	l1731
 18978                           
 18979                           ; BSR set to: 1
 18980                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18981  0074CE  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18982                           
 18983                           ;inputs_MC50.c: 544:     }
 18984  0074D0  D004               	goto	l1732
 18985  0074D2                     l1731:
 18986                           
 18987                           ; BSR set to: 1
 18988                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18989  0074D2  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 18990                           
 18991                           ; BSR set to: 1
 18992                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 18993  0074D6  0E00               	movlw	0
 18994  0074D8  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 18995  0074DA                     l1732:
 18996                           
 18997                           ; BSR set to: 1
 18998                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 18999  0074DA  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19000  0074DC  A4D8               	btfss	status,2,c
 19001                           
 19002                           ; BSR set to: 1
 19003                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19004  0074DE  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19005                           
 19006                           ; BSR set to: 1
 19007                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19008  0074E2  0100               	movlb	0	; () banked
 19009  0074E4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19010  0074E6  A4D8               	btfss	status,2,c
 19011  0074E8  D006               	goto	l24812
 19012                           
 19013                           ; BSR set to: 0
 19014  0074EA  0E00               	movlw	0
 19015  0074EC  B48D               	btfsc	141,2,c	;volatile
 19016  0074EE  0E01               	movlw	1
 19017  0074F0  0101               	movlb	1	; () banked
 19018  0074F2  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19019  0074F4  D005               	goto	l24814
 19020  0074F6                     l24812:
 19021                           
 19022                           ; BSR set to: 0
 19023  0074F6  0E00               	movlw	0
 19024  0074F8  B28D               	btfsc	141,1,c	;volatile
 19025  0074FA  0E01               	movlw	1
 19026  0074FC  0101               	movlb	1	; () banked
 19027  0074FE  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19028  007500                     l24814:
 19029                           
 19030                           ; BSR set to: 1
 19031                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19032  007500  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19033  007502  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19034  007504  A4D8               	btfss	status,2,c
 19035  007506  D002               	goto	l1736
 19036                           
 19037                           ; BSR set to: 1
 19038                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19039  007508  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19040                           
 19041                           ;inputs_MC50.c: 573:     }
 19042  00750A  D004               	goto	l1737
 19043  00750C                     l1736:
 19044                           
 19045                           ; BSR set to: 1
 19046                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19047  00750C  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19048                           
 19049                           ; BSR set to: 1
 19050                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19051  007510  0E00               	movlw	0
 19052  007512  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19053  007514                     l1737:
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19057  007514  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19058  007516  A4D8               	btfss	status,2,c
 19059                           
 19060                           ; BSR set to: 1
 19061                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19062  007518  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19063                           
 19064                           ; BSR set to: 1
 19065                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19066  00751C  0E00               	movlw	0
 19067  00751E  B88D               	btfsc	141,4,c	;volatile
 19068  007520  0E01               	movlw	1
 19069  007522  6F6A               	movwf	_security& (0+255),b	;volatile
 19070                           
 19071                           ; BSR set to: 1
 19072                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19073  007524  516A               	movf	_security& (0+255),w,b	;volatile
 19074  007526  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19075  007528  A4D8               	btfss	status,2,c
 19076  00752A  D002               	goto	l1739
 19077                           
 19078                           ; BSR set to: 1
 19079                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19080  00752C  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19081                           
 19082                           ;inputs_MC50.c: 597:     }
 19083  00752E  D004               	goto	l1740
 19084  007530                     l1739:
 19085                           
 19086                           ; BSR set to: 1
 19087                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19088  007530  C16A  F16B         	movff	_security,_security+1	;volatile
 19089                           
 19090                           ; BSR set to: 1
 19091                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19092  007534  0E00               	movlw	0
 19093  007536  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19094  007538                     l1740:
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19098  007538  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19099  00753A  A4D8               	btfss	status,2,c
 19100                           
 19101                           ; BSR set to: 1
 19102                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19103  00753C  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19104                           
 19105                           ; BSR set to: 1
 19106                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19107  007540  0E00               	movlw	0
 19108  007542  BA8D               	btfsc	141,5,c	;volatile
 19109  007544  0E01               	movlw	1
 19110  007546  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19111                           
 19112                           ; BSR set to: 1
 19113                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19114  007548  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19115  00754A  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19116  00754C  A4D8               	btfss	status,2,c
 19117  00754E  D002               	goto	l1742
 19118                           
 19119                           ; BSR set to: 1
 19120                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19121  007550  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19122                           
 19123                           ;inputs_MC50.c: 619:     }
 19124  007552  D004               	goto	l1743
 19125  007554                     l1742:
 19126                           
 19127                           ; BSR set to: 1
 19128                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19129  007554  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19130                           
 19131                           ; BSR set to: 1
 19132                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19133  007558  0E00               	movlw	0
 19134  00755A  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19135  00755C                     l1743:
 19136                           
 19137                           ; BSR set to: 1
 19138                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19139  00755C  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19140  00755E  A4D8               	btfss	status,2,c
 19141                           
 19142                           ; BSR set to: 1
 19143                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19144  007560  C16D  F170         	movff	_security+3,_security+6	;volatile
 19145                           
 19146                           ; BSR set to: 1
 19147                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19148  007564  0E00               	movlw	0
 19149  007566  BC8D               	btfsc	141,6,c	;volatile
 19150  007568  0E01               	movlw	1
 19151  00756A  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19152                           
 19153                           ; BSR set to: 1
 19154                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19155  00756C  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19156  00756E  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19157  007570  A4D8               	btfss	status,2,c
 19158  007572  D002               	goto	l1745
 19159                           
 19160                           ; BSR set to: 1
 19161                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19162  007574  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19163                           
 19164                           ;inputs_MC50.c: 640:     }
 19165  007576  D004               	goto	l1746
 19166  007578                     l1745:
 19167                           
 19168                           ; BSR set to: 1
 19169                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19170  007578  C171  F172         	movff	_security+7,_security+8	;volatile
 19171                           
 19172                           ; BSR set to: 1
 19173                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19174  00757C  0E00               	movlw	0
 19175  00757E  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19176  007580                     l1746:
 19177                           
 19178                           ; BSR set to: 1
 19179                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19180  007580  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19181  007582  A4D8               	btfss	status,2,c
 19182                           
 19183                           ; BSR set to: 1
 19184                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19185  007584  C171  F174         	movff	_security+7,_security+10	;volatile
 19186                           
 19187                           ; BSR set to: 1
 19188                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19189  007588  0100               	movlb	0	; () banked
 19190  00758A  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19191  00758C  A4D8               	btfss	status,2,c
 19192  00758E  D00D               	goto	l1748
 19193                           
 19194                           ; BSR set to: 0
 19195                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19196  007590  0101               	movlb	1	; () banked
 19197  007592  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19198  007594  A4D8               	btfss	status,2,c
 19199  007596  D006               	goto	l24860
 19200                           
 19201                           ; BSR set to: 1
 19202  007598  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19203  00759A  A4D8               	btfss	status,2,c
 19204  00759C  D003               	goto	l24860
 19205                           
 19206                           ; BSR set to: 1
 19207                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19208  00759E  0E00               	movlw	0
 19209  0075A0  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19210                           
 19211                           ;inputs_MC50.c: 660:         }
 19212  0075A2  0012               	return	
 19213  0075A4                     l24860:
 19214                           
 19215                           ; BSR set to: 1
 19216                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19217  0075A4  0E01               	movlw	1
 19218  0075A6  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19219  0075A8  0012               	return	
 19220  0075AA                     l1748:
 19221                           
 19222                           ; BSR set to: 0
 19223                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19224  0075AA  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19225  0075AE  0012               	return		;funcret
 19226  0075B0                     __end_of_readInputs:
 19227                           	callstack 0
 19228                           
 19229 ;; *************** function _loadNVM_VarSystem *****************
 19230 ;; Defined at:
 19231 ;;		line 151 in file "controlMemory_MC50.c"
 19232 ;; Parameters:    Size  Location     Type
 19233 ;;		None
 19234 ;; Auto vars:     Size  Location     Type
 19235 ;;		None
 19236 ;; Return value:  Size  Location     Type
 19237 ;;                  1    wreg      void 
 19238 ;; Registers used:
 19239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19240 ;; Tracked objects:
 19241 ;;		On entry : 3F/0
 19242 ;;		On exit  : 0/0
 19243 ;;		Unchanged: 0/0
 19244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19249 ;;Total ram usage:        0 bytes
 19250 ;; Hardware stack levels used: 1
 19251 ;; Hardware stack levels required when called: 15
 19252 ;; This function calls:
 19253 ;;		_I2C1_Read1ByteRegister
 19254 ;;		_ResetDefaultMemory
 19255 ;;		_SaveNVM_VarSystem
 19256 ;;		_checkNVM_VarSystem
 19257 ;;		_i2c_readDataBlock
 19258 ;; This function is called by:
 19259 ;;		_main
 19260 ;; This function uses a non-reentrant model
 19261 ;;
 19262                           
 19263                           	psect	text69
 19264  006F10                     __ptext69:
 19265                           	callstack 0
 19266  006F10                     _loadNVM_VarSystem:
 19267                           	callstack 15
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;controlMemory_MC50.c: 153:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19271                           
 19272                           ;incstack = 0
 19273  006F10  0E00               	movlw	0
 19274  006F12  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19275  006F14  0E50               	movlw	80
 19276  006F16  ECAB  F047         	call	_I2C1_Read1ByteRegister
 19277  006F1A  0AFF               	xorlw	255
 19278  006F1C  A4D8               	btfss	status,2,c
 19279  006F1E  D04C               	goto	l24664
 19280  006F20  0E10               	movlw	16
 19281  006F22  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19282  006F24  0E50               	movlw	80
 19283  006F26  ECAB  F047         	call	_I2C1_Read1ByteRegister
 19284  006F2A  0AFF               	xorlw	255
 19285  006F2C  A4D8               	btfss	status,2,c
 19286  006F2E  D044               	goto	l24664
 19287                           
 19288                           ;controlMemory_MC50.c: 154:     {;controlMemory_MC50.c: 155:         ResetDefaultMemory(
      +                          SC);
 19289  006F30  0E00               	movlw	0
 19290  006F32  EC07  F034         	call	_ResetDefaultMemory
 19291                           
 19292                           ;controlMemory_MC50.c: 156:         var_sys_NVM.learningTimeToClose = 0;
 19293  006F36  0E00               	movlw	0
 19294  006F38  0100               	movlb	0	; () banked
 19295  006F3A  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19296  006F3C  0E00               	movlw	0
 19297  006F3E  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19298  006F40  0E00               	movlw	0
 19299  006F42  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19300  006F44  0E00               	movlw	0
 19301  006F46  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19302                           
 19303                           ; BSR set to: 0
 19304                           ;controlMemory_MC50.c: 157:         var_sys_NVM.learningTimeToOpen = 0;
 19305  006F48  0E00               	movlw	0
 19306  006F4A  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19307  006F4C  0E00               	movlw	0
 19308  006F4E  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19309  006F50  0E00               	movlw	0
 19310  006F52  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19311  006F54  0E00               	movlw	0
 19312  006F56  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19313                           
 19314                           ; BSR set to: 0
 19315                           ;controlMemory_MC50.c: 158:         var_sys_NVM.learningCurrentNormalClose = 0;
 19316  006F58  0E00               	movlw	0
 19317  006F5A  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19318  006F5C  0E00               	movlw	0
 19319  006F5E  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19320                           
 19321                           ; BSR set to: 0
 19322                           ;controlMemory_MC50.c: 159:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19323  006F60  0E00               	movlw	0
 19324  006F62  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19325  006F64  0E00               	movlw	0
 19326  006F66  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19327                           
 19328                           ; BSR set to: 0
 19329                           ;controlMemory_MC50.c: 160:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19330  006F68  0E00               	movlw	0
 19331  006F6A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19332  006F6C  0E00               	movlw	0
 19333  006F6E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19334  006F70  0E00               	movlw	0
 19335  006F72  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19336  006F74  0E00               	movlw	0
 19337  006F76  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19338                           
 19339                           ; BSR set to: 0
 19340                           ;controlMemory_MC50.c: 161:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19341  006F78  0E00               	movlw	0
 19342  006F7A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19343  006F7C  0E00               	movlw	0
 19344  006F7E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19345  006F80  0E00               	movlw	0
 19346  006F82  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19347  006F84  0E00               	movlw	0
 19348  006F86  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19349                           
 19350                           ;controlMemory_MC50.c: 162:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19351  006F88  0E03               	movlw	3
 19352  006F8A  EC5D  F04B         	call	_SaveNVM_VarSystem
 19353                           
 19354                           ;controlMemory_MC50.c: 163:         var_sys_NVM.positionRemotesFull = 0;
 19355  006F8E  0E00               	movlw	0
 19356  006F90  0100               	movlb	0	; () banked
 19357  006F92  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;controlMemory_MC50.c: 164:         var_sys_NVM.positionRemotesWalk = 0;
 19361  006F94  0E00               	movlw	0
 19362  006F96  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19363                           
 19364                           ; BSR set to: 0
 19365                           ;controlMemory_MC50.c: 165:         var_sys_NVM.OnlyRollingCode = NO;
 19366  006F98  0E00               	movlw	0
 19367  006F9A  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;controlMemory_MC50.c: 166:         var_sys_NVM.counterMoves = 0;
 19371  006F9C  0E00               	movlw	0
 19372  006F9E  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19373  006FA0  0E00               	movlw	0
 19374  006FA2  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19375  006FA4  0E00               	movlw	0
 19376  006FA6  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19377  006FA8  0E00               	movlw	0
 19378  006FAA  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19379                           
 19380                           ;controlMemory_MC50.c: 167:        SaveNVM_VarSystem(pageMemoryCounters);
 19381  006FAC  0E02               	movlw	2
 19382  006FAE  EC5D  F04B         	call	_SaveNVM_VarSystem
 19383                           
 19384                           ;controlMemory_MC50.c: 169:          var_sys_NVM.TypeofMotor = 0;
 19385  006FB2  0E00               	movlw	0
 19386  006FB4  0100               	movlb	0	; () banked
 19387  006FB6  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19388  006FB8                     l24664:
 19389                           
 19390                           ;controlMemory_MC50.c: 172:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19391  006FB8  0E00               	movlw	0
 19392  006FBA  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19393  006FBC  0E00               	movlw	0
 19394  006FBE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19395  006FC0  0E98               	movlw	low _var_sys_NVM
 19396  006FC2  6E24               	movwf	i2c_readDataBlock@data^0,c
 19397  006FC4  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19398  006FC6  0E00               	movlw	0
 19399  006FC8  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19400  006FCA  0E10               	movlw	16
 19401  006FCC  6E26               	movwf	i2c_readDataBlock@len^0,c
 19402  006FCE  0E50               	movlw	80
 19403  006FD0  ECC7  F044         	call	_i2c_readDataBlock
 19404                           
 19405                           ;controlMemory_MC50.c: 173:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19406  006FD4  0E00               	movlw	0
 19407  006FD6  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19408  006FD8  0E10               	movlw	16
 19409  006FDA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19410  006FDC  0EA8               	movlw	low (_var_sys_NVM+16)
 19411  006FDE  6E24               	movwf	i2c_readDataBlock@data^0,c
 19412  006FE0  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19413  006FE2  0E00               	movlw	0
 19414  006FE4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19415  006FE6  0E10               	movlw	16
 19416  006FE8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19417  006FEA  0E50               	movlw	80
 19418  006FEC  ECC7  F044         	call	_i2c_readDataBlock
 19419                           
 19420                           ;controlMemory_MC50.c: 174:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19421  006FF0  0E00               	movlw	0
 19422  006FF2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19423  006FF4  0E20               	movlw	32
 19424  006FF6  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19425  006FF8  0EB8               	movlw	low (_var_sys_NVM+32)
 19426  006FFA  6E24               	movwf	i2c_readDataBlock@data^0,c
 19427  006FFC  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19428  006FFE  0E00               	movlw	0
 19429  007000  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19430  007002  0E10               	movlw	16
 19431  007004  6E26               	movwf	i2c_readDataBlock@len^0,c
 19432  007006  0E50               	movlw	80
 19433  007008  ECC7  F044         	call	_i2c_readDataBlock
 19434                           
 19435                           ;controlMemory_MC50.c: 175:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19436  00700C  0E00               	movlw	0
 19437  00700E  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19438  007010  0E30               	movlw	48
 19439  007012  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19440  007014  0EC8               	movlw	low (_var_sys_NVM+48)
 19441  007016  6E24               	movwf	i2c_readDataBlock@data^0,c
 19442  007018  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19443  00701A  0E00               	movlw	0
 19444  00701C  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19445  00701E  0E10               	movlw	16
 19446  007020  6E26               	movwf	i2c_readDataBlock@len^0,c
 19447  007022  0E50               	movlw	80
 19448  007024  ECC7  F044         	call	_i2c_readDataBlock
 19449                           
 19450                           ;controlMemory_MC50.c: 178:     checkNVM_VarSystem();
 19451  007028  EC04  F030         	call	_checkNVM_VarSystem	;wreg free
 19452                           
 19453                           ;controlMemory_MC50.c: 180:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19454  00702C  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19455  007030  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19456  007034  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19457  007038  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19458  00703C  0012               	return		;funcret
 19459  00703E                     __end_of_loadNVM_VarSystem:
 19460                           	callstack 0
 19461                           
 19462 ;; *************** function _checkNVM_VarSystem *****************
 19463 ;; Defined at:
 19464 ;;		line 326 in file "controlMemory_MC50.c"
 19465 ;; Parameters:    Size  Location     Type
 19466 ;;		None
 19467 ;; Auto vars:     Size  Location     Type
 19468 ;;  saveParam       1   57[COMRAM] unsigned char 
 19469 ;; Return value:  Size  Location     Type
 19470 ;;                  1    wreg      void 
 19471 ;; Registers used:
 19472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19473 ;; Tracked objects:
 19474 ;;		On entry : 0/2
 19475 ;;		On exit  : 0/0
 19476 ;;		Unchanged: 0/0
 19477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19482 ;;Total ram usage:        1 bytes
 19483 ;; Hardware stack levels used: 1
 19484 ;; Hardware stack levels required when called: 14
 19485 ;; This function calls:
 19486 ;;		_SaveNVM_VarSystem
 19487 ;; This function is called by:
 19488 ;;		_loadNVM_VarSystem
 19489 ;; This function uses a non-reentrant model
 19490 ;;
 19491                           
 19492                           	psect	text70
 19493  006008                     __ptext70:
 19494                           	callstack 0
 19495  006008                     _checkNVM_VarSystem:
 19496                           	callstack 15
 19497                           
 19498                           ;controlMemory_MC50.c: 328:     char saveParam;;controlMemory_MC50.c: 331:     saveParam
      +                           = 0;
 19499                           
 19500                           ;incstack = 0
 19501  006008  0E00               	movlw	0
 19502  00600A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19503                           
 19504                           ;controlMemory_MC50.c: 339:     if ( var_sys_NVM.decelarationOpen>45 )
 19505  00600C  0E2D               	movlw	45
 19506  00600E  0100               	movlb	0	; () banked
 19507  006010  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19508  006012  D004               	goto	l22792
 19509                           
 19510                           ; BSR set to: 0
 19511                           ;controlMemory_MC50.c: 340:     {;controlMemory_MC50.c: 342:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19512  006014  0E03               	movlw	3
 19513  006016  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19514                           
 19515                           ;controlMemory_MC50.c: 343:         saveParam=1;
 19516  006018  0E01               	movlw	1
 19517  00601A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19518  00601C                     l22792:
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;controlMemory_MC50.c: 346:     if ( var_sys_NVM.decelarationClose>45 )
 19522  00601C  0E2D               	movlw	45
 19523  00601E  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19524  006020  D004               	goto	l1495
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;controlMemory_MC50.c: 347:     {;controlMemory_MC50.c: 349:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19528  006022  0E03               	movlw	3
 19529  006024  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19530                           
 19531                           ;controlMemory_MC50.c: 350:         saveParam=1;
 19532  006026  0E01               	movlw	1
 19533  006028  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19534  00602A                     l1495:
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;controlMemory_MC50.c: 353:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19538  00602A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19539  00602C  B4D8               	btfsc	status,2,c
 19540  00602E  D003               	goto	u26290
 19541                           
 19542                           ; BSR set to: 0
 19543  006030  0E09               	movlw	9
 19544  006032  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19545  006034  D004               	goto	l22800
 19546  006036                     u26290:
 19547                           
 19548                           ; BSR set to: 0
 19549                           ;controlMemory_MC50.c: 354:     {;controlMemory_MC50.c: 356:         var_sys_NVM.motorPo
      +                          wer = 9;
 19550  006036  0E09               	movlw	9
 19551  006038  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19552                           
 19553                           ;controlMemory_MC50.c: 357:         saveParam=1;
 19554  00603A  0E01               	movlw	1
 19555  00603C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19556  00603E                     l22800:
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;controlMemory_MC50.c: 360:     if ( var_sys_NVM.motorSensitivity>9 )
 19560  00603E  0E09               	movlw	9
 19561  006040  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19562  006042  D004               	goto	l22804
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;controlMemory_MC50.c: 361:     {;controlMemory_MC50.c: 363:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19566  006044  0E00               	movlw	0
 19567  006046  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19568                           
 19569                           ;controlMemory_MC50.c: 364:         saveParam=1;
 19570  006048  0E01               	movlw	1
 19571  00604A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19572  00604C                     l22804:
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;controlMemory_MC50.c: 367:     if ( var_sys_NVM.walkTime>99 )
 19576  00604C  0E63               	movlw	99
 19577  00604E  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19578  006050  D004               	goto	l22808
 19579                           
 19580                           ; BSR set to: 0
 19581                           ;controlMemory_MC50.c: 368:     {;controlMemory_MC50.c: 370:         var_sys_NVM.walkTim
      +                          e = 10;
 19582  006052  0E0A               	movlw	10
 19583  006054  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19584                           
 19585                           ;controlMemory_MC50.c: 371:         saveParam=1;
 19586  006056  0E01               	movlw	1
 19587  006058  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19588  00605A                     l22808:
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;controlMemory_MC50.c: 374:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19592  00605A  0E63               	movlw	99
 19593  00605C  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19594  00605E  D004               	goto	l22812
 19595                           
 19596                           ; BSR set to: 0
 19597                           ;controlMemory_MC50.c: 375:     {;controlMemory_MC50.c: 377:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19598  006060  0E00               	movlw	0
 19599  006062  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19600                           
 19601                           ;controlMemory_MC50.c: 378:         saveParam=1;
 19602  006064  0E01               	movlw	1
 19603  006066  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19604  006068                     l22812:
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;controlMemory_MC50.c: 381:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19608  006068  0E63               	movlw	99
 19609  00606A  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19610  00606C  D004               	goto	l22816
 19611                           
 19612                           ; BSR set to: 0
 19613                           ;controlMemory_MC50.c: 382:     {;controlMemory_MC50.c: 384:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19614  00606E  0E00               	movlw	0
 19615  006070  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19616                           
 19617                           ;controlMemory_MC50.c: 385:         saveParam=1;
 19618  006072  0E01               	movlw	1
 19619  006074  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19620  006076                     l22816:
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;controlMemory_MC50.c: 388:     if ( var_sys_NVM.photoCellIsON>1 )
 19624  006076  0E01               	movlw	1
 19625  006078  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19626  00607A  D004               	goto	l22820
 19627                           
 19628                           ; BSR set to: 0
 19629                           ;controlMemory_MC50.c: 389:     {;controlMemory_MC50.c: 391:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19630  00607C  0E00               	movlw	0
 19631  00607E  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19632                           
 19633                           ;controlMemory_MC50.c: 392:         saveParam=1;
 19634  006080  0E01               	movlw	1
 19635  006082  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19636  006084                     l22820:
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;controlMemory_MC50.c: 395:     if ( var_sys_NVM.photoCellInOpen>1 )
 19640  006084  0E01               	movlw	1
 19641  006086  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19642  006088  D004               	goto	l22824
 19643                           
 19644                           ; BSR set to: 0
 19645                           ;controlMemory_MC50.c: 396:     {;controlMemory_MC50.c: 398:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19646  00608A  0E00               	movlw	0
 19647  00608C  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19648                           
 19649                           ;controlMemory_MC50.c: 399:         saveParam=1;
 19650  00608E  0E01               	movlw	1
 19651  006090  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19652  006092                     l22824:
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;controlMemory_MC50.c: 402:     if ( var_sys_NVM.securityBandIsON>1 )
 19656  006092  0E01               	movlw	1
 19657  006094  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19658  006096  D004               	goto	l22828
 19659                           
 19660                           ; BSR set to: 0
 19661                           ;controlMemory_MC50.c: 403:     {;controlMemory_MC50.c: 405:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19662  006098  0E00               	movlw	0
 19663  00609A  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19664                           
 19665                           ;controlMemory_MC50.c: 406:         saveParam=1;
 19666  00609C  0E01               	movlw	1
 19667  00609E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19668  0060A0                     l22828:
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;controlMemory_MC50.c: 409:     if ( var_sys_NVM.securityBandType>1 )
 19672  0060A0  0E01               	movlw	1
 19673  0060A2  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19674  0060A4  D004               	goto	l22832
 19675                           
 19676                           ; BSR set to: 0
 19677                           ;controlMemory_MC50.c: 410:     {;controlMemory_MC50.c: 412:         var_sys_NVM.securit
      +                          yBandType = 1;
 19678  0060A6  0E01               	movlw	1
 19679  0060A8  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19680                           
 19681                           ;controlMemory_MC50.c: 413:         saveParam=1;
 19682  0060AA  0E01               	movlw	1
 19683  0060AC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19684  0060AE                     l22832:
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;controlMemory_MC50.c: 416:     if ( var_sys_NVM.securityBandInOpen>1 )
 19688  0060AE  0E01               	movlw	1
 19689  0060B0  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19690  0060B2  D004               	goto	l22836
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;controlMemory_MC50.c: 417:     {;controlMemory_MC50.c: 419:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19694  0060B4  0E00               	movlw	0
 19695  0060B6  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19696                           
 19697                           ;controlMemory_MC50.c: 420:         saveParam=1;
 19698  0060B8  0E01               	movlw	1
 19699  0060BA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19700  0060BC                     l22836:
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;controlMemory_MC50.c: 423:     if ( var_sys_NVM.operationMode>2 )
 19704  0060BC  0E02               	movlw	2
 19705  0060BE  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19706  0060C0  D004               	goto	l22840
 19707                           
 19708                           ; BSR set to: 0
 19709                           ;controlMemory_MC50.c: 424:     {;controlMemory_MC50.c: 426:         var_sys_NVM.operati
      +                          onMode = 0;
 19710  0060C2  0E00               	movlw	0
 19711  0060C4  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19712                           
 19713                           ;controlMemory_MC50.c: 427:         saveParam=1;
 19714  0060C6  0E01               	movlw	1
 19715  0060C8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19716  0060CA                     l22840:
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;controlMemory_MC50.c: 430:     if ( var_sys_NVM.flashLightMode>3 )
 19720  0060CA  0E03               	movlw	3
 19721  0060CC  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19722  0060CE  D004               	goto	l22844
 19723                           
 19724                           ; BSR set to: 0
 19725                           ;controlMemory_MC50.c: 431:     {;controlMemory_MC50.c: 433:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19726  0060D0  0E00               	movlw	0
 19727  0060D2  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19728                           
 19729                           ;controlMemory_MC50.c: 434:         saveParam=1;
 19730  0060D4  0E01               	movlw	1
 19731  0060D6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19732  0060D8                     l22844:
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;controlMemory_MC50.c: 437:     if ( var_sys_NVM.programmingDistance>1 )
 19736  0060D8  0E01               	movlw	1
 19737  0060DA  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19738  0060DC  D004               	goto	l22848
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;controlMemory_MC50.c: 438:     {;controlMemory_MC50.c: 440:         var_sys_NVM.program
      +                          mingDistance = 0;
 19742  0060DE  0E00               	movlw	0
 19743  0060E0  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19744                           
 19745                           ;controlMemory_MC50.c: 441:         saveParam=1;
 19746  0060E2  0E01               	movlw	1
 19747  0060E4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19748  0060E6                     l22848:
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;controlMemory_MC50.c: 444:     if ( var_sys_NVM.decelarationSensivity>9 )
 19752  0060E6  0E09               	movlw	9
 19753  0060E8  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19754  0060EA  D004               	goto	l22852
 19755                           
 19756                           ; BSR set to: 0
 19757                           ;controlMemory_MC50.c: 445:     {;controlMemory_MC50.c: 447:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19758  0060EC  0E00               	movlw	0
 19759  0060EE  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19760                           
 19761                           ;controlMemory_MC50.c: 448:         saveParam=1;
 19762  0060F0  0E01               	movlw	1
 19763  0060F2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19764  0060F4                     l22852:
 19765                           
 19766                           ; BSR set to: 0
 19767                           ;controlMemory_MC50.c: 453:     if ( var_sys_NVM.homemPresente>2 )
 19768  0060F4  0E02               	movlw	2
 19769  0060F6  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19770  0060F8  D004               	goto	l22856
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;controlMemory_MC50.c: 454:     {;controlMemory_MC50.c: 456:         var_sys_NVM.homemPr
      +                          esente = 0;
 19774  0060FA  0E00               	movlw	0
 19775  0060FC  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19776                           
 19777                           ;controlMemory_MC50.c: 457:         saveParam=1;
 19778  0060FE  0E01               	movlw	1
 19779  006100  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19780  006102                     l22856:
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;controlMemory_MC50.c: 460:     if ( var_sys_NVM.logicDigital>1 )
 19784  006102  0E01               	movlw	1
 19785  006104  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19786  006106  D004               	goto	l22860
 19787                           
 19788                           ; BSR set to: 0
 19789                           ;controlMemory_MC50.c: 461:     {;controlMemory_MC50.c: 463:         var_sys_NVM.logicDi
      +                          gital = 0;
 19790  006108  0E00               	movlw	0
 19791  00610A  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19792                           
 19793                           ;controlMemory_MC50.c: 464:         saveParam=1;
 19794  00610C  0E01               	movlw	1
 19795  00610E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19796  006110                     l22860:
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;controlMemory_MC50.c: 467:     if ( var_sys_NVM.softStart>9 )
 19800  006110  0E09               	movlw	9
 19801  006112  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19802  006114  D004               	goto	l22864
 19803                           
 19804                           ; BSR set to: 0
 19805                           ;controlMemory_MC50.c: 468:     {;controlMemory_MC50.c: 470:         var_sys_NVM.softSta
      +                          rt = 0;
 19806  006116  0E00               	movlw	0
 19807  006118  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19808                           
 19809                           ;controlMemory_MC50.c: 471:         saveParam=1;
 19810  00611A  0E01               	movlw	1
 19811  00611C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19812  00611E                     l22864:
 19813                           
 19814                           ; BSR set to: 0
 19815                           ;controlMemory_MC50.c: 475:     if ( var_sys_NVM.ligthTime>99 )
 19816  00611E  0E63               	movlw	99
 19817  006120  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19818  006122  D004               	goto	l22868
 19819                           
 19820                           ; BSR set to: 0
 19821                           ;controlMemory_MC50.c: 476:     {;controlMemory_MC50.c: 478:         var_sys_NVM.ligthTi
      +                          me = 3;
 19822  006124  0E03               	movlw	3
 19823  006126  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19824                           
 19825                           ;controlMemory_MC50.c: 479:         saveParam=1;
 19826  006128  0E01               	movlw	1
 19827  00612A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19828  00612C                     l22868:
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;controlMemory_MC50.c: 482:     if ( var_sys_NVM.folow_me>9 )
 19832  00612C  0E09               	movlw	9
 19833  00612E  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19834  006130  D004               	goto	l22872
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;controlMemory_MC50.c: 483:     {;controlMemory_MC50.c: 485:         var_sys_NVM.folow_m
      +                          e = 0;
 19838  006132  0E00               	movlw	0
 19839  006134  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19840                           
 19841                           ;controlMemory_MC50.c: 486:         saveParam=1;
 19842  006136  0E01               	movlw	1
 19843  006138  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19844  00613A                     l22872:
 19845                           
 19846                           ; BSR set to: 0
 19847                           ;controlMemory_MC50.c: 491:     if ( var_sys_NVM.electricBrake>1 )
 19848  00613A  0E01               	movlw	1
 19849  00613C  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19850  00613E  D004               	goto	l1517
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;controlMemory_MC50.c: 492:     {;controlMemory_MC50.c: 494:         var_sys_NVM.electri
      +                          cBrake = 0;
 19854  006140  0E00               	movlw	0
 19855  006142  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19856                           
 19857                           ;controlMemory_MC50.c: 495:         saveParam=1;
 19858  006144  0E01               	movlw	1
 19859  006146  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19860  006148                     l1517:
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;controlMemory_MC50.c: 498:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19864  006148  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19865  00614A  B4D8               	btfsc	status,2,c
 19866  00614C  D003               	goto	u26500
 19867                           
 19868                           ; BSR set to: 0
 19869  00614E  0E09               	movlw	9
 19870  006150  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19871  006152  D004               	goto	l22880
 19872  006154                     u26500:
 19873                           
 19874                           ; BSR set to: 0
 19875                           ;controlMemory_MC50.c: 499:     {;controlMemory_MC50.c: 501:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19876  006154  0E05               	movlw	5
 19877  006156  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19878                           
 19879                           ;controlMemory_MC50.c: 502:         saveParam=1;
 19880  006158  0E01               	movlw	1
 19881  00615A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19882  00615C                     l22880:
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;controlMemory_MC50.c: 505:     if ( var_sys_NVM.flashRGBMode>3 )
 19886  00615C  0E03               	movlw	3
 19887  00615E  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19888  006160  D004               	goto	l22884
 19889                           
 19890                           ; BSR set to: 0
 19891                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19892  006162  0E03               	movlw	3
 19893  006164  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19894                           
 19895                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19896  006166  0E01               	movlw	1
 19897  006168  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19898  00616A                     l22884:
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.Stopboton > 1 )
 19902  00616A  0E01               	movlw	1
 19903  00616C  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19904  00616E  D004               	goto	l22888
 19905                           
 19906                           ; BSR set to: 0
 19907                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19908  006170  0E00               	movlw	0
 19909  006172  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19910                           
 19911                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19912  006174  0E01               	movlw	1
 19913  006176  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19914  006178                     l22888:
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;controlMemory_MC50.c: 517:         if ( var_sys_NVM.Direction_motor>1 )
 19918  006178  0E01               	movlw	1
 19919  00617A  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19920  00617C  D004               	goto	l22892
 19921                           
 19922                           ; BSR set to: 0
 19923                           ;controlMemory_MC50.c: 518:     {;controlMemory_MC50.c: 520:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19924  00617E  0E01               	movlw	1
 19925  006180  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19926                           
 19927                           ;controlMemory_MC50.c: 521:         saveParam=1;
 19928  006182  0E01               	movlw	1
 19929  006184  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19930  006186                     l22892:
 19931                           
 19932                           ; BSR set to: 0
 19933                           ;controlMemory_MC50.c: 523:         if ( var_sys_NVM.softstop>9 )
 19934  006186  0E09               	movlw	9
 19935  006188  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19936  00618A  D004               	goto	l1524
 19937                           
 19938                           ; BSR set to: 0
 19939                           ;controlMemory_MC50.c: 524:     {;controlMemory_MC50.c: 526:         var_sys_NVM.softsto
      +                          p = 0;
 19940  00618C  0E00               	movlw	0
 19941  00618E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19942                           
 19943                           ;controlMemory_MC50.c: 527:         saveParam=1;
 19944  006190  0E01               	movlw	1
 19945  006192  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19946  006194                     l1524:
 19947                           
 19948                           ; BSR set to: 0
 19949                           ;controlMemory_MC50.c: 552:     if ( saveParam != 0 )
 19950  006194  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19951  006196  B4D8               	btfsc	status,2,c
 19952  006198  0012               	return	
 19953                           
 19954                           ; BSR set to: 0
 19955                           ;controlMemory_MC50.c: 553:     {;controlMemory_MC50.c: 554:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19956  00619A  0E00               	movlw	0
 19957  00619C  EC5D  F04B         	call	_SaveNVM_VarSystem
 19958                           
 19959                           ;controlMemory_MC50.c: 555:         SaveNVM_VarSystem(pageMemoryE);
 19960  0061A0  0E01               	movlw	1
 19961  0061A2  EC5D  F04B         	call	_SaveNVM_VarSystem
 19962  0061A6  0012               	return		;funcret
 19963  0061A8                     __end_of_checkNVM_VarSystem:
 19964                           	callstack 0
 19965                           
 19966 ;; *************** function _ResetDefaultMemory *****************
 19967 ;; Defined at:
 19968 ;;		line 198 in file "controlMemory_MC50.c"
 19969 ;; Parameters:    Size  Location     Type
 19970 ;;  type            1    wreg     unsigned char 
 19971 ;; Auto vars:     Size  Location     Type
 19972 ;;  type            1   57[COMRAM] unsigned char 
 19973 ;; Return value:  Size  Location     Type
 19974 ;;                  1    wreg      void 
 19975 ;; Registers used:
 19976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19977 ;; Tracked objects:
 19978 ;;		On entry : 31/0
 19979 ;;		On exit  : 0/0
 19980 ;;		Unchanged: 0/0
 19981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19986 ;;Total ram usage:        1 bytes
 19987 ;; Hardware stack levels used: 1
 19988 ;; Hardware stack levels required when called: 14
 19989 ;; This function calls:
 19990 ;;		_SaveNVM_VarSystem
 19991 ;; This function is called by:
 19992 ;;		_loadNVM_VarSystem
 19993 ;;		_sm_execute_menuConfiguration
 19994 ;; This function uses a non-reentrant model
 19995 ;;
 19996                           
 19997                           	psect	text71
 19998  00680E                     __ptext71:
 19999                           	callstack 0
 20000  00680E                     _ResetDefaultMemory:
 20001                           	callstack 14
 20002                           
 20003                           ;incstack = 0
 20004                           ;ResetDefaultMemory@type stored from wreg
 20005  00680E  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20006                           
 20007                           ;controlMemory_MC50.c: 198: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 199: {;controlMemory_MC50.c: 202:     var_sys_NVM.decelarationOpen = 3;
 20008  006810  0E03               	movlw	3
 20009  006812  0100               	movlb	0	; () banked
 20010  006814  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20011                           
 20012                           ;controlMemory_MC50.c: 203:     var_sys_NVM.motorPower = 9;
 20013  006816  0E09               	movlw	9
 20014  006818  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20015                           
 20016                           ;controlMemory_MC50.c: 204:     var_sys_NVM.decelarationClose = 3;
 20017  00681A  0E03               	movlw	3
 20018  00681C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20019                           
 20020                           ;controlMemory_MC50.c: 205:     var_sys_NVM.photoCellIsON = 0;
 20021  00681E  0E00               	movlw	0
 20022  006820  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20023                           
 20024                           ;controlMemory_MC50.c: 206:     var_sys_NVM.photoCellInOpen = 0;
 20025  006822  0E00               	movlw	0
 20026  006824  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20027                           
 20028                           ;controlMemory_MC50.c: 207:     var_sys_NVM.securityBandIsON = 0 ;
 20029  006826  0E00               	movlw	0
 20030  006828  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20031                           
 20032                           ;controlMemory_MC50.c: 208:     var_sys_NVM.securityBandType = 1;
 20033  00682A  0E01               	movlw	1
 20034  00682C  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20035                           
 20036                           ;controlMemory_MC50.c: 209:     var_sys_NVM.securityBandInOpen = 0;
 20037  00682E  0E00               	movlw	0
 20038  006830  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20039                           
 20040                           ;controlMemory_MC50.c: 210:     var_sys_NVM.flashLightMode = 0;
 20041  006832  0E00               	movlw	0
 20042  006834  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20043                           
 20044                           ;controlMemory_MC50.c: 211:     var_sys_NVM.programmingDistance = 0;
 20045  006836  0E00               	movlw	0
 20046  006838  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20047                           
 20048                           ;controlMemory_MC50.c: 212:     var_sys_NVM.decelarationSensivity = 0;
 20049  00683A  0E00               	movlw	0
 20050  00683C  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20051                           
 20052                           ;controlMemory_MC50.c: 213:     var_sys_NVM.homemPresente = 0;
 20053  00683E  0E00               	movlw	0
 20054  006840  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20055                           
 20056                           ;controlMemory_MC50.c: 214:     var_sys_NVM.autoTimeWalkClose = 0;
 20057  006842  0E00               	movlw	0
 20058  006844  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20059                           
 20060                           ;controlMemory_MC50.c: 215:     var_sys_NVM.ligthTime = 3;
 20061  006846  0E03               	movlw	3
 20062  006848  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20063                           
 20064                           ;controlMemory_MC50.c: 216:     var_sys_NVM.folow_me = 0;
 20065  00684A  0E00               	movlw	0
 20066  00684C  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20067                           
 20068                           ;controlMemory_MC50.c: 217:     var_sys_NVM.electricBrake = 0;
 20069  00684E  0E00               	movlw	0
 20070  006850  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20071                           
 20072                           ;controlMemory_MC50.c: 218:     var_sys_NVM.autoTimeWalkClose = 0;
 20073  006852  0E00               	movlw	0
 20074  006854  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20075                           
 20076                           ;controlMemory_MC50.c: 219:     var_sys_NVM.Direction_motor = 1 ;
 20077  006856  0E01               	movlw	1
 20078  006858  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20079                           
 20080                           ; BSR set to: 0
 20081                           ;controlMemory_MC50.c: 222:     if (type == SC){
 20082  00685A  503A               	movf	ResetDefaultMemory@type^0,w,c
 20083  00685C  A4D8               	btfss	status,2,c
 20084  00685E  D014               	goto	l21288
 20085                           
 20086                           ; BSR set to: 0
 20087                           ;controlMemory_MC50.c: 224:         var_sys_NVM.motorSensitivity = 0;
 20088  006860  0E00               	movlw	0
 20089  006862  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20090                           
 20091                           ;controlMemory_MC50.c: 225:         var_sys_NVM.logicDigital = 0;
 20092  006864  0E00               	movlw	0
 20093  006866  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20094                           
 20095                           ;controlMemory_MC50.c: 226:         var_sys_NVM.Stopboton = 0;
 20096  006868  0E00               	movlw	0
 20097  00686A  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20098                           
 20099                           ;controlMemory_MC50.c: 227:         var_sys_NVM.autoTimeFullClose = 0;
 20100  00686C  0E00               	movlw	0
 20101  00686E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20102                           
 20103                           ;controlMemory_MC50.c: 228:         var_sys_NVM.operationMode = 0;
 20104  006870  0E00               	movlw	0
 20105  006872  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20106                           
 20107                           ;controlMemory_MC50.c: 229:         var_sys_NVM.velocityDecelaration = 5;
 20108  006874  0E05               	movlw	5
 20109  006876  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20110                           
 20111                           ;controlMemory_MC50.c: 230:         var_sys_NVM.flashRGBMode = 3;
 20112  006878  0E03               	movlw	3
 20113  00687A  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20114                           
 20115                           ;controlMemory_MC50.c: 231:         var_sys_NVM.softstop = 0;
 20116  00687C  0E00               	movlw	0
 20117  00687E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20118                           
 20119                           ;controlMemory_MC50.c: 232:         var_sys_NVM.softStart = 0;
 20120  006880  0E00               	movlw	0
 20121  006882  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20122                           
 20123                           ;controlMemory_MC50.c: 233:         var_sys_NVM.walkTime = 10;
 20124  006884  0E0A               	movlw	10
 20125  006886  D039               	goto	L82
 20126  006888                     l21288:
 20127                           
 20128                           ; BSR set to: 0
 20129  006888  043A               	decf	ResetDefaultMemory@type^0,w,c
 20130  00688A  A4D8               	btfss	status,2,c
 20131  00688C  D01B               	goto	l21292
 20132                           
 20133                           ; BSR set to: 0
 20134                           ;controlMemory_MC50.c: 237:         var_sys_NVM.decelarationClose = 4;
 20135  00688E  0E04               	movlw	4
 20136  006890  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20137                           
 20138                           ;controlMemory_MC50.c: 238:         var_sys_NVM.decelarationOpen = 4;
 20139  006892  0E04               	movlw	4
 20140  006894  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20141                           
 20142                           ;controlMemory_MC50.c: 239:         var_sys_NVM.motorSensitivity = 4;
 20143  006896  0E04               	movlw	4
 20144  006898  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20145                           
 20146                           ;controlMemory_MC50.c: 240:         var_sys_NVM.logicDigital = 1;
 20147  00689A  0E01               	movlw	1
 20148  00689C  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20149                           
 20150                           ;controlMemory_MC50.c: 241:         var_sys_NVM.Stopboton = 1;
 20151  00689E  0E01               	movlw	1
 20152  0068A0  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20153                           
 20154                           ;controlMemory_MC50.c: 242:         var_sys_NVM.autoTimeFullClose = 0;
 20155  0068A2  0E00               	movlw	0
 20156  0068A4  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20157                           
 20158                           ;controlMemory_MC50.c: 243:         var_sys_NVM.operationMode = 0;
 20159  0068A6  0E00               	movlw	0
 20160  0068A8  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20161                           
 20162                           ;controlMemory_MC50.c: 244:         var_sys_NVM.velocityDecelaration = 5;
 20163  0068AA  0E05               	movlw	5
 20164  0068AC  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20165                           
 20166                           ;controlMemory_MC50.c: 245:         var_sys_NVM.flashRGBMode = 3;
 20167  0068AE  0E03               	movlw	3
 20168  0068B0  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20169                           
 20170                           ;controlMemory_MC50.c: 246:         var_sys_NVM.softstop = 0;
 20171  0068B2  0E00               	movlw	0
 20172  0068B4  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20173                           
 20174                           ;controlMemory_MC50.c: 247:         var_sys_NVM.softStart = 5;
 20175  0068B6  0E05               	movlw	5
 20176  0068B8  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20177                           
 20178                           ;controlMemory_MC50.c: 248:         var_sys_NVM.walkTime = 0;
 20179  0068BA  0E00               	movlw	0
 20180  0068BC  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20181                           
 20182                           ;controlMemory_MC50.c: 249:         var_sys_NVM.Direction_motor = 0 ;
 20183  0068BE  0E00               	movlw	0
 20184  0068C0  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20185                           
 20186                           ;controlMemory_MC50.c: 251:     }
 20187  0068C2  D01C               	goto	l21296
 20188  0068C4                     l21292:
 20189                           
 20190                           ; BSR set to: 0
 20191  0068C4  0E02               	movlw	2
 20192  0068C6  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20193  0068C8  A4D8               	btfss	status,2,c
 20194  0068CA  D018               	goto	l21296
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;controlMemory_MC50.c: 253:         var_sys_NVM.decelarationClose = 6;
 20198  0068CC  0E06               	movlw	6
 20199  0068CE  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20200                           
 20201                           ;controlMemory_MC50.c: 254:         var_sys_NVM.decelarationOpen = 2;
 20202  0068D0  0E02               	movlw	2
 20203  0068D2  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20204                           
 20205                           ;controlMemory_MC50.c: 255:         var_sys_NVM.motorSensitivity = 0;
 20206  0068D4  0E00               	movlw	0
 20207  0068D6  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20208                           
 20209                           ;controlMemory_MC50.c: 256:         var_sys_NVM.logicDigital = 0;
 20210  0068D8  0E00               	movlw	0
 20211  0068DA  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20212                           
 20213                           ;controlMemory_MC50.c: 257:         var_sys_NVM.Stopboton = 0;
 20214  0068DC  0E00               	movlw	0
 20215  0068DE  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20216                           
 20217                           ;controlMemory_MC50.c: 258:         var_sys_NVM.autoTimeFullClose = 0;
 20218  0068E0  0E00               	movlw	0
 20219  0068E2  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20220                           
 20221                           ;controlMemory_MC50.c: 259:         var_sys_NVM.operationMode = 2;
 20222  0068E4  0E02               	movlw	2
 20223  0068E6  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20224                           
 20225                           ;controlMemory_MC50.c: 260:         var_sys_NVM.velocityDecelaration = 5;
 20226  0068E8  0E05               	movlw	5
 20227  0068EA  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20228                           
 20229                           ;controlMemory_MC50.c: 261:         var_sys_NVM.flashRGBMode = 1;
 20230  0068EC  0E01               	movlw	1
 20231  0068EE  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20232                           
 20233                           ;controlMemory_MC50.c: 262:         var_sys_NVM.softstop = 5;
 20234  0068F0  0E05               	movlw	5
 20235  0068F2  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20236                           
 20237                           ;controlMemory_MC50.c: 263:         var_sys_NVM.softStart = 0;
 20238  0068F4  0E00               	movlw	0
 20239  0068F6  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20240                           
 20241                           ;controlMemory_MC50.c: 264:         var_sys_NVM.walkTime = 0;
 20242  0068F8  0E00               	movlw	0
 20243  0068FA                     L82:
 20244  0068FA  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20245  0068FC                     l21296:
 20246                           
 20247                           ; BSR set to: 0
 20248                           ;controlMemory_MC50.c: 272:     SaveNVM_VarSystem(pageMemoryE);
 20249  0068FC  0E01               	movlw	1
 20250  0068FE  EC5D  F04B         	call	_SaveNVM_VarSystem
 20251                           
 20252                           ;controlMemory_MC50.c: 273:     SaveNVM_VarSystem(pageMemoryP);
 20253  006902  0E00               	movlw	0
 20254  006904  EC5D  F04B         	call	_SaveNVM_VarSystem
 20255                           
 20256                           ;controlMemory_MC50.c: 278:     var_sys_NVM.learningTimeToClose = 0;
 20257  006908  0E00               	movlw	0
 20258  00690A  0100               	movlb	0	; () banked
 20259  00690C  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20260  00690E  0E00               	movlw	0
 20261  006910  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20262  006912  0E00               	movlw	0
 20263  006914  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20264  006916  0E00               	movlw	0
 20265  006918  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20266                           
 20267                           ;controlMemory_MC50.c: 279:     var_sys_NVM.learningTimeToOpen = 0;
 20268  00691A  0E00               	movlw	0
 20269  00691C  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20270  00691E  0E00               	movlw	0
 20271  006920  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20272  006922  0E00               	movlw	0
 20273  006924  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20274  006926  0E00               	movlw	0
 20275  006928  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20276                           
 20277                           ;controlMemory_MC50.c: 280:     var_sys_NVM.learningCurrentNormalClose = 0;
 20278  00692A  0E00               	movlw	0
 20279  00692C  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20280  00692E  0E00               	movlw	0
 20281  006930  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20282                           
 20283                           ;controlMemory_MC50.c: 281:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20284  006932  0E00               	movlw	0
 20285  006934  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20286  006936  0E00               	movlw	0
 20287  006938  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20288                           
 20289                           ;controlMemory_MC50.c: 282:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20290  00693A  0E00               	movlw	0
 20291  00693C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20292  00693E  0E00               	movlw	0
 20293  006940  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20294  006942  0E00               	movlw	0
 20295  006944  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20296  006946  0E00               	movlw	0
 20297  006948  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20298                           
 20299                           ;controlMemory_MC50.c: 283:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20300  00694A  0E00               	movlw	0
 20301  00694C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20302  00694E  0E00               	movlw	0
 20303  006950  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20304  006952  0E00               	movlw	0
 20305  006954  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20306  006956  0E00               	movlw	0
 20307  006958  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20308                           
 20309                           ; BSR set to: 0
 20310                           ;controlMemory_MC50.c: 289:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20311  00695A  A48D               	btfss	141,2,c	;volatile
 20312                           
 20313                           ; BSR set to: 0
 20314  00695C  B28D               	btfsc	141,1,c	;volatile
 20315  00695E  D015               	goto	l21310
 20316                           
 20317                           ; BSR set to: 0
 20318  006960  A08E               	btfss	142,0,c	;volatile
 20319                           
 20320                           ; BSR set to: 0
 20321  006962  BA8D               	btfsc	141,5,c	;volatile
 20322  006964  D012               	goto	l21310
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;controlMemory_MC50.c: 290:      var_sys.actualCounterMoves = 0;
 20326  006966  0E00               	movlw	0
 20327  006968  0101               	movlb	1	; () banked
 20328  00696A  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20329  00696C  0E00               	movlw	0
 20330  00696E  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20331  006970  0E00               	movlw	0
 20332  006972  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20333  006974  0E00               	movlw	0
 20334  006976  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20335                           
 20336                           ;controlMemory_MC50.c: 291:      var_sys_NVM.counterMoves = 0;
 20337  006978  0E00               	movlw	0
 20338  00697A  0100               	movlb	0	; () banked
 20339  00697C  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20340  00697E  0E00               	movlw	0
 20341  006980  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20342  006982  0E00               	movlw	0
 20343  006984  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20344  006986  0E00               	movlw	0
 20345  006988  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20346  00698A                     l21310:
 20347                           
 20348                           ; BSR set to: 0
 20349                           ;controlMemory_MC50.c: 296:     SaveNVM_VarSystem(pageMemoryCounters);
 20350  00698A  0E02               	movlw	2
 20351  00698C  EC5D  F04B         	call	_SaveNVM_VarSystem
 20352                           
 20353                           ;controlMemory_MC50.c: 297:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20354  006990  0E03               	movlw	3
 20355  006992  EC5D  F04B         	call	_SaveNVM_VarSystem
 20356  006996  0012               	return		;funcret
 20357  006998                     __end_of_ResetDefaultMemory:
 20358                           	callstack 0
 20359                           
 20360 ;; *************** function _I2C1_Read1ByteRegister *****************
 20361 ;; Defined at:
 20362 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20363 ;; Parameters:    Size  Location     Type
 20364 ;;  address         1    wreg     unsigned char 
 20365 ;;  reg             1   33[COMRAM] unsigned char 
 20366 ;; Auto vars:     Size  Location     Type
 20367 ;;  address         1   34[COMRAM] unsigned char 
 20368 ;;  returnValue     1   35[COMRAM] unsigned char 
 20369 ;; Return value:  Size  Location     Type
 20370 ;;                  1    wreg      unsigned char 
 20371 ;; Registers used:
 20372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20373 ;; Tracked objects:
 20374 ;;		On entry : 31/0
 20375 ;;		On exit  : 33/2
 20376 ;;		Unchanged: 0/0
 20377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20378 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20381 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20382 ;;Total ram usage:        3 bytes
 20383 ;; Hardware stack levels used: 1
 20384 ;; Hardware stack levels required when called: 12
 20385 ;; This function calls:
 20386 ;;		_I2C1_Close
 20387 ;;		_I2C1_MasterWrite
 20388 ;;		_I2C1_Open
 20389 ;;		_I2C1_SetAddressNackCallback
 20390 ;;		_I2C1_SetBuffer
 20391 ;;		_I2C1_SetDataCompleteCallback
 20392 ;; This function is called by:
 20393 ;;		_loadNVM_VarSystem
 20394 ;; This function uses a non-reentrant model
 20395 ;;
 20396                           
 20397                           	psect	text72
 20398  008F56                     __ptext72:
 20399                           	callstack 0
 20400  008F56                     _I2C1_Read1ByteRegister:
 20401                           	callstack 17
 20402                           
 20403                           ;incstack = 0
 20404                           ;I2C1_Read1ByteRegister@address stored from wreg
 20405  008F56  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20406                           
 20407                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20408  008F58  0E00               	movlw	0
 20409  008F5A  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20410  008F5C                     l22596:
 20411  008F5C  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20412  008F5E  ECD2  F042         	call	_I2C1_Open
 20413  008F62  0900               	iorlw	0
 20414  008F64  B4D8               	btfsc	status,2,c
 20415  008F66  D7FA               	goto	l22596
 20416                           
 20417                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20418  008F68  0E22               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20419  008F6A  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20420  008F6C  0E99               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20421  008F6E  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20422  008F70  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20423  008F72  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20424  008F74  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20425  008F76  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20426                           
 20427                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20428  008F7A  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20429  008F7C  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20430  008F7E  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20431  008F80  0E00               	movlw	0
 20432  008F82  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20433  008F84  0E01               	movlw	1
 20434  008F86  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20435  008F88  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 20436                           
 20437                           ; BSR set to: 2
 20438                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20439  008F8C  0E00               	movlw	0
 20440  008F8E  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20441  008F90  0E00               	movlw	0
 20442  008F92  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20443  008F94  0E00               	movlw	0
 20444  008F96  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20445  008F98  0E00               	movlw	0
 20446  008F9A  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20447  008F9C  EC99  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 20448                           
 20449                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20450  008FA0  EC72  F04F         	call	_I2C1_MasterWrite	;wreg free
 20451  008FA4                     l22606:
 20452  008FA4  ECE6  F04D         	call	_I2C1_Close	;wreg free
 20453  008FA8  06E8               	decf	wreg,f,c
 20454  008FAA  B4D8               	btfsc	status,2,c
 20455  008FAC  D7FB               	goto	l22606
 20456                           
 20457                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20458  008FAE  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20459  008FB0  0012               	return		;funcret
 20460  008FB2                     __end_of_I2C1_Read1ByteRegister:
 20461                           	callstack 0
 20462                           
 20463 ;; *************** function _getKeyPressed *****************
 20464 ;; Defined at:
 20465 ;;		line 217 in file "inputs_MC50.c"
 20466 ;; Parameters:    Size  Location     Type
 20467 ;;		None
 20468 ;; Auto vars:     Size  Location     Type
 20469 ;;  temp            1   15[COMRAM] char 
 20470 ;; Return value:  Size  Location     Type
 20471 ;;                  1    wreg      char 
 20472 ;; Registers used:
 20473 ;;		wreg, status,2, status,0
 20474 ;; Tracked objects:
 20475 ;;		On entry : 3E/1
 20476 ;;		On exit  : 3D/0
 20477 ;;		Unchanged: 0/0
 20478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20483 ;;Total ram usage:        1 bytes
 20484 ;; Hardware stack levels used: 1
 20485 ;; Hardware stack levels required when called: 4
 20486 ;; This function calls:
 20487 ;;		Nothing
 20488 ;; This function is called by:
 20489 ;;		_main
 20490 ;; This function uses a non-reentrant model
 20491 ;;
 20492                           
 20493                           	psect	text73
 20494  009D1A                     __ptext73:
 20495                           	callstack 0
 20496  009D1A                     _getKeyPressed:
 20497                           	callstack 26
 20498                           
 20499                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20500                           
 20501                           ;incstack = 0
 20502  009D1A  6810               	setf	getKeyPressed@temp^0,c
 20503                           
 20504                           ;inputs_MC50.c: 219:     if(RFFull)
 20505  009D1C  0100               	movlb	0	; () banked
 20506  009D1E  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20507  009D20  B4D8               	btfsc	status,2,c
 20508  009D22  D005               	goto	l24692
 20509                           
 20510                           ; BSR set to: 0
 20511                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20512  009D24  0102               	movlb	2	; () banked
 20513  009D26  39CD               	swapf	(_BufferRF+7)& (0+255),w,b
 20514  009D28  0B0F               	andlw	15
 20515  009D2A  0B0F               	andlw	15
 20516  009D2C  6E10               	movwf	getKeyPressed@temp^0,c
 20517  009D2E                     l24692:
 20518                           
 20519                           ;inputs_MC50.c: 223:     return temp;
 20520  009D2E  5010               	movf	getKeyPressed@temp^0,w,c
 20521  009D30  0012               	return		;funcret
 20522  009D32                     __end_of_getKeyPressed:
 20523                           	callstack 0
 20524                           
 20525 ;; *************** function _eusartparser *****************
 20526 ;; Defined at:
 20527 ;;		line 389 in file "eusartparser.c"
 20528 ;; Parameters:    Size  Location     Type
 20529 ;;  package         2    8[BANK0 ] PTR struct package_t
 20530 ;;		 -> main@package(7), 
 20531 ;; Auto vars:     Size  Location     Type
 20532 ;;  i               1   28[BANK0 ] unsigned char 
 20533 ;;  i               1   25[BANK0 ] unsigned char 
 20534 ;;  i               1   29[BANK0 ] unsigned char 
 20535 ;;  i               1   26[BANK0 ] unsigned char 
 20536 ;;  i               1   30[BANK0 ] unsigned char 
 20537 ;;  i               1   24[BANK0 ] unsigned char 
 20538 ;;  i               1   23[BANK0 ] unsigned char 
 20539 ;;  i               1   19[BANK0 ] unsigned char 
 20540 ;;  i               1   18[BANK0 ] unsigned char 
 20541 ;;  i               1   27[BANK0 ] unsigned char 
 20542 ;;  i               1   22[BANK0 ] unsigned char 
 20543 ;;  i               1   21[BANK0 ] unsigned char 
 20544 ;;  i               1   17[BANK0 ] unsigned char 
 20545 ;;  i               1   16[BANK0 ] unsigned char 
 20546 ;;  a               7    0        struct package_t
 20547 ;;  serial          4   32[BANK0 ] unsigned long 
 20548 ;;  relcounter      1   31[BANK0 ] unsigned char 
 20549 ;;  pos             1   20[BANK0 ] unsigned char 
 20550 ;; Return value:  Size  Location     Type
 20551 ;;                  1    wreg      void 
 20552 ;; Registers used:
 20553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20554 ;; Tracked objects:
 20555 ;;		On entry : 3F/0
 20556 ;;		On exit  : 0/0
 20557 ;;		Unchanged: 0/0
 20558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20559 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20560 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20561 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20562 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20563 ;;Total ram usage:       28 bytes
 20564 ;; Hardware stack levels used: 1
 20565 ;; Hardware stack levels required when called: 14
 20566 ;; This function calls:
 20567 ;;		_ReadSerial
 20568 ;;		_RemoveSerial
 20569 ;;		_SaveNVM_VarSystem
 20570 ;;		_cmdMemoryIsEmpty
 20571 ;;		_confirmpackage
 20572 ;;		_read_eusartparser
 20573 ;;		_saveNewSerial
 20574 ;;		_validateRemoteSerialNumber
 20575 ;;		_write_eusartparser
 20576 ;;		_write_package
 20577 ;; This function is called by:
 20578 ;;		_main
 20579 ;; This function uses a non-reentrant model
 20580 ;;
 20581                           
 20582                           	psect	text74
 20583  00188A                     __ptext74:
 20584                           	callstack 0
 20585  00188A                     _eusartparser:
 20586                           	callstack 16
 20587                           
 20588                           ; BSR set to: 0
 20589                           ;eusartparser.c: 390:         struct package_t a;;eusartparser.c: 391:         uint8_t r
      +                          elcounter;;eusartparser.c: 392:         static _Bool save_f=0;;eusartparser.c: 393:     
      +                              static uint16_t buffer=0x0000;;eusartparser.c: 394:         uint32_t serial;;eusartp
      +                          arser.c: 395:         char pos;;eusartparser.c: 397:         switch(package->functioncod
      +                          e){
 20590                           
 20591                           ;incstack = 0
 20592  00188A  EF9D  F010         	goto	l27924
 20593  00188E                     l27484:
 20594                           
 20595                           ; BSR set to: 0
 20596                           ;eusartparser.c: 399:                 read_eusartparser(package);
 20597  00188E  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20598  001892  C0E1  F019         	movff	eusartparser@package+1,read_eusartparser@package+1
 20599  001896  EC73  F014         	call	_read_eusartparser	;wreg free
 20600  00189A                     l27486:
 20601                           
 20602                           ;eusartparser.c: 400:                 confirmpackage(package, 1);
 20603  00189A  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20604  00189E  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20605  0018A2  0E01               	movlw	1
 20606  0018A4  6E14               	movwf	confirmpackage@confirm^0,c
 20607  0018A6  ECD9  F047         	call	_confirmpackage	;wreg free
 20608  0018AA                     l27488:
 20609                           
 20610                           ;eusartparser.c: 401:                 write_package(*package);
 20611  0018AA  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20612  0018AE  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20613  0018B2  EE00  F011         	lfsr	0,write_package@package
 20614  0018B6  0E06               	movlw	6
 20615  0018B8                     u33481:
 20616  0018B8  CFDB FFEB          	movff	plusw2,plusw0
 20617  0018BC  06E8               	decf	wreg,f,c
 20618  0018BE  E2FC               	bc	u33481
 20619  0018C0  EC23  F04C         	call	_write_package	;wreg free
 20620                           
 20621                           ;eusartparser.c: 402:                 break;
 20622  0018C4  0012               	return	
 20623  0018C6                     l27490:
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;eusartparser.c: 405:                 if(programmer_enable){
 20627  0018C6  5185               	movf	_programmer_enable& (0+255),w,b
 20628  0018C8  B4D8               	btfsc	status,2,c
 20629  0018CA  D00E               	goto	l27498
 20630                           
 20631                           ; BSR set to: 0
 20632                           ;eusartparser.c: 406:                     write_eusartparser(*package);
 20633  0018CC  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20634  0018D0  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20635  0018D4  EE00  F010         	lfsr	0,write_eusartparser@package
 20636  0018D8  0E06               	movlw	6
 20637  0018DA                     u33501:
 20638  0018DA  CFDB FFEB          	movff	plusw2,plusw0
 20639  0018DE  06E8               	decf	wreg,f,c
 20640  0018E0  E2FC               	bc	u33501
 20641  0018E2  ECB9  F017         	call	_write_eusartparser	;wreg free
 20642  0018E6  D7D9               	goto	l27486
 20643  0018E8                     l27498:
 20644                           
 20645                           ; BSR set to: 0
 20646                           ;eusartparser.c: 411:                     confirmpackage(package, 0);
 20647  0018E8  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 20648  0018EC  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 20649  0018F0  0E00               	movlw	0
 20650  0018F2  6E14               	movwf	confirmpackage@confirm^0,c
 20651  0018F4  ECD9  F047         	call	_confirmpackage	;wreg free
 20652  0018F8  D7D8               	goto	l27488
 20653  0018FA                     l27502:
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;eusartparser.c: 417:                 if(programmer_enable){
 20657  0018FA  5185               	movf	_programmer_enable& (0+255),w,b
 20658  0018FC  B4D8               	btfsc	status,2,c
 20659  0018FE  D008               	goto	l27508
 20660                           
 20661                           ; BSR set to: 0
 20662                           ;eusartparser.c: 418:                     SaveNVM_VarSystem(pageMemoryE);
 20663  001900  0E01               	movlw	1
 20664  001902  EC5D  F04B         	call	_SaveNVM_VarSystem
 20665                           
 20666                           ;eusartparser.c: 419:                     SaveNVM_VarSystem(pageMemoryP);
 20667  001906  0E00               	movlw	0
 20668  001908  EC5D  F04B         	call	_SaveNVM_VarSystem
 20669                           
 20670                           ;eusartparser.c: 420:                     programmer_enable=0;
 20671  00190C  0E00               	movlw	0
 20672  00190E  D005               	goto	L83
 20673  001910                     l27508:
 20674                           
 20675                           ; BSR set to: 0
 20676                           ;eusartparser.c: 423:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 20677  001910  0101               	movlb	1	; () banked
 20678  001912  51F2               	movf	_main_stateMachine& (0+255),w,b
 20679  001914  A4D8               	btfss	status,2,c
 20680  001916  D004               	goto	l27512
 20681                           
 20682                           ; BSR set to: 1
 20683                           ;eusartparser.c: 424:                         programmer_enable=1;
 20684  001918  0E01               	movlw	1
 20685  00191A                     L83:
 20686  00191A  0100               	movlb	0	; () banked
 20687  00191C  6F85               	movwf	_programmer_enable& (0+255),b
 20688  00191E  D019               	goto	l27520
 20689  001920                     l27512:
 20690                           
 20691                           ; BSR set to: 1
 20692                           ;eusartparser.c: 426:                         package->data.data16=(uint16_t)2;
 20693  001920  0100               	movlb	0	; () banked
 20694  001922  EE20 F002          	lfsr	2,2
 20695  001926  51E0               	movf	eusartparser@package& (0+255),w,b
 20696  001928  26D9               	addwf	fsr2l,f,c
 20697  00192A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20698  00192C  22DA               	addwfc	fsr2h,f,c
 20699  00192E  0E02               	movlw	2
 20700  001930  6EDE               	movwf	postinc2,c
 20701  001932  0E00               	movlw	0
 20702  001934  6EDD               	movwf	postdec2,c
 20703  001936                     l27514:
 20704                           
 20705                           ; BSR set to: 0
 20706                           ;eusartparser.c: 427:                         write_package(*package);
 20707  001936  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20708  00193A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20709  00193E  EE00  F011         	lfsr	0,write_package@package
 20710  001942  0E06               	movlw	6
 20711  001944                     u33531:
 20712  001944  CFDB FFEB          	movff	plusw2,plusw0
 20713  001948  06E8               	decf	wreg,f,c
 20714  00194A  E2FC               	bc	u33531
 20715  00194C  EC23  F04C         	call	_write_package	;wreg free
 20716  001950  D7A4               	goto	l27486
 20717  001952                     l27520:
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;eusartparser.c: 434:                 package->data.data16=(uint16_t)programmer_enable;
 20721  001952  5185               	movf	_programmer_enable& (0+255),w,b
 20722  001954  6FE2               	movwf	??_eusartparser& (0+255),b
 20723  001956  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20724  001958  EE20 F002          	lfsr	2,2
 20725  00195C  51E0               	movf	eusartparser@package& (0+255),w,b
 20726  00195E  26D9               	addwf	fsr2l,f,c
 20727  001960  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20728  001962  22DA               	addwfc	fsr2h,f,c
 20729  001964  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20730  001968  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20731  00196C  D7E4               	goto	l27514
 20732  00196E                     l27532:
 20733                           
 20734                           ; BSR set to: 0
 20735                           ;eusartparser.c: 444:                     package->address=0x00;
 20736  00196E  EE20 F001          	lfsr	2,1
 20737  001972  51E0               	movf	eusartparser@package& (0+255),w,b
 20738  001974  26D9               	addwf	fsr2l,f,c
 20739  001976  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20740  001978  22DA               	addwfc	fsr2h,f,c
 20741  00197A  0E00               	movlw	0
 20742  00197C  6EDF               	movwf	indf2,c
 20743                           
 20744                           ;eusartparser.c: 445:                     package->data.data16=var_sys_NVM.positionRemot
      +                          esFull;
 20745  00197E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20746  001980  6FE2               	movwf	??_eusartparser& (0+255),b
 20747  001982  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20748  001984  EE20 F002          	lfsr	2,2
 20749  001988  51E0               	movf	eusartparser@package& (0+255),w,b
 20750  00198A  26D9               	addwf	fsr2l,f,c
 20751  00198C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20752  00198E  22DA               	addwfc	fsr2h,f,c
 20753  001990  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20754  001994  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20755                           
 20756                           ; BSR set to: 0
 20757                           ;eusartparser.c: 446:                     for(uint8_t i=0;i<var_sys_NVM.positionRemotesF
      +                          ull;i++)
 20758  001998  0E00               	movlw	0
 20759  00199A  6FE8               	movwf	eusartparser@i& (0+255),b
 20760  00199C  D014               	goto	l27542
 20761  00199E                     l27536:
 20762                           
 20763                           ; BSR set to: 0
 20764                           ;eusartparser.c: 447:                     if(cmdMemoryIsEmpty(0,i)==1)
 20765  00199E  C0E8  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20766  0019A2  0E00               	movlw	0
 20767  0019A4  ECA6  F040         	call	_cmdMemoryIsEmpty
 20768  0019A8  06E8               	decf	wreg,f,c
 20769  0019AA  A4D8               	btfss	status,2,c
 20770  0019AC  D00A               	goto	l27540
 20771                           
 20772                           ;eusartparser.c: 448:                         package->data.data16--;
 20773  0019AE  0100               	movlb	0	; () banked
 20774  0019B0  EE20 F002          	lfsr	2,2
 20775  0019B4  51E0               	movf	eusartparser@package& (0+255),w,b
 20776  0019B6  26D9               	addwf	fsr2l,f,c
 20777  0019B8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20778  0019BA  22DA               	addwfc	fsr2h,f,c
 20779  0019BC  06DE               	decf	postinc2,f,c
 20780  0019BE  0E00               	movlw	0
 20781  0019C0  5ADD               	subwfb	postdec2,f,c
 20782  0019C2                     l27540:
 20783  0019C2  0100               	movlb	0	; () banked
 20784  0019C4  2BE8               	incf	eusartparser@i& (0+255),f,b
 20785  0019C6                     l27542:
 20786                           
 20787                           ; BSR set to: 0
 20788  0019C6  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20789  0019C8  5DE8               	subwf	eusartparser@i& (0+255),w,b
 20790  0019CA  B0D8               	btfsc	status,0,c
 20791  0019CC  D7B4               	goto	l27514
 20792  0019CE  D7E7               	goto	l27536
 20793  0019D0                     l27550:
 20794                           
 20795                           ; BSR set to: 0
 20796                           ;eusartparser.c: 455:                 package->address=0x00;
 20797  0019D0  EE20 F001          	lfsr	2,1
 20798  0019D4  51E0               	movf	eusartparser@package& (0+255),w,b
 20799  0019D6  26D9               	addwf	fsr2l,f,c
 20800  0019D8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20801  0019DA  22DA               	addwfc	fsr2h,f,c
 20802  0019DC  0E00               	movlw	0
 20803  0019DE  6EDF               	movwf	indf2,c
 20804                           
 20805                           ;eusartparser.c: 456:                 package->data.data16=0;
 20806  0019E0  EE20 F002          	lfsr	2,2
 20807  0019E4  51E0               	movf	eusartparser@package& (0+255),w,b
 20808  0019E6  26D9               	addwf	fsr2l,f,c
 20809  0019E8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20810  0019EA  22DA               	addwfc	fsr2h,f,c
 20811  0019EC  0E00               	movlw	0
 20812  0019EE  6EDE               	movwf	postinc2,c
 20813  0019F0  0E00               	movlw	0
 20814  0019F2  6EDD               	movwf	postdec2,c
 20815                           
 20816                           ; BSR set to: 0
 20817                           ;eusartparser.c: 457:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20818  0019F4  0E00               	movlw	0
 20819  0019F6  6FE9               	movwf	eusartparser@i_7373& (0+255),b
 20820  0019F8  D014               	goto	l27560
 20821  0019FA                     l27554:
 20822                           
 20823                           ; BSR set to: 0
 20824                           ;eusartparser.c: 458:                 if(cmdMemoryIsEmpty(0,i)==1)
 20825  0019FA  C0E9  F02E         	movff	eusartparser@i_7373,cmdMemoryIsEmpty@position
 20826  0019FE  0E00               	movlw	0
 20827  001A00  ECA6  F040         	call	_cmdMemoryIsEmpty
 20828  001A04  06E8               	decf	wreg,f,c
 20829  001A06  A4D8               	btfss	status,2,c
 20830  001A08  D00A               	goto	l27558
 20831                           
 20832                           ;eusartparser.c: 459:                     package->data.data16++;
 20833  001A0A  0100               	movlb	0	; () banked
 20834  001A0C  EE20 F002          	lfsr	2,2
 20835  001A10  51E0               	movf	eusartparser@package& (0+255),w,b
 20836  001A12  26D9               	addwf	fsr2l,f,c
 20837  001A14  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20838  001A16  22DA               	addwfc	fsr2h,f,c
 20839  001A18  2ADE               	incf	postinc2,f,c
 20840  001A1A  0E00               	movlw	0
 20841  001A1C  22DD               	addwfc	postdec2,f,c
 20842  001A1E                     l27558:
 20843  001A1E  0100               	movlb	0	; () banked
 20844  001A20  2BE9               	incf	eusartparser@i_7373& (0+255),f,b
 20845  001A22                     l27560:
 20846                           
 20847                           ; BSR set to: 0
 20848  001A22  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20849  001A24  5DE9               	subwf	eusartparser@i_7373& (0+255),w,b
 20850  001A26  B0D8               	btfsc	status,0,c
 20851  001A28  D786               	goto	l27514
 20852  001A2A  D7E7               	goto	l27554
 20853  001A2C                     l27568:
 20854                           
 20855                           ; BSR set to: 0
 20856                           ;eusartparser.c: 465:                 relcounter=0;
 20857  001A2C  0E00               	movlw	0
 20858  001A2E  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20859                           
 20860                           ;eusartparser.c: 466:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20861  001A30  0E00               	movlw	0
 20862  001A32  6FED               	movwf	eusartparser@i_7374& (0+255),b
 20863  001A34  D02E               	goto	l27580
 20864  001A36                     l27570:
 20865                           
 20866                           ; BSR set to: 0
 20867                           ;eusartparser.c: 467:                     if(cmdMemoryIsEmpty(0,i)==0){
 20868  001A36  C0ED  F02E         	movff	eusartparser@i_7374,cmdMemoryIsEmpty@position
 20869  001A3A  0E00               	movlw	0
 20870  001A3C  ECA6  F040         	call	_cmdMemoryIsEmpty
 20871  001A40  0900               	iorlw	0
 20872  001A42  A4D8               	btfss	status,2,c
 20873  001A44  D024               	goto	l27578
 20874                           
 20875                           ;eusartparser.c: 468:                         package->data.data16=(uint16_t)i;
 20876  001A46  0100               	movlb	0	; () banked
 20877  001A48  51ED               	movf	eusartparser@i_7374& (0+255),w,b
 20878  001A4A  6FE2               	movwf	??_eusartparser& (0+255),b
 20879  001A4C  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20880  001A4E  EE20 F002          	lfsr	2,2
 20881  001A52  51E0               	movf	eusartparser@package& (0+255),w,b
 20882  001A54  26D9               	addwf	fsr2l,f,c
 20883  001A56  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20884  001A58  22DA               	addwfc	fsr2h,f,c
 20885  001A5A  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20886  001A5E  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20887                           
 20888                           ;eusartparser.c: 469:                         package->address=relcounter;
 20889  001A62  EE20 F001          	lfsr	2,1
 20890  001A66  51E0               	movf	eusartparser@package& (0+255),w,b
 20891  001A68  26D9               	addwf	fsr2l,f,c
 20892  001A6A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20893  001A6C  22DA               	addwfc	fsr2h,f,c
 20894  001A6E  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20895                           
 20896                           ; BSR set to: 0
 20897                           ;eusartparser.c: 470:                         relcounter++;
 20898  001A72  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20899                           
 20900                           ; BSR set to: 0
 20901                           ;eusartparser.c: 471:                         write_package(*package);
 20902  001A74  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20903  001A78  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20904  001A7C  EE00  F011         	lfsr	0,write_package@package
 20905  001A80  0E06               	movlw	6
 20906  001A82                     u33591:
 20907  001A82  CFDB FFEB          	movff	plusw2,plusw0
 20908  001A86  06E8               	decf	wreg,f,c
 20909  001A88  E2FC               	bc	u33591
 20910  001A8A  EC23  F04C         	call	_write_package	;wreg free
 20911  001A8E                     l27578:
 20912  001A8E  0100               	movlb	0	; () banked
 20913  001A90  2BED               	incf	eusartparser@i_7374& (0+255),f,b
 20914  001A92                     l27580:
 20915                           
 20916                           ; BSR set to: 0
 20917  001A92  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20918  001A94  5DED               	subwf	eusartparser@i_7374& (0+255),w,b
 20919  001A96  B0D8               	btfsc	status,0,c
 20920  001A98  D700               	goto	l27486
 20921  001A9A  D7CD               	goto	l27570
 20922  001A9C                     l27586:
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;eusartparser.c: 477:                 relcounter=0;
 20926  001A9C  0E00               	movlw	0
 20927  001A9E  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 20928                           
 20929                           ;eusartparser.c: 478:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20930  001AA0  0E00               	movlw	0
 20931  001AA2  6FEE               	movwf	eusartparser@i_7375& (0+255),b
 20932  001AA4  D02E               	goto	l27598
 20933  001AA6                     l27588:
 20934                           
 20935                           ; BSR set to: 0
 20936                           ;eusartparser.c: 479:                     if(cmdMemoryIsEmpty(0,i)==1){
 20937  001AA6  C0EE  F02E         	movff	eusartparser@i_7375,cmdMemoryIsEmpty@position
 20938  001AAA  0E00               	movlw	0
 20939  001AAC  ECA6  F040         	call	_cmdMemoryIsEmpty
 20940  001AB0  06E8               	decf	wreg,f,c
 20941  001AB2  A4D8               	btfss	status,2,c
 20942  001AB4  D024               	goto	l27596
 20943                           
 20944                           ;eusartparser.c: 480:                         package->data.data16=(uint16_t)i;
 20945  001AB6  0100               	movlb	0	; () banked
 20946  001AB8  51EE               	movf	eusartparser@i_7375& (0+255),w,b
 20947  001ABA  6FE2               	movwf	??_eusartparser& (0+255),b
 20948  001ABC  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 20949  001ABE  EE20 F002          	lfsr	2,2
 20950  001AC2  51E0               	movf	eusartparser@package& (0+255),w,b
 20951  001AC4  26D9               	addwf	fsr2l,f,c
 20952  001AC6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20953  001AC8  22DA               	addwfc	fsr2h,f,c
 20954  001ACA  C0E2  FFDE         	movff	??_eusartparser,postinc2
 20955  001ACE  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 20956                           
 20957                           ;eusartparser.c: 481:                         package->address=relcounter;
 20958  001AD2  EE20 F001          	lfsr	2,1
 20959  001AD6  51E0               	movf	eusartparser@package& (0+255),w,b
 20960  001AD8  26D9               	addwf	fsr2l,f,c
 20961  001ADA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 20962  001ADC  22DA               	addwfc	fsr2h,f,c
 20963  001ADE  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 20964                           
 20965                           ; BSR set to: 0
 20966                           ;eusartparser.c: 482:                         relcounter++;
 20967  001AE2  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;eusartparser.c: 483:                         write_package(*package);
 20971  001AE4  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 20972  001AE8  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 20973  001AEC  EE00  F011         	lfsr	0,write_package@package
 20974  001AF0  0E06               	movlw	6
 20975  001AF2                     u33621:
 20976  001AF2  CFDB FFEB          	movff	plusw2,plusw0
 20977  001AF6  06E8               	decf	wreg,f,c
 20978  001AF8  E2FC               	bc	u33621
 20979  001AFA  EC23  F04C         	call	_write_package	;wreg free
 20980  001AFE                     l27596:
 20981  001AFE  0100               	movlb	0	; () banked
 20982  001B00  2BEE               	incf	eusartparser@i_7375& (0+255),f,b
 20983  001B02                     l27598:
 20984                           
 20985                           ; BSR set to: 0
 20986  001B02  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20987  001B04  5DEE               	subwf	eusartparser@i_7375& (0+255),w,b
 20988  001B06  B0D8               	btfsc	status,0,c
 20989  001B08  D6C8               	goto	l27486
 20990  001B0A  D7CD               	goto	l27588
 20991  001B0C                     l27604:
 20992                           
 20993                           ; BSR set to: 0
 20994                           ;eusartparser.c: 489:                 if(programmer_enable){
 20995  001B0C  5185               	movf	_programmer_enable& (0+255),w,b
 20996  001B0E  B4D8               	btfsc	status,2,c
 20997  001B10  D6EB               	goto	l27498
 20998                           
 20999                           ; BSR set to: 0
 21000                           ;eusartparser.c: 490:                     if(save_f==0){
 21001  001B12  0101               	movlb	1	; () banked
 21002  001B14  518F               	movf	eusartparser@save_f& (0+255),w,b
 21003  001B16  A4D8               	btfss	status,2,c
 21004  001B18  D024               	goto	l27616
 21005  001B1A                     u33650:
 21006                           
 21007                           ; BSR set to: 1
 21008                           ;eusartparser.c: 491:                         buffer=package->data.data16;
 21009  001B1A  0100               	movlb	0	; () banked
 21010  001B1C  EE20 F002          	lfsr	2,2
 21011  001B20  51E0               	movf	eusartparser@package& (0+255),w,b
 21012  001B22  26D9               	addwf	fsr2l,f,c
 21013  001B24  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21014  001B26  22DA               	addwfc	fsr2h,f,c
 21015  001B28  CFDE F185          	movff	postinc2,eusartparser@buffer
 21016  001B2C  CFDD F186          	movff	postdec2,eusartparser@buffer+1
 21017                           
 21018                           ; BSR set to: 0
 21019                           ;eusartparser.c: 492:                         confirmpackage(package, 1);
 21020  001B30  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21021  001B34  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21022  001B38  0E01               	movlw	1
 21023  001B3A  6E14               	movwf	confirmpackage@confirm^0,c
 21024  001B3C  ECD9  F047         	call	_confirmpackage	;wreg free
 21025                           
 21026                           ;eusartparser.c: 493:                         write_package(*package);
 21027  001B40  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21028  001B44  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21029  001B48  EE00  F011         	lfsr	0,write_package@package
 21030  001B4C  0E06               	movlw	6
 21031  001B4E                     u33661:
 21032  001B4E  CFDB FFEB          	movff	plusw2,plusw0
 21033  001B52  06E8               	decf	wreg,f,c
 21034  001B54  E2FC               	bc	u33661
 21035  001B56  EC23  F04C         	call	_write_package	;wreg free
 21036                           
 21037                           ;eusartparser.c: 494:                         save_f=1;
 21038  001B5A  0E01               	movlw	1
 21039  001B5C  0101               	movlb	1	; () banked
 21040  001B5E  6F8F               	movwf	eusartparser@save_f& (0+255),b
 21041                           
 21042                           ;eusartparser.c: 495:                     }
 21043  001B60  0012               	return	
 21044  001B62                     l27616:
 21045                           
 21046                           ; BSR set to: 1
 21047                           ;eusartparser.c: 497:                         serial=((uint32_t)buffer<<16)+(uint32_t)pa
      +                          ckage->data.data16;
 21048  001B62  0100               	movlb	0	; () banked
 21049  001B64  EE20 F002          	lfsr	2,2
 21050  001B68  51E0               	movf	eusartparser@package& (0+255),w,b
 21051  001B6A  26D9               	addwf	fsr2l,f,c
 21052  001B6C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21053  001B6E  22DA               	addwfc	fsr2h,f,c
 21054  001B70  CFDE F0E2          	movff	postinc2,??_eusartparser
 21055  001B74  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21056  001B78  0101               	movlb	1	; () banked
 21057  001B7A  5185               	movf	eusartparser@buffer& (0+255),w,b
 21058  001B7C  0100               	movlb	0	; () banked
 21059  001B7E  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21060  001B80  0101               	movlb	1	; () banked
 21061  001B82  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21062  001B84  0100               	movlb	0	; () banked
 21063  001B86  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21064  001B88  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21065  001B8A  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21066  001B8C  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21067  001B90  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21068  001B94  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21069  001B96  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21070  001B98  51E2               	movf	??_eusartparser& (0+255),w,b
 21071  001B9A  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21072  001B9C  6FF8               	movwf	eusartparser@serial& (0+255),b
 21073  001B9E  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21074  001BA0  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21075  001BA2  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21076  001BA4  0E00               	movlw	0
 21077  001BA6  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21078  001BA8  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21079  001BAA  0E00               	movlw	0
 21080  001BAC  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21081  001BAE  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21082                           
 21083                           ; BSR set to: 0
 21084                           ;eusartparser.c: 498:                         if(validateRemoteSerialNumber(serial, NO, 
      +                          &pos)==NoCMD){
 21085  001BB0  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21086  001BB4  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21087  001BB8  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21088  001BBC  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21089  001BC0  0E00               	movlw	0
 21090  001BC2  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21091  001BC4  0EEC               	movlw	low eusartparser@pos
 21092  001BC6  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21093  001BC8  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21094  001BCA  ECD4  F030         	call	_validateRemoteSerialNumber	;wreg free
 21095  001BCE  0900               	iorlw	0
 21096  001BD0  A4D8               	btfss	status,2,c
 21097  001BD2  D04D               	goto	u33720
 21098                           
 21099                           ; BSR set to: 0
 21100                           ;eusartparser.c: 499:                             for(uint8_t i=0;;i++)
 21101  001BD4  0E00               	movlw	0
 21102  001BD6  6FF1               	movwf	eusartparser@i_7376& (0+255),b
 21103  001BD8                     l27622:
 21104                           
 21105                           ; BSR set to: 0
 21106                           ;eusartparser.c: 500:                                 if(cmdMemoryIsEmpty(0,i)==1&&packa
      +                          ge->address==0){
 21107  001BD8  C0F1  F02E         	movff	eusartparser@i_7376,cmdMemoryIsEmpty@position
 21108  001BDC  0E00               	movlw	0
 21109  001BDE  ECA6  F040         	call	_cmdMemoryIsEmpty
 21110  001BE2  06E8               	decf	wreg,f,c
 21111  001BE4  A4D8               	btfss	status,2,c
 21112  001BE6  D02D               	goto	l27634
 21113  001BE8  0100               	movlb	0	; () banked
 21114  001BEA  EE20 F001          	lfsr	2,1
 21115  001BEE  51E0               	movf	eusartparser@package& (0+255),w,b
 21116  001BF0  26D9               	addwf	fsr2l,f,c
 21117  001BF2  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21118  001BF4  22DA               	addwfc	fsr2h,f,c
 21119  001BF6  50DF               	movf	indf2,w,c
 21120  001BF8  A4D8               	btfss	status,2,c
 21121  001BFA  D023               	goto	l27634
 21122                           
 21123                           ; BSR set to: 0
 21124                           ;eusartparser.c: 501:                                     saveNewSerial(0,serial,i);
 21125  001BFC  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21126  001C00  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21127  001C04  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21128  001C08  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21129  001C0C  C0F1  F0DC         	movff	eusartparser@i_7376,saveNewSerial@position
 21130  001C10  0E00               	movlw	0
 21131  001C12  EC74  F045         	call	_saveNewSerial
 21132  001C16                     l27628:
 21133                           
 21134                           ;eusartparser.c: 502:                                     confirmpackage(package, 1);
 21135  001C16  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21136  001C1A  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21137  001C1E  0E01               	movlw	1
 21138  001C20  6E14               	movwf	confirmpackage@confirm^0,c
 21139  001C22  ECD9  F047         	call	_confirmpackage	;wreg free
 21140  001C26                     l27630:
 21141                           
 21142                           ;eusartparser.c: 503:                                     write_package(*package);
 21143  001C26  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21144  001C2A  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21145  001C2E  EE00  F011         	lfsr	0,write_package@package
 21146  001C32  0E06               	movlw	6
 21147  001C34                     u33701:
 21148  001C34  CFDB FFEB          	movff	plusw2,plusw0
 21149  001C38  06E8               	decf	wreg,f,c
 21150  001C3A  E2FC               	bc	u33701
 21151  001C3C  EC23  F04C         	call	_write_package	;wreg free
 21152                           
 21153                           ;eusartparser.c: 504:                                     break;
 21154  001C40  D021               	goto	l27650
 21155  001C42                     l27634:
 21156  001C42  C0F1  F02E         	movff	eusartparser@i_7376,cmdMemoryIsEmpty@position
 21157  001C46  0E00               	movlw	0
 21158  001C48  ECA6  F040         	call	_cmdMemoryIsEmpty
 21159  001C4C  06E8               	decf	wreg,f,c
 21160  001C4E  A4D8               	btfss	status,2,c
 21161  001C50  D009               	goto	l27638
 21162                           
 21163                           ;eusartparser.c: 507:                                     package->address--;
 21164  001C52  0100               	movlb	0	; () banked
 21165  001C54  EE20 F001          	lfsr	2,1
 21166  001C58  51E0               	movf	eusartparser@package& (0+255),w,b
 21167  001C5A  26D9               	addwf	fsr2l,f,c
 21168  001C5C  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21169  001C5E  22DA               	addwfc	fsr2h,f,c
 21170  001C60  06DF               	decf	indf2,f,c
 21171                           
 21172                           ;eusartparser.c: 508:                                 }
 21173  001C62  D00E               	goto	l27644
 21174  001C64                     l27638:
 21175  001C64  0100               	movlb	0	; () banked
 21176  001C66  51F1               	movf	eusartparser@i_7376& (0+255),w,b
 21177  001C68  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21178  001C6A  A4D8               	btfss	status,2,c
 21179  001C6C  D009               	goto	l27644
 21180  001C6E                     u33720:
 21181                           
 21182                           ; BSR set to: 0
 21183                           ;eusartparser.c: 510:                                     confirmpackage(package, 0);
 21184  001C6E  C0E0  F012         	movff	eusartparser@package,confirmpackage@package
 21185  001C72  C0E1  F013         	movff	eusartparser@package+1,confirmpackage@package+1
 21186  001C76  0E00               	movlw	0
 21187  001C78  6E14               	movwf	confirmpackage@confirm^0,c
 21188  001C7A  ECD9  F047         	call	_confirmpackage	;wreg free
 21189  001C7E  D7D3               	goto	l27630
 21190  001C80                     l27644:
 21191                           
 21192                           ; BSR set to: 0
 21193  001C80  2BF1               	incf	eusartparser@i_7376& (0+255),f,b
 21194  001C82  D7AA               	goto	l27622
 21195  001C84                     l27650:
 21196                           
 21197                           ;eusartparser.c: 519:                         save_f=0;
 21198  001C84  0E00               	movlw	0
 21199  001C86  0101               	movlb	1	; () banked
 21200  001C88  6F8F               	movwf	eusartparser@save_f& (0+255),b
 21201  001C8A  0012               	return	
 21202  001C8C                     l27656:
 21203                           
 21204                           ; BSR set to: 0
 21205                           ;eusartparser.c: 528:                 if(programmer_enable){
 21206  001C8C  5185               	movf	_programmer_enable& (0+255),w,b
 21207  001C8E  B4D8               	btfsc	status,2,c
 21208  001C90  D62B               	goto	l27498
 21209                           
 21210                           ; BSR set to: 0
 21211                           ;eusartparser.c: 529:                     for(uint8_t i=0;;i++)
 21212  001C92  0E00               	movlw	0
 21213  001C94  6FF2               	movwf	eusartparser@i_7377& (0+255),b
 21214  001C96                     l27660:
 21215                           
 21216                           ; BSR set to: 0
 21217                           ;eusartparser.c: 530:                         if(cmdMemoryIsEmpty(0,i)==0&&package->addr
      +                          ess==0){
 21218  001C96  C0F2  F02E         	movff	eusartparser@i_7377,cmdMemoryIsEmpty@position
 21219  001C9A  0E00               	movlw	0
 21220  001C9C  ECA6  F040         	call	_cmdMemoryIsEmpty
 21221  001CA0  0900               	iorlw	0
 21222  001CA2  A4D8               	btfss	status,2,c
 21223  001CA4  D010               	goto	l27674
 21224  001CA6  0100               	movlb	0	; () banked
 21225  001CA8  EE20 F001          	lfsr	2,1
 21226  001CAC  51E0               	movf	eusartparser@package& (0+255),w,b
 21227  001CAE  26D9               	addwf	fsr2l,f,c
 21228  001CB0  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21229  001CB2  22DA               	addwfc	fsr2h,f,c
 21230  001CB4  50DF               	movf	indf2,w,c
 21231  001CB6  A4D8               	btfss	status,2,c
 21232  001CB8  D006               	goto	l27674
 21233                           
 21234                           ; BSR set to: 0
 21235                           ;eusartparser.c: 531:                             RemoveSerial(0, i);
 21236  001CBA  C0F2  F03A         	movff	eusartparser@i_7377,RemoveSerial@position
 21237  001CBE  0E00               	movlw	0
 21238  001CC0  EC55  F043         	call	_RemoveSerial
 21239  001CC4  D7A8               	goto	l27628
 21240  001CC6                     l27674:
 21241  001CC6  C0F2  F02E         	movff	eusartparser@i_7377,cmdMemoryIsEmpty@position
 21242  001CCA  0E00               	movlw	0
 21243  001CCC  ECA6  F040         	call	_cmdMemoryIsEmpty
 21244  001CD0  0900               	iorlw	0
 21245  001CD2  A4D8               	btfss	status,2,c
 21246  001CD4  D009               	goto	l27678
 21247                           
 21248                           ;eusartparser.c: 538:                             package->address--;
 21249  001CD6  0100               	movlb	0	; () banked
 21250  001CD8  EE20 F001          	lfsr	2,1
 21251  001CDC  51E0               	movf	eusartparser@package& (0+255),w,b
 21252  001CDE  26D9               	addwf	fsr2l,f,c
 21253  001CE0  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21254  001CE2  22DA               	addwfc	fsr2h,f,c
 21255  001CE4  06DF               	decf	indf2,f,c
 21256                           
 21257                           ;eusartparser.c: 539:                         }
 21258  001CE6  D005               	goto	l27686
 21259  001CE8                     l27678:
 21260  001CE8  0100               	movlb	0	; () banked
 21261  001CEA  51F2               	movf	eusartparser@i_7377& (0+255),w,b
 21262  001CEC  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21263  001CEE  B4D8               	btfsc	status,2,c
 21264  001CF0  D7BE               	goto	u33720
 21265  001CF2                     l27686:
 21266                           
 21267                           ; BSR set to: 0
 21268  001CF2  2BF2               	incf	eusartparser@i_7377& (0+255),f,b
 21269  001CF4  D7D0               	goto	l27660
 21270  001CF6                     l27692:
 21271                           
 21272                           ; BSR set to: 0
 21273                           ;eusartparser.c: 553:                 for(uint8_t i=0;;i++)
 21274  001CF6  0E00               	movlw	0
 21275  001CF8  6FF3               	movwf	eusartparser@i_7378& (0+255),b
 21276  001CFA                     l27694:
 21277                           
 21278                           ; BSR set to: 0
 21279                           ;eusartparser.c: 554:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21280  001CFA  C0F3  F02E         	movff	eusartparser@i_7378,cmdMemoryIsEmpty@position
 21281  001CFE  0E00               	movlw	0
 21282  001D00  ECA6  F040         	call	_cmdMemoryIsEmpty
 21283  001D04  0900               	iorlw	0
 21284  001D06  A4D8               	btfss	status,2,c
 21285  001D08  D02A               	goto	l27714
 21286  001D0A  0100               	movlb	0	; () banked
 21287  001D0C  EE20 F001          	lfsr	2,1
 21288  001D10  51E0               	movf	eusartparser@package& (0+255),w,b
 21289  001D12  26D9               	addwf	fsr2l,f,c
 21290  001D14  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21291  001D16  22DA               	addwfc	fsr2h,f,c
 21292  001D18  50DF               	movf	indf2,w,c
 21293  001D1A  A4D8               	btfss	status,2,c
 21294  001D1C  D020               	goto	l27714
 21295                           
 21296                           ; BSR set to: 0
 21297                           ;eusartparser.c: 555:                         ReadSerial(0, &serial, i);
 21298  001D1E  0EF8               	movlw	low eusartparser@serial
 21299  001D20  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21300  001D22  C0F3  F02F         	movff	eusartparser@i_7378,ReadSerial@position
 21301  001D26  0E00               	movlw	0
 21302  001D28  ECAC  F045         	call	_ReadSerial
 21303                           
 21304                           ;eusartparser.c: 556:                         package->data.data16=(uint16_t)serial;
 21305  001D2C  0100               	movlb	0	; () banked
 21306  001D2E  EE20 F002          	lfsr	2,2
 21307  001D32  51E0               	movf	eusartparser@package& (0+255),w,b
 21308  001D34  26D9               	addwf	fsr2l,f,c
 21309  001D36  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21310  001D38  22DA               	addwfc	fsr2h,f,c
 21311  001D3A  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21312  001D3E  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21313                           
 21314                           ; BSR set to: 0
 21315                           ;eusartparser.c: 557:                         write_package(*package);
 21316  001D42  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21317  001D46  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21318  001D4A  EE00  F011         	lfsr	0,write_package@package
 21319  001D4E  0E06               	movlw	6
 21320  001D50                     u33801:
 21321  001D50  CFDB FFEB          	movff	plusw2,plusw0
 21322  001D54  06E8               	decf	wreg,f,c
 21323  001D56  E2FC               	bc	u33801
 21324  001D58  EC23  F04C         	call	_write_package	;wreg free
 21325  001D5C  D1C9               	goto	l27898
 21326  001D5E                     l27714:
 21327  001D5E  C0F3  F02E         	movff	eusartparser@i_7378,cmdMemoryIsEmpty@position
 21328  001D62  0E00               	movlw	0
 21329  001D64  ECA6  F040         	call	_cmdMemoryIsEmpty
 21330  001D68  0900               	iorlw	0
 21331  001D6A  A4D8               	btfss	status,2,c
 21332  001D6C  D009               	goto	l27718
 21333                           
 21334                           ;eusartparser.c: 565:                         package->address--;
 21335  001D6E  0100               	movlb	0	; () banked
 21336  001D70  EE20 F001          	lfsr	2,1
 21337  001D74  51E0               	movf	eusartparser@package& (0+255),w,b
 21338  001D76  26D9               	addwf	fsr2l,f,c
 21339  001D78  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21340  001D7A  22DA               	addwfc	fsr2h,f,c
 21341  001D7C  06DF               	decf	indf2,f,c
 21342                           
 21343                           ;eusartparser.c: 566:                     }
 21344  001D7E  D005               	goto	l27724
 21345  001D80                     l27718:
 21346  001D80  0100               	movlb	0	; () banked
 21347  001D82  51F3               	movf	eusartparser@i_7378& (0+255),w,b
 21348  001D84  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21349  001D86  B4D8               	btfsc	status,2,c
 21350  001D88  D5AF               	goto	l27498
 21351  001D8A                     l27724:
 21352                           
 21353                           ; BSR set to: 0
 21354  001D8A  2BF3               	incf	eusartparser@i_7378& (0+255),f,b
 21355  001D8C  D7B6               	goto	l27694
 21356  001D8E                     l27726:
 21357                           
 21358                           ; BSR set to: 0
 21359                           ;eusartparser.c: 574:                     package->address=0x00;
 21360  001D8E  EE20 F001          	lfsr	2,1
 21361  001D92  51E0               	movf	eusartparser@package& (0+255),w,b
 21362  001D94  26D9               	addwf	fsr2l,f,c
 21363  001D96  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21364  001D98  22DA               	addwfc	fsr2h,f,c
 21365  001D9A  0E00               	movlw	0
 21366  001D9C  6EDF               	movwf	indf2,c
 21367                           
 21368                           ;eusartparser.c: 575:                     package->data.data16=var_sys_NVM.positionRemot
      +                          esWalk;
 21369  001D9E  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21370  001DA0  6FE2               	movwf	??_eusartparser& (0+255),b
 21371  001DA2  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21372  001DA4  EE20 F002          	lfsr	2,2
 21373  001DA8  51E0               	movf	eusartparser@package& (0+255),w,b
 21374  001DAA  26D9               	addwf	fsr2l,f,c
 21375  001DAC  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21376  001DAE  22DA               	addwfc	fsr2h,f,c
 21377  001DB0  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21378  001DB4  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21379                           
 21380                           ; BSR set to: 0
 21381                           ;eusartparser.c: 576:                     for(uint8_t i=0;i<var_sys_NVM.positionRemotesW
      +                          alk;i++)
 21382  001DB8  0E00               	movlw	0
 21383  001DBA  6FEA               	movwf	eusartparser@i_7380& (0+255),b
 21384  001DBC  D014               	goto	l27736
 21385  001DBE                     l27730:
 21386                           
 21387                           ; BSR set to: 0
 21388                           ;eusartparser.c: 577:                     if(cmdMemoryIsEmpty(1,i)==1)
 21389  001DBE  C0EA  F02E         	movff	eusartparser@i_7380,cmdMemoryIsEmpty@position
 21390  001DC2  0E01               	movlw	1
 21391  001DC4  ECA6  F040         	call	_cmdMemoryIsEmpty
 21392  001DC8  06E8               	decf	wreg,f,c
 21393  001DCA  A4D8               	btfss	status,2,c
 21394  001DCC  D00A               	goto	l27734
 21395                           
 21396                           ;eusartparser.c: 578:                         package->data.data16--;
 21397  001DCE  0100               	movlb	0	; () banked
 21398  001DD0  EE20 F002          	lfsr	2,2
 21399  001DD4  51E0               	movf	eusartparser@package& (0+255),w,b
 21400  001DD6  26D9               	addwf	fsr2l,f,c
 21401  001DD8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21402  001DDA  22DA               	addwfc	fsr2h,f,c
 21403  001DDC  06DE               	decf	postinc2,f,c
 21404  001DDE  0E00               	movlw	0
 21405  001DE0  5ADD               	subwfb	postdec2,f,c
 21406  001DE2                     l27734:
 21407  001DE2  0100               	movlb	0	; () banked
 21408  001DE4  2BEA               	incf	eusartparser@i_7380& (0+255),f,b
 21409  001DE6                     l27736:
 21410                           
 21411                           ; BSR set to: 0
 21412  001DE6  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21413  001DE8  5DEA               	subwf	eusartparser@i_7380& (0+255),w,b
 21414  001DEA  B0D8               	btfsc	status,0,c
 21415  001DEC  D5A4               	goto	l27514
 21416  001DEE  D7E7               	goto	l27730
 21417  001DF0                     l27744:
 21418                           
 21419                           ; BSR set to: 0
 21420                           ;eusartparser.c: 585:                 package->address=0x00;
 21421  001DF0  EE20 F001          	lfsr	2,1
 21422  001DF4  51E0               	movf	eusartparser@package& (0+255),w,b
 21423  001DF6  26D9               	addwf	fsr2l,f,c
 21424  001DF8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21425  001DFA  22DA               	addwfc	fsr2h,f,c
 21426  001DFC  0E00               	movlw	0
 21427  001DFE  6EDF               	movwf	indf2,c
 21428                           
 21429                           ;eusartparser.c: 586:                 package->data.data16=0;
 21430  001E00  EE20 F002          	lfsr	2,2
 21431  001E04  51E0               	movf	eusartparser@package& (0+255),w,b
 21432  001E06  26D9               	addwf	fsr2l,f,c
 21433  001E08  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21434  001E0A  22DA               	addwfc	fsr2h,f,c
 21435  001E0C  0E00               	movlw	0
 21436  001E0E  6EDE               	movwf	postinc2,c
 21437  001E10  0E00               	movlw	0
 21438  001E12  6EDD               	movwf	postdec2,c
 21439                           
 21440                           ; BSR set to: 0
 21441                           ;eusartparser.c: 587:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21442  001E14  0E00               	movlw	0
 21443  001E16  6FEB               	movwf	eusartparser@i_7381& (0+255),b
 21444  001E18  D014               	goto	l27754
 21445  001E1A                     l27748:
 21446                           
 21447                           ; BSR set to: 0
 21448                           ;eusartparser.c: 588:                 if(cmdMemoryIsEmpty(1,i)==1)
 21449  001E1A  C0EB  F02E         	movff	eusartparser@i_7381,cmdMemoryIsEmpty@position
 21450  001E1E  0E01               	movlw	1
 21451  001E20  ECA6  F040         	call	_cmdMemoryIsEmpty
 21452  001E24  06E8               	decf	wreg,f,c
 21453  001E26  A4D8               	btfss	status,2,c
 21454  001E28  D00A               	goto	l27752
 21455                           
 21456                           ;eusartparser.c: 589:                     package->data.data16++;
 21457  001E2A  0100               	movlb	0	; () banked
 21458  001E2C  EE20 F002          	lfsr	2,2
 21459  001E30  51E0               	movf	eusartparser@package& (0+255),w,b
 21460  001E32  26D9               	addwf	fsr2l,f,c
 21461  001E34  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21462  001E36  22DA               	addwfc	fsr2h,f,c
 21463  001E38  2ADE               	incf	postinc2,f,c
 21464  001E3A  0E00               	movlw	0
 21465  001E3C  22DD               	addwfc	postdec2,f,c
 21466  001E3E                     l27752:
 21467  001E3E  0100               	movlb	0	; () banked
 21468  001E40  2BEB               	incf	eusartparser@i_7381& (0+255),f,b
 21469  001E42                     l27754:
 21470                           
 21471                           ; BSR set to: 0
 21472  001E42  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21473  001E44  5DEB               	subwf	eusartparser@i_7381& (0+255),w,b
 21474  001E46  B0D8               	btfsc	status,0,c
 21475  001E48  D576               	goto	l27514
 21476  001E4A  D7E7               	goto	l27748
 21477  001E4C                     l27762:
 21478                           
 21479                           ; BSR set to: 0
 21480                           ;eusartparser.c: 595:                 relcounter=0;
 21481  001E4C  0E00               	movlw	0
 21482  001E4E  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21483                           
 21484                           ;eusartparser.c: 596:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21485  001E50  0E00               	movlw	0
 21486  001E52  6FEF               	movwf	eusartparser@i_7382& (0+255),b
 21487  001E54  D02E               	goto	l27774
 21488  001E56                     l27764:
 21489                           
 21490                           ; BSR set to: 0
 21491                           ;eusartparser.c: 597:                     if(cmdMemoryIsEmpty(1,i)==0){
 21492  001E56  C0EF  F02E         	movff	eusartparser@i_7382,cmdMemoryIsEmpty@position
 21493  001E5A  0E01               	movlw	1
 21494  001E5C  ECA6  F040         	call	_cmdMemoryIsEmpty
 21495  001E60  0900               	iorlw	0
 21496  001E62  A4D8               	btfss	status,2,c
 21497  001E64  D024               	goto	l27772
 21498                           
 21499                           ;eusartparser.c: 598:                         package->data.data16=(uint16_t)i;
 21500  001E66  0100               	movlb	0	; () banked
 21501  001E68  51EF               	movf	eusartparser@i_7382& (0+255),w,b
 21502  001E6A  6FE2               	movwf	??_eusartparser& (0+255),b
 21503  001E6C  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21504  001E6E  EE20 F002          	lfsr	2,2
 21505  001E72  51E0               	movf	eusartparser@package& (0+255),w,b
 21506  001E74  26D9               	addwf	fsr2l,f,c
 21507  001E76  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21508  001E78  22DA               	addwfc	fsr2h,f,c
 21509  001E7A  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21510  001E7E  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21511                           
 21512                           ;eusartparser.c: 599:                         package->address=relcounter;
 21513  001E82  EE20 F001          	lfsr	2,1
 21514  001E86  51E0               	movf	eusartparser@package& (0+255),w,b
 21515  001E88  26D9               	addwf	fsr2l,f,c
 21516  001E8A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21517  001E8C  22DA               	addwfc	fsr2h,f,c
 21518  001E8E  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21519                           
 21520                           ; BSR set to: 0
 21521                           ;eusartparser.c: 600:                         relcounter++;
 21522  001E92  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21523                           
 21524                           ; BSR set to: 0
 21525                           ;eusartparser.c: 601:                         write_package(*package);
 21526  001E94  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21527  001E98  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21528  001E9C  EE00  F011         	lfsr	0,write_package@package
 21529  001EA0  0E06               	movlw	6
 21530  001EA2                     u33881:
 21531  001EA2  CFDB FFEB          	movff	plusw2,plusw0
 21532  001EA6  06E8               	decf	wreg,f,c
 21533  001EA8  E2FC               	bc	u33881
 21534  001EAA  EC23  F04C         	call	_write_package	;wreg free
 21535  001EAE                     l27772:
 21536  001EAE  0100               	movlb	0	; () banked
 21537  001EB0  2BEF               	incf	eusartparser@i_7382& (0+255),f,b
 21538  001EB2                     l27774:
 21539                           
 21540                           ; BSR set to: 0
 21541  001EB2  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21542  001EB4  5DEF               	subwf	eusartparser@i_7382& (0+255),w,b
 21543  001EB6  B0D8               	btfsc	status,0,c
 21544  001EB8  D4F0               	goto	l27486
 21545  001EBA  D7CD               	goto	l27764
 21546  001EBC                     l27780:
 21547                           
 21548                           ; BSR set to: 0
 21549                           ;eusartparser.c: 607:                 relcounter=0;
 21550  001EBC  0E00               	movlw	0
 21551  001EBE  6FF7               	movwf	eusartparser@relcounter& (0+255),b
 21552                           
 21553                           ;eusartparser.c: 608:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesWalk;
      +                          i++)
 21554  001EC0  0E00               	movlw	0
 21555  001EC2  6FF0               	movwf	eusartparser@i_7383& (0+255),b
 21556  001EC4  D02E               	goto	l27792
 21557  001EC6                     l27782:
 21558                           
 21559                           ; BSR set to: 0
 21560                           ;eusartparser.c: 609:                     if(cmdMemoryIsEmpty(1,i)==1){
 21561  001EC6  C0F0  F02E         	movff	eusartparser@i_7383,cmdMemoryIsEmpty@position
 21562  001ECA  0E01               	movlw	1
 21563  001ECC  ECA6  F040         	call	_cmdMemoryIsEmpty
 21564  001ED0  06E8               	decf	wreg,f,c
 21565  001ED2  A4D8               	btfss	status,2,c
 21566  001ED4  D024               	goto	l27790
 21567                           
 21568                           ;eusartparser.c: 610:                         package->data.data16=(uint16_t)i;
 21569  001ED6  0100               	movlb	0	; () banked
 21570  001ED8  51F0               	movf	eusartparser@i_7383& (0+255),w,b
 21571  001EDA  6FE2               	movwf	??_eusartparser& (0+255),b
 21572  001EDC  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21573  001EDE  EE20 F002          	lfsr	2,2
 21574  001EE2  51E0               	movf	eusartparser@package& (0+255),w,b
 21575  001EE4  26D9               	addwf	fsr2l,f,c
 21576  001EE6  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21577  001EE8  22DA               	addwfc	fsr2h,f,c
 21578  001EEA  C0E2  FFDE         	movff	??_eusartparser,postinc2
 21579  001EEE  C0E3  FFDD         	movff	??_eusartparser+1,postdec2
 21580                           
 21581                           ;eusartparser.c: 611:                         package->address=relcounter;
 21582  001EF2  EE20 F001          	lfsr	2,1
 21583  001EF6  51E0               	movf	eusartparser@package& (0+255),w,b
 21584  001EF8  26D9               	addwf	fsr2l,f,c
 21585  001EFA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21586  001EFC  22DA               	addwfc	fsr2h,f,c
 21587  001EFE  C0F7  FFDF         	movff	eusartparser@relcounter,indf2
 21588                           
 21589                           ; BSR set to: 0
 21590                           ;eusartparser.c: 612:                         relcounter++;
 21591  001F02  2BF7               	incf	eusartparser@relcounter& (0+255),f,b
 21592                           
 21593                           ; BSR set to: 0
 21594                           ;eusartparser.c: 613:                         write_package(*package);
 21595  001F04  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21596  001F08  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21597  001F0C  EE00  F011         	lfsr	0,write_package@package
 21598  001F10  0E06               	movlw	6
 21599  001F12                     u33911:
 21600  001F12  CFDB FFEB          	movff	plusw2,plusw0
 21601  001F16  06E8               	decf	wreg,f,c
 21602  001F18  E2FC               	bc	u33911
 21603  001F1A  EC23  F04C         	call	_write_package	;wreg free
 21604  001F1E                     l27790:
 21605  001F1E  0100               	movlb	0	; () banked
 21606  001F20  2BF0               	incf	eusartparser@i_7383& (0+255),f,b
 21607  001F22                     l27792:
 21608                           
 21609                           ; BSR set to: 0
 21610  001F22  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21611  001F24  5DF0               	subwf	eusartparser@i_7383& (0+255),w,b
 21612  001F26  B0D8               	btfsc	status,0,c
 21613  001F28  D4B8               	goto	l27486
 21614  001F2A  D7CD               	goto	l27782
 21615  001F2C                     l27798:
 21616                           
 21617                           ; BSR set to: 0
 21618                           ;eusartparser.c: 619:                 if(programmer_enable){
 21619  001F2C  5185               	movf	_programmer_enable& (0+255),w,b
 21620  001F2E  B4D8               	btfsc	status,2,c
 21621  001F30  D4DB               	goto	l27498
 21622                           
 21623                           ; BSR set to: 0
 21624                           ;eusartparser.c: 620:                     if(save_f==0){
 21625  001F32  0101               	movlb	1	; () banked
 21626  001F34  518F               	movf	eusartparser@save_f& (0+255),w,b
 21627  001F36  B4D8               	btfsc	status,2,c
 21628  001F38  D5F0               	goto	u33650
 21629                           
 21630                           ; BSR set to: 1
 21631                           ;eusartparser.c: 627:                         serial=((uint32_t)buffer<<16)+(uint32_t)pa
      +                          ckage->data.data16;
 21632                           
 21633                           ; BSR set to: 1
 21634                           ;eusartparser.c: 621:                         buffer=package->data.data16;
 21635  001F3A  0100               	movlb	0	; () banked
 21636  001F3C  EE20 F002          	lfsr	2,2
 21637  001F40  51E0               	movf	eusartparser@package& (0+255),w,b
 21638  001F42  26D9               	addwf	fsr2l,f,c
 21639  001F44  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21640  001F46  22DA               	addwfc	fsr2h,f,c
 21641  001F48  CFDE F0E2          	movff	postinc2,??_eusartparser
 21642  001F4C  CFDD F0E3          	movff	postdec2,??_eusartparser+1
 21643  001F50  0101               	movlb	1	; () banked
 21644  001F52  5185               	movf	eusartparser@buffer& (0+255),w,b
 21645  001F54  0100               	movlb	0	; () banked
 21646  001F56  6FE4               	movwf	(??_eusartparser+2)& (0+255),b
 21647  001F58  0101               	movlb	1	; () banked
 21648  001F5A  5186               	movf	(eusartparser@buffer+1)& (0+255),w,b
 21649  001F5C  0100               	movlb	0	; () banked
 21650  001F5E  6FE5               	movwf	(??_eusartparser+3)& (0+255),b
 21651  001F60  6BE6               	clrf	(??_eusartparser+4)& (0+255),b
 21652  001F62  6BE7               	clrf	(??_eusartparser+5)& (0+255),b
 21653  001F64  C0E5  F0E7         	movff	??_eusartparser+3,??_eusartparser+5
 21654  001F68  C0E4  F0E6         	movff	??_eusartparser+2,??_eusartparser+4
 21655  001F6C  6BE5               	clrf	(??_eusartparser+3)& (0+255),b
 21656  001F6E  6BE4               	clrf	(??_eusartparser+2)& (0+255),b
 21657  001F70  51E2               	movf	??_eusartparser& (0+255),w,b
 21658  001F72  25E4               	addwf	(??_eusartparser+2)& (0+255),w,b
 21659  001F74  6FF8               	movwf	eusartparser@serial& (0+255),b
 21660  001F76  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21661  001F78  21E5               	addwfc	(??_eusartparser+3)& (0+255),w,b
 21662  001F7A  6FF9               	movwf	(eusartparser@serial+1)& (0+255),b
 21663  001F7C  0E00               	movlw	0
 21664  001F7E  21E6               	addwfc	(??_eusartparser+4)& (0+255),w,b
 21665  001F80  6FFA               	movwf	(eusartparser@serial+2)& (0+255),b
 21666  001F82  0E00               	movlw	0
 21667  001F84  21E7               	addwfc	(??_eusartparser+5)& (0+255),w,b
 21668  001F86  6FFB               	movwf	(eusartparser@serial+3)& (0+255),b
 21669                           
 21670                           ; BSR set to: 0
 21671                           ;eusartparser.c: 628:                         if(validateRemoteSerialNumber(serial, NO, 
      +                          &pos)==NoCMD){
 21672  001F88  C0F8  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 21673  001F8C  C0F9  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 21674  001F90  C0FA  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 21675  001F94  C0FB  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 21676  001F98  0E00               	movlw	0
 21677  001F9A  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 21678  001F9C  0EEC               	movlw	low eusartparser@pos
 21679  001F9E  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 21680  001FA0  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 21681  001FA2  ECD4  F030         	call	_validateRemoteSerialNumber	;wreg free
 21682  001FA6  0900               	iorlw	0
 21683  001FA8  A4D8               	btfss	status,2,c
 21684  001FAA  D661               	goto	u33720
 21685                           
 21686                           ; BSR set to: 0
 21687                           ;eusartparser.c: 629:                             for(uint8_t i=0;;i++)
 21688  001FAC  0E00               	movlw	0
 21689  001FAE  6FF4               	movwf	eusartparser@i_7384& (0+255),b
 21690  001FB0                     l27816:
 21691                           
 21692                           ; BSR set to: 0
 21693                           ;eusartparser.c: 630:                                 if(cmdMemoryIsEmpty(1,i)==1&&packa
      +                          ge->address==0){
 21694  001FB0  C0F4  F02E         	movff	eusartparser@i_7384,cmdMemoryIsEmpty@position
 21695  001FB4  0E01               	movlw	1
 21696  001FB6  ECA6  F040         	call	_cmdMemoryIsEmpty
 21697  001FBA  06E8               	decf	wreg,f,c
 21698  001FBC  A4D8               	btfss	status,2,c
 21699  001FBE  D018               	goto	l27828
 21700  001FC0  0100               	movlb	0	; () banked
 21701  001FC2  EE20 F001          	lfsr	2,1
 21702  001FC6  51E0               	movf	eusartparser@package& (0+255),w,b
 21703  001FC8  26D9               	addwf	fsr2l,f,c
 21704  001FCA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21705  001FCC  22DA               	addwfc	fsr2h,f,c
 21706  001FCE  50DF               	movf	indf2,w,c
 21707  001FD0  A4D8               	btfss	status,2,c
 21708  001FD2  D00E               	goto	l27828
 21709                           
 21710                           ; BSR set to: 0
 21711                           ;eusartparser.c: 631:                                     saveNewSerial(1,serial,i);
 21712  001FD4  C0F8  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 21713  001FD8  C0F9  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 21714  001FDC  C0FA  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 21715  001FE0  C0FB  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 21716  001FE4  C0F4  F0DC         	movff	eusartparser@i_7384,saveNewSerial@position
 21717  001FE8  0E01               	movlw	1
 21718  001FEA  EC74  F045         	call	_saveNewSerial
 21719  001FEE  D613               	goto	l27628
 21720  001FF0                     l27828:
 21721  001FF0  C0F4  F02E         	movff	eusartparser@i_7384,cmdMemoryIsEmpty@position
 21722  001FF4  0E01               	movlw	1
 21723  001FF6  ECA6  F040         	call	_cmdMemoryIsEmpty
 21724  001FFA  06E8               	decf	wreg,f,c
 21725  001FFC  A4D8               	btfss	status,2,c
 21726  001FFE  D009               	goto	l27832
 21727                           
 21728                           ;eusartparser.c: 637:                                     package->address--;
 21729  002000  0100               	movlb	0	; () banked
 21730  002002  EE20 F001          	lfsr	2,1
 21731  002006  51E0               	movf	eusartparser@package& (0+255),w,b
 21732  002008  26D9               	addwf	fsr2l,f,c
 21733  00200A  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21734  00200C  22DA               	addwfc	fsr2h,f,c
 21735  00200E  06DF               	decf	indf2,f,c
 21736                           
 21737                           ;eusartparser.c: 638:                                 }
 21738  002010  D005               	goto	l27838
 21739  002012                     l27832:
 21740  002012  0100               	movlb	0	; () banked
 21741  002014  51F4               	movf	eusartparser@i_7384& (0+255),w,b
 21742  002016  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21743  002018  B4D8               	btfsc	status,2,c
 21744  00201A  D629               	goto	u33720
 21745  00201C                     l27838:
 21746                           
 21747                           ; BSR set to: 0
 21748  00201C  2BF4               	incf	eusartparser@i_7384& (0+255),f,b
 21749  00201E  D7C8               	goto	l27816
 21750  002020                     l27850:
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;eusartparser.c: 658:                 if(programmer_enable){
 21754  002020  5185               	movf	_programmer_enable& (0+255),w,b
 21755  002022  B4D8               	btfsc	status,2,c
 21756  002024  D461               	goto	l27498
 21757                           
 21758                           ; BSR set to: 0
 21759                           ;eusartparser.c: 659:                     for(uint8_t i=0;;i++)
 21760  002026  0E00               	movlw	0
 21761  002028  6FF5               	movwf	eusartparser@i_7385& (0+255),b
 21762  00202A                     l27854:
 21763                           
 21764                           ; BSR set to: 0
 21765                           ;eusartparser.c: 660:                         if(cmdMemoryIsEmpty(1,i)==0&&package->addr
      +                          ess==0){
 21766  00202A  C0F5  F02E         	movff	eusartparser@i_7385,cmdMemoryIsEmpty@position
 21767  00202E  0E01               	movlw	1
 21768  002030  ECA6  F040         	call	_cmdMemoryIsEmpty
 21769  002034  0900               	iorlw	0
 21770  002036  A4D8               	btfss	status,2,c
 21771  002038  D010               	goto	l27868
 21772  00203A  0100               	movlb	0	; () banked
 21773  00203C  EE20 F001          	lfsr	2,1
 21774  002040  51E0               	movf	eusartparser@package& (0+255),w,b
 21775  002042  26D9               	addwf	fsr2l,f,c
 21776  002044  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21777  002046  22DA               	addwfc	fsr2h,f,c
 21778  002048  50DF               	movf	indf2,w,c
 21779  00204A  A4D8               	btfss	status,2,c
 21780  00204C  D006               	goto	l27868
 21781                           
 21782                           ; BSR set to: 0
 21783                           ;eusartparser.c: 661:                             RemoveSerial(1, i);
 21784  00204E  C0F5  F03A         	movff	eusartparser@i_7385,RemoveSerial@position
 21785  002052  0E01               	movlw	1
 21786  002054  EC55  F043         	call	_RemoveSerial
 21787  002058  D5DE               	goto	l27628
 21788  00205A                     l27868:
 21789  00205A  C0F5  F02E         	movff	eusartparser@i_7385,cmdMemoryIsEmpty@position
 21790  00205E  0E01               	movlw	1
 21791  002060  ECA6  F040         	call	_cmdMemoryIsEmpty
 21792  002064  0900               	iorlw	0
 21793  002066  A4D8               	btfss	status,2,c
 21794  002068  D009               	goto	l27872
 21795                           
 21796                           ;eusartparser.c: 668:                             package->address--;
 21797  00206A  0100               	movlb	0	; () banked
 21798  00206C  EE20 F001          	lfsr	2,1
 21799  002070  51E0               	movf	eusartparser@package& (0+255),w,b
 21800  002072  26D9               	addwf	fsr2l,f,c
 21801  002074  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21802  002076  22DA               	addwfc	fsr2h,f,c
 21803  002078  06DF               	decf	indf2,f,c
 21804                           
 21805                           ;eusartparser.c: 669:                         }
 21806  00207A  D005               	goto	l27880
 21807  00207C                     l27872:
 21808  00207C  0100               	movlb	0	; () banked
 21809  00207E  51F5               	movf	eusartparser@i_7385& (0+255),w,b
 21810  002080  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21811  002082  B4D8               	btfsc	status,2,c
 21812  002084  D5F4               	goto	u33720
 21813  002086                     l27880:
 21814                           
 21815                           ; BSR set to: 0
 21816  002086  2BF5               	incf	eusartparser@i_7385& (0+255),f,b
 21817  002088  D7D0               	goto	l27854
 21818  00208A                     l27886:
 21819                           
 21820                           ; BSR set to: 0
 21821                           ;eusartparser.c: 683:                 for(uint8_t i=0;;i++)
 21822  00208A  0E00               	movlw	0
 21823  00208C  6FF6               	movwf	eusartparser@i_7386& (0+255),b
 21824  00208E                     l27888:
 21825                           
 21826                           ; BSR set to: 0
 21827                           ;eusartparser.c: 684:                     if(cmdMemoryIsEmpty(1,i)==0&&package->address=
      +                          =0){
 21828  00208E  C0F6  F02E         	movff	eusartparser@i_7386,cmdMemoryIsEmpty@position
 21829  002092  0E01               	movlw	1
 21830  002094  ECA6  F040         	call	_cmdMemoryIsEmpty
 21831  002098  0900               	iorlw	0
 21832  00209A  A4D8               	btfss	status,2,c
 21833  00209C  D035               	goto	l27908
 21834  00209E  0100               	movlb	0	; () banked
 21835  0020A0  EE20 F001          	lfsr	2,1
 21836  0020A4  51E0               	movf	eusartparser@package& (0+255),w,b
 21837  0020A6  26D9               	addwf	fsr2l,f,c
 21838  0020A8  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21839  0020AA  22DA               	addwfc	fsr2h,f,c
 21840  0020AC  50DF               	movf	indf2,w,c
 21841  0020AE  A4D8               	btfss	status,2,c
 21842  0020B0  D02B               	goto	l27908
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;eusartparser.c: 685:                         ReadSerial(1, &serial, i);
 21846  0020B2  0EF8               	movlw	low eusartparser@serial
 21847  0020B4  6E2E               	movwf	ReadSerial@tempSerial^0,c
 21848  0020B6  C0F6  F02F         	movff	eusartparser@i_7386,ReadSerial@position
 21849  0020BA  0E01               	movlw	1
 21850  0020BC  ECAC  F045         	call	_ReadSerial
 21851                           
 21852                           ;eusartparser.c: 686:                         package->data.data16=(uint16_t)serial;
 21853  0020C0  0100               	movlb	0	; () banked
 21854  0020C2  EE20 F002          	lfsr	2,2
 21855  0020C6  51E0               	movf	eusartparser@package& (0+255),w,b
 21856  0020C8  26D9               	addwf	fsr2l,f,c
 21857  0020CA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21858  0020CC  22DA               	addwfc	fsr2h,f,c
 21859  0020CE  C0F8  FFDE         	movff	eusartparser@serial,postinc2
 21860  0020D2  C0F9  FFDD         	movff	eusartparser@serial+1,postdec2
 21861                           
 21862                           ; BSR set to: 0
 21863                           ;eusartparser.c: 687:                         write_package(*package);
 21864  0020D6  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21865  0020DA  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21866  0020DE  EE00  F011         	lfsr	0,write_package@package
 21867  0020E2  0E06               	movlw	6
 21868  0020E4                     u34071:
 21869  0020E4  CFDB FFEB          	movff	plusw2,plusw0
 21870  0020E8  06E8               	decf	wreg,f,c
 21871  0020EA  E2FC               	bc	u34071
 21872  0020EC  EC23  F04C         	call	_write_package	;wreg free
 21873  0020F0                     l27898:
 21874                           
 21875                           ;eusartparser.c: 688:                         package->data.data16=(uint16_t)(serial>>16
      +                          );
 21876  0020F0  0100               	movlb	0	; () banked
 21877  0020F2  EE20 F002          	lfsr	2,2
 21878  0020F6  51E0               	movf	eusartparser@package& (0+255),w,b
 21879  0020F8  26D9               	addwf	fsr2l,f,c
 21880  0020FA  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21881  0020FC  22DA               	addwfc	fsr2h,f,c
 21882  0020FE  C0FA  FFDE         	movff	eusartparser@serial+2,postinc2
 21883  002102  C0FB  FFDD         	movff	eusartparser@serial+3,postdec2
 21884  002106  D417               	goto	l27514
 21885  002108                     l27908:
 21886  002108  C0F6  F02E         	movff	eusartparser@i_7386,cmdMemoryIsEmpty@position
 21887  00210C  0E01               	movlw	1
 21888  00210E  ECA6  F040         	call	_cmdMemoryIsEmpty
 21889  002112  0900               	iorlw	0
 21890  002114  A4D8               	btfss	status,2,c
 21891  002116  D009               	goto	l27912
 21892                           
 21893                           ;eusartparser.c: 695:                         package->address--;
 21894  002118  0100               	movlb	0	; () banked
 21895  00211A  EE20 F001          	lfsr	2,1
 21896  00211E  51E0               	movf	eusartparser@package& (0+255),w,b
 21897  002120  26D9               	addwf	fsr2l,f,c
 21898  002122  51E1               	movf	(eusartparser@package+1)& (0+255),w,b
 21899  002124  22DA               	addwfc	fsr2h,f,c
 21900  002126  06DF               	decf	indf2,f,c
 21901                           
 21902                           ;eusartparser.c: 696:                     }
 21903  002128  D006               	goto	l27918
 21904  00212A                     l27912:
 21905  00212A  0100               	movlb	0	; () banked
 21906  00212C  51F6               	movf	eusartparser@i_7386& (0+255),w,b
 21907  00212E  19B9               	xorwf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 21908  002130  B4D8               	btfsc	status,2,c
 21909  002132  EF74  F00C         	goto	l27498
 21910  002136                     l27918:
 21911                           
 21912                           ; BSR set to: 0
 21913  002136  2BF6               	incf	eusartparser@i_7386& (0+255),f,b
 21914  002138  D7AA               	goto	l27888
 21915  00213A                     l27924:
 21916                           
 21917                           ; BSR set to: 0
 21918  00213A  C0E0  FFD9         	movff	eusartparser@package,fsr2l
 21919  00213E  C0E1  FFDA         	movff	eusartparser@package+1,fsr2h
 21920  002142  50DF               	movf	indf2,w,c
 21921  002144  6FE2               	movwf	??_eusartparser& (0+255),b
 21922  002146  6BE3               	clrf	(??_eusartparser+1)& (0+255),b
 21923                           
 21924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21925                           ; Switch size 1, requested type "simple"
 21926                           ; Number of cases is 1, Range of values is 0 to 0
 21927                           ; switch strategies available:
 21928                           ; Name         Instructions Cycles
 21929                           ; simple_byte            4     3 (average)
 21930                           ;	Chosen strategy is simple_byte
 21931  002148  51E3               	movf	(??_eusartparser+1)& (0+255),w,b
 21932  00214A  0A00               	xorlw	0	; case 0
 21933  00214C  A4D8               	btfss	status,2,c
 21934  00214E  EF74  F00C         	goto	l27498
 21935                           
 21936                           ; BSR set to: 0
 21937                           ; Switch size 1, requested type "simple"
 21938                           ; Number of cases is 18, Range of values is 0 to 17
 21939                           ; switch strategies available:
 21940                           ; Name         Instructions Cycles
 21941                           ; simple_byte           55    28 (average)
 21942                           ;	Chosen strategy is simple_byte
 21943  002152  51E2               	movf	??_eusartparser& (0+255),w,b
 21944  002154  0A00               	xorlw	0	; case 0
 21945  002156  B4D8               	btfsc	status,2,c
 21946  002158  EF47  F00C         	goto	l27484
 21947  00215C  0A01               	xorlw	1	; case 1
 21948  00215E  B4D8               	btfsc	status,2,c
 21949  002160  EF63  F00C         	goto	l27490
 21950  002164  0A03               	xorlw	3	; case 2
 21951  002166  B4D8               	btfsc	status,2,c
 21952  002168  EF7D  F00C         	goto	l27502
 21953  00216C  0A01               	xorlw	1	; case 3
 21954  00216E  B4D8               	btfsc	status,2,c
 21955  002170  EF4D  F00C         	goto	l27486
 21956  002174  0A07               	xorlw	7	; case 4
 21957  002176  B4D8               	btfsc	status,2,c
 21958  002178  EFB7  F00C         	goto	l27532
 21959  00217C  0A01               	xorlw	1	; case 5
 21960  00217E  B4D8               	btfsc	status,2,c
 21961  002180  D427               	goto	l27550
 21962  002182  0A03               	xorlw	3	; case 6
 21963  002184  B4D8               	btfsc	status,2,c
 21964  002186  D452               	goto	l27568
 21965  002188  0A01               	xorlw	1	; case 7
 21966  00218A  B4D8               	btfsc	status,2,c
 21967  00218C  D487               	goto	l27586
 21968  00218E  0A0F               	xorlw	15	; case 8
 21969  002190  B4D8               	btfsc	status,2,c
 21970  002192  D4BC               	goto	l27604
 21971  002194  0A01               	xorlw	1	; case 9
 21972  002196  B4D8               	btfsc	status,2,c
 21973  002198  D579               	goto	l27656
 21974  00219A  0A03               	xorlw	3	; case 10
 21975  00219C  B4D8               	btfsc	status,2,c
 21976  00219E  D5AB               	goto	l27692
 21977  0021A0  0A01               	xorlw	1	; case 11
 21978  0021A2  B4D8               	btfsc	status,2,c
 21979  0021A4  D5F4               	goto	l27726
 21980  0021A6  0A07               	xorlw	7	; case 12
 21981  0021A8  B4D8               	btfsc	status,2,c
 21982  0021AA  D622               	goto	l27744
 21983  0021AC  0A01               	xorlw	1	; case 13
 21984  0021AE  B4D8               	btfsc	status,2,c
 21985  0021B0  D64D               	goto	l27762
 21986  0021B2  0A03               	xorlw	3	; case 14
 21987  0021B4  B4D8               	btfsc	status,2,c
 21988  0021B6  D682               	goto	l27780
 21989  0021B8  0A01               	xorlw	1	; case 15
 21990  0021BA  B4D8               	btfsc	status,2,c
 21991  0021BC  D6B7               	goto	l27798
 21992  0021BE  0A1F               	xorlw	31	; case 16
 21993  0021C0  B4D8               	btfsc	status,2,c
 21994  0021C2  D72E               	goto	l27850
 21995  0021C4  0A01               	xorlw	1	; case 17
 21996  0021C6  B4D8               	btfsc	status,2,c
 21997  0021C8  D760               	goto	l27886
 21998  0021CA  EF74  F00C         	goto	l27498
 21999  0021CE                     __end_of_eusartparser:
 22000                           	callstack 0
 22001                           
 22002 ;; *************** function _write_eusartparser *****************
 22003 ;; Defined at:
 22004 ;;		line 227 in file "eusartparser.c"
 22005 ;; Parameters:    Size  Location     Type
 22006 ;;  package         7   15[COMRAM] struct package_t
 22007 ;; Auto vars:     Size  Location     Type
 22008 ;;  debug2          2   32[COMRAM] volatile int 
 22009 ;;  debug           2   30[COMRAM] volatile int 
 22010 ;; Return value:  Size  Location     Type
 22011 ;;                  1    wreg      void 
 22012 ;; Registers used:
 22013 ;;		wreg, status,2, status,0
 22014 ;; Tracked objects:
 22015 ;;		On entry : 3F/0
 22016 ;;		On exit  : 3F/0
 22017 ;;		Unchanged: 0/0
 22018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22019 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22021 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22022 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22023 ;;Total ram usage:       19 bytes
 22024 ;; Hardware stack levels used: 1
 22025 ;; Hardware stack levels required when called: 4
 22026 ;; This function calls:
 22027 ;;		Nothing
 22028 ;; This function is called by:
 22029 ;;		_eusartparser
 22030 ;; This function uses a non-reentrant model
 22031 ;;
 22032                           
 22033                           	psect	text75
 22034  002F72                     __ptext75:
 22035                           	callstack 0
 22036  002F72                     _write_eusartparser:
 22037                           	callstack 25
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;eusartparser.c: 228:         volatile int debug=(uint8_t)package.address;
 22041                           
 22042                           ;incstack = 0
 22043  002F72  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 22044  002F76  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;eusartparser.c: 229:         volatile int debug2=0x10;
 22048  002F78  0E00               	movlw	0
 22049  002F7A  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 22050  002F7C  0E10               	movlw	16
 22051  002F7E  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 22052                           
 22053                           ;eusartparser.c: 230:         switch((uint8_t)package.address){
 22054  002F80  D240               	goto	l24520
 22055  002F82                     l3619:
 22056                           
 22057                           ; BSR set to: 0
 22058                           ;eusartparser.c: 233:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 22059  002F82  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 22060                           
 22061                           ;eusartparser.c: 234:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 22062  002F86  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 22063                           
 22064                           ;eusartparser.c: 235:                 break;
 22065  002F8A  0012               	return	
 22066  002F8C                     l3621:
 22067                           
 22068                           ; BSR set to: 0
 22069                           ;eusartparser.c: 237:                 var_sys_NVM.motorPower=package.data.data8[0];
 22070  002F8C  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 22071                           
 22072                           ;eusartparser.c: 238:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 22073  002F90  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 22074                           
 22075                           ;eusartparser.c: 239:                 break;
 22076  002F94  0012               	return	
 22077  002F96                     l3622:
 22078                           
 22079                           ; BSR set to: 0
 22080                           ;eusartparser.c: 241:                 var_sys_NVM.walkTime=package.data.data8[1];
 22081  002F96  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 22082                           
 22083                           ;eusartparser.c: 242:                 break;
 22084  002F9A  0012               	return	
 22085  002F9C                     l3624:
 22086                           
 22087                           ; BSR set to: 0
 22088                           ;eusartparser.c: 245:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 22089  002F9C  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 22090                           
 22091                           ;eusartparser.c: 246:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 22092  002FA0  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 22093                           
 22094                           ;eusartparser.c: 247:                 break;
 22095  002FA4  0012               	return	
 22096  002FA6                     l3626:
 22097                           
 22098                           ; BSR set to: 0
 22099                           ;eusartparser.c: 250:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 22100  002FA6  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 22101                           
 22102                           ;eusartparser.c: 251:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 22103  002FAA  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 22104                           
 22105                           ;eusartparser.c: 252:                 break;
 22106  002FAE  0012               	return	
 22107  002FB0                     l3627:
 22108                           
 22109                           ; BSR set to: 0
 22110                           ;eusartparser.c: 254:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 22111  002FB0  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 22112                           
 22113                           ;eusartparser.c: 255:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 22114  002FB4  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 22115                           
 22116                           ;eusartparser.c: 256:                 break;
 22117  002FB8  0012               	return	
 22118  002FBA                     l3628:
 22119                           
 22120                           ; BSR set to: 0
 22121                           ;eusartparser.c: 258:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 22122  002FBA  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 22123                           
 22124                           ;eusartparser.c: 259:                 break;
 22125  002FBE  0012               	return	
 22126  002FC0                     l3629:
 22127                           
 22128                           ; BSR set to: 0
 22129                           ;eusartparser.c: 261:                 var_sys_NVM.operationMode=package.data.data8[1];
 22130  002FC0  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 22131                           
 22132                           ;eusartparser.c: 262:                 break;
 22133  002FC4  0012               	return	
 22134  002FC6                     l3630:
 22135                           
 22136                           ; BSR set to: 0
 22137                           ;eusartparser.c: 264:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 22138  002FC6  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 22139                           
 22140                           ;eusartparser.c: 265:                 break;
 22141  002FCA  0012               	return	
 22142  002FCC                     l3631:
 22143                           
 22144                           ; BSR set to: 0
 22145                           ;eusartparser.c: 267:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 22146  002FCC  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 22147                           
 22148                           ;eusartparser.c: 268:                 break;
 22149  002FD0  0012               	return	
 22150  002FD2                     l3632:
 22151                           
 22152                           ; BSR set to: 0
 22153                           ;eusartparser.c: 270:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 22154  002FD2  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 22155                           
 22156                           ;eusartparser.c: 271:                 break;
 22157  002FD6  0012               	return	
 22158  002FD8                     l3633:
 22159                           
 22160                           ; BSR set to: 0
 22161                           ;eusartparser.c: 274:                 var_sys_NVM.homemPresente=package.data.data8[1];
 22162  002FD8  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 22163                           
 22164                           ;eusartparser.c: 275:                 break;
 22165  002FDC  0012               	return	
 22166  002FDE                     l3635:
 22167                           
 22168                           ; BSR set to: 0
 22169                           ;eusartparser.c: 278:                 var_sys_NVM.logicDigital=package.data.data8[1];
 22170  002FDE  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 22171                           
 22172                           ;eusartparser.c: 279:                 break;
 22173  002FE2  0012               	return	
 22174  002FE4                     l3636:
 22175                           
 22176                           ; BSR set to: 0
 22177                           ;eusartparser.c: 281:                 var_sys_NVM.softStart=package.data.data8[0];
 22178  002FE4  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 22179                           
 22180                           ;eusartparser.c: 282:                 var_sys_NVM.softstop=package.data.data8[1];
 22181  002FE8  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 22182                           
 22183                           ;eusartparser.c: 283:                 break;
 22184  002FEC  0012               	return	
 22185  002FEE                     l3638:
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;eusartparser.c: 286:                 var_sys_NVM.ligthTime=package.data.data8[1];
 22189  002FEE  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 22190                           
 22191                           ;eusartparser.c: 287:                 break;
 22192  002FF2  0012               	return	
 22193  002FF4                     l3640:
 22194                           
 22195                           ; BSR set to: 0
 22196                           ;eusartparser.c: 290:                 var_sys_NVM.folow_me=package.data.data8[1];
 22197  002FF4  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 22198                           
 22199                           ;eusartparser.c: 291:                 break;
 22200  002FF8  0012               	return	
 22201  002FFA                     l3641:
 22202                           
 22203                           ; BSR set to: 0
 22204                           ;eusartparser.c: 293:                 var_sys_NVM.Stopboton=package.data.data8[1];
 22205  002FFA  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 22206                           
 22207                           ;eusartparser.c: 294:                 break;
 22208  002FFE  0012               	return	
 22209  003000                     l3642:
 22210                           
 22211                           ; BSR set to: 0
 22212                           ;eusartparser.c: 296:                 var_sys_NVM.electricBrake=package.data.data8[1];
 22213  003000  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 22214                           
 22215                           ;eusartparser.c: 297:                 break;
 22216  003004  0012               	return	
 22217  003006                     l3643:
 22218                           
 22219                           ; BSR set to: 0
 22220                           ;eusartparser.c: 299:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 22221  003006  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 22222                           
 22223                           ;eusartparser.c: 300:                 break;
 22224  00300A  0012               	return	
 22225  00300C                     l3645:
 22226                           
 22227                           ; BSR set to: 0
 22228                           ;eusartparser.c: 303:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 22229  00300C  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 22230                           
 22231                           ;eusartparser.c: 304:                 break;
 22232  003010  0012               	return	
 22233  003012                     l3646:
 22234                           
 22235                           ; BSR set to: 0
 22236                           ;eusartparser.c: 306:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 22237  003012  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 22238                           
 22239                           ;eusartparser.c: 307:                 break;
 22240  003016  0012               	return	
 22241  003018                     l3647:
 22242                           
 22243                           ; BSR set to: 0
 22244                           ;eusartparser.c: 309:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 22245  003018  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 22246                           
 22247                           ;eusartparser.c: 310:                 break;
 22248  00301C  0012               	return	
 22249  00301E                     l3648:
 22250                           
 22251                           ; BSR set to: 0
 22252                           ;eusartparser.c: 312:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 22253  00301E  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 22254                           
 22255                           ;eusartparser.c: 313:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 22256  003022  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 22257                           
 22258                           ;eusartparser.c: 314:                 break;
 22259  003026  0012               	return	
 22260  003028                     l24498:
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;eusartparser.c: 317:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22264  003028  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22265  00302A  6E17               	movwf	??_write_eusartparser^0,c
 22266  00302C  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22267  00302E  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22268  003030  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22269  003032  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22270  003034  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22271  003038  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22272  00303C  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22273  00303E  6A17               	clrf	??_write_eusartparser^0,c
 22274  003040  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22275  003042  1017               	iorwf	??_write_eusartparser^0,w,c
 22276  003044  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22277  003046  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22278  003048  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22279  00304A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22280  00304C  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22281  00304E  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22282  003050  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22283  003052  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22284  003054  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22285  003056  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22286                           
 22287                           ;eusartparser.c: 318:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22288  003058  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22289  00305A  6E17               	movwf	??_write_eusartparser^0,c
 22290  00305C  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22291  00305E  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22292  003060  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22293  003062  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22294  003064  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22295  003068  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22296  00306C  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22297  00306E  6A17               	clrf	??_write_eusartparser^0,c
 22298  003070  1C17               	comf	??_write_eusartparser^0,w,c
 22299  003072  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22300  003074  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22301  003076  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22302  003078  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22303  00307A  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22304  00307C  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22305  00307E  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22306  003080  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22307  003082  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22308  003084  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22309  003086  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22310  003088  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22311  00308A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22312  00308C  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22313  00308E  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22314  003090  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22315  003092  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22316  003094  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22317  003096  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22318                           
 22319                           ;eusartparser.c: 319:                 break;
 22320  003098  0012               	return	
 22321  00309A                     l24500:
 22322                           
 22323                           ; BSR set to: 0
 22324                           ;eusartparser.c: 321:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22325  00309A  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22326  00309C  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22327  00309E  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22328  0030A0  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22329  0030A2  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22330  0030A4  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22331  0030A6  0E00               	movlw	0
 22332  0030A8  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22333  0030AA  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22334  0030AC  0E00               	movlw	0
 22335  0030AE  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22336  0030B0  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22337                           
 22338                           ;eusartparser.c: 322:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22339  0030B2  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22340  0030B4  6E17               	movwf	??_write_eusartparser^0,c
 22341  0030B6  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22342  0030B8  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22343  0030BA  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22344  0030BC  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22345  0030BE  1C17               	comf	??_write_eusartparser^0,w,c
 22346  0030C0  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22347  0030C2  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22348  0030C4  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22349  0030C6  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22350  0030C8  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22351  0030CA  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22352  0030CC  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22353  0030CE  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 22354  0030D0  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22355  0030D2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 22356  0030D4  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 22357  0030D6  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22358  0030D8  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 22359  0030DA  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 22360  0030DC  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22361  0030DE  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 22362  0030E0  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 22363  0030E2  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22364  0030E4  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 22365                           
 22366                           ;eusartparser.c: 323:                 break;
 22367  0030E6  0012               	return	
 22368  0030E8                     l3651:
 22369                           
 22370                           ; BSR set to: 0
 22371                           ;eusartparser.c: 326:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 22372  0030E8  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 22373                           
 22374                           ;eusartparser.c: 327:                 break;
 22375  0030EC  0012               	return	
 22376  0030EE                     l24502:
 22377                           
 22378                           ; BSR set to: 0
 22379                           ;eusartparser.c: 330:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 22380  0030EE  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22381  0030F0  6E17               	movwf	??_write_eusartparser^0,c
 22382  0030F2  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22383  0030F4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22384  0030F6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22385  0030F8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22386  0030FA  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22387  0030FE  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22388  003102  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22389  003104  6A17               	clrf	??_write_eusartparser^0,c
 22390  003106  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22391  003108  1017               	iorwf	??_write_eusartparser^0,w,c
 22392  00310A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22393  00310C  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22394  00310E  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22395  003110  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22396  003112  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22397  003114  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22398  003116  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22399  003118  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22400  00311A  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22401  00311C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22402                           
 22403                           ;eusartparser.c: 331:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 22404  00311E  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22405  003120  6E17               	movwf	??_write_eusartparser^0,c
 22406  003122  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22407  003124  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22408  003126  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22409  003128  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22410  00312A  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22411  00312E  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22412  003132  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22413  003134  6A17               	clrf	??_write_eusartparser^0,c
 22414  003136  1C17               	comf	??_write_eusartparser^0,w,c
 22415  003138  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22416  00313A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22417  00313C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22418  00313E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22419  003140  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22420  003142  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22421  003144  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22422  003146  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22423  003148  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22424  00314A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22425  00314C  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22426  00314E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22427  003150  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22428  003152  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22429  003154  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22430  003156  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22431  003158  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22432  00315A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22433  00315C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22434                           
 22435                           ;eusartparser.c: 332:                 break;
 22436  00315E  0012               	return	
 22437  003160                     l24504:
 22438                           
 22439                           ; BSR set to: 0
 22440                           ;eusartparser.c: 334:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22441  003160  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22442  003162  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22443  003164  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22444  003166  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22445  003168  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22446  00316A  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22447  00316C  0E00               	movlw	0
 22448  00316E  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22449  003170  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22450  003172  0E00               	movlw	0
 22451  003174  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22452  003176  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22453                           
 22454                           ;eusartparser.c: 335:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 22455  003178  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22456  00317A  6E17               	movwf	??_write_eusartparser^0,c
 22457  00317C  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22458  00317E  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22459  003180  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22460  003182  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22461  003184  1C17               	comf	??_write_eusartparser^0,w,c
 22462  003186  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22463  003188  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22464  00318A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22465  00318C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22466  00318E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22467  003190  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22468  003192  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22469  003194  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 22470  003196  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22471  003198  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 22472  00319A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 22473  00319C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22474  00319E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 22475  0031A0  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 22476  0031A2  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22477  0031A4  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 22478  0031A6  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 22479  0031A8  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22480  0031AA  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 22481                           
 22482                           ;eusartparser.c: 336:                 break;
 22483  0031AC  0012               	return	
 22484  0031AE                     l24506:
 22485                           
 22486                           ; BSR set to: 0
 22487                           ;eusartparser.c: 339:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 22488  0031AE  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22489  0031B0  6E17               	movwf	??_write_eusartparser^0,c
 22490  0031B2  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22491  0031B4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22492  0031B6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22493  0031B8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22494  0031BA  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22495  0031BE  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22496  0031C2  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22497  0031C4  6A17               	clrf	??_write_eusartparser^0,c
 22498  0031C6  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22499  0031C8  1017               	iorwf	??_write_eusartparser^0,w,c
 22500  0031CA  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22501  0031CC  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22502  0031CE  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22503  0031D0  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22504  0031D2  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22505  0031D4  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22506  0031D6  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22507  0031D8  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22508  0031DA  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22509  0031DC  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22510                           
 22511                           ;eusartparser.c: 340:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 22512  0031DE  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22513  0031E0  6E17               	movwf	??_write_eusartparser^0,c
 22514  0031E2  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22515  0031E4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22516  0031E6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22517  0031E8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22518  0031EA  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22519  0031EE  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22520  0031F2  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22521  0031F4  6A17               	clrf	??_write_eusartparser^0,c
 22522  0031F6  1C17               	comf	??_write_eusartparser^0,w,c
 22523  0031F8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22524  0031FA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22525  0031FC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22526  0031FE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22527  003200  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22528  003202  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22529  003204  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22530  003206  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22531  003208  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22532  00320A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22533  00320C  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22534  00320E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22535  003210  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22536  003212  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22537  003214  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22538  003216  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22539  003218  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22540  00321A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22541  00321C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22542                           
 22543                           ;eusartparser.c: 341:                 break;
 22544  00321E  0012               	return	
 22545  003220                     l24508:
 22546                           
 22547                           ; BSR set to: 0
 22548                           ;eusartparser.c: 343:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 22549  003220  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22550  003222  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22551  003224  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22552  003226  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22553  003228  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22554  00322A  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22555  00322C  0E00               	movlw	0
 22556  00322E  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22557  003230  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22558  003232  0E00               	movlw	0
 22559  003234  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22560  003236  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22561                           
 22562                           ;eusartparser.c: 344:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22563  003238  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22564  00323A  6E17               	movwf	??_write_eusartparser^0,c
 22565  00323C  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22566  00323E  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22567  003240  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22568  003242  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22569  003244  1C17               	comf	??_write_eusartparser^0,w,c
 22570  003246  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22571  003248  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22572  00324A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22573  00324C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22574  00324E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22575  003250  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22576  003252  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22577  003254  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22578  003256  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22579  003258  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22580  00325A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22581  00325C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22582  00325E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22583  003260  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22584  003262  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22585  003264  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22586  003266  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22587  003268  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22588  00326A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22589                           
 22590                           ;eusartparser.c: 345:                 break;
 22591  00326C  0012               	return	
 22592  00326E                     l3656:
 22593                           
 22594                           ; BSR set to: 0
 22595                           ;eusartparser.c: 348:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 22596  00326E  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 22597  003272  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 22598                           
 22599                           ;eusartparser.c: 349:                 break;
 22600  003276  0012               	return	
 22601  003278                     l3657:
 22602                           
 22603                           ; BSR set to: 0
 22604                           ;eusartparser.c: 352:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 22605  003278  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 22606  00327C  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 22607                           
 22608                           ;eusartparser.c: 353:                 break;
 22609  003280  0012               	return	
 22610  003282                     l24510:
 22611                           
 22612                           ; BSR set to: 0
 22613                           ;eusartparser.c: 356:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22614  003282  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22615  003284  6E17               	movwf	??_write_eusartparser^0,c
 22616  003286  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22617  003288  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22618  00328A  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22619  00328C  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22620  00328E  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22621  003292  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22622  003296  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22623  003298  6A17               	clrf	??_write_eusartparser^0,c
 22624  00329A  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22625  00329C  1017               	iorwf	??_write_eusartparser^0,w,c
 22626  00329E  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22627  0032A0  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22628  0032A2  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22629  0032A4  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22630  0032A6  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22631  0032A8  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22632  0032AA  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22633  0032AC  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22634  0032AE  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22635  0032B0  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22636                           
 22637                           ;eusartparser.c: 357:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22638  0032B2  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22639  0032B4  6E17               	movwf	??_write_eusartparser^0,c
 22640  0032B6  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22641  0032B8  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22642  0032BA  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22643  0032BC  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22644  0032BE  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22645  0032C2  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22646  0032C6  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22647  0032C8  6A17               	clrf	??_write_eusartparser^0,c
 22648  0032CA  1C17               	comf	??_write_eusartparser^0,w,c
 22649  0032CC  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22650  0032CE  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22651  0032D0  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22652  0032D2  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22653  0032D4  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22654  0032D6  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22655  0032D8  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22656  0032DA  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22657  0032DC  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22658  0032DE  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22659  0032E0  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22660  0032E2  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22661  0032E4  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22662  0032E6  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22663  0032E8  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22664  0032EA  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22665  0032EC  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22666  0032EE  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22667  0032F0  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22668                           
 22669                           ;eusartparser.c: 358:                 break;
 22670  0032F2  0012               	return	
 22671  0032F4                     l24512:
 22672                           
 22673                           ; BSR set to: 0
 22674                           ;eusartparser.c: 360:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22675  0032F4  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22676  0032F6  11CC               	iorwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22677  0032F8  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22678  0032FA  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22679  0032FC  11CD               	iorwf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22680  0032FE  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22681  003300  0E00               	movlw	0
 22682  003302  11CE               	iorwf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22683  003304  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22684  003306  0E00               	movlw	0
 22685  003308  11CF               	iorwf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22686  00330A  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22687                           
 22688                           ;eusartparser.c: 361:                 var_sys_NVM.learningTimeToOpen=var_sys_NVM.learnin
      +                          gTimeToOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22689  00330C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22690  00330E  6E17               	movwf	??_write_eusartparser^0,c
 22691  003310  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22692  003312  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22693  003314  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22694  003316  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22695  003318  1C17               	comf	??_write_eusartparser^0,w,c
 22696  00331A  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22697  00331C  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22698  00331E  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22699  003320  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22700  003322  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22701  003324  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22702  003326  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22703  003328  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 22704  00332A  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22705  00332C  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 22706  00332E  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 22707  003330  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22708  003332  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 22709  003334  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 22710  003336  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22711  003338  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 22712  00333A  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 22713  00333C  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22714  00333E  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 22715                           
 22716                           ;eusartparser.c: 362:                 break;
 22717  003340  0012               	return	
 22718  003342                     l24514:
 22719                           
 22720                           ; BSR set to: 0
 22721                           ;eusartparser.c: 365:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22722  003342  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22723  003344  6E17               	movwf	??_write_eusartparser^0,c
 22724  003346  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22725  003348  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22726  00334A  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22727  00334C  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22728  00334E  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22729  003352  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22730  003356  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22731  003358  6A17               	clrf	??_write_eusartparser^0,c
 22732  00335A  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22733  00335C  1017               	iorwf	??_write_eusartparser^0,w,c
 22734  00335E  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22735  003360  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22736  003362  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 22737  003364  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22738  003366  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22739  003368  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 22740  00336A  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22741  00336C  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22742  00336E  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 22743  003370  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22744                           
 22745                           ;eusartparser.c: 366:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 22746  003372  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22747  003374  6E17               	movwf	??_write_eusartparser^0,c
 22748  003376  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22749  003378  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22750  00337A  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22751  00337C  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22752  00337E  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 22753  003382  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 22754  003386  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22755  003388  6A17               	clrf	??_write_eusartparser^0,c
 22756  00338A  1C17               	comf	??_write_eusartparser^0,w,c
 22757  00338C  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22758  00338E  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22759  003390  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22760  003392  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22761  003394  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22762  003396  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22763  003398  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22764  00339A  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22765  00339C  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22766  00339E  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22767  0033A0  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22768  0033A2  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22769  0033A4  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22770  0033A6  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22771  0033A8  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22772  0033AA  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22773  0033AC  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22774  0033AE  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22775  0033B0  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22776                           
 22777                           ;eusartparser.c: 367:                 break;
 22778  0033B2  0012               	return	
 22779  0033B4                     l24516:
 22780                           
 22781                           ; BSR set to: 0
 22782                           ;eusartparser.c: 369:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22783  0033B4  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22784  0033B6  11D0               	iorwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22785  0033B8  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22786  0033BA  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22787  0033BC  11D1               	iorwf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22788  0033BE  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22789  0033C0  0E00               	movlw	0
 22790  0033C2  11D2               	iorwf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22791  0033C4  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22792  0033C6  0E00               	movlw	0
 22793  0033C8  11D3               	iorwf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22794  0033CA  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22795                           
 22796                           ;eusartparser.c: 370:                 var_sys_NVM.learningTimeToClose=var_sys_NVM.learni
      +                          ngTimeToClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 22797  0033CC  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22798  0033CE  6E17               	movwf	??_write_eusartparser^0,c
 22799  0033D0  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22800  0033D2  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22801  0033D4  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22802  0033D6  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22803  0033D8  1C17               	comf	??_write_eusartparser^0,w,c
 22804  0033DA  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22805  0033DC  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22806  0033DE  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22807  0033E0  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22808  0033E2  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22809  0033E4  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22810  0033E6  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22811  0033E8  51D0               	movf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 22812  0033EA  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22813  0033EC  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 22814  0033EE  51D1               	movf	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 22815  0033F0  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22816  0033F2  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 22817  0033F4  51D2               	movf	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 22818  0033F6  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22819  0033F8  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 22820  0033FA  51D3               	movf	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 22821  0033FC  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22822  0033FE  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 22823                           
 22824                           ;eusartparser.c: 371:                 break;
 22825  003400  0012               	return	
 22826  003402                     l24520:
 22827                           
 22828                           ; BSR set to: 0
 22829  003402  5011               	movf	(write_eusartparser@package+1)^0,w,c
 22830  003404  6E17               	movwf	??_write_eusartparser^0,c
 22831  003406  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22832                           
 22833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22834                           ; Switch size 1, requested type "simple"
 22835                           ; Number of cases is 1, Range of values is 0 to 0
 22836                           ; switch strategies available:
 22837                           ; Name         Instructions Cycles
 22838                           ; simple_byte            4     3 (average)
 22839                           ;	Chosen strategy is simple_byte
 22840  003408  5018               	movf	(??_write_eusartparser+1)^0,w,c
 22841  00340A  0A00               	xorlw	0	; case 0
 22842  00340C  A4D8               	btfss	status,2,c
 22843  00340E  0012               	return	
 22844                           
 22845                           ; BSR set to: 0
 22846                           ; Switch size 1, requested type "simple"
 22847                           ; Number of cases is 43, Range of values is 0 to 51
 22848                           ; switch strategies available:
 22849                           ; Name         Instructions Cycles
 22850                           ; simple_byte          130    66 (average)
 22851                           ;	Chosen strategy is simple_byte
 22852  003410  5017               	movf	??_write_eusartparser^0,w,c
 22853  003412  0A00               	xorlw	0	; case 0
 22854  003414  B4D8               	btfsc	status,2,c
 22855  003416  D5B5               	goto	l3619
 22856  003418  0A02               	xorlw	2	; case 2
 22857  00341A  B4D8               	btfsc	status,2,c
 22858  00341C  D5BF               	goto	l3624
 22859  00341E  0A01               	xorlw	1	; case 3
 22860  003420  B4D8               	btfsc	status,2,c
 22861  003422  D5E5               	goto	l3638
 22862  003424  0A06               	xorlw	6	; case 5
 22863  003426  B4D8               	btfsc	status,2,c
 22864  003428  D5BE               	goto	l3626
 22865  00342A  0A02               	xorlw	2	; case 7
 22866  00342C  B4D8               	btfsc	status,2,c
 22867  00342E  D5D7               	goto	l3635
 22868  003430  0A0F               	xorlw	15	; case 8
 22869  003432  B4D8               	btfsc	status,2,c
 22870  003434  D5EB               	goto	l3645
 22871  003436  0A02               	xorlw	2	; case 10
 22872  003438  B4D8               	btfsc	status,2,c
 22873  00343A  D5DC               	goto	l3640
 22874  00343C  0A1A               	xorlw	26	; case 16
 22875  00343E  B4D8               	btfsc	status,2,c
 22876  003440  D5A0               	goto	l3619
 22877  003442  0A01               	xorlw	1	; case 17
 22878  003444  B4D8               	btfsc	status,2,c
 22879  003446  D5A2               	goto	l3621
 22880  003448  0A03               	xorlw	3	; case 18
 22881  00344A  B4D8               	btfsc	status,2,c
 22882  00344C  D5A4               	goto	l3622
 22883  00344E  0A01               	xorlw	1	; case 19
 22884  003450  B4D8               	btfsc	status,2,c
 22885  003452  D5A4               	goto	l3624
 22886  003454  0A07               	xorlw	7	; case 20
 22887  003456  B4D8               	btfsc	status,2,c
 22888  003458  D5A6               	goto	l3626
 22889  00345A  0A01               	xorlw	1	; case 21
 22890  00345C  B4D8               	btfsc	status,2,c
 22891  00345E  D5A8               	goto	l3627
 22892  003460  0A03               	xorlw	3	; case 22
 22893  003462  B4D8               	btfsc	status,2,c
 22894  003464  D5AA               	goto	l3628
 22895  003466  0A01               	xorlw	1	; case 23
 22896  003468  B4D8               	btfsc	status,2,c
 22897  00346A  D5AA               	goto	l3629
 22898  00346C  0A0F               	xorlw	15	; case 24
 22899  00346E  B4D8               	btfsc	status,2,c
 22900  003470  D5AA               	goto	l3630
 22901  003472  0A01               	xorlw	1	; case 25
 22902  003474  B4D8               	btfsc	status,2,c
 22903  003476  D5AA               	goto	l3631
 22904  003478  0A03               	xorlw	3	; case 26
 22905  00347A  B4D8               	btfsc	status,2,c
 22906  00347C  D5AA               	goto	l3632
 22907  00347E  0A01               	xorlw	1	; case 27
 22908  003480  B4D8               	btfsc	status,2,c
 22909  003482  D5AA               	goto	l3633
 22910  003484  0A07               	xorlw	7	; case 28
 22911  003486  B4D8               	btfsc	status,2,c
 22912  003488  D5AA               	goto	l3635
 22913  00348A  0A01               	xorlw	1	; case 29
 22914  00348C  B4D8               	btfsc	status,2,c
 22915  00348E  D5AA               	goto	l3636
 22916  003490  0A03               	xorlw	3	; case 30
 22917  003492  B4D8               	btfsc	status,2,c
 22918  003494  D5AC               	goto	l3638
 22919  003496  0A01               	xorlw	1	; case 31
 22920  003498  B4D8               	btfsc	status,2,c
 22921  00349A  D5AC               	goto	l3640
 22922  00349C  0A3F               	xorlw	63	; case 32
 22923  00349E  B4D8               	btfsc	status,2,c
 22924  0034A0  D5AC               	goto	l3641
 22925  0034A2  0A01               	xorlw	1	; case 33
 22926  0034A4  B4D8               	btfsc	status,2,c
 22927  0034A6  D5AC               	goto	l3642
 22928  0034A8  0A03               	xorlw	3	; case 34
 22929  0034AA  B4D8               	btfsc	status,2,c
 22930  0034AC  D5AC               	goto	l3643
 22931  0034AE  0A01               	xorlw	1	; case 35
 22932  0034B0  B4D8               	btfsc	status,2,c
 22933  0034B2  D5AC               	goto	l3645
 22934  0034B4  0A07               	xorlw	7	; case 36
 22935  0034B6  B4D8               	btfsc	status,2,c
 22936  0034B8  D5AC               	goto	l3646
 22937  0034BA  0A01               	xorlw	1	; case 37
 22938  0034BC  B4D8               	btfsc	status,2,c
 22939  0034BE  D5AC               	goto	l3647
 22940  0034C0  0A03               	xorlw	3	; case 38
 22941  0034C2  B4D8               	btfsc	status,2,c
 22942  0034C4  D5AC               	goto	l3648
 22943  0034C6  0A01               	xorlw	1	; case 39
 22944  0034C8  B4D8               	btfsc	status,2,c
 22945  0034CA  D5AE               	goto	l24498
 22946  0034CC  0A0F               	xorlw	15	; case 40
 22947  0034CE  B4D8               	btfsc	status,2,c
 22948  0034D0  D5E4               	goto	l24500
 22949  0034D2  0A01               	xorlw	1	; case 41
 22950  0034D4  B4D8               	btfsc	status,2,c
 22951  0034D6  D608               	goto	l3651
 22952  0034D8  0A03               	xorlw	3	; case 42
 22953  0034DA  B4D8               	btfsc	status,2,c
 22954  0034DC  D608               	goto	l24502
 22955  0034DE  0A01               	xorlw	1	; case 43
 22956  0034E0  B4D8               	btfsc	status,2,c
 22957  0034E2  D63E               	goto	l24504
 22958  0034E4  0A07               	xorlw	7	; case 44
 22959  0034E6  B4D8               	btfsc	status,2,c
 22960  0034E8  D662               	goto	l24506
 22961  0034EA  0A01               	xorlw	1	; case 45
 22962  0034EC  B4D8               	btfsc	status,2,c
 22963  0034EE  D698               	goto	l24508
 22964  0034F0  0A03               	xorlw	3	; case 46
 22965  0034F2  B4D8               	btfsc	status,2,c
 22966  0034F4  D6BC               	goto	l3656
 22967  0034F6  0A01               	xorlw	1	; case 47
 22968  0034F8  B4D8               	btfsc	status,2,c
 22969  0034FA  D6BE               	goto	l3657
 22970  0034FC  0A1F               	xorlw	31	; case 48
 22971  0034FE  B4D8               	btfsc	status,2,c
 22972  003500  D6C0               	goto	l24510
 22973  003502  0A01               	xorlw	1	; case 49
 22974  003504  B4D8               	btfsc	status,2,c
 22975  003506  D6F6               	goto	l24512
 22976  003508  0A03               	xorlw	3	; case 50
 22977  00350A  B4D8               	btfsc	status,2,c
 22978  00350C  D71A               	goto	l24514
 22979  00350E  0A01               	xorlw	1	; case 51
 22980  003510  A4D8               	btfss	status,2,c
 22981  003512  0012               	return	
 22982  003514  D74F               	goto	l24516
 22983  003516                     __end_of_write_eusartparser:
 22984                           	callstack 0
 22985                           
 22986 ;; *************** function _validateRemoteSerialNumber *****************
 22987 ;; Defined at:
 22988 ;;		line 27 in file "controlMemory_MC50.c"
 22989 ;; Parameters:    Size  Location     Type
 22990 ;;  serial          4   45[COMRAM] unsigned long 
 22991 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 22992 ;;  position        2   50[COMRAM] PTR unsigned char 
 22993 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 22994 ;; Auto vars:     Size  Location     Type
 22995 ;;  mask            4   52[COMRAM] unsigned long 
 22996 ;;  i               1   57[COMRAM] unsigned char 
 22997 ;;  j               1   56[COMRAM] unsigned char 
 22998 ;; Return value:  Size  Location     Type
 22999 ;;                  1    wreg      enum E10539
 23000 ;; Registers used:
 23001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23002 ;; Tracked objects:
 23003 ;;		On entry : 3F/0
 23004 ;;		On exit  : 3F/0
 23005 ;;		Unchanged: 0/0
 23006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23007 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23008 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23009 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23010 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23011 ;;Total ram usage:       21 bytes
 23012 ;; Hardware stack levels used: 1
 23013 ;; Hardware stack levels required when called: 13
 23014 ;; This function calls:
 23015 ;;		_i2c_readDataBlock
 23016 ;; This function is called by:
 23017 ;;		_keeloqDecryptPacket
 23018 ;;		_DecryptPacket_12BIT
 23019 ;;		_controlSelectRemote
 23020 ;;		_eusartparser
 23021 ;; This function uses a non-reentrant model
 23022 ;;
 23023                           
 23024                           	psect	text76
 23025  0061A8                     __ptext76:
 23026                           	callstack 0
 23027  0061A8                     _validateRemoteSerialNumber:
 23028                           	callstack 14
 23029                           
 23030                           ; BSR set to: 0
 23031                           ;controlMemory_MC50.c: 29:     char j=0;
 23032                           
 23033                           ; BSR set to: 0
 23034                           ;incstack = 0
 23035  0061A8  0E00               	movlw	0
 23036  0061AA  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23037                           
 23038                           ; BSR set to: 0
 23039                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 23040  0061AC  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 23041  0061AE  A4D8               	btfss	status,2,c
 23042  0061B0  D009               	goto	l1436
 23043                           
 23044                           ; BSR set to: 0
 23045                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 23046  0061B2  0EFF               	movlw	255
 23047  0061B4  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 23048  0061B6  0EFF               	movlw	255
 23049  0061B8  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 23050  0061BA  0EFF               	movlw	255
 23051  0061BC  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 23052  0061BE  0E0F               	movlw	15
 23053  0061C0  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 23054                           
 23055                           ;controlMemory_MC50.c: 36:     }
 23056  0061C2  D004               	goto	l20716
 23057  0061C4                     l1436:
 23058                           
 23059                           ; BSR set to: 0
 23060                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 23061  0061C4  6835               	setf	validateRemoteSerialNumber@mask^0,c
 23062  0061C6  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 23063  0061C8  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 23064  0061CA  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 23065  0061CC                     l20716:
 23066                           
 23067                           ; BSR set to: 0
 23068                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 23069  0061CC  0E00               	movlw	0
 23070  0061CE  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23071  0061D0  D056               	goto	l20734
 23072  0061D2                     l20718:
 23073                           
 23074                           ; BSR set to: 0
 23075                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 23076  0061D2  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23077  0061D6  0E03               	movlw	3
 23078  0061D8  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23079  0061DA  A4D8               	btfss	status,2,c
 23080  0061DC  D01C               	goto	l20724
 23081                           
 23082                           ; BSR set to: 0
 23083                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 23084  0061DE  0E00               	movlw	0
 23085  0061E0  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23086                           
 23087                           ; BSR set to: 0
 23088                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23089  0061E2  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23090  0061E4  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23091  0061E6  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23092  0061E8  90D8               	bcf	status,0,c
 23093  0061EA  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23094  0061EC  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23095  0061EE  90D8               	bcf	status,0,c
 23096  0061F0  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23097  0061F2  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23098  0061F4  0E00               	movlw	0
 23099  0061F6  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23100  0061F8  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23101  0061FA  0E02               	movlw	2
 23102  0061FC  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23103  0061FE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23104  006200  0EA0               	movlw	low _memoryTEMP
 23105  006202  6E24               	movwf	i2c_readDataBlock@data^0,c
 23106  006204  0E02               	movlw	high _memoryTEMP
 23107  006206  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23108  006208  0E00               	movlw	0
 23109  00620A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23110  00620C  0E10               	movlw	16
 23111  00620E  6E26               	movwf	i2c_readDataBlock@len^0,c
 23112  006210  0E50               	movlw	80
 23113  006212  ECC7  F044         	call	_i2c_readDataBlock
 23114  006216                     l20724:
 23115                           
 23116                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23117  006216  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23118  006218  0D04               	mullw	4
 23119  00621A  0EA0               	movlw	low _memoryTEMP
 23120  00621C  24F3               	addwf	243,w,c
 23121  00621E  6ED9               	movwf	fsr2l,c
 23122  006220  0E02               	movlw	high _memoryTEMP
 23123  006222  20F4               	addwfc	prodh,w,c
 23124  006224  6EDA               	movwf	fsr2h,c
 23125  006226  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23126  00622A  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23127  00622E  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23128  006232  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23129  006236  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23130  006238  0100               	movlb	0	; () banked
 23131  00623A  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23132  00623C  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23133  00623E  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23134  006240  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23135  006242  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23136  006244  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23137  006246  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23138  006248  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23139  00624A  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23140  00624C  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23141  00624E  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23142  006250  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23143  006252  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23144  006254  E112               	bnz	l20732
 23145  006256  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23146  006258  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23147  00625A  E10F               	bnz	l20732
 23148  00625C  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23149  00625E  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23150  006260  E10C               	bnz	l20732
 23151  006262  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23152  006264  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23153  006266  A4D8               	btfss	status,2,c
 23154  006268  D008               	goto	l20732
 23155                           
 23156                           ; BSR set to: 0
 23157                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 23158  00626A  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23159  00626E  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23160  006272  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23161                           
 23162                           ; BSR set to: 0
 23163                           ;controlMemory_MC50.c: 54:             return TypeFull;
 23164  006276  0E01               	movlw	1
 23165  006278  0012               	return	
 23166  00627A                     l20732:
 23167                           
 23168                           ; BSR set to: 0
 23169                           ;controlMemory_MC50.c: 57:         j++;
 23170  00627A  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23171                           
 23172                           ;controlMemory_MC50.c: 59:     }
 23173  00627C  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23174  00627E                     l20734:
 23175                           
 23176                           ; BSR set to: 0
 23177  00627E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 23178  006280  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23179  006282  A0D8               	btfss	status,0,c
 23180  006284  D7A6               	goto	l20718
 23181                           
 23182                           ; BSR set to: 0
 23183                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 23184  006286  0E00               	movlw	0
 23185  006288  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 23186  00628A  D056               	goto	l20754
 23187  00628C                     l20738:
 23188                           
 23189                           ; BSR set to: 0
 23190                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 23191  00628C  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 23192  006290  0E03               	movlw	3
 23193  006292  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 23194  006294  A4D8               	btfss	status,2,c
 23195  006296  D01C               	goto	l20744
 23196                           
 23197                           ; BSR set to: 0
 23198                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 23199  006298  0E00               	movlw	0
 23200  00629A  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 23201                           
 23202                           ; BSR set to: 0
 23203                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 23204  00629C  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 23205  00629E  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 23206  0062A0  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 23207  0062A2  90D8               	bcf	status,0,c
 23208  0062A4  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23209  0062A6  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23210  0062A8  90D8               	bcf	status,0,c
 23211  0062AA  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 23212  0062AC  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 23213  0062AE  0E00               	movlw	0
 23214  0062B0  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 23215  0062B2  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23216  0062B4  0E05               	movlw	5
 23217  0062B6  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23218  0062B8  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23219  0062BA  0EA0               	movlw	low _memoryTEMP
 23220  0062BC  6E24               	movwf	i2c_readDataBlock@data^0,c
 23221  0062BE  0E02               	movlw	high _memoryTEMP
 23222  0062C0  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 23223  0062C2  0E00               	movlw	0
 23224  0062C4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23225  0062C6  0E10               	movlw	16
 23226  0062C8  6E26               	movwf	i2c_readDataBlock@len^0,c
 23227  0062CA  0E50               	movlw	80
 23228  0062CC  ECC7  F044         	call	_i2c_readDataBlock
 23229  0062D0                     l20744:
 23230                           
 23231                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 23232  0062D0  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 23233  0062D2  0D04               	mullw	4
 23234  0062D4  0EA0               	movlw	low _memoryTEMP
 23235  0062D6  24F3               	addwf	243,w,c
 23236  0062D8  6ED9               	movwf	fsr2l,c
 23237  0062DA  0E02               	movlw	high _memoryTEMP
 23238  0062DC  20F4               	addwfc	prodh,w,c
 23239  0062DE  6EDA               	movwf	fsr2h,c
 23240  0062E0  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 23241  0062E4  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 23242  0062E8  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 23243  0062EC  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 23244  0062F0  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 23245  0062F2  0100               	movlb	0	; () banked
 23246  0062F4  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 23247  0062F6  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 23248  0062F8  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 23249  0062FA  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 23250  0062FC  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 23251  0062FE  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 23252  006300  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 23253  006302  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 23254  006304  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 23255  006306  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 23256  006308  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 23257  00630A  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 23258  00630C  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 23259  00630E  E112               	bnz	l20752
 23260  006310  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 23261  006312  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 23262  006314  E10F               	bnz	l20752
 23263  006316  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 23264  006318  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 23265  00631A  E10C               	bnz	l20752
 23266  00631C  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 23267  00631E  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 23268  006320  A4D8               	btfss	status,2,c
 23269  006322  D008               	goto	l20752
 23270                           
 23271                           ; BSR set to: 0
 23272                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 23273  006324  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 23274  006328  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 23275  00632C  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 23276                           
 23277                           ; BSR set to: 0
 23278                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 23279  006330  0E02               	movlw	2
 23280  006332  0012               	return	
 23281  006334                     l20752:
 23282                           
 23283                           ; BSR set to: 0
 23284                           ;controlMemory_MC50.c: 75:         j++;
 23285  006334  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 23286                           
 23287                           ;controlMemory_MC50.c: 76:     }
 23288  006336  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 23289  006338                     l20754:
 23290                           
 23291                           ; BSR set to: 0
 23292  006338  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 23293  00633A  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 23294  00633C  A0D8               	btfss	status,0,c
 23295  00633E  D7A6               	goto	l20738
 23296                           
 23297                           ; BSR set to: 0
 23298                           ;controlMemory_MC50.c: 78:     return NoCMD;
 23299  006340  0E00               	movlw	0
 23300                           
 23301                           ; BSR set to: 0
 23302  006342  0012               	return		;funcret
 23303  006344                     __end_of_validateRemoteSerialNumber:
 23304                           	callstack 0
 23305                           
 23306 ;; *************** function _saveNewSerial *****************
 23307 ;; Defined at:
 23308 ;;		line 81 in file "controlMemory_MC50.c"
 23309 ;; Parameters:    Size  Location     Type
 23310 ;;  cmdType         1    wreg     unsigned char 
 23311 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 23312 ;;  position        1    4[BANK0 ] unsigned char 
 23313 ;; Auto vars:     Size  Location     Type
 23314 ;;  cmdType         1   57[COMRAM] unsigned char 
 23315 ;; Return value:  Size  Location     Type
 23316 ;;                  1    wreg      void 
 23317 ;; Registers used:
 23318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23319 ;; Tracked objects:
 23320 ;;		On entry : 3E/1
 23321 ;;		On exit  : 0/0
 23322 ;;		Unchanged: 0/0
 23323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23324 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23327 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23328 ;;Total ram usage:        8 bytes
 23329 ;; Hardware stack levels used: 1
 23330 ;; Hardware stack levels required when called: 13
 23331 ;; This function calls:
 23332 ;;		_i2c_writeNBytes
 23333 ;; This function is called by:
 23334 ;;		_controlSelectRemote
 23335 ;;		_eusartparser
 23336 ;; This function uses a non-reentrant model
 23337 ;;
 23338                           
 23339                           	psect	text77
 23340  008AE8                     __ptext77:
 23341                           	callstack 0
 23342  008AE8                     _saveNewSerial:
 23343                           	callstack 14
 23344                           
 23345                           ; BSR set to: 0
 23346                           ;incstack = 0
 23347                           ;saveNewSerial@cmdType stored from wreg
 23348  008AE8  6E3A               	movwf	saveNewSerial@cmdType^0,c
 23349                           
 23350                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 23351  008AEA  503A               	movf	saveNewSerial@cmdType^0,w,c
 23352  008AEC  A4D8               	btfss	status,2,c
 23353  008AEE  D01A               	goto	l20764
 23354                           
 23355                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 23356  008AF0  0100               	movlb	0	; () banked
 23357  008AF2  51DC               	movf	saveNewSerial@position& (0+255),w,b
 23358  008AF4  6FDD               	movwf	??_saveNewSerial& (0+255),b
 23359  008AF6  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 23360  008AF8  90D8               	bcf	status,0,c
 23361  008AFA  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23362  008AFC  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23363  008AFE  90D8               	bcf	status,0,c
 23364  008B00  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23365  008B02  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23366  008B04  0E00               	movlw	0
 23367  008B06  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 23368  008B08  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23369  008B0A  0E02               	movlw	2
 23370  008B0C  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 23371  008B0E  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23372  008B10  0ED8               	movlw	low saveNewSerial@tempSerial
 23373  008B12  6E24               	movwf	i2c_writeNBytes@data^0,c
 23374  008B14  0E00               	movlw	0
 23375  008B16  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23376  008B18  0E04               	movlw	4
 23377  008B1A  6E25               	movwf	i2c_writeNBytes@len^0,c
 23378  008B1C  0E50               	movlw	80
 23379  008B1E  EC02  F045         	call	_i2c_writeNBytes
 23380                           
 23381                           ;controlMemory_MC50.c: 87:     }
 23382  008B22  0012               	return	
 23383  008B24                     l20764:
 23384                           
 23385                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 23386  008B24  0100               	movlb	0	; () banked
 23387  008B26  51DC               	movf	saveNewSerial@position& (0+255),w,b
 23388  008B28  6FDD               	movwf	??_saveNewSerial& (0+255),b
 23389  008B2A  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 23390  008B2C  90D8               	bcf	status,0,c
 23391  008B2E  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23392  008B30  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23393  008B32  90D8               	bcf	status,0,c
 23394  008B34  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 23395  008B36  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 23396  008B38  0E00               	movlw	0
 23397  008B3A  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 23398  008B3C  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23399  008B3E  0E05               	movlw	5
 23400  008B40  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 23401  008B42  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23402  008B44  0ED8               	movlw	low saveNewSerial@tempSerial
 23403  008B46  6E24               	movwf	i2c_writeNBytes@data^0,c
 23404  008B48  0E00               	movlw	0
 23405  008B4A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23406  008B4C  0E04               	movlw	4
 23407  008B4E  6E25               	movwf	i2c_writeNBytes@len^0,c
 23408  008B50  0E50               	movlw	80
 23409  008B52  EC02  F045         	call	_i2c_writeNBytes
 23410  008B56  0012               	return		;funcret
 23411  008B58                     __end_of_saveNewSerial:
 23412                           	callstack 0
 23413                           
 23414 ;; *************** function _read_eusartparser *****************
 23415 ;; Defined at:
 23416 ;;		line 12 in file "eusartparser.c"
 23417 ;; Parameters:    Size  Location     Type
 23418 ;;  package         2   23[COMRAM] PTR struct package_t
 23419 ;;		 -> main@package(7), 
 23420 ;; Auto vars:     Size  Location     Type
 23421 ;;		None
 23422 ;; Return value:  Size  Location     Type
 23423 ;;                  1    wreg      void 
 23424 ;; Registers used:
 23425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23426 ;; Tracked objects:
 23427 ;;		On entry : 3F/0
 23428 ;;		On exit  : 0/0
 23429 ;;		Unchanged: 0/0
 23430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23435 ;;Total ram usage:        4 bytes
 23436 ;; Hardware stack levels used: 1
 23437 ;; Hardware stack levels required when called: 6
 23438 ;; This function calls:
 23439 ;;		_write_package
 23440 ;; This function is called by:
 23441 ;;		_eusartparser
 23442 ;; This function uses a non-reentrant model
 23443 ;;
 23444                           
 23445                           	psect	text78
 23446  0028E6                     __ptext78:
 23447                           	callstack 0
 23448  0028E6                     _read_eusartparser:
 23449                           	callstack 23
 23450                           
 23451                           ; BSR set to: 0
 23452                           ;eusartparser.c: 13:         switch(package->address){
 23453                           
 23454                           ;incstack = 0
 23455  0028E6  D2B2               	goto	l27464
 23456  0028E8                     l27302:
 23457                           
 23458                           ; BSR set to: 0
 23459                           ;eusartparser.c: 16:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 23460  0028E8  EE20 F003          	lfsr	2,3
 23461  0028EC  5018               	movf	read_eusartparser@package^0,w,c
 23462  0028EE  26D9               	addwf	fsr2l,f,c
 23463  0028F0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23464  0028F2  22DA               	addwfc	fsr2h,f,c
 23465  0028F4  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 23466                           
 23467                           ;eusartparser.c: 17:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 23468  0028F8  EE20 F002          	lfsr	2,2
 23469  0028FC  5018               	movf	read_eusartparser@package^0,w,c
 23470  0028FE  26D9               	addwf	fsr2l,f,c
 23471  002900  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23472  002902  22DA               	addwfc	fsr2h,f,c
 23473  002904  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 23474  002908                     l27304:
 23475                           
 23476                           ; BSR set to: 0
 23477                           ;eusartparser.c: 18:                 write_package(*package);
 23478  002908  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23479  00290C  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23480  002910  EE00  F011         	lfsr	0,write_package@package
 23481  002914  0E06               	movlw	6
 23482  002916                     u33341:
 23483  002916  CFDB FFEB          	movff	plusw2,plusw0
 23484  00291A  06E8               	decf	wreg,f,c
 23485  00291C  E2FC               	bc	u33341
 23486  00291E  EC23  F04C         	call	_write_package	;wreg free
 23487                           
 23488                           ;eusartparser.c: 19:                 break;
 23489  002922  0012               	return	
 23490  002924                     l27306:
 23491                           
 23492                           ; BSR set to: 0
 23493                           ;eusartparser.c: 21:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 23494  002924  EE20 F003          	lfsr	2,3
 23495  002928  5018               	movf	read_eusartparser@package^0,w,c
 23496  00292A  26D9               	addwf	fsr2l,f,c
 23497  00292C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23498  00292E  22DA               	addwfc	fsr2h,f,c
 23499  002930  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 23500                           
 23501                           ;eusartparser.c: 22:                 package->data.data8[0]=var_sys_NVM.motorPower;
 23502  002934  EE20 F002          	lfsr	2,2
 23503  002938  5018               	movf	read_eusartparser@package^0,w,c
 23504  00293A  26D9               	addwf	fsr2l,f,c
 23505  00293C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23506  00293E  22DA               	addwfc	fsr2h,f,c
 23507  002940  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 23508  002944  D7E1               	goto	l27304
 23509  002946                     l27310:
 23510                           
 23511                           ; BSR set to: 0
 23512                           ;eusartparser.c: 26:                 package->data.data8[1]=var_sys_NVM.walkTime;
 23513  002946  EE20 F003          	lfsr	2,3
 23514  00294A  5018               	movf	read_eusartparser@package^0,w,c
 23515  00294C  26D9               	addwf	fsr2l,f,c
 23516  00294E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23517  002950  22DA               	addwfc	fsr2h,f,c
 23518  002952  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 23519  002956  D22D               	goto	L101
 23520  002958                     l27314:
 23521                           
 23522                           ; BSR set to: 0
 23523                           ;eusartparser.c: 32:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 23524  002958  EE20 F003          	lfsr	2,3
 23525  00295C  5018               	movf	read_eusartparser@package^0,w,c
 23526  00295E  26D9               	addwf	fsr2l,f,c
 23527  002960  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23528  002962  22DA               	addwfc	fsr2h,f,c
 23529  002964  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 23530                           
 23531                           ;eusartparser.c: 33:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 23532  002968  EE20 F002          	lfsr	2,2
 23533  00296C  5018               	movf	read_eusartparser@package^0,w,c
 23534  00296E  26D9               	addwf	fsr2l,f,c
 23535  002970  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23536  002972  22DA               	addwfc	fsr2h,f,c
 23537  002974  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 23538  002978  D7C7               	goto	l27304
 23539  00297A                     l27318:
 23540                           
 23541                           ; BSR set to: 0
 23542                           ;eusartparser.c: 38:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 23543  00297A  EE20 F003          	lfsr	2,3
 23544  00297E  5018               	movf	read_eusartparser@package^0,w,c
 23545  002980  26D9               	addwf	fsr2l,f,c
 23546  002982  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23547  002984  22DA               	addwfc	fsr2h,f,c
 23548  002986  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 23549                           
 23550                           ;eusartparser.c: 39:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 23551  00298A  EE20 F002          	lfsr	2,2
 23552  00298E  5018               	movf	read_eusartparser@package^0,w,c
 23553  002990  26D9               	addwf	fsr2l,f,c
 23554  002992  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23555  002994  22DA               	addwfc	fsr2h,f,c
 23556  002996  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 23557  00299A  D7B6               	goto	l27304
 23558  00299C                     l27322:
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;eusartparser.c: 43:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 23562  00299C  EE20 F003          	lfsr	2,3
 23563  0029A0  5018               	movf	read_eusartparser@package^0,w,c
 23564  0029A2  26D9               	addwf	fsr2l,f,c
 23565  0029A4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23566  0029A6  22DA               	addwfc	fsr2h,f,c
 23567  0029A8  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 23568                           
 23569                           ;eusartparser.c: 44:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 23570  0029AC  EE20 F002          	lfsr	2,2
 23571  0029B0  5018               	movf	read_eusartparser@package^0,w,c
 23572  0029B2  26D9               	addwf	fsr2l,f,c
 23573  0029B4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23574  0029B6  22DA               	addwfc	fsr2h,f,c
 23575  0029B8  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 23576  0029BC  D7A5               	goto	l27304
 23577  0029BE                     l27326:
 23578                           
 23579                           ; BSR set to: 0
 23580                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 23581  0029BE  EE20 F003          	lfsr	2,3
 23582  0029C2  5018               	movf	read_eusartparser@package^0,w,c
 23583  0029C4  26D9               	addwf	fsr2l,f,c
 23584  0029C6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23585  0029C8  22DA               	addwfc	fsr2h,f,c
 23586  0029CA  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 23587  0029CE  D1F1               	goto	L101
 23588  0029D0                     l27330:
 23589                           
 23590                           ; BSR set to: 0
 23591                           ;eusartparser.c: 53:                 package->data.data8[1]=var_sys_NVM.operationMode;
 23592  0029D0  EE20 F003          	lfsr	2,3
 23593  0029D4  5018               	movf	read_eusartparser@package^0,w,c
 23594  0029D6  26D9               	addwf	fsr2l,f,c
 23595  0029D8  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23596  0029DA  22DA               	addwfc	fsr2h,f,c
 23597  0029DC  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 23598  0029E0  D1E8               	goto	L101
 23599  0029E2                     l27334:
 23600                           
 23601                           ; BSR set to: 0
 23602                           ;eusartparser.c: 58:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 23603  0029E2  EE20 F003          	lfsr	2,3
 23604  0029E6  5018               	movf	read_eusartparser@package^0,w,c
 23605  0029E8  26D9               	addwf	fsr2l,f,c
 23606  0029EA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23607  0029EC  22DA               	addwfc	fsr2h,f,c
 23608  0029EE  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 23609  0029F2  D1DF               	goto	L101
 23610  0029F4                     l27338:
 23611                           
 23612                           ; BSR set to: 0
 23613                           ;eusartparser.c: 63:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 23614  0029F4  EE20 F003          	lfsr	2,3
 23615  0029F8  5018               	movf	read_eusartparser@package^0,w,c
 23616  0029FA  26D9               	addwf	fsr2l,f,c
 23617  0029FC  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23618  0029FE  22DA               	addwfc	fsr2h,f,c
 23619  002A00  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 23620  002A04  D1D6               	goto	L101
 23621  002A06                     l27342:
 23622                           
 23623                           ; BSR set to: 0
 23624                           ;eusartparser.c: 68:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 23625  002A06  EE20 F003          	lfsr	2,3
 23626  002A0A  5018               	movf	read_eusartparser@package^0,w,c
 23627  002A0C  26D9               	addwf	fsr2l,f,c
 23628  002A0E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23629  002A10  22DA               	addwfc	fsr2h,f,c
 23630  002A12  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 23631  002A16  D1CD               	goto	L101
 23632  002A18                     l27346:
 23633                           
 23634                           ; BSR set to: 0
 23635                           ;eusartparser.c: 74:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 23636  002A18  EE20 F003          	lfsr	2,3
 23637  002A1C  5018               	movf	read_eusartparser@package^0,w,c
 23638  002A1E  26D9               	addwf	fsr2l,f,c
 23639  002A20  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23640  002A22  22DA               	addwfc	fsr2h,f,c
 23641  002A24  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 23642  002A28  D1C4               	goto	L101
 23643  002A2A                     l27350:
 23644                           
 23645                           ; BSR set to: 0
 23646                           ;eusartparser.c: 80:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 23647  002A2A  EE20 F003          	lfsr	2,3
 23648  002A2E  5018               	movf	read_eusartparser@package^0,w,c
 23649  002A30  26D9               	addwf	fsr2l,f,c
 23650  002A32  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23651  002A34  22DA               	addwfc	fsr2h,f,c
 23652  002A36  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 23653  002A3A  D1BB               	goto	L101
 23654  002A3C                     l27354:
 23655                           
 23656                           ; BSR set to: 0
 23657                           ;eusartparser.c: 85:                 package->data.data8[1]=var_sys_NVM.softstop;
 23658  002A3C  EE20 F003          	lfsr	2,3
 23659  002A40  5018               	movf	read_eusartparser@package^0,w,c
 23660  002A42  26D9               	addwf	fsr2l,f,c
 23661  002A44  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23662  002A46  22DA               	addwfc	fsr2h,f,c
 23663  002A48  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 23664                           
 23665                           ;eusartparser.c: 86:                 package->data.data8[0]=var_sys_NVM.softStart;
 23666  002A4C  EE20 F002          	lfsr	2,2
 23667  002A50  5018               	movf	read_eusartparser@package^0,w,c
 23668  002A52  26D9               	addwf	fsr2l,f,c
 23669  002A54  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23670  002A56  22DA               	addwfc	fsr2h,f,c
 23671  002A58  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 23672  002A5C  D755               	goto	l27304
 23673  002A5E                     l27358:
 23674                           
 23675                           ; BSR set to: 0
 23676                           ;eusartparser.c: 91:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 23677  002A5E  EE20 F003          	lfsr	2,3
 23678  002A62  5018               	movf	read_eusartparser@package^0,w,c
 23679  002A64  26D9               	addwf	fsr2l,f,c
 23680  002A66  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23681  002A68  22DA               	addwfc	fsr2h,f,c
 23682  002A6A  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 23683  002A6E  D1A1               	goto	L101
 23684  002A70                     l27362:
 23685                           
 23686                           ; BSR set to: 0
 23687                           ;eusartparser.c: 97:                 package->data.data8[1]=var_sys_NVM.folow_me;
 23688  002A70  EE20 F003          	lfsr	2,3
 23689  002A74  5018               	movf	read_eusartparser@package^0,w,c
 23690  002A76  26D9               	addwf	fsr2l,f,c
 23691  002A78  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23692  002A7A  22DA               	addwfc	fsr2h,f,c
 23693  002A7C  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 23694  002A80  D198               	goto	L101
 23695  002A82                     l27366:
 23696                           
 23697                           ; BSR set to: 0
 23698                           ;eusartparser.c: 102:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 23699  002A82  EE20 F003          	lfsr	2,3
 23700  002A86  5018               	movf	read_eusartparser@package^0,w,c
 23701  002A88  26D9               	addwf	fsr2l,f,c
 23702  002A8A  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23703  002A8C  22DA               	addwfc	fsr2h,f,c
 23704  002A8E  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 23705  002A92  D18F               	goto	L101
 23706  002A94                     l27370:
 23707                           
 23708                           ; BSR set to: 0
 23709                           ;eusartparser.c: 107:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 23710  002A94  EE20 F003          	lfsr	2,3
 23711  002A98  5018               	movf	read_eusartparser@package^0,w,c
 23712  002A9A  26D9               	addwf	fsr2l,f,c
 23713  002A9C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23714  002A9E  22DA               	addwfc	fsr2h,f,c
 23715  002AA0  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 23716  002AA4  D186               	goto	L101
 23717  002AA6                     l27374:
 23718                           
 23719                           ; BSR set to: 0
 23720                           ;eusartparser.c: 112:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 23721  002AA6  EE20 F003          	lfsr	2,3
 23722  002AAA  5018               	movf	read_eusartparser@package^0,w,c
 23723  002AAC  26D9               	addwf	fsr2l,f,c
 23724  002AAE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23725  002AB0  22DA               	addwfc	fsr2h,f,c
 23726  002AB2  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 23727  002AB6  D17D               	goto	L101
 23728  002AB8                     l27378:
 23729                           
 23730                           ; BSR set to: 0
 23731                           ;eusartparser.c: 118:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 23732  002AB8  EE20 F003          	lfsr	2,3
 23733  002ABC  5018               	movf	read_eusartparser@package^0,w,c
 23734  002ABE  26D9               	addwf	fsr2l,f,c
 23735  002AC0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23736  002AC2  22DA               	addwfc	fsr2h,f,c
 23737  002AC4  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 23738  002AC8  D174               	goto	L101
 23739  002ACA                     l27382:
 23740                           
 23741                           ; BSR set to: 0
 23742                           ;eusartparser.c: 123:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 23743  002ACA  EE20 F003          	lfsr	2,3
 23744  002ACE  5018               	movf	read_eusartparser@package^0,w,c
 23745  002AD0  26D9               	addwf	fsr2l,f,c
 23746  002AD2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23747  002AD4  22DA               	addwfc	fsr2h,f,c
 23748  002AD6  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 23749  002ADA  D16B               	goto	L101
 23750  002ADC                     l27386:
 23751                           
 23752                           ; BSR set to: 0
 23753                           ;eusartparser.c: 128:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 23754  002ADC  EE20 F003          	lfsr	2,3
 23755  002AE0  5018               	movf	read_eusartparser@package^0,w,c
 23756  002AE2  26D9               	addwf	fsr2l,f,c
 23757  002AE4  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23758  002AE6  22DA               	addwfc	fsr2h,f,c
 23759  002AE8  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 23760  002AEC  D162               	goto	L101
 23761  002AEE                     l27390:
 23762                           
 23763                           ; BSR set to: 0
 23764                           ;eusartparser.c: 133:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 23765  002AEE  EE20 F003          	lfsr	2,3
 23766  002AF2  5018               	movf	read_eusartparser@package^0,w,c
 23767  002AF4  26D9               	addwf	fsr2l,f,c
 23768  002AF6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23769  002AF8  22DA               	addwfc	fsr2h,f,c
 23770  002AFA  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 23771                           
 23772                           ;eusartparser.c: 134:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 23773  002AFE  EE20 F002          	lfsr	2,2
 23774  002B02  5018               	movf	read_eusartparser@package^0,w,c
 23775  002B04  26D9               	addwf	fsr2l,f,c
 23776  002B06  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23777  002B08  22DA               	addwfc	fsr2h,f,c
 23778  002B0A  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 23779  002B0E  D6FC               	goto	l27304
 23780  002B10                     l27394:
 23781                           
 23782                           ; BSR set to: 0
 23783                           ;eusartparser.c: 138:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 23784  002B10  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 23785  002B14  EE10 F002          	lfsr	1,2
 23786  002B18  5018               	movf	read_eusartparser@package^0,w,c
 23787  002B1A  26E1               	addwf	fsr1l,f,c
 23788  002B1C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23789  002B1E  22E2               	addwfc	fsr1h,f,c
 23790  002B20  CFDE FFE6          	movff	postinc2,postinc1
 23791  002B24  CFDD FFE5          	movff	postdec2,postdec1
 23792                           
 23793                           ; BSR set to: 0
 23794                           ;eusartparser.c: 139:                 write_package(*package);
 23795  002B28  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23796  002B2C  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23797  002B30  EE00  F011         	lfsr	0,write_package@package
 23798  002B34  0E06               	movlw	6
 23799  002B36                     u33351:
 23800  002B36  CFDB FFEB          	movff	plusw2,plusw0
 23801  002B3A  06E8               	decf	wreg,f,c
 23802  002B3C  E2FC               	bc	u33351
 23803  002B3E  EC23  F04C         	call	_write_package	;wreg free
 23804                           
 23805                           ;eusartparser.c: 140:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 23806  002B42  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 23807  002B46  EE10 F002          	lfsr	1,2
 23808  002B4A  5018               	movf	read_eusartparser@package^0,w,c
 23809  002B4C  26E1               	addwf	fsr1l,f,c
 23810  002B4E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23811  002B50  22E2               	addwfc	fsr1h,f,c
 23812  002B52  CFDE FFE6          	movff	postinc2,postinc1
 23813  002B56  CFDD FFE5          	movff	postdec2,postdec1
 23814                           
 23815                           ;eusartparser.c: 141:                 write_package(*package);
 23816  002B5A  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23817  002B5E  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23818  002B62  EE00  F011         	lfsr	0,write_package@package
 23819  002B66  0E06               	movlw	6
 23820  002B68                     u33361:
 23821  002B68  CFDB FFEB          	movff	plusw2,plusw0
 23822  002B6C  06E8               	decf	wreg,f,c
 23823  002B6E  E2FC               	bc	u33361
 23824  002B70  EC23  F04C         	call	_write_package	;wreg free
 23825                           
 23826                           ;eusartparser.c: 142:                 break;
 23827  002B74  0012               	return	
 23828  002B76                     l27400:
 23829                           
 23830                           ; BSR set to: 0
 23831                           ;eusartparser.c: 144:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 23832  002B76  EE20 F003          	lfsr	2,3
 23833  002B7A  5018               	movf	read_eusartparser@package^0,w,c
 23834  002B7C  26D9               	addwf	fsr2l,f,c
 23835  002B7E  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23836  002B80  22DA               	addwfc	fsr2h,f,c
 23837  002B82  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 23838  002B86  D115               	goto	L101
 23839  002B88                     l27404:
 23840                           
 23841                           ; BSR set to: 0
 23842                           ;eusartparser.c: 149:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 23843  002B88  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 23844  002B8C  EE10 F002          	lfsr	1,2
 23845  002B90  5018               	movf	read_eusartparser@package^0,w,c
 23846  002B92  26E1               	addwf	fsr1l,f,c
 23847  002B94  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23848  002B96  22E2               	addwfc	fsr1h,f,c
 23849  002B98  CFDE FFE6          	movff	postinc2,postinc1
 23850  002B9C  CFDD FFE5          	movff	postdec2,postdec1
 23851                           
 23852                           ; BSR set to: 0
 23853                           ;eusartparser.c: 150:                 write_package(*package);
 23854  002BA0  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23855  002BA4  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23856  002BA8  EE00  F011         	lfsr	0,write_package@package
 23857  002BAC  0E06               	movlw	6
 23858  002BAE                     u33371:
 23859  002BAE  CFDB FFEB          	movff	plusw2,plusw0
 23860  002BB2  06E8               	decf	wreg,f,c
 23861  002BB4  E2FC               	bc	u33371
 23862  002BB6  EC23  F04C         	call	_write_package	;wreg free
 23863                           
 23864                           ;eusartparser.c: 151:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 23865  002BBA  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 23866  002BBE  EE10 F002          	lfsr	1,2
 23867  002BC2  5018               	movf	read_eusartparser@package^0,w,c
 23868  002BC4  26E1               	addwf	fsr1l,f,c
 23869  002BC6  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23870  002BC8  22E2               	addwfc	fsr1h,f,c
 23871  002BCA  CFDE FFE6          	movff	postinc2,postinc1
 23872  002BCE  CFDD FFE5          	movff	postdec2,postdec1
 23873                           
 23874                           ;eusartparser.c: 152:                 write_package(*package);
 23875  002BD2  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23876  002BD6  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23877  002BDA  EE00  F011         	lfsr	0,write_package@package
 23878  002BDE  0E06               	movlw	6
 23879  002BE0                     u33381:
 23880  002BE0  CFDB FFEB          	movff	plusw2,plusw0
 23881  002BE4  06E8               	decf	wreg,f,c
 23882  002BE6  E2FC               	bc	u33381
 23883  002BE8  EC23  F04C         	call	_write_package	;wreg free
 23884                           
 23885                           ;eusartparser.c: 153:                 break;
 23886  002BEC  0012               	return	
 23887  002BEE                     l27410:
 23888                           
 23889                           ; BSR set to: 0
 23890                           ;eusartparser.c: 155:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 23891  002BEE  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 23892  002BF2  EE10 F002          	lfsr	1,2
 23893  002BF6  5018               	movf	read_eusartparser@package^0,w,c
 23894  002BF8  26E1               	addwf	fsr1l,f,c
 23895  002BFA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23896  002BFC  22E2               	addwfc	fsr1h,f,c
 23897  002BFE  CFDE FFE6          	movff	postinc2,postinc1
 23898  002C02  CFDD FFE5          	movff	postdec2,postdec1
 23899                           
 23900                           ; BSR set to: 0
 23901                           ;eusartparser.c: 156:                 write_package(*package);
 23902  002C06  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23903  002C0A  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23904  002C0E  EE00  F011         	lfsr	0,write_package@package
 23905  002C12  0E06               	movlw	6
 23906  002C14                     u33391:
 23907  002C14  CFDB FFEB          	movff	plusw2,plusw0
 23908  002C18  06E8               	decf	wreg,f,c
 23909  002C1A  E2FC               	bc	u33391
 23910  002C1C  EC23  F04C         	call	_write_package	;wreg free
 23911                           
 23912                           ;eusartparser.c: 157:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 23913  002C20  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 23914  002C24  EE10 F002          	lfsr	1,2
 23915  002C28  5018               	movf	read_eusartparser@package^0,w,c
 23916  002C2A  26E1               	addwf	fsr1l,f,c
 23917  002C2C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23918  002C2E  22E2               	addwfc	fsr1h,f,c
 23919  002C30  CFDE FFE6          	movff	postinc2,postinc1
 23920  002C34  CFDD FFE5          	movff	postdec2,postdec1
 23921                           
 23922                           ;eusartparser.c: 158:                 write_package(*package);
 23923  002C38  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23924  002C3C  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23925  002C40  EE00  F011         	lfsr	0,write_package@package
 23926  002C44  0E06               	movlw	6
 23927  002C46                     u33401:
 23928  002C46  CFDB FFEB          	movff	plusw2,plusw0
 23929  002C4A  06E8               	decf	wreg,f,c
 23930  002C4C  E2FC               	bc	u33401
 23931  002C4E  EC23  F04C         	call	_write_package	;wreg free
 23932                           
 23933                           ;eusartparser.c: 159:                 break;
 23934  002C52  0012               	return	
 23935  002C54                     l27416:
 23936                           
 23937                           ; BSR set to: 0
 23938                           ;eusartparser.c: 161:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 23939  002C54  EE20 F002          	lfsr	2,2
 23940  002C58  5018               	movf	read_eusartparser@package^0,w,c
 23941  002C5A  26D9               	addwf	fsr2l,f,c
 23942  002C5C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23943  002C5E  22DA               	addwfc	fsr2h,f,c
 23944  002C60  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 23945  002C64  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 23946  002C68  D64F               	goto	l27304
 23947  002C6A                     l27420:
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;eusartparser.c: 165:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 23951  002C6A  EE20 F002          	lfsr	2,2
 23952  002C6E  5018               	movf	read_eusartparser@package^0,w,c
 23953  002C70  26D9               	addwf	fsr2l,f,c
 23954  002C72  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23955  002C74  22DA               	addwfc	fsr2h,f,c
 23956  002C76  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 23957  002C7A  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 23958  002C7E  D644               	goto	l27304
 23959  002C80                     l27424:
 23960                           
 23961                           ; BSR set to: 0
 23962                           ;eusartparser.c: 169:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 23963  002C80  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 23964  002C84  EE10 F002          	lfsr	1,2
 23965  002C88  5018               	movf	read_eusartparser@package^0,w,c
 23966  002C8A  26E1               	addwf	fsr1l,f,c
 23967  002C8C  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23968  002C8E  22E2               	addwfc	fsr1h,f,c
 23969  002C90  CFDE FFE6          	movff	postinc2,postinc1
 23970  002C94  CFDD FFE5          	movff	postdec2,postdec1
 23971                           
 23972                           ; BSR set to: 0
 23973                           ;eusartparser.c: 170:                 write_package(*package);
 23974  002C98  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23975  002C9C  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23976  002CA0  EE00  F011         	lfsr	0,write_package@package
 23977  002CA4  0E06               	movlw	6
 23978  002CA6                     u33411:
 23979  002CA6  CFDB FFEB          	movff	plusw2,plusw0
 23980  002CAA  06E8               	decf	wreg,f,c
 23981  002CAC  E2FC               	bc	u33411
 23982  002CAE  EC23  F04C         	call	_write_package	;wreg free
 23983                           
 23984                           ;eusartparser.c: 171:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 23985  002CB2  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 23986  002CB6  EE10 F002          	lfsr	1,2
 23987  002CBA  5018               	movf	read_eusartparser@package^0,w,c
 23988  002CBC  26E1               	addwf	fsr1l,f,c
 23989  002CBE  5019               	movf	(read_eusartparser@package+1)^0,w,c
 23990  002CC0  22E2               	addwfc	fsr1h,f,c
 23991  002CC2  CFDE FFE6          	movff	postinc2,postinc1
 23992  002CC6  CFDD FFE5          	movff	postdec2,postdec1
 23993                           
 23994                           ;eusartparser.c: 172:                 write_package(*package);
 23995  002CCA  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 23996  002CCE  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 23997  002CD2  EE00  F011         	lfsr	0,write_package@package
 23998  002CD6  0E06               	movlw	6
 23999  002CD8                     u33421:
 24000  002CD8  CFDB FFEB          	movff	plusw2,plusw0
 24001  002CDC  06E8               	decf	wreg,f,c
 24002  002CDE  E2FC               	bc	u33421
 24003  002CE0  EC23  F04C         	call	_write_package	;wreg free
 24004                           
 24005                           ;eusartparser.c: 173:                 break;
 24006  002CE4  0012               	return	
 24007  002CE6                     l27430:
 24008                           
 24009                           ; BSR set to: 0
 24010                           ;eusartparser.c: 175:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 24011  002CE6  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 24012  002CEA  EE10 F002          	lfsr	1,2
 24013  002CEE  5018               	movf	read_eusartparser@package^0,w,c
 24014  002CF0  26E1               	addwf	fsr1l,f,c
 24015  002CF2  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24016  002CF4  22E2               	addwfc	fsr1h,f,c
 24017  002CF6  CFDE FFE6          	movff	postinc2,postinc1
 24018  002CFA  CFDD FFE5          	movff	postdec2,postdec1
 24019                           
 24020                           ; BSR set to: 0
 24021                           ;eusartparser.c: 176:                 write_package(*package);
 24022  002CFE  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24023  002D02  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24024  002D06  EE00  F011         	lfsr	0,write_package@package
 24025  002D0A  0E06               	movlw	6
 24026  002D0C                     u33431:
 24027  002D0C  CFDB FFEB          	movff	plusw2,plusw0
 24028  002D10  06E8               	decf	wreg,f,c
 24029  002D12  E2FC               	bc	u33431
 24030  002D14  EC23  F04C         	call	_write_package	;wreg free
 24031                           
 24032                           ;eusartparser.c: 177:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 24033  002D18  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 24034  002D1C  EE10 F002          	lfsr	1,2
 24035  002D20  5018               	movf	read_eusartparser@package^0,w,c
 24036  002D22  26E1               	addwf	fsr1l,f,c
 24037  002D24  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24038  002D26  22E2               	addwfc	fsr1h,f,c
 24039  002D28  CFDE FFE6          	movff	postinc2,postinc1
 24040  002D2C  CFDD FFE5          	movff	postdec2,postdec1
 24041                           
 24042                           ;eusartparser.c: 178:                 write_package(*package);
 24043  002D30  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24044  002D34  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24045  002D38  EE00  F011         	lfsr	0,write_package@package
 24046  002D3C  0E06               	movlw	6
 24047  002D3E                     u33441:
 24048  002D3E  CFDB FFEB          	movff	plusw2,plusw0
 24049  002D42  06E8               	decf	wreg,f,c
 24050  002D44  E2FC               	bc	u33441
 24051  002D46  EC23  F04C         	call	_write_package	;wreg free
 24052                           
 24053                           ;eusartparser.c: 179:                 break;
 24054  002D4A  0012               	return	
 24055  002D4C                     l27436:
 24056                           
 24057                           ; BSR set to: 0
 24058                           ;eusartparser.c: 184:                 package->data.data8[1]=RFFull;
 24059  002D4C  EE20 F003          	lfsr	2,3
 24060  002D50  5018               	movf	read_eusartparser@package^0,w,c
 24061  002D52  26D9               	addwf	fsr2l,f,c
 24062  002D54  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24063  002D56  22DA               	addwfc	fsr2h,f,c
 24064  002D58  C08B  FFDF         	movff	_RFFull,indf2	;volatile
 24065  002D5C  D02A               	goto	L101
 24066  002D5E                     l27440:
 24067                           
 24068                           ; BSR set to: 0
 24069                           ;eusartparser.c: 190:                 package->data.data8[1]=var_sys.photoCellIsObstruct
      +                          ed;
 24070  002D5E  EE20 F003          	lfsr	2,3
 24071  002D62  5018               	movf	read_eusartparser@package^0,w,c
 24072  002D64  26D9               	addwf	fsr2l,f,c
 24073  002D66  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24074  002D68  22DA               	addwfc	fsr2h,f,c
 24075  002D6A  C101  FFDF         	movff	_var_sys+1,indf2	;volatile
 24076                           
 24077                           ;eusartparser.c: 191:                 package->data.data8[0]=var_sys.SecurityBarIsObstru
      +                          cted;
 24078  002D6E  EE20 F002          	lfsr	2,2
 24079  002D72  5018               	movf	read_eusartparser@package^0,w,c
 24080  002D74  26D9               	addwf	fsr2l,f,c
 24081  002D76  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24082  002D78  22DA               	addwfc	fsr2h,f,c
 24083  002D7A  C102  FFDF         	movff	_var_sys+2,indf2	;volatile
 24084  002D7E  D5C4               	goto	l27304
 24085  002D80                     l27444:
 24086                           
 24087                           ; BSR set to: 0
 24088                           ;eusartparser.c: 196:                 package->data.data8[1]=var_sys.FimCurso_CloseIsEna
      +                          bled;
 24089  002D80  EE20 F003          	lfsr	2,3
 24090  002D84  5018               	movf	read_eusartparser@package^0,w,c
 24091  002D86  26D9               	addwf	fsr2l,f,c
 24092  002D88  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24093  002D8A  22DA               	addwfc	fsr2h,f,c
 24094  002D8C  C103  FFDF         	movff	_var_sys+3,indf2	;volatile
 24095                           
 24096                           ;eusartparser.c: 197:                 package->data.data8[0]=var_sys.FimCurso_OpenIsEnab
      +                          led;
 24097  002D90  EE20 F002          	lfsr	2,2
 24098  002D94  5018               	movf	read_eusartparser@package^0,w,c
 24099  002D96  26D9               	addwf	fsr2l,f,c
 24100  002D98  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24101  002D9A  22DA               	addwfc	fsr2h,f,c
 24102  002D9C  C104  FFDF         	movff	_var_sys+4,indf2	;volatile
 24103  002DA0  D5B3               	goto	l27304
 24104  002DA2                     l27448:
 24105                           
 24106                           ; BSR set to: 0
 24107                           ;eusartparser.c: 202:                 package->data.data8[1]=var_sys.Statedoorcontrol;
 24108  002DA2  EE20 F003          	lfsr	2,3
 24109  002DA6  5018               	movf	read_eusartparser@package^0,w,c
 24110  002DA8  26D9               	addwf	fsr2l,f,c
 24111  002DAA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24112  002DAC  22DA               	addwfc	fsr2h,f,c
 24113  002DAE  C11C  FFDF         	movff	_var_sys+28,indf2	;volatile
 24114  002DB2                     L101:
 24115                           
 24116                           ;eusartparser.c: 203:                 package->data.data8[0]=0x00;
 24117  002DB2  EE20 F002          	lfsr	2,2
 24118  002DB6  5018               	movf	read_eusartparser@package^0,w,c
 24119  002DB8  26D9               	addwf	fsr2l,f,c
 24120  002DBA  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24121  002DBC  22DA               	addwfc	fsr2h,f,c
 24122  002DBE  0E00               	movlw	0
 24123  002DC0  6EDF               	movwf	indf2,c
 24124  002DC2  D5A2               	goto	l27304
 24125  002DC4                     l27452:
 24126                           
 24127                           ; BSR set to: 0
 24128                           ;eusartparser.c: 208:                 package->data.data16=*(((uint16_t*)&(var_sys.Posit
      +                          ionActual))+1);
 24129  002DC4  EE21  F020         	lfsr	2,_var_sys+32
 24130  002DC8  EE10 F002          	lfsr	1,2
 24131  002DCC  5018               	movf	read_eusartparser@package^0,w,c
 24132  002DCE  26E1               	addwf	fsr1l,f,c
 24133  002DD0  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24134  002DD2  22E2               	addwfc	fsr1h,f,c
 24135  002DD4  CFDE FFE6          	movff	postinc2,postinc1
 24136  002DD8  CFDD FFE5          	movff	postdec2,postdec1
 24137                           
 24138                           ; BSR set to: 0
 24139                           ;eusartparser.c: 209:                 write_package(*package);
 24140  002DDC  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24141  002DE0  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24142  002DE4  EE00  F011         	lfsr	0,write_package@package
 24143  002DE8  0E06               	movlw	6
 24144  002DEA                     u33451:
 24145  002DEA  CFDB FFEB          	movff	plusw2,plusw0
 24146  002DEE  06E8               	decf	wreg,f,c
 24147  002DF0  E2FC               	bc	u33451
 24148  002DF2  EC23  F04C         	call	_write_package	;wreg free
 24149                           
 24150                           ;eusartparser.c: 210:                 package->data.data16=*(((uint16_t*)&(var_sys.Posit
      +                          ionActual))+0);
 24151  002DF6  EE21  F01E         	lfsr	2,_var_sys+30
 24152  002DFA  EE10 F002          	lfsr	1,2
 24153  002DFE  5018               	movf	read_eusartparser@package^0,w,c
 24154  002E00  26E1               	addwf	fsr1l,f,c
 24155  002E02  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24156  002E04  22E2               	addwfc	fsr1h,f,c
 24157  002E06  CFDE FFE6          	movff	postinc2,postinc1
 24158  002E0A  CFDD FFE5          	movff	postdec2,postdec1
 24159                           
 24160                           ;eusartparser.c: 211:                 write_package(*package);
 24161  002E0E  C018  FFD9         	movff	read_eusartparser@package,fsr2l
 24162  002E12  C019  FFDA         	movff	read_eusartparser@package+1,fsr2h
 24163  002E16  EE00  F011         	lfsr	0,write_package@package
 24164  002E1A  0E06               	movlw	6
 24165  002E1C                     u33461:
 24166  002E1C  CFDB FFEB          	movff	plusw2,plusw0
 24167  002E20  06E8               	decf	wreg,f,c
 24168  002E22  E2FC               	bc	u33461
 24169  002E24  EC23  F04C         	call	_write_package	;wreg free
 24170                           
 24171                           ;eusartparser.c: 212:                 break;
 24172  002E28  0012               	return	
 24173  002E2A                     l27458:
 24174                           
 24175                           ; BSR set to: 0
 24176                           ;eusartparser.c: 215:                 package->data.data8[1]=var_sys.PositionIsLost;
 24177  002E2A  EE20 F003          	lfsr	2,3
 24178  002E2E  5018               	movf	read_eusartparser@package^0,w,c
 24179  002E30  26D9               	addwf	fsr2l,f,c
 24180  002E32  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24181  002E34  22DA               	addwfc	fsr2h,f,c
 24182  002E36  C148  FFDF         	movff	_var_sys+72,indf2	;volatile
 24183                           
 24184                           ;eusartparser.c: 216:                 package->data.data8[0]=var_sys.StateVersion;
 24185  002E3A  EE20 F002          	lfsr	2,2
 24186  002E3E  5018               	movf	read_eusartparser@package^0,w,c
 24187  002E40  26D9               	addwf	fsr2l,f,c
 24188  002E42  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24189  002E44  22DA               	addwfc	fsr2h,f,c
 24190  002E46  C149  FFDF         	movff	_var_sys+73,indf2	;volatile
 24191  002E4A  D55E               	goto	l27304
 24192  002E4C                     l27464:
 24193                           
 24194                           ; BSR set to: 0
 24195  002E4C  EE20 F001          	lfsr	2,1
 24196  002E50  5018               	movf	read_eusartparser@package^0,w,c
 24197  002E52  26D9               	addwf	fsr2l,f,c
 24198  002E54  5019               	movf	(read_eusartparser@package+1)^0,w,c
 24199  002E56  22DA               	addwfc	fsr2h,f,c
 24200  002E58  50DF               	movf	indf2,w,c
 24201  002E5A  6E1A               	movwf	??_read_eusartparser^0,c
 24202  002E5C  6A1B               	clrf	(??_read_eusartparser+1)^0,c
 24203                           
 24204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24205                           ; Switch size 1, requested type "simple"
 24206                           ; Number of cases is 1, Range of values is 0 to 0
 24207                           ; switch strategies available:
 24208                           ; Name         Instructions Cycles
 24209                           ; simple_byte            4     3 (average)
 24210                           ;	Chosen strategy is simple_byte
 24211  002E5E  501B               	movf	(??_read_eusartparser+1)^0,w,c
 24212  002E60  0A00               	xorlw	0	; case 0
 24213  002E62  A4D8               	btfss	status,2,c
 24214  002E64  0012               	return	
 24215                           
 24216                           ; BSR set to: 0
 24217                           ; Switch size 1, requested type "simple"
 24218                           ; Number of cases is 44, Range of values is 0 to 58
 24219                           ; switch strategies available:
 24220                           ; Name         Instructions Cycles
 24221                           ; simple_byte          133    67 (average)
 24222                           ;	Chosen strategy is simple_byte
 24223  002E66  501A               	movf	??_read_eusartparser^0,w,c
 24224  002E68  0A00               	xorlw	0	; case 0
 24225  002E6A  B4D8               	btfsc	status,2,c
 24226  002E6C  D53D               	goto	l27302
 24227  002E6E  0A02               	xorlw	2	; case 2
 24228  002E70  B4D8               	btfsc	status,2,c
 24229  002E72  D572               	goto	l27314
 24230  002E74  0A01               	xorlw	1	; case 3
 24231  002E76  B4D8               	btfsc	status,2,c
 24232  002E78  D5F2               	goto	l27358
 24233  002E7A  0A06               	xorlw	6	; case 5
 24234  002E7C  B4D8               	btfsc	status,2,c
 24235  002E7E  D57D               	goto	l27318
 24236  002E80  0A02               	xorlw	2	; case 7
 24237  002E82  B4D8               	btfsc	status,2,c
 24238  002E84  D5D2               	goto	l27350
 24239  002E86  0A0F               	xorlw	15	; case 8
 24240  002E88  B4D8               	btfsc	status,2,c
 24241  002E8A  D616               	goto	l27378
 24242  002E8C  0A02               	xorlw	2	; case 10
 24243  002E8E  B4D8               	btfsc	status,2,c
 24244  002E90  D5EF               	goto	l27362
 24245  002E92  0A1A               	xorlw	26	; case 16
 24246  002E94  B4D8               	btfsc	status,2,c
 24247  002E96  D528               	goto	l27302
 24248  002E98  0A01               	xorlw	1	; case 17
 24249  002E9A  B4D8               	btfsc	status,2,c
 24250  002E9C  D543               	goto	l27306
 24251  002E9E  0A03               	xorlw	3	; case 18
 24252  002EA0  B4D8               	btfsc	status,2,c
 24253  002EA2  D551               	goto	l27310
 24254  002EA4  0A01               	xorlw	1	; case 19
 24255  002EA6  B4D8               	btfsc	status,2,c
 24256  002EA8  D557               	goto	l27314
 24257  002EAA  0A07               	xorlw	7	; case 20
 24258  002EAC  B4D8               	btfsc	status,2,c
 24259  002EAE  D565               	goto	l27318
 24260  002EB0  0A01               	xorlw	1	; case 21
 24261  002EB2  B4D8               	btfsc	status,2,c
 24262  002EB4  D573               	goto	l27322
 24263  002EB6  0A03               	xorlw	3	; case 22
 24264  002EB8  B4D8               	btfsc	status,2,c
 24265  002EBA  D581               	goto	l27326
 24266  002EBC  0A01               	xorlw	1	; case 23
 24267  002EBE  B4D8               	btfsc	status,2,c
 24268  002EC0  D587               	goto	l27330
 24269  002EC2  0A0F               	xorlw	15	; case 24
 24270  002EC4  B4D8               	btfsc	status,2,c
 24271  002EC6  D58D               	goto	l27334
 24272  002EC8  0A01               	xorlw	1	; case 25
 24273  002ECA  B4D8               	btfsc	status,2,c
 24274  002ECC  D593               	goto	l27338
 24275  002ECE  0A03               	xorlw	3	; case 26
 24276  002ED0  B4D8               	btfsc	status,2,c
 24277  002ED2  D599               	goto	l27342
 24278  002ED4  0A01               	xorlw	1	; case 27
 24279  002ED6  B4D8               	btfsc	status,2,c
 24280  002ED8  D59F               	goto	l27346
 24281  002EDA  0A07               	xorlw	7	; case 28
 24282  002EDC  B4D8               	btfsc	status,2,c
 24283  002EDE  D5A5               	goto	l27350
 24284  002EE0  0A01               	xorlw	1	; case 29
 24285  002EE2  B4D8               	btfsc	status,2,c
 24286  002EE4  D5AB               	goto	l27354
 24287  002EE6  0A03               	xorlw	3	; case 30
 24288  002EE8  B4D8               	btfsc	status,2,c
 24289  002EEA  D5B9               	goto	l27358
 24290  002EEC  0A01               	xorlw	1	; case 31
 24291  002EEE  B4D8               	btfsc	status,2,c
 24292  002EF0  D5BF               	goto	l27362
 24293  002EF2  0A3F               	xorlw	63	; case 32
 24294  002EF4  B4D8               	btfsc	status,2,c
 24295  002EF6  D5C5               	goto	l27366
 24296  002EF8  0A01               	xorlw	1	; case 33
 24297  002EFA  B4D8               	btfsc	status,2,c
 24298  002EFC  D5CB               	goto	l27370
 24299  002EFE  0A03               	xorlw	3	; case 34
 24300  002F00  B4D8               	btfsc	status,2,c
 24301  002F02  D5D1               	goto	l27374
 24302  002F04  0A01               	xorlw	1	; case 35
 24303  002F06  B4D8               	btfsc	status,2,c
 24304  002F08  D5D7               	goto	l27378
 24305  002F0A  0A07               	xorlw	7	; case 36
 24306  002F0C  B4D8               	btfsc	status,2,c
 24307  002F0E  D5DD               	goto	l27382
 24308  002F10  0A01               	xorlw	1	; case 37
 24309  002F12  B4D8               	btfsc	status,2,c
 24310  002F14  D5E3               	goto	l27386
 24311  002F16  0A03               	xorlw	3	; case 38
 24312  002F18  B4D8               	btfsc	status,2,c
 24313  002F1A  D5E9               	goto	l27390
 24314  002F1C  0A01               	xorlw	1	; case 39
 24315  002F1E  B4D8               	btfsc	status,2,c
 24316  002F20  D5F7               	goto	l27394
 24317  002F22  0A0E               	xorlw	14	; case 41
 24318  002F24  B4D8               	btfsc	status,2,c
 24319  002F26  D627               	goto	l27400
 24320  002F28  0A03               	xorlw	3	; case 42
 24321  002F2A  B4D8               	btfsc	status,2,c
 24322  002F2C  D62D               	goto	l27404
 24323  002F2E  0A06               	xorlw	6	; case 44
 24324  002F30  B4D8               	btfsc	status,2,c
 24325  002F32  D65D               	goto	l27410
 24326  002F34  0A02               	xorlw	2	; case 46
 24327  002F36  B4D8               	btfsc	status,2,c
 24328  002F38  D68D               	goto	l27416
 24329  002F3A  0A01               	xorlw	1	; case 47
 24330  002F3C  B4D8               	btfsc	status,2,c
 24331  002F3E  D695               	goto	l27420
 24332  002F40  0A1F               	xorlw	31	; case 48
 24333  002F42  B4D8               	btfsc	status,2,c
 24334  002F44  D69D               	goto	l27424
 24335  002F46  0A02               	xorlw	2	; case 50
 24336  002F48  B4D8               	btfsc	status,2,c
 24337  002F4A  D6CD               	goto	l27430
 24338  002F4C  0A06               	xorlw	6	; case 52
 24339  002F4E  B4D8               	btfsc	status,2,c
 24340  002F50  D6FD               	goto	l27436
 24341  002F52  0A01               	xorlw	1	; case 53
 24342  002F54  B4D8               	btfsc	status,2,c
 24343  002F56  D703               	goto	l27440
 24344  002F58  0A03               	xorlw	3	; case 54
 24345  002F5A  B4D8               	btfsc	status,2,c
 24346  002F5C  D711               	goto	l27444
 24347  002F5E  0A01               	xorlw	1	; case 55
 24348  002F60  B4D8               	btfsc	status,2,c
 24349  002F62  D71F               	goto	l27448
 24350  002F64  0A0F               	xorlw	15	; case 56
 24351  002F66  B4D8               	btfsc	status,2,c
 24352  002F68  D72D               	goto	l27452
 24353  002F6A  0A02               	xorlw	2	; case 58
 24354  002F6C  A4D8               	btfss	status,2,c
 24355  002F6E  0012               	return	
 24356  002F70  D75C               	goto	l27458
 24357  002F72                     __end_of_read_eusartparser:
 24358                           	callstack 0
 24359                           
 24360 ;; *************** function _write_package *****************
 24361 ;; Defined at:
 24362 ;;		line 50 in file "eusartpackage.c"
 24363 ;; Parameters:    Size  Location     Type
 24364 ;;  package         7   16[COMRAM] const struct package_t
 24365 ;; Auto vars:     Size  Location     Type
 24366 ;;		None
 24367 ;; Return value:  Size  Location     Type
 24368 ;;                  1    wreg      void 
 24369 ;; Registers used:
 24370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24371 ;; Tracked objects:
 24372 ;;		On entry : 0/0
 24373 ;;		On exit  : 0/0
 24374 ;;		Unchanged: 0/0
 24375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24376 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24379 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24380 ;;Total ram usage:        7 bytes
 24381 ;; Hardware stack levels used: 1
 24382 ;; Hardware stack levels required when called: 5
 24383 ;; This function calls:
 24384 ;;		_EUSART1_Write
 24385 ;; This function is called by:
 24386 ;;		_read_eusartparser
 24387 ;;		_eusartparser
 24388 ;; This function uses a non-reentrant model
 24389 ;;
 24390                           
 24391                           	psect	text79
 24392  009846                     __ptext79:
 24393                           	callstack 0
 24394  009846                     _write_package:
 24395                           	callstack 24
 24396                           
 24397                           ;eusartpackage.c: 52:         if(package.valid==0)
 24398                           
 24399                           ;incstack = 0
 24400  009846  5017               	movf	(write_package@package+6)^0,w,c
 24401  009848  B4D8               	btfsc	status,2,c
 24402  00984A  0012               	return	
 24403                           
 24404                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 24405  00984C  5015               	movf	(write_package@package+4)^0,w,c
 24406  00984E  ECA2  F04A         	call	_EUSART1_Write
 24407                           
 24408                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 24409  009852  5011               	movf	write_package@package^0,w,c
 24410  009854  ECA2  F04A         	call	_EUSART1_Write
 24411                           
 24412                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 24413  009858  5012               	movf	(write_package@package+1)^0,w,c
 24414  00985A  ECA2  F04A         	call	_EUSART1_Write
 24415                           
 24416                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 24417  00985E  5013               	movf	(write_package@package+2)^0,w,c
 24418  009860  ECA2  F04A         	call	_EUSART1_Write
 24419                           
 24420                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 24421  009864  5014               	movf	(write_package@package+3)^0,w,c
 24422  009866  ECA2  F04A         	call	_EUSART1_Write
 24423                           
 24424                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 24425  00986A  5016               	movf	(write_package@package+5)^0,w,c
 24426  00986C  ECA2  F04A         	call	_EUSART1_Write
 24427  009870  0012               	return		;funcret
 24428  009872                     __end_of_write_package:
 24429                           	callstack 0
 24430                           
 24431 ;; *************** function _EUSART1_Write *****************
 24432 ;; Defined at:
 24433 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 24434 ;; Parameters:    Size  Location     Type
 24435 ;;  txData          1    wreg     unsigned char 
 24436 ;; Auto vars:     Size  Location     Type
 24437 ;;  txData          1   15[COMRAM] unsigned char 
 24438 ;; Return value:  Size  Location     Type
 24439 ;;                  1    wreg      void 
 24440 ;; Registers used:
 24441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24442 ;; Tracked objects:
 24443 ;;		On entry : 0/0
 24444 ;;		On exit  : 3F/E
 24445 ;;		Unchanged: 0/0
 24446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24451 ;;Total ram usage:        1 bytes
 24452 ;; Hardware stack levels used: 1
 24453 ;; Hardware stack levels required when called: 4
 24454 ;; This function calls:
 24455 ;;		Nothing
 24456 ;; This function is called by:
 24457 ;;		_write_package
 24458 ;; This function uses a non-reentrant model
 24459 ;;
 24460                           
 24461                           	psect	text80
 24462  009544                     __ptext80:
 24463                           	callstack 0
 24464  009544                     _EUSART1_Write:
 24465                           	callstack 24
 24466                           
 24467                           ;incstack = 0
 24468                           ;EUSART1_Write@txData stored from wreg
 24469  009544  6E10               	movwf	EUSART1_Write@txData^0,c
 24470  009546                     
 24471                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 24472                           
 24473                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 24474  009546  0101               	movlb	1	; () banked
 24475  009548  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 24476  00954A  B4D8               	btfsc	status,2,c
 24477  00954C  D7FC               	goto	l20692
 24478                           
 24479                           ; BSR set to: 1
 24480                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 24481  00954E  010E               	movlb	14	; () banked
 24482  009550  B9C5               	btfsc	197,4,b	;volatile
 24483  009552  D003               	goto	l100
 24484                           
 24485                           ; BSR set to: 14
 24486                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 24487  009554  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 24488                           
 24489                           ;mcc_generated_files/eusart1.c: 182:     }
 24490  009558  D012               	goto	l20708
 24491  00955A                     l100:
 24492                           
 24493                           ; BSR set to: 14
 24494                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 24495  00955A  99C5               	bcf	197,4,b	;volatile
 24496                           
 24497                           ; BSR set to: 14
 24498                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 24499  00955C  0E84               	movlw	low _eusart1TxBuffer
 24500  00955E  0100               	movlb	0	; () banked
 24501  009560  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 24502  009562  6ED9               	movwf	fsr2l,c
 24503  009564  6ADA               	clrf	fsr2h,c
 24504  009566  0E02               	movlw	high _eusart1TxBuffer
 24505  009568  22DA               	addwfc	fsr2h,f,c
 24506  00956A  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 24507                           
 24508                           ; BSR set to: 0
 24509  00956E  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 24510                           
 24511                           ; BSR set to: 0
 24512                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 24513  009570  0E07               	movlw	7
 24514  009572  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 24515  009574  D002               	goto	l20706
 24516                           
 24517                           ; BSR set to: 0
 24518                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 24519  009576  0E00               	movlw	0
 24520  009578  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 24521  00957A                     l20706:
 24522                           
 24523                           ; BSR set to: 0
 24524                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 24525  00957A  0101               	movlb	1	; () banked
 24526  00957C  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 24527  00957E                     l20708:
 24528                           
 24529                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 24530  00957E  010E               	movlb	14	; () banked
 24531  009580  89C5               	bsf	197,4,b	;volatile
 24532                           
 24533                           ; BSR set to: 14
 24534  009582  0012               	return		;funcret
 24535  009584                     __end_of_EUSART1_Write:
 24536                           	callstack 0
 24537                           
 24538 ;; *************** function _confirmpackage *****************
 24539 ;; Defined at:
 24540 ;;		line 379 in file "eusartparser.c"
 24541 ;; Parameters:    Size  Location     Type
 24542 ;;  package         2   17[COMRAM] PTR struct package_t
 24543 ;;		 -> main@package(7), 
 24544 ;;  confirm         1   19[COMRAM] _Bool 
 24545 ;; Auto vars:     Size  Location     Type
 24546 ;;		None
 24547 ;; Return value:  Size  Location     Type
 24548 ;;                  1    wreg      void 
 24549 ;; Registers used:
 24550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24551 ;; Tracked objects:
 24552 ;;		On entry : 0/0
 24553 ;;		On exit  : 0/0
 24554 ;;		Unchanged: 0/0
 24555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24556 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24559 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24560 ;;Total ram usage:        3 bytes
 24561 ;; Hardware stack levels used: 1
 24562 ;; Hardware stack levels required when called: 5
 24563 ;; This function calls:
 24564 ;;		_init_package
 24565 ;; This function is called by:
 24566 ;;		_eusartparser
 24567 ;; This function uses a non-reentrant model
 24568 ;;
 24569                           
 24570                           	psect	text81
 24571  008FB2                     __ptext81:
 24572                           	callstack 0
 24573  008FB2                     _confirmpackage:
 24574                           	callstack 24
 24575                           
 24576                           ;eusartparser.c: 380:         init_package(package);
 24577                           
 24578                           ; BSR set to: 14
 24579                           ;incstack = 0
 24580  008FB2  C012  F010         	movff	confirmpackage@package,init_package@package
 24581  008FB6  C013  F011         	movff	confirmpackage@package+1,init_package@package+1
 24582  008FBA  ECAC  F04B         	call	_init_package	;wreg free
 24583                           
 24584                           ;eusartparser.c: 381:         package->functioncode=0x03;
 24585  008FBE  C012  FFD9         	movff	confirmpackage@package,fsr2l
 24586  008FC2  C013  FFDA         	movff	confirmpackage@package+1,fsr2h
 24587  008FC6  0E03               	movlw	3
 24588  008FC8  6EDF               	movwf	indf2,c
 24589                           
 24590                           ;eusartparser.c: 382:         package->address=0x00;
 24591  008FCA  EE20 F001          	lfsr	2,1
 24592  008FCE  5012               	movf	confirmpackage@package^0,w,c
 24593  008FD0  26D9               	addwf	fsr2l,f,c
 24594  008FD2  5013               	movf	(confirmpackage@package+1)^0,w,c
 24595  008FD4  22DA               	addwfc	fsr2h,f,c
 24596  008FD6  0E00               	movlw	0
 24597  008FD8  6EDF               	movwf	indf2,c
 24598                           
 24599                           ;eusartparser.c: 383:         if(confirm==1)
 24600  008FDA  0414               	decf	confirmpackage@confirm^0,w,c
 24601  008FDC  A4D8               	btfss	status,2,c
 24602  008FDE  D00B               	goto	l27480
 24603                           
 24604                           ;eusartparser.c: 384:             package->data.data16=0x0001;
 24605  008FE0  EE20 F002          	lfsr	2,2
 24606  008FE4  5012               	movf	confirmpackage@package^0,w,c
 24607  008FE6  26D9               	addwf	fsr2l,f,c
 24608  008FE8  5013               	movf	(confirmpackage@package+1)^0,w,c
 24609  008FEA  22DA               	addwfc	fsr2h,f,c
 24610  008FEC  0E01               	movlw	1
 24611  008FEE  6EDE               	movwf	postinc2,c
 24612  008FF0  0E00               	movlw	0
 24613  008FF2  6EDD               	movwf	postdec2,c
 24614  008FF4  0012               	return	
 24615  008FF6                     l27480:
 24616                           
 24617                           ;eusartparser.c: 386:             package->data.data16=0x0000;
 24618  008FF6  EE20 F002          	lfsr	2,2
 24619  008FFA  5012               	movf	confirmpackage@package^0,w,c
 24620  008FFC  26D9               	addwf	fsr2l,f,c
 24621  008FFE  5013               	movf	(confirmpackage@package+1)^0,w,c
 24622  009000  22DA               	addwfc	fsr2h,f,c
 24623  009002  0E00               	movlw	0
 24624  009004  6EDE               	movwf	postinc2,c
 24625  009006  0E00               	movlw	0
 24626  009008  6EDD               	movwf	postdec2,c
 24627  00900A  0012               	return		;funcret
 24628  00900C                     __end_of_confirmpackage:
 24629                           	callstack 0
 24630                           
 24631 ;; *************** function _init_package *****************
 24632 ;; Defined at:
 24633 ;;		line 11 in file "eusartpackage.c"
 24634 ;; Parameters:    Size  Location     Type
 24635 ;;  package         2   15[COMRAM] PTR struct package_t
 24636 ;;		 -> main@package(7), 
 24637 ;; Auto vars:     Size  Location     Type
 24638 ;;		None
 24639 ;; Return value:  Size  Location     Type
 24640 ;;                  1    wreg      void 
 24641 ;; Registers used:
 24642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24643 ;; Tracked objects:
 24644 ;;		On entry : 0/0
 24645 ;;		On exit  : 0/0
 24646 ;;		Unchanged: 0/0
 24647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24652 ;;Total ram usage:        2 bytes
 24653 ;; Hardware stack levels used: 1
 24654 ;; Hardware stack levels required when called: 4
 24655 ;; This function calls:
 24656 ;;		Nothing
 24657 ;; This function is called by:
 24658 ;;		_confirmpackage
 24659 ;; This function uses a non-reentrant model
 24660 ;;
 24661                           
 24662                           	psect	text82
 24663  009758                     __ptext82:
 24664                           	callstack 0
 24665  009758                     _init_package:
 24666                           	callstack 24
 24667                           
 24668                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 24669                           
 24670                           ;incstack = 0
 24671  009758  EE20 F004          	lfsr	2,4
 24672  00975C  5010               	movf	init_package@package^0,w,c
 24673  00975E  26D9               	addwf	fsr2l,f,c
 24674  009760  5011               	movf	(init_package@package+1)^0,w,c
 24675  009762  22DA               	addwfc	fsr2h,f,c
 24676  009764  0E0A               	movlw	10
 24677  009766  6EDF               	movwf	indf2,c
 24678                           
 24679                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 24680  009768  EE20 F005          	lfsr	2,5
 24681  00976C  5010               	movf	init_package@package^0,w,c
 24682  00976E  26D9               	addwf	fsr2l,f,c
 24683  009770  5011               	movf	(init_package@package+1)^0,w,c
 24684  009772  22DA               	addwfc	fsr2h,f,c
 24685  009774  0E0D               	movlw	13
 24686  009776  6EDF               	movwf	indf2,c
 24687                           
 24688                           ;eusartpackage.c: 14:         package->valid=1;
 24689  009778  EE20 F006          	lfsr	2,6
 24690  00977C  5010               	movf	init_package@package^0,w,c
 24691  00977E  26D9               	addwf	fsr2l,f,c
 24692  009780  5011               	movf	(init_package@package+1)^0,w,c
 24693  009782  22DA               	addwfc	fsr2h,f,c
 24694  009784  0E01               	movlw	1
 24695  009786  6EDF               	movwf	indf2,c
 24696  009788  0012               	return		;funcret
 24697  00978A                     __end_of_init_package:
 24698                           	callstack 0
 24699                           
 24700 ;; *************** function _cmdMemoryIsEmpty *****************
 24701 ;; Defined at:
 24702 ;;		line 122 in file "controlMemory_MC50.c"
 24703 ;; Parameters:    Size  Location     Type
 24704 ;;  cmdType         1    wreg     unsigned char 
 24705 ;;  position        1   45[COMRAM] unsigned char 
 24706 ;; Auto vars:     Size  Location     Type
 24707 ;;  cmdType         1   48[COMRAM] unsigned char 
 24708 ;;  tempSerial      4   49[COMRAM] unsigned long 
 24709 ;; Return value:  Size  Location     Type
 24710 ;;                  1    wreg      unsigned char 
 24711 ;; Registers used:
 24712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24713 ;; Tracked objects:
 24714 ;;		On entry : 0/1
 24715 ;;		On exit  : 0/0
 24716 ;;		Unchanged: 0/0
 24717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24718 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24719 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24721 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24722 ;;Total ram usage:        8 bytes
 24723 ;; Hardware stack levels used: 1
 24724 ;; Hardware stack levels required when called: 13
 24725 ;; This function calls:
 24726 ;;		_i2c_readDataBlock
 24727 ;; This function is called by:
 24728 ;;		_setValueToEdit
 24729 ;;		_controlSelectRemote
 24730 ;;		_eusartparser
 24731 ;; This function uses a non-reentrant model
 24732 ;;
 24733                           
 24734                           	psect	text83
 24735  00814C                     __ptext83:
 24736                           	callstack 0
 24737  00814C                     _cmdMemoryIsEmpty:
 24738                           	callstack 14
 24739                           
 24740                           ;incstack = 0
 24741                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 24742  00814C  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 24743                           
 24744                           ;controlMemory_MC50.c: 122: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 123: {;controlMemory_MC50.c: 124:     unsigned long tempSerial=0;
 24745  00814E  0E00               	movlw	0
 24746  008150  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 24747  008152  0E00               	movlw	0
 24748  008154  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 24749  008156  0E00               	movlw	0
 24750  008158  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 24751  00815A  0E00               	movlw	0
 24752  00815C  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 24753                           
 24754                           ;controlMemory_MC50.c: 127:      if(cmdType==0)
 24755  00815E  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 24756  008160  A4D8               	btfss	status,2,c
 24757  008162  D01A               	goto	l20780
 24758                           
 24759                           ;controlMemory_MC50.c: 128:     {;controlMemory_MC50.c: 129:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 24760  008164  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24761  008166  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24762  008168  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24763  00816A  90D8               	bcf	status,0,c
 24764  00816C  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24765  00816E  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24766  008170  90D8               	bcf	status,0,c
 24767  008172  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24768  008174  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24769  008176  0E00               	movlw	0
 24770  008178  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24771  00817A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24772  00817C  0E02               	movlw	2
 24773  00817E  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24774  008180  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24775  008182  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24776  008184  6E24               	movwf	i2c_readDataBlock@data^0,c
 24777  008186  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24778  008188  0E00               	movlw	0
 24779  00818A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24780  00818C  0E04               	movlw	4
 24781  00818E  6E26               	movwf	i2c_readDataBlock@len^0,c
 24782  008190  0E50               	movlw	80
 24783  008192  ECC7  F044         	call	_i2c_readDataBlock
 24784                           
 24785                           ;controlMemory_MC50.c: 130:     }
 24786  008196  D019               	goto	l20782
 24787  008198                     l20780:
 24788                           
 24789                           ;controlMemory_MC50.c: 132:     {;controlMemory_MC50.c: 133:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 24790  008198  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 24791  00819A  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 24792  00819C  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 24793  00819E  90D8               	bcf	status,0,c
 24794  0081A0  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24795  0081A2  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24796  0081A4  90D8               	bcf	status,0,c
 24797  0081A6  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 24798  0081A8  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 24799  0081AA  0E00               	movlw	0
 24800  0081AC  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 24801  0081AE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 24802  0081B0  0E05               	movlw	5
 24803  0081B2  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 24804  0081B4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 24805  0081B6  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 24806  0081B8  6E24               	movwf	i2c_readDataBlock@data^0,c
 24807  0081BA  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 24808  0081BC  0E00               	movlw	0
 24809  0081BE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 24810  0081C0  0E04               	movlw	4
 24811  0081C2  6E26               	movwf	i2c_readDataBlock@len^0,c
 24812  0081C4  0E50               	movlw	80
 24813  0081C6  ECC7  F044         	call	_i2c_readDataBlock
 24814  0081CA                     l20782:
 24815                           
 24816                           ;controlMemory_MC50.c: 136:      if( tempSerial==0)
 24817  0081CA  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 24818  0081CC  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 24819  0081CE  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 24820  0081D0  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 24821  0081D2  A4D8               	btfss	status,2,c
 24822  0081D4  D002               	goto	l20790
 24823                           
 24824                           ;controlMemory_MC50.c: 137:      {;controlMemory_MC50.c: 138:          return 1;
 24825  0081D6  0E01               	movlw	1
 24826  0081D8  0012               	return	
 24827  0081DA                     l20790:
 24828                           
 24829                           ;controlMemory_MC50.c: 141:      {;controlMemory_MC50.c: 142:          return 0;
 24830  0081DA  0E00               	movlw	0
 24831  0081DC  0012               	return		;funcret
 24832  0081DE                     __end_of_cmdMemoryIsEmpty:
 24833                           	callstack 0
 24834                           
 24835 ;; *************** function _RemoveSerial *****************
 24836 ;; Defined at:
 24837 ;;		line 95 in file "controlMemory_MC50.c"
 24838 ;; Parameters:    Size  Location     Type
 24839 ;;  cmdType         1    wreg     unsigned char 
 24840 ;;  position        1   57[COMRAM] unsigned char 
 24841 ;; Auto vars:     Size  Location     Type
 24842 ;;  cmdType         1    2[BANK0 ] unsigned char 
 24843 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 24844 ;; Return value:  Size  Location     Type
 24845 ;;                  1    wreg      void 
 24846 ;; Registers used:
 24847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24848 ;; Tracked objects:
 24849 ;;		On entry : 3E/1
 24850 ;;		On exit  : 0/0
 24851 ;;		Unchanged: 0/0
 24852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24853 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24854 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24855 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24856 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24857 ;;Total ram usage:        8 bytes
 24858 ;; Hardware stack levels used: 1
 24859 ;; Hardware stack levels required when called: 13
 24860 ;; This function calls:
 24861 ;;		_i2c_writeNBytes
 24862 ;; This function is called by:
 24863 ;;		_controlSelectRemote
 24864 ;;		_eusartparser
 24865 ;; This function uses a non-reentrant model
 24866 ;;
 24867                           
 24868                           	psect	text84
 24869  0086AA                     __ptext84:
 24870                           	callstack 0
 24871  0086AA                     _RemoveSerial:
 24872                           	callstack 14
 24873                           
 24874                           ;incstack = 0
 24875                           ;RemoveSerial@cmdType stored from wreg
 24876  0086AA  0100               	movlb	0	; () banked
 24877  0086AC  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 24878                           
 24879                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 24880  0086AE  0E00               	movlw	0
 24881  0086B0  0100               	movlb	0	; () banked
 24882  0086B2  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 24883  0086B4  0E00               	movlw	0
 24884  0086B6  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 24885  0086B8  0E00               	movlw	0
 24886  0086BA  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 24887  0086BC  0E00               	movlw	0
 24888  0086BE  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 24889                           
 24890                           ; BSR set to: 0
 24891                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 24892  0086C0  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 24893  0086C2  A4D8               	btfss	status,2,c
 24894  0086C4  D019               	goto	l20772
 24895                           
 24896                           ; BSR set to: 0
 24897                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 24898  0086C6  503A               	movf	RemoveSerial@position^0,w,c
 24899  0086C8  6FD8               	movwf	??_RemoveSerial& (0+255),b
 24900  0086CA  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 24901  0086CC  90D8               	bcf	status,0,c
 24902  0086CE  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24903  0086D0  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24904  0086D2  90D8               	bcf	status,0,c
 24905  0086D4  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24906  0086D6  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24907  0086D8  0E00               	movlw	0
 24908  0086DA  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 24909  0086DC  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24910  0086DE  0E02               	movlw	2
 24911  0086E0  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24912  0086E2  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24913  0086E4  0EDB               	movlw	low RemoveSerial@tempSerial
 24914  0086E6  6E24               	movwf	i2c_writeNBytes@data^0,c
 24915  0086E8  0E00               	movlw	0
 24916  0086EA  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24917  0086EC  0E04               	movlw	4
 24918  0086EE  6E25               	movwf	i2c_writeNBytes@len^0,c
 24919  0086F0  0E50               	movlw	80
 24920  0086F2  EC02  F045         	call	_i2c_writeNBytes
 24921                           
 24922                           ;controlMemory_MC50.c: 103:     }
 24923  0086F6  0012               	return	
 24924  0086F8                     l20772:
 24925                           
 24926                           ; BSR set to: 0
 24927                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 24928  0086F8  503A               	movf	RemoveSerial@position^0,w,c
 24929  0086FA  6FD8               	movwf	??_RemoveSerial& (0+255),b
 24930  0086FC  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 24931  0086FE  90D8               	bcf	status,0,c
 24932  008700  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24933  008702  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24934  008704  90D8               	bcf	status,0,c
 24935  008706  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 24936  008708  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 24937  00870A  0E00               	movlw	0
 24938  00870C  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 24939  00870E  6E22               	movwf	i2c_writeNBytes@reg^0,c
 24940  008710  0E05               	movlw	5
 24941  008712  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 24942  008714  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 24943  008716  0EDB               	movlw	low RemoveSerial@tempSerial
 24944  008718  6E24               	movwf	i2c_writeNBytes@data^0,c
 24945  00871A  0E00               	movlw	0
 24946  00871C  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 24947  00871E  0E04               	movlw	4
 24948  008720  6E25               	movwf	i2c_writeNBytes@len^0,c
 24949  008722  0E50               	movlw	80
 24950  008724  EC02  F045         	call	_i2c_writeNBytes
 24951  008728  0012               	return		;funcret
 24952  00872A                     __end_of_RemoveSerial:
 24953                           	callstack 0
 24954                           
 24955 ;; *************** function _ReadSerial *****************
 24956 ;; Defined at:
 24957 ;;		line 110 in file "controlMemory_MC50.c"
 24958 ;; Parameters:    Size  Location     Type
 24959 ;;  cmdType         1    wreg     unsigned char 
 24960 ;;  tempSerial      1   45[COMRAM] PTR unsigned long 
 24961 ;;		 -> eusartparser@serial(4), 
 24962 ;;  position        1   46[COMRAM] unsigned char 
 24963 ;; Auto vars:     Size  Location     Type
 24964 ;;  cmdType         1   49[COMRAM] unsigned char 
 24965 ;; Return value:  Size  Location     Type
 24966 ;;                  1    wreg      void 
 24967 ;; Registers used:
 24968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24969 ;; Tracked objects:
 24970 ;;		On entry : 3F/0
 24971 ;;		On exit  : 0/0
 24972 ;;		Unchanged: 0/0
 24973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24978 ;;Total ram usage:        5 bytes
 24979 ;; Hardware stack levels used: 1
 24980 ;; Hardware stack levels required when called: 13
 24981 ;; This function calls:
 24982 ;;		_i2c_readDataBlock
 24983 ;; This function is called by:
 24984 ;;		_eusartparser
 24985 ;; This function uses a non-reentrant model
 24986 ;;
 24987                           
 24988                           	psect	text85
 24989  008B58                     __ptext85:
 24990                           	callstack 0
 24991  008B58                     _ReadSerial:
 24992                           	callstack 16
 24993                           
 24994                           ;incstack = 0
 24995                           ;ReadSerial@cmdType stored from wreg
 24996  008B58  6E32               	movwf	ReadSerial@cmdType^0,c
 24997                           
 24998                           ;controlMemory_MC50.c: 110: void ReadSerial(char cmdType, unsigned long* tempSerial, cha
      +                          r position);controlMemory_MC50.c: 111: {;controlMemory_MC50.c: 112:     if(cmdType==0)
 24999  008B5A  5032               	movf	ReadSerial@cmdType^0,w,c
 25000  008B5C  A4D8               	btfss	status,2,c
 25001  008B5E  D01A               	goto	l22784
 25002                           
 25003                           ;controlMemory_MC50.c: 113:     {;controlMemory_MC50.c: 114:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0200 + (position * 4)), (char*)tempSerial, 4);
 25004  008B60  502F               	movf	ReadSerial@position^0,w,c
 25005  008B62  6E30               	movwf	??_ReadSerial^0,c
 25006  008B64  6A31               	clrf	(??_ReadSerial+1)^0,c
 25007  008B66  90D8               	bcf	status,0,c
 25008  008B68  3630               	rlcf	??_ReadSerial^0,f,c
 25009  008B6A  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25010  008B6C  90D8               	bcf	status,0,c
 25011  008B6E  3630               	rlcf	??_ReadSerial^0,f,c
 25012  008B70  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25013  008B72  0E00               	movlw	0
 25014  008B74  2430               	addwf	??_ReadSerial^0,w,c
 25015  008B76  6E22               	movwf	i2c_readDataBlock@reg^0,c
 25016  008B78  0E02               	movlw	2
 25017  008B7A  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 25018  008B7C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 25019  008B7E  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 25020  008B82  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 25021  008B84  0E00               	movlw	0
 25022  008B86  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 25023  008B88  0E04               	movlw	4
 25024  008B8A  6E26               	movwf	i2c_readDataBlock@len^0,c
 25025  008B8C  0E50               	movlw	80
 25026  008B8E  ECC7  F044         	call	_i2c_readDataBlock
 25027                           
 25028                           ;controlMemory_MC50.c: 115:     }
 25029  008B92  0012               	return	
 25030  008B94                     l22784:
 25031                           
 25032                           ;controlMemory_MC50.c: 117:     {;controlMemory_MC50.c: 118:        i2c_readDataBlock(0x
      +                          50, (uint16_t)(0x0500 + (position * 4)), (char*)tempSerial, 4);
 25033  008B94  502F               	movf	ReadSerial@position^0,w,c
 25034  008B96  6E30               	movwf	??_ReadSerial^0,c
 25035  008B98  6A31               	clrf	(??_ReadSerial+1)^0,c
 25036  008B9A  90D8               	bcf	status,0,c
 25037  008B9C  3630               	rlcf	??_ReadSerial^0,f,c
 25038  008B9E  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25039  008BA0  90D8               	bcf	status,0,c
 25040  008BA2  3630               	rlcf	??_ReadSerial^0,f,c
 25041  008BA4  3631               	rlcf	(??_ReadSerial+1)^0,f,c
 25042  008BA6  0E00               	movlw	0
 25043  008BA8  2430               	addwf	??_ReadSerial^0,w,c
 25044  008BAA  6E22               	movwf	i2c_readDataBlock@reg^0,c
 25045  008BAC  0E05               	movlw	5
 25046  008BAE  2031               	addwfc	(??_ReadSerial+1)^0,w,c
 25047  008BB0  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 25048  008BB2  C02E  F024         	movff	ReadSerial@tempSerial,i2c_readDataBlock@data
 25049  008BB6  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 25050  008BB8  0E00               	movlw	0
 25051  008BBA  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 25052  008BBC  0E04               	movlw	4
 25053  008BBE  6E26               	movwf	i2c_readDataBlock@len^0,c
 25054  008BC0  0E50               	movlw	80
 25055  008BC2  ECC7  F044         	call	_i2c_readDataBlock
 25056  008BC6  0012               	return		;funcret
 25057  008BC8                     __end_of_ReadSerial:
 25058                           	callstack 0
 25059                           
 25060 ;; *************** function _i2c_readDataBlock *****************
 25061 ;; Defined at:
 25062 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 25063 ;; Parameters:    Size  Location     Type
 25064 ;;  address         1    wreg     unsigned char 
 25065 ;;  reg             2   33[COMRAM] unsigned short 
 25066 ;;  data            2   35[COMRAM] PTR void 
 25067 ;;		 -> eusartparser@serial(4), var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemote
      +sFull(1), 
 25068 ;;		 -> memoryTEMP(16), var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 25069 ;;  len             2   37[COMRAM] unsigned int 
 25070 ;; Auto vars:     Size  Location     Type
 25071 ;;  address         1   40[COMRAM] unsigned char 
 25072 ;;  d               4   41[COMRAM] struct .
 25073 ;; Return value:  Size  Location     Type
 25074 ;;                  1    wreg      void 
 25075 ;; Registers used:
 25076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25077 ;; Tracked objects:
 25078 ;;		On entry : 0/2
 25079 ;;		On exit  : 0/0
 25080 ;;		Unchanged: 0/0
 25081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25082 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25083 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25085 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25086 ;;Total ram usage:       12 bytes
 25087 ;; Hardware stack levels used: 1
 25088 ;; Hardware stack levels required when called: 12
 25089 ;; This function calls:
 25090 ;;		_I2C1_Close
 25091 ;;		_I2C1_MasterWrite
 25092 ;;		_I2C1_Open
 25093 ;;		_I2C1_SetAddressNackCallback
 25094 ;;		_I2C1_SetBuffer
 25095 ;;		_I2C1_SetDataCompleteCallback
 25096 ;; This function is called by:
 25097 ;;		_validateRemoteSerialNumber
 25098 ;;		_ReadSerial
 25099 ;;		_cmdMemoryIsEmpty
 25100 ;;		_loadNVM_VarSystem
 25101 ;; This function uses a non-reentrant model
 25102 ;;
 25103                           
 25104                           	psect	text86
 25105  00898E                     __ptext86:
 25106                           	callstack 0
 25107  00898E                     _i2c_readDataBlock:
 25108                           	callstack 14
 25109                           
 25110                           ;incstack = 0
 25111                           ;i2c_readDataBlock@address stored from wreg
 25112  00898E  6E29               	movwf	i2c_readDataBlock@address^0,c
 25113                           
 25114                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 25115  008990  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 25116  008994  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 25117                           
 25118                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 25119  008998  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 25120  00899C  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 25121  0089A0                     l20540:
 25122  0089A0  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 25123  0089A2  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 25124  0089A4  ECD2  F042         	call	_I2C1_Open
 25125  0089A8  0900               	iorlw	0
 25126  0089AA  B4D8               	btfsc	status,2,c
 25127  0089AC  D7F9               	goto	l20540
 25128                           
 25129                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 25130  0089AE  0EC4               	movlw	low _rdBlkRegCompleteHandler
 25131  0089B0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 25132  0089B2  0E95               	movlw	high _rdBlkRegCompleteHandler
 25133  0089B4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 25134  0089B6  0E2A               	movlw	low i2c_readDataBlock@d
 25135  0089B8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 25136  0089BA  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 25137  0089BC  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 25138                           
 25139                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 25140  0089C0  0E22               	movlw	low i2c_readDataBlock@reg
 25141  0089C2  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 25142  0089C4  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 25143  0089C6  0E00               	movlw	0
 25144  0089C8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 25145  0089CA  0E01               	movlw	1
 25146  0089CC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 25147  0089CE  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 25148                           
 25149                           ; BSR set to: 2
 25150                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 25151  0089D2  0E00               	movlw	0
 25152  0089D4  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 25153  0089D6  0E00               	movlw	0
 25154  0089D8  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 25155  0089DA  0E00               	movlw	0
 25156  0089DC  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 25157  0089DE  0E00               	movlw	0
 25158  0089E0  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 25159  0089E2  EC99  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 25160                           
 25161                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 25162  0089E6  EC72  F04F         	call	_I2C1_MasterWrite	;wreg free
 25163  0089EA                     l20550:
 25164  0089EA  ECE6  F04D         	call	_I2C1_Close	;wreg free
 25165  0089EE  06E8               	decf	wreg,f,c
 25166  0089F0  B4D8               	btfsc	status,2,c
 25167  0089F2  D7FB               	goto	l20550
 25168                           
 25169                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 25170  0089F4  0ED0               	movlw	208
 25171  0089F6  6E28               	movwf	??_i2c_readDataBlock^0,c
 25172  0089F8  0ECA               	movlw	202
 25173  0089FA                     u34177:
 25174  0089FA  2EE8               	decfsz	wreg,f,c
 25175  0089FC  D7FE               	bra	u34177
 25176  0089FE  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 25177  008A00  D7FC               	bra	u34177
 25178  008A02  0012               	return		;funcret
 25179  008A04                     __end_of_i2c_readDataBlock:
 25180                           	callstack 0
 25181                           
 25182 ;; *************** function _WWDT_TimerClear *****************
 25183 ;; Defined at:
 25184 ;;		line 128 in file "mcc_generated_files/mcc.c"
 25185 ;; Parameters:    Size  Location     Type
 25186 ;;		None
 25187 ;; Auto vars:     Size  Location     Type
 25188 ;;  state           1   15[COMRAM] _Bool 
 25189 ;;  readBack        1    0        unsigned char 
 25190 ;; Return value:  Size  Location     Type
 25191 ;;                  1    wreg      void 
 25192 ;; Registers used:
 25193 ;;		wreg, status,2
 25194 ;; Tracked objects:
 25195 ;;		On entry : 0/0
 25196 ;;		On exit  : 0/0
 25197 ;;		Unchanged: 0/0
 25198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25203 ;;Total ram usage:        1 bytes
 25204 ;; Hardware stack levels used: 1
 25205 ;; Hardware stack levels required when called: 4
 25206 ;; This function calls:
 25207 ;;		Nothing
 25208 ;; This function is called by:
 25209 ;;		_main
 25210 ;; This function uses a non-reentrant model
 25211 ;;
 25212                           
 25213                           	psect	text87
 25214  009C2C                     __ptext87:
 25215                           	callstack 0
 25216  009C2C                     _WWDT_TimerClear:
 25217                           	callstack 26
 25218                           
 25219                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 25220                           
 25221                           ;incstack = 0
 25222  009C2C  0E00               	movlw	0
 25223  009C2E  BEF2               	btfsc	4082,7,c	;volatile
 25224  009C30  0E01               	movlw	1
 25225  009C32  6E10               	movwf	WWDT_TimerClear@state^0,c
 25226                           
 25227                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 25228  009C34  9EF2               	bcf	4082,7,c	;volatile
 25229  009C36  010E               	movlb	14	; () banked
 25230  009C38  51D2               	movf	210,w,b	;volatile
 25231  009C3A  0004               	clrwdt		;# 
 25232                           
 25233                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 25234  009C3C  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 25235  009C3E  D002               	bra	u29655
 25236  009C40  9EF2               	bcf	4082,7,c	;volatile
 25237  009C42  D001               	bra	u29656
 25238  009C44                     u29655:
 25239  009C44  8EF2               	bsf	4082,7,c	;volatile
 25240  009C46                     u29656:
 25241  009C46  0012               	return		;funcret
 25242  009C48                     __end_of_WWDT_TimerClear:
 25243                           	callstack 0
 25244                           
 25245 ;; *************** function _WWDT_SoftEnable *****************
 25246 ;; Defined at:
 25247 ;;		line 104 in file "mcc_generated_files/mcc.c"
 25248 ;; Parameters:    Size  Location     Type
 25249 ;;		None
 25250 ;; Auto vars:     Size  Location     Type
 25251 ;;		None
 25252 ;; Return value:  Size  Location     Type
 25253 ;;                  1    wreg      void 
 25254 ;; Registers used:
 25255 ;;		None
 25256 ;; Tracked objects:
 25257 ;;		On entry : 3F/E
 25258 ;;		On exit  : 3F/E
 25259 ;;		Unchanged: 0/0
 25260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25265 ;;Total ram usage:        0 bytes
 25266 ;; Hardware stack levels used: 1
 25267 ;; Hardware stack levels required when called: 4
 25268 ;; This function calls:
 25269 ;;		Nothing
 25270 ;; This function is called by:
 25271 ;;		_main
 25272 ;; This function uses a non-reentrant model
 25273 ;;
 25274                           
 25275                           	psect	text88
 25276  009F6A                     __ptext88:
 25277                           	callstack 0
 25278  009F6A                     _WWDT_SoftEnable:
 25279                           	callstack 26
 25280                           
 25281                           ; BSR set to: 14
 25282                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 25283                           
 25284                           ;incstack = 0
 25285  009F6A  81D2               	bsf	210,0,b	;volatile
 25286                           
 25287                           ; BSR set to: 14
 25288  009F6C  0012               	return		;funcret
 25289  009F6E                     __end_of_WWDT_SoftEnable:
 25290                           	callstack 0
 25291                           
 25292 ;; *************** function _ShowVersion *****************
 25293 ;; Defined at:
 25294 ;;		line 254 in file "main_MC50.c"
 25295 ;; Parameters:    Size  Location     Type
 25296 ;;		None
 25297 ;; Auto vars:     Size  Location     Type
 25298 ;;		None
 25299 ;; Return value:  Size  Location     Type
 25300 ;;                  1    wreg      void 
 25301 ;; Registers used:
 25302 ;;		wreg, status,2, status,0, cstack
 25303 ;; Tracked objects:
 25304 ;;		On entry : 3F/1
 25305 ;;		On exit  : 3F/1
 25306 ;;		Unchanged: 0/0
 25307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25312 ;;Total ram usage:        0 bytes
 25313 ;; Hardware stack levels used: 1
 25314 ;; Hardware stack levels required when called: 5
 25315 ;; This function calls:
 25316 ;;		_SetSegmentValue
 25317 ;; This function is called by:
 25318 ;;		_main
 25319 ;; This function uses a non-reentrant model
 25320 ;;
 25321                           
 25322                           	psect	text89
 25323  008D78                     __ptext89:
 25324                           	callstack 0
 25325  008D78                     _ShowVersion:
 25326                           	callstack 25
 25327                           
 25328                           ; BSR set to: 1
 25329                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 25330                           
 25331                           ; BSR set to: 14
 25332                           ;incstack = 0
 25333  008D78  BFDC               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 25334  008D7A  D005               	goto	u31300
 25335  008D7C  51DC               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 25336  008D7E  E12E               	bnz	l2044
 25337  008D80  05DB               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 25338  008D82  B0D8               	btfsc	status,0,c
 25339  008D84  0012               	return	
 25340  008D86                     u31300:
 25341                           
 25342                           ; BSR set to: 1
 25343                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 25344  008D86  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 25345  008D88  A4D8               	btfss	status,2,c
 25346  008D8A  D006               	goto	l25430
 25347                           
 25348                           ; BSR set to: 1
 25349                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 25350  008D8C  0E01               	movlw	1
 25351  008D8E  6E1C               	movwf	SetSegmentValue@d2^0,c
 25352  008D90  0E00               	movlw	0
 25353  008D92  EC67  F04E         	call	_SetSegmentValue
 25354                           
 25355                           ;main_MC50.c: 262:             }
 25356  008D96  D01C               	goto	l2039
 25357  008D98                     l25430:
 25358                           
 25359                           ; BSR set to: 1
 25360  008D98  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 25361  008D9A  A4D8               	btfss	status,2,c
 25362  008D9C  D006               	goto	l25434
 25363                           
 25364                           ; BSR set to: 1
 25365                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 25366  008D9E  0E01               	movlw	1
 25367  008DA0  6E1C               	movwf	SetSegmentValue@d2^0,c
 25368  008DA2  0E14               	movlw	20
 25369  008DA4  EC67  F04E         	call	_SetSegmentValue
 25370                           
 25371                           ;main_MC50.c: 266:             }
 25372  008DA8  D013               	goto	l2039
 25373  008DAA                     l25434:
 25374                           
 25375                           ; BSR set to: 1
 25376  008DAA  0E02               	movlw	2
 25377  008DAC  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25378  008DAE  A4D8               	btfss	status,2,c
 25379  008DB0  D006               	goto	l25438
 25380                           
 25381                           ; BSR set to: 1
 25382                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 25383  008DB2  0E00               	movlw	0
 25384  008DB4  6E1C               	movwf	SetSegmentValue@d2^0,c
 25385  008DB6  0E08               	movlw	8
 25386  008DB8  EC67  F04E         	call	_SetSegmentValue
 25387                           
 25388                           ;main_MC50.c: 270:             }
 25389  008DBC  D009               	goto	l2039
 25390  008DBE                     l25438:
 25391                           
 25392                           ; BSR set to: 1
 25393  008DBE  0E03               	movlw	3
 25394  008DC0  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 25395  008DC2  A4D8               	btfss	status,2,c
 25396  008DC4  D005               	goto	l2039
 25397                           
 25398                           ; BSR set to: 1
 25399                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 25400  008DC6  0E02               	movlw	2
 25401  008DC8  6E1C               	movwf	SetSegmentValue@d2^0,c
 25402  008DCA  0E14               	movlw	20
 25403  008DCC  EC67  F04E         	call	_SetSegmentValue
 25404  008DD0                     l2039:
 25405                           
 25406                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 25407                           
 25408                           ; BSR set to: 1
 25409  008DD0  0101               	movlb	1	; () banked
 25410  008DD2  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 25411                           
 25412                           ; BSR set to: 1
 25413                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 25414  008DD4  0E00               	movlw	0
 25415  008DD6  6FDC               	movwf	(_ts_system+61)& (0+255),b	;volatile
 25416  008DD8  0E14               	movlw	20
 25417  008DDA  6FDB               	movwf	(_ts_system+60)& (0+255),b	;volatile
 25418  008DDC                     l2044:
 25419                           
 25420                           ; BSR set to: 1
 25421  008DDC  0012               	return		;funcret
 25422  008DDE                     __end_of_ShowVersion:
 25423                           	callstack 0
 25424                           
 25425 ;; *************** function _SetSegmentValue *****************
 25426 ;; Defined at:
 25427 ;;		line 112 in file "outputs_MC50.c"
 25428 ;; Parameters:    Size  Location     Type
 25429 ;;  d1              1    wreg     unsigned char 
 25430 ;;  d2              1   27[COMRAM] unsigned char 
 25431 ;; Auto vars:     Size  Location     Type
 25432 ;;  d1              1   28[COMRAM] unsigned char 
 25433 ;; Return value:  Size  Location     Type
 25434 ;;                  1    wreg      void 
 25435 ;; Registers used:
 25436 ;;		wreg, status,2
 25437 ;; Tracked objects:
 25438 ;;		On entry : 0/0
 25439 ;;		On exit  : 3F/0
 25440 ;;		Unchanged: 0/0
 25441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25442 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25446 ;;Total ram usage:        2 bytes
 25447 ;; Hardware stack levels used: 1
 25448 ;; Hardware stack levels required when called: 4
 25449 ;; This function calls:
 25450 ;;		Nothing
 25451 ;; This function is called by:
 25452 ;;		_main
 25453 ;;		_ShowVersion
 25454 ;;		_controlSelectRemote
 25455 ;; This function uses a non-reentrant model
 25456 ;;
 25457                           
 25458                           	psect	text90
 25459  009CCE                     __ptext90:
 25460                           	callstack 0
 25461  009CCE                     _SetSegmentValue:
 25462                           	callstack 23
 25463                           
 25464                           ; BSR set to: 1
 25465                           ;incstack = 0
 25466                           ;SetSegmentValue@d1 stored from wreg
 25467  009CCE  6E1D               	movwf	SetSegmentValue@d1^0,c
 25468                           
 25469                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 25470  009CD0  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 25471                           
 25472                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 25473  009CD4  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 25474                           
 25475                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 25476  009CD8  0E00               	movlw	0
 25477  009CDA  0100               	movlb	0	; () banked
 25478  009CDC  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 25479  009CDE  0E00               	movlw	0
 25480  009CE0  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 25481                           
 25482                           ; BSR set to: 0
 25483                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 25484  009CE2  0E00               	movlw	0
 25485  009CE4  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 25486                           
 25487                           ; BSR set to: 0
 25488  009CE6  0012               	return		;funcret
 25489  009CE8                     __end_of_SetSegmentValue:
 25490                           	callstack 0
 25491                           
 25492 ;; *************** function _SYSTEM_Initialize *****************
 25493 ;; Defined at:
 25494 ;;		line 50 in file "mcc_generated_files/mcc.c"
 25495 ;; Parameters:    Size  Location     Type
 25496 ;;		None
 25497 ;; Auto vars:     Size  Location     Type
 25498 ;;		None
 25499 ;; Return value:  Size  Location     Type
 25500 ;;                  1    wreg      void 
 25501 ;; Registers used:
 25502 ;;		wreg, status,2, status,0, cstack
 25503 ;; Tracked objects:
 25504 ;;		On entry : 3F/0
 25505 ;;		On exit  : 3F/E
 25506 ;;		Unchanged: 0/0
 25507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25512 ;;Total ram usage:        0 bytes
 25513 ;; Hardware stack levels used: 1
 25514 ;; Hardware stack levels required when called: 6
 25515 ;; This function calls:
 25516 ;;		_ADCC_Initialize
 25517 ;;		_EUSART1_Initialize
 25518 ;;		_I2C1_Initialize
 25519 ;;		_INTERRUPT_Initialize
 25520 ;;		_OSCILLATOR_Initialize
 25521 ;;		_PIN_MANAGER_Initialize
 25522 ;;		_PMD_Initialize
 25523 ;;		_TMR0_Initialize
 25524 ;;		_TMR1_Initialize
 25525 ;;		_TMR2_Initialize
 25526 ;;		_WWDT_Initialize
 25527 ;; This function is called by:
 25528 ;;		_main
 25529 ;; This function uses a non-reentrant model
 25530 ;;
 25531                           
 25532                           	psect	text91
 25533  0097EC                     __ptext91:
 25534                           	callstack 0
 25535  0097EC                     _SYSTEM_Initialize:
 25536                           	callstack 24
 25537                           
 25538                           ; BSR set to: 0
 25539                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 25540                           
 25541                           ; BSR set to: 0
 25542                           ;incstack = 0
 25543  0097EC  ECB7  F04F         	call	_INTERRUPT_Initialize	;wreg free
 25544                           
 25545                           ; BSR set to: 0
 25546                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 25547  0097F0  EC24  F04E         	call	_PMD_Initialize	;wreg free
 25548                           
 25549                           ; BSR set to: 14
 25550                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 25551  0097F4  ECF2  F04E         	call	_I2C1_Initialize	;wreg free
 25552                           
 25553                           ; BSR set to: 14
 25554                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 25555  0097F8  EC5A  F040         	call	_PIN_MANAGER_Initialize	;wreg free
 25556                           
 25557                           ; BSR set to: 14
 25558                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 25559  0097FC  ECC8  F04E         	call	_OSCILLATOR_Initialize	;wreg free
 25560                           
 25561                           ; BSR set to: 14
 25562                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 25563  009800  EC36  F04F         	call	_WWDT_Initialize	;wreg free
 25564                           
 25565                           ; BSR set to: 14
 25566                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 25567  009804  EC5B  F049         	call	_ADCC_Initialize	;wreg free
 25568                           
 25569                           ; BSR set to: 15
 25570                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 25571  009808  EC39  F04C         	call	_TMR2_Initialize	;wreg free
 25572                           
 25573                           ; BSR set to: 14
 25574                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 25575  00980C  EC81  F04A         	call	_TMR1_Initialize	;wreg free
 25576                           
 25577                           ; BSR set to: 14
 25578                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 25579  009810  ECD5  F04D         	call	_TMR0_Initialize	;wreg free
 25580                           
 25581                           ; BSR set to: 14
 25582                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 25583  009814  EC95  F043         	call	_EUSART1_Initialize	;wreg free
 25584                           
 25585                           ; BSR set to: 14
 25586  009818  0012               	return		;funcret
 25587  00981A                     __end_of_SYSTEM_Initialize:
 25588                           	callstack 0
 25589                           
 25590 ;; *************** function _WWDT_Initialize *****************
 25591 ;; Defined at:
 25592 ;;		line 96 in file "mcc_generated_files/mcc.c"
 25593 ;; Parameters:    Size  Location     Type
 25594 ;;		None
 25595 ;; Auto vars:     Size  Location     Type
 25596 ;;		None
 25597 ;; Return value:  Size  Location     Type
 25598 ;;                  1    wreg      void 
 25599 ;; Registers used:
 25600 ;;		wreg, status,2
 25601 ;; Tracked objects:
 25602 ;;		On entry : 3F/E
 25603 ;;		On exit  : 3F/E
 25604 ;;		Unchanged: 0/0
 25605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25610 ;;Total ram usage:        0 bytes
 25611 ;; Hardware stack levels used: 1
 25612 ;; Hardware stack levels required when called: 4
 25613 ;; This function calls:
 25614 ;;		Nothing
 25615 ;; This function is called by:
 25616 ;;		_SYSTEM_Initialize
 25617 ;; This function uses a non-reentrant model
 25618 ;;
 25619                           
 25620                           	psect	text92
 25621  009E6C                     __ptext92:
 25622                           	callstack 0
 25623  009E6C                     _WWDT_Initialize:
 25624                           	callstack 25
 25625                           
 25626                           ; BSR set to: 14
 25627                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 25628                           
 25629                           ; BSR set to: 14
 25630                           ;incstack = 0
 25631  009E6C  0E16               	movlw	22
 25632  009E6E  6FD2               	movwf	210,b	;volatile
 25633                           
 25634                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 25635  009E70  0E27               	movlw	39
 25636  009E72  6FD3               	movwf	211,b	;volatile
 25637                           
 25638                           ; BSR set to: 14
 25639  009E74  0012               	return		;funcret
 25640  009E76                     __end_of_WWDT_Initialize:
 25641                           	callstack 0
 25642                           
 25643 ;; *************** function _TMR2_Initialize *****************
 25644 ;; Defined at:
 25645 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 25646 ;; Parameters:    Size  Location     Type
 25647 ;;		None
 25648 ;; Auto vars:     Size  Location     Type
 25649 ;;		None
 25650 ;; Return value:  Size  Location     Type
 25651 ;;                  1    wreg      void 
 25652 ;; Registers used:
 25653 ;;		wreg, status,2, status,0, cstack
 25654 ;; Tracked objects:
 25655 ;;		On entry : 3F/F
 25656 ;;		On exit  : 3F/E
 25657 ;;		Unchanged: 0/0
 25658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25663 ;;Total ram usage:        0 bytes
 25664 ;; Hardware stack levels used: 1
 25665 ;; Hardware stack levels required when called: 5
 25666 ;; This function calls:
 25667 ;;		_TMR2_SetInterruptHandler
 25668 ;; This function is called by:
 25669 ;;		_SYSTEM_Initialize
 25670 ;; This function uses a non-reentrant model
 25671 ;;
 25672                           
 25673                           	psect	text93
 25674  009872                     __ptext93:
 25675                           	callstack 0
 25676  009872                     _TMR2_Initialize:
 25677                           	callstack 24
 25678                           
 25679                           ; BSR set to: 15
 25680                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 25681                           
 25682                           ; BSR set to: 14
 25683                           ;incstack = 0
 25684  009872  0E02               	movlw	2
 25685  009874  6EBF               	movwf	191,c	;volatile
 25686                           
 25687                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 25688  009876  0E40               	movlw	64
 25689  009878  6EBE               	movwf	190,c	;volatile
 25690                           
 25691                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 25692  00987A  0E00               	movlw	0
 25693  00987C  6EC0               	movwf	192,c	;volatile
 25694                           
 25695                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 25696  00987E  0EC7               	movlw	199
 25697  009880  6EBC               	movwf	188,c	;volatile
 25698                           
 25699                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 25700  009882  0E00               	movlw	0
 25701  009884  6EBB               	movwf	187,c	;volatile
 25702                           
 25703                           ; BSR set to: 15
 25704                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 25705  009886  010E               	movlb	14	; () banked
 25706  009888  93CE               	bcf	206,1,b	;volatile
 25707                           
 25708                           ; BSR set to: 14
 25709                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 25710  00988A  83C6               	bsf	198,1,b	;volatile
 25711                           
 25712                           ; BSR set to: 14
 25713                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 25714  00988C  0E98               	movlw	low _TMR2_DefaultInterruptHandler
 25715  00988E  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 25716  009890  0E9F               	movlw	high _TMR2_DefaultInterruptHandler
 25717  009892  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 25718  009894  EC3B  F04F         	call	_TMR2_SetInterruptHandler	;wreg free
 25719                           
 25720                           ; BSR set to: 14
 25721                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 25722  009898  0ED9               	movlw	217
 25723  00989A  6EBD               	movwf	189,c	;volatile
 25724                           
 25725                           ; BSR set to: 14
 25726  00989C  0012               	return		;funcret
 25727  00989E                     __end_of_TMR2_Initialize:
 25728                           	callstack 0
 25729                           
 25730 ;; *************** function _TMR2_SetInterruptHandler *****************
 25731 ;; Defined at:
 25732 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 25733 ;; Parameters:    Size  Location     Type
 25734 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25735 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 25736 ;; Auto vars:     Size  Location     Type
 25737 ;;		None
 25738 ;; Return value:  Size  Location     Type
 25739 ;;                  1    wreg      void 
 25740 ;; Registers used:
 25741 ;;		wreg, status,2, status,0
 25742 ;; Tracked objects:
 25743 ;;		On entry : 3F/E
 25744 ;;		On exit  : 3F/E
 25745 ;;		Unchanged: 3F/0
 25746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25750 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25751 ;;Total ram usage:        2 bytes
 25752 ;; Hardware stack levels used: 1
 25753 ;; Hardware stack levels required when called: 4
 25754 ;; This function calls:
 25755 ;;		Nothing
 25756 ;; This function is called by:
 25757 ;;		_TMR2_Initialize
 25758 ;; This function uses a non-reentrant model
 25759 ;;
 25760                           
 25761                           	psect	text94
 25762  009E76                     __ptext94:
 25763                           	callstack 0
 25764  009E76                     _TMR2_SetInterruptHandler:
 25765                           	callstack 24
 25766                           
 25767                           ; BSR set to: 14
 25768                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 25769                           
 25770                           ; BSR set to: 14
 25771                           ;incstack = 0
 25772  009E76  C010  F2DB         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 25773  009E7A  C011  F2DC         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 25774                           
 25775                           ; BSR set to: 14
 25776  009E7E  0012               	return		;funcret
 25777  009E80                     __end_of_TMR2_SetInterruptHandler:
 25778                           	callstack 0
 25779                           
 25780 ;; *************** function _TMR1_Initialize *****************
 25781 ;; Defined at:
 25782 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 25783 ;; Parameters:    Size  Location     Type
 25784 ;;		None
 25785 ;; Auto vars:     Size  Location     Type
 25786 ;;		None
 25787 ;; Return value:  Size  Location     Type
 25788 ;;                  1    wreg      void 
 25789 ;; Registers used:
 25790 ;;		wreg, status,2, status,0, cstack
 25791 ;; Tracked objects:
 25792 ;;		On entry : 3F/E
 25793 ;;		On exit  : 3F/E
 25794 ;;		Unchanged: 0/0
 25795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25800 ;;Total ram usage:        2 bytes
 25801 ;; Hardware stack levels used: 1
 25802 ;; Hardware stack levels required when called: 5
 25803 ;; This function calls:
 25804 ;;		_TMR1_SetInterruptHandler
 25805 ;; This function is called by:
 25806 ;;		_SYSTEM_Initialize
 25807 ;; This function uses a non-reentrant model
 25808 ;;
 25809                           
 25810                           	psect	text95
 25811  009502                     __ptext95:
 25812                           	callstack 0
 25813  009502                     _TMR1_Initialize:
 25814                           	callstack 24
 25815                           
 25816                           ; BSR set to: 14
 25817                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 25818                           
 25819                           ; BSR set to: 14
 25820                           ;incstack = 0
 25821  009502  0E00               	movlw	0
 25822  009504  6ED0               	movwf	208,c	;volatile
 25823                           
 25824                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 25825  009506  0E00               	movlw	0
 25826  009508  6ED1               	movwf	209,c	;volatile
 25827                           
 25828                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 25829  00950A  0E01               	movlw	1
 25830  00950C  6ED2               	movwf	210,c	;volatile
 25831                           
 25832                           ; BSR set to: 14
 25833                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 25834  00950E  68CE               	setf	206,c	;volatile
 25835                           
 25836                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 25837  009510  0E38               	movlw	56
 25838  009512  6ECD               	movwf	205,c	;volatile
 25839                           
 25840                           ; BSR set to: 14
 25841                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 25842  009514  91CE               	bcf	206,0,b	;volatile
 25843                           
 25844                           ; BSR set to: 14
 25845                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 25846  009516  50CD               	movf	205,w,c	;volatile
 25847  009518  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 25848  00951C  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 25849  00951E  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 25850  009522  6A12               	clrf	??_TMR1_Initialize^0,c
 25851  009524  1012               	iorwf	??_TMR1_Initialize^0,w,c
 25852  009526  0102               	movlb	2	; () banked
 25853  009528  6FDF               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 25854  00952A  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 25855  00952C  6FE0               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 25856                           
 25857                           ; BSR set to: 2
 25858                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 25859  00952E  010E               	movlb	14	; () banked
 25860  009530  81C6               	bsf	198,0,b	;volatile
 25861                           
 25862                           ; BSR set to: 14
 25863                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 25864  009532  0E9A               	movlw	low _TMR1_DefaultInterruptHandler
 25865  009534  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 25866  009536  0E9F               	movlw	high _TMR1_DefaultInterruptHandler
 25867  009538  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 25868  00953A  EC40  F04F         	call	_TMR1_SetInterruptHandler	;wreg free
 25869                           
 25870                           ; BSR set to: 14
 25871                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 25872  00953E  0E31               	movlw	49
 25873  009540  6ECF               	movwf	207,c	;volatile
 25874                           
 25875                           ; BSR set to: 14
 25876  009542  0012               	return		;funcret
 25877  009544                     __end_of_TMR1_Initialize:
 25878                           	callstack 0
 25879                           
 25880 ;; *************** function _TMR1_SetInterruptHandler *****************
 25881 ;; Defined at:
 25882 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 25883 ;; Parameters:    Size  Location     Type
 25884 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 25885 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 25886 ;; Auto vars:     Size  Location     Type
 25887 ;;		None
 25888 ;; Return value:  Size  Location     Type
 25889 ;;                  1    wreg      void 
 25890 ;; Registers used:
 25891 ;;		wreg, status,2, status,0
 25892 ;; Tracked objects:
 25893 ;;		On entry : 3F/E
 25894 ;;		On exit  : 3F/E
 25895 ;;		Unchanged: 3F/0
 25896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25901 ;;Total ram usage:        2 bytes
 25902 ;; Hardware stack levels used: 1
 25903 ;; Hardware stack levels required when called: 4
 25904 ;; This function calls:
 25905 ;;		Nothing
 25906 ;; This function is called by:
 25907 ;;		_TMR1_Initialize
 25908 ;; This function uses a non-reentrant model
 25909 ;;
 25910                           
 25911                           	psect	text96
 25912  009E80                     __ptext96:
 25913                           	callstack 0
 25914  009E80                     _TMR1_SetInterruptHandler:
 25915                           	callstack 24
 25916                           
 25917                           ; BSR set to: 14
 25918                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 25919                           
 25920                           ; BSR set to: 14
 25921                           ;incstack = 0
 25922  009E80  C010  F2DD         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 25923  009E84  C011  F2DE         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 25924                           
 25925                           ; BSR set to: 14
 25926  009E88  0012               	return		;funcret
 25927  009E8A                     __end_of_TMR1_SetInterruptHandler:
 25928                           	callstack 0
 25929                           
 25930 ;; *************** function _TMR0_Initialize *****************
 25931 ;; Defined at:
 25932 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 25933 ;; Parameters:    Size  Location     Type
 25934 ;;		None
 25935 ;; Auto vars:     Size  Location     Type
 25936 ;;		None
 25937 ;; Return value:  Size  Location     Type
 25938 ;;                  1    wreg      void 
 25939 ;; Registers used:
 25940 ;;		wreg, status,2, status,0, cstack
 25941 ;; Tracked objects:
 25942 ;;		On entry : 3F/E
 25943 ;;		On exit  : 3F/E
 25944 ;;		Unchanged: 0/0
 25945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25950 ;;Total ram usage:        0 bytes
 25951 ;; Hardware stack levels used: 1
 25952 ;; Hardware stack levels required when called: 5
 25953 ;; This function calls:
 25954 ;;		_TMR0_SetInterruptHandler
 25955 ;; This function is called by:
 25956 ;;		_SYSTEM_Initialize
 25957 ;; This function uses a non-reentrant model
 25958 ;;
 25959                           
 25960                           	psect	text97
 25961  009BAA                     __ptext97:
 25962                           	callstack 0
 25963  009BAA                     _TMR0_Initialize:
 25964                           	callstack 24
 25965                           
 25966                           ; BSR set to: 14
 25967                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 25968                           
 25969                           ; BSR set to: 14
 25970                           ;incstack = 0
 25971  009BAA  0E41               	movlw	65
 25972  009BAC  6ED6               	movwf	214,c	;volatile
 25973                           
 25974                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 25975  009BAE  0E84               	movlw	132
 25976  009BB0  6ED4               	movwf	212,c	;volatile
 25977                           
 25978                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 25979  009BB2  0E00               	movlw	0
 25980  009BB4  6ED3               	movwf	211,c	;volatile
 25981                           
 25982                           ; BSR set to: 14
 25983                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 25984  009BB6  9BCA               	bcf	202,5,b	;volatile
 25985                           
 25986                           ; BSR set to: 14
 25987                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 25988  009BB8  8BC2               	bsf	194,5,b	;volatile
 25989                           
 25990                           ; BSR set to: 14
 25991                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 25992  009BBA  0E9C               	movlw	low _TMR0_DefaultInterruptHandler
 25993  009BBC  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 25994  009BBE  0E9F               	movlw	high _TMR0_DefaultInterruptHandler
 25995  009BC0  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 25996  009BC2  EC45  F04F         	call	_TMR0_SetInterruptHandler	;wreg free
 25997                           
 25998                           ; BSR set to: 14
 25999                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 26000  009BC6  0E87               	movlw	135
 26001  009BC8  6ED5               	movwf	213,c	;volatile
 26002                           
 26003                           ; BSR set to: 14
 26004  009BCA  0012               	return		;funcret
 26005  009BCC                     __end_of_TMR0_Initialize:
 26006                           	callstack 0
 26007                           
 26008 ;; *************** function _TMR0_SetInterruptHandler *****************
 26009 ;; Defined at:
 26010 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 26011 ;; Parameters:    Size  Location     Type
 26012 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 26013 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 26014 ;; Auto vars:     Size  Location     Type
 26015 ;;		None
 26016 ;; Return value:  Size  Location     Type
 26017 ;;                  1    wreg      void 
 26018 ;; Registers used:
 26019 ;;		wreg, status,2, status,0
 26020 ;; Tracked objects:
 26021 ;;		On entry : 3F/E
 26022 ;;		On exit  : 3F/E
 26023 ;;		Unchanged: 3F/0
 26024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26028 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26029 ;;Total ram usage:        2 bytes
 26030 ;; Hardware stack levels used: 1
 26031 ;; Hardware stack levels required when called: 4
 26032 ;; This function calls:
 26033 ;;		Nothing
 26034 ;; This function is called by:
 26035 ;;		_TMR0_Initialize
 26036 ;; This function uses a non-reentrant model
 26037 ;;
 26038                           
 26039                           	psect	text98
 26040  009E8A                     __ptext98:
 26041                           	callstack 0
 26042  009E8A                     _TMR0_SetInterruptHandler:
 26043                           	callstack 24
 26044                           
 26045                           ; BSR set to: 14
 26046                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 26047                           
 26048                           ; BSR set to: 14
 26049                           ;incstack = 0
 26050  009E8A  C010  F2E1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 26051  009E8E  C011  F2E2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 26052                           
 26053                           ; BSR set to: 14
 26054  009E92  0012               	return		;funcret
 26055  009E94                     __end_of_TMR0_SetInterruptHandler:
 26056                           	callstack 0
 26057                           
 26058 ;; *************** function _PMD_Initialize *****************
 26059 ;; Defined at:
 26060 ;;		line 79 in file "mcc_generated_files/mcc.c"
 26061 ;; Parameters:    Size  Location     Type
 26062 ;;		None
 26063 ;; Auto vars:     Size  Location     Type
 26064 ;;		None
 26065 ;; Return value:  Size  Location     Type
 26066 ;;                  1    wreg      void 
 26067 ;; Registers used:
 26068 ;;		wreg, status,2
 26069 ;; Tracked objects:
 26070 ;;		On entry : 3F/0
 26071 ;;		On exit  : 3F/E
 26072 ;;		Unchanged: 0/0
 26073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26078 ;;Total ram usage:        0 bytes
 26079 ;; Hardware stack levels used: 1
 26080 ;; Hardware stack levels required when called: 4
 26081 ;; This function calls:
 26082 ;;		Nothing
 26083 ;; This function is called by:
 26084 ;;		_SYSTEM_Initialize
 26085 ;; This function uses a non-reentrant model
 26086 ;;
 26087                           
 26088                           	psect	text99
 26089  009C48                     __ptext99:
 26090                           	callstack 0
 26091  009C48                     _PMD_Initialize:
 26092                           	callstack 25
 26093                           
 26094                           ; BSR set to: 0
 26095                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 26096                           
 26097                           ; BSR set to: 14
 26098                           ;incstack = 0
 26099  009C48  0E00               	movlw	0
 26100  009C4A  010E               	movlb	14	; () banked
 26101  009C4C  6FE1               	movwf	225,b	;volatile
 26102                           
 26103                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 26104  009C4E  0E00               	movlw	0
 26105  009C50  6FE2               	movwf	226,b	;volatile
 26106                           
 26107                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 26108  009C52  0E00               	movlw	0
 26109  009C54  6FE3               	movwf	227,b	;volatile
 26110                           
 26111                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 26112  009C56  0E00               	movlw	0
 26113  009C58  6FE4               	movwf	228,b	;volatile
 26114                           
 26115                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 26116  009C5A  0E00               	movlw	0
 26117  009C5C  6FE5               	movwf	229,b	;volatile
 26118                           
 26119                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 26120  009C5E  0E00               	movlw	0
 26121  009C60  6FE6               	movwf	230,b	;volatile
 26122                           
 26123                           ; BSR set to: 14
 26124  009C62  0012               	return		;funcret
 26125  009C64                     __end_of_PMD_Initialize:
 26126                           	callstack 0
 26127                           
 26128 ;; *************** function _PIN_MANAGER_Initialize *****************
 26129 ;; Defined at:
 26130 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 26131 ;; Parameters:    Size  Location     Type
 26132 ;;		None
 26133 ;; Auto vars:     Size  Location     Type
 26134 ;;		None
 26135 ;; Return value:  Size  Location     Type
 26136 ;;                  1    wreg      void 
 26137 ;; Registers used:
 26138 ;;		wreg, status,2
 26139 ;; Tracked objects:
 26140 ;;		On entry : 3F/E
 26141 ;;		On exit  : 3F/E
 26142 ;;		Unchanged: 0/0
 26143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26148 ;;Total ram usage:        0 bytes
 26149 ;; Hardware stack levels used: 1
 26150 ;; Hardware stack levels required when called: 4
 26151 ;; This function calls:
 26152 ;;		Nothing
 26153 ;; This function is called by:
 26154 ;;		_SYSTEM_Initialize
 26155 ;; This function uses a non-reentrant model
 26156 ;;
 26157                           
 26158                           	psect	text100
 26159  0080B4                     __ptext100:
 26160                           	callstack 0
 26161  0080B4                     _PIN_MANAGER_Initialize:
 26162                           	callstack 25
 26163                           
 26164                           ; BSR set to: 14
 26165                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 26166                           
 26167                           ; BSR set to: 14
 26168                           ;incstack = 0
 26169  0080B4  0E00               	movlw	0
 26170  0080B6  6E87               	movwf	135,c	;volatile
 26171                           
 26172                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 26173  0080B8  0E00               	movlw	0
 26174  0080BA  6E86               	movwf	134,c	;volatile
 26175                           
 26176                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 26177  0080BC  0E00               	movlw	0
 26178  0080BE  6E83               	movwf	131,c	;volatile
 26179                           
 26180                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 26181  0080C0  0E00               	movlw	0
 26182  0080C2  6E84               	movwf	132,c	;volatile
 26183                           
 26184                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 26185  0080C4  0E00               	movlw	0
 26186  0080C6  6E85               	movwf	133,c	;volatile
 26187                           
 26188                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 26189  0080C8  0E00               	movlw	0
 26190  0080CA  6E8C               	movwf	140,c	;volatile
 26191                           
 26192                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 26193  0080CC  0E7F               	movlw	127
 26194  0080CE  6E88               	movwf	136,c	;volatile
 26195                           
 26196                           ; BSR set to: 14
 26197                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 26198  0080D0  6889               	setf	137,c	;volatile
 26199                           
 26200                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 26201  0080D2  0E58               	movlw	88
 26202  0080D4  6E8A               	movwf	138,c	;volatile
 26203                           
 26204                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 26205  0080D6  0E00               	movlw	0
 26206  0080D8  6E8B               	movwf	139,c	;volatile
 26207                           
 26208                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 26209  0080DA  0E00               	movlw	0
 26210  0080DC  010F               	movlb	15	; () banked
 26211  0080DE  6F26               	movwf	38,b	;volatile
 26212                           
 26213                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 26214  0080E0  0E00               	movlw	0
 26215  0080E2  6F21               	movwf	33,b	;volatile
 26216                           
 26217                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 26218  0080E4  0E00               	movlw	0
 26219  0080E6  6F19               	movwf	25,b	;volatile
 26220                           
 26221                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 26222  0080E8  0E00               	movlw	0
 26223  0080EA  6F2E               	movwf	46,b	;volatile
 26224                           
 26225                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 26226  0080EC  0E01               	movlw	1
 26227  0080EE  6F11               	movwf	17,b	;volatile
 26228                           
 26229                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 26230  0080F0  0E00               	movlw	0
 26231  0080F2  6F25               	movwf	37,b	;volatile
 26232                           
 26233                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 26234  0080F4  0E00               	movlw	0
 26235  0080F6  6F2D               	movwf	45,b	;volatile
 26236                           
 26237                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 26238  0080F8  0EF7               	movlw	247
 26239  0080FA  6F18               	movwf	24,b	;volatile
 26240                           
 26241                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 26242  0080FC  0E00               	movlw	0
 26243  0080FE  6F10               	movwf	16,b	;volatile
 26244                           
 26245                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 26246  008100  0E00               	movlw	0
 26247  008102  6F20               	movwf	32,b	;volatile
 26248                           
 26249                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 26250  008104  0E00               	movlw	0
 26251  008106  6F2C               	movwf	44,b	;volatile
 26252                           
 26253                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 26254  008108  0E00               	movlw	0
 26255  00810A  6F0F               	movwf	15,b	;volatile
 26256                           
 26257                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 26258  00810C  0E00               	movlw	0
 26259  00810E  6F17               	movwf	23,b	;volatile
 26260                           
 26261                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 26262  008110  0E00               	movlw	0
 26263  008112  6F1F               	movwf	31,b	;volatile
 26264                           
 26265                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 26266  008114  0E00               	movlw	0
 26267  008116  6F24               	movwf	36,b	;volatile
 26268                           
 26269                           ; BSR set to: 15
 26270                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 26271  008118  690E               	setf	14,b	;volatile
 26272                           
 26273                           ; BSR set to: 15
 26274                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 26275  00811A  6916               	setf	22,b	;volatile
 26276                           
 26277                           ; BSR set to: 15
 26278                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 26279  00811C  691E               	setf	30,b	;volatile
 26280                           
 26281                           ; BSR set to: 15
 26282                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 26283  00811E  6923               	setf	35,b	;volatile
 26284                           
 26285                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 26286  008120  0E07               	movlw	7
 26287  008122  6F2B               	movwf	43,b	;volatile
 26288                           
 26289                           ; BSR set to: 15
 26290                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 26291  008124  690D               	setf	13,b	;volatile
 26292                           
 26293                           ; BSR set to: 15
 26294                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 26295  008126  6915               	setf	21,b	;volatile
 26296                           
 26297                           ; BSR set to: 15
 26298                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 26299  008128  691D               	setf	29,b	;volatile
 26300                           
 26301                           ; BSR set to: 15
 26302                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 26303  00812A  6922               	setf	34,b	;volatile
 26304                           
 26305                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 26306  00812C  0E0F               	movlw	15
 26307  00812E  6F2A               	movwf	42,b	;volatile
 26308                           
 26309                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 26310  008130  0E13               	movlw	19
 26311  008132  010E               	movlb	14	; () banked
 26312  008134  6FB7               	movwf	183,b	;volatile
 26313                           
 26314                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 26315  008136  0E16               	movlw	22
 26316  008138  6FB5               	movwf	181,b	;volatile
 26317                           
 26318                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 26319  00813A  0E0F               	movlw	15
 26320  00813C  6FFA               	movwf	250,b	;volatile
 26321                           
 26322                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 26323  00813E  0E10               	movlw	16
 26324  008140  6FFB               	movwf	251,b	;volatile
 26325                           
 26326                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 26327  008142  0E09               	movlw	9
 26328  008144  6FFE               	movwf	254,b	;volatile
 26329                           
 26330                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 26331  008146  0E14               	movlw	20
 26332  008148  6FB8               	movwf	184,b	;volatile
 26333                           
 26334                           ; BSR set to: 14
 26335  00814A  0012               	return		;funcret
 26336  00814C                     __end_of_PIN_MANAGER_Initialize:
 26337                           	callstack 0
 26338                           
 26339 ;; *************** function _OSCILLATOR_Initialize *****************
 26340 ;; Defined at:
 26341 ;;		line 65 in file "mcc_generated_files/mcc.c"
 26342 ;; Parameters:    Size  Location     Type
 26343 ;;		None
 26344 ;; Auto vars:     Size  Location     Type
 26345 ;;		None
 26346 ;; Return value:  Size  Location     Type
 26347 ;;                  1    wreg      void 
 26348 ;; Registers used:
 26349 ;;		wreg, status,2
 26350 ;; Tracked objects:
 26351 ;;		On entry : 3F/E
 26352 ;;		On exit  : 3F/E
 26353 ;;		Unchanged: 0/0
 26354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26359 ;;Total ram usage:        0 bytes
 26360 ;; Hardware stack levels used: 1
 26361 ;; Hardware stack levels required when called: 4
 26362 ;; This function calls:
 26363 ;;		Nothing
 26364 ;; This function is called by:
 26365 ;;		_SYSTEM_Initialize
 26366 ;; This function uses a non-reentrant model
 26367 ;;
 26368                           
 26369                           	psect	text101
 26370  009D90                     __ptext101:
 26371                           	callstack 0
 26372  009D90                     _OSCILLATOR_Initialize:
 26373                           	callstack 25
 26374                           
 26375                           ; BSR set to: 14
 26376                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 26377                           
 26378                           ; BSR set to: 14
 26379                           ;incstack = 0
 26380  009D90  0E60               	movlw	96
 26381  009D92  6FD8               	movwf	216,b	;volatile
 26382                           
 26383                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 26384  009D94  0E00               	movlw	0
 26385  009D96  6FDA               	movwf	218,b	;volatile
 26386                           
 26387                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 26388  009D98  0E00               	movlw	0
 26389  009D9A  6FDC               	movwf	220,b	;volatile
 26390                           
 26391                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 26392  009D9C  0E08               	movlw	8
 26393  009D9E  6FDE               	movwf	222,b	;volatile
 26394                           
 26395                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 26396  009DA0  0E00               	movlw	0
 26397  009DA2  6FDD               	movwf	221,b	;volatile
 26398                           
 26399                           ; BSR set to: 14
 26400  009DA4  0012               	return		;funcret
 26401  009DA6                     __end_of_OSCILLATOR_Initialize:
 26402                           	callstack 0
 26403                           
 26404 ;; *************** function _INTERRUPT_Initialize *****************
 26405 ;; Defined at:
 26406 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 26407 ;; Parameters:    Size  Location     Type
 26408 ;;		None
 26409 ;; Auto vars:     Size  Location     Type
 26410 ;;		None
 26411 ;; Return value:  Size  Location     Type
 26412 ;;                  1    wreg      void 
 26413 ;; Registers used:
 26414 ;;		None
 26415 ;; Tracked objects:
 26416 ;;		On entry : 3F/0
 26417 ;;		On exit  : 3F/0
 26418 ;;		Unchanged: 3F/0
 26419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26424 ;;Total ram usage:        0 bytes
 26425 ;; Hardware stack levels used: 1
 26426 ;; Hardware stack levels required when called: 4
 26427 ;; This function calls:
 26428 ;;		Nothing
 26429 ;; This function is called by:
 26430 ;;		_SYSTEM_Initialize
 26431 ;; This function uses a non-reentrant model
 26432 ;;
 26433                           
 26434                           	psect	text102
 26435  009F6E                     __ptext102:
 26436                           	callstack 0
 26437  009F6E                     _INTERRUPT_Initialize:
 26438                           	callstack 25
 26439                           
 26440                           ; BSR set to: 0
 26441                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 26442                           
 26443                           ; BSR set to: 14
 26444                           ;incstack = 0
 26445  009F6E  9AF2               	bcf	242,5,c	;volatile
 26446                           
 26447                           ; BSR set to: 0
 26448  009F70  0012               	return		;funcret
 26449  009F72                     __end_of_INTERRUPT_Initialize:
 26450                           	callstack 0
 26451                           
 26452 ;; *************** function _I2C1_Initialize *****************
 26453 ;; Defined at:
 26454 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 26455 ;; Parameters:    Size  Location     Type
 26456 ;;		None
 26457 ;; Auto vars:     Size  Location     Type
 26458 ;;		None
 26459 ;; Return value:  Size  Location     Type
 26460 ;;                  1    wreg      void 
 26461 ;; Registers used:
 26462 ;;		wreg, status,2
 26463 ;; Tracked objects:
 26464 ;;		On entry : 3F/E
 26465 ;;		On exit  : 3F/E
 26466 ;;		Unchanged: 3F/0
 26467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26472 ;;Total ram usage:        0 bytes
 26473 ;; Hardware stack levels used: 1
 26474 ;; Hardware stack levels required when called: 4
 26475 ;; This function calls:
 26476 ;;		Nothing
 26477 ;; This function is called by:
 26478 ;;		_SYSTEM_Initialize
 26479 ;; This function uses a non-reentrant model
 26480 ;;
 26481                           
 26482                           	psect	text103
 26483  009DE4                     __ptext103:
 26484                           	callstack 0
 26485  009DE4                     _I2C1_Initialize:
 26486                           	callstack 25
 26487                           
 26488                           ; BSR set to: 14
 26489                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 26490                           
 26491                           ; BSR set to: 0
 26492                           ;incstack = 0
 26493  009DE4  0E80               	movlw	128
 26494  009DE6  6E95               	movwf	149,c	;volatile
 26495                           
 26496                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 26497  009DE8  0E08               	movlw	8
 26498  009DEA  6E96               	movwf	150,c	;volatile
 26499                           
 26500                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 26501  009DEC  0E00               	movlw	0
 26502  009DEE  6E97               	movwf	151,c	;volatile
 26503                           
 26504                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 26505  009DF0  0E9F               	movlw	159
 26506  009DF2  6E93               	movwf	147,c	;volatile
 26507                           
 26508                           ; BSR set to: 14
 26509                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 26510  009DF4  9A96               	bcf	150,5,c	;volatile
 26511                           
 26512                           ; BSR set to: 14
 26513  009DF6  0012               	return		;funcret
 26514  009DF8                     __end_of_I2C1_Initialize:
 26515                           	callstack 0
 26516                           
 26517 ;; *************** function _EUSART1_Initialize *****************
 26518 ;; Defined at:
 26519 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 26520 ;; Parameters:    Size  Location     Type
 26521 ;;		None
 26522 ;; Auto vars:     Size  Location     Type
 26523 ;;		None
 26524 ;; Return value:  Size  Location     Type
 26525 ;;                  1    wreg      void 
 26526 ;; Registers used:
 26527 ;;		wreg, status,2, status,0, cstack
 26528 ;; Tracked objects:
 26529 ;;		On entry : 3F/E
 26530 ;;		On exit  : 3F/E
 26531 ;;		Unchanged: 0/0
 26532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26537 ;;Total ram usage:        0 bytes
 26538 ;; Hardware stack levels used: 1
 26539 ;; Hardware stack levels required when called: 5
 26540 ;; This function calls:
 26541 ;;		_EUSART1_SetErrorHandler
 26542 ;;		_EUSART1_SetFramingErrorHandler
 26543 ;;		_EUSART1_SetOverrunErrorHandler
 26544 ;;		_EUSART1_SetRxInterruptHandler
 26545 ;;		_EUSART1_SetTxInterruptHandler
 26546 ;; This function is called by:
 26547 ;;		_SYSTEM_Initialize
 26548 ;; This function uses a non-reentrant model
 26549 ;;
 26550                           
 26551                           	psect	text104
 26552  00872A                     __ptext104:
 26553                           	callstack 0
 26554  00872A                     _EUSART1_Initialize:
 26555                           	callstack 24
 26556                           
 26557                           ; BSR set to: 14
 26558                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 26559                           
 26560                           ; BSR set to: 14
 26561                           ;incstack = 0
 26562  00872A  9BC5               	bcf	197,5,b	;volatile
 26563                           
 26564                           ; BSR set to: 14
 26565                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 26566  00872C  0E1A               	movlw	low _EUSART1_Receive_ISR
 26567  00872E  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 26568  008730  0E80               	movlw	high _EUSART1_Receive_ISR
 26569  008732  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 26570  008734  EC4F  F04F         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 26571                           
 26572                           ; BSR set to: 14
 26573                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 26574  008738  99C5               	bcf	197,4,b	;volatile
 26575                           
 26576                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 26577  00873A  0E8A               	movlw	low _EUSART1_Transmit_ISR
 26578  00873C  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 26579  00873E  0E97               	movlw	high _EUSART1_Transmit_ISR
 26580  008740  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 26581  008742  EC4A  F04F         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 26582                           
 26583                           ; BSR set to: 14
 26584                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 26585  008746  0E08               	movlw	8
 26586  008748  6E9F               	movwf	159,c	;volatile
 26587                           
 26588                           ; BSR set to: 14
 26589                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 26590  00874A  0E90               	movlw	144
 26591  00874C  6E9D               	movwf	157,c	;volatile
 26592                           
 26593                           ; BSR set to: 14
 26594                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 26595  00874E  0E24               	movlw	36
 26596  008750  6E9E               	movwf	158,c	;volatile
 26597                           
 26598                           ; BSR set to: 14
 26599                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 26600  008752  0E82               	movlw	130
 26601  008754  6E9B               	movwf	155,c	;volatile
 26602                           
 26603                           ; BSR set to: 14
 26604                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 26605  008756  0E06               	movlw	6
 26606  008758  6E9C               	movwf	156,c	;volatile
 26607                           
 26608                           ; BSR set to: 14
 26609                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 26610  00875A  0E9E               	movlw	low _EUSART1_DefaultFramingErrorHandler
 26611  00875C  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 26612  00875E  0E9F               	movlw	high _EUSART1_DefaultFramingErrorHandler
 26613  008760  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 26614  008762  EC59  F04F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 26615                           
 26616                           ; BSR set to: 14
 26617                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 26618  008766  0E5E               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 26619  008768  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 26620  00876A  0E9F               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 26621  00876C  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 26622  00876E  EC54  F04F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 26623                           
 26624                           ; BSR set to: 14
 26625                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 26626  008772  0E64               	movlw	low _EUSART1_DefaultErrorHandler
 26627  008774  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 26628  008776  0E9F               	movlw	high _EUSART1_DefaultErrorHandler
 26629  008778  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 26630  00877A  EC5E  F04F         	call	_EUSART1_SetErrorHandler	;wreg free
 26631                           
 26632                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 26633  00877E  0E00               	movlw	0
 26634  008780  0101               	movlb	1	; () banked
 26635  008782  6F9E               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 26636                           
 26637                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 26638  008784  0E00               	movlw	0
 26639  008786  0100               	movlb	0	; () banked
 26640  008788  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 26641                           
 26642                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 26643  00878A  0E00               	movlw	0
 26644  00878C  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 26645                           
 26646                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 26647  00878E  0E08               	movlw	8
 26648  008790  0101               	movlb	1	; () banked
 26649  008792  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 26650                           
 26651                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 26652  008794  0E00               	movlw	0
 26653  008796  0100               	movlb	0	; () banked
 26654  008798  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 26655                           
 26656                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 26657  00879A  0E00               	movlw	0
 26658  00879C  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 26659                           
 26660                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 26661  00879E  0E00               	movlw	0
 26662  0087A0  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 26663                           
 26664                           ; BSR set to: 0
 26665                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 26666  0087A2  010E               	movlb	14	; () banked
 26667  0087A4  8BC5               	bsf	197,5,b	;volatile
 26668                           
 26669                           ; BSR set to: 14
 26670  0087A6  0012               	return		;funcret
 26671  0087A8                     __end_of_EUSART1_Initialize:
 26672                           	callstack 0
 26673                           
 26674 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 26675 ;; Defined at:
 26676 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 26677 ;; Parameters:    Size  Location     Type
 26678 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26679 ;;		 -> EUSART1_Transmit_ISR(1), 
 26680 ;; Auto vars:     Size  Location     Type
 26681 ;;		None
 26682 ;; Return value:  Size  Location     Type
 26683 ;;                  1    wreg      void 
 26684 ;; Registers used:
 26685 ;;		wreg, status,2, status,0
 26686 ;; Tracked objects:
 26687 ;;		On entry : 3F/E
 26688 ;;		On exit  : 3F/E
 26689 ;;		Unchanged: 3F/0
 26690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26695 ;;Total ram usage:        2 bytes
 26696 ;; Hardware stack levels used: 1
 26697 ;; Hardware stack levels required when called: 4
 26698 ;; This function calls:
 26699 ;;		Nothing
 26700 ;; This function is called by:
 26701 ;;		_EUSART1_Initialize
 26702 ;; This function uses a non-reentrant model
 26703 ;;
 26704                           
 26705                           	psect	text105
 26706  009E94                     __ptext105:
 26707                           	callstack 0
 26708  009E94                     _EUSART1_SetTxInterruptHandler:
 26709                           	callstack 24
 26710                           
 26711                           ; BSR set to: 14
 26712                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26713                           
 26714                           ; BSR set to: 14
 26715                           ;incstack = 0
 26716  009E94  C010  F2EB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 26717  009E98  C011  F2EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 26718                           
 26719                           ; BSR set to: 14
 26720  009E9C  0012               	return		;funcret
 26721  009E9E                     __end_of_EUSART1_SetTxInterruptHandler:
 26722                           	callstack 0
 26723                           
 26724 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 26725 ;; Defined at:
 26726 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 26727 ;; Parameters:    Size  Location     Type
 26728 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26729 ;;		 -> EUSART1_Receive_ISR(1), 
 26730 ;; Auto vars:     Size  Location     Type
 26731 ;;		None
 26732 ;; Return value:  Size  Location     Type
 26733 ;;                  1    wreg      void 
 26734 ;; Registers used:
 26735 ;;		wreg, status,2, status,0
 26736 ;; Tracked objects:
 26737 ;;		On entry : 3F/E
 26738 ;;		On exit  : 3F/E
 26739 ;;		Unchanged: 3F/0
 26740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26745 ;;Total ram usage:        2 bytes
 26746 ;; Hardware stack levels used: 1
 26747 ;; Hardware stack levels required when called: 4
 26748 ;; This function calls:
 26749 ;;		Nothing
 26750 ;; This function is called by:
 26751 ;;		_EUSART1_Initialize
 26752 ;; This function uses a non-reentrant model
 26753 ;;
 26754                           
 26755                           	psect	text106
 26756  009E9E                     __ptext106:
 26757                           	callstack 0
 26758  009E9E                     _EUSART1_SetRxInterruptHandler:
 26759                           	callstack 24
 26760                           
 26761                           ; BSR set to: 14
 26762                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 26763                           
 26764                           ; BSR set to: 14
 26765                           ;incstack = 0
 26766  009E9E  C010  F2E9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 26767  009EA2  C011  F2EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 26768                           
 26769                           ; BSR set to: 14
 26770  009EA6  0012               	return		;funcret
 26771  009EA8                     __end_of_EUSART1_SetRxInterruptHandler:
 26772                           	callstack 0
 26773                           
 26774 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 26775 ;; Defined at:
 26776 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 26777 ;; Parameters:    Size  Location     Type
 26778 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26779 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 26780 ;; Auto vars:     Size  Location     Type
 26781 ;;		None
 26782 ;; Return value:  Size  Location     Type
 26783 ;;                  1    wreg      void 
 26784 ;; Registers used:
 26785 ;;		wreg, status,2, status,0
 26786 ;; Tracked objects:
 26787 ;;		On entry : 3F/E
 26788 ;;		On exit  : 3F/E
 26789 ;;		Unchanged: 3F/0
 26790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26795 ;;Total ram usage:        2 bytes
 26796 ;; Hardware stack levels used: 1
 26797 ;; Hardware stack levels required when called: 4
 26798 ;; This function calls:
 26799 ;;		Nothing
 26800 ;; This function is called by:
 26801 ;;		_EUSART1_Initialize
 26802 ;; This function uses a non-reentrant model
 26803 ;;
 26804                           
 26805                           	psect	text107
 26806  009EA8                     __ptext107:
 26807                           	callstack 0
 26808  009EA8                     _EUSART1_SetOverrunErrorHandler:
 26809                           	callstack 24
 26810                           
 26811                           ; BSR set to: 14
 26812                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 26813                           
 26814                           ; BSR set to: 14
 26815                           ;incstack = 0
 26816  009EA8  C010  F2E5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 26817  009EAC  C011  F2E6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 26818                           
 26819                           ; BSR set to: 14
 26820  009EB0  0012               	return		;funcret
 26821  009EB2                     __end_of_EUSART1_SetOverrunErrorHandler:
 26822                           	callstack 0
 26823                           
 26824 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 26825 ;; Defined at:
 26826 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 26827 ;; Parameters:    Size  Location     Type
 26828 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26829 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 26830 ;; Auto vars:     Size  Location     Type
 26831 ;;		None
 26832 ;; Return value:  Size  Location     Type
 26833 ;;                  1    wreg      void 
 26834 ;; Registers used:
 26835 ;;		wreg, status,2, status,0
 26836 ;; Tracked objects:
 26837 ;;		On entry : 3F/E
 26838 ;;		On exit  : 3F/E
 26839 ;;		Unchanged: 3F/0
 26840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26844 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26845 ;;Total ram usage:        2 bytes
 26846 ;; Hardware stack levels used: 1
 26847 ;; Hardware stack levels required when called: 4
 26848 ;; This function calls:
 26849 ;;		Nothing
 26850 ;; This function is called by:
 26851 ;;		_EUSART1_Initialize
 26852 ;; This function uses a non-reentrant model
 26853 ;;
 26854                           
 26855                           	psect	text108
 26856  009EB2                     __ptext108:
 26857                           	callstack 0
 26858  009EB2                     _EUSART1_SetFramingErrorHandler:
 26859                           	callstack 24
 26860                           
 26861                           ; BSR set to: 14
 26862                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 26863                           
 26864                           ; BSR set to: 14
 26865                           ;incstack = 0
 26866  009EB2  C010  F2E7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 26867  009EB6  C011  F2E8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 26868                           
 26869                           ; BSR set to: 14
 26870  009EBA  0012               	return		;funcret
 26871  009EBC                     __end_of_EUSART1_SetFramingErrorHandler:
 26872                           	callstack 0
 26873                           
 26874 ;; *************** function _EUSART1_SetErrorHandler *****************
 26875 ;; Defined at:
 26876 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 26877 ;; Parameters:    Size  Location     Type
 26878 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 26879 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 26880 ;; Auto vars:     Size  Location     Type
 26881 ;;		None
 26882 ;; Return value:  Size  Location     Type
 26883 ;;                  1    wreg      void 
 26884 ;; Registers used:
 26885 ;;		wreg, status,2, status,0
 26886 ;; Tracked objects:
 26887 ;;		On entry : 3F/E
 26888 ;;		On exit  : 3F/E
 26889 ;;		Unchanged: 3F/0
 26890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26895 ;;Total ram usage:        2 bytes
 26896 ;; Hardware stack levels used: 1
 26897 ;; Hardware stack levels required when called: 4
 26898 ;; This function calls:
 26899 ;;		Nothing
 26900 ;; This function is called by:
 26901 ;;		_EUSART1_Initialize
 26902 ;; This function uses a non-reentrant model
 26903 ;;
 26904                           
 26905                           	psect	text109
 26906  009EBC                     __ptext109:
 26907                           	callstack 0
 26908  009EBC                     _EUSART1_SetErrorHandler:
 26909                           	callstack 24
 26910                           
 26911                           ; BSR set to: 14
 26912                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 26913                           
 26914                           ; BSR set to: 14
 26915                           ;incstack = 0
 26916  009EBC  C010  F2E3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 26917  009EC0  C011  F2E4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 26918                           
 26919                           ; BSR set to: 14
 26920  009EC4  0012               	return		;funcret
 26921  009EC6                     __end_of_EUSART1_SetErrorHandler:
 26922                           	callstack 0
 26923                           
 26924 ;; *************** function _ADCC_Initialize *****************
 26925 ;; Defined at:
 26926 ;;		line 62 in file "mcc_generated_files/adcc.c"
 26927 ;; Parameters:    Size  Location     Type
 26928 ;;		None
 26929 ;; Auto vars:     Size  Location     Type
 26930 ;;		None
 26931 ;; Return value:  Size  Location     Type
 26932 ;;                  1    wreg      void 
 26933 ;; Registers used:
 26934 ;;		wreg, status,2
 26935 ;; Tracked objects:
 26936 ;;		On entry : 3F/E
 26937 ;;		On exit  : 3F/F
 26938 ;;		Unchanged: 0/0
 26939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26944 ;;Total ram usage:        0 bytes
 26945 ;; Hardware stack levels used: 1
 26946 ;; Hardware stack levels required when called: 4
 26947 ;; This function calls:
 26948 ;;		Nothing
 26949 ;; This function is called by:
 26950 ;;		_SYSTEM_Initialize
 26951 ;; This function uses a non-reentrant model
 26952 ;;
 26953                           
 26954                           	psect	text110
 26955  0092B6                     __ptext110:
 26956                           	callstack 0
 26957  0092B6                     _ADCC_Initialize:
 26958                           	callstack 25
 26959                           
 26960                           ; BSR set to: 14
 26961                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 26962                           
 26963                           ; BSR set to: 14
 26964                           ;incstack = 0
 26965  0092B6  0E00               	movlw	0
 26966  0092B8  6E6A               	movwf	106,c	;volatile
 26967                           
 26968                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 26969  0092BA  0E00               	movlw	0
 26970  0092BC  6E6B               	movwf	107,c	;volatile
 26971                           
 26972                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 26973  0092BE  0E00               	movlw	0
 26974  0092C0  6E6C               	movwf	108,c	;volatile
 26975                           
 26976                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 26977  0092C2  0E00               	movlw	0
 26978  0092C4  6E6D               	movwf	109,c	;volatile
 26979                           
 26980                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 26981  0092C6  0E00               	movlw	0
 26982  0092C8  6E68               	movwf	104,c	;volatile
 26983                           
 26984                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 26985  0092CA  0E00               	movlw	0
 26986  0092CC  6E69               	movwf	105,c	;volatile
 26987                           
 26988                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 26989  0092CE  0E00               	movlw	0
 26990  0092D0  6E66               	movwf	102,c	;volatile
 26991                           
 26992                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 26993  0092D2  0E00               	movlw	0
 26994  0092D4  010F               	movlb	15	; () banked
 26995  0092D6  6F5F               	movwf	95,b	;volatile
 26996                           
 26997                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 26998  0092D8  0E00               	movlw	0
 26999  0092DA  6F5D               	movwf	93,b	;volatile
 27000                           
 27001                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 27002  0092DC  0E00               	movlw	0
 27003  0092DE  6F5E               	movwf	94,b	;volatile
 27004                           
 27005                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 27006  0092E0  0E00               	movlw	0
 27007  0092E2  6F59               	movwf	89,b	;volatile
 27008                           
 27009                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 27010  0092E4  0E00               	movlw	0
 27011  0092E6  6F5A               	movwf	90,b	;volatile
 27012                           
 27013                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 27014  0092E8  0E00               	movlw	0
 27015  0092EA  6F5B               	movwf	91,b	;volatile
 27016                           
 27017                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 27018  0092EC  0E00               	movlw	0
 27019  0092EE  6E65               	movwf	101,c	;volatile
 27020                           
 27021                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 27022  0092F0  0E00               	movlw	0
 27023  0092F2  6F58               	movwf	88,b	;volatile
 27024                           
 27025                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 27026  0092F4  0E00               	movlw	0
 27027  0092F6  6F56               	movwf	86,b	;volatile
 27028                           
 27029                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 27030  0092F8  0E3F               	movlw	63
 27031  0092FA  6F57               	movwf	87,b	;volatile
 27032                           
 27033                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 27034  0092FC  0E80               	movlw	128
 27035  0092FE  6E60               	movwf	96,c	;volatile
 27036                           
 27037                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 27038  009300  0E00               	movlw	0
 27039  009302  6F5C               	movwf	92,b	;volatile
 27040                           
 27041                           ; BSR set to: 15
 27042  009304  0012               	return		;funcret
 27043  009306                     __end_of_ADCC_Initialize:
 27044                           	callstack 0
 27045                           
 27046 ;; *************** function _EUSART1_is_rx_ready *****************
 27047 ;; Defined at:
 27048 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 27049 ;; Parameters:    Size  Location     Type
 27050 ;;		None
 27051 ;; Auto vars:     Size  Location     Type
 27052 ;;		None
 27053 ;; Return value:  Size  Location     Type
 27054 ;;                  1    wreg      _Bool 
 27055 ;; Registers used:
 27056 ;;		wreg, status,2
 27057 ;; Tracked objects:
 27058 ;;		On entry : 0/1
 27059 ;;		On exit  : 3F/0
 27060 ;;		Unchanged: 0/0
 27061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27066 ;;Total ram usage:        0 bytes
 27067 ;; Hardware stack levels used: 1
 27068 ;; Hardware stack levels required when called: 4
 27069 ;; This function calls:
 27070 ;;		Nothing
 27071 ;; This function is called by:
 27072 ;;		_main
 27073 ;; This function uses a non-reentrant model
 27074 ;;
 27075                           
 27076                           	psect	text111
 27077  009E0A                     __ptext111:
 27078                           	callstack 0
 27079  009E0A                     _EUSART1_is_rx_ready:
 27080                           	callstack 26
 27081                           
 27082                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 27083                           
 27084                           ; BSR set to: 15
 27085                           ;incstack = 0
 27086  009E0A  0100               	movlb	0	; () banked
 27087  009E0C  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 27088  009E0E  B4D8               	btfsc	status,2,c
 27089  009E10  D002               	goto	u29630
 27090  009E12  0E01               	movlw	1
 27091  009E14  0012               	return	
 27092  009E16                     u29630:
 27093  009E16  0E00               	movlw	0
 27094                           
 27095                           ; BSR set to: 0
 27096  009E18  0012               	return		;funcret
 27097  009E1A                     __end_of_EUSART1_is_rx_ready:
 27098                           	callstack 0
 27099                           
 27100 ;; *************** function _ControlMotor *****************
 27101 ;; Defined at:
 27102 ;;		line 703 in file "outputs_MC50.c"
 27103 ;; Parameters:    Size  Location     Type
 27104 ;;		None
 27105 ;; Auto vars:     Size  Location     Type
 27106 ;;  stateMotor      1   23[COMRAM] enum E10381
 27107 ;; Return value:  Size  Location     Type
 27108 ;;                  1    wreg      void 
 27109 ;; Registers used:
 27110 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27111 ;; Tracked objects:
 27112 ;;		On entry : 3E/1
 27113 ;;		On exit  : 3E/0
 27114 ;;		Unchanged: 0/0
 27115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27118 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27119 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27120 ;;Total ram usage:        7 bytes
 27121 ;; Hardware stack levels used: 1
 27122 ;; Hardware stack levels required when called: 5
 27123 ;; This function calls:
 27124 ;;		_VerifyElectricalBrake
 27125 ;; This function is called by:
 27126 ;;		_main
 27127 ;; This function uses a non-reentrant model
 27128 ;;
 27129                           
 27130                           	psect	text112
 27131  0053F6                     __ptext112:
 27132                           	callstack 0
 27133  0053F6                     _ControlMotor:
 27134                           	callstack 25
 27135                           
 27136                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 27137                           
 27138                           ; BSR set to: 0
 27139                           ;incstack = 0
 27140  0053F6  0101               	movlb	1	; () banked
 27141  0053F8  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 27142  0053FA  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 27143  0053FC  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 27144  0053FE  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 27145  005400  A4D8               	btfss	status,2,c
 27146  005402  D00D               	goto	l25456
 27147                           
 27148                           ; BSR set to: 1
 27149  005404  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 27150  005406  B4D8               	btfsc	status,2,c
 27151  005408  D00A               	goto	l25456
 27152                           
 27153                           ; BSR set to: 1
 27154  00540A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 27155  00540C  A4D8               	btfss	status,2,c
 27156  00540E  D007               	goto	l25456
 27157                           
 27158                           ; BSR set to: 1
 27159  005410  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 27160  005412  A4D8               	btfss	status,2,c
 27161  005414  D004               	goto	l25456
 27162                           
 27163                           ; BSR set to: 1
 27164                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 27165  005416  0E00               	movlw	0
 27166  005418  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27167                           
 27168                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 27169  00541A  0E02               	movlw	2
 27170  00541C  D007               	goto	L102
 27171  00541E                     l25456:
 27172                           
 27173                           ; BSR set to: 1
 27174  00541E  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 27175  005420  A4D8               	btfss	status,2,c
 27176  005422  D005               	goto	l25462
 27177                           
 27178                           ; BSR set to: 1
 27179  005424  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27180  005426  A4D8               	btfss	status,2,c
 27181  005428  D002               	goto	l25462
 27182                           
 27183                           ; BSR set to: 1
 27184                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 27185  00542A  0E00               	movlw	0
 27186  00542C                     L102:
 27187  00542C  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 27188  00542E                     l25462:
 27189                           
 27190                           ; BSR set to: 1
 27191                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 27192  00542E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27193  005430  EC4F  F044         	call	_VerifyElectricalBrake
 27194  005434  6E18               	movwf	ControlMotor@stateMotor^0,c
 27195                           
 27196                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 27197  005436  5018               	movf	ControlMotor@stateMotor^0,w,c
 27198  005438  A4D8               	btfss	status,2,c
 27199  00543A  D00A               	goto	l25472
 27200                           
 27201                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 27202  00543C  0E01               	movlw	1
 27203  00543E  0101               	movlb	1	; () banked
 27204  005440  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27205                           
 27206                           ; BSR set to: 1
 27207                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 27208  005442  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 27209  005444  0012               	return	
 27210                           
 27211                           ; BSR set to: 1
 27212                           
 27213                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 27214  005446  9287               	bcf	135,1,c	;volatile
 27215                           
 27216                           ; BSR set to: 1
 27217                           
 27218                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 27219  005448  9087               	bcf	135,0,c	;volatile
 27220  00544A                     l25470:
 27221                           
 27222                           ; BSR set to: 1
 27223                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 27224  00544A  0E00               	movlw	0
 27225  00544C  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27226  00544E  0012               	return	
 27227  005450                     l25472:
 27228  005450  0100               	movlb	0	; () banked
 27229  005452  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27230  005454  A4D8               	btfss	status,2,c
 27231  005456  D022               	goto	l25488
 27232                           
 27233                           ; BSR set to: 0
 27234  005458  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27235  00545A  A4D8               	btfss	status,2,c
 27236  00545C  D01F               	goto	l25488
 27237                           
 27238                           ; BSR set to: 0
 27239  00545E  0101               	movlb	1	; () banked
 27240  005460  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27241  005462  A4D8               	btfss	status,2,c
 27242  005464  D01B               	goto	l25488
 27243                           
 27244                           ; BSR set to: 1
 27245  005466  5018               	movf	ControlMotor@stateMotor^0,w,c
 27246  005468  A4D8               	btfss	status,2,c
 27247                           
 27248                           ; BSR set to: 1
 27249  00546A  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27250  00546C  D017               	goto	l25488
 27251  00546E  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27252  005470  E103               	bnz	u31470
 27253  005472  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27254  005474  A0D8               	btfss	status,0,c
 27255  005476  D012               	goto	l25488
 27256  005478                     u31470:
 27257                           
 27258                           ; BSR set to: 1
 27259  005478  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27260  00547A  D005               	goto	u31480
 27261  00547C  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27262  00547E  E10E               	bnz	l25488
 27263  005480  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27264  005482  B0D8               	btfsc	status,0,c
 27265  005484  D00B               	goto	l25488
 27266  005486                     u31480:
 27267                           
 27268                           ; BSR set to: 1
 27269                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 27270  005486  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27271  005488  D006               	goto	u31490
 27272  00548A  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27273  00548C  E103               	bnz	u31491
 27274  00548E  0E12               	movlw	18
 27275  005490  5DC7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 27276  005492  B0D8               	btfsc	status,0,c
 27277  005494                     u31491:
 27278  005494  0012               	return	
 27279  005496                     u31490:
 27280                           
 27281                           ; BSR set to: 1
 27282                           
 27283                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 27284  005496  8287               	bsf	135,1,c	;volatile
 27285                           
 27286                           ; BSR set to: 1
 27287                           
 27288                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 27289  005498  8087               	bsf	135,0,c	;volatile
 27290  00549A  D7D7               	goto	l25470
 27291  00549C                     l25488:
 27292  00549C  0418               	decf	ControlMotor@stateMotor^0,w,c
 27293  00549E  B4D8               	btfsc	status,2,c
 27294  0054A0  D004               	goto	u31510
 27295  0054A2  0E02               	movlw	2
 27296  0054A4  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27297  0054A6  A4D8               	btfss	status,2,c
 27298  0054A8  D063               	goto	l25518
 27299  0054AA                     u31510:
 27300  0054AA  0101               	movlb	1	; () banked
 27301  0054AC  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 27302  0054AE  A4D8               	btfss	status,2,c
 27303  0054B0  D05F               	goto	l25518
 27304                           
 27305                           ; BSR set to: 1
 27306                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 27307  0054B2  B291               	btfsc	145,1,c	;volatile
 27308  0054B4  D004               	goto	u31540
 27309                           
 27310                           ; BSR set to: 1
 27311  0054B6  0100               	movlb	0	; () banked
 27312  0054B8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27313  0054BA  B4D8               	btfsc	status,2,c
 27314  0054BC  D006               	goto	u31560
 27315  0054BE                     u31540:
 27316  0054BE  B091               	btfsc	145,0,c	;volatile
 27317  0054C0  D04F               	goto	l2353
 27318  0054C2  0100               	movlb	0	; () banked
 27319  0054C4  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27320  0054C6  A4D8               	btfss	status,2,c
 27321  0054C8  D04B               	goto	l2353
 27322  0054CA                     u31560:
 27323                           
 27324                           ; BSR set to: 0
 27325                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27326  0054CA  B091               	btfsc	145,0,c	;volatile
 27327  0054CC  D003               	goto	u31580
 27328                           
 27329                           ; BSR set to: 0
 27330  0054CE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27331  0054D0  B4D8               	btfsc	status,2,c
 27332  0054D2  D005               	goto	u31600
 27333  0054D4                     u31580:
 27334                           
 27335                           ; BSR set to: 0
 27336  0054D4  B291               	btfsc	145,1,c	;volatile
 27337  0054D6  D03A               	goto	l25514
 27338                           
 27339                           ; BSR set to: 0
 27340  0054D8  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27341  0054DA  A4D8               	btfss	status,2,c
 27342  0054DC  D037               	goto	l25514
 27343  0054DE                     u31600:
 27344                           
 27345                           ; BSR set to: 0
 27346                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 27347  0054DE  0E00               	movlw	0
 27348  0054E0  0101               	movlb	1	; () banked
 27349  0054E2  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27350                           
 27351                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 27352  0054E4  0E00               	movlw	0
 27353  0054E6  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27354  0054E8  0EC8               	movlw	200
 27355  0054EA  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27356                           
 27357                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 27358  0054EC  0E00               	movlw	0
 27359  0054EE  6FBA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27360  0054F0  0E14               	movlw	20
 27361  0054F2  6FB9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27362                           
 27363                           ; BSR set to: 1
 27364                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 27365  0054F4  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27366  0054F6  B4D8               	btfsc	status,2,c
 27367  0054F8  D003               	goto	u31620
 27368                           
 27369                           ; BSR set to: 1
 27370  0054FA  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 27371  0054FC  A4D8               	btfss	status,2,c
 27372  0054FE  D024               	goto	l25512
 27373  005500                     u31620:
 27374                           
 27375                           ; BSR set to: 1
 27376                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 27377  005500  0100               	movlb	0	; () banked
 27378  005502  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 27379  005504  0D0A               	mullw	10
 27380  005506  CFF3 F012          	movff	prodl,??_ControlMotor
 27381  00550A  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27382  00550E  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27383  005510  2612               	addwf	??_ControlMotor^0,f,c
 27384  005512  0E00               	movlw	0
 27385  005514  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27386  005516  5012               	movf	??_ControlMotor^0,w,c
 27387  005518  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 27388  00551A  6E14               	movwf	(??_ControlMotor+2)^0,c
 27389  00551C  5013               	movf	(??_ControlMotor+1)^0,w,c
 27390  00551E  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 27391  005520  6E15               	movwf	(??_ControlMotor+3)^0,c
 27392  005522  0E00               	movlw	0
 27393  005524  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 27394  005526  6E16               	movwf	(??_ControlMotor+4)^0,c
 27395  005528  0E00               	movlw	0
 27396  00552A  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 27397  00552C  6E17               	movwf	(??_ControlMotor+5)^0,c
 27398  00552E  0E50               	movlw	80
 27399  005530  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27400  005532  0101               	movlb	1	; () banked
 27401  005534  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27402  005536  0E00               	movlw	0
 27403  005538  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27404  00553A  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27405  00553C  0E00               	movlw	0
 27406  00553E  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27407  005540  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27408  005542  0E00               	movlw	0
 27409  005544  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27410  005546  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27411  005548                     l25512:
 27412                           
 27413                           ; BSR set to: 1
 27414                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 27415  005548  0E02               	movlw	2
 27416  00554A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27417  00554C                     l25514:
 27418                           
 27419                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 27420  00554C  0100               	movlb	0	; () banked
 27421  00554E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27422  005550  A4D8               	btfss	status,2,c
 27423  005552  D002               	goto	l2370
 27424                           
 27425                           ; BSR set to: 0
 27426  005554  8087               	bsf	135,0,c	;volatile
 27427  005556  D001               	goto	l25516
 27428  005558                     l2370:
 27429                           
 27430                           ; BSR set to: 0
 27431  005558  8287               	bsf	135,1,c	;volatile
 27432  00555A                     l25516:
 27433                           
 27434                           ; BSR set to: 0
 27435                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 27436  00555A  0E01               	movlw	1
 27437  00555C  0101               	movlb	1	; () banked
 27438  00555E  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27439  005560                     l2353:
 27440                           
 27441                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 27442  005560  0100               	movlb	0	; () banked
 27443  005562  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27444  005564  A4D8               	btfss	status,2,c
 27445  005566  D002               	goto	l2376
 27446                           
 27447                           ; BSR set to: 0
 27448  005568  9287               	bcf	135,1,c	;volatile
 27449  00556A  0012               	return	
 27450  00556C                     l2376:
 27451                           
 27452                           ; BSR set to: 0
 27453  00556C  9087               	bcf	135,0,c	;volatile
 27454  00556E  0012               	return	
 27455  005570                     l25518:
 27456  005570  0E03               	movlw	3
 27457  005572  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 27458  005574  A4D8               	btfss	status,2,c
 27459  005576  0012               	return	
 27460  005578  0101               	movlb	1	; () banked
 27461  00557A  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 27462  00557C  A4D8               	btfss	status,2,c
 27463  00557E  0012               	return	
 27464                           
 27465                           ; BSR set to: 1
 27466                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 27467  005580  B091               	btfsc	145,0,c	;volatile
 27468  005582  D004               	goto	u31680
 27469                           
 27470                           ; BSR set to: 1
 27471  005584  0100               	movlb	0	; () banked
 27472  005586  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27473  005588  B4D8               	btfsc	status,2,c
 27474  00558A  D006               	goto	u31700
 27475  00558C                     u31680:
 27476  00558C  B291               	btfsc	145,1,c	;volatile
 27477  00558E  D050               	goto	l2380
 27478  005590  0100               	movlb	0	; () banked
 27479  005592  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27480  005594  A4D8               	btfss	status,2,c
 27481  005596  D04C               	goto	l2380
 27482  005598                     u31700:
 27483                           
 27484                           ; BSR set to: 0
 27485                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 27486  005598  B291               	btfsc	145,1,c	;volatile
 27487  00559A  D003               	goto	u31720
 27488                           
 27489                           ; BSR set to: 0
 27490  00559C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27491  00559E  B4D8               	btfsc	status,2,c
 27492  0055A0  D005               	goto	u31740
 27493  0055A2                     u31720:
 27494                           
 27495                           ; BSR set to: 0
 27496  0055A2  B091               	btfsc	145,0,c	;volatile
 27497  0055A4  D03B               	goto	l25542
 27498                           
 27499                           ; BSR set to: 0
 27500  0055A6  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27501  0055A8  A4D8               	btfss	status,2,c
 27502  0055AA  D038               	goto	l25542
 27503  0055AC                     u31740:
 27504                           
 27505                           ; BSR set to: 0
 27506                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 27507  0055AC  0E00               	movlw	0
 27508  0055AE  0101               	movlb	1	; () banked
 27509  0055B0  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 27510                           
 27511                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 27512  0055B2  0E00               	movlw	0
 27513  0055B4  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 27514  0055B6  0EC8               	movlw	200
 27515  0055B8  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 27516                           
 27517                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 27518  0055BA  0E00               	movlw	0
 27519  0055BC  6FBA               	movwf	(_ts_system+27)& (0+255),b	;volatile
 27520  0055BE  0E14               	movlw	20
 27521  0055C0  6FB9               	movwf	(_ts_system+26)& (0+255),b	;volatile
 27522                           
 27523                           ; BSR set to: 1
 27524                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 27525  0055C2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27526  0055C4  B4D8               	btfsc	status,2,c
 27527  0055C6  D004               	goto	u31760
 27528                           
 27529                           ; BSR set to: 1
 27530  0055C8  0E04               	movlw	4
 27531  0055CA  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 27532  0055CC  A4D8               	btfss	status,2,c
 27533  0055CE  D024               	goto	l25540
 27534  0055D0                     u31760:
 27535                           
 27536                           ; BSR set to: 1
 27537                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 27538  0055D0  0100               	movlb	0	; () banked
 27539  0055D2  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 27540  0055D4  0D0A               	mullw	10
 27541  0055D6  CFF3 F012          	movff	prodl,??_ControlMotor
 27542  0055DA  CFF4 F013          	movff	prodh,??_ControlMotor+1
 27543  0055DE  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 27544  0055E0  2612               	addwf	??_ControlMotor^0,f,c
 27545  0055E2  0E00               	movlw	0
 27546  0055E4  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 27547  0055E6  5012               	movf	??_ControlMotor^0,w,c
 27548  0055E8  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 27549  0055EA  6E14               	movwf	(??_ControlMotor+2)^0,c
 27550  0055EC  5013               	movf	(??_ControlMotor+1)^0,w,c
 27551  0055EE  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 27552  0055F0  6E15               	movwf	(??_ControlMotor+3)^0,c
 27553  0055F2  0E00               	movlw	0
 27554  0055F4  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 27555  0055F6  6E16               	movwf	(??_ControlMotor+4)^0,c
 27556  0055F8  0E00               	movlw	0
 27557  0055FA  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 27558  0055FC  6E17               	movwf	(??_ControlMotor+5)^0,c
 27559  0055FE  0E50               	movlw	80
 27560  005600  2414               	addwf	(??_ControlMotor+2)^0,w,c
 27561  005602  0101               	movlb	1	; () banked
 27562  005604  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 27563  005606  0E00               	movlw	0
 27564  005608  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 27565  00560A  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 27566  00560C  0E00               	movlw	0
 27567  00560E  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 27568  005610  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 27569  005612  0E00               	movlw	0
 27570  005614  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 27571  005616  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 27572  005618                     l25540:
 27573                           
 27574                           ; BSR set to: 1
 27575                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 27576  005618  0E03               	movlw	3
 27577  00561A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 27578  00561C                     l25542:
 27579                           
 27580                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 27581  00561C  0100               	movlb	0	; () banked
 27582  00561E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27583  005620  A4D8               	btfss	status,2,c
 27584  005622  D002               	goto	l2397
 27585                           
 27586                           ; BSR set to: 0
 27587  005624  8287               	bsf	135,1,c	;volatile
 27588  005626  D001               	goto	l25544
 27589  005628                     l2397:
 27590                           
 27591                           ; BSR set to: 0
 27592  005628  8087               	bsf	135,0,c	;volatile
 27593  00562A                     l25544:
 27594                           
 27595                           ; BSR set to: 0
 27596                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 27597  00562A  0E02               	movlw	2
 27598  00562C  0101               	movlb	1	; () banked
 27599  00562E  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 27600  005630                     l2380:
 27601                           
 27602                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 27603  005630  0100               	movlb	0	; () banked
 27604  005632  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27605  005634  A4D8               	btfss	status,2,c
 27606  005636  D002               	goto	l2403
 27607                           
 27608                           ; BSR set to: 0
 27609  005638  9087               	bcf	135,0,c	;volatile
 27610  00563A  0012               	return	
 27611  00563C                     l2403:
 27612                           
 27613                           ; BSR set to: 0
 27614  00563C  9287               	bcf	135,1,c	;volatile
 27615  00563E  0012               	return		;funcret
 27616  005640                     __end_of_ControlMotor:
 27617                           	callstack 0
 27618                           
 27619 ;; *************** function _VerifyElectricalBrake *****************
 27620 ;; Defined at:
 27621 ;;		line 658 in file "outputs_MC50.c"
 27622 ;; Parameters:    Size  Location     Type
 27623 ;;  actualState     1    wreg     enum E10381
 27624 ;; Auto vars:     Size  Location     Type
 27625 ;;  actualState     1   16[COMRAM] enum E10381
 27626 ;;  tempState       1   15[COMRAM] enum E10381
 27627 ;; Return value:  Size  Location     Type
 27628 ;;                  1    wreg      enum E10381
 27629 ;; Registers used:
 27630 ;;		wreg, status,2, status,0
 27631 ;; Tracked objects:
 27632 ;;		On entry : 3F/1
 27633 ;;		On exit  : 3E/0
 27634 ;;		Unchanged: 0/0
 27635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27640 ;;Total ram usage:        2 bytes
 27641 ;; Hardware stack levels used: 1
 27642 ;; Hardware stack levels required when called: 4
 27643 ;; This function calls:
 27644 ;;		Nothing
 27645 ;; This function is called by:
 27646 ;;		_ControlMotor
 27647 ;; This function uses a non-reentrant model
 27648 ;;
 27649                           
 27650                           	psect	text113
 27651  00889E                     __ptext113:
 27652                           	callstack 0
 27653  00889E                     _VerifyElectricalBrake:
 27654                           	callstack 25
 27655                           
 27656                           ;incstack = 0
 27657                           ;VerifyElectricalBrake@actualState stored from wreg
 27658  00889E  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 27659                           
 27660                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 27661  0088A0  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 27662                           
 27663                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 27664  0088A4  0100               	movlb	0	; () banked
 27665  0088A6  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27666  0088A8  A4D8               	btfss	status,2,c
 27667  0088AA  D02E               	goto	l2323
 27668                           
 27669                           ; BSR set to: 0
 27670  0088AC  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27671  0088AE  A4D8               	btfss	status,2,c
 27672  0088B0  D02B               	goto	l2323
 27673                           
 27674                           ; BSR set to: 0
 27675  0088B2  0101               	movlb	1	; () banked
 27676  0088B4  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 27677  0088B6  D005               	goto	u26680
 27678  0088B8  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 27679  0088BA  E126               	bnz	l2323
 27680  0088BC  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 27681  0088BE  B0D8               	btfsc	status,0,c
 27682  0088C0  D023               	goto	l2323
 27683  0088C2                     u26680:
 27684                           
 27685                           ; BSR set to: 1
 27686                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 27687  0088C2  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 27688  0088C4  0100               	movlb	0	; () banked
 27689  0088C6  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 27690  0088C8  B4D8               	btfsc	status,2,c
 27691  0088CA  D00B               	goto	l22998
 27692                           
 27693                           ; BSR set to: 0
 27694  0088CC  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 27695  0088CE  A4D8               	btfss	status,2,c
 27696  0088D0  D008               	goto	l22998
 27697                           
 27698                           ; BSR set to: 0
 27699                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 27700  0088D2  0E01               	movlw	1
 27701  0088D4  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27702                           
 27703                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 27704  0088D6  0E00               	movlw	0
 27705  0088D8  0101               	movlb	1	; () banked
 27706  0088DA  6FC8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 27707  0088DC  0E16               	movlw	22
 27708  0088DE  6FC7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 27709                           
 27710                           ;outputs_MC50.c: 670:         }
 27711  0088E0  D018               	goto	l2328
 27712  0088E2                     l22998:
 27713                           
 27714                           ; BSR set to: 0
 27715  0088E2  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 27716  0088E4  A4D8               	btfss	status,2,c
 27717  0088E6  D00B               	goto	l23004
 27718                           
 27719                           ; BSR set to: 0
 27720  0088E8  0101               	movlb	1	; () banked
 27721  0088EA  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27722  0088EC  D008               	goto	l23004
 27723  0088EE  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27724  0088F0  E103               	bnz	u26720
 27725  0088F2  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27726  0088F4  A0D8               	btfss	status,0,c
 27727  0088F6  D003               	goto	l23004
 27728  0088F8                     u26720:
 27729                           
 27730                           ; BSR set to: 1
 27731                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 27732  0088F8  0E01               	movlw	1
 27733  0088FA  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 27734                           
 27735                           ;outputs_MC50.c: 686:         }
 27736  0088FC  D00A               	goto	l2328
 27737  0088FE                     l23004:
 27738                           
 27739                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 27740  0088FE  0E00               	movlw	0
 27741  008900  0100               	movlb	0	; () banked
 27742  008902  6F78               	movwf	_brakeElectric_st& (0+255),b
 27743                           
 27744                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 27745  008904  0E00               	movlw	0
 27746  008906  D004               	goto	L103
 27747  008908                     l2323:
 27748                           
 27749                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 27750  008908  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 27751                           
 27752                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 27753  00890C  0E00               	movlw	0
 27754  00890E  0100               	movlb	0	; () banked
 27755  008910                     L103:
 27756  008910  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 27757  008912                     l2328:
 27758                           
 27759                           ;outputs_MC50.c: 700:     return tempState;
 27760  008912  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 27761  008914  0012               	return		;funcret
 27762  008916                     __end_of_VerifyElectricalBrake:
 27763                           	callstack 0
 27764                           
 27765 ;; *************** function _ControlLights *****************
 27766 ;; Defined at:
 27767 ;;		line 816 in file "outputs_MC50.c"
 27768 ;; Parameters:    Size  Location     Type
 27769 ;;		None
 27770 ;; Auto vars:     Size  Location     Type
 27771 ;;		None
 27772 ;; Return value:  Size  Location     Type
 27773 ;;                  1    wreg      void 
 27774 ;; Registers used:
 27775 ;;		wreg, status,2, status,0, cstack
 27776 ;; Tracked objects:
 27777 ;;		On entry : 3E/1
 27778 ;;		On exit  : 3E/0
 27779 ;;		Unchanged: 0/0
 27780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27785 ;;Total ram usage:        0 bytes
 27786 ;; Hardware stack levels used: 1
 27787 ;; Hardware stack levels required when called: 6
 27788 ;; This function calls:
 27789 ;;		_setFlashLigth_ON
 27790 ;;		_setRGB_ON
 27791 ;; This function is called by:
 27792 ;;		_main
 27793 ;; This function uses a non-reentrant model
 27794 ;;
 27795                           
 27796                           	psect	text114
 27797  004686                     __ptext114:
 27798                           	callstack 0
 27799  004686                     _ControlLights:
 27800                           	callstack 24
 27801                           
 27802                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 27803                           
 27804                           ;incstack = 0
 27805  004686  0101               	movlb	1	; () banked
 27806  004688  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 27807  00468A  A4D8               	btfss	status,2,c
 27808  00468C  D007               	goto	l25550
 27809                           
 27810                           ; BSR set to: 1
 27811                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 27812  00468E  0E00               	movlw	0
 27813  004690  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27814  004692  0E14               	movlw	20
 27815  004694  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27816  004696  EC22  F04B         	call	_setFlashLigth_ON	;wreg free
 27817                           
 27818                           ;outputs_MC50.c: 821:     }
 27819  00469A  D010               	goto	l25556
 27820  00469C                     l25550:
 27821                           
 27822                           ; BSR set to: 1
 27823  00469C  51E7               	movf	_controlGate_stateMachine& (0+255),w,b
 27824  00469E  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27825  0046A0  A4D8               	btfss	status,2,c
 27826  0046A2  D00C               	goto	l25556
 27827                           
 27828                           ; BSR set to: 1
 27829                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27830  0046A4  0E00               	movlw	0
 27831  0046A6  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27832                           
 27833                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 27834  0046A8  0E00               	movlw	0
 27835  0046AA  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27836                           
 27837                           ; BSR set to: 1
 27838                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 27839  0046AC  0E03               	movlw	3
 27840  0046AE  0100               	movlb	0	; () banked
 27841  0046B0  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27842  0046B2  B4D8               	btfsc	status,2,c
 27843  0046B4  D002               	goto	l2415
 27844                           
 27845                           ; BSR set to: 0
 27846                           
 27847                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 27848  0046B6  9487               	bcf	135,2,c	;volatile
 27849  0046B8  D001               	goto	l25556
 27850  0046BA                     l2415:
 27851                           
 27852                           ; BSR set to: 0
 27853  0046BA  8487               	bsf	135,2,c	;volatile
 27854  0046BC                     l25556:
 27855                           
 27856                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 27857  0046BC  0101               	movlb	1	; () banked
 27858  0046BE  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 27859  0046C0  B4D8               	btfsc	status,2,c
 27860  0046C2  D005               	goto	u31830
 27861                           
 27862                           ; BSR set to: 1
 27863  0046C4  0E04               	movlw	4
 27864  0046C6  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27865  0046C8  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27866  0046CA  A4D8               	btfss	status,2,c
 27867  0046CC  D01C               	goto	l25568
 27868  0046CE                     u31830:
 27869                           
 27870                           ; BSR set to: 1
 27871  0046CE  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27872  0046D0  D01A               	goto	l25568
 27873  0046D2  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27874  0046D4  E103               	bnz	u31840
 27875  0046D6  05B1               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 27876  0046D8  A0D8               	btfss	status,0,c
 27877  0046DA  D015               	goto	l25568
 27878  0046DC                     u31840:
 27879                           
 27880                           ; BSR set to: 1
 27881  0046DC  BFB2               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 27882  0046DE  D006               	goto	u31850
 27883  0046E0  51B2               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 27884  0046E2  E111               	bnz	l25568
 27885  0046E4  0E3D               	movlw	61
 27886  0046E6  5DB1               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 27887  0046E8  B0D8               	btfsc	status,0,c
 27888  0046EA  D00D               	goto	l25568
 27889  0046EC                     u31850:
 27890                           
 27891                           ; BSR set to: 1
 27892  0046EC  0E02               	movlw	2
 27893  0046EE  0100               	movlb	0	; () banked
 27894  0046F0  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27895  0046F2  A4D8               	btfss	status,2,c
 27896  0046F4  D008               	goto	l25568
 27897                           
 27898                           ; BSR set to: 0
 27899                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 27900  0046F6  0E00               	movlw	0
 27901  0046F8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27902  0046FA  0E04               	movlw	4
 27903  0046FC  6E11               	movwf	setRGB_ON@Freq^0,c
 27904  0046FE  0E01               	movlw	1
 27905  004700  ECEF  F040         	call	_setRGB_ON
 27906                           
 27907                           ;outputs_MC50.c: 838:     }
 27908  004704  0012               	return	
 27909  004706                     l25568:
 27910  004706  0E03               	movlw	3
 27911  004708  0101               	movlb	1	; () banked
 27912  00470A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27913  00470C  A4D8               	btfss	status,2,c
 27914  00470E  D04F               	goto	l25598
 27915                           
 27916                           ; BSR set to: 1
 27917                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 27918  004710  0E00               	movlw	0
 27919  004712  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27920                           
 27921                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 27922  004714  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 27923  004716  A4D8               	btfss	status,2,c
 27924  004718  D013               	goto	l25580
 27925                           
 27926                           ; BSR set to: 1
 27927  00471A  0E03               	movlw	3
 27928  00471C  0100               	movlb	0	; () banked
 27929  00471E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27930  004720  A4D8               	btfss	status,2,c
 27931  004722  D00E               	goto	l25580
 27932                           
 27933                           ; BSR set to: 0
 27934                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27935  004724  0E00               	movlw	0
 27936  004726  0101               	movlb	1	; () banked
 27937  004728  6FE2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27938  00472A  0E28               	movlw	40
 27939  00472C  6FE1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27940                           
 27941                           ; BSR set to: 1
 27942                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 27943  00472E  0E00               	movlw	0
 27944  004730  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27945  004732  0E00               	movlw	0
 27946  004734  6E11               	movwf	setRGB_ON@Freq^0,c
 27947  004736  0E04               	movlw	4
 27948  004738  ECEF  F040         	call	_setRGB_ON
 27949                           
 27950                           ; BSR set to: 1
 27951                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 27952  00473C  0E01               	movlw	1
 27953  00473E  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27954  004740                     l25580:
 27955                           
 27956                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 27957  004740  0101               	movlb	1	; () banked
 27958  004742  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27959  004744  D005               	goto	u31900
 27960  004746  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27961  004748  E105               	bnz	l25584
 27962  00474A  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27963  00474C  B0D8               	btfsc	status,0,c
 27964  00474E  D002               	goto	l25584
 27965  004750                     u31900:
 27966                           
 27967                           ; BSR set to: 1
 27968  004750  0100               	movlb	0	; () banked
 27969  004752  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27970  004754                     l25584:
 27971                           
 27972                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 27973  004754  0100               	movlb	0	; () banked
 27974  004756  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27975  004758  A4D8               	btfss	status,2,c
 27976  00475A  D010               	goto	l25590
 27977                           
 27978                           ; BSR set to: 0
 27979  00475C  0101               	movlb	1	; () banked
 27980  00475E  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27981  004760  D005               	goto	u31920
 27982  004762  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27983  004764  E10B               	bnz	l25590
 27984  004766  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27985  004768  B0D8               	btfsc	status,0,c
 27986  00476A  D008               	goto	l25590
 27987  00476C                     u31920:
 27988                           
 27989                           ; BSR set to: 1
 27990                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 27991  00476C  0E00               	movlw	0
 27992  00476E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27993  004770  0E05               	movlw	5
 27994  004772  6E11               	movwf	setRGB_ON@Freq^0,c
 27995  004774  0E03               	movlw	3
 27996  004776  ECEF  F040         	call	_setRGB_ON
 27997                           
 27998                           ;outputs_MC50.c: 862:         }
 27999  00477A  D007               	goto	l25592
 28000  00477C                     l25590:
 28001                           
 28002                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 28003  00477C  0E00               	movlw	0
 28004  00477E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28005  004780  0E00               	movlw	0
 28006  004782  6E11               	movwf	setRGB_ON@Freq^0,c
 28007  004784  0E03               	movlw	3
 28008  004786  ECEF  F040         	call	_setRGB_ON
 28009  00478A                     l25592:
 28010                           
 28011                           ; BSR set to: 1
 28012                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 28013  00478A  0100               	movlb	0	; () banked
 28014  00478C  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28015  00478E  A4D8               	btfss	status,2,c
 28016  004790  D007               	goto	l25596
 28017                           
 28018                           ; BSR set to: 0
 28019                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 28020  004792  0E00               	movlw	0
 28021  004794  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28022  004796  0E0A               	movlw	10
 28023  004798  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28024  00479A  EC22  F04B         	call	_setFlashLigth_ON	;wreg free
 28025                           
 28026                           ;outputs_MC50.c: 873:         }
 28027  00479E  0012               	return	
 28028  0047A0                     l25596:
 28029                           
 28030                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 28031  0047A0  0E00               	movlw	0
 28032  0047A2  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28033  0047A4  0E00               	movlw	0
 28034  0047A6  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28035  0047A8  EC22  F04B         	call	_setFlashLigth_ON	;wreg free
 28036  0047AC  0012               	return	
 28037  0047AE                     l25598:
 28038                           
 28039                           ; BSR set to: 1
 28040  0047AE  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28041  0047B0  A4D8               	btfss	status,2,c
 28042  0047B2  D042               	goto	l25626
 28043                           
 28044                           ; BSR set to: 1
 28045  0047B4  05E7               	decf	_controlGate_stateMachine& (0+255),w,b
 28046  0047B6  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28047  0047B8  A4D8               	btfss	status,2,c
 28048  0047BA  D03E               	goto	l25626
 28049                           
 28050                           ; BSR set to: 1
 28051                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 28052  0047BC  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 28053  0047BE  A4D8               	btfss	status,2,c
 28054                           
 28055                           ; BSR set to: 1
 28056                           
 28057                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 28058  0047C0  8E83               	bsf	131,7,c	;volatile
 28059                           
 28060                           ; BSR set to: 1
 28061                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 28062  0047C2  0100               	movlb	0	; () banked
 28063  0047C4  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28064  0047C6  A4D8               	btfss	status,2,c
 28065  0047C8  D017               	goto	l25614
 28066                           
 28067                           ; BSR set to: 0
 28068                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 28069  0047CA  0E02               	movlw	2
 28070  0047CC  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 28071  0047CE  B4D8               	btfsc	status,2,c
 28072  0047D0  D003               	goto	u31990
 28073                           
 28074                           ; BSR set to: 0
 28075  0047D2  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 28076  0047D4  A4D8               	btfss	status,2,c
 28077  0047D6  D008               	goto	l25612
 28078  0047D8                     u31990:
 28079                           
 28080                           ; BSR set to: 0
 28081  0047D8  0E00               	movlw	0
 28082  0047DA  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28083  0047DC  0E00               	movlw	0
 28084  0047DE  6E11               	movwf	setRGB_ON@Freq^0,c
 28085  0047E0  0E04               	movlw	4
 28086  0047E2  ECEF  F040         	call	_setRGB_ON
 28087  0047E6  D013               	goto	l25618
 28088  0047E8                     l25612:
 28089                           
 28090                           ; BSR set to: 0
 28091  0047E8  0E00               	movlw	0
 28092  0047EA  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28093  0047EC  0E28               	movlw	40
 28094  0047EE  6E11               	movwf	setRGB_ON@Freq^0,c
 28095  0047F0  0E04               	movlw	4
 28096  0047F2  ECEF  F040         	call	_setRGB_ON
 28097  0047F6  D00B               	goto	l25618
 28098  0047F8                     l25614:
 28099                           
 28100                           ; BSR set to: 0
 28101  0047F8  0E03               	movlw	3
 28102  0047FA  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28103  0047FC  B4D8               	btfsc	status,2,c
 28104  0047FE  D007               	goto	l25618
 28105                           
 28106                           ; BSR set to: 0
 28107  004800  0E00               	movlw	0
 28108  004802  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28109  004804  0E00               	movlw	0
 28110  004806  6E11               	movwf	setRGB_ON@Freq^0,c
 28111  004808  0E04               	movlw	4
 28112  00480A  ECEF  F040         	call	_setRGB_ON
 28113  00480E                     l25618:
 28114                           
 28115                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 28116  00480E  0E03               	movlw	3
 28117  004810  0100               	movlb	0	; () banked
 28118  004812  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28119  004814  B4D8               	btfsc	status,2,c
 28120  004816  0012               	return	
 28121                           
 28122                           ; BSR set to: 0
 28123                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 28124  004818  0101               	movlb	1	; () banked
 28125  00481A  BFC2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 28126  00481C  D007               	goto	l2443
 28127  00481E  51C2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 28128  004820  11C1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 28129  004822  11C0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 28130  004824  E1BD               	bnz	l25596
 28131  004826  05BF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 28132  004828  B0D8               	btfsc	status,0,c
 28133  00482A  D7BA               	goto	l25596
 28134  00482C                     l2443:
 28135                           
 28136                           ; BSR set to: 1
 28137  00482C  9487               	bcf	135,2,c	;volatile
 28138                           
 28139                           ; BSR set to: 1
 28140                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 28141  00482E  0E00               	movlw	0
 28142  004830  6FBE               	movwf	(_ts_system+31)& (0+255),b	;volatile
 28143  004832  0E00               	movlw	0
 28144  004834  6FBD               	movwf	(_ts_system+30)& (0+255),b	;volatile
 28145                           
 28146                           ; BSR set to: 0
 28147                           ;outputs_MC50.c: 907:     }
 28148                           
 28149                           ;outputs_MC50.c: 906:         }
 28150  004836  0012               	return	
 28151  004838                     l25626:
 28152                           
 28153                           ; BSR set to: 1
 28154  004838  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28155  00483A  A4D8               	btfss	status,2,c
 28156  00483C  D048               	goto	l25660
 28157                           
 28158                           ; BSR set to: 1
 28159                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 28160  00483E  0100               	movlb	0	; () banked
 28161  004840  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28162  004842  A4D8               	btfss	status,2,c
 28163  004844  D004               	goto	u32050
 28164                           
 28165                           ; BSR set to: 0
 28166  004846  0101               	movlb	1	; () banked
 28167  004848  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28168  00484A  B4D8               	btfsc	status,2,c
 28169  00484C  D00C               	goto	u32080
 28170  00484E                     u32050:
 28171  00484E  0100               	movlb	0	; () banked
 28172  004850  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28173  004852  A4D8               	btfss	status,2,c
 28174  004854  D017               	goto	l25644
 28175                           
 28176                           ; BSR set to: 0
 28177  004856  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28178  004858  B4D8               	btfsc	status,2,c
 28179  00485A  D014               	goto	l25644
 28180                           
 28181                           ; BSR set to: 0
 28182  00485C  0E02               	movlw	2
 28183  00485E  0101               	movlb	1	; () banked
 28184  004860  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28185  004862  A4D8               	btfss	status,2,c
 28186  004864  D00F               	goto	l25644
 28187  004866                     u32080:
 28188                           
 28189                           ; BSR set to: 1
 28190                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28191  004866  0E00               	movlw	0
 28192  004868  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28193                           
 28194                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 28195  00486A  0E00               	movlw	0
 28196  00486C  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28197                           
 28198                           ; BSR set to: 1
 28199                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 28200  00486E  0E03               	movlw	3
 28201  004870  0100               	movlb	0	; () banked
 28202  004872  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28203  004874  B4D8               	btfsc	status,2,c
 28204  004876  0012               	return	
 28205                           
 28206                           ; BSR set to: 0
 28207  004878  0E02               	movlw	2
 28208  00487A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28209  00487C  B4D8               	btfsc	status,2,c
 28210  00487E  0012               	return	
 28211                           
 28212                           ; BSR set to: 0
 28213                           
 28214                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 28215  004880  9487               	bcf	135,2,c	;volatile
 28216  004882  0012               	return	
 28217  004884                     l25644:
 28218                           
 28219                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28220  004884  0100               	movlb	0	; () banked
 28221  004886  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28222  004888  A4D8               	btfss	status,2,c
 28223  00488A  D008               	goto	l25648
 28224                           
 28225                           ; BSR set to: 0
 28226                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 28227  00488C  0E00               	movlw	0
 28228  00488E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28229  004890  0E14               	movlw	20
 28230  004892  6E11               	movwf	setRGB_ON@Freq^0,c
 28231  004894  0E01               	movlw	1
 28232  004896  ECEF  F040         	call	_setRGB_ON
 28233                           
 28234                           ;outputs_MC50.c: 932:             }
 28235  00489A  D007               	goto	l25650
 28236  00489C                     l25648:
 28237                           
 28238                           ; BSR set to: 0
 28239                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 28240  00489C  0E00               	movlw	0
 28241  00489E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28242  0048A0  0E00               	movlw	0
 28243  0048A2  6E11               	movwf	setRGB_ON@Freq^0,c
 28244  0048A4  0E01               	movlw	1
 28245  0048A6  ECEF  F040         	call	_setRGB_ON
 28246  0048AA                     l25650:
 28247                           
 28248                           ; BSR set to: 1
 28249                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 28250  0048AA  0100               	movlb	0	; () banked
 28251  0048AC  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28252  0048AE  B4D8               	btfsc	status,2,c
 28253  0048B0  D004               	goto	u32130
 28254                           
 28255                           ; BSR set to: 0
 28256  0048B2  0E03               	movlw	3
 28257  0048B4  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28258  0048B6  A4D8               	btfss	status,2,c
 28259  0048B8  D002               	goto	l25654
 28260  0048BA                     u32130:
 28261                           
 28262                           ; BSR set to: 0
 28263                           
 28264                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 28265  0048BA  9487               	bcf	135,2,c	;volatile
 28266  0048BC  0012               	return	
 28267  0048BE                     l25654:
 28268                           
 28269                           ; BSR set to: 0
 28270  0048BE  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28271  0048C0  B4D8               	btfsc	status,2,c
 28272  0048C2  D76E               	goto	l25596
 28273                           
 28274                           ; BSR set to: 0
 28275  0048C4  0E02               	movlw	2
 28276  0048C6  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28277  0048C8  A4D8               	btfss	status,2,c
 28278  0048CA  0012               	return	
 28279  0048CC  D769               	goto	l25596
 28280  0048CE                     l25660:
 28281                           
 28282                           ; BSR set to: 1
 28283                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 28284  0048CE  0E00               	movlw	0
 28285  0048D0  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28286                           
 28287                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 28288  0048D2  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 28289  0048D4  A4D8               	btfss	status,2,c
 28290  0048D6  D00C               	goto	l25666
 28291                           
 28292                           ; BSR set to: 1
 28293  0048D8  0E03               	movlw	3
 28294  0048DA  0100               	movlb	0	; () banked
 28295  0048DC  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28296  0048DE  A4D8               	btfss	status,2,c
 28297  0048E0  D007               	goto	l25666
 28298                           
 28299                           ; BSR set to: 0
 28300                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 28301  0048E2  0E00               	movlw	0
 28302  0048E4  0101               	movlb	1	; () banked
 28303  0048E6  6FE2               	movwf	(_ts_system+67)& (0+255),b	;volatile
 28304  0048E8  0E28               	movlw	40
 28305  0048EA  6FE1               	movwf	(_ts_system+66)& (0+255),b	;volatile
 28306                           
 28307                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 28308  0048EC  0E01               	movlw	1
 28309  0048EE  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28310  0048F0                     l25666:
 28311                           
 28312                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 28313  0048F0  0101               	movlb	1	; () banked
 28314  0048F2  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 28315  0048F4  D005               	goto	u32180
 28316  0048F6  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 28317  0048F8  E105               	bnz	l25670
 28318  0048FA  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 28319  0048FC  B0D8               	btfsc	status,0,c
 28320  0048FE  D002               	goto	l25670
 28321  004900                     u32180:
 28322                           
 28323                           ; BSR set to: 1
 28324  004900  0100               	movlb	0	; () banked
 28325  004902  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28326  004904                     l25670:
 28327                           
 28328                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 28329  004904  0E04               	movlw	4
 28330  004906  0101               	movlb	1	; () banked
 28331  004908  19E7               	xorwf	_controlGate_stateMachine& (0+255),w,b
 28332  00490A  11E8               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 28333  00490C  A4D8               	btfss	status,2,c
 28334  00490E  D01B               	goto	l25682
 28335                           
 28336                           ; BSR set to: 1
 28337                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 28338  004910  0E00               	movlw	0
 28339  004912  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 28340                           
 28341                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 28342  004914  0E00               	movlw	0
 28343  004916  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 28344                           
 28345                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 28346  004918  0100               	movlb	0	; () banked
 28347  00491A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 28348  00491C  A4D8               	btfss	status,2,c
 28349  00491E  D00A               	goto	u32230
 28350                           
 28351                           ; BSR set to: 0
 28352  004920  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 28353  004922  B4D8               	btfsc	status,2,c
 28354  004924  D003               	goto	u32220
 28355                           
 28356                           ; BSR set to: 0
 28357  004926  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 28358  004928  A4D8               	btfss	status,2,c
 28359  00492A  D004               	goto	u32230
 28360  00492C                     u32220:
 28361                           
 28362                           ; BSR set to: 0
 28363  00492C  0E02               	movlw	2
 28364  00492E  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 28365  004930  A4D8               	btfss	status,2,c
 28366  004932  D007               	goto	l2477
 28367  004934                     u32230:
 28368                           
 28369                           ; BSR set to: 0
 28370                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 28371  004934  0E00               	movlw	0
 28372  004936  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28373  004938  0E00               	movlw	0
 28374  00493A  6E11               	movwf	setRGB_ON@Freq^0,c
 28375  00493C  0E01               	movlw	1
 28376  00493E  ECEF  F040         	call	_setRGB_ON
 28377  004942                     l2477:
 28378  004942  9487               	bcf	135,2,c	;volatile
 28379  004944  0012               	return	
 28380  004946                     l25682:
 28381                           
 28382                           ; BSR set to: 1
 28383                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 28384  004946  0100               	movlb	0	; () banked
 28385  004948  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 28386  00494A  A4D8               	btfss	status,2,c
 28387  00494C  D008               	goto	l25686
 28388                           
 28389                           ; BSR set to: 0
 28390                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 28391  00494E  0E00               	movlw	0
 28392  004950  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28393  004952  0E0A               	movlw	10
 28394  004954  6E11               	movwf	setRGB_ON@Freq^0,c
 28395  004956  0E02               	movlw	2
 28396  004958  ECEF  F040         	call	_setRGB_ON
 28397                           
 28398                           ;outputs_MC50.c: 999:             }
 28399  00495C  D007               	goto	l25688
 28400  00495E                     l25686:
 28401                           
 28402                           ; BSR set to: 0
 28403                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 28404  00495E  0E00               	movlw	0
 28405  004960  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 28406  004962  0E00               	movlw	0
 28407  004964  6E11               	movwf	setRGB_ON@Freq^0,c
 28408  004966  0E02               	movlw	2
 28409  004968  ECEF  F040         	call	_setRGB_ON
 28410  00496C                     l25688:
 28411                           
 28412                           ; BSR set to: 1
 28413                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 28414  00496C  0100               	movlb	0	; () banked
 28415  00496E  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28416  004970  A4D8               	btfss	status,2,c
 28417  004972  D007               	goto	l25692
 28418                           
 28419                           ; BSR set to: 0
 28420                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 28421  004974  0E00               	movlw	0
 28422  004976  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28423  004978  0E14               	movlw	20
 28424  00497A  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28425  00497C  EC22  F04B         	call	_setFlashLigth_ON	;wreg free
 28426                           
 28427                           ;outputs_MC50.c: 1011:             }
 28428  004980  D00D               	goto	l25698
 28429  004982                     l25692:
 28430                           
 28431                           ; BSR set to: 0
 28432  004982  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28433  004984  B4D8               	btfsc	status,2,c
 28434  004986  D004               	goto	u32270
 28435                           
 28436                           ; BSR set to: 0
 28437  004988  0E02               	movlw	2
 28438  00498A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28439  00498C  A4D8               	btfss	status,2,c
 28440  00498E  D006               	goto	l25698
 28441  004990                     u32270:
 28442                           
 28443                           ; BSR set to: 0
 28444                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 28445  004990  0E00               	movlw	0
 28446  004992  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 28447  004994  0E00               	movlw	0
 28448  004996  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 28449  004998  EC22  F04B         	call	_setFlashLigth_ON	;wreg free
 28450  00499C                     l25698:
 28451                           
 28452                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 28453  00499C  0E03               	movlw	3
 28454  00499E  0100               	movlb	0	; () banked
 28455  0049A0  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 28456  0049A2  A4D8               	btfss	status,2,c
 28457  0049A4  0012               	return	
 28458                           
 28459                           ; BSR set to: 0
 28460                           
 28461                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 28462  0049A6  9487               	bcf	135,2,c	;volatile
 28463  0049A8  0012               	return		;funcret
 28464  0049AA                     __end_of_ControlLights:
 28465                           	callstack 0
 28466                           
 28467 ;; *************** function _setRGB_ON *****************
 28468 ;; Defined at:
 28469 ;;		line 1028 in file "outputs_MC50.c"
 28470 ;; Parameters:    Size  Location     Type
 28471 ;;  RGBLigth        1    wreg     enum E10611
 28472 ;;  Freq            2   16[COMRAM] int 
 28473 ;; Auto vars:     Size  Location     Type
 28474 ;;  RGBLigth        1   20[COMRAM] enum E10611
 28475 ;; Return value:  Size  Location     Type
 28476 ;;                  1    wreg      void 
 28477 ;; Registers used:
 28478 ;;		wreg, status,2, status,0, cstack
 28479 ;; Tracked objects:
 28480 ;;		On entry : 3E/0
 28481 ;;		On exit  : 3F/1
 28482 ;;		Unchanged: 0/0
 28483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28487 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28488 ;;Total ram usage:        5 bytes
 28489 ;; Hardware stack levels used: 1
 28490 ;; Hardware stack levels required when called: 5
 28491 ;; This function calls:
 28492 ;;		_RGB_Set
 28493 ;; This function is called by:
 28494 ;;		_ControlLights
 28495 ;; This function uses a non-reentrant model
 28496 ;;
 28497                           
 28498                           	psect	text115
 28499  0081DE                     __ptext115:
 28500                           	callstack 0
 28501  0081DE                     _setRGB_ON:
 28502                           	callstack 24
 28503                           
 28504                           ;incstack = 0
 28505                           ;setRGB_ON@RGBLigth stored from wreg
 28506  0081DE  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 28507                           
 28508                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 28509  0081E0  8E83               	bsf	131,7,c	;volatile
 28510                           
 28511                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 28512  0081E2  5011               	movf	setRGB_ON@Freq^0,w,c
 28513  0081E4  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28514  0081E6  B4D8               	btfsc	status,2,c
 28515  0081E8  D015               	goto	l23036
 28516  0081EA  0101               	movlb	1	; () banked
 28517  0081EC  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28518  0081EE  B4D8               	btfsc	status,2,c
 28519  0081F0  D011               	goto	l23036
 28520  0081F2  D024               	goto	l23038
 28521  0081F4                     l23026:
 28522                           
 28523                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 28524  0081F4  0E20               	movlw	32
 28525  0081F6  EC15  F04F         	call	_RGB_Set
 28526                           
 28527                           ;outputs_MC50.c: 1044:             break;
 28528  0081FA  D020               	goto	l23038
 28529  0081FC                     l23028:
 28530                           
 28531                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 28532  0081FC  0E04               	movlw	4
 28533  0081FE  EC15  F04F         	call	_RGB_Set
 28534                           
 28535                           ;outputs_MC50.c: 1048:             break;
 28536  008202  D01C               	goto	l23038
 28537  008204                     l23030:
 28538                           
 28539                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 28540  008204  0E00               	movlw	0
 28541  008206  EC15  F04F         	call	_RGB_Set
 28542                           
 28543                           ;outputs_MC50.c: 1052:             break;
 28544  00820A  D018               	goto	l23038
 28545  00820C                     l23032:
 28546                           
 28547                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 28548  00820C  0E24               	movlw	36
 28549  00820E  EC15  F04F         	call	_RGB_Set
 28550                           
 28551                           ;outputs_MC50.c: 1056:             break;
 28552  008212  D014               	goto	l23038
 28553  008214                     l23036:
 28554  008214  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 28555  008216  6E13               	movwf	??_setRGB_ON^0,c
 28556  008218  6A14               	clrf	(??_setRGB_ON+1)^0,c
 28557                           
 28558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28559                           ; Switch size 1, requested type "simple"
 28560                           ; Number of cases is 1, Range of values is 0 to 0
 28561                           ; switch strategies available:
 28562                           ; Name         Instructions Cycles
 28563                           ; simple_byte            4     3 (average)
 28564                           ;	Chosen strategy is simple_byte
 28565  00821A  5014               	movf	(??_setRGB_ON+1)^0,w,c
 28566  00821C  0A00               	xorlw	0	; case 0
 28567  00821E  A4D8               	btfss	status,2,c
 28568  008220  D00D               	goto	l23038
 28569                           
 28570                           ; Switch size 1, requested type "simple"
 28571                           ; Number of cases is 4, Range of values is 1 to 4
 28572                           ; switch strategies available:
 28573                           ; Name         Instructions Cycles
 28574                           ; simple_byte           13     7 (average)
 28575                           ;	Chosen strategy is simple_byte
 28576  008222  5013               	movf	??_setRGB_ON^0,w,c
 28577  008224  0A01               	xorlw	1	; case 1
 28578  008226  B4D8               	btfsc	status,2,c
 28579  008228  D7ED               	goto	l23030
 28580  00822A  0A03               	xorlw	3	; case 2
 28581  00822C  B4D8               	btfsc	status,2,c
 28582  00822E  D7E6               	goto	l23028
 28583  008230  0A01               	xorlw	1	; case 3
 28584  008232  B4D8               	btfsc	status,2,c
 28585  008234  D7DF               	goto	l23026
 28586  008236  0A07               	xorlw	7	; case 4
 28587  008238  B4D8               	btfsc	status,2,c
 28588  00823A  D7E8               	goto	l23032
 28589  00823C                     l23038:
 28590                           
 28591                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 28592  00823C  0101               	movlb	1	; () banked
 28593  00823E  BFBC               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 28594  008240  D005               	goto	u26790
 28595  008242  51BC               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 28596  008244  E113               	bnz	l2507
 28597  008246  05BB               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 28598  008248  B0D8               	btfsc	status,0,c
 28599  00824A  0012               	return	
 28600  00824C                     u26790:
 28601                           
 28602                           ; BSR set to: 1
 28603  00824C  5011               	movf	setRGB_ON@Freq^0,w,c
 28604  00824E  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 28605  008250  B4D8               	btfsc	status,2,c
 28606  008252  0012               	return	
 28607                           
 28608                           ; BSR set to: 1
 28609                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 28610  008254  C011  F1BB         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 28611  008258  C012  F1BC         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 28612                           
 28613                           ; BSR set to: 1
 28614                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 28615  00825C  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 28616  00825E  A4D8               	btfss	status,2,c
 28617  008260  D003               	goto	l23048
 28618                           
 28619                           ; BSR set to: 1
 28620                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 28621  008262  0E00               	movlw	0
 28622  008264  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28623                           
 28624                           ;outputs_MC50.c: 1067:         }
 28625  008266  0012               	return	
 28626  008268                     l23048:
 28627                           
 28628                           ; BSR set to: 1
 28629                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 28630  008268  0E01               	movlw	1
 28631  00826A  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 28632  00826C                     l2507:
 28633                           
 28634                           ; BSR set to: 1
 28635  00826C  0012               	return		;funcret
 28636  00826E                     __end_of_setRGB_ON:
 28637                           	callstack 0
 28638                           
 28639 ;; *************** function _RGB_Set *****************
 28640 ;; Defined at:
 28641 ;;		line 98 in file "outputs_MC50.c"
 28642 ;; Parameters:    Size  Location     Type
 28643 ;;  value           1    wreg     unsigned char 
 28644 ;; Auto vars:     Size  Location     Type
 28645 ;;  value           1   15[COMRAM] unsigned char 
 28646 ;; Return value:  Size  Location     Type
 28647 ;;                  1    wreg      void 
 28648 ;; Registers used:
 28649 ;;		wreg, status,2, status,0
 28650 ;; Tracked objects:
 28651 ;;		On entry : 0/0
 28652 ;;		On exit  : 0/0
 28653 ;;		Unchanged: 0/0
 28654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28659 ;;Total ram usage:        1 bytes
 28660 ;; Hardware stack levels used: 1
 28661 ;; Hardware stack levels required when called: 4
 28662 ;; This function calls:
 28663 ;;		Nothing
 28664 ;; This function is called by:
 28665 ;;		_setRGB_ON
 28666 ;; This function uses a non-reentrant model
 28667 ;;
 28668                           
 28669                           	psect	text116
 28670  009E2A                     __ptext116:
 28671                           	callstack 0
 28672  009E2A                     _RGB_Set:
 28673                           	callstack 24
 28674                           
 28675                           ; BSR set to: 1
 28676                           ;incstack = 0
 28677                           ;RGB_Set@value stored from wreg
 28678  009E2A  6E10               	movwf	RGB_Set@value^0,c
 28679                           
 28680                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 28681  009E2C  0EDB               	movlw	219
 28682  009E2E  1685               	andwf	133,f,c	;volatile
 28683                           
 28684                           ;outputs_MC50.c: 101:    LATC |= value;
 28685  009E30  5010               	movf	RGB_Set@value^0,w,c	;volatile
 28686  009E32  1285               	iorwf	133,f,c	;volatile
 28687  009E34  9E83               	bcf	131,7,c	;volatile
 28688  009E36  0012               	return		;funcret
 28689  009E38                     __end_of_RGB_Set:
 28690                           	callstack 0
 28691                           
 28692 ;; *************** function _setFlashLigth_ON *****************
 28693 ;; Defined at:
 28694 ;;		line 1077 in file "outputs_MC50.c"
 28695 ;; Parameters:    Size  Location     Type
 28696 ;;  Freq            2   15[COMRAM] int 
 28697 ;; Auto vars:     Size  Location     Type
 28698 ;;		None
 28699 ;; Return value:  Size  Location     Type
 28700 ;;                  1    wreg      void 
 28701 ;; Registers used:
 28702 ;;		wreg, status,2, status,0
 28703 ;; Tracked objects:
 28704 ;;		On entry : 3E/1
 28705 ;;		On exit  : 3F/1
 28706 ;;		Unchanged: 0/0
 28707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28712 ;;Total ram usage:        2 bytes
 28713 ;; Hardware stack levels used: 1
 28714 ;; Hardware stack levels required when called: 4
 28715 ;; This function calls:
 28716 ;;		Nothing
 28717 ;; This function is called by:
 28718 ;;		_ControlLights
 28719 ;; This function uses a non-reentrant model
 28720 ;;
 28721                           
 28722                           	psect	text117
 28723  009644                     __ptext117:
 28724                           	callstack 0
 28725  009644                     _setFlashLigth_ON:
 28726                           	callstack 25
 28727                           
 28728                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 28729                           
 28730                           ;incstack = 0
 28731  009644  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28732  009646  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28733  009648  B4D8               	btfsc	status,2,c
 28734  00964A  D004               	goto	u26740
 28735  00964C  0101               	movlb	1	; () banked
 28736  00964E  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 28737  009650  A4D8               	btfss	status,2,c
 28738  009652  D002               	goto	l2516
 28739  009654                     u26740:
 28740                           
 28741                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 28742  009654  8487               	bsf	135,2,c	;volatile
 28743  009656  D001               	goto	l23014
 28744  009658                     l2516:
 28745                           
 28746                           ; BSR set to: 1
 28747  009658  9487               	bcf	135,2,c	;volatile
 28748  00965A                     l23014:
 28749                           
 28750                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 28751  00965A  0101               	movlb	1	; () banked
 28752  00965C  BFBE               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 28753  00965E  D005               	goto	u26750
 28754  009660  51BE               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 28755  009662  E10D               	bnz	l2519
 28756  009664  05BD               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 28757  009666  B0D8               	btfsc	status,0,c
 28758  009668  0012               	return	
 28759  00966A                     u26750:
 28760                           
 28761                           ; BSR set to: 1
 28762  00966A  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 28763  00966C  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 28764  00966E  B4D8               	btfsc	status,2,c
 28765  009670  0012               	return	
 28766                           
 28767                           ; BSR set to: 1
 28768                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 28769  009672  C010  F1BD         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 28770  009676  C011  F1BE         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 28771                           
 28772                           ; BSR set to: 1
 28773                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 28774  00967A  0E01               	movlw	1
 28775  00967C  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 28776  00967E                     l2519:
 28777                           
 28778                           ; BSR set to: 1
 28779  00967E  0012               	return		;funcret
 28780  009680                     __end_of_setFlashLigth_ON:
 28781                           	callstack 0
 28782                           
 28783 ;; *************** function _ControlInputs *****************
 28784 ;; Defined at:
 28785 ;;		line 674 in file "inputs_MC50.c"
 28786 ;; Parameters:    Size  Location     Type
 28787 ;;		None
 28788 ;; Auto vars:     Size  Location     Type
 28789 ;;		None
 28790 ;; Return value:  Size  Location     Type
 28791 ;;                  1    wreg      void 
 28792 ;; Registers used:
 28793 ;;		wreg, status,2, status,0
 28794 ;; Tracked objects:
 28795 ;;		On entry : 3E/1
 28796 ;;		On exit  : 3E/0
 28797 ;;		Unchanged: 0/0
 28798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28803 ;;Total ram usage:        0 bytes
 28804 ;; Hardware stack levels used: 1
 28805 ;; Hardware stack levels required when called: 4
 28806 ;; This function calls:
 28807 ;;		Nothing
 28808 ;; This function is called by:
 28809 ;;		_main
 28810 ;; This function uses a non-reentrant model
 28811 ;;
 28812                           
 28813                           	psect	text118
 28814  007166                     __ptext118:
 28815                           	callstack 0
 28816  007166                     _ControlInputs:
 28817                           	callstack 26
 28818                           
 28819                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 28820                           
 28821                           ; BSR set to: 1
 28822                           ;incstack = 0
 28823  007166  0E03               	movlw	3
 28824  007168  0101               	movlb	1	; () banked
 28825  00716A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28826  00716C  B4D8               	btfsc	status,2,c
 28827  00716E  D00C               	goto	u30350
 28828                           
 28829                           ; BSR set to: 1
 28830  007170  A291               	btfss	145,1,c	;volatile
 28831  007172  D004               	goto	u30330
 28832                           
 28833                           ; BSR set to: 1
 28834  007174  0100               	movlb	0	; () banked
 28835  007176  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28836  007178  B4D8               	btfsc	status,2,c
 28837  00717A  D006               	goto	u30350
 28838  00717C                     u30330:
 28839  00717C  A091               	btfss	145,0,c	;volatile
 28840  00717E  D00A               	goto	l24874
 28841  007180  0100               	movlb	0	; () banked
 28842  007182  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28843  007184  A4D8               	btfss	status,2,c
 28844  007186  D006               	goto	l24874
 28845  007188                     u30350:
 28846  007188  0101               	movlb	1	; () banked
 28847  00718A  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 28848  00718C  A4D8               	btfss	status,2,c
 28849  00718E  D002               	goto	l24874
 28850                           
 28851                           ; BSR set to: 1
 28852                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 28853  007190  0E00               	movlw	0
 28854  007192  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28855  007194                     l24874:
 28856                           
 28857                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 28858  007194  0101               	movlb	1	; () banked
 28859  007196  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28860  007198  B4D8               	btfsc	status,2,c
 28861  00719A  D010               	goto	u30420
 28862                           
 28863                           ; BSR set to: 1
 28864  00719C  0E02               	movlw	2
 28865  00719E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28866  0071A0  B4D8               	btfsc	status,2,c
 28867  0071A2  D00C               	goto	u30420
 28868                           
 28869                           ; BSR set to: 1
 28870  0071A4  A091               	btfss	145,0,c	;volatile
 28871  0071A6  D004               	goto	u30400
 28872                           
 28873                           ; BSR set to: 1
 28874  0071A8  0100               	movlb	0	; () banked
 28875  0071AA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28876  0071AC  B4D8               	btfsc	status,2,c
 28877  0071AE  D006               	goto	u30420
 28878  0071B0                     u30400:
 28879  0071B0  A291               	btfss	145,1,c	;volatile
 28880  0071B2  D00A               	goto	l24888
 28881  0071B4  0100               	movlb	0	; () banked
 28882  0071B6  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 28883  0071B8  A4D8               	btfss	status,2,c
 28884  0071BA  D006               	goto	l24888
 28885  0071BC                     u30420:
 28886  0071BC  0101               	movlb	1	; () banked
 28887  0071BE  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 28888  0071C0  A4D8               	btfss	status,2,c
 28889  0071C2  D002               	goto	l24888
 28890                           
 28891                           ; BSR set to: 1
 28892                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 28893  0071C4  0E00               	movlw	0
 28894  0071C6  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28895  0071C8                     l24888:
 28896                           
 28897                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 28898  0071C8  0101               	movlb	1	; () banked
 28899  0071CA  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 28900  0071CC  B4D8               	btfsc	status,2,c
 28901  0071CE  0012               	return	
 28902                           
 28903                           ; BSR set to: 1
 28904                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 28905  0071D0  0100               	movlb	0	; () banked
 28906  0071D2  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 28907  0071D4  A4D8               	btfss	status,2,c
 28908  0071D6  D02B               	goto	l24914
 28909                           
 28910                           ; BSR set to: 0
 28911  0071D8  0101               	movlb	1	; () banked
 28912  0071DA  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 28913  0071DC  A4D8               	btfss	status,2,c
 28914  0071DE  D027               	goto	l24914
 28915                           
 28916                           ; BSR set to: 1
 28917  0071E0  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 28918  0071E2  A4D8               	btfss	status,2,c
 28919  0071E4  D024               	goto	l24914
 28920                           
 28921                           ; BSR set to: 1
 28922                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 28923  0071E6  0500               	decf	_var_sys& (0+255),w,b	;volatile
 28924  0071E8  B4D8               	btfsc	status,2,c
 28925  0071EA  D004               	goto	u30490
 28926                           
 28927                           ; BSR set to: 1
 28928  0071EC  0E02               	movlw	2
 28929  0071EE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28930  0071F0  A4D8               	btfss	status,2,c
 28931  0071F2  D007               	goto	l24904
 28932  0071F4                     u30490:
 28933                           
 28934                           ; BSR set to: 1
 28935  0071F4  0100               	movlb	0	; () banked
 28936  0071F6  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28937  0071F8  A4D8               	btfss	status,2,c
 28938  0071FA  D003               	goto	l24904
 28939                           
 28940                           ; BSR set to: 0
 28941                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 28942  0071FC  0E00               	movlw	0
 28943  0071FE  0101               	movlb	1	; () banked
 28944  007200  D015               	goto	L104
 28945  007202                     l24904:
 28946  007202  0E03               	movlw	3
 28947  007204  0101               	movlb	1	; () banked
 28948  007206  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28949  007208  A4D8               	btfss	status,2,c
 28950  00720A  D011               	goto	l24914
 28951                           
 28952                           ; BSR set to: 1
 28953  00720C  0100               	movlb	0	; () banked
 28954  00720E  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 28955  007210  A4D8               	btfss	status,2,c
 28956  007212  D00D               	goto	l24914
 28957                           
 28958                           ; BSR set to: 0
 28959  007214  0101               	movlb	1	; () banked
 28960  007216  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 28961  007218  D005               	goto	u30530
 28962  00721A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 28963  00721C  E108               	bnz	l24914
 28964  00721E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 28965  007220  B0D8               	btfsc	status,0,c
 28966  007222  D005               	goto	l24914
 28967  007224                     u30530:
 28968                           
 28969                           ; BSR set to: 1
 28970  007224  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 28971  007226  A4D8               	btfss	status,2,c
 28972  007228  D002               	goto	l24914
 28973                           
 28974                           ; BSR set to: 1
 28975                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 28976  00722A  0E00               	movlw	0
 28977  00722C                     L104:
 28978  00722C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28979  00722E                     l24914:
 28980                           
 28981                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 28982  00722E  0100               	movlb	0	; () banked
 28983  007230  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 28984  007232  B4D8               	btfsc	status,2,c
 28985  007234  D003               	goto	u30560
 28986                           
 28987                           ; BSR set to: 0
 28988  007236  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 28989  007238  A4D8               	btfss	status,2,c
 28990  00723A  0012               	return	
 28991  00723C                     u30560:
 28992                           
 28993                           ; BSR set to: 0
 28994  00723C  0101               	movlb	1	; () banked
 28995  00723E  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 28996  007240  A4D8               	btfss	status,2,c
 28997  007242  0012               	return	
 28998                           
 28999                           ; BSR set to: 1
 29000  007244  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 29001  007246  A4D8               	btfss	status,2,c
 29002  007248  0012               	return	
 29003                           
 29004                           ; BSR set to: 1
 29005                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 29006  00724A  0E03               	movlw	3
 29007  00724C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29008  00724E  A4D8               	btfss	status,2,c
 29009  007250  D008               	goto	l24928
 29010                           
 29011                           ; BSR set to: 1
 29012  007252  0100               	movlb	0	; () banked
 29013  007254  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 29014  007256  A4D8               	btfss	status,2,c
 29015  007258  D004               	goto	l24928
 29016                           
 29017                           ; BSR set to: 0
 29018                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 29019  00725A  0E00               	movlw	0
 29020  00725C  0101               	movlb	1	; () banked
 29021  00725E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29022                           
 29023                           ;inputs_MC50.c: 727:             }
 29024  007260  0012               	return	
 29025  007262                     l24928:
 29026  007262  0101               	movlb	1	; () banked
 29027  007264  0500               	decf	_var_sys& (0+255),w,b	;volatile
 29028  007266  B4D8               	btfsc	status,2,c
 29029  007268  D004               	goto	u30620
 29030                           
 29031                           ; BSR set to: 1
 29032  00726A  0E02               	movlw	2
 29033  00726C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29034  00726E  A4D8               	btfss	status,2,c
 29035  007270  D004               	goto	u30630
 29036  007272                     u30620:
 29037                           
 29038                           ; BSR set to: 1
 29039  007272  0100               	movlb	0	; () banked
 29040  007274  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 29041  007276  B4D8               	btfsc	status,2,c
 29042  007278  D004               	goto	u30640
 29043  00727A                     u30630:
 29044  00727A  0100               	movlb	0	; () banked
 29045  00727C  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 29046  00727E  A4D8               	btfss	status,2,c
 29047  007280  0012               	return	
 29048  007282                     u30640:
 29049                           
 29050                           ; BSR set to: 0
 29051                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 29052  007282  0E00               	movlw	0
 29053  007284  0101               	movlb	1	; () banked
 29054  007286  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29055  007288  0012               	return	
 29056  00728A                     __end_of_ControlInputs:
 29057                           	callstack 0
 29058                           
 29059 ;; *************** function _ControlCurrent *****************
 29060 ;; Defined at:
 29061 ;;		line 342 in file "controlCurrent_MC50.c"
 29062 ;; Parameters:    Size  Location     Type
 29063 ;;		None
 29064 ;; Auto vars:     Size  Location     Type
 29065 ;;		None
 29066 ;; Return value:  Size  Location     Type
 29067 ;;                  1    wreg      void 
 29068 ;; Registers used:
 29069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29070 ;; Tracked objects:
 29071 ;;		On entry : 3E/1
 29072 ;;		On exit  : 3E/0
 29073 ;;		Unchanged: 0/0
 29074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29077 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29079 ;;Total ram usage:        4 bytes
 29080 ;; Hardware stack levels used: 1
 29081 ;; Hardware stack levels required when called: 6
 29082 ;; This function calls:
 29083 ;;		_GetMotorPower
 29084 ;;		_getCurrentComparator
 29085 ;;		_refreshADCZeroOffset
 29086 ;;		_refreshCurrent
 29087 ;; This function is called by:
 29088 ;;		_main
 29089 ;; This function uses a non-reentrant model
 29090 ;;
 29091                           
 29092                           	psect	text119
 29093  006B20                     __ptext119:
 29094                           	callstack 0
 29095  006B20                     _ControlCurrent:
 29096                           	callstack 24
 29097                           
 29098                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 29099                           
 29100                           ;incstack = 0
 29101  006B20  EC1A  F04A         	call	_refreshCurrent	;wreg free
 29102                           
 29103                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 29104  006B24  ECD8  F03A         	call	_refreshADCZeroOffset	;wreg free
 29105                           
 29106                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 29107  006B28  EC9A  F03D         	call	_GetMotorPower	;wreg free
 29108  006B2C  6E23               	movwf	??_ControlCurrent^0,c
 29109  006B2E  5023               	movf	??_ControlCurrent^0,w,c
 29110  006B30  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 29111  006B32  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 29112                           
 29113                           ; BSR set to: 1
 29114                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 29115  006B34  ECA2  F031         	call	_getCurrentComparator	;wreg free
 29116  006B38  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 29117  006B3C  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 29118  006B40  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 29119  006B44  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 29120                           
 29121                           ; BSR set to: 1
 29122                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 29123  006B48  5100               	movf	_var_sys& (0+255),w,b	;volatile
 29124  006B4A  A4D8               	btfss	status,2,c
 29125  006B4C  D00F               	goto	l24584
 29126                           
 29127                           ; BSR set to: 1
 29128                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 29129  006B4E  0E00               	movlw	0
 29130  006B50  0100               	movlb	0	; () banked
 29131  006B52  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29132                           
 29133                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 29134  006B54  0E00               	movlw	0
 29135  006B56  0101               	movlb	1	; () banked
 29136  006B58  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29137                           
 29138                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 29139  006B5A  0E00               	movlw	0
 29140  006B5C  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29141                           
 29142                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 29143  006B5E  0E00               	movlw	0
 29144  006B60  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29145                           
 29146                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 29147  006B62  0E00               	movlw	0
 29148  006B64  6FD8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29149  006B66  0E14               	movlw	20
 29150  006B68  6FD7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29151                           
 29152                           ;controlCurrent_MC50.c: 365:     }
 29153  006B6A  0012               	return	
 29154  006B6C                     l24584:
 29155                           
 29156                           ; BSR set to: 1
 29157  006B6C  517B               	movf	_powerControl_st& (0+255),w,b
 29158  006B6E  A4D8               	btfss	status,2,c
 29159  006B70  D05D               	goto	l24618
 29160                           
 29161                           ; BSR set to: 1
 29162                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 29163  006B72  0E00               	movlw	0
 29164  006B74  6FD8               	movwf	(_ts_system+57)& (0+255),b	;volatile
 29165  006B76  0E14               	movlw	20
 29166  006B78  6FD7               	movwf	(_ts_system+56)& (0+255),b	;volatile
 29167                           
 29168                           ; BSR set to: 1
 29169                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 29170  006B7A  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 29171  006B7C  6E23               	movwf	??_ControlCurrent^0,c
 29172  006B7E  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 29173  006B80  6E24               	movwf	(??_ControlCurrent+1)^0,c
 29174  006B82  6A25               	clrf	(??_ControlCurrent+2)^0,c
 29175  006B84  6A26               	clrf	(??_ControlCurrent+3)^0,c
 29176  006B86  5023               	movf	??_ControlCurrent^0,w,c
 29177  006B88  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29178  006B8A  5024               	movf	(??_ControlCurrent+1)^0,w,c
 29179  006B8C  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29180  006B8E  5025               	movf	(??_ControlCurrent+2)^0,w,c
 29181  006B90  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 29182  006B92  5026               	movf	(??_ControlCurrent+3)^0,w,c
 29183  006B94  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 29184  006B96  B0D8               	btfsc	status,0,c
 29185  006B98  D03E               	goto	l24616
 29186                           
 29187                           ; BSR set to: 1
 29188  006B9A  BFBA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29189  006B9C  D005               	goto	u29690
 29190  006B9E  51BA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29191  006BA0  E13A               	bnz	l24616
 29192  006BA2  05B9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29193  006BA4  B0D8               	btfsc	status,0,c
 29194  006BA6  D037               	goto	l24616
 29195  006BA8                     u29690:
 29196                           
 29197                           ; BSR set to: 1
 29198  006BA8  0100               	movlb	0	; () banked
 29199  006BAA  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 29200  006BAC  B4D8               	btfsc	status,2,c
 29201  006BAE  D033               	goto	l24616
 29202                           
 29203                           ; BSR set to: 0
 29204  006BB0  0101               	movlb	1	; () banked
 29205  006BB2  BFE2               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 29206  006BB4  D005               	goto	u29710
 29207  006BB6  51E2               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 29208  006BB8  E12E               	bnz	l24616
 29209  006BBA  05E1               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 29210  006BBC  B0D8               	btfsc	status,0,c
 29211  006BBE  D02B               	goto	l24616
 29212  006BC0                     u29710:
 29213                           
 29214                           ; BSR set to: 1
 29215                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 29216  006BC0  0100               	movlb	0	; () banked
 29217  006BC2  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 29218  006BC4  B4D8               	btfsc	status,2,c
 29219  006BC6  D00B               	goto	l24602
 29220                           
 29221                           ; BSR set to: 0
 29222                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 29223  006BC8  0101               	movlb	1	; () banked
 29224  006BCA  518D               	movf	_erroranterior& (0+255),w,b	;volatile
 29225  006BCC  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 29226  006BCE  518E               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 29227  006BD0  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 29228  006BD2  B0D8               	btfsc	status,0,c
 29229  006BD4  D004               	goto	l24602
 29230                           
 29231                           ; BSR set to: 1
 29232                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 29233  006BD6  0E00               	movlw	0
 29234  006BD8  0100               	movlb	0	; () banked
 29235  006BDA  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29236                           
 29237                           ;controlCurrent_MC50.c: 384:                  }
 29238  006BDC  D002               	goto	l24604
 29239  006BDE                     l24602:
 29240                           
 29241                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 29242  006BDE  0100               	movlb	0	; () banked
 29243  006BE0  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29244  006BE2                     l24604:
 29245                           
 29246                           ; BSR set to: 0
 29247                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 29248  006BE2  C12E  F18D         	movff	_var_sys+46,_erroranterior	;volatile
 29249  006BE6  C12F  F18E         	movff	_var_sys+47,_erroranterior+1	;volatile
 29250                           
 29251                           ; BSR set to: 0
 29252                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 29253                           
 29254                           ;controlCurrent_MC50.c: 390:              }
 29255  006BEA  0101               	movlb	1	; () banked
 29256  006BEC  BFCE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29257  006BEE  D005               	goto	u29740
 29258  006BF0  51CE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29259  006BF2  E14F               	bnz	l1405
 29260  006BF4  05CD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29261  006BF6  B0D8               	btfsc	status,0,c
 29262  006BF8  0012               	return	
 29263  006BFA                     u29740:
 29264                           
 29265                           ; BSR set to: 1
 29266  006BFA  0E01               	movlw	1
 29267  006BFC  0100               	movlb	0	; () banked
 29268  006BFE  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29269  006C00  0012               	return	
 29270                           
 29271                           ; BSR set to: 0
 29272                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 29273  006C02  0E00               	movlw	0
 29274  006C04  0101               	movlb	1	; () banked
 29275  006C06  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29276                           
 29277                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29278  006C08  0E00               	movlw	0
 29279  006C0A  6FCA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29280  006C0C  0EC8               	movlw	200
 29281  006C0E  6FC9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29282                           
 29283                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 29284  006C10  0E01               	movlw	1
 29285  006C12  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29286  006C14  0012               	return	
 29287  006C16                     l24616:
 29288                           
 29289                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 29290  006C16  0E00               	movlw	0
 29291  006C18  0100               	movlb	0	; () banked
 29292  006C1A  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 29293                           
 29294                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 29295  006C1C  0E00               	movlw	0
 29296  006C1E  0101               	movlb	1	; () banked
 29297  006C20  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29298                           
 29299                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 29300  006C22  0E00               	movlw	0
 29301  006C24  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 29302                           
 29303                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 29304  006C26  0E00               	movlw	0
 29305  006C28  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 29306  006C2A  0012               	return	
 29307  006C2C                     l24618:
 29308                           
 29309                           ; BSR set to: 1
 29310                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 29311  006C2C  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29312  006C2E  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 29313  006C30  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29314  006C32  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 29315  006C34  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29316  006C36  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 29317  006C38  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29318  006C3A  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 29319  006C3C  B0D8               	btfsc	status,0,c
 29320  006C3E  D7EB               	goto	l24616
 29321                           
 29322                           ; BSR set to: 1
 29323  006C40  BFBA               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 29324  006C42  D005               	goto	u29770
 29325  006C44  51BA               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 29326  006C46  E1E7               	bnz	l24616
 29327  006C48  05B9               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 29328  006C4A  B0D8               	btfsc	status,0,c
 29329  006C4C  D7E4               	goto	l24616
 29330  006C4E                     u29770:
 29331                           
 29332                           ; BSR set to: 1
 29333  006C4E  BFD8               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 29334  006C50  D005               	goto	u29780
 29335  006C52  51D8               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 29336  006C54  E1E0               	bnz	l24616
 29337  006C56  05D7               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 29338  006C58  B0D8               	btfsc	status,0,c
 29339  006C5A  D7DD               	goto	l24616
 29340  006C5C                     u29780:
 29341                           
 29342                           ; BSR set to: 1
 29343  006C5C  0100               	movlb	0	; () banked
 29344  006C5E  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 29345  006C60  B4D8               	btfsc	status,2,c
 29346  006C62  D7D9               	goto	l24616
 29347                           
 29348                           ; BSR set to: 0
 29349                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 29350  006C64  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 29351                           
 29352                           ; BSR set to: 0
 29353                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 29354  006C66  0101               	movlb	1	; () banked
 29355  006C68  BFCE               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 29356  006C6A  D005               	goto	u29800
 29357  006C6C  51CE               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 29358  006C6E  E111               	bnz	l1405
 29359  006C70  05CD               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 29360  006C72  B0D8               	btfsc	status,0,c
 29361  006C74  0012               	return	
 29362  006C76                     u29800:
 29363                           
 29364                           ; BSR set to: 1
 29365  006C76  0E02               	movlw	2
 29366  006C78  0100               	movlb	0	; () banked
 29367  006C7A  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 29368  006C7C  0012               	return	
 29369                           
 29370                           ; BSR set to: 0
 29371                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 29372  006C7E  0E00               	movlw	0
 29373  006C80  0101               	movlb	1	; () banked
 29374  006C82  6F00               	movwf	_var_sys& (0+255),b	;volatile
 29375                           
 29376                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 29377  006C84  0E00               	movlw	0
 29378  006C86  6FCA               	movwf	(_ts_system+43)& (0+255),b	;volatile
 29379  006C88  0EC8               	movlw	200
 29380  006C8A  6FC9               	movwf	(_ts_system+42)& (0+255),b	;volatile
 29381                           
 29382                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 29383  006C8C  0E01               	movlw	1
 29384  006C8E  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 29385  006C90  0012               	return	
 29386  006C92                     l1405:
 29387  006C92  0012               	return		;funcret
 29388  006C94                     __end_of_ControlCurrent:
 29389                           	callstack 0
 29390                           
 29391 ;; *************** function _refreshCurrent *****************
 29392 ;; Defined at:
 29393 ;;		line 233 in file "controlCurrent_MC50.c"
 29394 ;; Parameters:    Size  Location     Type
 29395 ;;		None
 29396 ;; Auto vars:     Size  Location     Type
 29397 ;;		None
 29398 ;; Return value:  Size  Location     Type
 29399 ;;                  1    wreg      void 
 29400 ;; Registers used:
 29401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29402 ;; Tracked objects:
 29403 ;;		On entry : 3E/1
 29404 ;;		On exit  : 3F/0
 29405 ;;		Unchanged: 0/0
 29406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29411 ;;Total ram usage:        0 bytes
 29412 ;; Hardware stack levels used: 1
 29413 ;; Hardware stack levels required when called: 5
 29414 ;; This function calls:
 29415 ;;		_saveEnergyADCHist
 29416 ;;		_sumEnergyADC
 29417 ;;		_sumHIST
 29418 ;; This function is called by:
 29419 ;;		_ControlCurrent
 29420 ;; This function uses a non-reentrant model
 29421 ;;
 29422                           
 29423                           	psect	text120
 29424  009434                     __ptext120:
 29425                           	callstack 0
 29426  009434                     _refreshCurrent:
 29427                           	callstack 24
 29428                           
 29429                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 29430                           
 29431                           ;incstack = 0
 29432  009434  0100               	movlb	0	; () banked
 29433  009436  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 29434  009438  A4D8               	btfss	status,2,c
 29435  00943A  D008               	goto	l22738
 29436                           
 29437                           ; BSR set to: 0
 29438  00943C  0101               	movlb	1	; () banked
 29439  00943E  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 29440  009440  D005               	goto	l22738
 29441  009442  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 29442  009444  E109               	bnz	l1372
 29443  009446  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 29444  009448  B0D8               	btfsc	status,0,c
 29445  00944A  D006               	goto	l1372
 29446  00944C                     l22738:
 29447                           
 29448                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 29449  00944C  EC7D  F041         	call	_sumEnergyADC	;wreg free
 29450  009450  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 29451  009454  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 29452  009458                     l1372:
 29453                           
 29454                           ; BSR set to: 1
 29455                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 29456  009458  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 29457  00945C  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 29458  009460  EC3F  F04D         	call	_saveEnergyADCHist	;wreg free
 29459                           
 29460                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 29461  009464  ECD5  F03B         	call	_sumHIST	;wreg free
 29462  009468  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 29463  00946C  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 29464  009470  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 29465  009474  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 29466                           
 29467                           ; BSR set to: 0
 29468  009478  0012               	return		;funcret
 29469  00947A                     __end_of_refreshCurrent:
 29470                           	callstack 0
 29471                           
 29472 ;; *************** function _sumHIST *****************
 29473 ;; Defined at:
 29474 ;;		line 199 in file "controlCurrent_MC50.c"
 29475 ;; Parameters:    Size  Location     Type
 29476 ;;		None
 29477 ;; Auto vars:     Size  Location     Type
 29478 ;;  sumH            4   27[COMRAM] unsigned long 
 29479 ;;  min             2   25[COMRAM] unsigned int 
 29480 ;;  max             2   23[COMRAM] unsigned int 
 29481 ;;  i               1   31[COMRAM] unsigned char 
 29482 ;; Return value:  Size  Location     Type
 29483 ;;                  4   15[COMRAM] unsigned long 
 29484 ;; Registers used:
 29485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29486 ;; Tracked objects:
 29487 ;;		On entry : 3F/0
 29488 ;;		On exit  : 3F/0
 29489 ;;		Unchanged: 3F/0
 29490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29492 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29493 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29494 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29495 ;;Total ram usage:       17 bytes
 29496 ;; Hardware stack levels used: 1
 29497 ;; Hardware stack levels required when called: 4
 29498 ;; This function calls:
 29499 ;;		Nothing
 29500 ;; This function is called by:
 29501 ;;		_refreshCurrent
 29502 ;; This function uses a non-reentrant model
 29503 ;;
 29504                           
 29505                           	psect	text121
 29506  0077AA                     __ptext121:
 29507                           	callstack 0
 29508  0077AA                     _sumHIST:
 29509                           	callstack 24
 29510                           
 29511                           ; BSR set to: 0
 29512                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 29513                           
 29514                           ; BSR set to: 0
 29515                           ;incstack = 0
 29516  0077AA  0E00               	movlw	0
 29517  0077AC  6E1C               	movwf	sumHIST@sumH^0,c
 29518  0077AE  0E00               	movlw	0
 29519  0077B0  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29520  0077B2  0E00               	movlw	0
 29521  0077B4  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29522  0077B6  0E00               	movlw	0
 29523  0077B8  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29524                           
 29525                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 29526  0077BA  0E00               	movlw	0
 29527  0077BC  6E19               	movwf	(sumHIST@max+1)^0,c
 29528  0077BE  0E00               	movlw	0
 29529  0077C0  6E18               	movwf	sumHIST@max^0,c
 29530                           
 29531                           ; BSR set to: 0
 29532                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 29533  0077C2  681A               	setf	sumHIST@min^0,c
 29534  0077C4  681B               	setf	(sumHIST@min+1)^0,c
 29535                           
 29536                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 29537  0077C6  0E00               	movlw	0
 29538  0077C8  6E20               	movwf	sumHIST@i^0,c
 29539  0077CA                     l21266:
 29540                           
 29541                           ; BSR set to: 0
 29542                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 29543  0077CA  5020               	movf	sumHIST@i^0,w,c
 29544  0077CC  0D02               	mullw	2
 29545  0077CE  0E60               	movlw	low _SumEnergyADCHist_array
 29546  0077D0  24F3               	addwf	243,w,c
 29547  0077D2  6ED9               	movwf	fsr2l,c
 29548  0077D4  0E02               	movlw	high _SumEnergyADCHist_array
 29549  0077D6  20F4               	addwfc	prodh,w,c
 29550  0077D8  6EDA               	movwf	fsr2h,c
 29551  0077DA  CFDE F014          	movff	postinc2,??_sumHIST
 29552  0077DE  CFDD F015          	movff	postdec2,??_sumHIST+1
 29553  0077E2  5014               	movf	??_sumHIST^0,w,c
 29554  0077E4  241C               	addwf	sumHIST@sumH^0,w,c
 29555  0077E6  6E1C               	movwf	sumHIST@sumH^0,c
 29556  0077E8  5015               	movf	(??_sumHIST+1)^0,w,c
 29557  0077EA  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 29558  0077EC  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29559  0077EE  0E00               	movlw	0
 29560  0077F0  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 29561  0077F2  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29562  0077F4  0E00               	movlw	0
 29563  0077F6  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 29564  0077F8  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29565                           
 29566                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 29567  0077FA  5020               	movf	sumHIST@i^0,w,c
 29568  0077FC  0D02               	mullw	2
 29569  0077FE  0E60               	movlw	low _SumEnergyADCHist_array
 29570  007800  24F3               	addwf	243,w,c
 29571  007802  6ED9               	movwf	fsr2l,c
 29572  007804  0E02               	movlw	high _SumEnergyADCHist_array
 29573  007806  20F4               	addwfc	prodh,w,c
 29574  007808  6EDA               	movwf	fsr2h,c
 29575  00780A  50DE               	movf	postinc2,w,c
 29576  00780C  5C18               	subwf	sumHIST@max^0,w,c
 29577  00780E  50DE               	movf	postinc2,w,c
 29578  007810  5819               	subwfb	(sumHIST@max+1)^0,w,c
 29579  007812  B0D8               	btfsc	status,0,c
 29580  007814  D00C               	goto	l1366
 29581                           
 29582                           ; BSR set to: 0
 29583                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 29584  007816  5020               	movf	sumHIST@i^0,w,c
 29585  007818  0D02               	mullw	2
 29586  00781A  0E60               	movlw	low _SumEnergyADCHist_array
 29587  00781C  24F3               	addwf	243,w,c
 29588  00781E  6ED9               	movwf	fsr2l,c
 29589  007820  0E02               	movlw	high _SumEnergyADCHist_array
 29590  007822  20F4               	addwfc	prodh,w,c
 29591  007824  6EDA               	movwf	fsr2h,c
 29592  007826  CFDE F018          	movff	postinc2,sumHIST@max
 29593  00782A  CFDD F019          	movff	postdec2,sumHIST@max+1
 29594  00782E                     l1366:
 29595                           
 29596                           ; BSR set to: 0
 29597                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 29598  00782E  5020               	movf	sumHIST@i^0,w,c
 29599  007830  0D02               	mullw	2
 29600  007832  0E60               	movlw	low _SumEnergyADCHist_array
 29601  007834  24F3               	addwf	243,w,c
 29602  007836  6ED9               	movwf	fsr2l,c
 29603  007838  0E02               	movlw	high _SumEnergyADCHist_array
 29604  00783A  20F4               	addwfc	prodh,w,c
 29605  00783C  6EDA               	movwf	fsr2h,c
 29606  00783E  501A               	movf	sumHIST@min^0,w,c
 29607  007840  5CDE               	subwf	postinc2,w,c
 29608  007842  501B               	movf	(sumHIST@min+1)^0,w,c
 29609  007844  58DE               	subwfb	postinc2,w,c
 29610  007846  B0D8               	btfsc	status,0,c
 29611  007848  D00C               	goto	l21272
 29612                           
 29613                           ; BSR set to: 0
 29614                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 29615  00784A  5020               	movf	sumHIST@i^0,w,c
 29616  00784C  0D02               	mullw	2
 29617  00784E  0E60               	movlw	low _SumEnergyADCHist_array
 29618  007850  24F3               	addwf	243,w,c
 29619  007852  6ED9               	movwf	fsr2l,c
 29620  007854  0E02               	movlw	high _SumEnergyADCHist_array
 29621  007856  20F4               	addwfc	prodh,w,c
 29622  007858  6EDA               	movwf	fsr2h,c
 29623  00785A  CFDE F01A          	movff	postinc2,sumHIST@min
 29624  00785E  CFDD F01B          	movff	postdec2,sumHIST@min+1
 29625  007862                     l21272:
 29626                           
 29627                           ; BSR set to: 0
 29628                           ;controlCurrent_MC50.c: 222:     }
 29629  007862  2A20               	incf	sumHIST@i^0,f,c
 29630                           
 29631                           ; BSR set to: 0
 29632  007864  0E09               	movlw	9
 29633  007866  6420               	cpfsgt	sumHIST@i^0,c
 29634  007868  D7B0               	goto	l21266
 29635                           
 29636                           ; BSR set to: 0
 29637                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 29638  00786A  501A               	movf	sumHIST@min^0,w,c
 29639  00786C  2418               	addwf	sumHIST@max^0,w,c
 29640  00786E  6E14               	movwf	??_sumHIST^0,c
 29641  007870  501B               	movf	(sumHIST@min+1)^0,w,c
 29642  007872  2019               	addwfc	(sumHIST@max+1)^0,w,c
 29643  007874  6E15               	movwf	(??_sumHIST+1)^0,c
 29644  007876  6A16               	clrf	(??_sumHIST+2)^0,c
 29645  007878  6A17               	clrf	(??_sumHIST+3)^0,c
 29646  00787A  5014               	movf	??_sumHIST^0,w,c
 29647  00787C  5C1C               	subwf	sumHIST@sumH^0,w,c
 29648  00787E  6E1C               	movwf	sumHIST@sumH^0,c
 29649  007880  5015               	movf	(??_sumHIST+1)^0,w,c
 29650  007882  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 29651  007884  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 29652  007886  5016               	movf	(??_sumHIST+2)^0,w,c
 29653  007888  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 29654  00788A  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 29655  00788C  5017               	movf	(??_sumHIST+3)^0,w,c
 29656  00788E  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 29657  007890  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 29658                           
 29659                           ; BSR set to: 0
 29660                           ;controlCurrent_MC50.c: 226:     return sumH;
 29661  007892  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 29662  007896  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 29663  00789A  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 29664  00789E  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 29665                           
 29666                           ; BSR set to: 0
 29667  0078A2  0012               	return		;funcret
 29668  0078A4                     __end_of_sumHIST:
 29669                           	callstack 0
 29670                           
 29671 ;; *************** function _sumEnergyADC *****************
 29672 ;; Defined at:
 29673 ;;		line 59 in file "controlCurrent_MC50.c"
 29674 ;; Parameters:    Size  Location     Type
 29675 ;;		None
 29676 ;; Auto vars:     Size  Location     Type
 29677 ;;  auxValue        2   21[COMRAM] unsigned int 
 29678 ;;  sumE            2   19[COMRAM] unsigned int 
 29679 ;;  i               1   23[COMRAM] unsigned char 
 29680 ;; Return value:  Size  Location     Type
 29681 ;;                  2   15[COMRAM] unsigned int 
 29682 ;; Registers used:
 29683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29684 ;; Tracked objects:
 29685 ;;		On entry : 3E/0
 29686 ;;		On exit  : 3F/1
 29687 ;;		Unchanged: 0/0
 29688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29690 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29692 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29693 ;;Total ram usage:        9 bytes
 29694 ;; Hardware stack levels used: 1
 29695 ;; Hardware stack levels required when called: 4
 29696 ;; This function calls:
 29697 ;;		Nothing
 29698 ;; This function is called by:
 29699 ;;		_refreshCurrent
 29700 ;; This function uses a non-reentrant model
 29701 ;;
 29702                           
 29703                           	psect	text122
 29704  0082FA                     __ptext122:
 29705                           	callstack 0
 29706  0082FA                     _sumEnergyADC:
 29707                           	callstack 24
 29708                           
 29709                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 29710                           
 29711                           ; BSR set to: 0
 29712                           ;incstack = 0
 29713  0082FA  0E00               	movlw	0
 29714  0082FC  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 29715  0082FE  0E00               	movlw	0
 29716  008300  6E14               	movwf	sumEnergyADC@sumE^0,c
 29717                           
 29718                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 29719  008302  0E00               	movlw	0
 29720  008304  6E18               	movwf	sumEnergyADC@i^0,c
 29721  008306                     l21238:
 29722                           
 29723                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 29724  008306  5018               	movf	sumEnergyADC@i^0,w,c
 29725  008308  0D02               	mullw	2
 29726  00830A  0E00               	movlw	low _ADC_array
 29727  00830C  24F3               	addwf	243,w,c
 29728  00830E  6ED9               	movwf	fsr2l,c
 29729  008310  0E02               	movlw	high _ADC_array
 29730  008312  20F4               	addwfc	prodh,w,c
 29731  008314  6EDA               	movwf	fsr2h,c
 29732  008316  50DE               	movf	postinc2,w,c
 29733  008318  0101               	movlb	1	; () banked
 29734  00831A  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29735  00831C  50DE               	movf	postinc2,w,c
 29736  00831E  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29737  008320  B0D8               	btfsc	status,0,c
 29738  008322  D012               	goto	l21242
 29739                           
 29740                           ; BSR set to: 1
 29741                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 29742  008324  5018               	movf	sumEnergyADC@i^0,w,c
 29743  008326  0D02               	mullw	2
 29744  008328  0E00               	movlw	low _ADC_array
 29745  00832A  24F3               	addwf	243,w,c
 29746  00832C  6ED9               	movwf	fsr2l,c
 29747  00832E  0E02               	movlw	high _ADC_array
 29748  008330  20F4               	addwfc	prodh,w,c
 29749  008332  6EDA               	movwf	fsr2h,c
 29750  008334  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29751  008338  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29752  00833C  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 29753  00833E  5C12               	subwf	??_sumEnergyADC^0,w,c
 29754  008340  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29755  008342  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 29756  008344  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 29757  008346  D011               	goto	L105
 29758  008348                     l21242:
 29759                           
 29760                           ; BSR set to: 1
 29761                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 29762  008348  5018               	movf	sumEnergyADC@i^0,w,c
 29763  00834A  0D02               	mullw	2
 29764  00834C  0E00               	movlw	low _ADC_array
 29765  00834E  24F3               	addwf	243,w,c
 29766  008350  6ED9               	movwf	fsr2l,c
 29767  008352  0E02               	movlw	high _ADC_array
 29768  008354  20F4               	addwfc	prodh,w,c
 29769  008356  6EDA               	movwf	fsr2h,c
 29770  008358  CFDE F012          	movff	postinc2,??_sumEnergyADC
 29771  00835C  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 29772  008360  5012               	movf	??_sumEnergyADC^0,w,c
 29773  008362  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 29774  008364  6E16               	movwf	sumEnergyADC@auxValue^0,c
 29775  008366  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 29776  008368  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 29777  00836A                     L105:
 29778  00836A  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 29779                           
 29780                           ; BSR set to: 1
 29781                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 29782  00836C  5016               	movf	sumEnergyADC@auxValue^0,w,c
 29783  00836E  2614               	addwf	sumEnergyADC@sumE^0,f,c
 29784  008370  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 29785  008372  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 29786                           
 29787                           ; BSR set to: 1
 29788                           ;controlCurrent_MC50.c: 94:     }
 29789  008374  2A18               	incf	sumEnergyADC@i^0,f,c
 29790                           
 29791                           ; BSR set to: 1
 29792  008376  0E1D               	movlw	29
 29793  008378  6418               	cpfsgt	sumEnergyADC@i^0,c
 29794  00837A  D7C5               	goto	l21238
 29795                           
 29796                           ; BSR set to: 1
 29797                           ;controlCurrent_MC50.c: 96:     return sumE;
 29798  00837C  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 29799  008380  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 29800                           
 29801                           ; BSR set to: 1
 29802  008384  0012               	return		;funcret
 29803  008386                     __end_of_sumEnergyADC:
 29804                           	callstack 0
 29805                           
 29806 ;; *************** function _saveEnergyADCHist *****************
 29807 ;; Defined at:
 29808 ;;		line 182 in file "controlCurrent_MC50.c"
 29809 ;; Parameters:    Size  Location     Type
 29810 ;;  valueToSave     2   15[COMRAM] unsigned int 
 29811 ;; Auto vars:     Size  Location     Type
 29812 ;;		None
 29813 ;; Return value:  Size  Location     Type
 29814 ;;                  1    wreg      void 
 29815 ;; Registers used:
 29816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29817 ;; Tracked objects:
 29818 ;;		On entry : 3F/1
 29819 ;;		On exit  : 3F/0
 29820 ;;		Unchanged: 0/0
 29821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29826 ;;Total ram usage:        2 bytes
 29827 ;; Hardware stack levels used: 1
 29828 ;; Hardware stack levels required when called: 4
 29829 ;; This function calls:
 29830 ;;		Nothing
 29831 ;; This function is called by:
 29832 ;;		_refreshCurrent
 29833 ;; This function uses a non-reentrant model
 29834 ;;
 29835                           
 29836                           	psect	text123
 29837  009A7E                     __ptext123:
 29838                           	callstack 0
 29839  009A7E                     _saveEnergyADCHist:
 29840                           	callstack 24
 29841                           
 29842                           ; BSR set to: 1
 29843                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 29844                           
 29845                           ; BSR set to: 1
 29846                           ;incstack = 0
 29847  009A7E  0E09               	movlw	9
 29848  009A80  0100               	movlb	0	; () banked
 29849  009A82  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29850  009A84  D002               	goto	l21254
 29851                           
 29852                           ; BSR set to: 0
 29853                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 29854  009A86  0E00               	movlw	0
 29855  009A88  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 29856  009A8A                     l21254:
 29857                           
 29858                           ; BSR set to: 0
 29859                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 29860  009A8A  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 29861  009A8C  0D02               	mullw	2
 29862  009A8E  0E60               	movlw	low _SumEnergyADCHist_array
 29863  009A90  24F3               	addwf	243,w,c
 29864  009A92  6ED9               	movwf	fsr2l,c
 29865  009A94  0E02               	movlw	high _SumEnergyADCHist_array
 29866  009A96  20F4               	addwfc	prodh,w,c
 29867  009A98  6EDA               	movwf	fsr2h,c
 29868  009A9A  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 29869  009A9E  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 29870                           
 29871                           ; BSR set to: 0
 29872                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 29873  009AA2  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 29874                           
 29875                           ; BSR set to: 0
 29876  009AA4  0012               	return		;funcret
 29877  009AA6                     __end_of_saveEnergyADCHist:
 29878                           	callstack 0
 29879                           
 29880 ;; *************** function _refreshADCZeroOffset *****************
 29881 ;; Defined at:
 29882 ;;		line 103 in file "controlCurrent_MC50.c"
 29883 ;; Parameters:    Size  Location     Type
 29884 ;;		None
 29885 ;; Auto vars:     Size  Location     Type
 29886 ;;  media           2   23[COMRAM] unsigned int 
 29887 ;;  i               1   22[COMRAM] unsigned char 
 29888 ;; Return value:  Size  Location     Type
 29889 ;;                  1    wreg      void 
 29890 ;; Registers used:
 29891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29892 ;; Tracked objects:
 29893 ;;		On entry : 3F/0
 29894 ;;		On exit  : 3C/0
 29895 ;;		Unchanged: 0/0
 29896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29898 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29901 ;;Total ram usage:        3 bytes
 29902 ;; Hardware stack levels used: 1
 29903 ;; Hardware stack levels required when called: 5
 29904 ;; This function calls:
 29905 ;;		___lwdiv
 29906 ;; This function is called by:
 29907 ;;		_ControlCurrent
 29908 ;; This function uses a non-reentrant model
 29909 ;;
 29910                           
 29911                           	psect	text124
 29912  0075B0                     __ptext124:
 29913                           	callstack 0
 29914  0075B0                     _refreshADCZeroOffset:
 29915                           	callstack 24
 29916                           
 29917                           ; BSR set to: 0
 29918                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 29919                           
 29920                           ; BSR set to: 0
 29921                           ;incstack = 0
 29922  0075B0  0E00               	movlw	0
 29923  0075B2  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 29924  0075B4  0E00               	movlw	0
 29925  0075B6  6E18               	movwf	refreshADCZeroOffset@media^0,c
 29926                           
 29927                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 29928  0075B8  0101               	movlb	1	; () banked
 29929  0075BA  5100               	movf	_var_sys& (0+255),w,b	;volatile
 29930  0075BC  A4D8               	btfss	status,2,c
 29931  0075BE  0012               	return	
 29932                           
 29933                           ; BSR set to: 1
 29934                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 29935  0075C0  BFDE               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 29936  0075C2  D005               	goto	u26090
 29937  0075C4  51DE               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 29938  0075C6  E172               	bnz	l1357
 29939  0075C8  05DD               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 29940  0075CA  B0D8               	btfsc	status,0,c
 29941  0075CC  0012               	return	
 29942  0075CE                     u26090:
 29943                           
 29944                           ; BSR set to: 1
 29945                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 29946  0075CE  0E00               	movlw	0
 29947  0075D0  6FDE               	movwf	(_ts_system+63)& (0+255),b	;volatile
 29948  0075D2  0E14               	movlw	20
 29949  0075D4  6FDD               	movwf	(_ts_system+62)& (0+255),b	;volatile
 29950                           
 29951                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 29952  0075D6  0E00               	movlw	0
 29953  0075D8  6E17               	movwf	refreshADCZeroOffset@i^0,c
 29954  0075DA                     l22690:
 29955                           
 29956                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 29957  0075DA  5017               	movf	refreshADCZeroOffset@i^0,w,c
 29958  0075DC  0D02               	mullw	2
 29959  0075DE  0E00               	movlw	low _ADC_array
 29960  0075E0  24F3               	addwf	243,w,c
 29961  0075E2  6ED9               	movwf	fsr2l,c
 29962  0075E4  0E02               	movlw	high _ADC_array
 29963  0075E6  20F4               	addwfc	prodh,w,c
 29964  0075E8  6EDA               	movwf	fsr2h,c
 29965  0075EA  50DE               	movf	postinc2,w,c
 29966  0075EC  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 29967  0075EE  50DD               	movf	postdec2,w,c
 29968  0075F0  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 29969                           
 29970                           ;controlCurrent_MC50.c: 128:             }
 29971  0075F2  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 29972  0075F4  0E1D               	movlw	29
 29973  0075F6  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 29974  0075F8  D7F0               	goto	l22690
 29975                           
 29976                           ;controlCurrent_MC50.c: 130:             media = media/30;
 29977  0075FA  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 29978  0075FE  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 29979  007602  0E00               	movlw	0
 29980  007604  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 29981  007606  0E1E               	movlw	30
 29982  007608  6E12               	movwf	___lwdiv@divisor^0,c
 29983  00760A  EC0A  F049         	call	___lwdiv	;wreg free
 29984  00760E  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 29985  007612  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 29986                           
 29987                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 29988  007616  0EEB               	movlw	235
 29989  007618  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29990  00761A  0E01               	movlw	1
 29991  00761C  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29992  00761E  A0D8               	btfss	status,0,c
 29993  007620  D006               	goto	l22704
 29994  007622  0E12               	movlw	18
 29995  007624  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 29996  007626  0E02               	movlw	2
 29997  007628  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 29998  00762A  A0D8               	btfss	status,0,c
 29999  00762C  D004               	goto	l22706
 30000  00762E                     l22704:
 30001                           
 30002                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 30003  00762E  0E01               	movlw	1
 30004  007630  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30005  007632  0EFE               	movlw	254
 30006  007634  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30007  007636                     l22706:
 30008                           
 30009                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 30010  007636  0E1D               	movlw	29
 30011  007638  0100               	movlb	0	; () banked
 30012  00763A  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 30013  00763C  D002               	goto	l22710
 30014                           
 30015                           ; BSR set to: 0
 30016                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 30017  00763E  0E00               	movlw	0
 30018  007640  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 30019  007642                     l22710:
 30020                           
 30021                           ; BSR set to: 0
 30022                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 30023  007642  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 30024  007644  0D02               	mullw	2
 30025  007646  0E96               	movlw	low _ADC_zero_array
 30026  007648  24F3               	addwf	243,w,c
 30027  00764A  6ED9               	movwf	fsr2l,c
 30028  00764C  0E03               	movlw	high _ADC_zero_array
 30029  00764E  20F4               	addwfc	prodh,w,c
 30030  007650  6EDA               	movwf	fsr2h,c
 30031  007652  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 30032  007656  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 30033                           
 30034                           ; BSR set to: 0
 30035                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 30036  00765A  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 30037                           
 30038                           ; BSR set to: 0
 30039                           ;controlCurrent_MC50.c: 150:             media = 0;
 30040  00765C  0E00               	movlw	0
 30041  00765E  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 30042  007660  0E00               	movlw	0
 30043  007662  6E18               	movwf	refreshADCZeroOffset@media^0,c
 30044                           
 30045                           ; BSR set to: 0
 30046                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 30047  007664  0E00               	movlw	0
 30048  007666  6E17               	movwf	refreshADCZeroOffset@i^0,c
 30049  007668                     l22722:
 30050                           
 30051                           ; BSR set to: 0
 30052                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 30053  007668  5017               	movf	refreshADCZeroOffset@i^0,w,c
 30054  00766A  0D02               	mullw	2
 30055  00766C  0E96               	movlw	low _ADC_zero_array
 30056  00766E  24F3               	addwf	243,w,c
 30057  007670  6ED9               	movwf	fsr2l,c
 30058  007672  0E03               	movlw	high _ADC_zero_array
 30059  007674  20F4               	addwfc	prodh,w,c
 30060  007676  6EDA               	movwf	fsr2h,c
 30061  007678  50DE               	movf	postinc2,w,c
 30062  00767A  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 30063  00767C  50DD               	movf	postdec2,w,c
 30064  00767E  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 30065                           
 30066                           ; BSR set to: 0
 30067                           ;controlCurrent_MC50.c: 159:             }
 30068  007680  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 30069                           
 30070                           ; BSR set to: 0
 30071  007682  0E1D               	movlw	29
 30072  007684  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 30073  007686  D7F0               	goto	l22722
 30074                           
 30075                           ; BSR set to: 0
 30076                           ;controlCurrent_MC50.c: 160:             media = media/30;
 30077  007688  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 30078  00768C  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 30079  007690  0E00               	movlw	0
 30080  007692  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 30081  007694  0E1E               	movlw	30
 30082  007696  6E12               	movwf	___lwdiv@divisor^0,c
 30083  007698  EC0A  F049         	call	___lwdiv	;wreg free
 30084  00769C  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 30085  0076A0  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 30086                           
 30087                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 30088  0076A4  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 30089  0076A8  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 30090  0076AC                     l1357:
 30091  0076AC  0012               	return		;funcret
 30092  0076AE                     __end_of_refreshADCZeroOffset:
 30093                           	callstack 0
 30094                           
 30095 ;; *************** function ___lwdiv *****************
 30096 ;; Defined at:
 30097 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 30098 ;; Parameters:    Size  Location     Type
 30099 ;;  dividend        2   15[COMRAM] unsigned int 
 30100 ;;  divisor         2   17[COMRAM] unsigned int 
 30101 ;; Auto vars:     Size  Location     Type
 30102 ;;  quotient        2   20[COMRAM] unsigned int 
 30103 ;;  counter         1   19[COMRAM] unsigned char 
 30104 ;; Return value:  Size  Location     Type
 30105 ;;                  2   15[COMRAM] unsigned int 
 30106 ;; Registers used:
 30107 ;;		wreg, status,2, status,0
 30108 ;; Tracked objects:
 30109 ;;		On entry : 3C/2
 30110 ;;		On exit  : 3C/0
 30111 ;;		Unchanged: 3C/0
 30112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30114 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30116 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30117 ;;Total ram usage:        7 bytes
 30118 ;; Hardware stack levels used: 1
 30119 ;; Hardware stack levels required when called: 4
 30120 ;; This function calls:
 30121 ;;		Nothing
 30122 ;; This function is called by:
 30123 ;;		_refreshADCZeroOffset
 30124 ;;		_sm_execute_menuConfiguration
 30125 ;; This function uses a non-reentrant model
 30126 ;;
 30127                           
 30128                           	psect	text125
 30129  009214                     __ptext125:
 30130                           	callstack 0
 30131  009214                     ___lwdiv:
 30132                           	callstack 24
 30133                           
 30134                           ;incstack = 0
 30135  009214  0E00               	movlw	0
 30136  009216  6E16               	movwf	(___lwdiv@quotient+1)^0,c
 30137  009218  0E00               	movlw	0
 30138  00921A  6E15               	movwf	___lwdiv@quotient^0,c
 30139  00921C  5012               	movf	___lwdiv@divisor^0,w,c
 30140  00921E  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 30141  009220  B4D8               	btfsc	status,2,c
 30142  009222  D01C               	goto	l4286
 30143  009224  0E01               	movlw	1
 30144  009226  6E14               	movwf	___lwdiv@counter^0,c
 30145  009228  D004               	goto	l22534
 30146  00922A                     l22532:
 30147  00922A  90D8               	bcf	status,0,c
 30148  00922C  3612               	rlcf	___lwdiv@divisor^0,f,c
 30149  00922E  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 30150  009230  2A14               	incf	___lwdiv@counter^0,f,c
 30151  009232                     l22534:
 30152  009232  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 30153  009234  D7FA               	goto	l22532
 30154  009236                     u26020:
 30155  009236  90D8               	bcf	status,0,c
 30156  009238  3615               	rlcf	___lwdiv@quotient^0,f,c
 30157  00923A  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
 30158  00923C  5012               	movf	___lwdiv@divisor^0,w,c
 30159  00923E  5C10               	subwf	___lwdiv@dividend^0,w,c
 30160  009240  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30161  009242  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 30162  009244  A0D8               	btfss	status,0,c
 30163  009246  D005               	goto	l22544
 30164  009248  5012               	movf	___lwdiv@divisor^0,w,c
 30165  00924A  5E10               	subwf	___lwdiv@dividend^0,f,c
 30166  00924C  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 30167  00924E  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 30168  009250  8015               	bsf	___lwdiv@quotient^0,0,c
 30169  009252                     l22544:
 30170  009252  90D8               	bcf	status,0,c
 30171  009254  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 30172  009256  3212               	rrcf	___lwdiv@divisor^0,f,c
 30173  009258  2E14               	decfsz	___lwdiv@counter^0,f,c
 30174  00925A  D7ED               	goto	u26020
 30175  00925C                     l4286:
 30176  00925C  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
 30177  009260  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30178  009264  0012               	return		;funcret
 30179  009266                     __end_of___lwdiv:
 30180                           	callstack 0
 30181                           
 30182 ;; *************** function _getCurrentComparator *****************
 30183 ;; Defined at:
 30184 ;;		line 264 in file "controlCurrent_MC50.c"
 30185 ;; Parameters:    Size  Location     Type
 30186 ;;		None
 30187 ;; Auto vars:     Size  Location     Type
 30188 ;;  x               1   33[COMRAM] unsigned char 
 30189 ;;  tempOffset      2   31[COMRAM] unsigned int 
 30190 ;; Return value:  Size  Location     Type
 30191 ;;                  4   21[COMRAM] unsigned long 
 30192 ;; Registers used:
 30193 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30194 ;; Tracked objects:
 30195 ;;		On entry : 3F/1
 30196 ;;		On exit  : 3F/1
 30197 ;;		Unchanged: 0/0
 30198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30200 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30201 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30202 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30203 ;;Total ram usage:       13 bytes
 30204 ;; Hardware stack levels used: 1
 30205 ;; Hardware stack levels required when called: 5
 30206 ;; This function calls:
 30207 ;;		___wmul
 30208 ;; This function is called by:
 30209 ;;		_ControlCurrent
 30210 ;; This function uses a non-reentrant model
 30211 ;;
 30212                           
 30213                           	psect	text126
 30214  006344                     __ptext126:
 30215                           	callstack 0
 30216  006344                     _getCurrentComparator:
 30217                           	callstack 24
 30218                           
 30219                           ; BSR set to: 1
 30220                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 30221                           
 30222                           ; BSR set to: 1
 30223                           
 30224                           ;incstack = 0
 30225  006344  BFB6               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 30226  006346  D00A               	goto	l22746
 30227  006348  51B6               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 30228  00634A  E103               	bnz	u26170
 30229  00634C  05B5               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 30230  00634E  A0D8               	btfss	status,0,c
 30231  006350  D005               	goto	l22746
 30232  006352                     u26170:
 30233                           
 30234                           ; BSR set to: 1
 30235                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 30236  006352  0E00               	movlw	0
 30237  006354  6FDA               	movwf	(_ts_system+59)& (0+255),b	;volatile
 30238  006356  0E14               	movlw	20
 30239  006358  6FD9               	movwf	(_ts_system+58)& (0+255),b	;volatile
 30240  00635A  D007               	goto	u26180
 30241  00635C                     l22746:
 30242                           
 30243                           ; BSR set to: 1
 30244  00635C  BFDA               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 30245  00635E  D009               	goto	l22750
 30246  006360  51DA               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 30247  006362  E103               	bnz	u26180
 30248  006364  05D9               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 30249  006366  A0D8               	btfss	status,0,c
 30250  006368  D004               	goto	l22750
 30251  00636A                     u26180:
 30252                           
 30253                           ; BSR set to: 1
 30254                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 30255  00636A  0E04               	movlw	4
 30256  00636C  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30257  00636E  0EB0               	movlw	176
 30258  006370  D003               	goto	L106
 30259  006372                     l22750:
 30260                           
 30261                           ; BSR set to: 1
 30262                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 30263  006372  0E00               	movlw	0
 30264  006374  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 30265  006376  0E00               	movlw	0
 30266  006378                     L106:
 30267  006378  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 30268                           
 30269                           ; BSR set to: 1
 30270                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 30271  00637A  517B               	movf	_powerControl_st& (0+255),w,b
 30272  00637C  A4D8               	btfss	status,2,c
 30273  00637E  D05B               	goto	l22766
 30274                           
 30275                           ; BSR set to: 1
 30276                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 30277  006380  0E03               	movlw	3
 30278  006382  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30279  006384  A4D8               	btfss	status,2,c
 30280  006386  D005               	goto	l22756
 30281                           
 30282                           ; BSR set to: 1
 30283                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 30284  006388  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 30285  00638C  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 30286  006390  D004               	goto	L107
 30287  006392                     l22756:
 30288                           
 30289                           ; BSR set to: 1
 30290                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 30291  006392  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 30292  006396  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 30293  00639A                     L107:
 30294  00639A  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 30295  00639C  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 30296                           
 30297                           ; BSR set to: 1
 30298                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 30299  00639E  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30300  0063A0  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30301  0063A2  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 30302  0063A4  E104               	bnz	u26210
 30303  0063A6  0E65               	movlw	101
 30304  0063A8  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30305  0063AA  A0D8               	btfss	status,0,c
 30306  0063AC  D009               	goto	u26220
 30307  0063AE                     u26210:
 30308                           
 30309                           ; BSR set to: 1
 30310  0063AE  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30311  0063B0  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30312  0063B2  E106               	bnz	u26220
 30313  0063B4  0EC5               	movlw	197
 30314  0063B6  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30315  0063B8  0E3B               	movlw	59
 30316  0063BA  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30317  0063BC  A0D8               	btfss	status,0,c
 30318  0063BE  D004               	goto	l1383
 30319  0063C0                     u26220:
 30320                           
 30321                           ; BSR set to: 1
 30322                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 30323  0063C0  0EC4               	movlw	196
 30324  0063C2  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30325  0063C4  0E3B               	movlw	59
 30326  0063C6  D058               	goto	L109
 30327  0063C8                     l1383:
 30328                           
 30329                           ; BSR set to: 1
 30330                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 30331  0063C8  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 30332                           
 30333                           ; BSR set to: 1
 30334                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 30335  0063CC  5022               	movf	getCurrentComparator@x^0,w,c
 30336  0063CE  0222               	mulwf	getCurrentComparator@x^0,c
 30337  0063D0  CFF3 F010          	movff	prodl,___wmul@multiplier
 30338  0063D4  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 30339  0063D8  0E00               	movlw	0
 30340  0063DA  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30341  0063DC  0E0A               	movlw	10
 30342  0063DE  6E12               	movwf	___wmul@multiplicand^0,c
 30343  0063E0  EC79  F04D         	call	___wmul	;wreg free
 30344  0063E4  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 30345  0063E8  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 30346  0063EC  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 30347  0063F0  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30348  0063F2  0EFF               	movlw	255
 30349  0063F4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30350  0063F6  0E38               	movlw	56
 30351  0063F8  6E12               	movwf	___wmul@multiplicand^0,c
 30352  0063FA  EC79  F04D         	call	___wmul	;wreg free
 30353  0063FE  5010               	movf	?___wmul^0,w,c
 30354  006400  261A               	addwf	??_getCurrentComparator^0,f,c
 30355  006402  5011               	movf	(?___wmul+1)^0,w,c
 30356  006404  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 30357  006406  0E14               	movlw	20
 30358  006408  241A               	addwf	??_getCurrentComparator^0,w,c
 30359  00640A  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 30360  00640C  0E05               	movlw	5
 30361  00640E  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 30362  006410  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30363  006412  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 30364  006414  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 30365  006416  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 30366  006418  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 30367  00641A  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 30368  00641C  0101               	movlb	1	; () banked
 30369  00641E  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 30370  006420  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 30371  006422  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30372  006424  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 30373  006426  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 30374  006428  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30375  00642A  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 30376  00642C  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 30377  00642E  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30378  006430  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30379  006432  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 30380  006434  D046               	goto	L108
 30381  006436                     l22766:
 30382                           
 30383                           ; BSR set to: 1
 30384                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 30385  006436  0E03               	movlw	3
 30386  006438  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 30387  00643A  A4D8               	btfss	status,2,c
 30388  00643C  D009               	goto	l1388
 30389                           
 30390                           ; BSR set to: 1
 30391                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 30392  00643E  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 30393  006442  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 30394  006446  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 30395  00644A  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 30396                           
 30397                           ;controlCurrent_MC50.c: 315:         }
 30398  00644E  D008               	goto	l22770
 30399  006450                     l1388:
 30400                           
 30401                           ; BSR set to: 1
 30402                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 30403  006450  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 30404  006454  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 30405  006458  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 30406  00645C  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 30407  006460                     l22770:
 30408                           
 30409                           ; BSR set to: 1
 30410                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 30411  006460  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 30412  006462  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 30413  006464  E10E               	bnz	l22774
 30414  006466  0E89               	movlw	137
 30415  006468  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30416  00646A  0E13               	movlw	19
 30417  00646C  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30418  00646E  B0D8               	btfsc	status,0,c
 30419  006470  D008               	goto	l22774
 30420                           
 30421                           ; BSR set to: 1
 30422                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 30423  006472  0E88               	movlw	136
 30424  006474  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30425  006476  0E13               	movlw	19
 30426  006478                     L109:
 30427  006478  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30428  00647A  0E00               	movlw	0
 30429  00647C  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30430  00647E  0E00               	movlw	0
 30431  006480  D020               	goto	L108
 30432  006482                     l22774:
 30433                           
 30434                           ; BSR set to: 1
 30435                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 30436  006482  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 30437  006486  6A11               	clrf	(___wmul@multiplier+1)^0,c
 30438  006488  0EFE               	movlw	254
 30439  00648A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 30440  00648C  0E0C               	movlw	12
 30441  00648E  6E12               	movwf	___wmul@multiplicand^0,c
 30442  006490  EC79  F04D         	call	___wmul	;wreg free
 30443  006494  0E38               	movlw	56
 30444  006496  2410               	addwf	?___wmul^0,w,c
 30445  006498  6E1A               	movwf	??_getCurrentComparator^0,c
 30446  00649A  0E18               	movlw	24
 30447  00649C  2011               	addwfc	(?___wmul+1)^0,w,c
 30448  00649E  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 30449  0064A0  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 30450  0064A2  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 30451  0064A4  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 30452  0064A6  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30453  0064A8  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 30454  0064AA  501A               	movf	??_getCurrentComparator^0,w,c
 30455  0064AC  0101               	movlb	1	; () banked
 30456  0064AE  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 30457  0064B0  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 30458  0064B2  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 30459  0064B4  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 30460  0064B6  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 30461  0064B8  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 30462  0064BA  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 30463  0064BC  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 30464  0064BE  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 30465  0064C0  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 30466  0064C2                     L108:
 30467  0064C2  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 30468                           
 30469                           ; BSR set to: 1
 30470                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 30471  0064C4  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 30472  0064C6  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 30473  0064C8  6E16               	movwf	?_getCurrentComparator^0,c
 30474  0064CA  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 30475  0064CC  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 30476  0064CE  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 30477  0064D0  0E00               	movlw	0
 30478  0064D2  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 30479  0064D4  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 30480  0064D6  0E00               	movlw	0
 30481  0064D8  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 30482  0064DA  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 30483                           
 30484                           ; BSR set to: 1
 30485  0064DC  0012               	return		;funcret
 30486  0064DE                     __end_of_getCurrentComparator:
 30487                           	callstack 0
 30488                           
 30489 ;; *************** function ___wmul *****************
 30490 ;; Defined at:
 30491 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 30492 ;; Parameters:    Size  Location     Type
 30493 ;;  multiplier      2   15[COMRAM] unsigned int 
 30494 ;;  multiplicand    2   17[COMRAM] unsigned int 
 30495 ;; Auto vars:     Size  Location     Type
 30496 ;;  product         2   19[COMRAM] unsigned int 
 30497 ;; Return value:  Size  Location     Type
 30498 ;;                  2   15[COMRAM] unsigned int 
 30499 ;; Registers used:
 30500 ;;		wreg, status,2, status,0, prodl, prodh
 30501 ;; Tracked objects:
 30502 ;;		On entry : 0/0
 30503 ;;		On exit  : 0/0
 30504 ;;		Unchanged: 0/0
 30505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30509 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30510 ;;Total ram usage:        6 bytes
 30511 ;; Hardware stack levels used: 1
 30512 ;; Hardware stack levels required when called: 4
 30513 ;; This function calls:
 30514 ;;		Nothing
 30515 ;; This function is called by:
 30516 ;;		_getCurrentComparator
 30517 ;;		_getHopCode
 30518 ;; This function uses a non-reentrant model
 30519 ;;
 30520                           
 30521                           	psect	text127
 30522  009AF2                     __ptext127:
 30523                           	callstack 0
 30524  009AF2                     ___wmul:
 30525                           	callstack 22
 30526                           
 30527                           ; BSR set to: 1
 30528                           ;incstack = 0
 30529  009AF2  5010               	movf	___wmul@multiplier^0,w,c
 30530  009AF4  0212               	mulwf	___wmul@multiplicand^0,c
 30531  009AF6  CFF3 F014          	movff	prodl,___wmul@product
 30532  009AFA  CFF4 F015          	movff	prodh,___wmul@product+1
 30533  009AFE  5010               	movf	___wmul@multiplier^0,w,c
 30534  009B00  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 30535  009B02  50F3               	movf	243,w,c
 30536  009B04  2615               	addwf	(___wmul@product+1)^0,f,c
 30537  009B06  5011               	movf	(___wmul@multiplier+1)^0,w,c
 30538  009B08  0212               	mulwf	___wmul@multiplicand^0,c
 30539  009B0A  50F3               	movf	243,w,c
 30540  009B0C  2615               	addwf	(___wmul@product+1)^0,f,c
 30541  009B0E  C014  F010         	movff	___wmul@product,?___wmul
 30542  009B12  C015  F011         	movff	___wmul@product+1,?___wmul+1
 30543  009B16  0012               	return		;funcret
 30544  009B18                     __end_of___wmul:
 30545                           	callstack 0
 30546                           
 30547 ;; *************** function _GetMotorPower *****************
 30548 ;; Defined at:
 30549 ;;		line 405 in file "outputs_MC50.c"
 30550 ;; Parameters:    Size  Location     Type
 30551 ;;		None
 30552 ;; Auto vars:     Size  Location     Type
 30553 ;;  defineatraso    1   18[COMRAM] unsigned char 
 30554 ;; Return value:  Size  Location     Type
 30555 ;;                  1    wreg      unsigned char 
 30556 ;; Registers used:
 30557 ;;		wreg, status,2, status,0, prodl, prodh
 30558 ;; Tracked objects:
 30559 ;;		On entry : 3C/1
 30560 ;;		On exit  : 3F/1
 30561 ;;		Unchanged: 0/0
 30562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30565 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30567 ;;Total ram usage:        4 bytes
 30568 ;; Hardware stack levels used: 1
 30569 ;; Hardware stack levels required when called: 4
 30570 ;; This function calls:
 30571 ;;		Nothing
 30572 ;; This function is called by:
 30573 ;;		_ControlCurrent
 30574 ;;		_InitSoftStart
 30575 ;;		_InitSoftStop
 30576 ;; This function uses a non-reentrant model
 30577 ;;
 30578                           
 30579                           	psect	text128
 30580  007B34                     __ptext128:
 30581                           	callstack 0
 30582  007B34                     _GetMotorPower:
 30583                           	callstack 22
 30584                           
 30585                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 30586                           
 30587                           ;incstack = 0
 30588  007B34  0101               	movlb	1	; () banked
 30589  007B36  057B               	decf	_powerControl_st& (0+255),w,b
 30590  007B38  A4D8               	btfss	status,2,c
 30591  007B3A  D006               	goto	l20472
 30592                           
 30593                           ; BSR set to: 1
 30594                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 30595  007B3C  0100               	movlb	0	; () banked
 30596  007B3E  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30597  007B40  0D06               	mullw	6
 30598  007B42  CFF3 F193          	movff	prodl,_temppower
 30599                           
 30600                           ;outputs_MC50.c: 416:     }
 30601  007B46  D043               	goto	l2240
 30602  007B48                     l20472:
 30603                           
 30604                           ; BSR set to: 1
 30605                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 30606  007B48  0100               	movlb	0	; () banked
 30607  007B4A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 30608  007B4C  0D06               	mullw	6
 30609  007B4E  CFF3 F082          	movff	prodl,_fullmotorPower
 30610                           
 30611                           ; BSR set to: 0
 30612                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 30613  007B52  0101               	movlb	1	; () banked
 30614  007B54  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30615  007B56  D01C               	goto	l20482
 30616  007B58  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30617  007B5A  E103               	bnz	u23410
 30618  007B5C  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30619  007B5E  A0D8               	btfss	status,0,c
 30620  007B60  D017               	goto	l20482
 30621  007B62                     u23410:
 30622                           
 30623                           ; BSR set to: 1
 30624                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 30625  007B62  0100               	movlb	0	; () banked
 30626  007B64  5182               	movf	_fullmotorPower& (0+255),w,b
 30627  007B66  6E10               	movwf	??_GetMotorPower^0,c
 30628  007B68  6A11               	clrf	(??_GetMotorPower+1)^0,c
 30629  007B6A  0101               	movlb	1	; () banked
 30630  007B6C  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30631  007B6E  5C10               	subwf	??_GetMotorPower^0,w,c
 30632  007B70  5011               	movf	(??_GetMotorPower+1)^0,w,c
 30633  007B72  0A80               	xorlw	128
 30634  007B74  6E12               	movwf	(??_GetMotorPower+2)^0,c
 30635  007B76  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30636  007B78  0A80               	xorlw	128
 30637  007B7A  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 30638  007B7C  B0D8               	btfsc	status,0,c
 30639  007B7E  D002               	goto	l20480
 30640                           
 30641                           ; BSR set to: 1
 30642                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 30643  007B80  0E01               	movlw	1
 30644  007B82  D004               	goto	L111
 30645  007B84                     l20480:
 30646                           
 30647                           ; BSR set to: 1
 30648                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 30649  007B84  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 30650  007B86  0100               	movlb	0	; () banked
 30651  007B88  5D82               	subwf	_fullmotorPower& (0+255),w,b
 30652  007B8A  D017               	goto	L112
 30653  007B8C                     L111:
 30654  007B8C  6F93               	movwf	_temppower& (0+255),b
 30655  007B8E  D01F               	goto	l2240
 30656  007B90                     l20482:
 30657                           
 30658                           ; BSR set to: 1
 30659  007B90  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30660  007B92  D005               	goto	u23430
 30661  007B94  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30662  007B96  E113               	bnz	l20492
 30663  007B98  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30664  007B9A  B0D8               	btfsc	status,0,c
 30665  007B9C  D010               	goto	l20492
 30666  007B9E                     u23430:
 30667                           
 30668                           ; BSR set to: 1
 30669  007B9E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30670  007BA0  D005               	goto	u23440
 30671  007BA2  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30672  007BA4  E10C               	bnz	l20492
 30673  007BA6  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30674  007BA8  B0D8               	btfsc	status,0,c
 30675  007BAA  D009               	goto	l20492
 30676  007BAC                     u23440:
 30677                           
 30678                           ; BSR set to: 1
 30679                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 30680  007BAC  C082  F193         	movff	_fullmotorPower,_temppower
 30681                           
 30682                           ; BSR set to: 1
 30683                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 30684  007BB0  0E08               	movlw	8
 30685  007BB2  0100               	movlb	0	; () banked
 30686  007BB4  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 30687  007BB6  D00B               	goto	l2240
 30688                           
 30689                           ; BSR set to: 0
 30690                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 30691  007BB8  0E3A               	movlw	58
 30692  007BBA                     L112:
 30693  007BBA  0101               	movlb	1	; () banked
 30694  007BBC  D7E7               	goto	L111
 30695  007BBE                     l20492:
 30696                           
 30697                           ; BSR set to: 1
 30698  007BBE  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30699  007BC0  D006               	goto	l2240
 30700  007BC2  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30701  007BC4  E102               	bnz	u23460
 30702  007BC6  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30703  007BC8  B0D8               	btfsc	status,0,c
 30704  007BCA                     u23460:
 30705                           
 30706                           ; BSR set to: 1
 30707                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 30708  007BCA  C110  F193         	movff	_var_sys+16,_temppower	;volatile
 30709  007BCE                     l2240:
 30710                           
 30711                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 30712  007BCE  0101               	movlb	1	; () banked
 30713  007BD0  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 30714  007BD2  D00E               	goto	l20502
 30715  007BD4  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 30716  007BD6  E103               	bnz	u23470
 30717  007BD8  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 30718  007BDA  A0D8               	btfss	status,0,c
 30719  007BDC  D009               	goto	l20502
 30720  007BDE                     u23470:
 30721                           
 30722                           ; BSR set to: 1
 30723  007BDE  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 30724  007BE0  D005               	goto	u23480
 30725  007BE2  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 30726  007BE4  E105               	bnz	l20502
 30727  007BE6  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 30728  007BE8  B0D8               	btfsc	status,0,c
 30729  007BEA  D002               	goto	l20502
 30730  007BEC                     u23480:
 30731                           
 30732                           ; BSR set to: 1
 30733                           ;outputs_MC50.c: 452:     defineatraso = 5;
 30734  007BEC  0E05               	movlw	5
 30735  007BEE  D001               	goto	L110
 30736  007BF0                     l20502:
 30737                           
 30738                           ; BSR set to: 1
 30739                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 30740  007BF0  0E17               	movlw	23
 30741  007BF2                     L110:
 30742  007BF2  6E13               	movwf	GetMotorPower@defineatraso^0,c
 30743                           
 30744                           ; BSR set to: 1
 30745                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 30746  007BF4  5193               	movf	_temppower& (0+255),w,b
 30747  007BF6  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 30748                           
 30749                           ; BSR set to: 1
 30750  007BF8  0012               	return		;funcret
 30751  007BFA                     __end_of_GetMotorPower:
 30752                           	callstack 0
 30753                           
 30754 ;; *************** function _ControlCounterMoves *****************
 30755 ;; Defined at:
 30756 ;;		line 305 in file "controlMemory_MC50.c"
 30757 ;; Parameters:    Size  Location     Type
 30758 ;;		None
 30759 ;; Auto vars:     Size  Location     Type
 30760 ;;		None
 30761 ;; Return value:  Size  Location     Type
 30762 ;;                  1    wreg      void 
 30763 ;; Registers used:
 30764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30765 ;; Tracked objects:
 30766 ;;		On entry : 3E/1
 30767 ;;		On exit  : 0/0
 30768 ;;		Unchanged: 0/0
 30769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30774 ;;Total ram usage:        0 bytes
 30775 ;; Hardware stack levels used: 1
 30776 ;; Hardware stack levels required when called: 14
 30777 ;; This function calls:
 30778 ;;		_SaveNVM_VarSystem
 30779 ;; This function is called by:
 30780 ;;		_main
 30781 ;; This function uses a non-reentrant model
 30782 ;;
 30783                           
 30784                           	psect	text129
 30785  00900C                     __ptext129:
 30786                           	callstack 0
 30787  00900C                     _ControlCounterMoves:
 30788                           	callstack 16
 30789                           
 30790                           ;controlMemory_MC50.c: 308:     if(ts_system.timeBetweenSaveCounters<=0)
 30791                           
 30792                           ; BSR set to: 1
 30793                           ;incstack = 0
 30794  00900C  0101               	movlb	1	; () banked
 30795  00900E  BFC6               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 30796  009010  D005               	goto	u29840
 30797  009012  51C6               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 30798  009014  E127               	bnz	l1491
 30799  009016  05C5               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 30800  009018  B0D8               	btfsc	status,0,c
 30801  00901A  0012               	return	
 30802  00901C                     u29840:
 30803                           
 30804                           ; BSR set to: 1
 30805                           ;controlMemory_MC50.c: 309:     {;controlMemory_MC50.c: 310:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 30806  00901C  0E17               	movlw	23
 30807  00901E  6FC6               	movwf	(_ts_system+39)& (0+255),b	;volatile
 30808  009020  0E70               	movlw	112
 30809  009022  6FC5               	movwf	(_ts_system+38)& (0+255),b	;volatile
 30810                           
 30811                           ; BSR set to: 1
 30812                           ;controlMemory_MC50.c: 312:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 30813  009024  0100               	movlb	0	; () banked
 30814  009026  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 30815  009028  0101               	movlb	1	; () banked
 30816  00902A  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 30817  00902C  E110               	bnz	u29850
 30818  00902E  0100               	movlb	0	; () banked
 30819  009030  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 30820  009032  0101               	movlb	1	; () banked
 30821  009034  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 30822  009036  E10B               	bnz	u29850
 30823  009038  0100               	movlb	0	; () banked
 30824  00903A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 30825  00903C  0101               	movlb	1	; () banked
 30826  00903E  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 30827  009040  E106               	bnz	u29850
 30828  009042  0100               	movlb	0	; () banked
 30829  009044  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 30830  009046  0101               	movlb	1	; () banked
 30831  009048  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 30832  00904A  B4D8               	btfsc	status,2,c
 30833  00904C  0012               	return	
 30834  00904E                     u29850:
 30835                           
 30836                           ; BSR set to: 1
 30837                           ;controlMemory_MC50.c: 313:        {;controlMemory_MC50.c: 314:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 30838  00904E  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 30839  009052  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 30840  009056  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 30841  00905A  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 30842                           
 30843                           ; BSR set to: 1
 30844                           ;controlMemory_MC50.c: 315:            SaveNVM_VarSystem(pageMemoryCounters);
 30845  00905E  0E02               	movlw	2
 30846  009060  EC5D  F04B         	call	_SaveNVM_VarSystem
 30847  009064                     l1491:
 30848  009064  0012               	return		;funcret
 30849  009066                     __end_of_ControlCounterMoves:
 30850                           	callstack 0
 30851                           
 30852 ;; *************** function _SaveNVM_VarSystem *****************
 30853 ;; Defined at:
 30854 ;;		line 187 in file "controlMemory_MC50.c"
 30855 ;; Parameters:    Size  Location     Type
 30856 ;;  page            1    wreg     unsigned char 
 30857 ;; Auto vars:     Size  Location     Type
 30858 ;;  page            1    0[BANK0 ] unsigned char 
 30859 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 30860 ;;  point           1    3[BANK0 ] PTR unsigned char 
 30861 ;;		 -> var_sys_NVM(64), 
 30862 ;; Return value:  Size  Location     Type
 30863 ;;                  1    wreg      void 
 30864 ;; Registers used:
 30865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30866 ;; Tracked objects:
 30867 ;;		On entry : 0/0
 30868 ;;		On exit  : 0/0
 30869 ;;		Unchanged: 0/0
 30870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30872 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30874 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30875 ;;Total ram usage:        4 bytes
 30876 ;; Hardware stack levels used: 1
 30877 ;; Hardware stack levels required when called: 13
 30878 ;; This function calls:
 30879 ;;		_i2c_writeNBytes
 30880 ;; This function is called by:
 30881 ;;		_loadNVM_VarSystem
 30882 ;;		_ResetDefaultMemory
 30883 ;;		_ControlCounterMoves
 30884 ;;		_checkNVM_VarSystem
 30885 ;;		_sm_execute_ControlLearning
 30886 ;;		_sm_execute_menuConfiguration
 30887 ;;		_setValueToEdit
 30888 ;;		_controlSelectRemote
 30889 ;;		_eusartparser
 30890 ;; This function uses a non-reentrant model
 30891 ;;
 30892                           
 30893                           	psect	text130
 30894  0096BA                     __ptext130:
 30895                           	callstack 0
 30896  0096BA                     _SaveNVM_VarSystem:
 30897                           	callstack 14
 30898                           
 30899                           ;incstack = 0
 30900                           ;SaveNVM_VarSystem@page stored from wreg
 30901  0096BA  0100               	movlb	0	; () banked
 30902  0096BC  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 30903                           
 30904                           ;controlMemory_MC50.c: 187: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 188: {;controlMemory_MC50.c: 189:     unsigned int tempAdd=page*16;
 30905  0096BE  0100               	movlb	0	; () banked
 30906  0096C0  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 30907  0096C2  0D10               	mullw	16
 30908  0096C4  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 30909  0096C8  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 30910                           
 30911                           ; BSR set to: 0
 30912                           ;controlMemory_MC50.c: 190:     char* point=(char*)&var_sys_NVM;
 30913  0096CC  0E98               	movlw	low _var_sys_NVM
 30914  0096CE  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30915                           
 30916                           ; BSR set to: 0
 30917                           ;controlMemory_MC50.c: 191:     point=point+tempAdd;
 30918  0096D0  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 30919  0096D2  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 30920  0096D4  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 30921                           
 30922                           ; BSR set to: 0
 30923                           ;controlMemory_MC50.c: 192:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 30924  0096D6  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 30925  0096DA  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 30926  0096DE  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 30927  0096E2  0E00               	movlw	0
 30928  0096E4  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 30929  0096E6  0E10               	movlw	16
 30930  0096E8  6E25               	movwf	i2c_writeNBytes@len^0,c
 30931  0096EA  0E50               	movlw	80
 30932  0096EC  EC02  F045         	call	_i2c_writeNBytes
 30933  0096F0  0012               	return		;funcret
 30934  0096F2                     __end_of_SaveNVM_VarSystem:
 30935                           	callstack 0
 30936                           
 30937 ;; *************** function _i2c_writeNBytes *****************
 30938 ;; Defined at:
 30939 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 30940 ;; Parameters:    Size  Location     Type
 30941 ;;  address         1    wreg     unsigned char 
 30942 ;;  reg             2   33[COMRAM] unsigned short 
 30943 ;;  data            1   35[COMRAM] PTR void 
 30944 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 30945 ;;  len             2   36[COMRAM] unsigned int 
 30946 ;; Auto vars:     Size  Location     Type
 30947 ;;  address         1   56[COMRAM] unsigned char 
 30948 ;;  dat            17   39[COMRAM] unsigned char [17]
 30949 ;; Return value:  Size  Location     Type
 30950 ;;                  1    wreg      void 
 30951 ;; Registers used:
 30952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30953 ;; Tracked objects:
 30954 ;;		On entry : 3F/0
 30955 ;;		On exit  : 0/0
 30956 ;;		Unchanged: 0/0
 30957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30958 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30959 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30960 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30961 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30962 ;;Total ram usage:       24 bytes
 30963 ;; Hardware stack levels used: 1
 30964 ;; Hardware stack levels required when called: 12
 30965 ;; This function calls:
 30966 ;;		_I2C1_Close
 30967 ;;		_I2C1_MasterWrite
 30968 ;;		_I2C1_Open
 30969 ;;		_I2C1_SetAddressNackCallback
 30970 ;;		_I2C1_SetBuffer
 30971 ;;		_memcpy
 30972 ;; This function is called by:
 30973 ;;		_saveNewSerial
 30974 ;;		_RemoveSerial
 30975 ;;		_SaveNVM_VarSystem
 30976 ;; This function uses a non-reentrant model
 30977 ;;
 30978                           
 30979                           	psect	text131
 30980  008A04                     __ptext131:
 30981                           	callstack 0
 30982  008A04                     _i2c_writeNBytes:
 30983                           	callstack 14
 30984                           
 30985                           ;incstack = 0
 30986                           ;i2c_writeNBytes@address stored from wreg
 30987  008A04  6E39               	movwf	i2c_writeNBytes@address^0,c
 30988                           
 30989                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 30990  008A06  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 30991                           
 30992                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 30993  008A0A  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 30994  008A0C  6E10               	movwf	memcpy@d1^0,c
 30995  008A0E  6A11               	clrf	(memcpy@d1+1)^0,c
 30996  008A10  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 30997  008A14  6A13               	clrf	(memcpy@s1+1)^0,c
 30998  008A16  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 30999  008A1A  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 31000  008A1E  EC5F  F04A         	call	_memcpy	;wreg free
 31001  008A22                     l20526:
 31002  008A22  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 31003  008A24  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 31004  008A26  ECD2  F042         	call	_I2C1_Open
 31005  008A2A  0900               	iorlw	0
 31006  008A2C  B4D8               	btfsc	status,2,c
 31007  008A2E  D7F9               	goto	l20526
 31008                           
 31009                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 31010  008A30  0E28               	movlw	low i2c_writeNBytes@dat
 31011  008A32  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 31012  008A34  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 31013  008A36  0E01               	movlw	1
 31014  008A38  2425               	addwf	i2c_writeNBytes@len^0,w,c
 31015  008A3A  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 31016  008A3C  0E00               	movlw	0
 31017  008A3E  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 31018  008A40  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 31019  008A42  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 31020                           
 31021                           ; BSR set to: 2
 31022                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 31023  008A46  0E00               	movlw	0
 31024  008A48  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 31025  008A4A  0E00               	movlw	0
 31026  008A4C  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 31027  008A4E  0E00               	movlw	0
 31028  008A50  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 31029  008A52  0E00               	movlw	0
 31030  008A54  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 31031  008A56  EC99  F04E         	call	_I2C1_SetAddressNackCallback	;wreg free
 31032                           
 31033                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 31034  008A5A  EC72  F04F         	call	_I2C1_MasterWrite	;wreg free
 31035  008A5E                     l20534:
 31036  008A5E  ECE6  F04D         	call	_I2C1_Close	;wreg free
 31037  008A62  06E8               	decf	wreg,f,c
 31038  008A64  B4D8               	btfsc	status,2,c
 31039  008A66  D7FB               	goto	l20534
 31040                           
 31041                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 31042  008A68  0ED0               	movlw	208
 31043  008A6A  6E27               	movwf	??_i2c_writeNBytes^0,c
 31044  008A6C  0ECA               	movlw	202
 31045  008A6E                     u34187:
 31046  008A6E  2EE8               	decfsz	wreg,f,c
 31047  008A70  D7FE               	bra	u34187
 31048  008A72  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 31049  008A74  D7FC               	bra	u34187
 31050  008A76  0012               	return		;funcret
 31051  008A78                     __end_of_i2c_writeNBytes:
 31052                           	callstack 0
 31053                           
 31054 ;; *************** function _memcpy *****************
 31055 ;; Defined at:
 31056 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 31057 ;; Parameters:    Size  Location     Type
 31058 ;;  d1              2   15[COMRAM] PTR void 
 31059 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31060 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31061 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 31062 ;;		 -> i2c_writeNBytes@dat(17), 
 31063 ;;  s1              2   17[COMRAM] PTR const void 
 31064 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31065 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31066 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 31067 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31068 ;;  n               2   19[COMRAM] unsigned int 
 31069 ;; Auto vars:     Size  Location     Type
 31070 ;;  s               2   24[COMRAM] PTR const unsigned char 
 31071 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31072 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31073 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 31074 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 31075 ;;  d               2   22[COMRAM] PTR unsigned char 
 31076 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 31077 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 31078 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 31079 ;;		 -> i2c_writeNBytes@dat(17), 
 31080 ;;  tmp             1   21[COMRAM] unsigned char 
 31081 ;; Return value:  Size  Location     Type
 31082 ;;                  2   15[COMRAM] PTR void 
 31083 ;; Registers used:
 31084 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31085 ;; Tracked objects:
 31086 ;;		On entry : 0/0
 31087 ;;		On exit  : 0/0
 31088 ;;		Unchanged: 0/0
 31089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31090 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31091 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31093 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31094 ;;Total ram usage:       11 bytes
 31095 ;; Hardware stack levels used: 1
 31096 ;; Hardware stack levels required when called: 4
 31097 ;; This function calls:
 31098 ;;		Nothing
 31099 ;; This function is called by:
 31100 ;;		_i2c_writeNBytes
 31101 ;;		_getSerialCmd
 31102 ;;		_NormalKeyGen
 31103 ;;		_Decrypt
 31104 ;;		_keeloqDecryptPacket
 31105 ;;		_DecryptPacket_12BIT
 31106 ;; This function uses a non-reentrant model
 31107 ;;
 31108                           
 31109                           	psect	text132
 31110  0094BE                     __ptext132:
 31111                           	callstack 0
 31112  0094BE                     _memcpy:
 31113                           	callstack 21
 31114                           
 31115                           ;incstack = 0
 31116  0094BE  C012  F019         	movff	memcpy@s1,memcpy@s
 31117  0094C2  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 31118  0094C6  C010  F017         	movff	memcpy@d1,memcpy@d
 31119  0094CA  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 31120  0094CE  D010               	goto	l20466
 31121  0094D0                     l20458:
 31122  0094D0  C019  FFD9         	movff	memcpy@s,fsr2l
 31123  0094D4  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 31124  0094D8  50DF               	movf	indf2,w,c
 31125  0094DA  6E16               	movwf	memcpy@tmp^0,c
 31126  0094DC  4A19               	infsnz	memcpy@s^0,f,c
 31127  0094DE  2A1A               	incf	(memcpy@s+1)^0,f,c
 31128  0094E0  C017  FFD9         	movff	memcpy@d,fsr2l
 31129  0094E4  C018  FFDA         	movff	memcpy@d+1,fsr2h
 31130  0094E8  C016  FFDF         	movff	memcpy@tmp,indf2
 31131  0094EC  4A17               	infsnz	memcpy@d^0,f,c
 31132  0094EE  2A18               	incf	(memcpy@d+1)^0,f,c
 31133  0094F0                     l20466:
 31134  0094F0  0614               	decf	memcpy@n^0,f,c
 31135  0094F2  A0D8               	btfss	status,0,c
 31136  0094F4  0615               	decf	(memcpy@n+1)^0,f,c
 31137  0094F6  2814               	incf	memcpy@n^0,w,c
 31138  0094F8  E1EB               	bnz	l20458
 31139  0094FA  2815               	incf	(memcpy@n+1)^0,w,c
 31140  0094FC  B4D8               	btfsc	status,2,c
 31141  0094FE  0012               	return	
 31142  009500  D7E7               	goto	l20458
 31143  009502                     __end_of_memcpy:
 31144                           	callstack 0
 31145                           
 31146 ;; *************** function _I2C1_SetAddressNackCallback *****************
 31147 ;; Defined at:
 31148 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 31149 ;; Parameters:    Size  Location     Type
 31150 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 31151 ;;		 -> Absolute function(1), 
 31152 ;;  ptr             2   22[COMRAM] PTR void 
 31153 ;;		 -> NULL(0), 
 31154 ;; Auto vars:     Size  Location     Type
 31155 ;;		None
 31156 ;; Return value:  Size  Location     Type
 31157 ;;                  1    wreg      void 
 31158 ;; Registers used:
 31159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31160 ;; Tracked objects:
 31161 ;;		On entry : 3F/2
 31162 ;;		On exit  : 0/0
 31163 ;;		Unchanged: 0/0
 31164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31169 ;;Total ram usage:        4 bytes
 31170 ;; Hardware stack levels used: 1
 31171 ;; Hardware stack levels required when called: 5
 31172 ;; This function calls:
 31173 ;;		_I2C1_SetCallback
 31174 ;; This function is called by:
 31175 ;;		_i2c_writeNBytes
 31176 ;;		_i2c_readDataBlock
 31177 ;;		_I2C1_Read1ByteRegister
 31178 ;; This function uses a non-reentrant model
 31179 ;;
 31180                           
 31181                           	psect	text133
 31182  009D32                     __ptext133:
 31183                           	callstack 0
 31184  009D32                     _I2C1_SetAddressNackCallback:
 31185                           	callstack 20
 31186                           
 31187                           ; BSR set to: 2
 31188                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 31189                           
 31190                           ;incstack = 0
 31191  009D32  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 31192  009D36  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 31193  009D3A  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 31194  009D3E  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 31195  009D42  0E02               	movlw	2
 31196  009D44  EC1B  F046         	call	_I2C1_SetCallback
 31197  009D48  0012               	return		;funcret
 31198  009D4A                     __end_of_I2C1_SetAddressNackCallback:
 31199                           	callstack 0
 31200                           
 31201 ;; *************** function _I2C1_Open *****************
 31202 ;; Defined at:
 31203 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 31204 ;; Parameters:    Size  Location     Type
 31205 ;;  address         1    wreg     unsigned char 
 31206 ;; Auto vars:     Size  Location     Type
 31207 ;;  address         1   15[COMRAM] unsigned char 
 31208 ;;  returnValue     1   16[COMRAM] enum E355
 31209 ;; Return value:  Size  Location     Type
 31210 ;;                  1    wreg      enum E355
 31211 ;; Registers used:
 31212 ;;		wreg, status,2, status,0, cstack
 31213 ;; Tracked objects:
 31214 ;;		On entry : 0/0
 31215 ;;		On exit  : 33/2
 31216 ;;		Unchanged: 0/0
 31217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31222 ;;Total ram usage:        2 bytes
 31223 ;; Hardware stack levels used: 1
 31224 ;; Hardware stack levels required when called: 5
 31225 ;; This function calls:
 31226 ;;		_I2C1_MasterClearIrq
 31227 ;;		_I2C1_MasterOpen
 31228 ;; This function is called by:
 31229 ;;		_i2c_writeNBytes
 31230 ;;		_i2c_readDataBlock
 31231 ;;		_I2C1_Read1ByteRegister
 31232 ;; This function uses a non-reentrant model
 31233 ;;
 31234                           
 31235                           	psect	text134
 31236  0085A4                     __ptext134:
 31237                           	callstack 0
 31238  0085A4                     _I2C1_Open:
 31239                           	callstack 20
 31240                           
 31241                           ;incstack = 0
 31242                           ;I2C1_Open@address stored from wreg
 31243  0085A4  6E10               	movwf	I2C1_Open@address^0,c
 31244                           
 31245                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 31246  0085A6  0E01               	movlw	1
 31247  0085A8  6E11               	movwf	I2C1_Open@returnValue^0,c
 31248                           
 31249                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 31250  0085AA  0102               	movlb	2	; () banked
 31251  0085AC  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 31252  0085AE  D03A               	goto	l20432
 31253                           
 31254                           ; BSR set to: 2
 31255                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 31256  0085B0  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 31257                           
 31258                           ; BSR set to: 2
 31259                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 31260  0085B4  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31261                           
 31262                           ; BSR set to: 2
 31263                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 31264  0085B6  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 31265                           
 31266                           ; BSR set to: 2
 31267                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 31268  0085B8  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31269                           
 31270                           ; BSR set to: 2
 31271                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 31272  0085BA  0E0E               	movlw	14
 31273  0085BC  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31274                           
 31275                           ; BSR set to: 2
 31276                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 31277  0085BE  0E01               	movlw	1
 31278  0085C0  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 31279  0085C2  0EF4               	movlw	244
 31280  0085C4  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 31281                           
 31282                           ; BSR set to: 2
 31283                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 31284  0085C6  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31285                           
 31286                           ; BSR set to: 2
 31287                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 31288  0085C8  0E7E               	movlw	low _I2C1_CallbackReturnStop
 31289  0085CA  6F3C               	movwf	_I2C1_Status& (0+255),b
 31290  0085CC  0E9F               	movlw	high _I2C1_CallbackReturnStop
 31291  0085CE  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 31292                           
 31293                           ; BSR set to: 2
 31294                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 31295  0085D0  0E00               	movlw	0
 31296  0085D2  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 31297  0085D4  0E00               	movlw	0
 31298  0085D6  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 31299                           
 31300                           ; BSR set to: 2
 31301                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 31302  0085D8  0E7E               	movlw	low _I2C1_CallbackReturnStop
 31303  0085DA  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 31304  0085DC  0E9F               	movlw	high _I2C1_CallbackReturnStop
 31305  0085DE  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 31306                           
 31307                           ; BSR set to: 2
 31308                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 31309  0085E0  0E00               	movlw	0
 31310  0085E2  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 31311  0085E4  0E00               	movlw	0
 31312  0085E6  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 31313                           
 31314                           ; BSR set to: 2
 31315                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31316  0085E8  0E7E               	movlw	low _I2C1_CallbackReturnStop
 31317  0085EA  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 31318  0085EC  0E9F               	movlw	high _I2C1_CallbackReturnStop
 31319  0085EE  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 31320                           
 31321                           ; BSR set to: 2
 31322                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 31323  0085F0  0E00               	movlw	0
 31324  0085F2  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 31325  0085F4  0E00               	movlw	0
 31326  0085F6  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 31327                           
 31328                           ; BSR set to: 2
 31329                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 31330  0085F8  0E7E               	movlw	low _I2C1_CallbackReturnStop
 31331  0085FA  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 31332  0085FC  0E9F               	movlw	high _I2C1_CallbackReturnStop
 31333  0085FE  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 31334                           
 31335                           ; BSR set to: 2
 31336                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 31337  008600  0E00               	movlw	0
 31338  008602  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 31339  008604  0E00               	movlw	0
 31340  008606  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 31341                           
 31342                           ; BSR set to: 2
 31343                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 31344  008608  0E7A               	movlw	low _I2C1_CallbackReturnReset
 31345  00860A  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 31346  00860C  0E9F               	movlw	high _I2C1_CallbackReturnReset
 31347  00860E  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 31348                           
 31349                           ; BSR set to: 2
 31350                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 31351  008610  0E00               	movlw	0
 31352  008612  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 31353  008614  0E00               	movlw	0
 31354  008616  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 31355                           
 31356                           ; BSR set to: 2
 31357                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 31358  008618  ECAC  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 31359                           
 31360                           ; BSR set to: 14
 31361                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 31362  00861C  ECA5  F04E         	call	_I2C1_MasterOpen	;wreg free
 31363                           
 31364                           ; BSR set to: 14
 31365                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 31366  008620  0E00               	movlw	0
 31367  008622  6E11               	movwf	I2C1_Open@returnValue^0,c
 31368  008624                     l20432:
 31369                           
 31370                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 31371  008624  5011               	movf	I2C1_Open@returnValue^0,w,c
 31372  008626  0012               	return		;funcret
 31373  008628                     __end_of_I2C1_Open:
 31374                           	callstack 0
 31375                           
 31376 ;; *************** function _I2C1_MasterOpen *****************
 31377 ;; Defined at:
 31378 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 31379 ;; Parameters:    Size  Location     Type
 31380 ;;		None
 31381 ;; Auto vars:     Size  Location     Type
 31382 ;;		None
 31383 ;; Return value:  Size  Location     Type
 31384 ;;                  1    wreg      _Bool 
 31385 ;; Registers used:
 31386 ;;		wreg, status,2
 31387 ;; Tracked objects:
 31388 ;;		On entry : 3F/E
 31389 ;;		On exit  : 3F/E
 31390 ;;		Unchanged: 3F/0
 31391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31396 ;;Total ram usage:        0 bytes
 31397 ;; Hardware stack levels used: 1
 31398 ;; Hardware stack levels required when called: 4
 31399 ;; This function calls:
 31400 ;;		Nothing
 31401 ;; This function is called by:
 31402 ;;		_I2C1_Open
 31403 ;; This function uses a non-reentrant model
 31404 ;;
 31405                           
 31406                           	psect	text135
 31407  009D4A                     __ptext135:
 31408                           	callstack 0
 31409  009D4A                     _I2C1_MasterOpen:
 31410                           	callstack 20
 31411                           
 31412                           ; BSR set to: 14
 31413                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 31414                           
 31415                           ;incstack = 0
 31416  009D4A  BA96               	btfsc	150,5,c	;volatile
 31417  009D4C  0012               	return	
 31418                           
 31419                           ; BSR set to: 14
 31420                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 31421  009D4E  0E80               	movlw	128
 31422  009D50  6E95               	movwf	149,c	;volatile
 31423                           
 31424                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 31425  009D52  0E08               	movlw	8
 31426  009D54  6E96               	movwf	150,c	;volatile
 31427                           
 31428                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 31429  009D56  0E00               	movlw	0
 31430  009D58  6E97               	movwf	151,c	;volatile
 31431                           
 31432                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 31433  009D5A  0E9F               	movlw	159
 31434  009D5C  6E93               	movwf	147,c	;volatile
 31435                           
 31436                           ; BSR set to: 14
 31437                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 31438  009D5E  8A96               	bsf	150,5,c	;volatile
 31439                           
 31440                           ; BSR set to: 14
 31441  009D60  0012               	return		;funcret
 31442  009D62                     __end_of_I2C1_MasterOpen:
 31443                           	callstack 0
 31444                           
 31445 ;; *************** function _I2C1_MasterWrite *****************
 31446 ;; Defined at:
 31447 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 31448 ;; Parameters:    Size  Location     Type
 31449 ;;		None
 31450 ;; Auto vars:     Size  Location     Type
 31451 ;;		None
 31452 ;; Return value:  Size  Location     Type
 31453 ;;                  1    wreg      enum E355
 31454 ;; Registers used:
 31455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31456 ;; Tracked objects:
 31457 ;;		On entry : 0/2
 31458 ;;		On exit  : 3F/2
 31459 ;;		Unchanged: 0/0
 31460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31465 ;;Total ram usage:        0 bytes
 31466 ;; Hardware stack levels used: 1
 31467 ;; Hardware stack levels required when called: 11
 31468 ;; This function calls:
 31469 ;;		_I2C1_MasterOperation
 31470 ;; This function is called by:
 31471 ;;		_i2c_writeNBytes
 31472 ;;		_i2c_readDataBlock
 31473 ;;		_I2C1_Read1ByteRegister
 31474 ;; This function uses a non-reentrant model
 31475 ;;
 31476                           
 31477                           	psect	text136
 31478  009EE4                     __ptext136:
 31479                           	callstack 0
 31480  009EE4                     _I2C1_MasterWrite:
 31481                           	callstack 14
 31482                           
 31483                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 31484                           
 31485                           ; BSR set to: 14
 31486                           ;incstack = 0
 31487  009EE4  0E00               	movlw	0
 31488  009EE6  EC4F  F04C         	call	_I2C1_MasterOperation
 31489                           
 31490                           ; BSR set to: 2
 31491  009EEA  0012               	return		;funcret
 31492  009EEC                     __end_of_I2C1_MasterWrite:
 31493                           	callstack 0
 31494                           
 31495 ;; *************** function _I2C1_MasterOperation *****************
 31496 ;; Defined at:
 31497 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 31498 ;; Parameters:    Size  Location     Type
 31499 ;;  read            1    wreg     _Bool 
 31500 ;; Auto vars:     Size  Location     Type
 31501 ;;  read            1   31[COMRAM] _Bool 
 31502 ;;  returnValue     1   32[COMRAM] enum E355
 31503 ;; Return value:  Size  Location     Type
 31504 ;;                  1    wreg      enum E355
 31505 ;; Registers used:
 31506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31507 ;; Tracked objects:
 31508 ;;		On entry : 0/2
 31509 ;;		On exit  : 3F/2
 31510 ;;		Unchanged: 0/0
 31511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31516 ;;Total ram usage:        2 bytes
 31517 ;; Hardware stack levels used: 1
 31518 ;; Hardware stack levels required when called: 10
 31519 ;; This function calls:
 31520 ;;		_I2C1_MasterStart
 31521 ;;		_I2C1_Poller
 31522 ;; This function is called by:
 31523 ;;		_I2C1_MasterWrite
 31524 ;; This function uses a non-reentrant model
 31525 ;;
 31526                           
 31527                           	psect	text137
 31528  00989E                     __ptext137:
 31529                           	callstack 0
 31530  00989E                     _I2C1_MasterOperation:
 31531                           	callstack 14
 31532                           
 31533                           ; BSR set to: 2
 31534                           ;incstack = 0
 31535                           ;I2C1_MasterOperation@read stored from wreg
 31536  00989E  6E20               	movwf	I2C1_MasterOperation@read^0,c
 31537                           
 31538                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 31539  0098A0  0E01               	movlw	1
 31540  0098A2  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31541                           
 31542                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 31543  0098A4  0102               	movlb	2	; () banked
 31544  0098A6  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 31545  0098A8  D00E               	goto	l20384
 31546                           
 31547                           ; BSR set to: 2
 31548                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 31549  0098AA  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 31550                           
 31551                           ; BSR set to: 2
 31552                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 31553  0098AC  0E00               	movlw	0
 31554  0098AE  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 31555                           
 31556                           ; BSR set to: 2
 31557                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 31558  0098B0  5020               	movf	I2C1_MasterOperation@read^0,w,c
 31559  0098B2  B4D8               	btfsc	status,2,c
 31560  0098B4  D002               	goto	l20378
 31561                           
 31562                           ; BSR set to: 2
 31563                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 31564  0098B6  0E01               	movlw	1
 31565  0098B8  D001               	goto	L113
 31566  0098BA                     l20378:
 31567                           
 31568                           ; BSR set to: 2
 31569                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 31570  0098BA  0E02               	movlw	2
 31571  0098BC                     L113:
 31572  0098BC  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31573                           
 31574                           ; BSR set to: 2
 31575                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 31576  0098BE  ECC5  F04F         	call	_I2C1_MasterStart	;wreg free
 31577                           
 31578                           ; BSR set to: 2
 31579                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 31580  0098C2  EC0D  F04F         	call	_I2C1_Poller	;wreg free
 31581  0098C6                     l20384:
 31582                           
 31583                           ; BSR set to: 2
 31584                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 31585  0098C6  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 31586                           
 31587                           ; BSR set to: 2
 31588  0098C8  0012               	return		;funcret
 31589  0098CA                     __end_of_I2C1_MasterOperation:
 31590                           	callstack 0
 31591                           
 31592 ;; *************** function _I2C1_Poller *****************
 31593 ;; Defined at:
 31594 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 31595 ;; Parameters:    Size  Location     Type
 31596 ;;		None
 31597 ;; Auto vars:     Size  Location     Type
 31598 ;;		None
 31599 ;; Return value:  Size  Location     Type
 31600 ;;                  1    wreg      void 
 31601 ;; Registers used:
 31602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31603 ;; Tracked objects:
 31604 ;;		On entry : 3F/2
 31605 ;;		On exit  : 3F/2
 31606 ;;		Unchanged: 0/0
 31607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31612 ;;Total ram usage:        0 bytes
 31613 ;; Hardware stack levels used: 1
 31614 ;; Hardware stack levels required when called: 9
 31615 ;; This function calls:
 31616 ;;		_I2C1_MasterFsm
 31617 ;;		_I2C1_MasterWaitForEvent
 31618 ;; This function is called by:
 31619 ;;		_I2C1_MasterOperation
 31620 ;; This function uses a non-reentrant model
 31621 ;;
 31622                           
 31623                           	psect	text138
 31624  009E1A                     __ptext138:
 31625                           	callstack 0
 31626  009E1A                     _I2C1_Poller:
 31627                           	callstack 14
 31628                           
 31629                           ; BSR set to: 2
 31630                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31631                           
 31632                           ; BSR set to: 2
 31633                           ;incstack = 0
 31634  009E1A  D004               	goto	l20352
 31635  009E1C                     l20348:
 31636                           
 31637                           ; BSR set to: 2
 31638                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 31639  009E1C  EC76  F04F         	call	_I2C1_MasterWaitForEvent	;wreg free
 31640                           
 31641                           ; BSR set to: 14
 31642                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 31643  009E20  ECE0  F048         	call	_I2C1_MasterFsm	;wreg free
 31644  009E24                     l20352:
 31645                           
 31646                           ; BSR set to: 2
 31647                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 31648  009E24  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 31649  009E26  0012               	return	
 31650  009E28  D7F9               	goto	l20348
 31651  009E2A                     __end_of_I2C1_Poller:
 31652                           	callstack 0
 31653                           
 31654 ;; *************** function _I2C1_MasterWaitForEvent *****************
 31655 ;; Defined at:
 31656 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 31657 ;; Parameters:    Size  Location     Type
 31658 ;;		None
 31659 ;; Auto vars:     Size  Location     Type
 31660 ;;		None
 31661 ;; Return value:  Size  Location     Type
 31662 ;;                  1    wreg      void 
 31663 ;; Registers used:
 31664 ;;		None
 31665 ;; Tracked objects:
 31666 ;;		On entry : 3F/2
 31667 ;;		On exit  : 3F/E
 31668 ;;		Unchanged: 0/0
 31669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31674 ;;Total ram usage:        0 bytes
 31675 ;; Hardware stack levels used: 1
 31676 ;; Hardware stack levels required when called: 4
 31677 ;; This function calls:
 31678 ;;		Nothing
 31679 ;; This function is called by:
 31680 ;;		_I2C1_Poller
 31681 ;; This function uses a non-reentrant model
 31682 ;;
 31683                           
 31684                           	psect	text139
 31685  009EEC                     __ptext139:
 31686                           	callstack 0
 31687  009EEC                     _I2C1_MasterWaitForEvent:
 31688                           	callstack 18
 31689                           
 31690                           ; BSR set to: 2
 31691                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 31692                           
 31693                           ; BSR set to: 2
 31694                           ;incstack = 0
 31695                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 31696  009EEC  010E               	movlb	14	; () banked
 31697  009EEE  B1CD               	btfsc	205,0,b	;volatile
 31698  009EF0  0012               	return	
 31699  009EF2  D7FC               	goto	__ptext139
 31700  009EF4                     __end_of_I2C1_MasterWaitForEvent:
 31701                           	callstack 0
 31702                           
 31703 ;; *************** function _I2C1_MasterFsm *****************
 31704 ;; Defined at:
 31705 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 31706 ;; Parameters:    Size  Location     Type
 31707 ;;		None
 31708 ;; Auto vars:     Size  Location     Type
 31709 ;;		None
 31710 ;; Return value:  Size  Location     Type
 31711 ;;                  1    wreg      void 
 31712 ;; Registers used:
 31713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31714 ;; Tracked objects:
 31715 ;;		On entry : 3F/E
 31716 ;;		On exit  : 3F/2
 31717 ;;		Unchanged: 0/0
 31718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31721 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31722 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31723 ;;Total ram usage:        3 bytes
 31724 ;; Hardware stack levels used: 1
 31725 ;; Hardware stack levels required when called: 8
 31726 ;; This function calls:
 31727 ;;		_I2C1_DO_ADDRESS_NACK
 31728 ;;		_I2C1_DO_IDLE
 31729 ;;		_I2C1_DO_RCEN
 31730 ;;		_I2C1_DO_RESET
 31731 ;;		_I2C1_DO_RX
 31732 ;;		_I2C1_DO_RX_ACK
 31733 ;;		_I2C1_DO_RX_NACK_RESTART
 31734 ;;		_I2C1_DO_RX_NACK_STOP
 31735 ;;		_I2C1_DO_SEND_ADR_READ
 31736 ;;		_I2C1_DO_SEND_ADR_WRITE
 31737 ;;		_I2C1_DO_SEND_RESTART
 31738 ;;		_I2C1_DO_SEND_RESTART_READ
 31739 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31740 ;;		_I2C1_DO_SEND_STOP
 31741 ;;		_I2C1_DO_TX
 31742 ;;		_I2C1_DO_TX_EMPTY
 31743 ;;		_I2C1_MasterClearIrq
 31744 ;;		_I2C1_MasterIsNack
 31745 ;; This function is called by:
 31746 ;;		_I2C1_Poller
 31747 ;; This function uses a non-reentrant model
 31748 ;;
 31749                           
 31750                           	psect	text140
 31751  0091C0                     __ptext140:
 31752                           	callstack 0
 31753  0091C0                     _I2C1_MasterFsm:
 31754                           	callstack 14
 31755                           
 31756                           ; BSR set to: 14
 31757                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 31758                           
 31759                           ; BSR set to: 14
 31760                           ;incstack = 0
 31761  0091C0  ECAC  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 31762                           
 31763                           ; BSR set to: 14
 31764                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 31765  0091C4  0102               	movlb	2	; () banked
 31766  0091C6  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 31767  0091C8  D007               	goto	l20342
 31768                           
 31769                           ; BSR set to: 2
 31770  0091CA  EC2A  F04F         	call	_I2C1_MasterIsNack	;wreg free
 31771  0091CE  0900               	iorlw	0
 31772  0091D0  B4D8               	btfsc	status,2,c
 31773  0091D2  D002               	goto	l20342
 31774                           
 31775                           ; BSR set to: 2
 31776                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 31777  0091D4  0E0F               	movlw	15
 31778  0091D6  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31779  0091D8                     l20342:
 31780                           
 31781                           ; BSR set to: 2
 31782                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 31783  0091D8  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 31784  0091DA  0D02               	mullw	2
 31785  0091DC  50F3               	movf	243,w,c
 31786  0091DE  0F01               	addlw	low _i2c1_fsmStateTable
 31787  0091E0  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 31788  0091E2  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 31789  0091E6                     	if	1	;There is more than 1 active tblptr byte
 31790  0091E6  0E0F               	movlw	high __smallconst
 31791  0091E8  6EF7               	movwf	tblptrh,c
 31792  0091EA                     	endif
 31793  0091EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31794  0091EA  6AF8               	clrf	tblptru,c
 31795  0091EC                     	endif
 31796  0091EC                     	if	0	;tblptru may be non-zero
 31797  0091EC                     	endif
 31798  0091EC  0009               	tblrd		*+
 31799  0091EE  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 31800  0091F2  0009               	tblrd		*+
 31801  0091F4  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 31802  0091F8  D801               	call	u23328
 31803  0091FA  D009               	goto	u23329
 31804  0091FC                     u23328:
 31805  0091FC  0005               	push	
 31806  0091FE  6EFA               	movwf	pclath,c
 31807  009200  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 31808  009202  6EFD               	movwf	tosl,c
 31809  009204  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 31810  009206  6EFE               	movwf	tosh,c
 31811  009208  6AFF               	clrf	tosu,c
 31812  00920A  50FA               	movf	pclath,w,c
 31813  00920C  0012               	return		;indir
 31814  00920E                     u23329:
 31815  00920E  0102               	movlb	2	; () banked
 31816  009210  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 31817                           
 31818                           ; BSR set to: 2
 31819  009212  0012               	return		;funcret
 31820  009214                     __end_of_I2C1_MasterFsm:
 31821                           	callstack 0
 31822                           
 31823 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 31824 ;; Defined at:
 31825 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 31826 ;; Parameters:    Size  Location     Type
 31827 ;;		None
 31828 ;; Auto vars:     Size  Location     Type
 31829 ;;		None
 31830 ;; Return value:  Size  Location     Type
 31831 ;;                  1    wreg      enum E10442
 31832 ;; Registers used:
 31833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31834 ;; Tracked objects:
 31835 ;;		On entry : 3F/2
 31836 ;;		On exit  : 0/0
 31837 ;;		Unchanged: 0/0
 31838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31843 ;;Total ram usage:        2 bytes
 31844 ;; Hardware stack levels used: 1
 31845 ;; Hardware stack levels required when called: 7
 31846 ;; This function calls:
 31847 ;;		Absolute function
 31848 ;;		_I2C1_CallbackReturnReset
 31849 ;;		_I2C1_CallbackReturnStop
 31850 ;;		_I2C1_DO_SEND_RESTART
 31851 ;;		_I2C1_DO_SEND_STOP
 31852 ;;		_rd1RegCompleteHandler
 31853 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31854 ;;		_rd2RegCompleteHandler
 31855 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31856 ;;		_rdBlkRegCompleteHandler
 31857 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31858 ;;		_wr1RegCompleteHandler
 31859 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31860 ;;		_wr2RegCompleteHandler
 31861 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31862 ;; This function is called by:
 31863 ;;		_I2C1_MasterFsm
 31864 ;; This function uses a non-reentrant model
 31865 ;;
 31866                           
 31867                           	psect	text141
 31868  009354                     __ptext141:
 31869                           	callstack 0
 31870  009354                     _I2C1_DO_ADDRESS_NACK:
 31871                           	callstack 14
 31872                           
 31873                           ; BSR set to: 2
 31874                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 31875                           
 31876                           ; BSR set to: 2
 31877                           ;incstack = 0
 31878  009354  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31879                           
 31880                           ; BSR set to: 2
 31881                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 31882  009356  0E02               	movlw	2
 31883  009358  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31884                           
 31885                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 31886  00935A  D006               	goto	l20326
 31887  00935C                     l20316:
 31888                           
 31889                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 31890  00935C  EC8A  F04F         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31891  009360  0012               	return	
 31892  009362                     l20320:
 31893                           
 31894                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 31895  009362  EC86  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 31896  009366  0012               	return	
 31897  009368                     l20326:
 31898                           
 31899                           ; BSR set to: 2
 31900  009368  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 31901  00936C  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 31902  009370  D801               	call	u23288
 31903  009372  D009               	goto	u23289
 31904  009374                     u23288:
 31905  009374  0005               	push	
 31906  009376  6EFA               	movwf	pclath,c
 31907  009378  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 31908  00937A  6EFD               	movwf	tosl,c
 31909  00937C  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 31910  00937E  6EFE               	movwf	tosh,c
 31911  009380  6AFF               	clrf	tosu,c
 31912  009382  50FA               	movf	pclath,w,c
 31913  009384  0012               	return		;indir
 31914  009386                     u23289:
 31915  009386  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 31916  009388  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 31917                           
 31918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31919                           ; Switch size 1, requested type "simple"
 31920                           ; Number of cases is 1, Range of values is 0 to 0
 31921                           ; switch strategies available:
 31922                           ; Name         Instructions Cycles
 31923                           ; simple_byte            4     3 (average)
 31924                           ;	Chosen strategy is simple_byte
 31925  00938A  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 31926  00938C  0A00               	xorlw	0	; case 0
 31927  00938E  A4D8               	btfss	status,2,c
 31928  009390  D7E8               	goto	l20320
 31929                           
 31930                           ; Switch size 1, requested type "simple"
 31931                           ; Number of cases is 2, Range of values is 2 to 3
 31932                           ; switch strategies available:
 31933                           ; Name         Instructions Cycles
 31934                           ; simple_byte            7     4 (average)
 31935                           ;	Chosen strategy is simple_byte
 31936  009392  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 31937  009394  0A02               	xorlw	2	; case 2
 31938  009396  B4D8               	btfsc	status,2,c
 31939  009398  D7E1               	goto	l20316
 31940  00939A  0A01               	xorlw	1	; case 3
 31941  00939C  B4D8               	btfsc	status,2,c
 31942  00939E  D7DE               	goto	l20316
 31943  0093A0  D7E0               	goto	l20320
 31944  0093A2                     __end_of_I2C1_DO_ADDRESS_NACK:
 31945                           	callstack 0
 31946                           
 31947 ;; *************** function _I2C1_DO_RESET *****************
 31948 ;; Defined at:
 31949 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 31950 ;; Parameters:    Size  Location     Type
 31951 ;;		None
 31952 ;; Auto vars:     Size  Location     Type
 31953 ;;		None
 31954 ;; Return value:  Size  Location     Type
 31955 ;;                  1    wreg      enum E10442
 31956 ;; Registers used:
 31957 ;;		wreg, status,2
 31958 ;; Tracked objects:
 31959 ;;		On entry : 3F/2
 31960 ;;		On exit  : 3F/2
 31961 ;;		Unchanged: 0/0
 31962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31967 ;;Total ram usage:        0 bytes
 31968 ;; Hardware stack levels used: 1
 31969 ;; Hardware stack levels required when called: 4
 31970 ;; This function calls:
 31971 ;;		Nothing
 31972 ;; This function is called by:
 31973 ;;		_I2C1_MasterFsm
 31974 ;; This function uses a non-reentrant model
 31975 ;;
 31976                           
 31977                           	psect	text142
 31978  009EC6                     __ptext142:
 31979                           	callstack 0
 31980  009EC6                     _I2C1_DO_RESET:
 31981                           	callstack 17
 31982                           
 31983                           ; BSR set to: 2
 31984                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 31985                           
 31986                           ;incstack = 0
 31987  009EC6  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31988                           
 31989                           ; BSR set to: 2
 31990                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 31991  009EC8  0E00               	movlw	0
 31992  009ECA  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31993                           
 31994                           ; BSR set to: 2
 31995                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 31996  009ECC  0E0E               	movlw	14
 31997                           
 31998                           ; BSR set to: 2
 31999  009ECE  0012               	return		;funcret
 32000  009ED0                     __end_of_I2C1_DO_RESET:
 32001                           	callstack 0
 32002                           
 32003 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 32004 ;; Defined at:
 32005 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 32006 ;; Parameters:    Size  Location     Type
 32007 ;;		None
 32008 ;; Auto vars:     Size  Location     Type
 32009 ;;		None
 32010 ;; Return value:  Size  Location     Type
 32011 ;;                  1    wreg      enum E10442
 32012 ;; Registers used:
 32013 ;;		wreg, cstack
 32014 ;; Tracked objects:
 32015 ;;		On entry : 0/2
 32016 ;;		On exit  : 0/0
 32017 ;;		Unchanged: 0/0
 32018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32023 ;;Total ram usage:        0 bytes
 32024 ;; Hardware stack levels used: 1
 32025 ;; Hardware stack levels required when called: 5
 32026 ;; This function calls:
 32027 ;;		_I2C1_MasterSendNack
 32028 ;; This function is called by:
 32029 ;;		_I2C1_DO_RX
 32030 ;;		_I2C1_MasterFsm
 32031 ;; This function uses a non-reentrant model
 32032 ;;
 32033                           
 32034                           	psect	text143
 32035  009EF4                     __ptext143:
 32036                           	callstack 0
 32037  009EF4                     _I2C1_DO_RX_NACK_RESTART:
 32038                           	callstack 16
 32039                           
 32040                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 32041                           
 32042                           ; BSR set to: 2
 32043                           ;incstack = 0
 32044  009EF4  ECA9  F04F         	call	_I2C1_MasterSendNack	;wreg free
 32045                           
 32046                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 32047  009EF8  0E09               	movlw	9
 32048  009EFA  0012               	return		;funcret
 32049  009EFC                     __end_of_I2C1_DO_RX_NACK_RESTART:
 32050                           	callstack 0
 32051                           
 32052 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 32053 ;; Defined at:
 32054 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 32055 ;; Parameters:    Size  Location     Type
 32056 ;;		None
 32057 ;; Auto vars:     Size  Location     Type
 32058 ;;		None
 32059 ;; Return value:  Size  Location     Type
 32060 ;;                  1    wreg      enum E10442
 32061 ;; Registers used:
 32062 ;;		wreg, cstack
 32063 ;; Tracked objects:
 32064 ;;		On entry : 0/2
 32065 ;;		On exit  : 0/0
 32066 ;;		Unchanged: 0/0
 32067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32072 ;;Total ram usage:        0 bytes
 32073 ;; Hardware stack levels used: 1
 32074 ;; Hardware stack levels required when called: 5
 32075 ;; This function calls:
 32076 ;;		_I2C1_MasterSendNack
 32077 ;; This function is called by:
 32078 ;;		_I2C1_DO_RX
 32079 ;;		_I2C1_MasterFsm
 32080 ;; This function uses a non-reentrant model
 32081 ;;
 32082                           
 32083                           	psect	text144
 32084  009EFC                     __ptext144:
 32085                           	callstack 0
 32086  009EFC                     _I2C1_DO_RX_NACK_STOP:
 32087                           	callstack 16
 32088                           
 32089                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 32090                           
 32091                           ;incstack = 0
 32092  009EFC  ECA9  F04F         	call	_I2C1_MasterSendNack	;wreg free
 32093                           
 32094                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 32095  009F00  0E0A               	movlw	10
 32096  009F02  0012               	return		;funcret
 32097  009F04                     __end_of_I2C1_DO_RX_NACK_STOP:
 32098                           	callstack 0
 32099                           
 32100 ;; *************** function _I2C1_DO_RX_ACK *****************
 32101 ;; Defined at:
 32102 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 32103 ;; Parameters:    Size  Location     Type
 32104 ;;		None
 32105 ;; Auto vars:     Size  Location     Type
 32106 ;;		None
 32107 ;; Return value:  Size  Location     Type
 32108 ;;                  1    wreg      enum E10442
 32109 ;; Registers used:
 32110 ;;		wreg, cstack
 32111 ;; Tracked objects:
 32112 ;;		On entry : 3F/2
 32113 ;;		On exit  : 3F/2
 32114 ;;		Unchanged: 3F/0
 32115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32120 ;;Total ram usage:        0 bytes
 32121 ;; Hardware stack levels used: 1
 32122 ;; Hardware stack levels required when called: 5
 32123 ;; This function calls:
 32124 ;;		_I2C1_MasterSendAck
 32125 ;; This function is called by:
 32126 ;;		_I2C1_MasterFsm
 32127 ;; This function uses a non-reentrant model
 32128 ;;
 32129                           
 32130                           	psect	text145
 32131  009F04                     __ptext145:
 32132                           	callstack 0
 32133  009F04                     _I2C1_DO_RX_ACK:
 32134                           	callstack 16
 32135                           
 32136                           ; BSR set to: 2
 32137                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 32138                           
 32139                           ;incstack = 0
 32140  009F04  ECA6  F04F         	call	_I2C1_MasterSendAck	;wreg free
 32141                           
 32142                           ; BSR set to: 2
 32143                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 32144  009F08  0E05               	movlw	5
 32145                           
 32146                           ; BSR set to: 2
 32147  009F0A  0012               	return		;funcret
 32148  009F0C                     __end_of_I2C1_DO_RX_ACK:
 32149                           	callstack 0
 32150                           
 32151 ;; *************** function _I2C1_DO_SEND_STOP *****************
 32152 ;; Defined at:
 32153 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 32154 ;; Parameters:    Size  Location     Type
 32155 ;;		None
 32156 ;; Auto vars:     Size  Location     Type
 32157 ;;		None
 32158 ;; Return value:  Size  Location     Type
 32159 ;;                  1    wreg      enum E10442
 32160 ;; Registers used:
 32161 ;;		wreg, cstack
 32162 ;; Tracked objects:
 32163 ;;		On entry : 0/2
 32164 ;;		On exit  : 0/0
 32165 ;;		Unchanged: 0/0
 32166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32171 ;;Total ram usage:        0 bytes
 32172 ;; Hardware stack levels used: 1
 32173 ;; Hardware stack levels required when called: 5
 32174 ;; This function calls:
 32175 ;;		_I2C1_MasterStop
 32176 ;; This function is called by:
 32177 ;;		_I2C1_DO_TX
 32178 ;;		_I2C1_DO_TX_EMPTY
 32179 ;;		_I2C1_DO_ADDRESS_NACK
 32180 ;;		_I2C1_MasterFsm
 32181 ;; This function uses a non-reentrant model
 32182 ;;
 32183                           
 32184                           	psect	text146
 32185  009F0C                     __ptext146:
 32186                           	callstack 0
 32187  009F0C                     _I2C1_DO_SEND_STOP:
 32188                           	callstack 15
 32189                           
 32190                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 32191                           
 32192                           ; BSR set to: 2
 32193                           ;incstack = 0
 32194  009F0C  ECC1  F04F         	call	_I2C1_MasterStop	;wreg free
 32195                           
 32196                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 32197  009F10  0E00               	movlw	0
 32198  009F12  0012               	return		;funcret
 32199  009F14                     __end_of_I2C1_DO_SEND_STOP:
 32200                           	callstack 0
 32201                           
 32202 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 32203 ;; Defined at:
 32204 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 32205 ;; Parameters:    Size  Location     Type
 32206 ;;		None
 32207 ;; Auto vars:     Size  Location     Type
 32208 ;;		None
 32209 ;; Return value:  Size  Location     Type
 32210 ;;                  1    wreg      enum E10442
 32211 ;; Registers used:
 32212 ;;		wreg, cstack
 32213 ;; Tracked objects:
 32214 ;;		On entry : 0/2
 32215 ;;		On exit  : 0/0
 32216 ;;		Unchanged: 0/0
 32217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32222 ;;Total ram usage:        0 bytes
 32223 ;; Hardware stack levels used: 1
 32224 ;; Hardware stack levels required when called: 5
 32225 ;; This function calls:
 32226 ;;		_I2C1_MasterEnableRestart
 32227 ;; This function is called by:
 32228 ;;		_I2C1_DO_TX_EMPTY
 32229 ;;		_I2C1_DO_ADDRESS_NACK
 32230 ;;		_I2C1_MasterFsm
 32231 ;; This function uses a non-reentrant model
 32232 ;;
 32233                           
 32234                           	psect	text147
 32235  009F14                     __ptext147:
 32236                           	callstack 0
 32237  009F14                     _I2C1_DO_SEND_RESTART:
 32238                           	callstack 15
 32239                           
 32240                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 32241                           
 32242                           ;incstack = 0
 32243  009F14  ECC3  F04F         	call	_I2C1_MasterEnableRestart	;wreg free
 32244                           
 32245                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 32246  009F18  0E01               	movlw	1
 32247  009F1A  0012               	return		;funcret
 32248  009F1C                     __end_of_I2C1_DO_SEND_RESTART:
 32249                           	callstack 0
 32250                           
 32251 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 32252 ;; Defined at:
 32253 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 32254 ;; Parameters:    Size  Location     Type
 32255 ;;		None
 32256 ;; Auto vars:     Size  Location     Type
 32257 ;;		None
 32258 ;; Return value:  Size  Location     Type
 32259 ;;                  1    wreg      enum E10442
 32260 ;; Registers used:
 32261 ;;		wreg, cstack
 32262 ;; Tracked objects:
 32263 ;;		On entry : 0/2
 32264 ;;		On exit  : 0/0
 32265 ;;		Unchanged: 0/0
 32266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32271 ;;Total ram usage:        0 bytes
 32272 ;; Hardware stack levels used: 1
 32273 ;; Hardware stack levels required when called: 5
 32274 ;; This function calls:
 32275 ;;		_I2C1_MasterEnableRestart
 32276 ;; This function is called by:
 32277 ;;		_I2C1_DO_TX
 32278 ;;		_I2C1_MasterFsm
 32279 ;; This function uses a non-reentrant model
 32280 ;;
 32281                           
 32282                           	psect	text148
 32283  009F1C                     __ptext148:
 32284                           	callstack 0
 32285  009F1C                     _I2C1_DO_SEND_RESTART_WRITE:
 32286                           	callstack 15
 32287                           
 32288                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 32289                           
 32290                           ;incstack = 0
 32291  009F1C  ECC3  F04F         	call	_I2C1_MasterEnableRestart	;wreg free
 32292                           
 32293                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 32294  009F20  0E02               	movlw	2
 32295  009F22  0012               	return		;funcret
 32296  009F24                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 32297                           	callstack 0
 32298                           
 32299 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 32300 ;; Defined at:
 32301 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 32302 ;; Parameters:    Size  Location     Type
 32303 ;;		None
 32304 ;; Auto vars:     Size  Location     Type
 32305 ;;		None
 32306 ;; Return value:  Size  Location     Type
 32307 ;;                  1    wreg      enum E10442
 32308 ;; Registers used:
 32309 ;;		wreg, cstack
 32310 ;; Tracked objects:
 32311 ;;		On entry : 0/2
 32312 ;;		On exit  : 0/0
 32313 ;;		Unchanged: 0/0
 32314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32319 ;;Total ram usage:        0 bytes
 32320 ;; Hardware stack levels used: 1
 32321 ;; Hardware stack levels required when called: 5
 32322 ;; This function calls:
 32323 ;;		_I2C1_MasterEnableRestart
 32324 ;; This function is called by:
 32325 ;;		_I2C1_DO_TX
 32326 ;;		_I2C1_MasterFsm
 32327 ;; This function uses a non-reentrant model
 32328 ;;
 32329                           
 32330                           	psect	text149
 32331  009F24                     __ptext149:
 32332                           	callstack 0
 32333  009F24                     _I2C1_DO_SEND_RESTART_READ:
 32334                           	callstack 15
 32335                           
 32336                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 32337                           
 32338                           ;incstack = 0
 32339  009F24  ECC3  F04F         	call	_I2C1_MasterEnableRestart	;wreg free
 32340                           
 32341                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 32342  009F28  0E01               	movlw	1
 32343  009F2A  0012               	return		;funcret
 32344  009F2C                     __end_of_I2C1_DO_SEND_RESTART_READ:
 32345                           	callstack 0
 32346                           
 32347 ;; *************** function _I2C1_DO_RCEN *****************
 32348 ;; Defined at:
 32349 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 32350 ;; Parameters:    Size  Location     Type
 32351 ;;		None
 32352 ;; Auto vars:     Size  Location     Type
 32353 ;;		None
 32354 ;; Return value:  Size  Location     Type
 32355 ;;                  1    wreg      enum E10442
 32356 ;; Registers used:
 32357 ;;		wreg, cstack
 32358 ;; Tracked objects:
 32359 ;;		On entry : 3F/2
 32360 ;;		On exit  : 3F/2
 32361 ;;		Unchanged: 0/0
 32362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32367 ;;Total ram usage:        0 bytes
 32368 ;; Hardware stack levels used: 1
 32369 ;; Hardware stack levels required when called: 5
 32370 ;; This function calls:
 32371 ;;		_I2C1_MasterStartRx
 32372 ;; This function is called by:
 32373 ;;		_I2C1_MasterFsm
 32374 ;; This function uses a non-reentrant model
 32375 ;;
 32376                           
 32377                           	psect	text150
 32378  009ED0                     __ptext150:
 32379                           	callstack 0
 32380  009ED0                     _I2C1_DO_RCEN:
 32381                           	callstack 16
 32382                           
 32383                           ; BSR set to: 2
 32384                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 32385                           
 32386                           ;incstack = 0
 32387  009ED0  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32388                           
 32389                           ; BSR set to: 2
 32390                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 32391  009ED2  ECBB  F04F         	call	_I2C1_MasterStartRx	;wreg free
 32392                           
 32393                           ; BSR set to: 2
 32394                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 32395  009ED6  0E04               	movlw	4
 32396                           
 32397                           ; BSR set to: 2
 32398  009ED8  0012               	return		;funcret
 32399  009EDA                     __end_of_I2C1_DO_RCEN:
 32400                           	callstack 0
 32401                           
 32402 ;; *************** function _I2C1_DO_RX *****************
 32403 ;; Defined at:
 32404 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 32405 ;; Parameters:    Size  Location     Type
 32406 ;;		None
 32407 ;; Auto vars:     Size  Location     Type
 32408 ;;		None
 32409 ;; Return value:  Size  Location     Type
 32410 ;;                  1    wreg      enum E10442
 32411 ;; Registers used:
 32412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32413 ;; Tracked objects:
 32414 ;;		On entry : 3F/2
 32415 ;;		On exit  : 0/0
 32416 ;;		Unchanged: 0/0
 32417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32422 ;;Total ram usage:        2 bytes
 32423 ;; Hardware stack levels used: 1
 32424 ;; Hardware stack levels required when called: 7
 32425 ;; This function calls:
 32426 ;;		Absolute function
 32427 ;;		_I2C1_CallbackReturnReset
 32428 ;;		_I2C1_CallbackReturnStop
 32429 ;;		_I2C1_DO_RX_NACK_RESTART
 32430 ;;		_I2C1_DO_RX_NACK_STOP
 32431 ;;		_I2C1_MasterGetRxData
 32432 ;;		_I2C1_MasterSendAck
 32433 ;;		_rd1RegCompleteHandler
 32434 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32435 ;;		_rd2RegCompleteHandler
 32436 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32437 ;;		_rdBlkRegCompleteHandler
 32438 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32439 ;;		_wr1RegCompleteHandler
 32440 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32441 ;;		_wr2RegCompleteHandler
 32442 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32443 ;; This function is called by:
 32444 ;;		_I2C1_MasterFsm
 32445 ;; This function uses a non-reentrant model
 32446 ;;
 32447                           
 32448                           	psect	text151
 32449  008824                     __ptext151:
 32450                           	callstack 0
 32451  008824                     _I2C1_DO_RX:
 32452                           	callstack 14
 32453                           
 32454                           ; BSR set to: 2
 32455                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 32456                           
 32457                           ; BSR set to: 2
 32458                           ;incstack = 0
 32459  008824  ECB9  F04F         	call	_I2C1_MasterGetRxData	;wreg free
 32460  008828  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32461  00882C  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32462  008830  6EDF               	movwf	indf2,c
 32463                           
 32464                           ; BSR set to: 2
 32465  008832  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32466  008834  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32467                           
 32468                           ; BSR set to: 2
 32469                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 32470  008836  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32471  008838  A0D8               	btfss	status,0,c
 32472  00883A  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32473  00883C  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32474  00883E  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32475  008840  B4D8               	btfsc	status,2,c
 32476  008842  D004               	goto	l690
 32477                           
 32478                           ; BSR set to: 2
 32479                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 32480  008844  ECA6  F04F         	call	_I2C1_MasterSendAck	;wreg free
 32481                           
 32482                           ; BSR set to: 2
 32483                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 32484  008848  0E05               	movlw	5
 32485  00884A  0012               	return	
 32486  00884C                     l690:
 32487                           
 32488                           ; BSR set to: 2
 32489                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 32490  00884C  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32491                           
 32492                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32493  00884E  D006               	goto	l20260
 32494  008850                     l20250:
 32495                           
 32496                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 32497  008850  EC7A  F04F         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 32498  008854  0012               	return	
 32499  008856                     l20254:
 32500                           
 32501                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 32502  008856  EC7E  F04F         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 32503  00885A  0012               	return	
 32504  00885C                     l20260:
 32505                           
 32506                           ; BSR set to: 2
 32507  00885C  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32508  008860  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32509  008864  D801               	call	u23268
 32510  008866  D009               	goto	u23269
 32511  008868                     u23268:
 32512  008868  0005               	push	
 32513  00886A  6EFA               	movwf	pclath,c
 32514  00886C  513C               	movf	_I2C1_Status& (0+255),w,b
 32515  00886E  6EFD               	movwf	tosl,c
 32516  008870  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32517  008872  6EFE               	movwf	tosh,c
 32518  008874  6AFF               	clrf	tosu,c
 32519  008876  50FA               	movf	pclath,w,c
 32520  008878  0012               	return		;indir
 32521  00887A                     u23269:
 32522  00887A  6E1B               	movwf	??_I2C1_DO_RX^0,c
 32523  00887C  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 32524                           
 32525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32526                           ; Switch size 1, requested type "simple"
 32527                           ; Number of cases is 1, Range of values is 0 to 0
 32528                           ; switch strategies available:
 32529                           ; Name         Instructions Cycles
 32530                           ; simple_byte            4     3 (average)
 32531                           ;	Chosen strategy is simple_byte
 32532  00887E  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 32533  008880  0A00               	xorlw	0	; case 0
 32534  008882  A4D8               	btfss	status,2,c
 32535  008884  D7E8               	goto	l20254
 32536                           
 32537                           ; Switch size 1, requested type "simple"
 32538                           ; Number of cases is 4, Range of values is 1 to 4
 32539                           ; switch strategies available:
 32540                           ; Name         Instructions Cycles
 32541                           ; simple_byte           13     7 (average)
 32542                           ;	Chosen strategy is simple_byte
 32543  008886  501B               	movf	??_I2C1_DO_RX^0,w,c
 32544  008888  0A01               	xorlw	1	; case 1
 32545  00888A  B4D8               	btfsc	status,2,c
 32546  00888C  D7E4               	goto	l20254
 32547  00888E  0A03               	xorlw	3	; case 2
 32548  008890  B4D8               	btfsc	status,2,c
 32549  008892  D7DE               	goto	l20250
 32550  008894  0A01               	xorlw	1	; case 3
 32551  008896  B4D8               	btfsc	status,2,c
 32552  008898  D7DB               	goto	l20250
 32553  00889A  0A07               	xorlw	7	; case 4
 32554  00889C  D7DC               	goto	l20254
 32555  00889E                     __end_of_I2C1_DO_RX:
 32556                           	callstack 0
 32557                           
 32558 ;; *************** function _I2C1_DO_TX *****************
 32559 ;; Defined at:
 32560 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 32561 ;; Parameters:    Size  Location     Type
 32562 ;;		None
 32563 ;; Auto vars:     Size  Location     Type
 32564 ;;		None
 32565 ;; Return value:  Size  Location     Type
 32566 ;;                  1    wreg      enum E10442
 32567 ;; Registers used:
 32568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32569 ;; Tracked objects:
 32570 ;;		On entry : 3F/2
 32571 ;;		On exit  : 0/0
 32572 ;;		Unchanged: 0/0
 32573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32578 ;;Total ram usage:        2 bytes
 32579 ;; Hardware stack levels used: 1
 32580 ;; Hardware stack levels required when called: 7
 32581 ;; This function calls:
 32582 ;;		Absolute function
 32583 ;;		_I2C1_CallbackReturnReset
 32584 ;;		_I2C1_CallbackReturnStop
 32585 ;;		_I2C1_DO_SEND_RESTART_READ
 32586 ;;		_I2C1_DO_SEND_RESTART_WRITE
 32587 ;;		_I2C1_DO_SEND_STOP
 32588 ;;		_I2C1_MasterIsNack
 32589 ;;		_I2C1_MasterSendTxData
 32590 ;;		_rd1RegCompleteHandler
 32591 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32592 ;;		_rd2RegCompleteHandler
 32593 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32594 ;;		_rdBlkRegCompleteHandler
 32595 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32596 ;;		_wr1RegCompleteHandler
 32597 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32598 ;;		_wr2RegCompleteHandler
 32599 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32600 ;; This function is called by:
 32601 ;;		_I2C1_MasterFsm
 32602 ;; This function uses a non-reentrant model
 32603 ;;
 32604                           
 32605                           	psect	text152
 32606  008386                     __ptext152:
 32607                           	callstack 0
 32608  008386                     _I2C1_DO_TX:
 32609                           	callstack 14
 32610                           
 32611                           ; BSR set to: 2
 32612                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 32613                           
 32614                           ;incstack = 0
 32615  008386  EC2A  F04F         	call	_I2C1_MasterIsNack	;wreg free
 32616  00838A  0900               	iorlw	0
 32617  00838C  A4D8               	btfss	status,2,c
 32618  00838E  D00A               	goto	l20220
 32619  008390  D02A               	goto	l674
 32620  008392                     l20206:
 32621                           
 32622                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 32623  008392  EC92  F04F         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 32624  008396  0012               	return	
 32625  008398                     l20210:
 32626                           
 32627                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 32628  008398  EC8E  F04F         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 32629  00839C  0012               	return	
 32630  00839E                     l20214:
 32631                           
 32632                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 32633  00839E  EC86  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 32634  0083A2  0012               	return	
 32635  0083A4                     l20220:
 32636                           
 32637                           ; BSR set to: 2
 32638  0083A4  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 32639  0083A8  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 32640  0083AC  D801               	call	u23238
 32641  0083AE  D009               	goto	u23239
 32642  0083B0                     u23238:
 32643  0083B0  0005               	push	
 32644  0083B2  6EFA               	movwf	pclath,c
 32645  0083B4  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 32646  0083B6  6EFD               	movwf	tosl,c
 32647  0083B8  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 32648  0083BA  6EFE               	movwf	tosh,c
 32649  0083BC  6AFF               	clrf	tosu,c
 32650  0083BE  50FA               	movf	pclath,w,c
 32651  0083C0  0012               	return		;indir
 32652  0083C2                     u23239:
 32653  0083C2  6E1B               	movwf	??_I2C1_DO_TX^0,c
 32654  0083C4  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 32655                           
 32656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32657                           ; Switch size 1, requested type "simple"
 32658                           ; Number of cases is 1, Range of values is 0 to 0
 32659                           ; switch strategies available:
 32660                           ; Name         Instructions Cycles
 32661                           ; simple_byte            4     3 (average)
 32662                           ;	Chosen strategy is simple_byte
 32663  0083C6  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 32664  0083C8  0A00               	xorlw	0	; case 0
 32665  0083CA  A4D8               	btfss	status,2,c
 32666  0083CC  D7E8               	goto	l20214
 32667                           
 32668                           ; Switch size 1, requested type "simple"
 32669                           ; Number of cases is 4, Range of values is 1 to 4
 32670                           ; switch strategies available:
 32671                           ; Name         Instructions Cycles
 32672                           ; simple_byte           13     7 (average)
 32673                           ;	Chosen strategy is simple_byte
 32674  0083CE  501B               	movf	??_I2C1_DO_TX^0,w,c
 32675  0083D0  0A01               	xorlw	1	; case 1
 32676  0083D2  B4D8               	btfsc	status,2,c
 32677  0083D4  D7E4               	goto	l20214
 32678  0083D6  0A03               	xorlw	3	; case 2
 32679  0083D8  B4D8               	btfsc	status,2,c
 32680  0083DA  D7DB               	goto	l20206
 32681  0083DC  0A01               	xorlw	1	; case 3
 32682  0083DE  B4D8               	btfsc	status,2,c
 32683  0083E0  D7DB               	goto	l20210
 32684  0083E2  0A07               	xorlw	7	; case 4
 32685  0083E4  D7DC               	goto	l20214
 32686  0083E6                     l674:
 32687                           
 32688                           ; BSR set to: 2
 32689                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 32690  0083E6  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 32691                           
 32692                           ; BSR set to: 2
 32693                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 32694  0083E8  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 32695  0083EC  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 32696  0083F0  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 32697  0083F2  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 32698  0083F4  50DF               	movf	indf2,w,c
 32699  0083F6  EC96  F04F         	call	_I2C1_MasterSendTxData
 32700                           
 32701                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 32702  0083FA  0102               	movlb	2	; () banked
 32703  0083FC  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 32704  0083FE  A0D8               	btfss	status,0,c
 32705  008400  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 32706  008402  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 32707  008404  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 32708  008406  A4D8               	btfss	status,2,c
 32709  008408  D002               	goto	l20228
 32710                           
 32711                           ; BSR set to: 2
 32712  00840A  0E06               	movlw	6
 32713  00840C  0012               	return	
 32714  00840E                     l20228:
 32715                           
 32716                           ; BSR set to: 2
 32717  00840E  0E03               	movlw	3
 32718  008410  0012               	return		;funcret
 32719  008412                     __end_of_I2C1_DO_TX:
 32720                           	callstack 0
 32721                           
 32722 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 32723 ;; Defined at:
 32724 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 32725 ;; Parameters:    Size  Location     Type
 32726 ;;		None
 32727 ;; Auto vars:     Size  Location     Type
 32728 ;;		None
 32729 ;; Return value:  Size  Location     Type
 32730 ;;                  1    wreg      enum E10442
 32731 ;; Registers used:
 32732 ;;		wreg, status,2, status,0, cstack
 32733 ;; Tracked objects:
 32734 ;;		On entry : 3F/2
 32735 ;;		On exit  : 0/0
 32736 ;;		Unchanged: 0/0
 32737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32742 ;;Total ram usage:        0 bytes
 32743 ;; Hardware stack levels used: 1
 32744 ;; Hardware stack levels required when called: 5
 32745 ;; This function calls:
 32746 ;;		_I2C1_MasterSendTxData
 32747 ;; This function is called by:
 32748 ;;		_I2C1_MasterFsm
 32749 ;; This function uses a non-reentrant model
 32750 ;;
 32751                           
 32752                           	psect	text153
 32753  009E38                     __ptext153:
 32754                           	callstack 0
 32755  009E38                     _I2C1_DO_SEND_ADR_WRITE:
 32756                           	callstack 16
 32757                           
 32758                           ; BSR set to: 2
 32759                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 32760                           
 32761                           ;incstack = 0
 32762  009E38  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32763                           
 32764                           ; BSR set to: 2
 32765                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 32766  009E3A  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 32767  009E3C  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 32768  009E3E  EC96  F04F         	call	_I2C1_MasterSendTxData
 32769                           
 32770                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 32771  009E42  0E03               	movlw	3
 32772  009E44  0012               	return		;funcret
 32773  009E46                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 32774                           	callstack 0
 32775                           
 32776 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 32777 ;; Defined at:
 32778 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 32779 ;; Parameters:    Size  Location     Type
 32780 ;;		None
 32781 ;; Auto vars:     Size  Location     Type
 32782 ;;		None
 32783 ;; Return value:  Size  Location     Type
 32784 ;;                  1    wreg      enum E10442
 32785 ;; Registers used:
 32786 ;;		wreg, status,0, cstack
 32787 ;; Tracked objects:
 32788 ;;		On entry : 3F/2
 32789 ;;		On exit  : 0/0
 32790 ;;		Unchanged: 0/0
 32791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32796 ;;Total ram usage:        0 bytes
 32797 ;; Hardware stack levels used: 1
 32798 ;; Hardware stack levels required when called: 5
 32799 ;; This function calls:
 32800 ;;		_I2C1_MasterSendTxData
 32801 ;; This function is called by:
 32802 ;;		_I2C1_MasterFsm
 32803 ;; This function uses a non-reentrant model
 32804 ;;
 32805                           
 32806                           	psect	text154
 32807  009E46                     __ptext154:
 32808                           	callstack 0
 32809  009E46                     _I2C1_DO_SEND_ADR_READ:
 32810                           	callstack 16
 32811                           
 32812                           ; BSR set to: 2
 32813                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 32814                           
 32815                           ;incstack = 0
 32816  009E46  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 32817                           
 32818                           ; BSR set to: 2
 32819                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 32820  009E48  80D8               	bsf	status,0,c
 32821  009E4A  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 32822  009E4C  EC96  F04F         	call	_I2C1_MasterSendTxData
 32823                           
 32824                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 32825  009E50  0E05               	movlw	5
 32826  009E52  0012               	return		;funcret
 32827  009E54                     __end_of_I2C1_DO_SEND_ADR_READ:
 32828                           	callstack 0
 32829                           
 32830 ;; *************** function _I2C1_DO_IDLE *****************
 32831 ;; Defined at:
 32832 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 32833 ;; Parameters:    Size  Location     Type
 32834 ;;		None
 32835 ;; Auto vars:     Size  Location     Type
 32836 ;;		None
 32837 ;; Return value:  Size  Location     Type
 32838 ;;                  1    wreg      enum E10442
 32839 ;; Registers used:
 32840 ;;		wreg, status,2
 32841 ;; Tracked objects:
 32842 ;;		On entry : 3F/2
 32843 ;;		On exit  : 3F/2
 32844 ;;		Unchanged: 0/0
 32845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32850 ;;Total ram usage:        0 bytes
 32851 ;; Hardware stack levels used: 1
 32852 ;; Hardware stack levels required when called: 4
 32853 ;; This function calls:
 32854 ;;		Nothing
 32855 ;; This function is called by:
 32856 ;;		_I2C1_MasterFsm
 32857 ;; This function uses a non-reentrant model
 32858 ;;
 32859                           
 32860                           	psect	text155
 32861  009EDA                     __ptext155:
 32862                           	callstack 0
 32863  009EDA                     _I2C1_DO_IDLE:
 32864                           	callstack 17
 32865                           
 32866                           ; BSR set to: 2
 32867                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 32868                           
 32869                           ;incstack = 0
 32870  009EDA  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 32871                           
 32872                           ; BSR set to: 2
 32873                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 32874  009EDC  0E00               	movlw	0
 32875  009EDE  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 32876                           
 32877                           ; BSR set to: 2
 32878                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 32879  009EE0  0E0E               	movlw	14
 32880                           
 32881                           ; BSR set to: 2
 32882  009EE2  0012               	return		;funcret
 32883  009EE4                     __end_of_I2C1_DO_IDLE:
 32884                           	callstack 0
 32885                           
 32886 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 32887 ;; Defined at:
 32888 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 32889 ;; Parameters:    Size  Location     Type
 32890 ;;		None
 32891 ;; Auto vars:     Size  Location     Type
 32892 ;;		None
 32893 ;; Return value:  Size  Location     Type
 32894 ;;                  1    wreg      enum E10442
 32895 ;; Registers used:
 32896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 32897 ;; Tracked objects:
 32898 ;;		On entry : 3F/2
 32899 ;;		On exit  : 0/0
 32900 ;;		Unchanged: 0/0
 32901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32906 ;;Total ram usage:        2 bytes
 32907 ;; Hardware stack levels used: 1
 32908 ;; Hardware stack levels required when called: 7
 32909 ;; This function calls:
 32910 ;;		Absolute function
 32911 ;;		_I2C1_CallbackReturnReset
 32912 ;;		_I2C1_CallbackReturnStop
 32913 ;;		_I2C1_DO_SEND_RESTART
 32914 ;;		_I2C1_DO_SEND_STOP
 32915 ;;		_I2C1_MasterSetIrq
 32916 ;;		_rd1RegCompleteHandler
 32917 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32918 ;;		_rd2RegCompleteHandler
 32919 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32920 ;;		_rdBlkRegCompleteHandler
 32921 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32922 ;;		_wr1RegCompleteHandler
 32923 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32924 ;;		_wr2RegCompleteHandler
 32925 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32926 ;; This function is called by:
 32927 ;;		_I2C1_MasterFsm
 32928 ;; This function uses a non-reentrant model
 32929 ;;
 32930                           
 32931                           	psect	text156
 32932  008E40                     __ptext156:
 32933                           	callstack 0
 32934  008E40                     _I2C1_DO_TX_EMPTY:
 32935                           	callstack 14
 32936                           
 32937                           ; BSR set to: 2
 32938                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 32939                           
 32940                           ; BSR set to: 2
 32941                           ;incstack = 0
 32942  008E40  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 32943                           
 32944                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 32945  008E42  D00A               	goto	l20292
 32946  008E44                     l20276:
 32947                           
 32948                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 32949  008E44  EC8A  F04F         	call	_I2C1_DO_SEND_RESTART	;wreg free
 32950  008E48  0012               	return	
 32951  008E4A                     l20280:
 32952                           
 32953                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 32954  008E4A  ECA3  F04F         	call	_I2C1_MasterSetIrq	;wreg free
 32955                           
 32956                           ; BSR set to: 14
 32957                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 32958  008E4E  0E03               	movlw	3
 32959  008E50  0012               	return	
 32960  008E52                     l20286:
 32961                           
 32962                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 32963  008E52  EC86  F04F         	call	_I2C1_DO_SEND_STOP	;wreg free
 32964  008E56  0012               	return	
 32965  008E58                     l20292:
 32966                           
 32967                           ; BSR set to: 2
 32968  008E58  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 32969  008E5C  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 32970  008E60  D801               	call	u23278
 32971  008E62  D009               	goto	u23279
 32972  008E64                     u23278:
 32973  008E64  0005               	push	
 32974  008E66  6EFA               	movwf	pclath,c
 32975  008E68  513C               	movf	_I2C1_Status& (0+255),w,b
 32976  008E6A  6EFD               	movwf	tosl,c
 32977  008E6C  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 32978  008E6E  6EFE               	movwf	tosh,c
 32979  008E70  6AFF               	clrf	tosu,c
 32980  008E72  50FA               	movf	pclath,w,c
 32981  008E74  0012               	return		;indir
 32982  008E76                     u23279:
 32983  008E76  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 32984  008E78  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 32985                           
 32986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32987                           ; Switch size 1, requested type "simple"
 32988                           ; Number of cases is 1, Range of values is 0 to 0
 32989                           ; switch strategies available:
 32990                           ; Name         Instructions Cycles
 32991                           ; simple_byte            4     3 (average)
 32992                           ;	Chosen strategy is simple_byte
 32993  008E7A  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 32994  008E7C  0A00               	xorlw	0	; case 0
 32995  008E7E  A4D8               	btfss	status,2,c
 32996  008E80  D7E8               	goto	l20286
 32997                           
 32998                           ; Switch size 1, requested type "simple"
 32999                           ; Number of cases is 4, Range of values is 1 to 4
 33000                           ; switch strategies available:
 33001                           ; Name         Instructions Cycles
 33002                           ; simple_byte           13     7 (average)
 33003                           ;	Chosen strategy is simple_byte
 33004  008E82  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 33005  008E84  0A01               	xorlw	1	; case 1
 33006  008E86  B4D8               	btfsc	status,2,c
 33007  008E88  D7E4               	goto	l20286
 33008  008E8A  0A03               	xorlw	3	; case 2
 33009  008E8C  B4D8               	btfsc	status,2,c
 33010  008E8E  D7DA               	goto	l20276
 33011  008E90  0A01               	xorlw	1	; case 3
 33012  008E92  B4D8               	btfsc	status,2,c
 33013  008E94  D7D7               	goto	l20276
 33014  008E96  0A07               	xorlw	7	; case 4
 33015  008E98  B4D8               	btfsc	status,2,c
 33016  008E9A  D7D7               	goto	l20280
 33017  008E9C  D7DA               	goto	l20286
 33018  008E9E                     __end_of_I2C1_DO_TX_EMPTY:
 33019                           	callstack 0
 33020                           
 33021 ;; *************** function _I2C1_MasterSetIrq *****************
 33022 ;; Defined at:
 33023 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 33024 ;; Parameters:    Size  Location     Type
 33025 ;;		None
 33026 ;; Auto vars:     Size  Location     Type
 33027 ;;		None
 33028 ;; Return value:  Size  Location     Type
 33029 ;;                  1    wreg      void 
 33030 ;; Registers used:
 33031 ;;		None
 33032 ;; Tracked objects:
 33033 ;;		On entry : 0/2
 33034 ;;		On exit  : 3F/E
 33035 ;;		Unchanged: 0/0
 33036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33041 ;;Total ram usage:        0 bytes
 33042 ;; Hardware stack levels used: 1
 33043 ;; Hardware stack levels required when called: 4
 33044 ;; This function calls:
 33045 ;;		Nothing
 33046 ;; This function is called by:
 33047 ;;		_I2C1_DO_TX_EMPTY
 33048 ;; This function uses a non-reentrant model
 33049 ;;
 33050                           
 33051                           	psect	text157
 33052  009F46                     __ptext157:
 33053                           	callstack 0
 33054  009F46                     _I2C1_MasterSetIrq:
 33055                           	callstack 16
 33056                           
 33057                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 33058                           
 33059                           ;incstack = 0
 33060  009F46  010E               	movlb	14	; () banked
 33061  009F48  81CD               	bsf	205,0,b	;volatile
 33062                           
 33063                           ; BSR set to: 14
 33064  009F4A  0012               	return		;funcret
 33065  009F4C                     __end_of_I2C1_MasterSetIrq:
 33066                           	callstack 0
 33067                           
 33068 ;; *************** function _I2C1_MasterIsNack *****************
 33069 ;; Defined at:
 33070 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 33071 ;; Parameters:    Size  Location     Type
 33072 ;;		None
 33073 ;; Auto vars:     Size  Location     Type
 33074 ;;		None
 33075 ;; Return value:  Size  Location     Type
 33076 ;;                  1    wreg      _Bool 
 33077 ;; Registers used:
 33078 ;;		wreg
 33079 ;; Tracked objects:
 33080 ;;		On entry : 3F/2
 33081 ;;		On exit  : 3F/2
 33082 ;;		Unchanged: 3F/0
 33083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33088 ;;Total ram usage:        0 bytes
 33089 ;; Hardware stack levels used: 1
 33090 ;; Hardware stack levels required when called: 4
 33091 ;; This function calls:
 33092 ;;		Nothing
 33093 ;; This function is called by:
 33094 ;;		_I2C1_MasterFsm
 33095 ;;		_I2C1_DO_TX
 33096 ;; This function uses a non-reentrant model
 33097 ;;
 33098                           
 33099                           	psect	text158
 33100  009E54                     __ptext158:
 33101                           	callstack 0
 33102  009E54                     _I2C1_MasterIsNack:
 33103                           	callstack 17
 33104                           
 33105                           ; BSR set to: 2
 33106                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 33107                           
 33108                           ; BSR set to: 14
 33109                           ;incstack = 0
 33110  009E54  AC97               	btfss	151,6,c	;volatile
 33111  009E56  D002               	goto	u23210
 33112  009E58  0E01               	movlw	1
 33113  009E5A  0012               	return	
 33114  009E5C                     u23210:
 33115  009E5C  0E00               	movlw	0
 33116                           
 33117                           ; BSR set to: 2
 33118  009E5E  0012               	return		;funcret
 33119  009E60                     __end_of_I2C1_MasterIsNack:
 33120                           	callstack 0
 33121                           
 33122 ;; *************** function _I2C1_MasterSendTxData *****************
 33123 ;; Defined at:
 33124 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 33125 ;; Parameters:    Size  Location     Type
 33126 ;;  data            1    wreg     unsigned char 
 33127 ;; Auto vars:     Size  Location     Type
 33128 ;;  data            1   15[COMRAM] unsigned char 
 33129 ;; Return value:  Size  Location     Type
 33130 ;;                  1    wreg      void 
 33131 ;; Registers used:
 33132 ;;		wreg
 33133 ;; Tracked objects:
 33134 ;;		On entry : 3F/2
 33135 ;;		On exit  : 0/0
 33136 ;;		Unchanged: 0/0
 33137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33141 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33142 ;;Total ram usage:        1 bytes
 33143 ;; Hardware stack levels used: 1
 33144 ;; Hardware stack levels required when called: 4
 33145 ;; This function calls:
 33146 ;;		Nothing
 33147 ;; This function is called by:
 33148 ;;		_I2C1_DO_SEND_ADR_READ
 33149 ;;		_I2C1_DO_SEND_ADR_WRITE
 33150 ;;		_I2C1_DO_TX
 33151 ;; This function uses a non-reentrant model
 33152 ;;
 33153                           
 33154                           	psect	text159
 33155  009F2C                     __ptext159:
 33156                           	callstack 0
 33157  009F2C                     _I2C1_MasterSendTxData:
 33158                           	callstack 16
 33159                           
 33160                           ; BSR set to: 2
 33161                           ;incstack = 0
 33162                           ;I2C1_MasterSendTxData@data stored from wreg
 33163  009F2C  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 33164                           
 33165                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 33166  009F2E  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 33167  009F32  0012               	return		;funcret
 33168  009F34                     __end_of_I2C1_MasterSendTxData:
 33169                           	callstack 0
 33170                           
 33171 ;; *************** function _I2C1_MasterSendAck *****************
 33172 ;; Defined at:
 33173 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 33174 ;; Parameters:    Size  Location     Type
 33175 ;;		None
 33176 ;; Auto vars:     Size  Location     Type
 33177 ;;		None
 33178 ;; Return value:  Size  Location     Type
 33179 ;;                  1    wreg      void 
 33180 ;; Registers used:
 33181 ;;		None
 33182 ;; Tracked objects:
 33183 ;;		On entry : 3F/2
 33184 ;;		On exit  : 3F/2
 33185 ;;		Unchanged: 3F/0
 33186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33191 ;;Total ram usage:        0 bytes
 33192 ;; Hardware stack levels used: 1
 33193 ;; Hardware stack levels required when called: 4
 33194 ;; This function calls:
 33195 ;;		Nothing
 33196 ;; This function is called by:
 33197 ;;		_I2C1_DO_RX
 33198 ;;		_I2C1_DO_RX_ACK
 33199 ;; This function uses a non-reentrant model
 33200 ;;
 33201                           
 33202                           	psect	text160
 33203  009F4C                     __ptext160:
 33204                           	callstack 0
 33205  009F4C                     _I2C1_MasterSendAck:
 33206                           	callstack 16
 33207                           
 33208                           ; BSR set to: 2
 33209                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 33210                           
 33211                           ;incstack = 0
 33212  009F4C  9A97               	bcf	151,5,c	;volatile
 33213                           
 33214                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 33215  009F4E  8897               	bsf	151,4,c	;volatile
 33216                           
 33217                           ; BSR set to: 2
 33218  009F50  0012               	return		;funcret
 33219  009F52                     __end_of_I2C1_MasterSendAck:
 33220                           	callstack 0
 33221                           
 33222 ;; *************** function _I2C1_MasterGetRxData *****************
 33223 ;; Defined at:
 33224 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 33225 ;; Parameters:    Size  Location     Type
 33226 ;;		None
 33227 ;; Auto vars:     Size  Location     Type
 33228 ;;		None
 33229 ;; Return value:  Size  Location     Type
 33230 ;;                  1    wreg      unsigned char 
 33231 ;; Registers used:
 33232 ;;		wreg, status,2
 33233 ;; Tracked objects:
 33234 ;;		On entry : 3F/2
 33235 ;;		On exit  : 3F/2
 33236 ;;		Unchanged: 3F/0
 33237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33242 ;;Total ram usage:        0 bytes
 33243 ;; Hardware stack levels used: 1
 33244 ;; Hardware stack levels required when called: 4
 33245 ;; This function calls:
 33246 ;;		Nothing
 33247 ;; This function is called by:
 33248 ;;		_I2C1_DO_RX
 33249 ;; This function uses a non-reentrant model
 33250 ;;
 33251                           
 33252                           	psect	text161
 33253  009F72                     __ptext161:
 33254                           	callstack 0
 33255  009F72                     _I2C1_MasterGetRxData:
 33256                           	callstack 16
 33257                           
 33258                           ; BSR set to: 2
 33259                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 33260                           
 33261                           ; BSR set to: 2
 33262                           ;incstack = 0
 33263  009F72  5092               	movf	146,w,c	;volatile
 33264                           
 33265                           ; BSR set to: 2
 33266  009F74  0012               	return		;funcret
 33267  009F76                     __end_of_I2C1_MasterGetRxData:
 33268                           	callstack 0
 33269                           
 33270 ;; *************** function _I2C1_MasterSendNack *****************
 33271 ;; Defined at:
 33272 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 33273 ;; Parameters:    Size  Location     Type
 33274 ;;		None
 33275 ;; Auto vars:     Size  Location     Type
 33276 ;;		None
 33277 ;; Return value:  Size  Location     Type
 33278 ;;                  1    wreg      void 
 33279 ;; Registers used:
 33280 ;;		None
 33281 ;; Tracked objects:
 33282 ;;		On entry : 0/2
 33283 ;;		On exit  : 0/0
 33284 ;;		Unchanged: 0/0
 33285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33290 ;;Total ram usage:        0 bytes
 33291 ;; Hardware stack levels used: 1
 33292 ;; Hardware stack levels required when called: 4
 33293 ;; This function calls:
 33294 ;;		Nothing
 33295 ;; This function is called by:
 33296 ;;		_I2C1_DO_RX_NACK_STOP
 33297 ;;		_I2C1_DO_RX_NACK_RESTART
 33298 ;; This function uses a non-reentrant model
 33299 ;;
 33300                           
 33301                           	psect	text162
 33302  009F52                     __ptext162:
 33303                           	callstack 0
 33304  009F52                     _I2C1_MasterSendNack:
 33305                           	callstack 16
 33306                           
 33307                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 33308                           
 33309                           ; BSR set to: 2
 33310                           ;incstack = 0
 33311  009F52  8A97               	bsf	151,5,c	;volatile
 33312                           
 33313                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 33314  009F54  8897               	bsf	151,4,c	;volatile
 33315  009F56  0012               	return		;funcret
 33316  009F58                     __end_of_I2C1_MasterSendNack:
 33317                           	callstack 0
 33318                           
 33319 ;; *************** function _I2C1_MasterStartRx *****************
 33320 ;; Defined at:
 33321 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 33322 ;; Parameters:    Size  Location     Type
 33323 ;;		None
 33324 ;; Auto vars:     Size  Location     Type
 33325 ;;		None
 33326 ;; Return value:  Size  Location     Type
 33327 ;;                  1    wreg      void 
 33328 ;; Registers used:
 33329 ;;		None
 33330 ;; Tracked objects:
 33331 ;;		On entry : 3F/2
 33332 ;;		On exit  : 3F/2
 33333 ;;		Unchanged: 3F/0
 33334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33339 ;;Total ram usage:        0 bytes
 33340 ;; Hardware stack levels used: 1
 33341 ;; Hardware stack levels required when called: 4
 33342 ;; This function calls:
 33343 ;;		Nothing
 33344 ;; This function is called by:
 33345 ;;		_I2C1_DO_RCEN
 33346 ;; This function uses a non-reentrant model
 33347 ;;
 33348                           
 33349                           	psect	text163
 33350  009F76                     __ptext163:
 33351                           	callstack 0
 33352  009F76                     _I2C1_MasterStartRx:
 33353                           	callstack 16
 33354                           
 33355                           ; BSR set to: 2
 33356                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 33357                           
 33358                           ;incstack = 0
 33359  009F76  8697               	bsf	151,3,c	;volatile
 33360                           
 33361                           ; BSR set to: 2
 33362  009F78  0012               	return		;funcret
 33363  009F7A                     __end_of_I2C1_MasterStartRx:
 33364                           	callstack 0
 33365                           
 33366 ;; *************** function _I2C1_CallbackReturnReset *****************
 33367 ;; Defined at:
 33368 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 33369 ;; Parameters:    Size  Location     Type
 33370 ;;  funPtr          2   24[COMRAM] PTR void 
 33371 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33372 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33373 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33374 ;; Auto vars:     Size  Location     Type
 33375 ;;		None
 33376 ;; Return value:  Size  Location     Type
 33377 ;;                  1    wreg      enum E360
 33378 ;; Registers used:
 33379 ;;		wreg
 33380 ;; Tracked objects:
 33381 ;;		On entry : 3F/2
 33382 ;;		On exit  : 3F/2
 33383 ;;		Unchanged: 3F/0
 33384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33389 ;;Total ram usage:        2 bytes
 33390 ;; Hardware stack levels used: 1
 33391 ;; Hardware stack levels required when called: 4
 33392 ;; This function calls:
 33393 ;;		Nothing
 33394 ;; This function is called by:
 33395 ;;		_I2C1_Open
 33396 ;;		_I2C1_DO_TX
 33397 ;;		_I2C1_DO_RX
 33398 ;;		_I2C1_DO_TX_EMPTY
 33399 ;;		_I2C1_DO_ADDRESS_NACK
 33400 ;; This function uses a non-reentrant model
 33401 ;;
 33402                           
 33403                           	psect	text164
 33404  009F7A                     __ptext164:
 33405                           	callstack 0
 33406  009F7A                     _I2C1_CallbackReturnReset:
 33407                           	callstack 16
 33408                           
 33409                           ; BSR set to: 2
 33410                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 33411                           
 33412                           ; BSR set to: 2
 33413                           ;incstack = 0
 33414  009F7A  0E05               	movlw	5
 33415                           
 33416                           ; BSR set to: 2
 33417  009F7C  0012               	return		;funcret
 33418  009F7E                     __end_of_I2C1_CallbackReturnReset:
 33419                           	callstack 0
 33420                           
 33421 ;; *************** function _I2C1_CallbackReturnStop *****************
 33422 ;; Defined at:
 33423 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 33424 ;; Parameters:    Size  Location     Type
 33425 ;;  funPtr          2   24[COMRAM] PTR void 
 33426 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33427 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33428 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33429 ;; Auto vars:     Size  Location     Type
 33430 ;;		None
 33431 ;; Return value:  Size  Location     Type
 33432 ;;                  1    wreg      enum E360
 33433 ;; Registers used:
 33434 ;;		wreg
 33435 ;; Tracked objects:
 33436 ;;		On entry : 3F/2
 33437 ;;		On exit  : 3F/2
 33438 ;;		Unchanged: 3F/0
 33439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33444 ;;Total ram usage:        2 bytes
 33445 ;; Hardware stack levels used: 1
 33446 ;; Hardware stack levels required when called: 4
 33447 ;; This function calls:
 33448 ;;		Nothing
 33449 ;; This function is called by:
 33450 ;;		_I2C1_Open
 33451 ;;		_I2C1_SetCallback
 33452 ;;		_I2C1_DO_TX
 33453 ;;		_I2C1_DO_RX
 33454 ;;		_I2C1_DO_TX_EMPTY
 33455 ;;		_I2C1_DO_ADDRESS_NACK
 33456 ;; This function uses a non-reentrant model
 33457 ;;
 33458                           
 33459                           	psect	text165
 33460  009F7E                     __ptext165:
 33461                           	callstack 0
 33462  009F7E                     _I2C1_CallbackReturnStop:
 33463                           	callstack 16
 33464                           
 33465                           ; BSR set to: 2
 33466                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 33467                           
 33468                           ; BSR set to: 2
 33469                           ;incstack = 0
 33470  009F7E  0E01               	movlw	1
 33471                           
 33472                           ; BSR set to: 2
 33473  009F80  0012               	return		;funcret
 33474  009F82                     __end_of_I2C1_CallbackReturnStop:
 33475                           	callstack 0
 33476                           
 33477 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 33478 ;; Defined at:
 33479 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33480 ;; Parameters:    Size  Location     Type
 33481 ;;  ptr             2   24[COMRAM] PTR void 
 33482 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33483 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33484 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33485 ;; Auto vars:     Size  Location     Type
 33486 ;;		None
 33487 ;; Return value:  Size  Location     Type
 33488 ;;                  1    wreg      enum E527
 33489 ;; Registers used:
 33490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33491 ;; Tracked objects:
 33492 ;;		On entry : 3F/2
 33493 ;;		On exit  : 0/0
 33494 ;;		Unchanged: 0/0
 33495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33500 ;;Total ram usage:        2 bytes
 33501 ;; Hardware stack levels used: 1
 33502 ;; Hardware stack levels required when called: 6
 33503 ;; This function calls:
 33504 ;;		_I2C1_SetBuffer
 33505 ;;		_I2C1_SetDataCompleteCallback
 33506 ;; This function is called by:
 33507 ;;		_I2C1_DO_TX
 33508 ;;		_I2C1_DO_RX
 33509 ;;		_I2C1_DO_TX_EMPTY
 33510 ;;		_I2C1_DO_ADDRESS_NACK
 33511 ;; This function uses a non-reentrant model
 33512 ;;
 33513                           
 33514                           	psect	text166
 33515  009584                     __ptext166:
 33516                           	callstack 0
 33517  009584                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33518                           	callstack 14
 33519                           
 33520                           ; BSR set to: 2
 33521                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 33522                           
 33523                           ; BSR set to: 2
 33524                           ;incstack = 0
 33525  009584  EE20 F002          	lfsr	2,2
 33526  009588  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 33527  00958A  26D9               	addwf	fsr2l,f,c
 33528  00958C  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 33529  00958E  22DA               	addwfc	fsr2h,f,c
 33530  009590  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33531  009594  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33532  009598  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 33533  00959C  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 33534  0095A0  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33535  0095A4  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33536  0095A8  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 33537                           
 33538                           ; BSR set to: 2
 33539                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33540  0095AC  0E00               	movlw	0
 33541  0095AE  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33542  0095B0  0E00               	movlw	0
 33543  0095B2  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33544  0095B4  0E00               	movlw	0
 33545  0095B6  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33546  0095B8  0E00               	movlw	0
 33547  0095BA  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33548  0095BC  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33549                           
 33550                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 33551  0095C0  0E02               	movlw	2
 33552  0095C2  0012               	return		;funcret
 33553  0095C4                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 33554                           	callstack 0
 33555                           
 33556 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 33557 ;; Defined at:
 33558 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33559 ;; Parameters:    Size  Location     Type
 33560 ;;  ptr             2   24[COMRAM] PTR void 
 33561 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33562 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33563 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33564 ;; Auto vars:     Size  Location     Type
 33565 ;;		None
 33566 ;; Return value:  Size  Location     Type
 33567 ;;                  1    wreg      enum E527
 33568 ;; Registers used:
 33569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33570 ;; Tracked objects:
 33571 ;;		On entry : 3F/2
 33572 ;;		On exit  : 0/0
 33573 ;;		Unchanged: 0/0
 33574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33579 ;;Total ram usage:        2 bytes
 33580 ;; Hardware stack levels used: 1
 33581 ;; Hardware stack levels required when called: 6
 33582 ;; This function calls:
 33583 ;;		_I2C1_SetBuffer
 33584 ;;		_I2C1_SetDataCompleteCallback
 33585 ;; This function is called by:
 33586 ;;		_I2C1_DO_TX
 33587 ;;		_I2C1_DO_RX
 33588 ;;		_I2C1_DO_TX_EMPTY
 33589 ;;		_I2C1_DO_ADDRESS_NACK
 33590 ;; This function uses a non-reentrant model
 33591 ;;
 33592                           
 33593                           	psect	text167
 33594  0098CA                     __ptext167:
 33595                           	callstack 0
 33596  0098CA                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 33597                           	callstack 14
 33598                           
 33599                           ; BSR set to: 2
 33600                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 33601                           
 33602                           ;incstack = 0
 33603  0098CA  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 33604  0098CE  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 33605  0098D2  0E00               	movlw	0
 33606  0098D4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33607  0098D6  0E01               	movlw	1
 33608  0098D8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33609  0098DA  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 33610                           
 33611                           ; BSR set to: 2
 33612                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33613  0098DE  0E00               	movlw	0
 33614  0098E0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33615  0098E2  0E00               	movlw	0
 33616  0098E4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33617  0098E6  0E00               	movlw	0
 33618  0098E8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33619  0098EA  0E00               	movlw	0
 33620  0098EC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33621  0098EE  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33622                           
 33623                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 33624  0098F2  0E04               	movlw	4
 33625  0098F4  0012               	return		;funcret
 33626  0098F6                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 33627                           	callstack 0
 33628                           
 33629 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 33630 ;; Defined at:
 33631 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33632 ;; Parameters:    Size  Location     Type
 33633 ;;  ptr             2   24[COMRAM] PTR void 
 33634 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33635 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33636 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33637 ;; Auto vars:     Size  Location     Type
 33638 ;;		None
 33639 ;; Return value:  Size  Location     Type
 33640 ;;                  1    wreg      enum E527
 33641 ;; Registers used:
 33642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33643 ;; Tracked objects:
 33644 ;;		On entry : 3F/2
 33645 ;;		On exit  : 0/0
 33646 ;;		Unchanged: 0/0
 33647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33652 ;;Total ram usage:        2 bytes
 33653 ;; Hardware stack levels used: 1
 33654 ;; Hardware stack levels required when called: 6
 33655 ;; This function calls:
 33656 ;;		_I2C1_SetBuffer
 33657 ;;		_I2C1_SetDataCompleteCallback
 33658 ;; This function is called by:
 33659 ;;		_I2C1_DO_TX
 33660 ;;		_I2C1_DO_RX
 33661 ;;		_I2C1_DO_TX_EMPTY
 33662 ;;		_I2C1_DO_ADDRESS_NACK
 33663 ;; This function uses a non-reentrant model
 33664 ;;
 33665                           
 33666                           	psect	text168
 33667  0098F6                     __ptext168:
 33668                           	callstack 0
 33669  0098F6                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 33670                           	callstack 14
 33671                           
 33672                           ; BSR set to: 2
 33673                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 33674                           
 33675                           ;incstack = 0
 33676  0098F6  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 33677  0098FA  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 33678  0098FE  0E00               	movlw	0
 33679  009900  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33680  009902  0E02               	movlw	2
 33681  009904  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33682  009906  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 33683                           
 33684                           ; BSR set to: 2
 33685                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33686  00990A  0E00               	movlw	0
 33687  00990C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33688  00990E  0E00               	movlw	0
 33689  009910  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33690  009912  0E00               	movlw	0
 33691  009914  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33692  009916  0E00               	movlw	0
 33693  009918  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33694  00991A  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33695                           
 33696                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 33697  00991E  0E02               	movlw	2
 33698  009920  0012               	return		;funcret
 33699  009922                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 33700                           	callstack 0
 33701                           
 33702 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 33703 ;; Defined at:
 33704 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 33705 ;; Parameters:    Size  Location     Type
 33706 ;;  ptr             2   24[COMRAM] PTR void 
 33707 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33708 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33709 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33710 ;; Auto vars:     Size  Location     Type
 33711 ;;		None
 33712 ;; Return value:  Size  Location     Type
 33713 ;;                  1    wreg      enum E527
 33714 ;; Registers used:
 33715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33716 ;; Tracked objects:
 33717 ;;		On entry : 3F/2
 33718 ;;		On exit  : 0/0
 33719 ;;		Unchanged: 0/0
 33720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33725 ;;Total ram usage:        2 bytes
 33726 ;; Hardware stack levels used: 1
 33727 ;; Hardware stack levels required when called: 6
 33728 ;; This function calls:
 33729 ;;		_I2C1_SetBuffer
 33730 ;;		_I2C1_SetDataCompleteCallback
 33731 ;; This function is called by:
 33732 ;;		_I2C1_Read1ByteRegister
 33733 ;;		_I2C1_DO_TX
 33734 ;;		_I2C1_DO_RX
 33735 ;;		_I2C1_DO_TX_EMPTY
 33736 ;;		_I2C1_DO_ADDRESS_NACK
 33737 ;; This function uses a non-reentrant model
 33738 ;;
 33739                           
 33740                           	psect	text169
 33741  009922                     __ptext169:
 33742                           	callstack 0
 33743  009922                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 33744                           	callstack 14
 33745                           
 33746                           ; BSR set to: 2
 33747                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 33748                           
 33749                           ;incstack = 0
 33750  009922  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 33751  009926  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 33752  00992A  0E00               	movlw	0
 33753  00992C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33754  00992E  0E01               	movlw	1
 33755  009930  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33756  009932  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 33757                           
 33758                           ; BSR set to: 2
 33759                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 33760  009936  0E00               	movlw	0
 33761  009938  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33762  00993A  0E00               	movlw	0
 33763  00993C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33764  00993E  0E00               	movlw	0
 33765  009940  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33766  009942  0E00               	movlw	0
 33767  009944  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33768  009946  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33769                           
 33770                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 33771  00994A  0E02               	movlw	2
 33772  00994C  0012               	return		;funcret
 33773  00994E                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 33774                           	callstack 0
 33775                           
 33776 ;; *************** function _rdBlkRegCompleteHandler *****************
 33777 ;; Defined at:
 33778 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33779 ;; Parameters:    Size  Location     Type
 33780 ;;  p               2   24[COMRAM] PTR void 
 33781 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33782 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33783 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33784 ;; Auto vars:     Size  Location     Type
 33785 ;;		None
 33786 ;; Return value:  Size  Location     Type
 33787 ;;                  1    wreg      enum E360
 33788 ;; Registers used:
 33789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33790 ;; Tracked objects:
 33791 ;;		On entry : 3F/2
 33792 ;;		On exit  : 0/0
 33793 ;;		Unchanged: 0/0
 33794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33799 ;;Total ram usage:        2 bytes
 33800 ;; Hardware stack levels used: 1
 33801 ;; Hardware stack levels required when called: 6
 33802 ;; This function calls:
 33803 ;;		_I2C1_SetBuffer
 33804 ;;		_I2C1_SetDataCompleteCallback
 33805 ;; This function is called by:
 33806 ;;		_i2c_readDataBlock
 33807 ;;		_I2C1_DO_TX
 33808 ;;		_I2C1_DO_RX
 33809 ;;		_I2C1_DO_TX_EMPTY
 33810 ;;		_I2C1_DO_ADDRESS_NACK
 33811 ;; This function uses a non-reentrant model
 33812 ;;
 33813                           
 33814                           	psect	text170
 33815  0095C4                     __ptext170:
 33816                           	callstack 0
 33817  0095C4                     _rdBlkRegCompleteHandler:
 33818                           	callstack 14
 33819                           
 33820                           ; BSR set to: 2
 33821                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 33822                           
 33823                           ;incstack = 0
 33824  0095C4  EE20 F002          	lfsr	2,2
 33825  0095C8  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 33826  0095CA  26D9               	addwf	fsr2l,f,c
 33827  0095CC  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 33828  0095CE  22DA               	addwfc	fsr2h,f,c
 33829  0095D0  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 33830  0095D4  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 33831  0095D8  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 33832  0095DC  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 33833  0095E0  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 33834  0095E4  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 33835  0095E8  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 33836                           
 33837                           ; BSR set to: 2
 33838                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33839  0095EC  0E00               	movlw	0
 33840  0095EE  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33841  0095F0  0E00               	movlw	0
 33842  0095F2  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33843  0095F4  0E00               	movlw	0
 33844  0095F6  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33845  0095F8  0E00               	movlw	0
 33846  0095FA  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33847  0095FC  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33848                           
 33849                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 33850  009600  0E02               	movlw	2
 33851  009602  0012               	return		;funcret
 33852  009604                     __end_of_rdBlkRegCompleteHandler:
 33853                           	callstack 0
 33854                           
 33855 ;; *************** function _wr2RegCompleteHandler *****************
 33856 ;; Defined at:
 33857 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33858 ;; Parameters:    Size  Location     Type
 33859 ;;  p               2   24[COMRAM] PTR void 
 33860 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33861 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33862 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33863 ;; Auto vars:     Size  Location     Type
 33864 ;;		None
 33865 ;; Return value:  Size  Location     Type
 33866 ;;                  1    wreg      enum E360
 33867 ;; Registers used:
 33868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33869 ;; Tracked objects:
 33870 ;;		On entry : 3F/2
 33871 ;;		On exit  : 0/0
 33872 ;;		Unchanged: 0/0
 33873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33877 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33878 ;;Total ram usage:        2 bytes
 33879 ;; Hardware stack levels used: 1
 33880 ;; Hardware stack levels required when called: 6
 33881 ;; This function calls:
 33882 ;;		_I2C1_SetBuffer
 33883 ;;		_I2C1_SetDataCompleteCallback
 33884 ;; This function is called by:
 33885 ;;		_I2C1_DO_TX
 33886 ;;		_I2C1_DO_RX
 33887 ;;		_I2C1_DO_TX_EMPTY
 33888 ;;		_I2C1_DO_ADDRESS_NACK
 33889 ;; This function uses a non-reentrant model
 33890 ;;
 33891                           
 33892                           	psect	text171
 33893  00994E                     __ptext171:
 33894                           	callstack 0
 33895  00994E                     _wr2RegCompleteHandler:
 33896                           	callstack 14
 33897                           
 33898                           ; BSR set to: 2
 33899                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 33900                           
 33901                           ;incstack = 0
 33902  00994E  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33903  009952  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33904  009956  0E00               	movlw	0
 33905  009958  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33906  00995A  0E02               	movlw	2
 33907  00995C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33908  00995E  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 33909                           
 33910                           ; BSR set to: 2
 33911                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 33912  009962  0E00               	movlw	0
 33913  009964  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33914  009966  0E00               	movlw	0
 33915  009968  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33916  00996A  0E00               	movlw	0
 33917  00996C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33918  00996E  0E00               	movlw	0
 33919  009970  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33920  009972  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33921                           
 33922                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 33923  009976  0E04               	movlw	4
 33924  009978  0012               	return		;funcret
 33925  00997A                     __end_of_wr2RegCompleteHandler:
 33926                           	callstack 0
 33927                           
 33928 ;; *************** function _rd2RegCompleteHandler *****************
 33929 ;; Defined at:
 33930 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 33931 ;; Parameters:    Size  Location     Type
 33932 ;;  p               2   24[COMRAM] PTR void 
 33933 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33934 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33935 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33936 ;; Auto vars:     Size  Location     Type
 33937 ;;		None
 33938 ;; Return value:  Size  Location     Type
 33939 ;;                  1    wreg      enum E360
 33940 ;; Registers used:
 33941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33942 ;; Tracked objects:
 33943 ;;		On entry : 3F/2
 33944 ;;		On exit  : 0/0
 33945 ;;		Unchanged: 0/0
 33946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33951 ;;Total ram usage:        2 bytes
 33952 ;; Hardware stack levels used: 1
 33953 ;; Hardware stack levels required when called: 6
 33954 ;; This function calls:
 33955 ;;		_I2C1_SetBuffer
 33956 ;;		_I2C1_SetDataCompleteCallback
 33957 ;; This function is called by:
 33958 ;;		_I2C1_DO_TX
 33959 ;;		_I2C1_DO_RX
 33960 ;;		_I2C1_DO_TX_EMPTY
 33961 ;;		_I2C1_DO_ADDRESS_NACK
 33962 ;; This function uses a non-reentrant model
 33963 ;;
 33964                           
 33965                           	psect	text172
 33966  00997A                     __ptext172:
 33967                           	callstack 0
 33968  00997A                     _rd2RegCompleteHandler:
 33969                           	callstack 14
 33970                           
 33971                           ; BSR set to: 2
 33972                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 33973                           
 33974                           ;incstack = 0
 33975  00997A  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 33976  00997E  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 33977  009982  0E00               	movlw	0
 33978  009984  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 33979  009986  0E02               	movlw	2
 33980  009988  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 33981  00998A  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 33982                           
 33983                           ; BSR set to: 2
 33984                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 33985  00998E  0E00               	movlw	0
 33986  009990  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 33987  009992  0E00               	movlw	0
 33988  009994  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 33989  009996  0E00               	movlw	0
 33990  009998  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 33991  00999A  0E00               	movlw	0
 33992  00999C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 33993  00999E  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 33994                           
 33995                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 33996  0099A2  0E02               	movlw	2
 33997  0099A4  0012               	return		;funcret
 33998  0099A6                     __end_of_rd2RegCompleteHandler:
 33999                           	callstack 0
 34000                           
 34001 ;; *************** function _rd1RegCompleteHandler *****************
 34002 ;; Defined at:
 34003 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34004 ;; Parameters:    Size  Location     Type
 34005 ;;  p               2   24[COMRAM] PTR void 
 34006 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34007 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34008 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34009 ;; Auto vars:     Size  Location     Type
 34010 ;;		None
 34011 ;; Return value:  Size  Location     Type
 34012 ;;                  1    wreg      enum E360
 34013 ;; Registers used:
 34014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34015 ;; Tracked objects:
 34016 ;;		On entry : 3F/2
 34017 ;;		On exit  : 0/0
 34018 ;;		Unchanged: 0/0
 34019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34024 ;;Total ram usage:        2 bytes
 34025 ;; Hardware stack levels used: 1
 34026 ;; Hardware stack levels required when called: 6
 34027 ;; This function calls:
 34028 ;;		_I2C1_SetBuffer
 34029 ;;		_I2C1_SetDataCompleteCallback
 34030 ;; This function is called by:
 34031 ;;		_I2C1_DO_TX
 34032 ;;		_I2C1_DO_RX
 34033 ;;		_I2C1_DO_TX_EMPTY
 34034 ;;		_I2C1_DO_ADDRESS_NACK
 34035 ;; This function uses a non-reentrant model
 34036 ;;
 34037                           
 34038                           	psect	text173
 34039  0099A6                     __ptext173:
 34040                           	callstack 0
 34041  0099A6                     _rd1RegCompleteHandler:
 34042                           	callstack 14
 34043                           
 34044                           ; BSR set to: 2
 34045                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 34046                           
 34047                           ;incstack = 0
 34048  0099A6  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34049  0099AA  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34050  0099AE  0E00               	movlw	0
 34051  0099B0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34052  0099B2  0E01               	movlw	1
 34053  0099B4  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34054  0099B6  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 34055                           
 34056                           ; BSR set to: 2
 34057                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34058  0099BA  0E00               	movlw	0
 34059  0099BC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34060  0099BE  0E00               	movlw	0
 34061  0099C0  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34062  0099C2  0E00               	movlw	0
 34063  0099C4  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34064  0099C6  0E00               	movlw	0
 34065  0099C8  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34066  0099CA  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34067                           
 34068                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 34069  0099CE  0E02               	movlw	2
 34070  0099D0  0012               	return		;funcret
 34071  0099D2                     __end_of_rd1RegCompleteHandler:
 34072                           	callstack 0
 34073                           
 34074 ;; *************** function _wr1RegCompleteHandler *****************
 34075 ;; Defined at:
 34076 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 34077 ;; Parameters:    Size  Location     Type
 34078 ;;  p               2   24[COMRAM] PTR void 
 34079 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34080 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34081 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34082 ;; Auto vars:     Size  Location     Type
 34083 ;;		None
 34084 ;; Return value:  Size  Location     Type
 34085 ;;                  1    wreg      enum E360
 34086 ;; Registers used:
 34087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34088 ;; Tracked objects:
 34089 ;;		On entry : 3F/2
 34090 ;;		On exit  : 0/0
 34091 ;;		Unchanged: 0/0
 34092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34097 ;;Total ram usage:        2 bytes
 34098 ;; Hardware stack levels used: 1
 34099 ;; Hardware stack levels required when called: 6
 34100 ;; This function calls:
 34101 ;;		_I2C1_SetBuffer
 34102 ;;		_I2C1_SetDataCompleteCallback
 34103 ;; This function is called by:
 34104 ;;		_I2C1_DO_TX
 34105 ;;		_I2C1_DO_RX
 34106 ;;		_I2C1_DO_TX_EMPTY
 34107 ;;		_I2C1_DO_ADDRESS_NACK
 34108 ;; This function uses a non-reentrant model
 34109 ;;
 34110                           
 34111                           	psect	text174
 34112  0099D2                     __ptext174:
 34113                           	callstack 0
 34114  0099D2                     _wr1RegCompleteHandler:
 34115                           	callstack 14
 34116                           
 34117                           ; BSR set to: 2
 34118                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 34119                           
 34120                           ;incstack = 0
 34121  0099D2  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 34122  0099D6  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 34123  0099DA  0E00               	movlw	0
 34124  0099DC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34125  0099DE  0E01               	movlw	1
 34126  0099E0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34127  0099E2  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 34128                           
 34129                           ; BSR set to: 2
 34130                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 34131  0099E6  0E00               	movlw	0
 34132  0099E8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34133  0099EA  0E00               	movlw	0
 34134  0099EC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34135  0099EE  0E00               	movlw	0
 34136  0099F0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34137  0099F2  0E00               	movlw	0
 34138  0099F4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34139  0099F6  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34140                           
 34141                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 34142  0099FA  0E04               	movlw	4
 34143  0099FC  0012               	return		;funcret
 34144  0099FE                     __end_of_wr1RegCompleteHandler:
 34145                           	callstack 0
 34146                           
 34147 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 34148 ;; Defined at:
 34149 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 34150 ;; Parameters:    Size  Location     Type
 34151 ;;  ptr             2   24[COMRAM] PTR void 
 34152 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34153 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34154 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34155 ;; Auto vars:     Size  Location     Type
 34156 ;;		None
 34157 ;; Return value:  Size  Location     Type
 34158 ;;                  1    wreg      enum E527
 34159 ;; Registers used:
 34160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34161 ;; Tracked objects:
 34162 ;;		On entry : 3F/2
 34163 ;;		On exit  : 0/0
 34164 ;;		Unchanged: 0/0
 34165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34170 ;;Total ram usage:        2 bytes
 34171 ;; Hardware stack levels used: 1
 34172 ;; Hardware stack levels required when called: 6
 34173 ;; This function calls:
 34174 ;;		_I2C1_SetBuffer
 34175 ;;		_I2C1_SetDataCompleteCallback
 34176 ;; This function is called by:
 34177 ;;		_I2C1_DO_TX
 34178 ;;		_I2C1_DO_RX
 34179 ;;		_I2C1_DO_TX_EMPTY
 34180 ;;		_I2C1_DO_ADDRESS_NACK
 34181 ;; This function uses a non-reentrant model
 34182 ;;
 34183                           
 34184                           	psect	text175
 34185  0099FE                     __ptext175:
 34186                           	callstack 0
 34187  0099FE                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 34188                           	callstack 14
 34189                           
 34190                           ; BSR set to: 2
 34191                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 34192                           
 34193                           ;incstack = 0
 34194  0099FE  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 34195  009A02  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 34196  009A06  0E00               	movlw	0
 34197  009A08  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 34198  009A0A  0E02               	movlw	2
 34199  009A0C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 34200  009A0E  EC74  F04E         	call	_I2C1_SetBuffer	;wreg free
 34201                           
 34202                           ; BSR set to: 2
 34203                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 34204  009A12  0E00               	movlw	0
 34205  009A14  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 34206  009A16  0E00               	movlw	0
 34207  009A18  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 34208  009A1A  0E00               	movlw	0
 34209  009A1C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 34210  009A1E  0E00               	movlw	0
 34211  009A20  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 34212  009A22  ECB1  F04E         	call	_I2C1_SetDataCompleteCallback	;wreg free
 34213                           
 34214                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 34215  009A26  0E04               	movlw	4
 34216  009A28  0012               	return		;funcret
 34217  009A2A                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 34218                           	callstack 0
 34219                           
 34220 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 34221 ;; Defined at:
 34222 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 34223 ;; Parameters:    Size  Location     Type
 34224 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 34225 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34226 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34227 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34228 ;;  ptr             2   22[COMRAM] PTR void 
 34229 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34230 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34231 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34232 ;; Auto vars:     Size  Location     Type
 34233 ;;		None
 34234 ;; Return value:  Size  Location     Type
 34235 ;;                  1    wreg      void 
 34236 ;; Registers used:
 34237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34238 ;; Tracked objects:
 34239 ;;		On entry : 33/2
 34240 ;;		On exit  : 0/0
 34241 ;;		Unchanged: 0/0
 34242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34247 ;;Total ram usage:        4 bytes
 34248 ;; Hardware stack levels used: 1
 34249 ;; Hardware stack levels required when called: 5
 34250 ;; This function calls:
 34251 ;;		_I2C1_SetCallback
 34252 ;; This function is called by:
 34253 ;;		_wr1RegCompleteHandler
 34254 ;;		_rd1RegCompleteHandler
 34255 ;;		_rd2RegCompleteHandler
 34256 ;;		_wr2RegCompleteHandler
 34257 ;;		_rdBlkRegCompleteHandler
 34258 ;;		_i2c_readDataBlock
 34259 ;;		_I2C1_Read1ByteRegister
 34260 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34261 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34262 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34263 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34264 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34265 ;; This function uses a non-reentrant model
 34266 ;;
 34267                           
 34268                           	psect	text176
 34269  009D62                     __ptext176:
 34270                           	callstack 0
 34271  009D62                     _I2C1_SetDataCompleteCallback:
 34272                           	callstack 20
 34273                           
 34274                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 34275                           
 34276                           ;incstack = 0
 34277  009D62  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 34278  009D66  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 34279  009D6A  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 34280  009D6E  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 34281  009D72  0E00               	movlw	0
 34282  009D74  EC1B  F046         	call	_I2C1_SetCallback
 34283  009D78  0012               	return		;funcret
 34284  009D7A                     __end_of_I2C1_SetDataCompleteCallback:
 34285                           	callstack 0
 34286                           
 34287 ;; *************** function _I2C1_SetCallback *****************
 34288 ;; Defined at:
 34289 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 34290 ;; Parameters:    Size  Location     Type
 34291 ;;  idx             1    wreg     enum E10460
 34292 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 34293 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 34294 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 34295 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 34296 ;;  ptr             2   17[COMRAM] PTR void 
 34297 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 34298 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 34299 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34300 ;; Auto vars:     Size  Location     Type
 34301 ;;  idx             1   19[COMRAM] enum E10460
 34302 ;; Return value:  Size  Location     Type
 34303 ;;                  1    wreg      void 
 34304 ;; Registers used:
 34305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34306 ;; Tracked objects:
 34307 ;;		On entry : 33/2
 34308 ;;		On exit  : 0/0
 34309 ;;		Unchanged: 0/0
 34310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34314 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34315 ;;Total ram usage:        5 bytes
 34316 ;; Hardware stack levels used: 1
 34317 ;; Hardware stack levels required when called: 4
 34318 ;; This function calls:
 34319 ;;		Nothing
 34320 ;; This function is called by:
 34321 ;;		_I2C1_SetDataCompleteCallback
 34322 ;;		_I2C1_SetAddressNackCallback
 34323 ;; This function uses a non-reentrant model
 34324 ;;
 34325                           
 34326                           	psect	text177
 34327  008C36                     __ptext177:
 34328                           	callstack 0
 34329  008C36                     _I2C1_SetCallback:
 34330                           	callstack 20
 34331                           
 34332                           ;incstack = 0
 34333                           ;I2C1_SetCallback@idx stored from wreg
 34334  008C36  6E14               	movwf	I2C1_SetCallback@idx^0,c
 34335                           
 34336                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 34337  008C38  5010               	movf	I2C1_SetCallback@cb^0,w,c
 34338  008C3A  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 34339  008C3C  B4D8               	btfsc	status,2,c
 34340  008C3E  D019               	goto	l20018
 34341                           
 34342                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 34343  008C40  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34344  008C42  0D02               	mullw	2
 34345  008C44  0E3C               	movlw	low _I2C1_Status
 34346  008C46  24F3               	addwf	243,w,c
 34347  008C48  6ED9               	movwf	fsr2l,c
 34348  008C4A  0E02               	movlw	high _I2C1_Status
 34349  008C4C  20F4               	addwfc	prodh,w,c
 34350  008C4E  6EDA               	movwf	fsr2h,c
 34351  008C50  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 34352  008C54  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 34353                           
 34354                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 34355  008C58  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34356  008C5A  0D02               	mullw	2
 34357  008C5C  0E48               	movlw	low (_I2C1_Status+12)
 34358  008C5E  24F3               	addwf	243,w,c
 34359  008C60  6ED9               	movwf	fsr2l,c
 34360  008C62  0E02               	movlw	high (_I2C1_Status+12)
 34361  008C64  20F4               	addwfc	prodh,w,c
 34362  008C66  6EDA               	movwf	fsr2h,c
 34363  008C68  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 34364  008C6C  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 34365                           
 34366                           ;mcc_generated_files/i2c1_master.c: 304:     }
 34367  008C70  0012               	return	
 34368  008C72                     l20018:
 34369                           
 34370                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 34371  008C72  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34372  008C74  0D02               	mullw	2
 34373  008C76  0E3C               	movlw	low _I2C1_Status
 34374  008C78  24F3               	addwf	243,w,c
 34375  008C7A  6ED9               	movwf	fsr2l,c
 34376  008C7C  0E02               	movlw	high _I2C1_Status
 34377  008C7E  20F4               	addwfc	prodh,w,c
 34378  008C80  6EDA               	movwf	fsr2h,c
 34379  008C82  0E7E               	movlw	low _I2C1_CallbackReturnStop
 34380  008C84  6EDE               	movwf	postinc2,c
 34381  008C86  0E9F               	movlw	high _I2C1_CallbackReturnStop
 34382  008C88  6EDD               	movwf	postdec2,c
 34383                           
 34384                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 34385  008C8A  5014               	movf	I2C1_SetCallback@idx^0,w,c
 34386  008C8C  0D02               	mullw	2
 34387  008C8E  0E48               	movlw	low (_I2C1_Status+12)
 34388  008C90  24F3               	addwf	243,w,c
 34389  008C92  6ED9               	movwf	fsr2l,c
 34390  008C94  0E02               	movlw	high (_I2C1_Status+12)
 34391  008C96  20F4               	addwfc	prodh,w,c
 34392  008C98  6EDA               	movwf	fsr2h,c
 34393  008C9A  0E00               	movlw	0
 34394  008C9C  6EDE               	movwf	postinc2,c
 34395  008C9E  0E00               	movlw	0
 34396  008CA0  6EDD               	movwf	postdec2,c
 34397  008CA2  0012               	return		;funcret
 34398  008CA4                     __end_of_I2C1_SetCallback:
 34399                           	callstack 0
 34400                           
 34401 ;; *************** function _I2C1_SetBuffer *****************
 34402 ;; Defined at:
 34403 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 34404 ;; Parameters:    Size  Location     Type
 34405 ;;  buffer          2   15[COMRAM] PTR void 
 34406 ;;		 -> eusartparser@serial(4), cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), 
 34407 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@
      +reg(1), 
 34408 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 34409 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(2), 
 34410 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
 34411 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(
      +17), 
 34412 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 34413 ;;  bufferSize      2   17[COMRAM] unsigned int 
 34414 ;; Auto vars:     Size  Location     Type
 34415 ;;		None
 34416 ;; Return value:  Size  Location     Type
 34417 ;;                  1    wreg      void 
 34418 ;; Registers used:
 34419 ;;		wreg, status,2, status,0
 34420 ;; Tracked objects:
 34421 ;;		On entry : 0/2
 34422 ;;		On exit  : 3F/2
 34423 ;;		Unchanged: 0/0
 34424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34429 ;;Total ram usage:        4 bytes
 34430 ;; Hardware stack levels used: 1
 34431 ;; Hardware stack levels required when called: 4
 34432 ;; This function calls:
 34433 ;;		Nothing
 34434 ;; This function is called by:
 34435 ;;		_wr1RegCompleteHandler
 34436 ;;		_i2c_writeNBytes
 34437 ;;		_rd1RegCompleteHandler
 34438 ;;		_rd2RegCompleteHandler
 34439 ;;		_wr2RegCompleteHandler
 34440 ;;		_rdBlkRegCompleteHandler
 34441 ;;		_i2c_readDataBlock
 34442 ;;		_I2C1_Read1ByteRegister
 34443 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 34444 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 34445 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 34446 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 34447 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 34448 ;; This function uses a non-reentrant model
 34449 ;;
 34450                           
 34451                           	psect	text178
 34452  009CE8                     __ptext178:
 34453                           	callstack 0
 34454  009CE8                     _I2C1_SetBuffer:
 34455                           	callstack 21
 34456                           
 34457                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 34458                           
 34459                           ;incstack = 0
 34460  009CE8  0102               	movlb	2	; () banked
 34461  009CEA  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 34462  009CEC  0012               	return	
 34463                           
 34464                           ; BSR set to: 2
 34465                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 34466  009CEE  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 34467  009CF2  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 34468                           
 34469                           ; BSR set to: 2
 34470                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 34471  009CF6  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 34472  009CFA  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 34473                           
 34474                           ; BSR set to: 2
 34475                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 34476  009CFE  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 34477                           
 34478                           ; BSR set to: 2
 34479  009D00  0012               	return		;funcret
 34480  009D02                     __end_of_I2C1_SetBuffer:
 34481                           	callstack 0
 34482                           
 34483 ;; *************** function _I2C1_MasterStop *****************
 34484 ;; Defined at:
 34485 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 34486 ;; Parameters:    Size  Location     Type
 34487 ;;		None
 34488 ;; Auto vars:     Size  Location     Type
 34489 ;;		None
 34490 ;; Return value:  Size  Location     Type
 34491 ;;                  1    wreg      void 
 34492 ;; Registers used:
 34493 ;;		None
 34494 ;; Tracked objects:
 34495 ;;		On entry : 0/2
 34496 ;;		On exit  : 0/0
 34497 ;;		Unchanged: 0/0
 34498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34503 ;;Total ram usage:        0 bytes
 34504 ;; Hardware stack levels used: 1
 34505 ;; Hardware stack levels required when called: 4
 34506 ;; This function calls:
 34507 ;;		Nothing
 34508 ;; This function is called by:
 34509 ;;		_I2C1_DO_SEND_STOP
 34510 ;; This function uses a non-reentrant model
 34511 ;;
 34512                           
 34513                           	psect	text179
 34514  009F82                     __ptext179:
 34515                           	callstack 0
 34516  009F82                     _I2C1_MasterStop:
 34517                           	callstack 15
 34518                           
 34519                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 34520                           
 34521                           ; BSR set to: 2
 34522                           ;incstack = 0
 34523  009F82  8497               	bsf	151,2,c	;volatile
 34524  009F84  0012               	return		;funcret
 34525  009F86                     __end_of_I2C1_MasterStop:
 34526                           	callstack 0
 34527                           
 34528 ;; *************** function _I2C1_MasterEnableRestart *****************
 34529 ;; Defined at:
 34530 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 34531 ;; Parameters:    Size  Location     Type
 34532 ;;		None
 34533 ;; Auto vars:     Size  Location     Type
 34534 ;;		None
 34535 ;; Return value:  Size  Location     Type
 34536 ;;                  1    wreg      void 
 34537 ;; Registers used:
 34538 ;;		None
 34539 ;; Tracked objects:
 34540 ;;		On entry : 0/2
 34541 ;;		On exit  : 0/0
 34542 ;;		Unchanged: 0/0
 34543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34548 ;;Total ram usage:        0 bytes
 34549 ;; Hardware stack levels used: 1
 34550 ;; Hardware stack levels required when called: 4
 34551 ;; This function calls:
 34552 ;;		Nothing
 34553 ;; This function is called by:
 34554 ;;		_I2C1_DO_SEND_RESTART_READ
 34555 ;;		_I2C1_DO_SEND_RESTART_WRITE
 34556 ;;		_I2C1_DO_SEND_RESTART
 34557 ;; This function uses a non-reentrant model
 34558 ;;
 34559                           
 34560                           	psect	text180
 34561  009F86                     __ptext180:
 34562                           	callstack 0
 34563  009F86                     _I2C1_MasterEnableRestart:
 34564                           	callstack 15
 34565                           
 34566                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 34567                           
 34568                           ;incstack = 0
 34569  009F86  8297               	bsf	151,1,c	;volatile
 34570  009F88  0012               	return		;funcret
 34571  009F8A                     __end_of_I2C1_MasterEnableRestart:
 34572                           	callstack 0
 34573                           
 34574 ;; *************** function _I2C1_MasterStart *****************
 34575 ;; Defined at:
 34576 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 34577 ;; Parameters:    Size  Location     Type
 34578 ;;		None
 34579 ;; Auto vars:     Size  Location     Type
 34580 ;;		None
 34581 ;; Return value:  Size  Location     Type
 34582 ;;                  1    wreg      void 
 34583 ;; Registers used:
 34584 ;;		None
 34585 ;; Tracked objects:
 34586 ;;		On entry : 3F/2
 34587 ;;		On exit  : 3F/2
 34588 ;;		Unchanged: 3F/0
 34589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34594 ;;Total ram usage:        0 bytes
 34595 ;; Hardware stack levels used: 1
 34596 ;; Hardware stack levels required when called: 4
 34597 ;; This function calls:
 34598 ;;		Nothing
 34599 ;; This function is called by:
 34600 ;;		_I2C1_MasterOperation
 34601 ;; This function uses a non-reentrant model
 34602 ;;
 34603                           
 34604                           	psect	text181
 34605  009F8A                     __ptext181:
 34606                           	callstack 0
 34607  009F8A                     _I2C1_MasterStart:
 34608                           	callstack 19
 34609                           
 34610                           ; BSR set to: 2
 34611                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 34612                           
 34613                           ;incstack = 0
 34614  009F8A  8097               	bsf	151,0,c	;volatile
 34615                           
 34616                           ; BSR set to: 2
 34617  009F8C  0012               	return		;funcret
 34618  009F8E                     __end_of_I2C1_MasterStart:
 34619                           	callstack 0
 34620                           
 34621 ;; *************** function _I2C1_Close *****************
 34622 ;; Defined at:
 34623 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 34624 ;; Parameters:    Size  Location     Type
 34625 ;;		None
 34626 ;; Auto vars:     Size  Location     Type
 34627 ;;  returnValue     1   15[COMRAM] enum E355
 34628 ;; Return value:  Size  Location     Type
 34629 ;;                  1    wreg      enum E355
 34630 ;; Registers used:
 34631 ;;		wreg, status,2, cstack
 34632 ;; Tracked objects:
 34633 ;;		On entry : 0/2
 34634 ;;		On exit  : 33/2
 34635 ;;		Unchanged: 0/0
 34636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34641 ;;Total ram usage:        1 bytes
 34642 ;; Hardware stack levels used: 1
 34643 ;; Hardware stack levels required when called: 5
 34644 ;; This function calls:
 34645 ;;		_I2C1_MasterClearIrq
 34646 ;;		_I2C1_MasterClose
 34647 ;;		_I2C1_MasterDisableIrq
 34648 ;; This function is called by:
 34649 ;;		_i2c_writeNBytes
 34650 ;;		_i2c_readDataBlock
 34651 ;;		_I2C1_Read1ByteRegister
 34652 ;; This function uses a non-reentrant model
 34653 ;;
 34654                           
 34655                           	psect	text182
 34656  009BCC                     __ptext182:
 34657                           	callstack 0
 34658  009BCC                     _I2C1_Close:
 34659                           	callstack 20
 34660                           
 34661                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 34662                           
 34663                           ; BSR set to: 2
 34664                           ;incstack = 0
 34665  009BCC  0E01               	movlw	1
 34666  009BCE  6E10               	movwf	I2C1_Close@returnValue^0,c
 34667                           
 34668                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 34669  009BD0  0102               	movlb	2	; () banked
 34670  009BD2  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 34671  009BD4  D00A               	goto	l20452
 34672                           
 34673                           ; BSR set to: 2
 34674                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 34675  009BD6  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 34676                           
 34677                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 34678  009BD8  6958               	setf	(_I2C1_Status+28)& (0+255),b
 34679                           
 34680                           ; BSR set to: 2
 34681                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 34682  009BDA  ECAC  F04F         	call	_I2C1_MasterClearIrq	;wreg free
 34683                           
 34684                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 34685  009BDE  ECC7  F04F         	call	_I2C1_MasterDisableIrq	;wreg free
 34686                           
 34687                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 34688  009BE2  ECC9  F04F         	call	_I2C1_MasterClose	;wreg free
 34689                           
 34690                           ; BSR set to: 14
 34691                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 34692  009BE6  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 34693  009BEA                     l20452:
 34694                           
 34695                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 34696  009BEA  5010               	movf	I2C1_Close@returnValue^0,w,c
 34697  009BEC  0012               	return		;funcret
 34698  009BEE                     __end_of_I2C1_Close:
 34699                           	callstack 0
 34700                           
 34701 ;; *************** function _I2C1_MasterDisableIrq *****************
 34702 ;; Defined at:
 34703 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 34704 ;; Parameters:    Size  Location     Type
 34705 ;;		None
 34706 ;; Auto vars:     Size  Location     Type
 34707 ;;		None
 34708 ;; Return value:  Size  Location     Type
 34709 ;;                  1    wreg      void 
 34710 ;; Registers used:
 34711 ;;		None
 34712 ;; Tracked objects:
 34713 ;;		On entry : 3F/E
 34714 ;;		On exit  : 3F/E
 34715 ;;		Unchanged: 0/0
 34716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34721 ;;Total ram usage:        0 bytes
 34722 ;; Hardware stack levels used: 1
 34723 ;; Hardware stack levels required when called: 4
 34724 ;; This function calls:
 34725 ;;		Nothing
 34726 ;; This function is called by:
 34727 ;;		_I2C1_Close
 34728 ;; This function uses a non-reentrant model
 34729 ;;
 34730                           
 34731                           	psect	text183
 34732  009F8E                     __ptext183:
 34733                           	callstack 0
 34734  009F8E                     _I2C1_MasterDisableIrq:
 34735                           	callstack 20
 34736                           
 34737                           ; BSR set to: 14
 34738                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 34739                           
 34740                           ;incstack = 0
 34741  009F8E  91C5               	bcf	197,0,b	;volatile
 34742                           
 34743                           ; BSR set to: 14
 34744  009F90  0012               	return		;funcret
 34745  009F92                     __end_of_I2C1_MasterDisableIrq:
 34746                           	callstack 0
 34747                           
 34748 ;; *************** function _I2C1_MasterClose *****************
 34749 ;; Defined at:
 34750 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 34751 ;; Parameters:    Size  Location     Type
 34752 ;;		None
 34753 ;; Auto vars:     Size  Location     Type
 34754 ;;		None
 34755 ;; Return value:  Size  Location     Type
 34756 ;;                  1    wreg      void 
 34757 ;; Registers used:
 34758 ;;		None
 34759 ;; Tracked objects:
 34760 ;;		On entry : 3F/E
 34761 ;;		On exit  : 3F/E
 34762 ;;		Unchanged: 3F/0
 34763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34768 ;;Total ram usage:        0 bytes
 34769 ;; Hardware stack levels used: 1
 34770 ;; Hardware stack levels required when called: 4
 34771 ;; This function calls:
 34772 ;;		Nothing
 34773 ;; This function is called by:
 34774 ;;		_I2C1_Close
 34775 ;; This function uses a non-reentrant model
 34776 ;;
 34777                           
 34778                           	psect	text184
 34779  009F92                     __ptext184:
 34780                           	callstack 0
 34781  009F92                     _I2C1_MasterClose:
 34782                           	callstack 20
 34783                           
 34784                           ; BSR set to: 14
 34785                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 34786                           
 34787                           ; BSR set to: 14
 34788                           ;incstack = 0
 34789  009F92  9A96               	bcf	150,5,c	;volatile
 34790                           
 34791                           ; BSR set to: 14
 34792  009F94  0012               	return		;funcret
 34793  009F96                     __end_of_I2C1_MasterClose:
 34794                           	callstack 0
 34795                           
 34796 ;; *************** function _I2C1_MasterClearIrq *****************
 34797 ;; Defined at:
 34798 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 34799 ;; Parameters:    Size  Location     Type
 34800 ;;		None
 34801 ;; Auto vars:     Size  Location     Type
 34802 ;;		None
 34803 ;; Return value:  Size  Location     Type
 34804 ;;                  1    wreg      void 
 34805 ;; Registers used:
 34806 ;;		None
 34807 ;; Tracked objects:
 34808 ;;		On entry : 33/2
 34809 ;;		On exit  : 3F/E
 34810 ;;		Unchanged: 0/0
 34811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34816 ;;Total ram usage:        0 bytes
 34817 ;; Hardware stack levels used: 1
 34818 ;; Hardware stack levels required when called: 4
 34819 ;; This function calls:
 34820 ;;		Nothing
 34821 ;; This function is called by:
 34822 ;;		_I2C1_Open
 34823 ;;		_I2C1_Close
 34824 ;;		_I2C1_MasterFsm
 34825 ;; This function uses a non-reentrant model
 34826 ;;
 34827                           
 34828                           	psect	text185
 34829  009F58                     __ptext185:
 34830                           	callstack 0
 34831  009F58                     _I2C1_MasterClearIrq:
 34832                           	callstack 20
 34833                           
 34834                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 34835                           
 34836                           ; BSR set to: 14
 34837                           ;incstack = 0
 34838  009F58  010E               	movlb	14	; () banked
 34839  009F5A  91CD               	bcf	205,0,b	;volatile
 34840                           
 34841                           ; BSR set to: 14
 34842  009F5C  0012               	return		;funcret
 34843  009F5E                     __end_of_I2C1_MasterClearIrq:
 34844                           	callstack 0
 34845                           
 34846 ;; *************** function _INTERRUPT_InterruptManager *****************
 34847 ;; Defined at:
 34848 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 34849 ;; Parameters:    Size  Location     Type
 34850 ;;		None
 34851 ;; Auto vars:     Size  Location     Type
 34852 ;;		None
 34853 ;; Return value:  Size  Location     Type
 34854 ;;                  1    wreg      void 
 34855 ;; Registers used:
 34856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34857 ;; Tracked objects:
 34858 ;;		On entry : 0/0
 34859 ;;		On exit  : 0/0
 34860 ;;		Unchanged: 0/0
 34861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34864 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34866 ;;Total ram usage:        6 bytes
 34867 ;; Hardware stack levels used: 1
 34868 ;; Hardware stack levels required when called: 3
 34869 ;; This function calls:
 34870 ;;		Absolute function
 34871 ;;		_EUSART1_Receive_ISR
 34872 ;;		_EUSART1_Transmit_ISR
 34873 ;;		_TMR0_ISR
 34874 ;;		_TMR1_ISR
 34875 ;;		_TMR2_ISR
 34876 ;; This function is called by:
 34877 ;;		Interrupt level 2
 34878 ;; This function uses a non-reentrant model
 34879 ;;
 34880                           
 34881                           	psect	intcode
 34882  000008                     __pintcode:
 34883                           	callstack 0
 34884  000008                     _INTERRUPT_InterruptManager:
 34885                           	callstack 14
 34886                           
 34887                           ; BSR set to: 14
 34888                           ;incstack = 0
 34889  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34890  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 34891  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 34892  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 34893  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 34894  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 34895  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 34896                           
 34897                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 34898  000022  010E               	movlb	14	; () banked
 34899  000024  BBC2               	btfsc	194,5,b	;volatile
 34900                           
 34901                           ; BSR set to: 14
 34902  000026  ABCA               	btfss	202,5,b	;volatile
 34903  000028  D003               	goto	i2l867
 34904                           
 34905                           ; BSR set to: 14
 34906                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 34907  00002A  EC8C  F04D         	call	_TMR0_ISR	;wreg free
 34908                           
 34909                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 34910  00002E  D028               	goto	i2l873
 34911  000030                     i2l867:
 34912                           
 34913                           ; BSR set to: 14
 34914  000030  ACF2               	btfss	242,6,c	;volatile
 34915  000032  D026               	goto	i2l873
 34916                           
 34917                           ; BSR set to: 14
 34918                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 34919  000034  B9C5               	btfsc	197,4,b	;volatile
 34920                           
 34921                           ; BSR set to: 14
 34922  000036  A9CD               	btfss	205,4,b	;volatile
 34923  000038  D009               	goto	i2l870
 34924                           
 34925                           ; BSR set to: 14
 34926                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 34927  00003A  D801               	call	i2u2304_48
 34928  00003C  D021               	goto	i2l873
 34929  00003E                     i2u2304_48:
 34930  00003E  0005               	push	
 34931  000040  6EFA               	movwf	pclath,c
 34932  000042  0102               	movlb	2	; () banked
 34933  000044  51EB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 34934  000046  6EFD               	movwf	tosl,c
 34935  000048  51EC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 34936  00004A  D00B               	goto	L114
 34937  00004C                     i2l870:
 34938                           
 34939                           ; BSR set to: 14
 34940  00004C  BBC5               	btfsc	197,5,b	;volatile
 34941                           
 34942                           ; BSR set to: 14
 34943  00004E  ABCD               	btfss	205,5,b	;volatile
 34944  000050  D00C               	goto	i2l872
 34945                           
 34946                           ; BSR set to: 14
 34947                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 34948  000052  D801               	call	i2u2307_48
 34949  000054  D015               	goto	i2l873
 34950  000056                     i2u2307_48:
 34951  000056  0005               	push	
 34952  000058  6EFA               	movwf	pclath,c
 34953  00005A  0102               	movlb	2	; () banked
 34954  00005C  51E9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 34955  00005E  6EFD               	movwf	tosl,c
 34956  000060  51EA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 34957  000062                     L114:
 34958  000062  6EFE               	movwf	tosh,c
 34959  000064  6AFF               	clrf	tosu,c
 34960  000066  50FA               	movf	pclath,w,c
 34961  000068  0012               	return		;indir
 34962  00006A                     i2l872:
 34963                           
 34964                           ; BSR set to: 14
 34965  00006A  B1C6               	btfsc	198,0,b	;volatile
 34966                           
 34967                           ; BSR set to: 14
 34968  00006C  A1CE               	btfss	206,0,b	;volatile
 34969  00006E  D003               	goto	i2l874
 34970                           
 34971                           ; BSR set to: 14
 34972                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 34973  000070  EC02  F04B         	call	_TMR1_ISR	;wreg free
 34974                           
 34975                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 34976  000074  D005               	goto	i2l873
 34977  000076                     i2l874:
 34978                           
 34979                           ; BSR set to: 14
 34980  000076  B3C6               	btfsc	198,1,b	;volatile
 34981                           
 34982                           ; BSR set to: 14
 34983  000078  A3CE               	btfss	206,1,b	;volatile
 34984  00007A  D002               	goto	i2l873
 34985                           
 34986                           ; BSR set to: 14
 34987                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 34988  00007C  EC4A  F036         	call	_TMR2_ISR	;wreg free
 34989  000080                     i2l873:
 34990                           
 34991                           ; BSR set to: 14
 34992  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 34993  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 34994  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 34995  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 34996  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 34997  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 34998  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34999  00009A  0011               	retfie		f
 35000  00009C                     __end_of_INTERRUPT_InterruptManager:
 35001                           	callstack 0
 35002                           
 35003 ;; *************** function _TMR2_ISR *****************
 35004 ;; Defined at:
 35005 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 35006 ;; Parameters:    Size  Location     Type
 35007 ;;		None
 35008 ;; Auto vars:     Size  Location     Type
 35009 ;;		None
 35010 ;; Return value:  Size  Location     Type
 35011 ;;                  1    wreg      void 
 35012 ;; Registers used:
 35013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 35014 ;; Tracked objects:
 35015 ;;		On entry : 3F/E
 35016 ;;		On exit  : 0/0
 35017 ;;		Unchanged: 0/0
 35018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35023 ;;Total ram usage:        0 bytes
 35024 ;; Hardware stack levels used: 1
 35025 ;; Hardware stack levels required when called: 2
 35026 ;; This function calls:
 35027 ;;		Absolute function
 35028 ;;		_ReadADC
 35029 ;;		_TMR2_DefaultInterruptHandler
 35030 ;;		_controlTimeslots
 35031 ;;		_refreshSegment
 35032 ;; This function is called by:
 35033 ;;		_INTERRUPT_InterruptManager
 35034 ;; This function uses a non-reentrant model
 35035 ;;
 35036                           
 35037                           	psect	text187
 35038  006C94                     __ptext187:
 35039                           	callstack 0
 35040  006C94                     _TMR2_ISR:
 35041                           	callstack 14
 35042                           
 35043                           ; BSR set to: 14
 35044                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 35045                           
 35046                           ;incstack = 0
 35047  006C94  93CE               	bcf	206,1,b	;volatile
 35048                           
 35049                           ; BSR set to: 14
 35050                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 35051  006C96  ECB5  F048         	call	_ReadADC	;wreg free
 35052                           
 35053                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 35054  006C9A  EC4D  F042         	call	_refreshSegment	;wreg free
 35055                           
 35056                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 35057  006C9E  0101               	movlb	1	; () banked
 35058  006CA0  51A2               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 35059  006CA2  A4D8               	btfss	status,2,c
 35060                           
 35061                           ; BSR set to: 1
 35062                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 35063  006CA4  07A2               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 35064                           
 35065                           ; BSR set to: 1
 35066                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 35067  006CA6  51A0               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 35068  006CA8  B4D8               	btfsc	status,2,c
 35069  006CAA  D002               	goto	i2l16970
 35070                           
 35071                           ; BSR set to: 1
 35072                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 35073  006CAC  07A0               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 35074                           
 35075                           ;mcc_generated_files/tmr2.c: 201:                 }
 35076  006CAE  D089               	goto	i2l17042
 35077  006CB0                     i2l16970:
 35078                           
 35079                           ; BSR set to: 1
 35080                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 35081  006CB0  0E32               	movlw	50
 35082  006CB2  6FA0               	movwf	(_ts_system+1)& (0+255),b	;volatile
 35083                           
 35084                           ; BSR set to: 1
 35085                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 35086  006CB4  EC6F  F032         	call	_controlTimeslots	;wreg free
 35087                           
 35088                           ; BSR set to: 1
 35089                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 35090  006CB8  0100               	movlb	0	; () banked
 35091  006CBA  5192               	movf	_Counterchoose& (0+255),w,b
 35092  006CBC  A4D8               	btfss	status,2,c
 35093  006CBE  D002               	goto	i2l16978
 35094                           
 35095                           ; BSR set to: 0
 35096                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 35097  006CC0  0E01               	movlw	1
 35098  006CC2  D001               	goto	L115
 35099  006CC4                     i2l16978:
 35100                           
 35101                           ; BSR set to: 0
 35102                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 35103  006CC4  0E00               	movlw	0
 35104  006CC6                     L115:
 35105  006CC6  6F92               	movwf	_Counterchoose& (0+255),b
 35106                           
 35107                           ; BSR set to: 0
 35108                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 35109                           
 35110                           ;mcc_generated_files/tmr2.c: 217:                                }
 35111  006CC8  0101               	movlb	1	; () banked
 35112  006CCA  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 35113  006CCC  A4D8               	btfss	status,2,c
 35114  006CCE  D034               	goto	i2l17004
 35115                           
 35116                           ; BSR set to: 1
 35117                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 35118  006CD0  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 35119  006CD2  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 35120  006CD4  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 35121  006CD6  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 35122  006CD8  B4D8               	btfsc	status,2,c
 35123  006CDA  D008               	goto	i2l1266
 35124                           
 35125                           ; BSR set to: 1
 35126  006CDC  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 35127  006CDE  B4D8               	btfsc	status,2,c
 35128  006CE0  D005               	goto	i2l1266
 35129                           
 35130                           ; BSR set to: 1
 35131                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 35132  006CE2  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 35133  006CE4  0E00               	movlw	0
 35134  006CE6  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 35135  006CE8  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 35136  006CEA  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 35137  006CEC                     i2l1266:
 35138                           
 35139                           ; BSR set to: 1
 35140                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 35141  006CEC  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35142  006CEE  A4D8               	btfss	status,2,c
 35143  006CF0  D00E               	goto	i2l16994
 35144                           
 35145                           ; BSR set to: 1
 35146                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 35147  006CF2  057B               	decf	_powerControl_st& (0+255),w,b
 35148  006CF4  A4D8               	btfss	status,2,c
 35149  006CF6  D004               	goto	i2u1921_40
 35150                           
 35151                           ; BSR set to: 1
 35152                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 35153  006CF8  0100               	movlb	0	; () banked
 35154  006CFA  0592               	decf	_Counterchoose& (0+255),w,b
 35155  006CFC  A4D8               	btfss	status,2,c
 35156  006CFE  D061               	goto	i2l17042
 35157  006D00                     i2u1921_40:
 35158                           
 35159                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 35160  006D00  0E01               	movlw	1
 35161  006D02  0101               	movlb	1	; () banked
 35162  006D04  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35163  006D06  0E00               	movlw	0
 35164  006D08  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35165  006D0A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35166  006D0C  D013               	goto	L116
 35167  006D0E                     i2l16994:
 35168                           
 35169                           ; BSR set to: 1
 35170  006D0E  0E02               	movlw	2
 35171  006D10  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35172  006D12  A4D8               	btfss	status,2,c
 35173  006D14  D056               	goto	i2l17042
 35174                           
 35175                           ; BSR set to: 1
 35176                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 35177  006D16  057B               	decf	_powerControl_st& (0+255),w,b
 35178  006D18  A4D8               	btfss	status,2,c
 35179  006D1A  D004               	goto	i2u1924_40
 35180                           
 35181                           ; BSR set to: 1
 35182                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 35183  006D1C  0100               	movlb	0	; () banked
 35184  006D1E  0592               	decf	_Counterchoose& (0+255),w,b
 35185  006D20  A4D8               	btfss	status,2,c
 35186  006D22  D04F               	goto	i2l17042
 35187  006D24                     i2u1924_40:
 35188                           
 35189                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 35190  006D24  0EFF               	movlw	255
 35191  006D26  0101               	movlb	1	; () banked
 35192  006D28  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 35193  006D2A  0EFF               	movlw	255
 35194  006D2C  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 35195  006D2E  0EFF               	movlw	255
 35196  006D30  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 35197  006D32  0EFF               	movlw	255
 35198  006D34                     L116:
 35199  006D34  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 35200                           
 35201                           ;mcc_generated_files/tmr2.c: 263:                            }
 35202  006D36  D045               	goto	i2l17042
 35203  006D38                     i2l17004:
 35204                           
 35205                           ; BSR set to: 1
 35206                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 35207  006D38  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 35208  006D3A  A4D8               	btfss	status,2,c
 35209  006D3C  D01C               	goto	i2l1277
 35210                           
 35211                           ; BSR set to: 1
 35212                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 35213  006D3E  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35214  006D40  A4D8               	btfss	status,2,c
 35215  006D42  D00B               	goto	i2l17014
 35216                           
 35217                           ; BSR set to: 1
 35218                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35219  006D44  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35220  006D46  B4D8               	btfsc	status,2,c
 35221  006D48  D016               	goto	i2l1277
 35222                           
 35223                           ; BSR set to: 1
 35224                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 35225  006D4A  0E01               	movlw	1
 35226  006D4C  0100               	movlb	0	; () banked
 35227  006D4E  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35228  006D50  0E00               	movlw	0
 35229  006D52  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35230  006D54  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35231  006D56  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35232  006D58  D00E               	goto	i2l1277
 35233  006D5A                     i2l17014:
 35234                           
 35235                           ; BSR set to: 1
 35236  006D5A  0E02               	movlw	2
 35237  006D5C  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35238  006D5E  A4D8               	btfss	status,2,c
 35239  006D60  D00A               	goto	i2l1277
 35240                           
 35241                           ; BSR set to: 1
 35242                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 35243  006D62  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35244  006D64  B4D8               	btfsc	status,2,c
 35245  006D66  D007               	goto	i2l1277
 35246                           
 35247                           ; BSR set to: 1
 35248                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 35249  006D68  0E01               	movlw	1
 35250  006D6A  0100               	movlb	0	; () banked
 35251  006D6C  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35252  006D6E  0E00               	movlw	0
 35253  006D70  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35254  006D72  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35255  006D74  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35256  006D76                     i2l1277:
 35257                           
 35258                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 35259  006D76  0101               	movlb	1	; () banked
 35260  006D78  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 35261  006D7A  A4D8               	btfss	status,2,c
 35262  006D7C  D022               	goto	i2l17042
 35263                           
 35264                           ; BSR set to: 1
 35265  006D7E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 35266  006D80  A4D8               	btfss	status,2,c
 35267  006D82  D01F               	goto	i2l17042
 35268                           
 35269                           ; BSR set to: 1
 35270                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 35271  006D84  519F               	movf	_ts_system& (0+255),w,b	;volatile
 35272  006D86  B4D8               	btfsc	status,2,c
 35273  006D88  D002               	goto	i2l17028
 35274                           
 35275                           ; BSR set to: 1
 35276                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 35277  006D8A  079F               	decf	_ts_system& (0+255),f,b	;volatile
 35278                           
 35279                           ;mcc_generated_files/tmr2.c: 311:                                            }
 35280  006D8C  D01A               	goto	i2l17042
 35281  006D8E                     i2l17028:
 35282                           
 35283                           ; BSR set to: 1
 35284                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 35285  006D8E  0E0A               	movlw	10
 35286  006D90  6F9F               	movwf	_ts_system& (0+255),b	;volatile
 35287                           
 35288                           ; BSR set to: 1
 35289                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 35290  006D92  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 35291  006D94  A4D8               	btfss	status,2,c
 35292  006D96  D009               	goto	i2l17036
 35293                           
 35294                           ; BSR set to: 1
 35295                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 35296  006D98  0100               	movlb	0	; () banked
 35297  006D9A  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 35298                           
 35299                           ; BSR set to: 0
 35300                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 35301  006D9C  0E01               	movlw	1
 35302  006D9E  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 35303  006DA0  0E00               	movlw	0
 35304  006DA2  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 35305  006DA4  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 35306  006DA6  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 35307                           
 35308                           ;mcc_generated_files/tmr2.c: 322:                                                }
 35309  006DA8  D00C               	goto	i2l17042
 35310  006DAA                     i2l17036:
 35311                           
 35312                           ; BSR set to: 1
 35313  006DAA  0E02               	movlw	2
 35314  006DAC  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 35315  006DAE  A4D8               	btfss	status,2,c
 35316  006DB0  D008               	goto	i2l17042
 35317                           
 35318                           ; BSR set to: 1
 35319                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 35320  006DB2  0100               	movlb	0	; () banked
 35321  006DB4  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 35322                           
 35323                           ; BSR set to: 0
 35324                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 35325  006DB6  0E01               	movlw	1
 35326  006DB8  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 35327  006DBA  0E00               	movlw	0
 35328  006DBC  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 35329  006DBE  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 35330  006DC0  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 35331  006DC2                     i2l17042:
 35332                           
 35333                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 35334  006DC2  0102               	movlb	2	; () banked
 35335  006DC4  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35336  006DC6  11DC               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35337  006DC8  B4D8               	btfsc	status,2,c
 35338  006DCA  0012               	return	
 35339                           
 35340                           ; BSR set to: 2
 35341                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 35342  006DCC  D801               	call	i2u1936_48
 35343  006DCE  0012               	return	
 35344  006DD0                     i2u1936_48:
 35345  006DD0  0005               	push	
 35346  006DD2  6EFA               	movwf	pclath,c
 35347  006DD4  51DB               	movf	_TMR2_InterruptHandler& (0+255),w,b
 35348  006DD6  6EFD               	movwf	tosl,c
 35349  006DD8  51DC               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 35350  006DDA  6EFE               	movwf	tosh,c
 35351  006DDC  6AFF               	clrf	tosu,c
 35352  006DDE  50FA               	movf	pclath,w,c
 35353  006DE0  0012               	return		;indir
 35354  006DE2                     __end_of_TMR2_ISR:
 35355                           	callstack 0
 35356                           
 35357 ;; *************** function _refreshSegment *****************
 35358 ;; Defined at:
 35359 ;;		line 50 in file "outputs_MC50.c"
 35360 ;; Parameters:    Size  Location     Type
 35361 ;;		None
 35362 ;; Auto vars:     Size  Location     Type
 35363 ;;		None
 35364 ;; Return value:  Size  Location     Type
 35365 ;;                  1    wreg      void 
 35366 ;; Registers used:
 35367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35368 ;; Tracked objects:
 35369 ;;		On entry : 31/E
 35370 ;;		On exit  : 3E/0
 35371 ;;		Unchanged: 0/0
 35372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35377 ;;Total ram usage:        0 bytes
 35378 ;; Hardware stack levels used: 1
 35379 ;; Hardware stack levels required when called: 1
 35380 ;; This function calls:
 35381 ;;		_Segments_Set
 35382 ;; This function is called by:
 35383 ;;		_TMR2_ISR
 35384 ;; This function uses a non-reentrant model
 35385 ;;
 35386                           
 35387                           	psect	text188
 35388  00849A                     __ptext188:
 35389                           	callstack 0
 35390  00849A                     _refreshSegment:
 35391                           	callstack 14
 35392                           
 35393                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 35394                           
 35395                           ;incstack = 0
 35396  00849A  0100               	movlb	0	; () banked
 35397  00849C  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35398  00849E  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35399  0084A0  B4D8               	btfsc	status,2,c
 35400  0084A2  D003               	goto	i2u1534_40
 35401                           
 35402                           ; BSR set to: 0
 35403  0084A4  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35404  0084A6  A4D8               	btfss	status,2,c
 35405  0084A8  D01F               	goto	i2l2133
 35406  0084AA                     i2u1534_40:
 35407                           
 35408                           ; BSR set to: 0
 35409                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 35410  0084AA  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 35411  0084AC  A4D8               	btfss	status,2,c
 35412  0084AE  D00D               	goto	i2l2128
 35413                           
 35414                           ; BSR set to: 0
 35415                           
 35416                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 35417  0084B0  9085               	bcf	133,0,c	;volatile
 35418                           
 35419                           ; BSR set to: 0
 35420                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 35421  0084B2  0ED2               	movlw	low _DispTable
 35422  0084B4  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 35423  0084B6  6ED9               	movwf	fsr2l,c
 35424  0084B8  6ADA               	clrf	fsr2h,c
 35425  0084BA  0E03               	movlw	high _DispTable
 35426  0084BC  22DA               	addwfc	fsr2h,f,c
 35427  0084BE  50DF               	movf	indf2,w,c
 35428  0084C0  EC30  F04F         	call	_Segments_Set
 35429  0084C4  8285               	bsf	133,1,c	;volatile
 35430                           
 35431                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 35432  0084C6  0E00               	movlw	0
 35433  0084C8  D00C               	goto	L117
 35434  0084CA                     i2l2128:
 35435                           
 35436                           ; BSR set to: 0
 35437  0084CA  9285               	bcf	133,1,c	;volatile
 35438                           
 35439                           ; BSR set to: 0
 35440                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 35441  0084CC  0ED2               	movlw	low _DispTable
 35442  0084CE  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 35443  0084D0  6ED9               	movwf	fsr2l,c
 35444  0084D2  6ADA               	clrf	fsr2h,c
 35445  0084D4  0E03               	movlw	high _DispTable
 35446  0084D6  22DA               	addwfc	fsr2h,f,c
 35447  0084D8  50DF               	movf	indf2,w,c
 35448  0084DA  EC30  F04F         	call	_Segments_Set
 35449  0084DE  8085               	bsf	133,0,c	;volatile
 35450                           
 35451                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 35452  0084E0  0E01               	movlw	1
 35453  0084E2                     L117:
 35454  0084E2  0100               	movlb	0	; () banked
 35455  0084E4  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 35456  0084E6  D002               	goto	i2l15014
 35457  0084E8                     i2l2133:
 35458                           
 35459                           ; BSR set to: 0
 35460  0084E8  9085               	bcf	133,0,c	;volatile
 35461                           
 35462                           ; BSR set to: 0
 35463                           
 35464                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 35465  0084EA  9285               	bcf	133,1,c	;volatile
 35466  0084EC                     i2l15014:
 35467                           
 35468                           ; BSR set to: 0
 35469                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 35470  0084EC  0101               	movlb	1	; () banked
 35471  0084EE  BFAA               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 35472  0084F0  D005               	goto	i2u1536_40
 35473  0084F2  51AA               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 35474  0084F4  E114               	bnz	i2l2140
 35475  0084F6  05A9               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 35476  0084F8  B0D8               	btfsc	status,0,c
 35477  0084FA  0012               	return	
 35478  0084FC                     i2u1536_40:
 35479                           
 35480                           ; BSR set to: 1
 35481  0084FC  0100               	movlb	0	; () banked
 35482  0084FE  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 35483  008500  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 35484  008502  B4D8               	btfsc	status,2,c
 35485  008504  0012               	return	
 35486                           
 35487                           ; BSR set to: 0
 35488                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 35489  008506  C075  F1A9         	movff	_dispStruct+3,_ts_system+10	;volatile
 35490  00850A  C076  F1AA         	movff	_dispStruct+4,_ts_system+11	;volatile
 35491                           
 35492                           ; BSR set to: 0
 35493                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 35494  00850E  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 35495  008510  A4D8               	btfss	status,2,c
 35496  008512  D003               	goto	i2l15024
 35497                           
 35498                           ; BSR set to: 0
 35499                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 35500  008514  0E00               	movlw	0
 35501  008516  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35502                           
 35503                           ;outputs_MC50.c: 85:         }
 35504  008518  0012               	return	
 35505  00851A                     i2l15024:
 35506                           
 35507                           ; BSR set to: 0
 35508                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 35509  00851A  0E01               	movlw	1
 35510  00851C  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 35511  00851E                     i2l2140:
 35512  00851E  0012               	return		;funcret
 35513  008520                     __end_of_refreshSegment:
 35514                           	callstack 0
 35515                           
 35516 ;; *************** function _Segments_Set *****************
 35517 ;; Defined at:
 35518 ;;		line 93 in file "outputs_MC50.c"
 35519 ;; Parameters:    Size  Location     Type
 35520 ;;  value           1    wreg     unsigned char 
 35521 ;; Auto vars:     Size  Location     Type
 35522 ;;  value           1    0[COMRAM] unsigned char 
 35523 ;; Return value:  Size  Location     Type
 35524 ;;                  1    wreg      void 
 35525 ;; Registers used:
 35526 ;;		wreg, status,2, status,0
 35527 ;; Tracked objects:
 35528 ;;		On entry : 3F/0
 35529 ;;		On exit  : 0/0
 35530 ;;		Unchanged: 0/0
 35531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35536 ;;Total ram usage:        1 bytes
 35537 ;; Hardware stack levels used: 1
 35538 ;; This function calls:
 35539 ;;		Nothing
 35540 ;; This function is called by:
 35541 ;;		_refreshSegment
 35542 ;; This function uses a non-reentrant model
 35543 ;;
 35544                           
 35545                           	psect	text189
 35546  009E60                     __ptext189:
 35547                           	callstack 0
 35548  009E60                     _Segments_Set:
 35549                           	callstack 14
 35550                           
 35551                           ;incstack = 0
 35552                           ;Segments_Set@value stored from wreg
 35553  009E60  6E01               	movwf	Segments_Set@value^0,c
 35554                           
 35555                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 35556  009E62  0E80               	movlw	128
 35557  009E64  1686               	andwf	134,f,c	;volatile
 35558                           
 35559                           ;outputs_MC50.c: 96:    LATD |= value;
 35560  009E66  5001               	movf	Segments_Set@value^0,w,c	;volatile
 35561  009E68  1286               	iorwf	134,f,c	;volatile
 35562  009E6A  0012               	return		;funcret
 35563  009E6C                     __end_of_Segments_Set:
 35564                           	callstack 0
 35565                           
 35566 ;; *************** function _controlTimeslots *****************
 35567 ;; Defined at:
 35568 ;;		line 190 in file "main_MC50.c"
 35569 ;; Parameters:    Size  Location     Type
 35570 ;;		None
 35571 ;; Auto vars:     Size  Location     Type
 35572 ;;		None
 35573 ;; Return value:  Size  Location     Type
 35574 ;;                  1    wreg      void 
 35575 ;; Registers used:
 35576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35577 ;; Tracked objects:
 35578 ;;		On entry : 3F/1
 35579 ;;		On exit  : 3F/1
 35580 ;;		Unchanged: 0/0
 35581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35586 ;;Total ram usage:        0 bytes
 35587 ;; Hardware stack levels used: 1
 35588 ;; Hardware stack levels required when called: 1
 35589 ;; This function calls:
 35590 ;;		_decrementTimeslot
 35591 ;; This function is called by:
 35592 ;;		_TMR2_ISR
 35593 ;; This function uses a non-reentrant model
 35594 ;;
 35595                           
 35596                           	psect	text190
 35597  0064DE                     __ptext190:
 35598                           	callstack 0
 35599  0064DE                     _controlTimeslots:
 35600                           	callstack 14
 35601                           
 35602                           ; BSR set to: 1
 35603                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 35604                           
 35605                           ;incstack = 0
 35606  0064DE  0EA7               	movlw	low (_ts_system+8)
 35607  0064E0  6E01               	movwf	decrementTimeslot@ts^0,c
 35608  0064E2  0E01               	movlw	high (_ts_system+8)
 35609  0064E4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35610  0064E6  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35611                           
 35612                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 35613  0064EA  0EE5               	movlw	low (_ts_system+70)
 35614  0064EC  6E01               	movwf	decrementTimeslot@ts^0,c
 35615  0064EE  0E01               	movlw	high (_ts_system+70)
 35616  0064F0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35617  0064F2  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35618                           
 35619                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 35620  0064F6  0EA9               	movlw	low (_ts_system+10)
 35621  0064F8  6E01               	movwf	decrementTimeslot@ts^0,c
 35622  0064FA  0E01               	movlw	high (_ts_system+10)
 35623  0064FC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35624  0064FE  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35625                           
 35626                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 35627  006502  0EAB               	movlw	low (_ts_system+12)
 35628  006504  6E01               	movwf	decrementTimeslot@ts^0,c
 35629  006506  0E01               	movlw	high (_ts_system+12)
 35630  006508  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35631  00650A  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35632                           
 35633                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 35634  00650E  0EAD               	movlw	low (_ts_system+14)
 35635  006510  6E01               	movwf	decrementTimeslot@ts^0,c
 35636  006512  0E01               	movlw	high (_ts_system+14)
 35637  006514  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35638  006516  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35639                           
 35640                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 35641  00651A  0EAF               	movlw	low (_ts_system+16)
 35642  00651C  6E01               	movwf	decrementTimeslot@ts^0,c
 35643  00651E  0E01               	movlw	high (_ts_system+16)
 35644  006520  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35645  006522  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35646                           
 35647                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 35648  006526  0EB1               	movlw	low (_ts_system+18)
 35649  006528  6E01               	movwf	decrementTimeslot@ts^0,c
 35650  00652A  0E01               	movlw	high (_ts_system+18)
 35651  00652C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35652  00652E  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35653                           
 35654                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 35655  006532  0EB3               	movlw	low (_ts_system+20)
 35656  006534  6E01               	movwf	decrementTimeslot@ts^0,c
 35657  006536  0E01               	movlw	high (_ts_system+20)
 35658  006538  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35659  00653A  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35660                           
 35661                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 35662  00653E  0EB5               	movlw	low (_ts_system+22)
 35663  006540  6E01               	movwf	decrementTimeslot@ts^0,c
 35664  006542  0E01               	movlw	high (_ts_system+22)
 35665  006544  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35666  006546  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35667                           
 35668                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 35669  00654A  0EB9               	movlw	low (_ts_system+26)
 35670  00654C  6E01               	movwf	decrementTimeslot@ts^0,c
 35671  00654E  0E01               	movlw	high (_ts_system+26)
 35672  006550  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35673  006552  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35674                           
 35675                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 35676  006556  0EBB               	movlw	low (_ts_system+28)
 35677  006558  6E01               	movwf	decrementTimeslot@ts^0,c
 35678  00655A  0E01               	movlw	high (_ts_system+28)
 35679  00655C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35680  00655E  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35681                           
 35682                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 35683  006562  0EBD               	movlw	low (_ts_system+30)
 35684  006564  6E01               	movwf	decrementTimeslot@ts^0,c
 35685  006566  0E01               	movlw	high (_ts_system+30)
 35686  006568  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35687  00656A  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35688                           
 35689                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 35690  00656E  0EC3               	movlw	low (_ts_system+36)
 35691  006570  6E01               	movwf	decrementTimeslot@ts^0,c
 35692  006572  0E01               	movlw	high (_ts_system+36)
 35693  006574  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35694  006576  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35695                           
 35696                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 35697  00657A  0EC5               	movlw	low (_ts_system+38)
 35698  00657C  6E01               	movwf	decrementTimeslot@ts^0,c
 35699  00657E  0E01               	movlw	high (_ts_system+38)
 35700  006580  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35701  006582  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35702                           
 35703                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 35704  006586  0EC7               	movlw	low (_ts_system+40)
 35705  006588  6E01               	movwf	decrementTimeslot@ts^0,c
 35706  00658A  0E01               	movlw	high (_ts_system+40)
 35707  00658C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35708  00658E  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35709                           
 35710                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 35711  006592  0EC9               	movlw	low (_ts_system+42)
 35712  006594  6E01               	movwf	decrementTimeslot@ts^0,c
 35713  006596  0E01               	movlw	high (_ts_system+42)
 35714  006598  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35715  00659A  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35716                           
 35717                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 35718  00659E  0ECB               	movlw	low (_ts_system+44)
 35719  0065A0  6E01               	movwf	decrementTimeslot@ts^0,c
 35720  0065A2  0E01               	movlw	high (_ts_system+44)
 35721  0065A4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35722  0065A6  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35723                           
 35724                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 35725  0065AA  0ECD               	movlw	low (_ts_system+46)
 35726  0065AC  6E01               	movwf	decrementTimeslot@ts^0,c
 35727  0065AE  0E01               	movlw	high (_ts_system+46)
 35728  0065B0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35729  0065B2  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35730                           
 35731                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 35732  0065B6  0ECF               	movlw	low (_ts_system+48)
 35733  0065B8  6E01               	movwf	decrementTimeslot@ts^0,c
 35734  0065BA  0E01               	movlw	high (_ts_system+48)
 35735  0065BC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35736  0065BE  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35737                           
 35738                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 35739  0065C2  0EE1               	movlw	low (_ts_system+66)
 35740  0065C4  6E01               	movwf	decrementTimeslot@ts^0,c
 35741  0065C6  0E01               	movlw	high (_ts_system+66)
 35742  0065C8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35743  0065CA  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35744                           
 35745                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 35746  0065CE  0EE3               	movlw	low (_ts_system+68)
 35747  0065D0  6E01               	movwf	decrementTimeslot@ts^0,c
 35748  0065D2  0E01               	movlw	high (_ts_system+68)
 35749  0065D4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35750  0065D6  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35751                           
 35752                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 35753  0065DA  0100               	movlb	0	; () banked
 35754  0065DC  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35755  0065DE  B4D8               	btfsc	status,2,c
 35756  0065E0  D008               	goto	i2u1540_40
 35757                           
 35758                           ; BSR set to: 0
 35759  0065E2  0101               	movlb	1	; () banked
 35760  0065E4  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35761  0065E6  D005               	goto	i2u1540_40
 35762  0065E8  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35763  0065EA  E109               	bnz	i2l2024
 35764  0065EC  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35765  0065EE  B0D8               	btfsc	status,0,c
 35766  0065F0  D006               	goto	i2l2024
 35767  0065F2                     i2u1540_40:
 35768                           
 35769                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 35770  0065F2  0ED1               	movlw	low (_ts_system+50)
 35771  0065F4  6E01               	movwf	decrementTimeslot@ts^0,c
 35772  0065F6  0E01               	movlw	high (_ts_system+50)
 35773  0065F8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35774  0065FA  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35775  0065FE                     i2l2024:
 35776                           
 35777                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 35778  0065FE  0ED3               	movlw	low (_ts_system+52)
 35779  006600  6E01               	movwf	decrementTimeslot@ts^0,c
 35780  006602  0E01               	movlw	high (_ts_system+52)
 35781  006604  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35782  006606  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35783                           
 35784                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 35785  00660A  0ED5               	movlw	low (_ts_system+54)
 35786  00660C  6E01               	movwf	decrementTimeslot@ts^0,c
 35787  00660E  0E01               	movlw	high (_ts_system+54)
 35788  006610  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35789  006612  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35790                           
 35791                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 35792  006616  0ED7               	movlw	low (_ts_system+56)
 35793  006618  6E01               	movwf	decrementTimeslot@ts^0,c
 35794  00661A  0E01               	movlw	high (_ts_system+56)
 35795  00661C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35796  00661E  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35797                           
 35798                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 35799  006622  0ED9               	movlw	low (_ts_system+58)
 35800  006624  6E01               	movwf	decrementTimeslot@ts^0,c
 35801  006626  0E01               	movlw	high (_ts_system+58)
 35802  006628  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35803  00662A  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35804                           
 35805                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 35806  00662E  0EDB               	movlw	low (_ts_system+60)
 35807  006630  6E01               	movwf	decrementTimeslot@ts^0,c
 35808  006632  0E01               	movlw	high (_ts_system+60)
 35809  006634  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35810  006636  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35811                           
 35812                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 35813  00663A  0EDD               	movlw	low (_ts_system+62)
 35814  00663C  6E01               	movwf	decrementTimeslot@ts^0,c
 35815  00663E  0E01               	movlw	high (_ts_system+62)
 35816  006640  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35817  006642  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35818                           
 35819                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 35820  006646  0EDF               	movlw	low (_ts_system+64)
 35821  006648  6E01               	movwf	decrementTimeslot@ts^0,c
 35822  00664A  0E01               	movlw	high (_ts_system+64)
 35823  00664C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 35824  00664E  EC2A  F04D         	call	_decrementTimeslot	;wreg free
 35825                           
 35826                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 35827  006652  0101               	movlb	1	; () banked
 35828  006654  BFC2               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 35829  006656  0012               	return	
 35830  006658  51C2               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 35831  00665A  11C1               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 35832  00665C  11C0               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 35833  00665E  E103               	bnz	i2u1541_40
 35834  006660  05BF               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 35835  006662  A0D8               	btfss	status,0,c
 35836  006664  0012               	return	
 35837  006666                     i2u1541_40:
 35838                           
 35839                           ; BSR set to: 1
 35840                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 35841  006666  0EFF               	movlw	255
 35842  006668  27BF               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 35843  00666A  0EFF               	movlw	255
 35844  00666C  23C0               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 35845  00666E  0EFF               	movlw	255
 35846  006670  23C1               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 35847  006672  0EFF               	movlw	255
 35848  006674  23C2               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 35849                           
 35850                           ; BSR set to: 1
 35851  006676  0012               	return		;funcret
 35852  006678                     __end_of_controlTimeslots:
 35853                           	callstack 0
 35854                           
 35855 ;; *************** function _decrementTimeslot *****************
 35856 ;; Defined at:
 35857 ;;		line 246 in file "main_MC50.c"
 35858 ;; Parameters:    Size  Location     Type
 35859 ;;  ts              2    0[COMRAM] PTR int 
 35860 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 35861 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 35862 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 35863 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 35864 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 35865 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 35866 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 35867 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 35868 ;; Auto vars:     Size  Location     Type
 35869 ;;		None
 35870 ;; Return value:  Size  Location     Type
 35871 ;;                  1    wreg      void 
 35872 ;; Registers used:
 35873 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35874 ;; Tracked objects:
 35875 ;;		On entry : 0/1
 35876 ;;		On exit  : 0/0
 35877 ;;		Unchanged: 0/0
 35878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35881 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35882 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35883 ;;Total ram usage:        4 bytes
 35884 ;; Hardware stack levels used: 1
 35885 ;; This function calls:
 35886 ;;		Nothing
 35887 ;; This function is called by:
 35888 ;;		_controlTimeslots
 35889 ;; This function uses a non-reentrant model
 35890 ;;
 35891                           
 35892                           	psect	text191
 35893  009A54                     __ptext191:
 35894                           	callstack 0
 35895  009A54                     _decrementTimeslot:
 35896                           	callstack 14
 35897                           
 35898                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 35899                           
 35900                           ; BSR set to: 1
 35901                           ;incstack = 0
 35902  009A54  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 35903  009A58  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 35904  009A5C  0E01               	movlw	1
 35905  009A5E  BEDB               	btfsc	plusw2,7,c
 35906  009A60  0012               	return	
 35907  009A62  0E01               	movlw	1
 35908  009A64  50DB               	movf	plusw2,w,c
 35909  009A66  E103               	bnz	i2u1371_40
 35910  009A68  04DE               	decf	postinc2,w,c
 35911  009A6A  A0D8               	btfss	status,0,c
 35912  009A6C  0012               	return	
 35913  009A6E                     i2u1371_40:
 35914                           
 35915                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 35916  009A6E  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 35917  009A72  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 35918  009A76  06DE               	decf	postinc2,f,c
 35919  009A78  0E00               	movlw	0
 35920  009A7A  5ADD               	subwfb	postdec2,f,c
 35921  009A7C  0012               	return		;funcret
 35922  009A7E                     __end_of_decrementTimeslot:
 35923                           	callstack 0
 35924                           
 35925 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 35926 ;; Defined at:
 35927 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 35928 ;; Parameters:    Size  Location     Type
 35929 ;;		None
 35930 ;; Auto vars:     Size  Location     Type
 35931 ;;		None
 35932 ;; Return value:  Size  Location     Type
 35933 ;;                  1    wreg      void 
 35934 ;; Registers used:
 35935 ;;		None
 35936 ;; Tracked objects:
 35937 ;;		On entry : 3F/2
 35938 ;;		On exit  : 3F/2
 35939 ;;		Unchanged: 3F/0
 35940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35945 ;;Total ram usage:        0 bytes
 35946 ;; Hardware stack levels used: 1
 35947 ;; This function calls:
 35948 ;;		Nothing
 35949 ;; This function is called by:
 35950 ;;		_TMR2_Initialize
 35951 ;;		_TMR2_ISR
 35952 ;; This function uses a non-reentrant model
 35953 ;;
 35954                           
 35955                           	psect	text192
 35956  009F98                     __ptext192:
 35957                           	callstack 0
 35958  009F98                     _TMR2_DefaultInterruptHandler:
 35959                           	callstack 15
 35960                           
 35961                           ; BSR set to: 2
 35962                           
 35963                           ;incstack = 0
 35964  009F98  0012               	return		;funcret
 35965  009F9A                     __end_of_TMR2_DefaultInterruptHandler:
 35966                           	callstack 0
 35967                           
 35968 ;; *************** function _ReadADC *****************
 35969 ;; Defined at:
 35970 ;;		line 38 in file "controlCurrent_MC50.c"
 35971 ;; Parameters:    Size  Location     Type
 35972 ;;		None
 35973 ;; Auto vars:     Size  Location     Type
 35974 ;;		None
 35975 ;; Return value:  Size  Location     Type
 35976 ;;                  1    wreg      void 
 35977 ;; Registers used:
 35978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35979 ;; Tracked objects:
 35980 ;;		On entry : 3F/E
 35981 ;;		On exit  : 31/0
 35982 ;;		Unchanged: 0/0
 35983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35986 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35987 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35988 ;;Total ram usage:        3 bytes
 35989 ;; Hardware stack levels used: 1
 35990 ;; Hardware stack levels required when called: 1
 35991 ;; This function calls:
 35992 ;;		_ADCC_GetSingleConversion
 35993 ;; This function is called by:
 35994 ;;		_TMR2_ISR
 35995 ;; This function uses a non-reentrant model
 35996 ;;
 35997                           
 35998                           	psect	text193
 35999  00916A                     __ptext193:
 36000                           	callstack 0
 36001  00916A                     _ReadADC:
 36002                           	callstack 14
 36003                           
 36004                           ; BSR set to: 14
 36005                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 36006                           
 36007                           ; BSR set to: 2
 36008                           ;incstack = 0
 36009  00916A  B060               	btfsc	96,0,c	;volatile
 36010  00916C  0012               	return	
 36011                           
 36012                           ; BSR set to: 14
 36013                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 36014  00916E  0E1D               	movlw	29
 36015  009170  0100               	movlb	0	; () banked
 36016  009172  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 36017  009174  D002               	goto	i2l14990
 36018                           
 36019                           ; BSR set to: 0
 36020                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 36021  009176  0E00               	movlw	0
 36022  009178  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 36023  00917A                     i2l14990:
 36024                           
 36025                           ; BSR set to: 0
 36026                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 36027  00917A  5063               	movf	99,w,c	;volatile
 36028  00917C  CF64 F002          	movff	3940,??_ReadADC	;volatile
 36029  009180  6A03               	clrf	(??_ReadADC+1)^0,c
 36030  009182  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 36031  009186  6A02               	clrf	??_ReadADC^0,c
 36032  009188  2602               	addwf	??_ReadADC^0,f,c
 36033  00918A  0E00               	movlw	0
 36034  00918C  2203               	addwfc	(??_ReadADC+1)^0,f,c
 36035  00918E  0E06               	movlw	6
 36036  009190  6E04               	movwf	(??_ReadADC+2)^0,c
 36037  009192                     i2u1532_45:
 36038  009192  90D8               	bcf	status,0,c
 36039  009194  3203               	rrcf	(??_ReadADC+1)^0,f,c
 36040  009196  3202               	rrcf	??_ReadADC^0,f,c
 36041  009198  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 36042  00919A  D7FB               	goto	i2u1532_45
 36043  00919C  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 36044  00919E  0D02               	mullw	2
 36045  0091A0  0E00               	movlw	low _ADC_array
 36046  0091A2  24F3               	addwf	243,w,c
 36047  0091A4  6ED9               	movwf	fsr2l,c
 36048  0091A6  0E02               	movlw	high _ADC_array
 36049  0091A8  20F4               	addwfc	prodh,w,c
 36050  0091AA  6EDA               	movwf	fsr2h,c
 36051  0091AC  C002  FFDE         	movff	??_ReadADC,postinc2
 36052  0091B0  C003  FFDD         	movff	??_ReadADC+1,postdec2
 36053                           
 36054                           ; BSR set to: 0
 36055                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 36056  0091B4  0E00               	movlw	0
 36057  0091B6  ECD3  F04E         	call	_ADCC_GetSingleConversion
 36058                           
 36059                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 36060  0091BA  0100               	movlb	0	; () banked
 36061  0091BC  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 36062  0091BE  0012               	return		;funcret
 36063  0091C0                     __end_of_ReadADC:
 36064                           	callstack 0
 36065                           
 36066 ;; *************** function _ADCC_GetSingleConversion *****************
 36067 ;; Defined at:
 36068 ;;		line 131 in file "mcc_generated_files/adcc.c"
 36069 ;; Parameters:    Size  Location     Type
 36070 ;;  channel         1    wreg     enum E10053
 36071 ;; Auto vars:     Size  Location     Type
 36072 ;;  channel         1    0[COMRAM] enum E10053
 36073 ;; Return value:  Size  Location     Type
 36074 ;;                  2  433[None  ] int 
 36075 ;; Registers used:
 36076 ;;		wreg, status,2, cstack
 36077 ;; Tracked objects:
 36078 ;;		On entry : 3F/0
 36079 ;;		On exit  : 0/0
 36080 ;;		Unchanged: 0/0
 36081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36086 ;;Total ram usage:        1 bytes
 36087 ;; Hardware stack levels used: 1
 36088 ;; This function calls:
 36089 ;;		Nothing
 36090 ;; This function is called by:
 36091 ;;		_ReadADC
 36092 ;; This function uses a non-reentrant model
 36093 ;;
 36094                           
 36095                           	psect	text194
 36096  009DA6                     __ptext194:
 36097                           	callstack 0
 36098  009DA6                     _ADCC_GetSingleConversion:
 36099                           	callstack 14
 36100                           
 36101                           ;incstack = 0
 36102                           ;ADCC_GetSingleConversion@channel stored from wreg
 36103  009DA6  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 36104                           
 36105                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 36106  009DA8  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 36107                           
 36108                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 36109  009DAC  8E60               	bsf	96,7,c	;volatile
 36110                           
 36111                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 36112  009DAE  0E1A               	movlw	26
 36113  009DB0                     i2u3419_47:
 36114  009DB0  2EE8               	decfsz	wreg,f,c
 36115  009DB2  D7FE               	bra	i2u3419_47
 36116  009DB4  D000               	nop2	
 36117                           
 36118                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 36119  009DB6  9C60               	bcf	96,6,c	;volatile
 36120                           
 36121                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 36122  009DB8  8060               	bsf	96,0,c	;volatile
 36123  009DBA  0012               	return		;funcret
 36124  009DBC                     __end_of_ADCC_GetSingleConversion:
 36125                           	callstack 0
 36126                           
 36127 ;; *************** function _TMR1_ISR *****************
 36128 ;; Defined at:
 36129 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 36130 ;; Parameters:    Size  Location     Type
 36131 ;;		None
 36132 ;; Auto vars:     Size  Location     Type
 36133 ;;		None
 36134 ;; Return value:  Size  Location     Type
 36135 ;;                  1    wreg      void 
 36136 ;; Registers used:
 36137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 36138 ;; Tracked objects:
 36139 ;;		On entry : 3F/E
 36140 ;;		On exit  : 0/0
 36141 ;;		Unchanged: 0/0
 36142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36147 ;;Total ram usage:        0 bytes
 36148 ;; Hardware stack levels used: 1
 36149 ;; Hardware stack levels required when called: 2
 36150 ;; This function calls:
 36151 ;;		Absolute function
 36152 ;;		_TMR1_DefaultInterruptHandler
 36153 ;;		_TMR1_WriteTimer
 36154 ;;		_controlMotorForce
 36155 ;; This function is called by:
 36156 ;;		_INTERRUPT_InterruptManager
 36157 ;; This function uses a non-reentrant model
 36158 ;;
 36159                           
 36160                           	psect	text195
 36161  009604                     __ptext195:
 36162                           	callstack 0
 36163  009604                     _TMR1_ISR:
 36164                           	callstack 14
 36165                           
 36166                           ; BSR set to: 14
 36167                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 36168                           
 36169                           ;incstack = 0
 36170  009604  91CE               	bcf	206,0,b	;volatile
 36171                           
 36172                           ; BSR set to: 14
 36173                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 36174  009606  EC20  F02B         	call	_controlMotorForce	;wreg free
 36175                           
 36176                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 36177  00960A  0101               	movlb	1	; () banked
 36178  00960C  51A4               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 36179  00960E  A4D8               	btfss	status,2,c
 36180                           
 36181                           ; BSR set to: 1
 36182                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 36183  009610  07A4               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 36184                           
 36185                           ; BSR set to: 1
 36186                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 36187  009612  51A1               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 36188  009614  A4D8               	btfss	status,2,c
 36189                           
 36190                           ; BSR set to: 1
 36191                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 36192  009616  07A1               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 36193                           
 36194                           ; BSR set to: 1
 36195                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 36196  009618  C2DF  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 36197  00961C  C2E0  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 36198  009620  EC32  F04E         	call	_TMR1_WriteTimer	;wreg free
 36199                           
 36200                           ; BSR set to: 1
 36201                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 36202  009624  0102               	movlb	2	; () banked
 36203  009626  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36204  009628  11DE               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36205  00962A  B4D8               	btfsc	status,2,c
 36206  00962C  0012               	return	
 36207                           
 36208                           ; BSR set to: 2
 36209                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 36210  00962E  D801               	call	i2u1912_48
 36211  009630  0012               	return	
 36212  009632                     i2u1912_48:
 36213  009632  0005               	push	
 36214  009634  6EFA               	movwf	pclath,c
 36215  009636  51DD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 36216  009638  6EFD               	movwf	tosl,c
 36217  00963A  51DE               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 36218  00963C  6EFE               	movwf	tosh,c
 36219  00963E  6AFF               	clrf	tosu,c
 36220  009640  50FA               	movf	pclath,w,c
 36221  009642  0012               	return		;indir
 36222  009644                     __end_of_TMR1_ISR:
 36223                           	callstack 0
 36224                           
 36225 ;; *************** function _controlMotorForce *****************
 36226 ;; Defined at:
 36227 ;;		line 213 in file "outputs_MC50.c"
 36228 ;; Parameters:    Size  Location     Type
 36229 ;;		None
 36230 ;; Auto vars:     Size  Location     Type
 36231 ;;		None
 36232 ;; Return value:  Size  Location     Type
 36233 ;;                  1    wreg      void 
 36234 ;; Registers used:
 36235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36236 ;; Tracked objects:
 36237 ;;		On entry : 3F/E
 36238 ;;		On exit  : 3E/0
 36239 ;;		Unchanged: 0/0
 36240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36243 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36244 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36245 ;;Total ram usage:        5 bytes
 36246 ;; Hardware stack levels used: 1
 36247 ;; Hardware stack levels required when called: 1
 36248 ;; This function calls:
 36249 ;;		i2_GetMotorPower
 36250 ;;		i2_VerifyElectricalBrake
 36251 ;; This function is called by:
 36252 ;;		_TMR1_ISR
 36253 ;; This function uses a non-reentrant model
 36254 ;;
 36255                           
 36256                           	psect	text196
 36257  005640                     __ptext196:
 36258                           	callstack 0
 36259  005640                     _controlMotorForce:
 36260                           	callstack 14
 36261                           
 36262                           ; BSR set to: 14
 36263                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 36264                           
 36265                           ;incstack = 0
 36266  005640  ECFD  F03D         	call	i2_GetMotorPower	;wreg free
 36267  005644  6F94               	movwf	_difTime& (0+255),b
 36268                           
 36269                           ; BSR set to: 1
 36270                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 36271  005646  057B               	decf	_powerControl_st& (0+255),w,b
 36272  005648  A4D8               	btfss	status,2,c
 36273  00564A  D00F               	goto	i2l2191
 36274                           
 36275                           ; BSR set to: 1
 36276                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 36277  00564C  BFCC               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 36278  00564E  D008               	goto	i2l14878
 36279  005650  51CC               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 36280  005652  E103               	bnz	i2u1492_40
 36281  005654  05CB               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 36282  005656  A0D8               	btfss	status,0,c
 36283  005658  D003               	goto	i2l14878
 36284  00565A                     i2u1492_40:
 36285                           
 36286                           ; BSR set to: 1
 36287                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 36288  00565A  0E00               	movlw	0
 36289  00565C  6F95               	movwf	_StateTRIAC& (0+255),b
 36290                           
 36291                           ;outputs_MC50.c: 223:         }
 36292  00565E  D005               	goto	i2l2191
 36293  005660                     i2l14878:
 36294                           
 36295                           ; BSR set to: 1
 36296  005660  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 36297  005662  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 36298  005664  A0D8               	btfss	status,0,c
 36299                           
 36300                           ; BSR set to: 1
 36301                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 36302  005666  C17E  F194         	movff	_powerControl_st+3,_difTime
 36303  00566A                     i2l2191:
 36304                           
 36305                           ; BSR set to: 1
 36306                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 36307  00566A  A68D               	btfss	141,3,c	;volatile
 36308  00566C  D071               	goto	i2l2195
 36309                           
 36310                           ; BSR set to: 1
 36311  00566E  5197               	movf	_zeroCrossing& (0+255),w,b
 36312  005670  A4D8               	btfss	status,2,c
 36313  005672  D06E               	goto	i2l2195
 36314                           
 36315                           ; BSR set to: 1
 36316                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 36317  005674  5196               	movf	_waitZeroPeak& (0+255),w,b
 36318  005676  A4D8               	btfss	status,2,c
 36319  005678  D016               	goto	i2l14894
 36320                           
 36321                           ; BSR set to: 1
 36322                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 36323  00567A  0EF8               	movlw	low _zeroCrossingWaitTime
 36324  00567C  0100               	movlb	0	; () banked
 36325  00567E  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36326  005680  6ED9               	movwf	fsr2l,c
 36327  005682  6ADA               	clrf	fsr2h,c
 36328  005684  0E02               	movlw	high _zeroCrossingWaitTime
 36329  005686  22DA               	addwfc	fsr2h,f,c
 36330  005688  0101               	movlb	1	; () banked
 36331  00568A  90D8               	bcf	status,0,c
 36332  00568C  3198               	rrcf	_zeroCrossingLength& (0+255),w,b
 36333  00568E  6EDF               	movwf	indf2,c
 36334                           
 36335                           ; BSR set to: 1
 36336                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 36337  005690  0100               	movlb	0	; () banked
 36338  005692  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36339  005694  A4D8               	btfss	status,2,c
 36340  005696  D002               	goto	i2l14892
 36341                           
 36342                           ; BSR set to: 0
 36343                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 36344  005698  0E01               	movlw	1
 36345  00569A  D001               	goto	L118
 36346  00569C                     i2l14892:
 36347                           
 36348                           ; BSR set to: 0
 36349                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 36350  00569C  0E00               	movlw	0
 36351  00569E                     L118:
 36352  00569E  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 36353                           
 36354                           ; BSR set to: 0
 36355                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 36356                           
 36357                           ;outputs_MC50.c: 268:             }
 36358  0056A0  0E00               	movlw	0
 36359  0056A2  0101               	movlb	1	; () banked
 36360  0056A4  6F98               	movwf	_zeroCrossingLength& (0+255),b
 36361  0056A6                     i2l14894:
 36362                           
 36363                           ; BSR set to: 1
 36364                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 36365  0056A6  0E50               	movlw	80
 36366  0056A8  6594               	cpfsgt	_difTime& (0+255),b
 36367  0056AA  D007               	goto	i2u1499_40
 36368                           
 36369                           ; BSR set to: 1
 36370  0056AC  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36371  0056AE  D008               	goto	i2l14900
 36372  0056B0  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36373  0056B2  E103               	bnz	i2u1499_40
 36374  0056B4  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36375  0056B6  A0D8               	btfss	status,0,c
 36376  0056B8  D003               	goto	i2l14900
 36377  0056BA                     i2u1499_40:
 36378                           
 36379                           ; BSR set to: 1
 36380                           
 36381                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 36382  0056BA  9E86               	bcf	134,7,c	;volatile
 36383                           
 36384                           ; BSR set to: 1
 36385                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 36386  0056BC  0E00               	movlw	0
 36387  0056BE  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36388  0056C0                     i2l14900:
 36389                           
 36390                           ; BSR set to: 1
 36391                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 36392  0056C0  2B96               	incf	_waitZeroPeak& (0+255),f,b
 36393                           
 36394                           ; BSR set to: 1
 36395                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 36396  0056C2  0EF8               	movlw	low _zeroCrossingWaitTime
 36397  0056C4  0100               	movlb	0	; () banked
 36398  0056C6  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 36399  0056C8  6ED9               	movwf	fsr2l,c
 36400  0056CA  6ADA               	clrf	fsr2h,c
 36401  0056CC  0E02               	movlw	high _zeroCrossingWaitTime
 36402  0056CE  22DA               	addwfc	fsr2h,f,c
 36403  0056D0  0101               	movlb	1	; () banked
 36404  0056D2  5196               	movf	_waitZeroPeak& (0+255),w,b
 36405  0056D4  5CDE               	subwf	postinc2,w,c
 36406  0056D6  B0D8               	btfsc	status,0,c
 36407  0056D8  D044               	goto	i2l14930
 36408                           
 36409                           ; BSR set to: 1
 36410                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 36411  0056DA  0E59               	movlw	89
 36412  0056DC  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 36413  0056DE  D005               	goto	i2l14910
 36414                           
 36415                           ; BSR set to: 1
 36416  0056E0  0E6A               	movlw	106
 36417  0056E2  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 36418  0056E4  D002               	goto	i2l14910
 36419                           
 36420                           ; BSR set to: 1
 36421                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 36422  0056E6  0E01               	movlw	1
 36423  0056E8  D001               	goto	L119
 36424  0056EA                     i2l14910:
 36425                           
 36426                           ; BSR set to: 1
 36427                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 36428  0056EA  0E00               	movlw	0
 36429  0056EC                     L119:
 36430  0056EC  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 36431                           
 36432                           ; BSR set to: 1
 36433                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 36434                           
 36435                           ;outputs_MC50.c: 292:             }
 36436  0056EE  0E50               	movlw	80
 36437  0056F0  6FA4               	movwf	(_ts_system+5)& (0+255),b	;volatile
 36438                           
 36439                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 36440  0056F2  0E00               	movlw	0
 36441  0056F4  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 36442                           
 36443                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 36444  0056F6  0E01               	movlw	1
 36445  0056F8  6F95               	movwf	_StateTRIAC& (0+255),b
 36446                           
 36447                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 36448  0056FA  0E01               	movlw	1
 36449  0056FC  6F97               	movwf	_zeroCrossing& (0+255),b
 36450                           
 36451                           ; BSR set to: 1
 36452                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 36453  0056FE  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 36454                           
 36455                           ; BSR set to: 1
 36456                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 36457  005700  0100               	movlb	0	; () banked
 36458  005702  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36459  005704  A4D8               	btfss	status,2,c
 36460  005706  D00E               	goto	i2l14922
 36461                           
 36462                           ; BSR set to: 0
 36463  005708  0101               	movlb	1	; () banked
 36464  00570A  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36465  00570C  D00B               	goto	i2l14922
 36466  00570E  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36467  005710  E103               	bnz	i2u1504_40
 36468  005712  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36469  005714  A0D8               	btfss	status,0,c
 36470  005716  D006               	goto	i2l14922
 36471  005718                     i2u1504_40:
 36472                           
 36473                           ; BSR set to: 1
 36474                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 36475  005718  0E01               	movlw	1
 36476  00571A  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 36477  00571C  D022               	goto	i2l14930
 36478  00571E                     i2u1505_40:
 36479                           
 36480                           ; BSR set to: 1
 36481                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 36482  00571E  0E00               	movlw	0
 36483  005720  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 36484  005722  D01F               	goto	i2l14930
 36485  005724                     i2l14922:
 36486                           
 36487                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 36488  005724  0101               	movlb	1	; () banked
 36489  005726  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 36490  005728  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 36491  00572C  6A06               	clrf	(??_controlMotorForce+1)^0,c
 36492  00572E  2605               	addwf	??_controlMotorForce^0,f,c
 36493  005730  0E00               	movlw	0
 36494  005732  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 36495  005734  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36496  005736  6E07               	movwf	(??_controlMotorForce+2)^0,c
 36497  005738  6A08               	clrf	(??_controlMotorForce+3)^0,c
 36498  00573A  5005               	movf	??_controlMotorForce^0,w,c
 36499  00573C  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 36500  00573E  5008               	movf	(??_controlMotorForce+3)^0,w,c
 36501  005740  0A80               	xorlw	128
 36502  005742  6E09               	movwf	(??_controlMotorForce+4)^0,c
 36503  005744  5006               	movf	(??_controlMotorForce+1)^0,w,c
 36504  005746  0A80               	xorlw	128
 36505  005748  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 36506  00574A  B0D8               	btfsc	status,0,c
 36507  00574C  D7E8               	goto	i2u1505_40
 36508  00574E  D009               	goto	i2l14930
 36509  005750                     i2l2195:
 36510                           
 36511                           ; BSR set to: 1
 36512  005750  B68D               	btfsc	141,3,c	;volatile
 36513  005752  D007               	goto	i2l14930
 36514                           
 36515                           ; BSR set to: 1
 36516  005754  5197               	movf	_zeroCrossing& (0+255),w,b
 36517  005756  B4D8               	btfsc	status,2,c
 36518  005758  D004               	goto	i2l14930
 36519                           
 36520                           ; BSR set to: 1
 36521                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 36522  00575A  0E00               	movlw	0
 36523  00575C  6F97               	movwf	_zeroCrossing& (0+255),b
 36524                           
 36525                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 36526  00575E  0E00               	movlw	0
 36527  005760  6F96               	movwf	_waitZeroPeak& (0+255),b
 36528  005762                     i2l14930:
 36529                           
 36530                           ; BSR set to: 1
 36531                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 36532  005762  B68D               	btfsc	141,3,c	;volatile
 36533                           
 36534                           ; BSR set to: 1
 36535                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 36536  005764  2B98               	incf	_zeroCrossingLength& (0+255),f,b
 36537                           
 36538                           ; BSR set to: 1
 36539                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 36540                           
 36541                           ;outputs_MC50.c: 340:     }
 36542  005766  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 36543                           
 36544                           ; BSR set to: 1
 36545                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 36546  005768  5100               	movf	_var_sys& (0+255),w,b	;volatile
 36547  00576A  EC8B  F044         	call	i2_VerifyElectricalBrake
 36548  00576E  0100               	movlb	0	; () banked
 36549  005770  6F83               	movwf	_stateMotor& (0+255),b
 36550                           
 36551                           ; BSR set to: 0
 36552                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 36553  005772  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36554  005774  A4D8               	btfss	status,2,c
 36555  005776  D02E               	goto	i2l14954
 36556                           
 36557                           ; BSR set to: 0
 36558  005778  0101               	movlb	1	; () banked
 36559  00577A  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36560  00577C  D02B               	goto	i2l14954
 36561  00577E  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36562  005780  E103               	bnz	i2u1511_40
 36563  005782  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36564  005784  A0D8               	btfss	status,0,c
 36565  005786  D026               	goto	i2l14954
 36566  005788                     i2u1511_40:
 36567                           
 36568                           ; BSR set to: 1
 36569  005788  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36570  00578A  D005               	goto	i2u1512_40
 36571  00578C  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36572  00578E  E122               	bnz	i2l14954
 36573  005790  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36574  005792  B0D8               	btfsc	status,0,c
 36575  005794  D01F               	goto	i2l14954
 36576  005796                     i2u1512_40:
 36577                           
 36578                           ; BSR set to: 1
 36579                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 36580  005796  0100               	movlb	0	; () banked
 36581  005798  5183               	movf	_stateMotor& (0+255),w,b
 36582  00579A  B4D8               	btfsc	status,2,c
 36583  00579C  D03A               	goto	i2l14966
 36584                           
 36585                           ; BSR set to: 0
 36586  00579E  0101               	movlb	1	; () banked
 36587  0057A0  0595               	decf	_StateTRIAC& (0+255),w,b
 36588  0057A2  A4D8               	btfss	status,2,c
 36589  0057A4  D036               	goto	i2l14966
 36590                           
 36591                           ; BSR set to: 1
 36592  0057A6  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36593  0057A8  D005               	goto	i2u1515_40
 36594  0057AA  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36595  0057AC  E132               	bnz	i2l14966
 36596  0057AE  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36597  0057B0  B0D8               	btfsc	status,0,c
 36598  0057B2  D02F               	goto	i2l14966
 36599  0057B4                     i2u1515_40:
 36600                           
 36601                           ; BSR set to: 1
 36602  0057B4  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 36603  0057B6  A4D8               	btfss	status,2,c
 36604  0057B8  D02C               	goto	i2l14966
 36605                           
 36606                           ; BSR set to: 1
 36607  0057BA  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36608  0057BC  D006               	goto	i2u1517_40
 36609  0057BE  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36610  0057C0  E128               	bnz	i2l14966
 36611  0057C2  0E0C               	movlw	12
 36612  0057C4  5DC7               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 36613  0057C6  B0D8               	btfsc	status,0,c
 36614  0057C8  D024               	goto	i2l14966
 36615  0057CA                     i2u1517_40:
 36616                           
 36617                           ; BSR set to: 1
 36618                           
 36619                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36620  0057CA  8E86               	bsf	134,7,c	;volatile
 36621                           
 36622                           ; BSR set to: 1
 36623                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 36624  0057CC  0EEC               	movlw	236
 36625  0057CE  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36626  0057D0  0E78               	movlw	120
 36627  0057D2  D01A               	goto	L120
 36628  0057D4                     i2l14954:
 36629                           
 36630                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 36631  0057D4  0100               	movlb	0	; () banked
 36632  0057D6  5183               	movf	_stateMotor& (0+255),w,b
 36633  0057D8  B4D8               	btfsc	status,2,c
 36634  0057DA  D01B               	goto	i2l14966
 36635                           
 36636                           ; BSR set to: 0
 36637  0057DC  0101               	movlb	1	; () banked
 36638  0057DE  5194               	movf	_difTime& (0+255),w,b
 36639  0057E0  5DA4               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 36640  0057E2  B0D8               	btfsc	status,0,c
 36641  0057E4  D016               	goto	i2l14966
 36642                           
 36643                           ; BSR set to: 1
 36644  0057E6  0595               	decf	_StateTRIAC& (0+255),w,b
 36645  0057E8  A4D8               	btfss	status,2,c
 36646  0057EA  D013               	goto	i2l14966
 36647                           
 36648                           ; BSR set to: 1
 36649  0057EC  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36650  0057EE  D005               	goto	i2u1521_40
 36651  0057F0  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36652  0057F2  E10F               	bnz	i2l14966
 36653  0057F4  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36654  0057F6  B0D8               	btfsc	status,0,c
 36655  0057F8  D00C               	goto	i2l14966
 36656  0057FA                     i2u1521_40:
 36657                           
 36658                           ; BSR set to: 1
 36659  0057FA  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 36660  0057FC  A4D8               	btfss	status,2,c
 36661  0057FE  D009               	goto	i2l14966
 36662                           
 36663                           ; BSR set to: 1
 36664                           
 36665                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 36666  005800  8E86               	bsf	134,7,c	;volatile
 36667                           
 36668                           ; BSR set to: 1
 36669                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 36670  005802  0EFF               	movlw	255
 36671  005804  6FA6               	movwf	(_ts_system+7)& (0+255),b	;volatile
 36672  005806  0E38               	movlw	56
 36673  005808                     L120:
 36674  005808  6FA5               	movwf	(_ts_system+6)& (0+255),b	;volatile
 36675                           
 36676                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 36677  00580A  0E01               	movlw	1
 36678  00580C  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36679                           
 36680                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 36681  00580E  0E00               	movlw	0
 36682  005810  6F95               	movwf	_StateTRIAC& (0+255),b
 36683  005812                     i2l14966:
 36684                           
 36685                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 36686  005812  0E15               	movlw	21
 36687  005814  0101               	movlb	1	; () banked
 36688  005816  61A4               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 36689  005818  D002               	goto	i2u1524_40
 36690                           
 36691                           ; BSR set to: 1
 36692  00581A  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36693  00581C  D004               	goto	i2u1525_40
 36694  00581E                     i2u1524_40:
 36695                           
 36696                           ; BSR set to: 1
 36697  00581E  0100               	movlb	0	; () banked
 36698  005820  5183               	movf	_stateMotor& (0+255),w,b
 36699  005822  A4D8               	btfss	status,2,c
 36700  005824  D004               	goto	i2l2222
 36701  005826                     i2u1525_40:
 36702                           
 36703                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 36704  005826  9E86               	bcf	134,7,c	;volatile
 36705                           
 36706                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 36707  005828  0E00               	movlw	0
 36708  00582A  0101               	movlb	1	; () banked
 36709  00582C  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 36710  00582E                     i2l2222:
 36711                           
 36712                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 36713  00582E  0100               	movlb	0	; () banked
 36714  005830  5183               	movf	_stateMotor& (0+255),w,b
 36715  005832  B4D8               	btfsc	status,2,c
 36716  005834  D00C               	goto	i2l14978
 36717                           
 36718                           ; BSR set to: 0
 36719  005836  0101               	movlb	1	; () banked
 36720  005838  BFA6               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 36721  00583A  D009               	goto	i2l14978
 36722  00583C  51A6               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 36723  00583E  E103               	bnz	i2u1527_40
 36724  005840  05A5               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 36725  005842  A0D8               	btfss	status,0,c
 36726  005844  D004               	goto	i2l14978
 36727  005846                     i2u1527_40:
 36728                           
 36729                           ; BSR set to: 1
 36730                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 36731  005846  07A5               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 36732  005848  A0D8               	btfss	status,0,c
 36733  00584A  07A6               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 36734                           
 36735                           ;outputs_MC50.c: 399:     }
 36736  00584C  0012               	return	
 36737  00584E                     i2l14978:
 36738  00584E  0100               	movlb	0	; () banked
 36739  005850  5183               	movf	_stateMotor& (0+255),w,b
 36740  005852  A4D8               	btfss	status,2,c
 36741  005854  0012               	return	
 36742                           
 36743                           ; BSR set to: 0
 36744  005856  0101               	movlb	1	; () banked
 36745  005858  AFA6               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 36746  00585A  0012               	return	
 36747                           
 36748                           ; BSR set to: 1
 36749                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 36750  00585C  4BA5               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 36751  00585E  2BA6               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 36752  005860  0012               	return		;funcret
 36753  005862                     __end_of_controlMotorForce:
 36754                           	callstack 0
 36755                           
 36756 ;; *************** function i2_VerifyElectricalBrake *****************
 36757 ;; Defined at:
 36758 ;;		line 658 in file "outputs_MC50.c"
 36759 ;; Parameters:    Size  Location     Type
 36760 ;;  actualState     1    wreg     enum E10381
 36761 ;; Auto vars:     Size  Location     Type
 36762 ;;  actualState     1    1[COMRAM] enum E10381
 36763 ;;  tempState       1    0[COMRAM] enum E10381
 36764 ;; Return value:  Size  Location     Type
 36765 ;;                  1    wreg      enum E10381
 36766 ;; Registers used:
 36767 ;;		wreg, status,2, status,0
 36768 ;; Tracked objects:
 36769 ;;		On entry : 3F/1
 36770 ;;		On exit  : 3E/0
 36771 ;;		Unchanged: 0/0
 36772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36777 ;;Total ram usage:        2 bytes
 36778 ;; Hardware stack levels used: 1
 36779 ;; This function calls:
 36780 ;;		Nothing
 36781 ;; This function is called by:
 36782 ;;		_controlMotorForce
 36783 ;; This function uses a non-reentrant model
 36784 ;;
 36785                           
 36786                           	psect	text197
 36787  008916                     __ptext197:
 36788                           	callstack 0
 36789  008916                     i2_VerifyElectricalBrake:
 36790                           	callstack 14
 36791                           
 36792                           ;incstack = 0
 36793                           ;i2VerifyElectricalBrake@actualState stored from wreg
 36794  008916  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 36795                           
 36796                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 36797  008918  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 36798                           
 36799                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 36800  00891C  0100               	movlb	0	; () banked
 36801  00891E  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 36802  008920  A4D8               	btfss	status,2,c
 36803  008922  D02E               	goto	i2l2323
 36804                           
 36805                           ; BSR set to: 0
 36806  008924  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36807  008926  A4D8               	btfss	status,2,c
 36808  008928  D02B               	goto	i2l2323
 36809                           
 36810                           ; BSR set to: 0
 36811  00892A  0101               	movlb	1	; () banked
 36812  00892C  BFE0               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 36813  00892E  D005               	goto	i2u1458_40
 36814  008930  51E0               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 36815  008932  E126               	bnz	i2l2323
 36816  008934  05DF               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 36817  008936  B0D8               	btfsc	status,0,c
 36818  008938  D023               	goto	i2l2323
 36819  00893A                     i2u1458_40:
 36820                           
 36821                           ; BSR set to: 1
 36822                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 36823  00893A  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 36824  00893C  0100               	movlb	0	; () banked
 36825  00893E  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 36826  008940  B4D8               	btfsc	status,2,c
 36827  008942  D00B               	goto	i2l14596
 36828                           
 36829                           ; BSR set to: 0
 36830  008944  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 36831  008946  A4D8               	btfss	status,2,c
 36832  008948  D008               	goto	i2l14596
 36833                           
 36834                           ; BSR set to: 0
 36835                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 36836  00894A  0E01               	movlw	1
 36837  00894C  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36838                           
 36839                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 36840  00894E  0E00               	movlw	0
 36841  008950  0101               	movlb	1	; () banked
 36842  008952  6FC8               	movwf	(_ts_system+41)& (0+255),b	;volatile
 36843  008954  0E16               	movlw	22
 36844  008956  6FC7               	movwf	(_ts_system+40)& (0+255),b	;volatile
 36845                           
 36846                           ;outputs_MC50.c: 670:         }
 36847  008958  D018               	goto	i2l2328
 36848  00895A                     i2l14596:
 36849                           
 36850                           ; BSR set to: 0
 36851  00895A  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 36852  00895C  A4D8               	btfss	status,2,c
 36853  00895E  D00B               	goto	i2l14602
 36854                           
 36855                           ; BSR set to: 0
 36856  008960  0101               	movlb	1	; () banked
 36857  008962  BFC8               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 36858  008964  D008               	goto	i2l14602
 36859  008966  51C8               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 36860  008968  E103               	bnz	i2u1462_40
 36861  00896A  05C7               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 36862  00896C  A0D8               	btfss	status,0,c
 36863  00896E  D003               	goto	i2l14602
 36864  008970                     i2u1462_40:
 36865                           
 36866                           ; BSR set to: 1
 36867                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 36868  008970  0E01               	movlw	1
 36869  008972  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 36870                           
 36871                           ;outputs_MC50.c: 686:         }
 36872  008974  D00A               	goto	i2l2328
 36873  008976                     i2l14602:
 36874                           
 36875                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 36876  008976  0E00               	movlw	0
 36877  008978  0100               	movlb	0	; () banked
 36878  00897A  6F78               	movwf	_brakeElectric_st& (0+255),b
 36879                           
 36880                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 36881  00897C  0E00               	movlw	0
 36882  00897E  D004               	goto	L121
 36883  008980                     i2l2323:
 36884                           
 36885                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 36886  008980  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 36887                           
 36888                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 36889  008984  0E00               	movlw	0
 36890  008986  0100               	movlb	0	; () banked
 36891  008988                     L121:
 36892  008988  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 36893  00898A                     i2l2328:
 36894                           
 36895                           ;outputs_MC50.c: 700:     return tempState;
 36896  00898A  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 36897  00898C  0012               	return		;funcret
 36898  00898E                     __end_ofi2_VerifyElectricalBrake:
 36899                           	callstack 0
 36900                           
 36901 ;; *************** function i2_GetMotorPower *****************
 36902 ;; Defined at:
 36903 ;;		line 405 in file "outputs_MC50.c"
 36904 ;; Parameters:    Size  Location     Type
 36905 ;;		None
 36906 ;; Auto vars:     Size  Location     Type
 36907 ;;  defineatraso    1    3[COMRAM] unsigned char 
 36908 ;; Return value:  Size  Location     Type
 36909 ;;                  1    wreg      unsigned char 
 36910 ;; Registers used:
 36911 ;;		wreg, status,2, status,0, prodl, prodh
 36912 ;; Tracked objects:
 36913 ;;		On entry : 3F/E
 36914 ;;		On exit  : 3F/1
 36915 ;;		Unchanged: 0/0
 36916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36919 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36920 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36921 ;;Total ram usage:        4 bytes
 36922 ;; Hardware stack levels used: 1
 36923 ;; This function calls:
 36924 ;;		Nothing
 36925 ;; This function is called by:
 36926 ;;		_controlMotorForce
 36927 ;; This function uses a non-reentrant model
 36928 ;;
 36929                           
 36930                           	psect	text198
 36931  007BFA                     __ptext198:
 36932                           	callstack 0
 36933  007BFA                     i2_GetMotorPower:
 36934                           	callstack 14
 36935                           
 36936                           ; BSR set to: 14
 36937                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 36938                           
 36939                           ;incstack = 0
 36940  007BFA  0101               	movlb	1	; () banked
 36941  007BFC  057B               	decf	_powerControl_st& (0+255),w,b
 36942  007BFE  A4D8               	btfss	status,2,c
 36943  007C00  D006               	goto	i2l14546
 36944                           
 36945                           ; BSR set to: 1
 36946                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 36947  007C02  0100               	movlb	0	; () banked
 36948  007C04  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36949  007C06  0D06               	mullw	6
 36950  007C08  CFF3 F193          	movff	prodl,_temppower
 36951                           
 36952                           ;outputs_MC50.c: 416:     }
 36953  007C0C  D043               	goto	i2l2240
 36954  007C0E                     i2l14546:
 36955                           
 36956                           ; BSR set to: 1
 36957                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 36958  007C0E  0100               	movlb	0	; () banked
 36959  007C10  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 36960  007C12  0D06               	mullw	6
 36961  007C14  CFF3 F082          	movff	prodl,_fullmotorPower
 36962                           
 36963                           ; BSR set to: 0
 36964                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 36965  007C18  0101               	movlb	1	; () banked
 36966  007C1A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 36967  007C1C  D01C               	goto	i2l14556
 36968  007C1E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36969  007C20  E103               	bnz	i2u1448_40
 36970  007C22  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 36971  007C24  A0D8               	btfss	status,0,c
 36972  007C26  D017               	goto	i2l14556
 36973  007C28                     i2u1448_40:
 36974                           
 36975                           ; BSR set to: 1
 36976                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 36977  007C28  0100               	movlb	0	; () banked
 36978  007C2A  5182               	movf	_fullmotorPower& (0+255),w,b
 36979  007C2C  6E01               	movwf	??i2_GetMotorPower^0,c
 36980  007C2E  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 36981  007C30  0101               	movlb	1	; () banked
 36982  007C32  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 36983  007C34  5C01               	subwf	??i2_GetMotorPower^0,w,c
 36984  007C36  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 36985  007C38  0A80               	xorlw	128
 36986  007C3A  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 36987  007C3C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 36988  007C3E  0A80               	xorlw	128
 36989  007C40  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 36990  007C42  B0D8               	btfsc	status,0,c
 36991  007C44  D002               	goto	i2l14554
 36992                           
 36993                           ; BSR set to: 1
 36994                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 36995  007C46  0E01               	movlw	1
 36996  007C48  D004               	goto	L123
 36997  007C4A                     i2l14554:
 36998                           
 36999                           ; BSR set to: 1
 37000                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 37001  007C4A  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 37002  007C4C  0100               	movlb	0	; () banked
 37003  007C4E  5D82               	subwf	_fullmotorPower& (0+255),w,b
 37004  007C50  D017               	goto	L124
 37005  007C52                     L123:
 37006  007C52  6F93               	movwf	_temppower& (0+255),b
 37007  007C54  D01F               	goto	i2l2240
 37008  007C56                     i2l14556:
 37009                           
 37010                           ; BSR set to: 1
 37011  007C56  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37012  007C58  D005               	goto	i2u1450_40
 37013  007C5A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37014  007C5C  E113               	bnz	i2l14566
 37015  007C5E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37016  007C60  B0D8               	btfsc	status,0,c
 37017  007C62  D010               	goto	i2l14566
 37018  007C64                     i2u1450_40:
 37019                           
 37020                           ; BSR set to: 1
 37021  007C64  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37022  007C66  D005               	goto	i2u1451_40
 37023  007C68  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37024  007C6A  E10C               	bnz	i2l14566
 37025  007C6C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37026  007C6E  B0D8               	btfsc	status,0,c
 37027  007C70  D009               	goto	i2l14566
 37028  007C72                     i2u1451_40:
 37029                           
 37030                           ; BSR set to: 1
 37031                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 37032  007C72  C082  F193         	movff	_fullmotorPower,_temppower
 37033                           
 37034                           ; BSR set to: 1
 37035                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 37036  007C76  0E08               	movlw	8
 37037  007C78  0100               	movlb	0	; () banked
 37038  007C7A  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 37039  007C7C  D00B               	goto	i2l2240
 37040                           
 37041                           ; BSR set to: 0
 37042                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 37043  007C7E  0E3A               	movlw	58
 37044  007C80                     L124:
 37045  007C80  0101               	movlb	1	; () banked
 37046  007C82  D7E7               	goto	L123
 37047  007C84                     i2l14566:
 37048                           
 37049                           ; BSR set to: 1
 37050  007C84  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37051  007C86  D006               	goto	i2l2240
 37052  007C88  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37053  007C8A  E102               	bnz	i2u1453_40
 37054  007C8C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37055  007C8E  B0D8               	btfsc	status,0,c
 37056  007C90                     i2u1453_40:
 37057                           
 37058                           ; BSR set to: 1
 37059                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 37060  007C90  C110  F193         	movff	_var_sys+16,_temppower	;volatile
 37061  007C94                     i2l2240:
 37062                           
 37063                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 37064  007C94  0101               	movlb	1	; () banked
 37065  007C96  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 37066  007C98  D00E               	goto	i2l14576
 37067  007C9A  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 37068  007C9C  E103               	bnz	i2u1454_40
 37069  007C9E  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 37070  007CA0  A0D8               	btfss	status,0,c
 37071  007CA2  D009               	goto	i2l14576
 37072  007CA4                     i2u1454_40:
 37073                           
 37074                           ; BSR set to: 1
 37075  007CA4  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 37076  007CA6  D005               	goto	i2u1455_40
 37077  007CA8  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 37078  007CAA  E105               	bnz	i2l14576
 37079  007CAC  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 37080  007CAE  B0D8               	btfsc	status,0,c
 37081  007CB0  D002               	goto	i2l14576
 37082  007CB2                     i2u1455_40:
 37083                           
 37084                           ; BSR set to: 1
 37085                           ;outputs_MC50.c: 452:     defineatraso = 5;
 37086  007CB2  0E05               	movlw	5
 37087  007CB4  D001               	goto	L122
 37088  007CB6                     i2l14576:
 37089                           
 37090                           ; BSR set to: 1
 37091                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 37092  007CB6  0E17               	movlw	23
 37093  007CB8                     L122:
 37094  007CB8  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 37095                           
 37096                           ; BSR set to: 1
 37097                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 37098  007CBA  5193               	movf	_temppower& (0+255),w,b
 37099  007CBC  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 37100                           
 37101                           ; BSR set to: 1
 37102  007CBE  0012               	return		;funcret
 37103  007CC0                     __end_ofi2_GetMotorPower:
 37104                           	callstack 0
 37105                           
 37106 ;; *************** function _TMR1_WriteTimer *****************
 37107 ;; Defined at:
 37108 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 37109 ;; Parameters:    Size  Location     Type
 37110 ;;  timerVal        2    0[COMRAM] unsigned short 
 37111 ;; Auto vars:     Size  Location     Type
 37112 ;;		None
 37113 ;; Return value:  Size  Location     Type
 37114 ;;                  1    wreg      void 
 37115 ;; Registers used:
 37116 ;;		None
 37117 ;; Tracked objects:
 37118 ;;		On entry : 3F/1
 37119 ;;		On exit  : 3F/1
 37120 ;;		Unchanged: 3F/0
 37121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37126 ;;Total ram usage:        2 bytes
 37127 ;; Hardware stack levels used: 1
 37128 ;; This function calls:
 37129 ;;		Nothing
 37130 ;; This function is called by:
 37131 ;;		_TMR1_ISR
 37132 ;; This function uses a non-reentrant model
 37133 ;;
 37134                           
 37135                           	psect	text199
 37136  009C64                     __ptext199:
 37137                           	callstack 0
 37138  009C64                     _TMR1_WriteTimer:
 37139                           	callstack 15
 37140                           
 37141                           ; BSR set to: 1
 37142                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 37143                           
 37144                           ; BSR set to: 1
 37145                           ;incstack = 0
 37146  009C64  A4CF               	btfss	207,2,c	;volatile
 37147  009C66  D007               	goto	i2l1147
 37148                           
 37149                           ; BSR set to: 1
 37150                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 37151  009C68  90CF               	bcf	207,0,c	;volatile
 37152                           
 37153                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 37154  009C6A  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37155                           
 37156                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 37157  009C6E  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37158                           
 37159                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 37160  009C72  80CF               	bsf	207,0,c	;volatile
 37161                           
 37162                           ;mcc_generated_files/tmr1.c: 142:     }
 37163  009C74  0012               	return	
 37164  009C76                     i2l1147:
 37165                           
 37166                           ; BSR set to: 1
 37167                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 37168  009C76  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 37169                           
 37170                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 37171  009C7A  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 37172                           
 37173                           ; BSR set to: 1
 37174  009C7E  0012               	return		;funcret
 37175  009C80                     __end_of_TMR1_WriteTimer:
 37176                           	callstack 0
 37177                           
 37178 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 37179 ;; Defined at:
 37180 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 37181 ;; Parameters:    Size  Location     Type
 37182 ;;		None
 37183 ;; Auto vars:     Size  Location     Type
 37184 ;;		None
 37185 ;; Return value:  Size  Location     Type
 37186 ;;                  1    wreg      void 
 37187 ;; Registers used:
 37188 ;;		None
 37189 ;; Tracked objects:
 37190 ;;		On entry : 3F/2
 37191 ;;		On exit  : 3F/2
 37192 ;;		Unchanged: 3F/0
 37193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37198 ;;Total ram usage:        0 bytes
 37199 ;; Hardware stack levels used: 1
 37200 ;; This function calls:
 37201 ;;		Nothing
 37202 ;; This function is called by:
 37203 ;;		_TMR1_Initialize
 37204 ;;		_TMR1_ISR
 37205 ;; This function uses a non-reentrant model
 37206 ;;
 37207                           
 37208                           	psect	text200
 37209  009F9A                     __ptext200:
 37210                           	callstack 0
 37211  009F9A                     _TMR1_DefaultInterruptHandler:
 37212                           	callstack 15
 37213                           
 37214                           ; BSR set to: 2
 37215                           
 37216                           ; BSR set to: 1
 37217                           ;incstack = 0
 37218  009F9A  0012               	return		;funcret
 37219  009F9C                     __end_of_TMR1_DefaultInterruptHandler:
 37220                           	callstack 0
 37221                           
 37222 ;; *************** function _TMR0_ISR *****************
 37223 ;; Defined at:
 37224 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 37225 ;; Parameters:    Size  Location     Type
 37226 ;;		None
 37227 ;; Auto vars:     Size  Location     Type
 37228 ;;		None
 37229 ;; Return value:  Size  Location     Type
 37230 ;;                  1    wreg      void 
 37231 ;; Registers used:
 37232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37233 ;; Tracked objects:
 37234 ;;		On entry : 3F/E
 37235 ;;		On exit  : 0/0
 37236 ;;		Unchanged: 0/0
 37237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37242 ;;Total ram usage:        0 bytes
 37243 ;; Hardware stack levels used: 1
 37244 ;; Hardware stack levels required when called: 1
 37245 ;; This function calls:
 37246 ;;		Absolute function
 37247 ;;		_TMR0_DefaultInterruptHandler
 37248 ;;		_rxi
 37249 ;; This function is called by:
 37250 ;;		_INTERRUPT_InterruptManager
 37251 ;; This function uses a non-reentrant model
 37252 ;;
 37253                           
 37254                           	psect	text201
 37255  009B18                     __ptext201:
 37256                           	callstack 0
 37257  009B18                     _TMR0_ISR:
 37258                           	callstack 15
 37259                           
 37260                           ; BSR set to: 14
 37261                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 37262                           
 37263                           ; BSR set to: 2
 37264                           ;incstack = 0
 37265  009B18  9BCA               	bcf	202,5,b	;volatile
 37266                           
 37267                           ; BSR set to: 14
 37268                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 37269  009B1A  EC96  F027         	call	_rxi	;wreg free
 37270                           
 37271                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 37272  009B1E  0102               	movlb	2	; () banked
 37273  009B20  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37274  009B22  11E2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37275  009B24  B4D8               	btfsc	status,2,c
 37276  009B26  0012               	return	
 37277                           
 37278                           ; BSR set to: 2
 37279                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 37280  009B28  D801               	call	i2u1908_48
 37281  009B2A  0012               	return	
 37282  009B2C                     i2u1908_48:
 37283  009B2C  0005               	push	
 37284  009B2E  6EFA               	movwf	pclath,c
 37285  009B30  51E1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 37286  009B32  6EFD               	movwf	tosl,c
 37287  009B34  51E2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 37288  009B36  6EFE               	movwf	tosh,c
 37289  009B38  6AFF               	clrf	tosu,c
 37290  009B3A  50FA               	movf	pclath,w,c
 37291  009B3C  0012               	return		;indir
 37292  009B3E                     __end_of_TMR0_ISR:
 37293                           	callstack 0
 37294                           
 37295 ;; *************** function _rxi *****************
 37296 ;; Defined at:
 37297 ;;		line 41 in file "inputs_MC50.c"
 37298 ;; Parameters:    Size  Location     Type
 37299 ;;		None
 37300 ;; Auto vars:     Size  Location     Type
 37301 ;;		None
 37302 ;; Return value:  Size  Location     Type
 37303 ;;                  1    wreg      void 
 37304 ;; Registers used:
 37305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37306 ;; Tracked objects:
 37307 ;;		On entry : 3F/E
 37308 ;;		On exit  : 3C/0
 37309 ;;		Unchanged: 0/0
 37310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37313 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37314 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37315 ;;Total ram usage:        2 bytes
 37316 ;; Hardware stack levels used: 1
 37317 ;; This function calls:
 37318 ;;		Nothing
 37319 ;; This function is called by:
 37320 ;;		_TMR0_ISR
 37321 ;; This function uses a non-reentrant model
 37322 ;;
 37323                           
 37324                           	psect	text202
 37325  004F2C                     __ptext202:
 37326                           	callstack 0
 37327  004F2C                     _rxi:
 37328                           	callstack 15
 37329                           
 37330                           ; BSR set to: 14
 37331                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 37332                           
 37333                           ;incstack = 0
 37334  004F2C  0E00               	movlw	0
 37335  004F2E  B68E               	btfsc	142,3,c	;volatile
 37336  004F30  0E01               	movlw	1
 37337  004F32  0100               	movlb	0	; () banked
 37338  004F34  6F89               	movwf	_RFBit& (0+255),b	;volatile
 37339                           
 37340                           ; BSR set to: 0
 37341                           ;inputs_MC50.c: 47:     if (RFFull)
 37342  004F36  518B               	movf	_RFFull& (0+255),w,b	;volatile
 37343  004F38  A4D8               	btfss	status,2,c
 37344  004F3A  0012               	return	
 37345  004F3C  D116               	goto	i2l14860
 37346  004F3E                     i2l14750:
 37347                           
 37348                           ; BSR set to: 1
 37349                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 37350  004F3E  0100               	movlb	0	; () banked
 37351  004F40  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37352  004F42  A4D8               	btfss	status,2,c
 37353  004F44  D004               	goto	i2l14754
 37354                           
 37355                           ; BSR set to: 0
 37356                           ;inputs_MC50.c: 56:                 RFstate = 3;
 37357  004F46  0E03               	movlw	3
 37358  004F48  0101               	movlb	1	; () banked
 37359  004F4A  6F9D               	movwf	_RFstate& (0+255),b
 37360                           
 37361                           ;inputs_MC50.c: 57:             } else {
 37362  004F4C  0012               	return	
 37363  004F4E                     i2l14754:
 37364                           
 37365                           ; BSR set to: 0
 37366                           ;inputs_MC50.c: 58:                 RFcount--;
 37367  004F4E  077E               	decf	_RFcount& (0+255),f,b
 37368  004F50  A0D8               	btfss	status,0,c
 37369  004F52  077F               	decf	(_RFcount+1)& (0+255),f,b
 37370                           
 37371                           ; BSR set to: 0
 37372                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 37373  004F54  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37374  004F56  0012               	return	
 37375  004F58  0EF6               	movlw	246
 37376  004F5A  5D7E               	subwf	_RFcount& (0+255),w,b
 37377  004F5C  0EFF               	movlw	255
 37378  004F5E  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37379  004F60  B0D8               	btfsc	status,0,c
 37380  004F62  0012               	return	
 37381  004F64                     i2u1469_40:
 37382  004F64                     i2l14758:
 37383                           
 37384                           ; BSR set to: 0
 37385                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 37386  004F64  0E00               	movlw	0
 37387  004F66  0101               	movlb	1	; () banked
 37388  004F68  6F9D               	movwf	_RFstate& (0+255),b
 37389  004F6A  0012               	return	
 37390  004F6C                     i2l14760:
 37391                           
 37392                           ; BSR set to: 1
 37393                           ;inputs_MC50.c: 67:             if (RFBit) {
 37394  004F6C  0100               	movlb	0	; () banked
 37395  004F6E  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37396  004F70  B4D8               	btfsc	status,2,c
 37397  004F72  D02C               	goto	i2l14780
 37398                           
 37399                           ; BSR set to: 0
 37400                           ;inputs_MC50.c: 71:                 RFstate = 2;
 37401  004F74  0E02               	movlw	2
 37402  004F76  0101               	movlb	1	; () banked
 37403  004F78  6F9D               	movwf	_RFstate& (0+255),b
 37404                           
 37405                           ; BSR set to: 1
 37406                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 37407  004F7A  0EC6               	movlw	low _BufferRF
 37408  004F7C  0100               	movlb	0	; () banked
 37409  004F7E  258D               	addwf	_Bptr& (0+255),w,b
 37410  004F80  6ED9               	movwf	fsr2l,c
 37411  004F82  6ADA               	clrf	fsr2h,c
 37412  004F84  0E02               	movlw	high _BufferRF
 37413  004F86  22DA               	addwfc	fsr2h,f,c
 37414  004F88  90D8               	bcf	status,0,c
 37415  004F8A  32DF               	rrcf	indf2,f,c
 37416                           
 37417                           ; BSR set to: 0
 37418                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 37419  004F8C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37420  004F8E  D008               	goto	i2l14770
 37421                           
 37422                           ; BSR set to: 0
 37423                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 37424  004F90  0EC6               	movlw	low _BufferRF
 37425  004F92  258D               	addwf	_Bptr& (0+255),w,b
 37426  004F94  6ED9               	movwf	fsr2l,c
 37427  004F96  6ADA               	clrf	fsr2h,c
 37428  004F98  0E02               	movlw	high _BufferRF
 37429  004F9A  22DA               	addwfc	fsr2h,f,c
 37430  004F9C  0E80               	movlw	128
 37431  004F9E  26DF               	addwf	indf2,f,c
 37432  004FA0                     i2l14770:
 37433                           
 37434                           ; BSR set to: 0
 37435                           ;inputs_MC50.c: 81:                 RFcount = 0;
 37436  004FA0  0E00               	movlw	0
 37437  004FA2  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37438  004FA4  0E00               	movlw	0
 37439  004FA6  6F7E               	movwf	_RFcount& (0+255),b
 37440                           
 37441                           ; BSR set to: 0
 37442                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 37443  004FA8  2B8C               	incf	_BitCount& (0+255),f,b
 37444  004FAA  C08C  F001         	movff	_BitCount,??_rxi
 37445  004FAE  0E07               	movlw	7
 37446  004FB0  1601               	andwf	??_rxi^0,f,c
 37447  004FB2  B4D8               	btfsc	status,2,c
 37448                           
 37449                           ; BSR set to: 0
 37450                           ;inputs_MC50.c: 84:                     Bptr++;
 37451  004FB4  2B8D               	incf	_Bptr& (0+255),f,b
 37452                           
 37453                           ; BSR set to: 0
 37454                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 37455  004FB6  0E41               	movlw	65
 37456  004FB8  198C               	xorwf	_BitCount& (0+255),w,b
 37457  004FBA  A4D8               	btfss	status,2,c
 37458  004FBC  0012               	return	
 37459                           
 37460                           ; BSR set to: 0
 37461                           ;inputs_MC50.c: 86:                     RFstate = 0;
 37462  004FBE  0E00               	movlw	0
 37463  004FC0  0101               	movlb	1	; () banked
 37464  004FC2  6F9D               	movwf	_RFstate& (0+255),b
 37465                           
 37466                           ;inputs_MC50.c: 87:                     RFFull = 1;
 37467  004FC4  0E01               	movlw	1
 37468  004FC6  0100               	movlb	0	; () banked
 37469  004FC8  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37470  004FCA  0012               	return	
 37471  004FCC                     i2l14780:
 37472                           
 37473                           ; BSR set to: 0
 37474                           ;inputs_MC50.c: 92:                 RFcount++;
 37475  004FCC  4B7E               	infsnz	_RFcount& (0+255),f,b
 37476  004FCE  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37477                           
 37478                           ; BSR set to: 0
 37479                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 37480  004FD0  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37481  004FD2  0012               	return	
 37482  004FD4  517F               	movf	(_RFcount+1)& (0+255),w,b
 37483  004FD6  E104               	bnz	i2u1474_40
 37484  004FD8  0E0A               	movlw	10
 37485  004FDA  5D7E               	subwf	_RFcount& (0+255),w,b
 37486  004FDC  A0D8               	btfss	status,0,c
 37487  004FDE  0012               	return	
 37488  004FE0                     i2u1474_40:
 37489                           
 37490                           ; BSR set to: 0
 37491                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 37492  004FE0  0E01               	movlw	1
 37493  004FE2  0101               	movlb	1	; () banked
 37494  004FE4  6F9D               	movwf	_RFstate& (0+255),b
 37495                           
 37496                           ;inputs_MC50.c: 97:                     Bptr = 0;
 37497  004FE6  0E00               	movlw	0
 37498  004FE8  0100               	movlb	0	; () banked
 37499  004FEA  6F8D               	movwf	_Bptr& (0+255),b
 37500                           
 37501                           ;inputs_MC50.c: 98:                     BitCount = 0;
 37502  004FEC  0E00               	movlw	0
 37503  004FEE  6F8C               	movwf	_BitCount& (0+255),b
 37504  004FF0  0012               	return	
 37505  004FF2                     i2l14786:
 37506                           
 37507                           ; BSR set to: 1
 37508                           ;inputs_MC50.c: 103:             if (RFBit) {
 37509  004FF2  0100               	movlb	0	; () banked
 37510  004FF4  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37511  004FF6  B4D8               	btfsc	status,2,c
 37512  004FF8  D030               	goto	i2l14802
 37513                           
 37514                           ; BSR set to: 0
 37515                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 37516  004FFA  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37517  004FFC  D00E               	goto	i2u1477_40
 37518  004FFE  517F               	movf	(_RFcount+1)& (0+255),w,b
 37519  005000  E104               	bnz	i2u1476_40
 37520  005002  0E14               	movlw	20
 37521  005004  5D7E               	subwf	_RFcount& (0+255),w,b
 37522  005006  A0D8               	btfss	status,0,c
 37523  005008  D008               	goto	i2u1477_40
 37524  00500A                     i2u1476_40:
 37525                           
 37526                           ; BSR set to: 0
 37527  00500A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37528  00500C  D01E               	goto	i2l14800
 37529  00500E  517F               	movf	(_RFcount+1)& (0+255),w,b
 37530  005010  E104               	bnz	i2u1477_40
 37531  005012  0E2D               	movlw	45
 37532  005014  5D7E               	subwf	_RFcount& (0+255),w,b
 37533  005016  A0D8               	btfss	status,0,c
 37534  005018  D018               	goto	i2l14800
 37535  00501A                     i2u1477_40:
 37536                           
 37537                           ; BSR set to: 0
 37538                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 37539  00501A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37540  00501C  D7A3               	goto	i2u1469_40
 37541  00501E  517F               	movf	(_RFcount+1)& (0+255),w,b
 37542  005020  E104               	bnz	i2u1478_40
 37543  005022  0E50               	movlw	80
 37544  005024  5D7E               	subwf	_RFcount& (0+255),w,b
 37545  005026  A0D8               	btfss	status,0,c
 37546  005028  D79D               	goto	i2u1469_40
 37547  00502A                     i2u1478_40:
 37548                           
 37549                           ; BSR set to: 0
 37550  00502A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37551  00502C  D006               	goto	i2l14798
 37552  00502E  517F               	movf	(_RFcount+1)& (0+255),w,b
 37553  005030  E199               	bnz	i2l14758
 37554  005032  0E64               	movlw	100
 37555  005034  5D7E               	subwf	_RFcount& (0+255),w,b
 37556  005036  B0D8               	btfsc	status,0,c
 37557  005038  D795               	goto	i2u1469_40
 37558  00503A                     i2l14798:
 37559                           
 37560                           ; BSR set to: 0
 37561                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 37562  00503A  0EFF               	movlw	255
 37563  00503C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37564  00503E  0EF6               	movlw	246
 37565  005040  6F7E               	movwf	_RFcount& (0+255),b
 37566                           
 37567                           ;inputs_MC50.c: 114:                         RFstate = 4;
 37568  005042  0E04               	movlw	4
 37569  005044  0101               	movlb	1	; () banked
 37570  005046  6F9D               	movwf	_RFstate& (0+255),b
 37571  005048  0012               	return	
 37572  00504A                     i2l14800:
 37573                           
 37574                           ; BSR set to: 0
 37575                           ;inputs_MC50.c: 118:                     RFcount = 0;
 37576  00504A  0E00               	movlw	0
 37577  00504C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37578  00504E  0E00               	movlw	0
 37579  005050  6F7E               	movwf	_RFcount& (0+255),b
 37580                           
 37581                           ;inputs_MC50.c: 119:                     RFstate = 2;
 37582  005052  0E02               	movlw	2
 37583  005054  0101               	movlb	1	; () banked
 37584  005056  6F9D               	movwf	_RFstate& (0+255),b
 37585  005058  0012               	return	
 37586  00505A                     i2l14802:
 37587                           
 37588                           ; BSR set to: 0
 37589                           ;inputs_MC50.c: 122:                 RFcount++;
 37590  00505A  4B7E               	infsnz	_RFcount& (0+255),f,b
 37591  00505C  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37592  00505E  0012               	return	
 37593  005060                     i2l14804:
 37594                           
 37595                           ; BSR set to: 1
 37596                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 37597  005060  0100               	movlb	0	; () banked
 37598  005062  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37599  005064  A4D8               	btfss	status,2,c
 37600  005066  D056               	goto	i2l14840
 37601                           
 37602                           ; BSR set to: 0
 37603                           ;inputs_MC50.c: 130:                 RFstate = 5;
 37604  005068  0E05               	movlw	5
 37605  00506A  0101               	movlb	1	; () banked
 37606  00506C  6F9D               	movwf	_RFstate& (0+255),b
 37607                           
 37608                           ; BSR set to: 1
 37609                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 37610  00506E  0EC6               	movlw	low _BufferRF
 37611  005070  0100               	movlb	0	; () banked
 37612  005072  258D               	addwf	_Bptr& (0+255),w,b
 37613  005074  6ED9               	movwf	fsr2l,c
 37614  005076  6ADA               	clrf	fsr2h,c
 37615  005078  0E02               	movlw	high _BufferRF
 37616  00507A  22DA               	addwfc	fsr2h,f,c
 37617  00507C  90D8               	bcf	status,0,c
 37618  00507E  32DF               	rrcf	indf2,f,c
 37619                           
 37620                           ; BSR set to: 0
 37621                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 37622  005080  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37623  005082  D008               	goto	i2l14814
 37624                           
 37625                           ; BSR set to: 0
 37626                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 37627  005084  0EC6               	movlw	low _BufferRF
 37628  005086  258D               	addwf	_Bptr& (0+255),w,b
 37629  005088  6ED9               	movwf	fsr2l,c
 37630  00508A  6ADA               	clrf	fsr2h,c
 37631  00508C  0E02               	movlw	high _BufferRF
 37632  00508E  22DA               	addwfc	fsr2h,f,c
 37633  005090  0E80               	movlw	128
 37634  005092  26DF               	addwf	indf2,f,c
 37635  005094                     i2l14814:
 37636                           
 37637                           ; BSR set to: 0
 37638                           ;inputs_MC50.c: 136:                 RFcount = 0;
 37639  005094  0E00               	movlw	0
 37640  005096  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37641  005098  0E00               	movlw	0
 37642  00509A  6F7E               	movwf	_RFcount& (0+255),b
 37643                           
 37644                           ; BSR set to: 0
 37645                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 37646  00509C  2B8C               	incf	_BitCount& (0+255),f,b
 37647  00509E  C08C  F001         	movff	_BitCount,??_rxi
 37648  0050A2  0E07               	movlw	7
 37649  0050A4  1601               	andwf	??_rxi^0,f,c
 37650  0050A6  A4D8               	btfss	status,2,c
 37651  0050A8  D009               	goto	i2l14822
 37652                           
 37653                           ; BSR set to: 0
 37654                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 37655  0050AA  2B8D               	incf	_Bptr& (0+255),f,b
 37656                           
 37657                           ; BSR set to: 0
 37658                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 37659  0050AC  0EC6               	movlw	low _BufferRF
 37660  0050AE  258D               	addwf	_Bptr& (0+255),w,b
 37661  0050B0  6ED9               	movwf	fsr2l,c
 37662  0050B2  6ADA               	clrf	fsr2h,c
 37663  0050B4  0E02               	movlw	high _BufferRF
 37664  0050B6  22DA               	addwfc	fsr2h,f,c
 37665  0050B8  0E00               	movlw	0
 37666  0050BA  6EDF               	movwf	indf2,c
 37667  0050BC                     i2l14822:
 37668                           
 37669                           ; BSR set to: 0
 37670                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 37671  0050BC  0E0D               	movlw	13
 37672  0050BE  198C               	xorwf	_BitCount& (0+255),w,b
 37673  0050C0  A4D8               	btfss	status,2,c
 37674  0050C2  0012               	return	
 37675                           
 37676                           ; BSR set to: 0
 37677                           ;inputs_MC50.c: 144:                     RFstate = 0;
 37678  0050C4  0E00               	movlw	0
 37679  0050C6  0101               	movlb	1	; () banked
 37680  0050C8  6F9D               	movwf	_RFstate& (0+255),b
 37681                           
 37682                           ; BSR set to: 1
 37683                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 37684  0050CA  0100               	movlb	0	; () banked
 37685  0050CC  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 37686  0050CE  A4D8               	btfss	status,2,c
 37687  0050D0  D01A               	goto	i2l14834
 37688                           
 37689                           ; BSR set to: 0
 37690                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 37691  0050D2  0102               	movlb	2	; () banked
 37692  0050D4  51C6               	movf	_BufferRF& (0+255),w,b
 37693  0050D6  0101               	movlb	1	; () banked
 37694  0050D8  198B               	xorwf	_BufferRF_12BIT& (0+255),w,b
 37695  0050DA  A4D8               	btfss	status,2,c
 37696  0050DC  D00F               	goto	i2l1620
 37697                           
 37698                           ; BSR set to: 1
 37699  0050DE  0102               	movlb	2	; () banked
 37700  0050E0  51C7               	movf	(_BufferRF+1)& (0+255),w,b
 37701  0050E2  0101               	movlb	1	; () banked
 37702  0050E4  198C               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 37703  0050E6  A4D8               	btfss	status,2,c
 37704  0050E8  D009               	goto	i2l1620
 37705                           
 37706                           ; BSR set to: 1
 37707                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 37708  0050EA  0E01               	movlw	1
 37709  0050EC  0100               	movlb	0	; () banked
 37710  0050EE  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 37711                           
 37712                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 37713  0050F0  0E00               	movlw	0
 37714  0050F2  0102               	movlb	2	; () banked
 37715  0050F4  6FC8               	movwf	(_BufferRF+2)& (0+255),b
 37716                           
 37717                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 37718  0050F6  0E00               	movlw	0
 37719  0050F8  6FC9               	movwf	(_BufferRF+3)& (0+255),b
 37720                           
 37721                           ;inputs_MC50.c: 152:                         }
 37722  0050FA  0012               	return	
 37723  0050FC                     i2l1620:
 37724                           
 37725                           ; BSR set to: 1
 37726                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 37727  0050FC  C2C6  F18B         	movff	_BufferRF,_BufferRF_12BIT
 37728                           
 37729                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 37730  005100  C2C7  F18C         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37731  005104  0012               	return	
 37732  005106                     i2l14834:
 37733                           
 37734                           ; BSR set to: 0
 37735                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 37736  005106  0E01               	movlw	1
 37737  005108  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 37738                           
 37739                           ; BSR set to: 0
 37740                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 37741  00510A  C2C6  F18B         	movff	_BufferRF,_BufferRF_12BIT
 37742                           
 37743                           ; BSR set to: 0
 37744                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 37745  00510E  C2C7  F18C         	movff	_BufferRF+1,_BufferRF_12BIT+1
 37746  005112  0012               	return	
 37747  005114                     i2l14840:
 37748                           
 37749                           ; BSR set to: 0
 37750                           ;inputs_MC50.c: 168:                 RFcount++;
 37751  005114  4B7E               	infsnz	_RFcount& (0+255),f,b
 37752  005116  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 37753                           
 37754                           ; BSR set to: 0
 37755                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 37756  005118  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 37757  00511A  0012               	return	
 37758  00511C  517F               	movf	(_RFcount+1)& (0+255),w,b
 37759  00511E  E104               	bnz	i2u1487_40
 37760  005120  0E0A               	movlw	10
 37761  005122  5D7E               	subwf	_RFcount& (0+255),w,b
 37762  005124  A0D8               	btfss	status,0,c
 37763  005126  0012               	return	
 37764  005128                     i2u1487_40:
 37765  005128  D71D               	goto	i2u1469_40
 37766  00512A                     i2l14846:
 37767                           
 37768                           ; BSR set to: 1
 37769                           ;inputs_MC50.c: 177:             if (RFBit) {
 37770  00512A  0100               	movlb	0	; () banked
 37771  00512C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 37772  00512E  B4D8               	btfsc	status,2,c
 37773  005130  D004               	goto	i2l14850
 37774                           
 37775                           ; BSR set to: 0
 37776                           ;inputs_MC50.c: 181:                 RFstate = 4;
 37777  005132  0E04               	movlw	4
 37778  005134  0101               	movlb	1	; () banked
 37779  005136  6F9D               	movwf	_RFstate& (0+255),b
 37780                           
 37781                           ;inputs_MC50.c: 183:             } else {
 37782  005138  0012               	return	
 37783  00513A                     i2l14850:
 37784                           
 37785                           ; BSR set to: 0
 37786                           ;inputs_MC50.c: 184:                 RFcount--;
 37787  00513A  077E               	decf	_RFcount& (0+255),f,b
 37788  00513C  A0D8               	btfss	status,0,c
 37789  00513E  077F               	decf	(_RFcount+1)& (0+255),f,b
 37790                           
 37791                           ; BSR set to: 0
 37792                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 37793  005140  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 37794  005142  0012               	return	
 37795  005144  0EF6               	movlw	246
 37796  005146  5D7E               	subwf	_RFcount& (0+255),w,b
 37797  005148  0EFF               	movlw	255
 37798  00514A  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 37799  00514C  B0D8               	btfsc	status,0,c
 37800  00514E  0012               	return	
 37801  005150  D747               	goto	i2u1474_40
 37802  005152                     i2l14856:
 37803                           
 37804                           ; BSR set to: 1
 37805                           ;inputs_MC50.c: 197:             RFstate = 1;
 37806  005152  0E01               	movlw	1
 37807  005154  6F9D               	movwf	_RFstate& (0+255),b
 37808                           
 37809                           ;inputs_MC50.c: 198:             RFcount = 0;
 37810  005156  0E00               	movlw	0
 37811  005158  0100               	movlb	0	; () banked
 37812  00515A  6F7F               	movwf	(_RFcount+1)& (0+255),b
 37813  00515C  0E00               	movlw	0
 37814  00515E  6F7E               	movwf	_RFcount& (0+255),b
 37815                           
 37816                           ;inputs_MC50.c: 199:             Bptr = 0;
 37817  005160  0E00               	movlw	0
 37818  005162  6F8D               	movwf	_Bptr& (0+255),b
 37819                           
 37820                           ;inputs_MC50.c: 200:             BitCount = 0;
 37821  005164  0E00               	movlw	0
 37822  005166  6F8C               	movwf	_BitCount& (0+255),b
 37823                           
 37824                           ;inputs_MC50.c: 201:             break;
 37825  005168  0012               	return	
 37826  00516A                     i2l14860:
 37827                           
 37828                           ; BSR set to: 0
 37829  00516A  0101               	movlb	1	; () banked
 37830  00516C  519D               	movf	_RFstate& (0+255),w,b
 37831  00516E  6E01               	movwf	??_rxi^0,c
 37832  005170  6A02               	clrf	(??_rxi+1)^0,c
 37833                           
 37834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37835                           ; Switch size 1, requested type "simple"
 37836                           ; Number of cases is 1, Range of values is 0 to 0
 37837                           ; switch strategies available:
 37838                           ; Name         Instructions Cycles
 37839                           ; simple_byte            4     3 (average)
 37840                           ;	Chosen strategy is simple_byte
 37841  005172  5002               	movf	(??_rxi+1)^0,w,c
 37842  005174  0A00               	xorlw	0	; case 0
 37843  005176  A4D8               	btfss	status,2,c
 37844  005178  D7EC               	goto	i2l14856
 37845                           
 37846                           ; BSR set to: 1
 37847                           ; Switch size 1, requested type "simple"
 37848                           ; Number of cases is 6, Range of values is 0 to 5
 37849                           ; switch strategies available:
 37850                           ; Name         Instructions Cycles
 37851                           ; simple_byte           19    10 (average)
 37852                           ;	Chosen strategy is simple_byte
 37853  00517A  5001               	movf	??_rxi^0,w,c
 37854  00517C  0A00               	xorlw	0	; case 0
 37855  00517E  B4D8               	btfsc	status,2,c
 37856  005180  D7E8               	goto	i2l14856
 37857  005182  0A01               	xorlw	1	; case 1
 37858  005184  B4D8               	btfsc	status,2,c
 37859  005186  D735               	goto	i2l14786
 37860  005188  0A03               	xorlw	3	; case 2
 37861  00518A  B4D8               	btfsc	status,2,c
 37862  00518C  D6D8               	goto	i2l14750
 37863  00518E  0A01               	xorlw	1	; case 3
 37864  005190  B4D8               	btfsc	status,2,c
 37865  005192  D6EC               	goto	i2l14760
 37866  005194  0A07               	xorlw	7	; case 4
 37867  005196  B4D8               	btfsc	status,2,c
 37868  005198  D763               	goto	i2l14804
 37869  00519A  0A01               	xorlw	1	; case 5
 37870  00519C  B4D8               	btfsc	status,2,c
 37871  00519E  D7C5               	goto	i2l14846
 37872  0051A0  D7D8               	goto	i2l14856
 37873  0051A2                     __end_of_rxi:
 37874                           	callstack 0
 37875                           
 37876 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 37877 ;; Defined at:
 37878 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 37879 ;; Parameters:    Size  Location     Type
 37880 ;;		None
 37881 ;; Auto vars:     Size  Location     Type
 37882 ;;		None
 37883 ;; Return value:  Size  Location     Type
 37884 ;;                  1    wreg      void 
 37885 ;; Registers used:
 37886 ;;		None
 37887 ;; Tracked objects:
 37888 ;;		On entry : 3F/2
 37889 ;;		On exit  : 3F/2
 37890 ;;		Unchanged: 3F/0
 37891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37896 ;;Total ram usage:        0 bytes
 37897 ;; Hardware stack levels used: 1
 37898 ;; This function calls:
 37899 ;;		Nothing
 37900 ;; This function is called by:
 37901 ;;		_TMR0_Initialize
 37902 ;;		_TMR0_ISR
 37903 ;; This function uses a non-reentrant model
 37904 ;;
 37905                           
 37906                           	psect	text203
 37907  009F9C                     __ptext203:
 37908                           	callstack 0
 37909  009F9C                     _TMR0_DefaultInterruptHandler:
 37910                           	callstack 15
 37911                           
 37912                           ; BSR set to: 2
 37913                           
 37914                           ;incstack = 0
 37915  009F9C  0012               	return		;funcret
 37916  009F9E                     __end_of_TMR0_DefaultInterruptHandler:
 37917                           	callstack 0
 37918                           
 37919 ;; *************** function _EUSART1_Transmit_ISR *****************
 37920 ;; Defined at:
 37921 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 37922 ;; Parameters:    Size  Location     Type
 37923 ;;		None
 37924 ;; Auto vars:     Size  Location     Type
 37925 ;;		None
 37926 ;; Return value:  Size  Location     Type
 37927 ;;                  1    wreg      void 
 37928 ;; Registers used:
 37929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37930 ;; Tracked objects:
 37931 ;;		On entry : 3F/2
 37932 ;;		On exit  : 30/0
 37933 ;;		Unchanged: 0/0
 37934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37939 ;;Total ram usage:        0 bytes
 37940 ;; Hardware stack levels used: 1
 37941 ;; This function calls:
 37942 ;;		Nothing
 37943 ;; This function is called by:
 37944 ;;		_EUSART1_Initialize
 37945 ;;		_INTERRUPT_InterruptManager
 37946 ;; This function uses a non-reentrant model
 37947 ;;
 37948                           
 37949                           	psect	text204
 37950  00978A                     __ptext204:
 37951                           	callstack 0
 37952  00978A                     _EUSART1_Transmit_ISR:
 37953                           	callstack 16
 37954                           
 37955                           ; BSR set to: 2
 37956                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 37957                           
 37958                           ; BSR set to: 2
 37959                           ;incstack = 0
 37960  00978A  0E08               	movlw	8
 37961  00978C  0101               	movlb	1	; () banked
 37962  00978E  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 37963  009790  D012               	goto	i2l106
 37964                           
 37965                           ; BSR set to: 1
 37966                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 37967  009792  0E84               	movlw	low _eusart1TxBuffer
 37968  009794  0100               	movlb	0	; () banked
 37969  009796  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 37970  009798  6ED9               	movwf	fsr2l,c
 37971  00979A  6ADA               	clrf	fsr2h,c
 37972  00979C  0E02               	movlw	high _eusart1TxBuffer
 37973  00979E  22DA               	addwfc	fsr2h,f,c
 37974  0097A0  50DF               	movf	indf2,w,c
 37975  0097A2  6E9A               	movwf	154,c	;volatile
 37976                           
 37977                           ; BSR set to: 0
 37978  0097A4  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 37979                           
 37980                           ; BSR set to: 0
 37981                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 37982  0097A6  0E07               	movlw	7
 37983  0097A8  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 37984  0097AA  D002               	goto	i2l16908
 37985                           
 37986                           ; BSR set to: 0
 37987                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 37988  0097AC  0E00               	movlw	0
 37989  0097AE  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 37990  0097B0                     i2l16908:
 37991                           
 37992                           ; BSR set to: 0
 37993                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 37994  0097B0  0101               	movlb	1	; () banked
 37995  0097B2  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 37996                           
 37997                           ;mcc_generated_files/eusart1.c: 209:     }
 37998  0097B4  0012               	return	
 37999  0097B6                     i2l106:
 38000                           
 38001                           ; BSR set to: 1
 38002                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 38003  0097B6  010E               	movlb	14	; () banked
 38004  0097B8  99C5               	bcf	197,4,b	;volatile
 38005  0097BA  0012               	return		;funcret
 38006  0097BC                     __end_of_EUSART1_Transmit_ISR:
 38007                           	callstack 0
 38008                           
 38009 ;; *************** function _EUSART1_Receive_ISR *****************
 38010 ;; Defined at:
 38011 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 38012 ;; Parameters:    Size  Location     Type
 38013 ;;		None
 38014 ;; Auto vars:     Size  Location     Type
 38015 ;;		None
 38016 ;; Return value:  Size  Location     Type
 38017 ;;                  1    wreg      void 
 38018 ;; Registers used:
 38019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 38020 ;; Tracked objects:
 38021 ;;		On entry : 3F/2
 38022 ;;		On exit  : 0/0
 38023 ;;		Unchanged: 0/0
 38024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38029 ;;Total ram usage:        0 bytes
 38030 ;; Hardware stack levels used: 1
 38031 ;; Hardware stack levels required when called: 2
 38032 ;; This function calls:
 38033 ;;		Absolute function
 38034 ;;		_EUSART1_DefaultErrorHandler
 38035 ;;		_EUSART1_DefaultFramingErrorHandler
 38036 ;;		_EUSART1_DefaultOverrunErrorHandler
 38037 ;;		_EUSART1_RxDataHandler
 38038 ;; This function is called by:
 38039 ;;		_EUSART1_Initialize
 38040 ;;		_INTERRUPT_InterruptManager
 38041 ;; This function uses a non-reentrant model
 38042 ;;
 38043                           
 38044                           	psect	text205
 38045  00801A                     __ptext205:
 38046                           	callstack 0
 38047  00801A                     _EUSART1_Receive_ISR:
 38048                           	callstack 14
 38049                           
 38050                           ; BSR set to: 2
 38051                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 38052                           
 38053                           ;incstack = 0
 38054  00801A  0E74               	movlw	low _eusart1RxStatusBuffer
 38055  00801C  0100               	movlb	0	; () banked
 38056  00801E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38057  008020  6ED9               	movwf	fsr2l,c
 38058  008022  6ADA               	clrf	fsr2h,c
 38059  008024  0E02               	movlw	high _eusart1RxStatusBuffer
 38060  008026  22DA               	addwfc	fsr2h,f,c
 38061  008028  0E00               	movlw	0
 38062  00802A  6EDF               	movwf	indf2,c
 38063                           
 38064                           ; BSR set to: 0
 38065                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 38066  00802C  A49D               	btfss	157,2,c	;volatile
 38067  00802E  D013               	goto	i2u1902_49
 38068                           
 38069                           ; BSR set to: 0
 38070                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 38071  008030  0E74               	movlw	low _eusart1RxStatusBuffer
 38072  008032  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38073  008034  6ED9               	movwf	fsr2l,c
 38074  008036  6ADA               	clrf	fsr2h,c
 38075  008038  0E02               	movlw	high _eusart1RxStatusBuffer
 38076  00803A  22DA               	addwfc	fsr2h,f,c
 38077  00803C  0102               	movlb	2	; () banked
 38078  00803E  82DF               	bsf	indf2,1,c
 38079                           
 38080                           ; BSR set to: 2
 38081                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 38082  008040  D801               	call	i2u1902_48
 38083  008042  D009               	goto	i2u1902_49
 38084  008044                     i2u1902_48:
 38085  008044  0005               	push	
 38086  008046  6EFA               	movwf	pclath,c
 38087  008048  51E7               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 38088  00804A  6EFD               	movwf	tosl,c
 38089  00804C  51E8               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 38090  00804E  6EFE               	movwf	tosh,c
 38091  008050  6AFF               	clrf	tosu,c
 38092  008052  50FA               	movf	pclath,w,c
 38093  008054  0012               	return		;indir
 38094  008056                     i2u1902_49:
 38095                           
 38096                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 38097  008056  A29D               	btfss	157,1,c	;volatile
 38098  008058  D014               	goto	i2u1904_49
 38099                           
 38100                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 38101  00805A  0E74               	movlw	low _eusart1RxStatusBuffer
 38102  00805C  0100               	movlb	0	; () banked
 38103  00805E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38104  008060  6ED9               	movwf	fsr2l,c
 38105  008062  6ADA               	clrf	fsr2h,c
 38106  008064  0E02               	movlw	high _eusart1RxStatusBuffer
 38107  008066  22DA               	addwfc	fsr2h,f,c
 38108  008068  0102               	movlb	2	; () banked
 38109  00806A  84DF               	bsf	indf2,2,c
 38110                           
 38111                           ; BSR set to: 2
 38112                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 38113  00806C  D801               	call	i2u1904_48
 38114  00806E  D009               	goto	i2u1904_49
 38115  008070                     i2u1904_48:
 38116  008070  0005               	push	
 38117  008072  6EFA               	movwf	pclath,c
 38118  008074  51E5               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 38119  008076  6EFD               	movwf	tosl,c
 38120  008078  51E6               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 38121  00807A  6EFE               	movwf	tosh,c
 38122  00807C  6AFF               	clrf	tosu,c
 38123  00807E  50FA               	movf	pclath,w,c
 38124  008080  0012               	return		;indir
 38125  008082                     i2u1904_49:
 38126                           
 38127                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 38128  008082  0E74               	movlw	low _eusart1RxStatusBuffer
 38129  008084  0100               	movlb	0	; () banked
 38130  008086  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38131  008088  6ED9               	movwf	fsr2l,c
 38132  00808A  6ADA               	clrf	fsr2h,c
 38133  00808C  0E02               	movlw	high _eusart1RxStatusBuffer
 38134  00808E  22DA               	addwfc	fsr2h,f,c
 38135  008090  50DF               	movf	indf2,w,c
 38136  008092  B4D8               	btfsc	status,2,c
 38137  008094  D00C               	goto	i2l16928
 38138                           
 38139                           ; BSR set to: 0
 38140                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 38141  008096  D801               	call	i2u1906_48
 38142  008098  0012               	return	
 38143  00809A                     i2u1906_48:
 38144  00809A  0005               	push	
 38145  00809C  6EFA               	movwf	pclath,c
 38146  00809E  0102               	movlb	2	; () banked
 38147  0080A0  51E3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 38148  0080A2  6EFD               	movwf	tosl,c
 38149  0080A4  51E4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 38150  0080A6  6EFE               	movwf	tosh,c
 38151  0080A8  6AFF               	clrf	tosu,c
 38152  0080AA  50FA               	movf	pclath,w,c
 38153  0080AC  0012               	return		;indir
 38154  0080AE                     i2l16928:
 38155                           
 38156                           ; BSR set to: 0
 38157                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 38158  0080AE  ECF7  F04D         	call	_EUSART1_RxDataHandler	;wreg free
 38159  0080B2  0012               	return		;funcret
 38160  0080B4                     __end_of_EUSART1_Receive_ISR:
 38161                           	callstack 0
 38162                           
 38163 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 38164 ;; Defined at:
 38165 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 38166 ;; Parameters:    Size  Location     Type
 38167 ;;		None
 38168 ;; Auto vars:     Size  Location     Type
 38169 ;;		None
 38170 ;; Return value:  Size  Location     Type
 38171 ;;                  1    wreg      void 
 38172 ;; Registers used:
 38173 ;;		None
 38174 ;; Tracked objects:
 38175 ;;		On entry : 3F/2
 38176 ;;		On exit  : 3F/2
 38177 ;;		Unchanged: 3F/0
 38178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38183 ;;Total ram usage:        0 bytes
 38184 ;; Hardware stack levels used: 1
 38185 ;; This function calls:
 38186 ;;		Nothing
 38187 ;; This function is called by:
 38188 ;;		_EUSART1_Initialize
 38189 ;;		_EUSART1_Receive_ISR
 38190 ;; This function uses a non-reentrant model
 38191 ;;
 38192                           
 38193                           	psect	text206
 38194  009F5E                     __ptext206:
 38195                           	callstack 0
 38196  009F5E                     _EUSART1_DefaultOverrunErrorHandler:
 38197                           	callstack 15
 38198                           
 38199                           ; BSR set to: 2
 38200                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 38201                           
 38202                           ;incstack = 0
 38203  009F5E  989D               	bcf	157,4,c	;volatile
 38204                           
 38205                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 38206  009F60  889D               	bsf	157,4,c	;volatile
 38207                           
 38208                           ; BSR set to: 2
 38209  009F62  0012               	return		;funcret
 38210  009F64                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 38211                           	callstack 0
 38212                           
 38213 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 38214 ;; Defined at:
 38215 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 38216 ;; Parameters:    Size  Location     Type
 38217 ;;		None
 38218 ;; Auto vars:     Size  Location     Type
 38219 ;;		None
 38220 ;; Return value:  Size  Location     Type
 38221 ;;                  1    wreg      void 
 38222 ;; Registers used:
 38223 ;;		None
 38224 ;; Tracked objects:
 38225 ;;		On entry : 3F/2
 38226 ;;		On exit  : 3F/2
 38227 ;;		Unchanged: 3F/0
 38228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38233 ;;Total ram usage:        0 bytes
 38234 ;; Hardware stack levels used: 1
 38235 ;; This function calls:
 38236 ;;		Nothing
 38237 ;; This function is called by:
 38238 ;;		_EUSART1_Initialize
 38239 ;;		_EUSART1_Receive_ISR
 38240 ;; This function uses a non-reentrant model
 38241 ;;
 38242                           
 38243                           	psect	text207
 38244  009F9E                     __ptext207:
 38245                           	callstack 0
 38246  009F9E                     _EUSART1_DefaultFramingErrorHandler:
 38247                           	callstack 15
 38248                           
 38249                           ; BSR set to: 2
 38250                           
 38251                           ; BSR set to: 2
 38252                           ;incstack = 0
 38253  009F9E  0012               	return		;funcret
 38254  009FA0                     __end_of_EUSART1_DefaultFramingErrorHandler:
 38255                           	callstack 0
 38256                           
 38257 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 38258 ;; Defined at:
 38259 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 38260 ;; Parameters:    Size  Location     Type
 38261 ;;		None
 38262 ;; Auto vars:     Size  Location     Type
 38263 ;;		None
 38264 ;; Return value:  Size  Location     Type
 38265 ;;                  1    wreg      void 
 38266 ;; Registers used:
 38267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38268 ;; Tracked objects:
 38269 ;;		On entry : 3F/2
 38270 ;;		On exit  : 3F/0
 38271 ;;		Unchanged: 0/0
 38272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38277 ;;Total ram usage:        0 bytes
 38278 ;; Hardware stack levels used: 1
 38279 ;; Hardware stack levels required when called: 1
 38280 ;; This function calls:
 38281 ;;		_EUSART1_RxDataHandler
 38282 ;; This function is called by:
 38283 ;;		_EUSART1_Initialize
 38284 ;;		_EUSART1_Receive_ISR
 38285 ;; This function uses a non-reentrant model
 38286 ;;
 38287                           
 38288                           	psect	text208
 38289  009F64                     __ptext208:
 38290                           	callstack 0
 38291  009F64                     _EUSART1_DefaultErrorHandler:
 38292                           	callstack 14
 38293                           
 38294                           ; BSR set to: 2
 38295                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 38296                           
 38297                           ; BSR set to: 2
 38298                           ;incstack = 0
 38299  009F64  ECF7  F04D         	call	_EUSART1_RxDataHandler	;wreg free
 38300                           
 38301                           ; BSR set to: 0
 38302  009F68  0012               	return		;funcret
 38303  009F6A                     __end_of_EUSART1_DefaultErrorHandler:
 38304                           	callstack 0
 38305                           
 38306 ;; *************** function _EUSART1_RxDataHandler *****************
 38307 ;; Defined at:
 38308 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 38309 ;; Parameters:    Size  Location     Type
 38310 ;;		None
 38311 ;; Auto vars:     Size  Location     Type
 38312 ;;		None
 38313 ;; Return value:  Size  Location     Type
 38314 ;;                  1    wreg      void 
 38315 ;; Registers used:
 38316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38317 ;; Tracked objects:
 38318 ;;		On entry : 3D/0
 38319 ;;		On exit  : 3F/0
 38320 ;;		Unchanged: 0/0
 38321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38326 ;;Total ram usage:        0 bytes
 38327 ;; Hardware stack levels used: 1
 38328 ;; This function calls:
 38329 ;;		Nothing
 38330 ;; This function is called by:
 38331 ;;		_EUSART1_Receive_ISR
 38332 ;;		_EUSART1_DefaultErrorHandler
 38333 ;; This function uses a non-reentrant model
 38334 ;;
 38335                           
 38336                           	psect	text209
 38337  009BEE                     __ptext209:
 38338                           	callstack 0
 38339  009BEE                     _EUSART1_RxDataHandler:
 38340                           	callstack 15
 38341                           
 38342                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 38343                           
 38344                           ; BSR set to: 0
 38345                           ;incstack = 0
 38346  009BEE  0E7C               	movlw	low _eusart1RxBuffer
 38347  009BF0  0100               	movlb	0	; () banked
 38348  009BF2  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 38349  009BF4  6ED9               	movwf	fsr2l,c
 38350  009BF6  6ADA               	clrf	fsr2h,c
 38351  009BF8  0E02               	movlw	high _eusart1RxBuffer
 38352  009BFA  22DA               	addwfc	fsr2h,f,c
 38353  009BFC  CF99 FFDF          	movff	3993,indf2	;volatile
 38354                           
 38355                           ; BSR set to: 0
 38356  009C00  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 38357                           
 38358                           ; BSR set to: 0
 38359                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 38360  009C02  0E07               	movlw	7
 38361  009C04  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 38362  009C06  D002               	goto	i2l13178
 38363                           
 38364                           ; BSR set to: 0
 38365                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 38366  009C08  0E00               	movlw	0
 38367  009C0A  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 38368  009C0C                     i2l13178:
 38369                           
 38370                           ; BSR set to: 0
 38371                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 38372  009C0C  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 38373                           
 38374                           ; BSR set to: 0
 38375  009C0E  0012               	return		;funcret
 38376  009C10                     __end_of_EUSART1_RxDataHandler:
 38377                           	callstack 0
 38378                           
 38379                           	psect	text210
 38380  000000                     __ptext210:
 38381                           	callstack 0
 38382                           
 38383                           	psect	rparam
 38384  0000                     
 38385                           	psect	temp
 38386  000050                     btemp:
 38387                           	callstack 0
 38388  000050                     	ds	1
 38389  0000                     int$flags	set	btemp
 38390  0000                     wtemp8	set	btemp+1
 38391  0000                     ttemp5	set	btemp+1
 38392  0000                     ttemp6	set	btemp+4
 38393  0000                     ttemp7	set	btemp+8
 38394                           
 38395                           	psect	idloc
 38396                           
 38397                           ;Config register IDLOC0 @ 0x200000
 38398                           ;	unspecified, using default values
 38399  200000                     	org	2097152
 38400  200000  0FFF               	dw	4095
 38401                           
 38402                           ;Config register IDLOC1 @ 0x200002
 38403                           ;	unspecified, using default values
 38404  200002                     	org	2097154
 38405  200002  0FFF               	dw	4095
 38406                           
 38407                           ;Config register IDLOC2 @ 0x200004
 38408                           ;	unspecified, using default values
 38409  200004                     	org	2097156
 38410  200004  0FFF               	dw	4095
 38411                           
 38412                           ;Config register IDLOC3 @ 0x200006
 38413                           ;	unspecified, using default values
 38414  200006                     	org	2097158
 38415  200006  0FFF               	dw	4095
 38416                           
 38417                           ;Config register IDLOC4 @ 0x200008
 38418                           ;	unspecified, using default values
 38419  200008                     	org	2097160
 38420  200008  0FFF               	dw	4095
 38421                           
 38422                           ;Config register IDLOC5 @ 0x20000A
 38423                           ;	unspecified, using default values
 38424  20000A                     	org	2097162
 38425  20000A  0FFF               	dw	4095
 38426                           
 38427                           ;Config register IDLOC6 @ 0x20000C
 38428                           ;	unspecified, using default values
 38429  20000C                     	org	2097164
 38430  20000C  0FFF               	dw	4095
 38431                           
 38432                           ;Config register IDLOC7 @ 0x20000E
 38433                           ;	unspecified, using default values
 38434  20000E                     	org	2097166
 38435  20000E  0FFF               	dw	4095
 38436                           
 38437                           	psect	config
 38438                           
 38439                           ;Config register CONFIG1L @ 0x300000
 38440                           ;	External Oscillator mode Selection bits
 38441                           ;	FEXTOSC = OFF, Oscillator not enabled
 38442                           ;	Power-up default value for COSC bits
 38443                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 38444  300000                     	org	3145728
 38445  300000  8C                 	db	140
 38446                           
 38447                           ;Config register CONFIG1H @ 0x300001
 38448                           ;	Clock Out Enable bit
 38449                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 38450                           ;	Clock Switch Enable bit
 38451                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 38452                           ;	Fail-Safe Clock Monitor Enable bit
 38453                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 38454  300001                     	org	3145729
 38455  300001  FF                 	db	255
 38456                           
 38457                           ;Config register CONFIG2L @ 0x300002
 38458                           ;	Master Clear Enable bit
 38459                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 38460                           ;	Power-up Timer Enable bit
 38461                           ;	PWRTE = ON, Power up timer enabled
 38462                           ;	Low-power BOR enable bit
 38463                           ;	LPBOREN = OFF, ULPBOR disabled
 38464                           ;	Brown-out Reset Enable bits
 38465                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 38466  300002                     	org	3145730
 38467  300002  FD                 	db	253
 38468                           
 38469                           ;Config register CONFIG2H @ 0x300003
 38470                           ;	Brown Out Reset Voltage selection bits
 38471                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 38472                           ;	ZCD Disable bit
 38473                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 38474                           ;	PPSLOCK bit One-Way Set Enable bit
 38475                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 38476                           ;	Stack Full/Underflow Reset Enable bit
 38477                           ;	STVREN = ON, Stack full/underflow will cause Reset
 38478                           ;	Debugger Enable bit
 38479                           ;	DEBUG = OFF, Background debugger disabled
 38480                           ;	Extended Instruction Set Enable bit
 38481                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 38482  300003                     	org	3145731
 38483  300003  FF                 	db	255
 38484                           
 38485                           ;Config register CONFIG3L @ 0x300004
 38486                           ;	WDT Period Select bits
 38487                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 38488                           ;	WDT operating mode
 38489                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 38490  300004                     	org	3145732
 38491  300004  BF                 	db	191
 38492                           
 38493                           ;Config register CONFIG3H @ 0x300005
 38494                           ;	WDT Window Select bits
 38495                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 38496                           ;	WDT input clock selector
 38497                           ;	WDTCCS = SC, Software Control
 38498  300005                     	org	3145733
 38499  300005  FF                 	db	255
 38500                           
 38501                           ;Config register CONFIG4L @ 0x300006
 38502                           ;	Write Protection Block 0
 38503                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 38504                           ;	Write Protection Block 1
 38505                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 38506                           ;	Write Protection Block 2
 38507                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 38508                           ;	Write Protection Block 3
 38509                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 38510  300006                     	org	3145734
 38511  300006  FF                 	db	255
 38512                           
 38513                           ;Config register CONFIG4H @ 0x300007
 38514                           ;	Configuration Register Write Protection bit
 38515                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 38516                           ;	Boot Block Write Protection bit
 38517                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 38518                           ;	Data EEPROM Write Protection bit
 38519                           ;	WRTD = OFF, Data EEPROM not write-protected
 38520                           ;	Scanner Enable bit
 38521                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 38522                           ;	Low Voltage Programming Enable bit
 38523                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 38524  300007                     	org	3145735
 38525  300007  DF                 	db	223
 38526                           
 38527                           ;Config register CONFIG5L @ 0x300008
 38528                           ;	UserNVM Program Memory Code Protection bit
 38529                           ;	CP = ON, UserNVM code protection enabled
 38530                           ;	DataNVM Memory Code Protection bit
 38531                           ;	CPD = ON, DataNVM code protection enabled
 38532  300008                     	org	3145736
 38533  300008  FC                 	db	252
 38534                           
 38535                           ;Config register CONFIG5H @ 0x300009
 38536                           ;	unspecified, using default values
 38537  300009                     	org	3145737
 38538  300009  FF                 	db	255
 38539                           
 38540                           ;Config register CONFIG6L @ 0x30000A
 38541                           ;	Table Read Protection Block 0
 38542                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 38543                           ;	Table Read Protection Block 1
 38544                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 38545                           ;	Table Read Protection Block 2
 38546                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 38547                           ;	Table Read Protection Block 3
 38548                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 38549  30000A                     	org	3145738
 38550  30000A  FF                 	db	255
 38551                           
 38552                           ;Config register CONFIG6H @ 0x30000B
 38553                           ;	Boot Block Table Read Protection bit
 38554                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 38555  30000B                     	org	3145739
 38556  30000B  FF                 	db	255
 38557                           tosu	equ	0xFFF
 38558                           tosh	equ	0xFFE
 38559                           tosl	equ	0xFFD
 38560                           stkptr	equ	0xFFC
 38561                           pclatu	equ	0xFFB
 38562                           pclath	equ	0xFFA
 38563                           pcl	equ	0xFF9
 38564                           tblptru	equ	0xFF8
 38565                           tblptrh	equ	0xFF7
 38566                           tblptrl	equ	0xFF6
 38567                           tablat	equ	0xFF5
 38568                           prodh	equ	0xFF4
 38569                           prodl	equ	0xFF3
 38570                           indf0	equ	0xFEF
 38571                           postinc0	equ	0xFEE
 38572                           postdec0	equ	0xFED
 38573                           preinc0	equ	0xFEC
 38574                           plusw0	equ	0xFEB
 38575                           fsr0h	equ	0xFEA
 38576                           fsr0l	equ	0xFE9
 38577                           wreg	equ	0xFE8
 38578                           indf1	equ	0xFE7
 38579                           postinc1	equ	0xFE6
 38580                           postdec1	equ	0xFE5
 38581                           preinc1	equ	0xFE4
 38582                           plusw1	equ	0xFE3
 38583                           fsr1h	equ	0xFE2
 38584                           fsr1l	equ	0xFE1
 38585                           bsr	equ	0xFE0
 38586                           indf2	equ	0xFDF
 38587                           postinc2	equ	0xFDE
 38588                           postdec2	equ	0xFDD
 38589                           preinc2	equ	0xFDC
 38590                           plusw2	equ	0xFDB
 38591                           fsr2h	equ	0xFDA
 38592                           fsr2l	equ	0xFD9
 38593                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         824
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     36     158
    BANK1           256      0     256
    BANK2           256      7     250
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8390$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8396$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8402$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8408$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8407	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8402	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8401	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8396	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8395	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8390	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8389	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    confirmpackage@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    read_eusartparser@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    init_package@package	PTR struct package_t size(2) Largest target is 7
		 -> main@package(BANK2[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6624$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), var_sys_NVM.motorSensitivity(BANK0[1]), 
		 -> var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4647$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    ReadSerial@tempSerial	PTR unsigned long  size(1) Largest target is 4
		 -> eusartparser@serial(BANK0[4]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), 
		 -> memoryTEMP(BANK2[16]), var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> eusartparser@serial(BANK0[4]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _saveNewSerial->_i2c_writeNBytes
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ReadSerial->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8901652
                                              0 BANK2      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3276122
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3249934
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       7     6      1  719702
                                             57 COMRAM     1     0      1
                                              4 BANK0      6     6      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7475
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1778943
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   21448
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1492
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2402
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      31
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     601
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     429
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  743020
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  385615
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3969
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3541
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  357405
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1742040
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        35    33      2 2138952
                                              8 BANK0     28    26      2
                         _ReadSerial
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1966
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  350496
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349810
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    4     2      2   13555
                                             23 COMRAM     4     2      2
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    8577
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _confirmpackage                                       3     0      3    7904
                                             17 COMRAM     3     0      3
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         2     0      2     232
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  350671
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349543
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _ReadSerial                                           5     3      2  348828
                                             45 COMRAM     5     3      2
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  348313
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      40
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     602
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     602
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     968
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     319
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     161
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1958
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1235
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     723
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    5060
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     820
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     461
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     238
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0    1186
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    3017
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2878
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _ReadSerial
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      7      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DE      60        0.0%
DATA                 0      0     3DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jul 19 14:42:02 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9E80  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 8916  
                                           _LoadManufCode 9B88  
                                        ?_SetSegmentValue 001C  
                                                     l100 955A  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 83E6  
                                                     l690 884C  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02DF  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4F2C  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 9872  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 9EFC  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 96BA  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2044 8DDC  
                                                    l1405 6C92  
                                       readRFButtons@key1 0088  
                                                    l3102 3DA2  
                                                    l2039 8DD0  
                                                    l2311 5A7E  
                                                    l2240 7BCE  
                                                    l2323 8908  
                                                    l2403 563C  
                                                    l1372 9458  
                                                    l1436 61C4  
                                                    l1524 6194  
                                                    l1357 76AC  
                                                    l1517 6148  
                                                    l3053 3AEE  
                                                    l1366 782E  
                                                    l2254 7396  
                                                    l1383 63C8  
                                                    l2415 46BA  
                                                    l2328 8912  
                                                    l2353 5560  
                                                    l3233 1066  
                                                    l3065 3C7E  
                                                    l2370 5558  
                                                    l1491 9064  
                                                    l2507 826C  
                                                    l2443 482C  
                                                    l1731 74D2  
                                                    l1388 6450  
                                                    l2516 9658  
                                                    l2380 5630  
                                                    l1740 7538  
                                                    l1732 74DA  
                                                    l1742 7554  
                                                    l1654 6710  
                                                    l2519 967E  
                                                    l1495 602A  
                                                    l1743 755C  
                                                    l2376 556C  
                                                    l1736 750C  
                                                    l3088 3CC4  
                                                    l1745 7578  
                                                    l1737 7514  
                                                    l1657 6786  
                                                    l1746 7580  
                                                    l2810 4F2A  
                                                    l2730 5BA0  
                                                    l1739 7530  
                                                    l1667 67CE  
                                                    l2723 53F4  
                                                    l1748 75AA  
                                                    l3444 397C  
                                                    l3380 361C  
                                                    l3372 35E2  
                                                    l2477 4942  
                                                    l2397 5628  
                                                    l3621 2F8C  
                                                    l1861 7AB8  
                                                    l3517 8EF8  
                                                    l2653 44F4  
                                                    l3630 2FC6  
                                                    l3622 2F96  
                                                    l3438 394A  
                                                    l3390 3760  
                                                    l3358 3522  
                                                    l3631 2FCC  
                                                    l2727 5AAA  
                                                    l3391 3780  
                                                    l3640 2FF4  
                                                    l3632 2FD2  
                                                    l3624 2F9C  
                                                    l2912 2344  
                                                    l3641 2FFA  
                                                    l3633 2FD8  
                                                    l2585 8AE6  
                                                    l2729 5AE0  
                                                    l3642 3000  
                                                    l3626 2FA6  
                                                    l3651 30E8  
                                                    l3643 3006  
                                                    l3635 2FDE  
                                                    l3627 2FB0  
                                                    l3619 2F82  
                                                    l1859 7AA8  
                                                    l3636 2FE4  
                                                    l3628 2FBA  
                                                    l3645 300C  
                                                    l3629 2FC0  
                                                    l1869 7ADC  
                                                    l2773 4D46  
                                                    l3493 7D72  
                                                    l4286 925C  
                                                    l3646 3012  
                                                    l3638 2FEE  
                                                    l3822 8698  
                                                    l3647 3018  
                                                    l3656 326E  
                                                    l3648 301E  
                                                    l3657 3278  
                                                    l3499 97EA  
                                                    ?_rxi 0001  
                                                    _DKEY 02CF  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 02ED  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                           eusartparser@i 00E8  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 9E38  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 9544  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 6678  
                                                    _main 6998  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0012  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                       ReadSerial@cmdType 0032  
                                         __end_of_Decrypt 7B34  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 7BFA  
                                         __end_of_ReadADC 91C0  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 6008  
                                 __end_of_TMR0_Initialize 9BCC  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9DA6  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l21000 72DE  
                                                   l20018 8C72  
                                                   l20210 8398  
                                                   l20220 83A4  
                                                   l21100 4B30  
                                                   l20214 839E  
                                                   l20206 8392  
                                                   l21006 7332  
                                                   l21110 4BB4  
                                                   l21102 4B4C  
                                                   l20320 9362  
                                                   l21120 4C38  
                                                   l21104 4B68  
                                                   l22000 3726  
                                                   l20250 8850  
                                                   l21210 9A4C  
                                                   l21202 9A34  
                                                   l21106 4B80  
                                                   l21114 4BC6  
                                                   l20228 840E  
                                                   l20260 885C  
                                                   l20316 935C  
                                                   l21124 4C74  
                                                   l21108 4B9A  
                                                   l21116 4C2A  
                                                   l22100 38B4  
                                                   l20254 8856  
                                                   l20326 9368  
                                                   l20342 91D8  
                                                   l20502 7BF0  
                                                   l21310 698A  
                                                   l21150 855A  
                                                   l21070 49EA  
                                                   l21062 49D4  
                                                   l22030 379A  
                                                   l20280 8E4A  
                                                   l20352 9E24  
                                                   l20432 8624  
                                                   l21152 8562  
                                                   l21144 8544  
                                                   l21064 49DA  
                                                   l22120 38F2  
                                                   l22112 38E8  
                                                   l22040 37EC  
                                                   l22032 37C4  
                                                   l21242 8348  
                                                   l21410 5F52  
                                                   l20514 9124  
                                                   l21170 859A  
                                                   l21162 8582  
                                                   l21138 8534  
                                                   l21090 4A8A  
                                                   l21082 4A2C  
                                                   l21058 49CA  
                                                   l22106 38DE  
                                                   l22050 381A  
                                                   l22034 37C8  
                                                   l20452 9BEA  
                                                   l20276 8E44  
                                                   l20292 8E58  
                                                   l20348 9E1C  
                                                   l23004 88FE  
                                                   l20540 89A0  
                                                   l20604 7AD4  
                                                   l21180 9692  
                                                   l21404 5F4A  
                                                   l21332 5E7E  
                                                   l21500 8016  
                                                   l21092 4AA6  
                                                   l21076 4A1C  
                                                   l22140 391E  
                                                   l22132 391A  
                                                   l22060 382E  
                                                   l22044 3806  
                                                   l20286 8E52  
                                                   l20534 8A5E  
                                                   l20526 8A22  
                                                   l21254 9A8A  
                                                   l21238 8306  
                                                   l23014 965A  
                                                   l23030 8204  
                                                   l20550 89EA  
                                                   l21350 5EBC  
                                                   l21326 5E7A  
                                                   l20518 9138  
                                                   l21166 858C  
                                                   l21094 4ACA  
                                                   l22126 3910  
                                                   l22054 3822  
                                                   l22046 3810  
                                                   l22038 37D0  
                                                   l20384 98C6  
                                                   l20480 7B84  
                                                   l20472 7B48  
                                                   l21272 7862  
                                                   l23032 820C  
                                                   l21192 96AE  
                                                   l21184 9698  
                                                   l21424 5F78  
                                                   l21344 5EB8  
                                                   l21440 5FC8  
                                                   l21096 4AE6  
                                                   l21088 4A5E  
                                                   l22160 3976  
                                                   l22080 3882  
                                                   l22072 385E  
                                                   l22056 3826  
                                                   l24000 10C2  
                                                   l20378 98BA  
                                                   l20458 94D0  
                                                   l20466 94F0  
                                                   l20482 7B90  
                                                   l21266 77CA  
                                                   l23026 81F4  
                                                   l20706 957A  
                                                   l21522 7F0C  
                                                   l23122 51DC  
                                                   l21098 4B02  
                                                   l22146 393C  
                                                   l22090 38A4  
                                                   l22074 387A  
                                                   l22066 3852  
                                                   l24010 112A  
                                                   l20492 7BBE  
                                                   l23028 81FC  
                                                   l23036 8214  
                                                   l20708 957E  
                                                   l20732 627A  
                                                   l20724 6216  
                                                   l20716 61CC  
                                                   l21292 68C4  
                                                   l21196 96B6  
                                                   l21436 5FC4  
                                                   l21356 5EE0  
                                                   l21516 7F08  
                                                   l20644 78E8  
                                                   l23124 51F2  
                                                   l22332 3FCC  
                                                   l22156 3964  
                                                   l22092 38A8  
                                                   l22084 3886  
                                                   l22068 3856  
                                                   l24020 1190  
                                                   l23038 823C  
                                                   l20718 61D2  
                                                   l20734 627E  
                                                   l20582 7AA4  
                                                   l20574 7A8A  
                                                   l21382 5F10  
                                                   l21366 5EE4  
                                                   l21470 7FB2  
                                                   l23206 5340  
                                                   l22510 864A  
                                                   l20814 9332  
                                                   l22350 404A  
                                                   l22342 3FEE  
                                                   l22174 39AC  
                                                   l22094 38AC  
                                                   l22078 387E  
                                                   l24102 1362  
                                                   l24030 11D6  
                                                   l23048 8268  
                                                   l20752 6334  
                                                   l20744 62D0  
                                                   l21296 68FC  
                                                   l21288 6888  
                                                   l20592 7AB4  
                                                   l21616 9722  
                                                   l21608 970A  
                                                   l21448 6004  
                                                   l21464 7FAE  
                                                   l21800 8C24  
                                                   l23072 7E5C  
                                                   l21552 7F70  
                                                   l21536 7F3A  
                                                   l20656 7958  
                                                   l20648 7914  
                                                   l21712 59EC  
                                                   l21720 5A0A  
                                                   l21632 5886  
                                                   l23208 5346  
                                                   l22512 8656  
                                                   l20816 934C  
                                                   l22352 4082  
                                                   l22344 3FF0  
                                                   l22168 3996  
                                                   l22176 39C8  
                                                   l22096 38B0  
                                                   l24032 11DC  
                                                   l20738 628C  
                                                   l20754 6338  
                                                   l21562 9754  
                                                   l23074 7E72  
                                                   l23410 5C4A  
                                                   l23330 5B42  
                                                   l23242 538C  
                                                   l23138 5220  
                                                   l22522 868A  
                                                   l20922 76C0  
                                                   l20818 9350  
                                                   l22426 422E  
                                                   l22418 4214  
                                                   l22354 4088  
                                                   l22186 39F0  
                                                   l24042 11FA  
                                                   l24026 11AA  
                                                   l22532 922A  
                                                   l20772 86F8  
                                                   l20780 8198  
                                                   l20692 9546  
                                                   l20764 8B24  
                                                   l21580 8460  
                                                   l20596 7AC0  
                                                   l21388 5F18  
                                                   l21484 7FE0  
                                                   l21804 8C2C  
                                                   l23316 5B14  
                                                   l21740 5A40  
                                                   l21644 58B2  
                                                   l23252 53A8  
                                                   l23244 5390  
                                                   l23228 5360  
                                                   l23172 52D0  
                                                   l20684 94A8  
                                                   l22372 4104  
                                                   l22188 3A42  
                                                   l24132 1414  
                                                   l24028 11AC  
                                                   l22534 9232  
                                                   l22710 7642  
                                                   l20790 81DA  
                                                   l20782 81CA  
                                                   l22606 8FA4  
                                                   l20678 8F3E  
                                                   l23094 7EAE  
                                                   l23406 5C3E  
                                                   l23326 5B38  
                                                   l21750 5A6A  
                                                   l21742 5A46  
                                                   l21734 5A1C  
                                                   l21638 5898  
                                                   l21830 79A8  
                                                   l23246 5396  
                                                   l23190 530C  
                                                   l23158 5290  
                                                   l20942 7712  
                                                   l20934 76F4  
                                                   l22454 42D0  
                                                   l21902 3558  
                                                   l24230 1652  
                                                   l24206 15D4  
                                                   l24150 1460  
                                                   l24134 1418  
                                                   l24118 13CE  
                                                   l24046 1226  
                                                   l24310 1844  
                                                   l22544 9252  
                                                   l22704 762E  
                                                   l22800 603E  
                                                   l20872 6DF0  
                                                   l21576 845C  
                                                   l23088 7EA4  
                                                   l23504 4E36  
                                                   l23432 4CC6  
                                                   l23336 5B56  
                                                   l21840 7A1C  
                                                   l23264 53D2  
                                                   l20960 775C  
                                                   l20928 76DA  
                                                   l22448 42BA  
                                                   l22384 4164  
                                                   l22376 413E  
                                                   l21904 3560  
                                                   l24160 1480  
                                                   l24136 1424  
                                                   l24064 12B8  
                                                   l26000 3F14  
                                                   l22722 7668  
                                                   l22706 7636  
                                                   l23530 4E84  
                                                   l23514 4E52  
                                                   l23434 4CDC  
                                                   l23370 5BBA  
                                                   l23362 5B9C  
                                                   l23346 5B74  
                                                   l23338 5B5E  
                                                   l23178 52E8  
                                                   l23610 225C  
                                                   l20954 7742  
                                                   l20946 771E  
                                                   l20938 7706  
                                                   l22386 4178  
                                                   l21906 3568  
                                                   l24218 160E  
                                                   l24170 14F4  
                                                   l26002 3F20  
                                                   l24500 309A  
                                                   l22820 6084  
                                                   l22812 6068  
                                                   l22804 604C  
                                                   l20892 6ED8  
                                                   l21588 847C  
                                                   l21860 70E6  
                                                   l23532 4E8C  
                                                   l23508 4E3E  
                                                   l23516 4E58  
                                                   l23380 5BE0  
                                                   l23356 5B86  
                                                   l23284 5A9A  
                                                   l21668 593E  
                                                   l21692 598A  
                                                   l21836 79E2  
                                                   l26100 454C  
                                                   l20972 7782  
                                                   l20964 776A  
                                                   l20948 7728  
                                                   l22492 97E4  
                                                   l22476 7D32  
                                                   l21940 35F8  
                                                   l21924 3588  
                                                   l21916 357C  
                                                   l21908 3570  
                                                   l24244 168C  
                                                   l24236 166A  
                                                   l24068 12DA  
                                                   l22750 6372  
                                                   l24510 3282  
                                                   l24502 30EE  
                                                   l20878 6E42  
                                                   l21766 8AAA  
                                                   l21854 70A2  
                                                   l21846 7056  
                                                   l23526 4E7C  
                                                   l23446 4D34  
                                                   l21678 595C  
                                                   l23630 22C0  
                                                   l23606 2238  
                                                   l26030 4382  
                                                   l26022 4352  
                                                   l21950 360C  
                                                   l21942 3600  
                                                   l21934 3594  
                                                   l24190 1586  
                                                   l24166 14D2  
                                                   l24158 147E  
                                                   l24094 1346  
                                                   l24086 132A  
                                                   l26006 3F2C  
                                                   l24512 32F4  
                                                   l24504 3160  
                                                   l24520 3402  
                                                   l22840 60CA  
                                                   l22832 60AE  
                                                   l22824 6092  
                                                   l22816 6076  
                                                   l22808 605A  
                                                   l22912 5D20  
                                                   l22584 9424  
                                                   l23544 4E9E  
                                                   l23392 5C0E  
                                                   l20992 72A0  
                                                   l21880 8E2E  
                                                   l23720 24A6  
                                                   l20968 7776  
                                                   l20976 778C  
                                                   l24264 16D2  
                                                   l24248 1698  
                                                   l22770 6460  
                                                   l22746 635C  
                                                   l22690 75DA  
                                                   l22738 944C  
                                                   l24602 6BDE  
                                                   l24514 3342  
                                                   l24506 31AE  
                                                   l20898 6EEE  
                                                   l22922 5D94  
                                                   l22930 5DA8  
                                                   l23546 4EA2  
                                                   l23466 4DAC  
                                                   l23626 22A6  
                                                   l23618 2280  
                                                   l26122 45B6  
                                                   l26042 43BC  
                                                   l26034 439A  
                                                   l26026 4360  
                                                   l21970 3634  
                                                   l21962 3624  
                                                   l21938 35F0  
                                                   l21890 3534  
                                                   l24290 17F2  
                                                   l24266 16DA  
                                                   l24258 16C0  
                                                   l24186 1564  
                                                   l22756 6392  
                                                   l24604 6BE2  
                                                   l24516 33B4  
                                                   l24508 3220  
                                                   l22596 8F5C  
                                                   l22860 6110  
                                                   l22852 60F4  
                                                   l22844 60D8  
                                                   l22836 60BC  
                                                   l22828 60A0  
                                                   l22940 5DEE  
                                                   l22924 5DA4  
                                                   l22908 5D16  
                                                   l23548 4EA8  
                                                   l23724 24B4  
                                                   l21980 368E  
                                                   l21892 353C  
                                                   l24292 17F8  
                                                   l24276 1714  
                                                   l22774 6482  
                                                   l22766 6436  
                                                   l25430 8D98  
                                                   l24702 669C  
                                                   l21798 8C18  
                                                   l23582 4F12  
                                                   l23566 4EE0  
                                                   l23558 4EC6  
                                                   l23486 4DF8  
                                                   l21878 8DFC  
                                                   l23726 24BE  
                                                   l23654 2322  
                                                   l23646 22FA  
                                                   l23638 22E2  
                                                   l23590 21D6  
                                                   l26142 4616  
                                                   l26070 4452  
                                                   l26054 43F4  
                                                   l21990 369E  
                                                   l21894 3544  
                                                   l24294 17FE  
                                                   l24286 17E2  
                                                   l24616 6C16  
                                                   l25512 5548  
                                                   l22784 8B94  
                                                   l22880 615C  
                                                   l22872 613A  
                                                   l22864 611E  
                                                   l22856 6102  
                                                   l22848 60E6  
                                                   l22792 601C  
                                                   l24800 74C6  
                                                   l23912 2858  
                                                   l23840 26EC  
                                                   l23832 26CE  
                                                   l23760 2584  
                                                   l23664 2346  
                                                   l26152 4632  
                                                   l26144 461C  
                                                   l21992 36EC  
                                                   l21976 367C  
                                                   l21888 352C  
                                                   l24618 6C2C  
                                                   l25514 554C  
                                                   l25434 8DAA  
                                                   l23498 4E1C  
                                                   l23906 2842  
                                                   l23818 269C  
                                                   l23922 28A6  
                                                   l23666 2386  
                                                   l26146 4620  
                                                   l26162 4646  
                                                   l26082 4494  
                                                   l26058 4416  
                                                   l25612 47E8  
                                                   l25540 5618  
                                                   l25516 555A  
                                                   l22892 6186  
                                                   l22884 616A  
                                                   l22868 612C  
                                                   l24812 74F6  
                                                   l22956 5E1A  
                                                   l24732 6744  
                                                   l24724 6716  
                                                   l23780 25D4  
                                                   l23748 252E  
                                                   l23692 2438  
                                                   l23684 23FA  
                                                   l23668 239C  
                                                   l26156 4638  
                                                   l26148 462C  
                                                   l25614 47F8  
                                                   l25550 469C  
                                                   l25542 561C  
                                                   l25518 5570  
                                                   l25470 544A  
                                                   l25462 542E  
                                                   l25438 8DBE  
                                                   l27310 2946  
                                                   l27302 28E8  
                                                   l24814 7500  
                                                   l23686 2418  
                                                   l23598 2206  
                                                   l26086 44B6  
                                                   l23950 0F88  
                                                   l23942 0F44  
                                                   l25702 3A4A  
                                                   l24584 6B6C  
                                                   l24904 7202  
                                                   l25544 562A  
                                                   l25472 5450  
                                                   l25456 541E  
                                                   l27400 2B76  
                                                   l27304 2908  
                                                   l22888 6178  
                                                   l24664 6FB8  
                                                   l24760 67FE  
                                                   l24736 676A  
                                                   l23872 27C6  
                                                   l23848 273A  
                                                   l23792 262A  
                                                   l26096 44F6  
                                                   l25720 3AD6  
                                                   l25712 3A94  
                                                   l24914 722E  
                                                   l25650 48AA  
                                                   l25618 480E  
                                                   l25626 4838  
                                                   l27410 2BEE  
                                                   l27330 29D0  
                                                   l27322 299C  
                                                   l27314 2958  
                                                   l27306 2924  
                                                   l24498 3028  
                                                   l24754 67EA  
                                                   l24738 6770  
                                                   l24770 8CC8  
                                                   l23874 27D0  
                                                   l26098 4536  
                                                   l23954 0FAA  
                                                   l23946 0F66  
                                                   l23938 0F24  
                                                   l25802 3C08  
                                                   l25730 3B32  
                                                   l25644 4884  
                                                   l25660 48CE  
                                                   l25580 4740  
                                                   l25556 46BC  
                                                   l27420 2C6A  
                                                   l27404 2B88  
                                                   l24692 9D2E  
                                                   l24860 75A4  
                                                   l24756 67F2  
                                                   l24780 8CEA  
                                                   l24772 8CCC  
                                                   l25820 3C54  
                                                   l25716 3AB4  
                                                   l25708 3A72  
                                                   l25670 4904  
                                                   l25654 48BE  
                                                   l25590 477C  
                                                   l22998 88E2  
                                                   l27430 2CE6  
                                                   l27350 2A2A  
                                                   l27342 2A06  
                                                   l27334 29E2  
                                                   l27326 29BE  
                                                   l27318 297A  
                                                   l27502 18FA  
                                                   l24790 8D04  
                                                   l23894 2828  
                                                   l23990 1044  
                                                   l23982 101E  
                                                   l23974 0FFC  
                                                   l23966 0FE4  
                                                   l23958 0FCC  
                                                   l25910 3D92  
                                                   l25902 3D74  
                                                   l25830 3C8E  
                                                   l25806 3C1A  
                                                   l25750 3B84  
                                                   l25742 3B66  
                                                   l25726 3AF0  
                                                   l24928 7262  
                                                   l25648 489C  
                                                   l25592 478A  
                                                   l25584 4754  
                                                   l25568 4706  
                                                   l25488 549C  
                                                   l27440 2D5E  
                                                   l27424 2C80  
                                                   l27416 2C54  
                                                   l27512 1920  
                                                   l27520 1952  
                                                   l25840 3CB4  
                                                   l25760 3B92  
                                                   l25736 3B46  
                                                   l25728 3B1C  
                                                   l24874 7194  
                                                   l25682 4946  
                                                   l25666 48F0  
                                                   l27370 2A94  
                                                   l27362 2A70  
                                                   l27354 2A3C  
                                                   l27346 2A18  
                                                   l27338 29F4  
                                                   l27514 1936  
                                                   l25826 3C74  
                                                   l25692 4982  
                                                   l25596 47A0  
                                                   l27452 2DC4  
                                                   l27444 2D80  
                                                   l27436 2D4C  
                                                   l27604 1B0C  
                                                   l27540 19C2  
                                                   l27532 196E  
                                                   l27508 1910  
                                                   l24948 9288  
                                                   l24788 8D00  
                                                   l23996 1068  
                                                   l25932 3DDC  
                                                   l25828 3C80  
                                                   l25780 3BC6  
                                                   l25772 3BA8  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l25686 495E  
                                                   l25598 47AE  
                                                   l27390 2AEE  
                                                   l27382 2ACA  
                                                   l27374 2AA6  
                                                   l27366 2A82  
                                                   l27358 2A5E  
                                                   l27630 1C26  
                                                   l27622 1BD8  
                                                   l27550 19D0  
                                                   l27542 19C6  
                                                   l24798 74BC  
                                                   l23998 10AC  
                                                   l25862 3D00  
                                                   l25790 3BD6  
                                                   l24888 71C8  
                                                   l25688 496C  
                                                   l27480 8FF6  
                                                   l27448 2DA2  
                                                   l27464 2E4C  
                                                   l27616 1B62  
                                                   l27560 1A22  
                                                   l27536 199E  
                                                   l25952 3E32  
                                                   l25936 3DEC  
                                                   l25698 499C  
                                                   l27458 2E2A  
                                                   l27394 2B10  
                                                   l27386 2ADC  
                                                   l27378 2AB8  
                                                   l27730 1DBE  
                                                   l27714 1D5E  
                                                   l27650 1C84  
                                                   l27634 1C42  
                                                   l27570 1A36  
                                                   l27554 19FA  
                                                   l27490 18C6  
                                                   l25946 3E0E  
                                                   l25890 3D5E  
                                                   l27724 1D8A  
                                                   l27660 1C96  
                                                   l27644 1C80  
                                                   l27628 1C16  
                                                   l27580 1A92  
                                                   l27484 188E  
                                                   l25980 3EB4  
                                                   l25876 3D3A  
                                                   l25868 3D1E  
                                                   l25796 3BEE  
                                                   l27734 1DE2  
                                                   l27726 1D8E  
                                                   l27718 1D80  
                                                   l27638 1C64  
                                                   l27558 1A1E  
                                                   l27486 189A  
                                                   l27912 212A  
                                                   l27832 2012  
                                                   l27816 1FB0  
                                                   l27752 1E3E  
                                                   l27744 1DF0  
                                                   l27736 1DE6  
                                                   l27656 1C8C  
                                                   l27568 1A2C  
                                                   l27488 18AA  
                                                   l27850 2020  
                                                   l27762 1E4C  
                                                   l27754 1E42  
                                                   l27674 1CC6  
                                                   l27586 1A9C  
                                                   l27578 1A8E  
                                                   l27498 18E8  
                                                   l25978 3EA0  
                                                   l27908 2108  
                                                   l27828 1FF0  
                                                   l27780 1EBC  
                                                   l27772 1EAE  
                                                   l27764 1E56  
                                                   l27748 1E1A  
                                                   l27692 1CF6  
                                                   l27596 1AFE  
                                                   l27588 1AA6  
                                                   l27924 213A  
                                                   l25996 3F00  
                                                   l27918 2136  
                                                   l27854 202A  
                                                   l27838 201C  
                                                   l27790 1F1E  
                                                   l27782 1EC6  
                                                   l27774 1EB2  
                                                   l27694 1CFA  
                                                   l27686 1CF2  
                                                   l27678 1CE8  
                                                   l27598 1B02  
                                                   l27880 2086  
                                                   l27872 207C  
                                                   l27792 1F22  
                                                   l27954 69DE  
                                                   l27868 205A  
                                                   l27964 69F4  
                                                   l27886 208A  
                                                   l27798 1F2C  
                                                   l27888 208E  
                                                   l27984 6AAC  
                                                   l27898 20F0  
                                                   l27994 6ACA  
                                                   l27978 6A82  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 8628  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 8B58  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 85A4  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 96BA  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 9A54  
                                            _zeroCrossing 0197  
                                         __end_of___lldiv 86AA  
                                                   _T1CLK 000FD2  
                                         ___awdiv@divisor 0016  
                                                   u30000 677E  
                                                   _T1CON 000FCF  
                                                   u30120 8CE2  
                                                   _T2CON 000FBD  
                                                   u30050 67CE  
                                                   u30400 71B0  
                                                   u23210 9E5C  
                                                   u30330 717C  
                                                   u30420 71BC  
                                                   u31300 8D86  
                                                   u30350 7188  
                                                   u24120 729C  
                                                   u25000 58A4  
                                                   u23410 7B62  
                                                   u30530 7224  
                                                   u32130 48BA  
                                                   u32050 484E  
                                                   u30620 7272  
                                                   u32220 492C  
                                                   u24220 93AE  
                                                   u32300 3A66  
                                                   _T2HLT 000FBE  
                                                   u23238 83B0  
                                                   u23430 7B9E  
                                                   u30630 727A  
                                                   u32230 4934  
                                                   u31510 54AA  
                                                   u25110 596C  
                                                   u25030 58E8  
                                                   u33110 440A  
                                                   u23239 83C2  
                                                   u25111 596A  
                                                   u23328 91FC  
                                                   u23440 7BAC  
                                                   u30640 7282  
                                                   u30560 723C  
                                                   u32080 4866  
                                                   u31600 54DE  
                                                   u33040 4376  
                                                   u23329 920E  
                                                   u30490 71F4  
                                                   u30650 9270  
                                                   u25050 58F8  
                                                   u32330 3ACA  
                                                   u23268 8868  
                                                   u23460 7BCA  
                                                   u26020 9236  
                                                   u32180 4900  
                                                   u31700 5598  
                                                   u31620 5500  
                                                   u31540 54BE  
                                                   u23700 8EE4  
                                                   u24180 7340  
                                                   u25060 5908  
                                                   u33220 4568  
                                                   u33060 43B0  
                                                   u23269 887A  
                                                   u30661 927E  
                                                   u23278 8E64  
                                                   u23470 7BDE  
                                                   u32270 4990  
                                                   u31470 5478  
                                                   u25310 8A98  
                                                   u25070 5910  
                                                   u24350 8566  
                                                   u32510 3C2A  
                                                   u23279 8E76  
                                                   u23288 9374  
                                                   u23480 7BEC  
                                                   u31720 55A2  
                                                   u31560 54CA  
                                                   u31480 5486  
                                                   u25160 59A6  
                                                   u23289 9386  
                                                   u33401 2C46  
                                                   u26210 63AE  
                                                   u31490 5496  
                                                   u23730 8F36  
                                                   u25330 8ABA  
                                                   u25250 5A2C  
                                                   u25170 59B6  
                                                   u33090 43E8  
                                                   u32530 3C62  
                                                   u31491 5494  
                                                   u33411 2CA6  
                                                   u34131 6A96  
                                                   u26220 63C0  
                                                   u31900 4750  
                                                   u31740 55AC  
                                                   u31580 54D4  
                                                   u25180 59BE  
                                                   u27020 5246  
                                                   u33260 45A6  
                                                   u32620 3CDC  
                                                   u33421 2CD8  
                                                   u33341 2916  
                                                   u33501 18DA  
                                                   u31830 46CE  
                                                   u24390 969C  
                                                   u25350 8BF2  
                                                   u25270 5A54  
                                                   u33431 2D0C  
                                                   u33351 2B36  
                                                   u34071 20E4  
                                                   u31920 476C  
                                                   u31840 46DC  
                                                   u31760 55D0  
                                                   u31680 558C  
                                                   u24560 5E56  
                                                   u27120 531A  
                                                   u27040 52A8  
                                                   u25520 3970  
                                                   u32800 3DFA  
                                                   u32640 3CEC  
                                                   u33441 2D3E  
                                                   u33361 2B68  
                                                   u23665 78F4  
                                                   u26170 6352  
                                                   u26090 75CE  
                                                   u31850 46EC  
                                                   u25610 4008  
                                                   u32570 3CAE  
                                                   u33451 2DEA  
                                                   u33371 2BAE  
                                                   u33531 1944  
                                                   u26180 636A  
                                                   u26500 6154  
                                                   u27060 52BC  
                                                   u25540 39A2  
                                                   u33461 2E1C  
                                                   u33381 2BE0  
                                                   u33701 1C34  
                                                   u33621 1AF2  
                                                   u23685 7964  
                                                   u24590 5EB4  
                                                   u25550 3F76  
                                                   u32750 3DB2  
                                                   u33391 2C14  
                                                   u32751 3DB0  
                                                   u33720 1C6E  
                                                   u24920 848C  
                                                   u27400 5B0E  
                                                   u27160 5374  
                                                   u28040 21FA  
                                                   u25560 3F7C  
                                                   u32920 3E7E  
                                                   u34177 89FA  
                                                   u33801 1D50  
                                                   u33481 18B8  
                                                   u33650 1B1A  
                                                   u26290 6036  
                                                   u23970 6ED0  
                                                   u26610 5DB8  
                                                   u27250 53EA  
                                                   u27090 52F6  
                                                   u34187 8A6E  
                                         __end_of___lwdiv 9266  
                                                   u28300 2456  
                                                   u25660 40C2  
                                                   u29100 1338  
                                                   u33661 1B4E  
                                                   u31990 47D8  
                                                   u28310 245E  
                                                   u28070 222C  
                                                   u25750 41A4  
                                                   u29110 133E  
                                                   u33911 1F12  
                                                   u33591 1A82  
                                                   u26720 88F8  
                                                   u27440 5B32  
                                                   u28320 2478  
                                                   u29200 1432  
                                                   u29120 1354  
                                                   u32960 3ECC  
                                                   u32880 3E60  
                                                   u28321 2476  
                                                   u29121 1352  
                                                   u28410 254C  
                                                   u25930 7CD0  
                                                   u29210 1438  
                                                   u24955 90AC  
                                                   u28411 254A  
                                                   u26740 9654  
                                                   u28420 255A  
                                                   u28260 23D6  
                                                   u25860 42A2  
                                                   u25780 41DE  
                                                   u29060 128C  
                                                   u26750 966A  
                                                   u27630 5C1E  
                                                   u27470 5B52  
                                                   u28350 24AE  
                                                   u25950 97CC  
                                                   u29070 12E8  
                                                   u32990 3EE4  
                                                   u29055 1276  
                                                   u26680 88C2  
                                                   u28600 26BC  
                                                   u28440 2594  
                                                   u29320 15E4  
                                                   u29080 12EE  
                                                   u33881 1EA2  
                                                   u29065 1288  
                                                   u28530 2650  
                                                   u28450 25AE  
                                                   u28370 24D2  
                                                   u29330 15EA  
                                                   u29250 14A6  
                                                   u28451 25AC  
                                                   u27820 4E06  
                                                   u27740 4CFA  
                                                   u28620 26EA  
                                                   u28540 2656  
                                                   u28380 24DA  
                                                   u29340 161E  
                                                   _T2TMR 000FBB  
                                                   u29341 161C  
                                                   u29245 1490  
                                                   u26790 824C  
                                                   u27590 5BEE  
                                                   u28630 2706  
                                                   u28550 267A  
                                                   u28470 25F2  
                                                   u28390 24F4  
                                                   u25990 865A  
                                                   u28631 2704  
                                                   u28551 2678  
                                                   u28471 25F0  
                                                   u28391 24F2  
                                                   u29255 14A2  
                                                   u26880 7E80  
                                                   u27920 4EB6  
                                                   u27840 4E12  
                                                   u28640 2714  
                                                   u28480 2600  
                                                   u29360 1634  
                                                   u27850 4E2A  
                                                   u27770 4DC0  
                                                   u27690 5C68  
                                                   u26970 5208  
                                                   u28730 283C  
                                                   u29450 16EA  
                                                   u29370 1648  
                                                   u29290 1538  
                                                   _T2RST 000FC0  
                                                   u27691 5C66  
                                                   u29451 16E8  
                                                   u28580 26B0  
                                                   u29285 1522  
                                                   u29710 6BC0  
                                                   u29630 9E16  
                                                   u27950 4ED6  
                                                   u27790 4DD4  
                                                   u29390 1662  
                                                   u29375 1644  
                                                   u29295 1534  
                                                   u29800 6C76  
                                                   u27880 4E70  
                                                   u28760 2856  
                                                   u28680 2756  
                                                   u28920 105A  
                                                   i2l106 97B6  
                                                   u28770 2872  
                                                   u28690 275C  
                                                   u28771 2870  
                                                   u29740 6BFA  
                                                   u28780 2880  
                                                   u29655 9C44  
                                                   u29840 901C  
                                                   u29656 9C46  
                                                   u29850 904E  
                                                   u29770 6C4E  
                                                   u29690 6BA8  
                                                   u29780 6C5C  
                                                   u29960 6736  
                                                   u29970 6744  
                                                   u29990 676A  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 9AA6  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 96F2  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 8EFA  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 978A  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 9B3E  
                                        __end_of_TMR1_ISR 9644  
                                        __end_of_TMR2_ISR 6DE2  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 0191  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 9644  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 019B  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 9544  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 78A4  
                                         __end_of_sm_init 9114  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 3F5A  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9FA0  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9F9E  
                                         _TMR1_WriteTimer 9C64  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 739A  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 7D74  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 87A8  
                                            __end_of_main 6B20  
                                              _ReadSerial 8B58  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 82FA  
                                          _refreshCurrent 9434  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 989E  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 849A  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 9E76  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 6344  
                              _validateRemoteSerialNumber 61A8  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 889E  
                                      __end_of_I2C1_DO_TX 8412  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 9354  
                  __end_of_SetSegmentValueIntermitentMain 9DE4  
                          _SetSegmentValueIntermitentMain 9DD0  
                                      ReadSerial@position 002F  
                                      __end_of_I2C1_Close 9BEE  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 6678  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 7BFA  
                                                  i2l2024 65FE  
                                                  i2l1147 9C76  
                                                  i2l2140 851E  
                                                  i2l2133 84E8  
                                                  i2l2222 582E  
                                                  i2l2240 7C94  
                                                  i2l2128 84CA  
                                                  i2l1266 6CEC  
                                                  i2l2323 8980  
                                                  i2l1620 50FC  
                                                  i2l1277 6D76  
                                                  i2l2191 566A  
                                                  i2l2328 898A  
                                                  i2l2195 5750  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 898E  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 76AE  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 81DE  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 9726  
                                 __end_ofi2_GetMotorPower 7CC0  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00EC  
                    __end_of_sm_execute_menuConfiguration 188A  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 8412  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 8E40  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 9A54  
                    __end_of_TMR1_DefaultInterruptHandler 9F9C  
                            _TMR1_DefaultInterruptHandler 9F9A  
                                  __end_of_refreshCurrent 947A  
                                           ?_read_package 0011  
                                                  ___lmul 9114  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 9AF2  
                                  __end_of_refreshSegment 8520  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 49AA  
                             __end_of_keeloqDecryptPacket 5E40  
                             setValueToEdit@posindex_6979 00E0  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 94BE  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7DE4  
                                                  clear_1 7DF0  
                                                  clear_2 7DFC  
                                                  clear_3 7E08  
                                                  clear_4 7E14  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 28E6  
                              _sm_execute_ControlLearning 21CE  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 92B6  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 9E46  
                                          _PMD_Initialize 9C48  
                                              _StateTRIAC 0195  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8FB2  
                                    __end_of_ControlMotor 5640  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4F2C  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9D1A  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 9C80  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9EF4  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9C9A  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0012  
                                       _SYSTEM_Initialize 97EC  
                              __end_of_actionZone_Opening 53F6  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7E1A  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E1  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 3516  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 9A7E  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 9C10  
                                 _rdBlkRegCompleteHandler 95C4  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 9D32  
                                            __pidataBANK0 9F96  
                                            __pidataBANK1 9FA0  
                                            __pidataBANK2 9F34  
                                            __pidataBANK3 9B3E  
                                     ??_SYSTEM_Initialize 0014  
                                             ?_ReadSerial 002E  
                        __end_of_I2C1_MasterEnableRestart 9F8A  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 9C64  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 9434  
                                          ??_eusartparser 00E2  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 728A  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 9C9A  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 80B4  
                                   __end_of_I2C1_DO_RESET 9ED0  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 9D90  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0015  
                               __end_of_SYSTEM_Initialize 981A  
                                     __end_of_ShowVersion 8DDE  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 3A48  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9EF4  
                       _EUSART1_TxDefaultInterruptHandler 02EB  
                                            _GetOpenOrder 5E40  
                                    __end_of_InitSoftStop 93EC  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 99A6  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 77AA  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 997A  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 8EFA  
                                   _rd1RegCompleteHandler 99A6  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 9F0C  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 99D2  
                         __end_of_EUSART1_SetErrorHandler 9EC6  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9E94  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 6DE2  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 9306  
                                         _I2C1_MasterOpen 9D4A  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9F82  
                                         _I2C1_Initialize 9DE4  
                                     __end_of_I2C1_Poller 9E2A  
                                __end_of_setFlashLigth_ON 9680  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 9C2C  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 6998  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BB  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 018D  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 9EBC  
                          _EUSART1_SetFramingErrorHandler 9EB2  
                                    _refreshADCZeroOffset 75B0  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 889E  
                                                 i2l15014 84EC  
                                                 i2l15024 851A  
                                                 i2l13178 9C0C  
                                                 i2l14602 8976  
                                                 i2l17004 6D38  
                                                 i2l17014 6D5A  
                                                 i2l14800 504A  
                                                 i2l14802 505A  
                                                 i2l14554 7C4A  
                                                 i2l14546 7C0E  
                                                 i2l17042 6DC2  
                                                 i2l14804 5060  
                                                 i2l14556 7C56  
                                                 i2l14900 56C0  
                                                 i2l17036 6DAA  
                                                 i2l17028 6D8E  
                                                 i2l14822 50BC  
                                                 i2l14814 5094  
                                                 i2l14750 4F3E  
                                                 i2l14566 7C84  
                                                 i2l14910 56EA  
                                                 i2l14840 5114  
                                                 i2l14760 4F6C  
                                                 i2l14576 7CB6  
                                                 i2l14850 513A  
                                                 i2l14834 5106  
                                                 i2l14770 4FA0  
                                                 i2l14754 4F4E  
                                                 i2l14922 5724  
                                                 i2l14930 5762  
                                                 i2l14780 4FCC  
                                                 i2l14860 516A  
                                                 i2l14596 895A  
                                                 i2l14846 512A  
                                                 i2l14758 4F64  
                                                 i2l14856 5152  
                                                 i2l14786 4FF2  
                                                 i2l14954 57D4  
                                                 i2l14892 569C  
                                                 i2l14798 503A  
                                                 i2l14966 5812  
                                                 i2l14894 56A6  
                                                 i2l14878 5660  
                                                 i2l14990 917A  
                                                 i2l14978 584E  
                                                 i2l16908 97B0  
                                                 i2l16928 80AE  
                                                 i2l16970 6CB0  
                                                 i2l16994 6D0E  
                                                 i2l16978 6CC4  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 9E54  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 85A4  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9E2A  
                                              _auxCounter 00FC  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 9F46  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 8D78  
                                            _classic_data 0290  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 7A68  
                                  eusartparser@relcounter 00F7  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 019D  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 994E  
          _rd1RegCompleteHandler@i2c1_master_example$F500 9922  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 9922  
          _rd2RegCompleteHandler@i2c1_master_example$F511 98F6  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 9A2A  
          _wr2RegCompleteHandler@i2c1_master_example$F523 99FE  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 98F6  
                               __end_of_I2C1_DO_SEND_STOP 9F14  
          _wr1RegCompleteHandler@i2c1_master_example$F517 98CA  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 95C4  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 9584  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 916A  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 9846  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3F5A  
                              __end_of_clearLearningValue 8824  
                                                 _NextHop 0187  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 3516  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 9E6C  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 9306  
                                                 ___awdiv 8520  
                                                 ___lbdiv 9680  
                                                 ___lbmod 9A2A  
                                                 ___lldiv 8628  
                                              _readInputs 74A8  
                                         _controlVelocity 5862  
                                                 ___lwdiv 9214  
                                           _OpenFullOrder 9ACC  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 7166  
                           _setPositionInvertionInClosing 703E  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9E0A  
                                          getHopCode@data 0016  
                                                 _difTime 0194  
                                                 __pcinit 7D74  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 9F40  
                                    __end_of_init_package 978A  
                                                 __ptext0 6998  
                                                 __ptext1 3A48  
                                                 __ptext2 0F22  
                                                 __ptext3 3516  
                                                 __ptext4 49AA  
                                                 __ptext5 9C80  
                                                 __ptext6 3F5A  
                                                 __ptext7 9F3A  
                                                 __ptext8 9306  
                                                 __ptext9 7CC0  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A0  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 9F86  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 9E60  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 7A68  
                           _setPositionInvertionInOpening 798C  
                                                 _lastKey 0199  
                                              _readbutton 8CA4  
                                   _OSCILLATOR_Initialize 9D90  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 8D78  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9CB4  
                               __end_of_I2C1_MasterSetIrq 9F4C  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8E9E  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 826E  
                                      _EUSART1_Initialize 872A  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 77AA  
                                                 _sm_init 90BE  
                                          _BufferRF_12BIT 018B  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 92B6  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 8BC8  
                                    _zeroCrossingWaitTime 02F8  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 9F2C  
                                    end_of_initialization 7E1A  
                              __end_of_I2C1_MasterSendAck 9F52  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 9F58  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 9F7A  
                             _EUSART1_OverrunErrorHandler 02E5  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8A04  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 9E38  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8DDE  
                            __end_of_sm_get_current_state 9E0A  
                                               i2u1511_40 5788  
                                               i2u1512_40 5796  
                                               i2u1504_40 5718  
                                               i2u1521_40 57FA  
                                               i2u1505_40 571E  
                                               i2u2304_48 003E  
                                               i2u1450_40 7C64  
                                               i2u1451_40 7C72  
                                               i2u1515_40 57B4  
                                               i2u1371_40 9A6E  
                                               i2u1524_40 581E  
                                               i2u1540_40 65F2  
                                               i2u2307_48 0056  
                                               i2u1532_45 9192  
                                               i2u1453_40 7C90  
                                               i2u1525_40 5826  
                                               i2u1517_40 57CA  
                                               i2u1541_40 6666  
                                               i2u1454_40 7CA4  
                                               i2u1462_40 8970  
                                               i2u1534_40 84AA  
                                               i2u1455_40 7CB2  
                                               i2u1527_40 5846  
                            __end_of_I2C1_DO_SEND_RESTART 9F1C  
                                               i2u1448_40 7C28  
                                               i2u1536_40 84FC  
                                               i2u1474_40 4FE0  
                                               i2u1458_40 893A  
                                    __end_of_eusartparser 21CE  
                                               i2u1476_40 500A  
                                               i2u1492_40 565A  
                                         _WWDT_TimerClear 9C2C  
                                               i2u1477_40 501A  
                                               i2u1469_40 4F64  
                                 __end_of_I2C1_MasterOpen 9D62  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1478_40 502A  
                                               i2u1902_48 8044  
                                               i2u1487_40 5128  
                                               i2u1902_49 8056  
                                               i2u1904_48 8070  
                                               i2u1912_48 9632  
                                               i2u1921_40 6D00  
                                   __end_of_ControlLights 49AA  
                                               i2u1904_49 8082  
                                               i2u1906_48 809A  
                                               i2u1499_40 56BA  
                                               i2u3419_47 9DB0  
                                               i2u1924_40 6D24  
                                               i2u1908_48 9B2C  
                                 __end_of_I2C1_MasterStop 9F86  
                                 __end_of_I2C1_Initialize 9DF8  
                                               i2u1936_48 6DD0  
                                         ___lldiv@divisor 0014  
                                   __end_of_ControlInputs 728A  
                   __end_of_EUSART1_SetRxInterruptHandler 9EA8  
                           _EUSART1_SetRxInterruptHandler 9E9E  
                                             _I2C1_Poller 9E1A  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 9F6A  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9F92  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 53F6  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 9F52  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 9D4A  
                             _I2C1_SetAddressNackCallback 9D32  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 78A4  
                                              _sm_restart 947A  
                        __end_of_ADCC_GetSingleConversion 9DBC  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D7  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9F24  
                              _I2C1_DO_SEND_RESTART_WRITE 9F1C  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 9E8A  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 9604  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 76AE  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 9E6C  
                                     _ControlCounterMoves 900C  
                            _controlLearning_stateMachine 02B0  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7380 00EA  
                                      eusartparser@i_7381 00EB  
                                      eusartparser@i_7373 00E9  
                                      eusartparser@i_7382 00EF  
                                      eusartparser@i_7374 00ED  
                                      eusartparser@i_7383 00F0  
                                      eusartparser@i_7375 00EE  
                                      eusartparser@i_7384 00F4  
                                      eusartparser@i_7376 00F1  
                                      eusartparser@i_7385 00F5  
                                      eusartparser@i_7377 00F2  
                                      eusartparser@i_7386 00F6  
                                      eusartparser@i_7378 00F3  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 9A7E  
                                 __end_of_WWDT_Initialize 9E76  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 0185  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 93EC  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018F  
                       __end_of_GetSecurityStateInClosing 7F74  
                                      eusartparser@serial 00F8  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 9758  
                                       _controlLearnDigit 97BC  
                                 __end_of_controlVelocity 5A80  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01FD  
                                      _actionZone_Closing 4CA0  
                                    __end_of_RemoveSerial 872A  
                                          __end_of_HopCHK 849A  
                                      __end_of_CloseOrder 9ACC  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 9C80  
                               _ControlDecelarationFactor 9D02  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 028E  
                       __end_of_GetSecurityStateInOpening 801A  
                                       setRGB_ON@RGBLigth 0015  
                                            ??_ReadSerial 0030  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 9F72  
                                      _actionZone_Opening 51A2  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 9F9A  
                            _TMR2_DefaultInterruptHandler 9F98  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 916A  
                                   __end_of_LoadManufCode 9BAA  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9B18  
                                          _I2C1_DO_RX_ACK 9F04  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 8D10  
                                            _InitSoftStop 93A2  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 8916  
                                          __end_of_memcpy 9502  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 8AE8  
                            __end_of_getCurrentComparator 64DE  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 74A8  
                                           _saveNewSerial 8AE8  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9F82  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 9F34  
                                       _read_eusartparser 28E6  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 7D74  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 51A2  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 8A78  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 9AA6  
                                 __end_of_WWDT_TimerClear 9C48  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 9584  
                                 __end_of_WWDT_SoftEnable 9F6E  
                                      __end_of_ReadSerial 8BC8  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 9726  
                                               _ReqResync 9D7A  
                               __end_of_controlLearnDigit 97EC  
                                     ??_read_eusartparser 001A  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 433C  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7CC0  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 9F0C  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0198  
                                          _VerifyFollowMe 9B64  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 9BEE  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FC  
                                             __pdataBANK1 01FF  
                                             __pdataBANK2 02F4  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 5640  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2F72  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9DA6  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 8F56  
                                               _StopOrder 9C10  
                                    _sm_get_current_state 9DF8  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9F14  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02E9  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                           __pcstackBANK2 02ED  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 680E  
                                    ReadSerial@tempSerial 002E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9EE4  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9EDA  
                                           _GetMotorPower 7B34  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7D74  
                                            _init_package 9758  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E1  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DB  
                                   _rd2RegCompleteHandler 997A  
                                        _InitWalkAutoTime 9DBC  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 9CCE  
                             __end_of_SetSegmentValueMain 9CB4  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 80B4  
                                  __end_of_VerifyFollowMe 9B88  
                                   _wr2RegCompleteHandler 994E  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 9266  
                                          _I2C1_MasterFsm 91C0  
                              __end_of_checkNVM_VarSystem 61A8  
                        __end_of_TMR1_SetInterruptHandler 9E8A  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 80B4  
                                               __ptext101 9D90  
                                                ?___lbdiv 0010  
                                               __ptext110 92B6  
                                               __ptext102 9F6E  
                                               __ptext111 9E0A  
                                               __ptext103 9DE4  
                                               __ptext200 9F9A  
                                               __ptext120 9434  
                                               __ptext112 53F6  
                                               __ptext104 872A  
                                               __ptext201 9B18  
                                               __ptext121 77AA  
                                               __ptext113 889E  
                                               __ptext105 9E94  
                                               __ptext210 0000  
                                               __ptext202 4F2C  
                                               __ptext130 96BA  
                                               __ptext122 82FA  
                                               __ptext114 4686  
                                               __ptext106 9E9E  
                                               __ptext203 9F9C  
                                               __ptext131 8A04  
                                               __ptext123 9A7E  
                                               __ptext115 81DE  
                                               __ptext107 9EA8  
                                               __ptext204 978A  
                                               __ptext140 91C0  
                                               __ptext132 94BE  
                                               __ptext124 75B0  
                                               __ptext116 9E2A  
                                               __ptext108 9EB2  
                                               __ptext205 801A  
                                               __ptext141 9354  
                                               __ptext133 9D32  
                                               __ptext125 9214  
                                               __ptext117 9644  
                                               __ptext109 9EBC  
                                               __ptext206 9F5E  
                                               __ptext150 9ED0  
                                               __ptext142 9EC6  
                                               __ptext134 85A4  
                                               __ptext126 6344  
                                               __ptext118 7166  
                                               __ptext207 9F9E  
                                               __ptext151 8824  
                                               __ptext143 9EF4  
                                               __ptext135 9D4A  
                                               __ptext127 9AF2  
                                               __ptext119 6B20  
                                               __ptext208 9F64  
                                               __ptext160 9F4C  
                                               __ptext152 8386  
                                               __ptext144 9EFC  
                                               __ptext136 9EE4  
                                               __ptext128 7B34  
                                               __ptext209 9BEE  
                                               __ptext161 9F72  
                                               __ptext153 9E38  
                                               __ptext145 9F04  
                                               __ptext137 989E  
                                               __ptext129 900C  
                                               __ptext170 95C4  
                                               __ptext162 9F52  
                                               __ptext154 9E46  
                                               __ptext146 9F0C  
                                               __ptext138 9E1A  
                                               __ptext171 994E  
                                               __ptext163 9F76  
                                               __ptext155 9EDA  
                                               __ptext147 9F14  
                                               __ptext139 9EEC  
                                               __ptext180 9F86  
                                               __ptext172 997A  
                                               __ptext164 9F7A  
                                               __ptext156 8E40  
                                               __ptext148 9F1C  
                                               __ptext181 9F8A  
                                               __ptext173 99A6  
                                               __ptext165 9F7E  
                                               __ptext157 9F46  
                                               __ptext149 9F24  
                                               __ptext190 64DE  
                                               __ptext182 9BCC  
                                               __ptext174 99D2  
                                               __ptext166 9584  
                                               __ptext158 9E54  
                                               __ptext191 9A54  
                                               __ptext183 9F8E  
                                               __ptext175 99FE  
                                               __ptext167 98CA  
                                               __ptext159 9F2C  
                                               __ptext192 9F98  
                                               __ptext184 9F92  
                                               __ptext176 9D62  
                                               __ptext168 98F6  
                                               __ptext193 916A  
                                               __ptext185 9F58  
                                               __ptext177 8C36  
                                               __ptext169 9922  
                                               __ptext194 9DA6  
                                               __ptext178 9CE8  
                                               __ptext195 9604  
                                               __ptext187 6C94  
                                               __ptext179 9F82  
                                               __ptext196 5640  
                                               __ptext188 849A  
                                               __ptext197 8916  
                                               __ptext189 9E60  
                                               __ptext198 7BFA  
                                               __ptext199 9C64  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 5862  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0014  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0012  
                                 _I2C1_MasterWaitForEvent 9EEC  
                                        _I2C1_MasterClose 9F92  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9CE8  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 9F8A  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9EE4  
                                      _clearLearningValue 87A8  
                                      _write_eusartparser 2F72  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 019A  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 9F64  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 9F5E  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 898E  
                                            _eusartparser 188A  
                                    _EUSART1_ErrorHandler 02E3  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 9EBC  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 9F7E  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0015  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 680E  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 81DE  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 9F6E  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 8C36  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 8824  
                                              _I2C1_DO_TX 8386  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 6344  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FF  
                                     _DecryptPacket_12BIT 826E  
                                              _I2C1_Close 9BCC  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 9214  
                            __end_of_I2C1_MasterGetRxData 9F76  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 9E60  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0189  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 9F4C  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 8386  
                               _I2C1_DO_SEND_RESTART_READ 9F24  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 4CA0  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9B18  
                                                _TMR1_ISR 9604  
                                                _TMR2_ISR 6C94  
                                           _getKeyPressed 9D1A  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9D02  
                                               _temppower 0193  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9D7A  
                            _I2C1_SetDataCompleteCallback 9D62  
                                      _I2C1_MasterStartRx 9F76  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 9F40  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8A04  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 96F2  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019F  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 93A2  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7E24  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 9CCE  
                                            _RemoveSerial 86AA  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 9E46  
                                       _actionZone_Opened 5A80  
                                           _I2C1_DO_RESET 9EC6  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C6  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 7D88  
                                               copy_data1 7DA8  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 0192  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 6F10  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 8A78  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 98CA  
                                            _NormalKeyGen 739A  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9E9E  
                           _EUSART1_SetTxInterruptHandler 9E94  
                                           _sm_send_event 8E9E  
                                     _keeloqDecryptPacket 5C6E  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01F2  
                                   _I2C1_MasterDisableIrq 9F8E  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 433C  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 64DE  
                                _TMR1_SetInterruptHandler 9E80  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 7ECE  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 7ECE  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DD  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 9F6A  
                             _EUSART1_DefaultErrorHandler 9F64  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9E1A  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 5C6E  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7F74  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0014  
                                                __ptext10 9A2A  
                                                __ptext11 8520  
                                                __ptext20 90BE  
                                                __ptext12 9C9A  
                                                __ptext21 947A  
                                                __ptext13 9F40  
                                                __ptext30 5A80  
                                                __ptext22 87A8  
                                                __ptext14 97BC  
                                                __ptext31 9B64  
                                                __ptext23 8DDE  
                                                __ptext15 76AE  
                                                __ptext40 8A78  
                                                __ptext32 9AA6  
                                                __ptext24 51A2  
                                                __ptext16 8628  
                                                __ptext41 9ACC  
                                                __ptext33 4CA0  
                                                __ptext25 798C  
                                                __ptext17 433C  
                                                __ptext50 5E40  
                                                __ptext42 9CB4  
                                                __ptext34 703E  
                                                __ptext26 5862  
                                                __ptext18 21CE  
                                                __ptext51 9680  
                                                __ptext43 8BC8  
                                                __ptext35 78A4  
                                                __ptext27 728A  
                                                __ptext19 8D10  
                                                __ptext60 739A  
                                                __ptext52 9DD0  
                                                __ptext44 8E9E  
                                                __ptext36 9114  
                                                __ptext28 93A2  
                                                __ptext61 9B88  
                                                __ptext53 8CA4  
                                                __ptext45 9DF8  
                                                __ptext37 9C10  
                                                __ptext29 9D02  
                                                __ptext70 6008  
                                                __ptext62 7A68  
                                                __ptext54 9266  
                                                __ptext46 8EFA  
                                                __ptext38 7ECE  
                                                __ptext71 680E  
                                                __ptext63 8412  
                                                __ptext55 93EC  
                                                __ptext47 9DBC  
                                                __ptext39 7E24  
                                                __ptext80 9544  
                                                __ptext72 8F56  
                                                __ptext64 6DE2  
                                                __ptext56 6678  
                                                __ptext48 7F74  
                                                __ptext81 8FB2  
                                                __ptext73 9D1A  
                                                __ptext65 9D7A  
                                                __ptext57 5C6E  
                                                __ptext49 981A  
                                                __ptext90 9CCE  
                                                __ptext82 9758  
                                                __ptext74 188A  
                                                __ptext66 9726  
                                                __ptext58 96F2  
                                                __ptext91 97EC  
                                                __ptext83 814C  
                                                __ptext75 2F72  
                                                __ptext67 826E  
                                                __ptext59 9066  
                                                __ptext92 9E6C  
                                                __ptext84 86AA  
                                                __ptext76 61A8  
                                                __ptext68 74A8  
                                                __ptext93 9872  
                                                __ptext85 8B58  
                                                __ptext77 8AE8  
                                                __ptext69 6F10  
                                                __ptext94 9E76  
                                                __ptext86 898E  
                                                __ptext78 28E6  
                                                __ptext95 9502  
                                                __ptext87 9C2C  
                                                __ptext79 9846  
                                                __ptext96 9E80  
                                                __ptext88 9F6A  
                                                __ptext97 9BAA  
                                                __ptext89 8D78  
                                                __ptext98 9E8A  
                                                __ptext99 9C48  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E7  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
                                                _learn_st 0060  
               ??_wr1RegCompleteHandler@pic18f46k40$F7850 001B  
               ??_wr2RegCompleteHandler@pic18f46k40$F7870 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7862 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7864 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7856 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7848 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7858 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7874 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7876 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7868 0019  
                                      __end_of_readInputs 75B0  
                                _I2C1_CallbackReturnReset 9F7A  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9F9E  
                            _TMR0_DefaultInterruptHandler 9F9C  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 9F5E  
                            __end_of_I2C1_DO_RX_NACK_STOP 9F04  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 6B20  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 8D10  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 9F46  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 9846  
                              _SetSegmentValueIntermitent 981A  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 9EFC  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 6F10  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9CE8  
                           __end_of_I2C1_DO_SEND_ADR_READ 9E54  
                             _EUSART1_FramingErrorHandler 02E7  
                                            _I2C1_DO_IDLE 9EDA  
                                     _EUSART1_Receive_ISR 801A  
                                            _I2C1_DO_RCEN 9ED0  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 9F3A  
                             __end_of_I2C1_MasterSendNack 9F58  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 798C  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0196  
                                __end_of_InitWalkAutoTime 9DD0  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 0190  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 9F72  
                                   _I2C1_MasterSendTxData 9F2C  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 4686  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 9066  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9F96  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 8F56  
                                 readRFButtons@typeRemote 019C  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 94BE  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 6C94  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 9F8E  
                                __end_of_I2C1_MasterWrite 9EEC  
                                   __end_of_write_package 9872  
                                             _tempCounter 02F4  
                  __end_of_EUSART1_SetOverrunErrorHandler 9EB2  
                          _EUSART1_SetOverrunErrorHandler 9EA8  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 9F7E  
                            __end_of_EUSART1_Transmit_ISR 97BC  
                                          _confirmpackage 8FB2  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 4686  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 7166  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 9354  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 703E  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 90BE  
                           _keeloq_classic_decrypt_packet 9066  
                                   __end_of_OpenFullOrder 9AF2  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019E  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 814C  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8CA4  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 989E  
                                         _TMR0_Initialize 9BAA  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 6008  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 8C36  
                                            _sumEnergyADC 82FA  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 814C  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 99D2  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 8E40  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 900C  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 99FE  
                                   _TMR2_InterruptHandler 02DB  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 9502  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 3A48  
