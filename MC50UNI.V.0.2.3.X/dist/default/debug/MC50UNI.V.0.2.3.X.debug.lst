

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 12:27:19 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=2
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1,inline
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,inline
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1,inline
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1,inline
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1,inline
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   236                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   237                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   238                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   239  0000                     
   240                           ; Version 2.36
   241                           ; Generated 28/01/2022 GMT
   242                           ; 
   243                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   244                           ; All rights reserved.
   245                           ; 
   246                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   247                           ; 
   248                           ; Redistribution and use in source and binary forms, with or without modification, are
   249                           ; permitted provided that the following conditions are met:
   250                           ; 
   251                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   252                           ;        conditions and the following disclaimer.
   253                           ; 
   254                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   255                           ;        of conditions and the following disclaimer in the documentation and/or other
   256                           ;        materials provided with the distribution. Publication is not required when
   257                           ;        this file is used in an embedded application.
   258                           ; 
   259                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   260                           ;        software without specific prior written permission.
   261                           ; 
   262                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   263                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   264                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   265                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   266                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   267                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   268                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   269                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   270                           ; 
   271                           ; 
   272                           ; Code-generator required, PIC18F46K40 Definitions
   273                           ; 
   274                           ; SFR Addresses
   275  0000                     
   276                           	psect	idataBANK0
   277  009518                     __pidataBANK0:
   278                           	callstack 0
   279                           
   280                           ;initializer for _auxCounter
   281  009518  03E8               	dw	1000
   282                           
   283                           	psect	idataBANK1
   284  0094E6                     __pidataBANK1:
   285                           	callstack 0
   286                           
   287                           ;initializer for _tempCounter
   288  0094E6  3DDD               	dw	15837
   289  0094E8  000F               	dw	15
   290                           
   291                           ;initializer for _firstselectflag
   292  0094EA  01                 	db	1
   293                           
   294                           	psect	idataBANK2
   295  00951A                     __pidataBANK2:
   296                           	callstack 0
   297                           
   298                           ;initializer for _zeroCrossingWaitTime
   299  00951A  19                 	db	25
   300  00951B  19                 	db	25
   301                           
   302                           	psect	idataBANK3
   303  0090BE                     __pidataBANK3:
   304                           	callstack 0
   305                           
   306                           ;initializer for _DispTable
   307  0090BE  6F                 	db	111
   308  0090BF  21                 	db	33
   309  0090C0  76                 	db	118
   310  0090C1  73                 	db	115
   311  0090C2  39                 	db	57
   312  0090C3  5B                 	db	91
   313  0090C4  5F                 	db	95
   314  0090C5  61                 	db	97
   315  0090C6  7F                 	db	127
   316  0090C7  7B                 	db	123
   317  0090C8  7D                 	db	125
   318  0090C9  7F                 	db	127
   319  0090CA  4E                 	db	78
   320  0090CB  37                 	db	55
   321  0090CC  5E                 	db	94
   322  0090CD  5C                 	db	92
   323  0090CE  7C                 	db	124
   324  0090CF  3D                 	db	61
   325  0090D0  0E                 	db	14
   326  0090D1  2F                 	db	47
   327  0090D2  14                 	db	20
   328  0090D3  1E                 	db	30
   329  0090D4  07                 	db	7
   330  0090D5  45                 	db	69
   331  0090D6  10                 	db	16
   332  0090D7  0C                 	db	12
   333  0090D8  40                 	db	64
   334  0090D9  20                 	db	32
   335  0090DA  01                 	db	1
   336  0090DB  02                 	db	2
   337  0090DC  04                 	db	4
   338  0090DD  08                 	db	8
   339  0090DE  00                 	db	0
   340  0090DF  3B                 	db	59
   341  0090E0  1F                 	db	31
   342  0090E1  16                 	db	22
   343  0090E2  17                 	db	23
   344                           
   345                           	psect	smallconst
   346  000F00                     __psmallconst:
   347                           	callstack 0
   348  000F00  00                 	db	0
   349  000F01                     _i2c1_fsmStateTable:
   350                           	callstack 0
   351  000F01  5C                 	db	low _I2C1_DO_IDLE
   352  000F02  94                 	db	high _I2C1_DO_IDLE
   353  000F03  C8                 	db	low _I2C1_DO_SEND_ADR_READ
   354  000F04  93                 	db	high _I2C1_DO_SEND_ADR_READ
   355  000F05  BA                 	db	low _I2C1_DO_SEND_ADR_WRITE
   356  000F06  93                 	db	high _I2C1_DO_SEND_ADR_WRITE
   357  000F07  86                 	db	low _I2C1_DO_TX
   358  000F08  79                 	db	high _I2C1_DO_TX
   359  000F09  26                 	db	low _I2C1_DO_RX
   360  000F0A  7E                 	db	high _I2C1_DO_RX
   361  000F0B  52                 	db	low _I2C1_DO_RCEN
   362  000F0C  94                 	db	high _I2C1_DO_RCEN
   363  000F0D  D2                 	db	low _I2C1_DO_TX_EMPTY
   364  000F0E  83                 	db	high _I2C1_DO_TX_EMPTY
   365  000F0F  A6                 	db	low _I2C1_DO_SEND_RESTART_READ
   366  000F10  94                 	db	high _I2C1_DO_SEND_RESTART_READ
   367  000F11  9E                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   368  000F12  94                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   369  000F13  96                 	db	low _I2C1_DO_SEND_RESTART
   370  000F14  94                 	db	high _I2C1_DO_SEND_RESTART
   371  000F15  8E                 	db	low _I2C1_DO_SEND_STOP
   372  000F16  94                 	db	high _I2C1_DO_SEND_STOP
   373  000F17  86                 	db	low _I2C1_DO_RX_ACK
   374  000F18  94                 	db	high _I2C1_DO_RX_ACK
   375  000F19  7E                 	db	low _I2C1_DO_RX_NACK_STOP
   376  000F1A  94                 	db	high _I2C1_DO_RX_NACK_STOP
   377  000F1B  76                 	db	low _I2C1_DO_RX_NACK_RESTART
   378  000F1C  94                 	db	high _I2C1_DO_RX_NACK_RESTART
   379  000F1D  48                 	db	low _I2C1_DO_RESET
   380  000F1E  94                 	db	high _I2C1_DO_RESET
   381  000F1F  DA                 	db	low _I2C1_DO_ADDRESS_NACK
   382  000F20  88                 	db	high _I2C1_DO_ADDRESS_NACK
   383  000F21                     __end_of_i2c1_fsmStateTable:
   384                           	callstack 0
   385  0000                     _T2CON	set	4029
   386  0000                     _T1CON	set	4047
   387  0000                     _T1CLK	set	4050
   388  0000                     _T1GATE	set	4049
   389  0000                     _T0CON0	set	4053
   390  0000                     _INLVLD	set	3874
   391  0000                     _SLRCOND	set	3875
   392  0000                     _ODCOND	set	3876
   393  0000                     _WPUD	set	3877
   394  0000                     _TRISD	set	3979
   395  0000                     _TRISC	set	3978
   396  0000                     _TRISB	set	3977
   397  0000                     _TRISA	set	3976
   398  0000                     _TRISE	set	3980
   399  0000                     _LATC	set	3973
   400  0000                     _LATB	set	3972
   401  0000                     _OSCTUNE	set	3805
   402  0000                     _OSCFRQ	set	3806
   403  0000                     _ADERRL	set	3950
   404  0000                     _ADERRH	set	3951
   405  0000                     _ADPREVL	set	3937
   406  0000                     _ADPREVH	set	3938
   407  0000                     _ADFLTRL	set	3954
   408  0000                     _ADFLTRH	set	3955
   409  0000                     _ADACCL	set	3952
   410  0000                     _ADACCH	set	3953
   411  0000                     _ADCNT	set	3943
   412  0000                     _ADRESL	set	3939
   413  0000                     _ADRESH	set	3940
   414  0000                     _ADACQ	set	3932
   415  0000                     _ADCON0	set	3936
   416  0000                     _ADCLK	set	3927
   417  0000                     _ADSTAT	set	3941
   418  0000                     _ADCON3	set	3931
   419  0000                     _ADCON2	set	3930
   420  0000                     _ADPRE	set	3934
   421  0000                     _ADSTPTH	set	3945
   422  0000                     _ADUTHH	set	3949
   423  0000                     _ADUTHL	set	3948
   424  0000                     _ADLTHH	set	3947
   425  0000                     _SP1BRGH	set	3996
   426  0000                     _TX1STA	set	3998
   427  000F21  00                 	db	0	; dummy byte at the end
   428  0000                     
   429                           	psect	nvBANK1
   430  0001FE                     __pnvBANK1:
   431                           	callstack 0
   432  0001FE                     _eusart1TxBufferRemaining:
   433                           	callstack 0
   434  0001FE                     	ds	1
   435                           
   436                           	psect	nvBANK2
   437  0002DD                     __pnvBANK2:
   438                           	callstack 0
   439  0002DD                     _TMR2_InterruptHandler:
   440                           	callstack 0
   441  0002DD                     	ds	2
   442  0002DF                     _TMR1_InterruptHandler:
   443                           	callstack 0
   444  0002DF                     	ds	2
   445  0002E1                     _timer1ReloadVal:
   446                           	callstack 0
   447  0002E1                     	ds	2
   448  0002E3                     _TMR0_InterruptHandler:
   449                           	callstack 0
   450  0002E3                     	ds	2
   451  0002E5                     _EUSART1_ErrorHandler:
   452                           	callstack 0
   453  0002E5                     	ds	2
   454  0002E7                     _EUSART1_OverrunErrorHandler:
   455                           	callstack 0
   456  0002E7                     	ds	2
   457  0002E9                     _EUSART1_FramingErrorHandler:
   458                           	callstack 0
   459  0002E9                     	ds	2
   460  0002EB                     _EUSART1_RxDefaultInterruptHandler:
   461                           	callstack 0
   462  0002EB                     	ds	2
   463  0002ED                     _EUSART1_TxDefaultInterruptHandler:
   464                           	callstack 0
   465  0002ED                     	ds	2
   466  0000                     _WDTCON0bits	set	3794
   467  0000                     _TMR0IE	set	30229
   468  0000                     _TMR0IF	set	30293
   469  0000                     _LATEbits	set	3975
   470  0000                     _LATDbits	set	3974
   471  0000                     _LATAbits	set	3971
   472  0000                     _LATCbits	set	3973
   473  0000                     _PORTB	set	3982
   474  0000                     _T1CONbits	set	4047
   475  0000                     _SSP1CON2bits	set	3991
   476  0000                     _SSP1CON1bits	set	3990
   477  0000                     _ADCON0bits	set	3936
   478  0000                     _RC1STAbits	set	3997
   479  0000                     _GIE	set	32663
   480  0000                     _RX1PPS	set	3765
   481  0000                     _SSP1CLKPPS	set	3767
   482  0000                     _PIE0bits	set	3778
   483  0000                     _PIE3bits	set	3781
   484  0000                     _PIE4bits	set	3782
   485  0000                     _PIR0bits	set	3786
   486  0000                     _PIR3bits	set	3789
   487  0000                     _ADACT	set	3926
   488  0000                     _ADREF	set	3928
   489  0000                     _ADCON1	set	3929
   490  0000                     _ADCAP	set	3933
   491  0000                     _ADPCH	set	3935
   492  0000                     _ADRPT	set	3942
   493  0000                     _ADSTPTL	set	3944
   494  0000                     _ADLTHL	set	3946
   495  0000                     _RC1REG	set	3993
   496  0000                     _TX1REG	set	3994
   497  0000                     _SP1BRGL	set	3995
   498  0000                     _RC1STA	set	3997
   499  0000                     _BAUD1CON	set	3999
   500  0000                     _T2TMR	set	4027
   501  0000                     _T2PR	set	4028
   502  0000                     _T2HLT	set	4030
   503  0000                     _T2CLKCON	set	4031
   504  0000                     _TMR1L	set	4045
   505  0000                     _TMR1H	set	4046
   506  0000                     _T1GCON	set	4048
   507  0000                     _TMR0L	set	4051
   508  0000                     _TMR0H	set	4052
   509  0000                     _T0CON1	set	4054
   510  0000                     _PCON0bits	set	4055
   511  0000                     _INTCONbits	set	4082
   512  0000                     _LATA	set	3971
   513  0000                     _LATD	set	3974
   514  0000                     _LATE	set	3975
   515  0000                     _SSP1BUF	set	3986
   516  0000                     _SSP1ADD	set	3987
   517  0000                     _SSP1STAT	set	3989
   518  0000                     _SSP1CON2	set	3991
   519  0000                     _SSP1CON1	set	3990
   520  0000                     _WDTCON0	set	3794
   521  0000                     _OSCCON1	set	3800
   522  0000                     _PIR4bits	set	3790
   523  0000                     _OSCCON3	set	3802
   524  0000                     _OSCEN	set	3804
   525  0000                     _PMD0	set	3809
   526  0000                     _RC3PPS	set	3834
   527  0000                     _INLVLA	set	3853
   528  0000                     _SLRCONA	set	3854
   529  0000                     _ODCONA	set	3855
   530  0000                     _WPUA	set	3856
   531  0000                     _ANSELA	set	3857
   532  0000                     _ANSELB	set	3865
   533  0000                     _ANSELC	set	3873
   534  0000                     _ANSELD	set	3878
   535  0000                     _PMD5	set	3814
   536  0000                     _PMD4	set	3813
   537  0000                     _PMD3	set	3812
   538  0000                     _PMD2	set	3811
   539  0000                     _PMD1	set	3810
   540  0000                     _WDTCON1	set	3795
   541  0000                     _PORTEbits	set	3985
   542  0000                     _PORTBbits	set	3982
   543  0000                     _PORTAbits	set	3981
   544  0000                     _INLVLE	set	3882
   545  0000                     _SLRCONE	set	3883
   546  0000                     _ODCONE	set	3884
   547  0000                     _WPUE	set	3885
   548  0000                     _ANSELE	set	3886
   549  0000                     _INLVLC	set	3869
   550  0000                     _SLRCONC	set	3870
   551  0000                     _ODCONC	set	3871
   552  0000                     _WPUC	set	3872
   553  0000                     _INLVLB	set	3861
   554  0000                     _SLRCONB	set	3862
   555  0000                     _ODCONB	set	3863
   556  0000                     _WPUB	set	3864
   557  0000                     _IOCBN3	set	30875
   558  0000                     _IOCBP3	set	30883
   559  0000                     _SSP1DATPPS	set	3768
   560  0000                     _RC7PPS	set	3838
   561  0000                     _RC4PPS	set	3835
   562  0000                     _T2RST	set	4032
   563                           
   564                           ; #config settings
   565                           
   566                           	psect	cinit
   567  0072BA                     __pcinit:
   568                           	callstack 0
   569  0072BA                     start_initialization:
   570                           	callstack 0
   571  0072BA                     __initialization:
   572                           	callstack 0
   573                           
   574                           ; Initialize objects allocated to BANK3 (37 bytes)
   575                           ; load TBLPTR registers with __pidataBANK3
   576  0072BA  0EBE               	movlw	low __pidataBANK3
   577  0072BC  6EF6               	movwf	tblptrl,c
   578  0072BE  0E90               	movlw	high __pidataBANK3
   579  0072C0  6EF7               	movwf	tblptrh,c
   580  0072C2  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   581  0072C4  6EF8               	movwf	tblptru,c
   582  0072C6  EE03  F0D2         	lfsr	0,__pdataBANK3
   583  0072CA  EE10 F025          	lfsr	1,37
   584  0072CE                     copy_data0:
   585  0072CE  0009               	tblrd		*+
   586  0072D0  CFF5 FFEE          	movff	tablat,postinc0
   587  0072D4  50E5               	movf	postdec1,w,c
   588  0072D6  50E1               	movf	fsr1l,w,c
   589  0072D8  E1FA               	bnz	copy_data0
   590                           
   591                           ; Initialize objects allocated to BANK2 (2 bytes)
   592                           ; load TBLPTR registers with __pidataBANK2
   593  0072DA  0E1A               	movlw	low __pidataBANK2
   594  0072DC  6EF6               	movwf	tblptrl,c
   595  0072DE  0E95               	movlw	high __pidataBANK2
   596  0072E0  6EF7               	movwf	tblptrh,c
   597  0072E2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   598  0072E4  6EF8               	movwf	tblptru,c
   599  0072E6  0009               	tblrd		*+	;fetch initializer
   600  0072E8  CFF5 F2EF          	movff	tablat,__pdataBANK2
   601  0072EC  0009               	tblrd		*+	;fetch initializer
   602  0072EE  CFF5 F2F0          	movff	tablat,__pdataBANK2+1
   603                           
   604                           ; Initialize objects allocated to BANK1 (5 bytes)
   605                           ; load TBLPTR registers with __pidataBANK1
   606  0072F2  0EE6               	movlw	low __pidataBANK1
   607  0072F4  6EF6               	movwf	tblptrl,c
   608  0072F6  0E94               	movlw	high __pidataBANK1
   609  0072F8  6EF7               	movwf	tblptrh,c
   610  0072FA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   611  0072FC  6EF8               	movwf	tblptru,c
   612  0072FE  EE01  F0F9         	lfsr	0,__pdataBANK1
   613  007302  EE10 F005          	lfsr	1,5
   614  007306                     copy_data1:
   615  007306  0009               	tblrd		*+
   616  007308  CFF5 FFEE          	movff	tablat,postinc0
   617  00730C  50E5               	movf	postdec1,w,c
   618  00730E  50E1               	movf	fsr1l,w,c
   619  007310  E1FA               	bnz	copy_data1
   620                           
   621                           ; Initialize objects allocated to BANK0 (2 bytes)
   622                           ; load TBLPTR registers with __pidataBANK0
   623  007312  0E18               	movlw	low __pidataBANK0
   624  007314  6EF6               	movwf	tblptrl,c
   625  007316  0E95               	movlw	high __pidataBANK0
   626  007318  6EF7               	movwf	tblptrh,c
   627  00731A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   628  00731C  6EF8               	movwf	tblptru,c
   629  00731E  0009               	tblrd		*+	;fetch initializer
   630  007320  CFF5 F0F8          	movff	tablat,__pdataBANK0
   631  007324  0009               	tblrd		*+	;fetch initializer
   632  007326  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   633                           
   634                           ; Clear objects allocated to BANK3 (210 bytes)
   635  00732A  EE03  F000         	lfsr	0,__pbssBANK3
   636  00732E  0ED2               	movlw	210
   637  007330                     clear_0:
   638  007330  6AEE               	clrf	postinc0,c
   639  007332  06E8               	decf	wreg,f,c
   640  007334  E1FD               	bnz	clear_0
   641                           
   642                           ; Clear objects allocated to BANK2 (221 bytes)
   643  007336  EE02  F000         	lfsr	0,__pbssBANK2
   644  00733A  0EDD               	movlw	221
   645  00733C                     clear_1:
   646  00733C  6AEE               	clrf	postinc0,c
   647  00733E  06E8               	decf	wreg,f,c
   648  007340  E1FD               	bnz	clear_1
   649                           
   650                           ; Clear objects allocated to BANK1 (249 bytes)
   651  007342  EE01  F000         	lfsr	0,__pbssBANK1
   652  007346  0EF9               	movlw	249
   653  007348                     clear_2:
   654  007348  6AEE               	clrf	postinc0,c
   655  00734A  06E8               	decf	wreg,f,c
   656  00734C  E1FD               	bnz	clear_2
   657                           
   658                           ; Clear objects allocated to BANK0 (120 bytes)
   659  00734E  EE00  F060         	lfsr	0,__pbssBANK0
   660  007352  0E78               	movlw	120
   661  007354                     clear_3:
   662  007354  6AEE               	clrf	postinc0,c
   663  007356  06E8               	decf	wreg,f,c
   664  007358  E1FD               	bnz	clear_3
   665                           
   666                           ; Clear objects allocated to COMRAM (21 bytes)
   667  00735A  EE00  F03B         	lfsr	0,__pbssCOMRAM
   668  00735E  0E15               	movlw	21
   669  007360                     clear_4:
   670  007360  6AEE               	clrf	postinc0,c
   671  007362  06E8               	decf	wreg,f,c
   672  007364  E1FD               	bnz	clear_4
   673  007366                     end_of_initialization:
   674                           	callstack 0
   675  007366                     __end_of__initialization:
   676                           	callstack 0
   677  007366  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   678  007368  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   679  00736A  0100               	movlb	0
   680  00736C  EFCC  F02F         	goto	_main	;jump to C main() function
   681                           
   682                           	psect	bssCOMRAM
   683  00003B                     __pbssCOMRAM:
   684                           	callstack 0
   685  00003B                     _rfCMD:
   686                           	callstack 0
   687  00003B                     	ds	11
   688  000046                     _edit_Param:
   689                           	callstack 0
   690  000046                     	ds	6
   691  00004C                     _button_struct:
   692                           	callstack 0
   693  00004C                     	ds	4
   694                           
   695                           	psect	bssBANK0
   696  000060                     __pbssBANK0:
   697                           	callstack 0
   698  000060                     _learn_st:
   699                           	callstack 0
   700  000060                     	ds	18
   701  000072                     _dispStruct:
   702                           	callstack 0
   703  000072                     	ds	6
   704  000078                     _brakeElectric_st:
   705                           	callstack 0
   706  000078                     	ds	2
   707  00007A                     _pointSync:
   708                           	callstack 0
   709  00007A                     	ds	2
   710  00007C                     _Hop:
   711                           	callstack 0
   712  00007C                     	ds	2
   713  00007E                     _RFcount:
   714                           	callstack 0
   715  00007E                     	ds	2
   716  000080                     _temp:
   717                           	callstack 0
   718  000080                     	ds	1
   719  000081                     _control_limit_switch:
   720                           	callstack 0
   721  000081                     	ds	1
   722  000082                     _fullmotorPower:
   723                           	callstack 0
   724  000082                     	ds	1
   725  000083                     _stateMotor:
   726                           	callstack 0
   727  000083                     	ds	1
   728  000084                     _zeroCrossingWaitTimeIdx:
   729                           	callstack 0
   730  000084                     	ds	1
   731  000085                     _programmer_enable:
   732                           	callstack 0
   733  000085                     	ds	1
   734  000086                     readbutton@key1:
   735                           	callstack 0
   736  000086                     	ds	1
   737  000087                     readRFButtons@keyType:
   738                           	callstack 0
   739  000087                     	ds	1
   740  000088                     readRFButtons@key1:
   741                           	callstack 0
   742  000088                     	ds	1
   743  000089                     _RFBit:
   744                           	callstack 0
   745  000089                     	ds	1
   746  00008A                     _RFFull_12BIT:
   747                           	callstack 0
   748  00008A                     	ds	1
   749  00008B                     _RFFull:
   750                           	callstack 0
   751  00008B                     	ds	1
   752  00008C                     _BitCount:
   753                           	callstack 0
   754  00008C                     	ds	1
   755  00008D                     _Bptr:
   756                           	callstack 0
   757  00008D                     	ds	1
   758  00008E                     _numberOfErrorCurrent:
   759                           	callstack 0
   760  00008E                     	ds	1
   761  00008F                     _idxAdcZeroAquisition:
   762                           	callstack 0
   763  00008F                     	ds	1
   764  000090                     _idxSaveEnergyADCHist:
   765                           	callstack 0
   766  000090                     	ds	1
   767  000091                     _idxAdcAquisition:
   768                           	callstack 0
   769  000091                     	ds	1
   770  000092                     _Counterchoose:
   771                           	callstack 0
   772  000092                     	ds	1
   773  000093                     _eusart1RxCount:
   774                           	callstack 0
   775  000093                     	ds	1
   776  000094                     _eusart1RxTail:
   777                           	callstack 0
   778  000094                     	ds	1
   779  000095                     _eusart1RxHead:
   780                           	callstack 0
   781  000095                     	ds	1
   782  000096                     _eusart1TxTail:
   783                           	callstack 0
   784  000096                     	ds	1
   785  000097                     _eusart1TxHead:
   786                           	callstack 0
   787  000097                     	ds	1
   788  000098                     _var_sys_NVM:
   789                           	callstack 0
   790  000098                     	ds	64
   791                           
   792                           	psect	dataBANK0
   793  0000F8                     __pdataBANK0:
   794                           	callstack 0
   795  0000F8                     _auxCounter:
   796                           	callstack 0
   797  0000F8                     	ds	2
   798                           
   799                           	psect	bssBANK1
   800  000100                     __pbssBANK1:
   801                           	callstack 0
   802  000100                     _var_sys:
   803                           	callstack 0
   804  000100                     	ds	81
   805  000151                     _menu_st:
   806                           	callstack 0
   807  000151                     	ds	25
   808  00016A                     _security:
   809                           	callstack 0
   810  00016A                     	ds	11
   811  000175                     _fimdecurso:
   812                           	callstack 0
   813  000175                     	ds	6
   814  00017B                     _powerControl_st:
   815                           	callstack 0
   816  00017B                     	ds	6
   817  000181                     readRFButtons@serial:
   818                           	callstack 0
   819  000181                     	ds	4
   820  000185                     readRFButtons@rollingCode:
   821                           	callstack 0
   822  000185                     	ds	2
   823  000187                     _BufferRF_12BIT:
   824                           	callstack 0
   825  000187                     	ds	2
   826  000189                     _erroranterior:
   827                           	callstack 0
   828  000189                     	ds	2
   829  00018B                     _aux_in_auto_close:
   830                           	callstack 0
   831  00018B                     	ds	1
   832  00018C                     _aux_i:
   833                           	callstack 0
   834  00018C                     	ds	1
   835  00018D                     _Abertura_pedonal:
   836                           	callstack 0
   837  00018D                     	ds	1
   838  00018E                     _temppower:
   839                           	callstack 0
   840  00018E                     	ds	1
   841  00018F                     _difTime:
   842                           	callstack 0
   843  00018F                     	ds	1
   844  000190                     _StateTRIAC:
   845                           	callstack 0
   846  000190                     	ds	1
   847  000191                     _waitZeroPeak:
   848                           	callstack 0
   849  000191                     	ds	1
   850  000192                     _zeroCrossing:
   851                           	callstack 0
   852  000192                     	ds	1
   853  000193                     _zeroCrossingLength:
   854                           	callstack 0
   855  000193                     	ds	1
   856  000194                     _lastKey:
   857                           	callstack 0
   858  000194                     	ds	1
   859  000195                     _F2Chance:
   860                           	callstack 0
   861  000195                     	ds	1
   862  000196                     readbutton@key2:
   863                           	callstack 0
   864  000196                     	ds	1
   865  000197                     readRFButtons@typeRemote:
   866                           	callstack 0
   867  000197                     	ds	1
   868  000198                     _RFstate:
   869                           	callstack 0
   870  000198                     	ds	1
   871  000199                     _eusart1RxLastError:
   872                           	callstack 0
   873  000199                     	ds	1
   874  00019A                     _ts_system:
   875                           	callstack 0
   876  00019A                     	ds	72
   877  0001E2                     _controlGate_stateMachine:
   878                           	callstack 0
   879  0001E2                     	ds	11
   880  0001ED                     _main_stateMachine:
   881                           	callstack 0
   882  0001ED                     	ds	11
   883  0001F8                     setValueToEdit@value:
   884                           	callstack 0
   885  0001F8                     	ds	1
   886                           
   887                           	psect	dataBANK1
   888  0001F9                     __pdataBANK1:
   889                           	callstack 0
   890  0001F9                     _tempCounter:
   891                           	callstack 0
   892  0001F9                     	ds	4
   893  0001FD                     _firstselectflag:
   894                           	callstack 0
   895  0001FD                     	ds	1
   896                           
   897                           	psect	bssBANK2
   898  000200                     __pbssBANK2:
   899                           	callstack 0
   900  000200                     _ADC_array:
   901                           	callstack 0
   902  000200                     	ds	60
   903  00023C                     _I2C1_Status:
   904                           	callstack 0
   905  00023C                     	ds	36
   906  000260                     _SumEnergyADCHist_array:
   907                           	callstack 0
   908  000260                     	ds	20
   909  000274                     _eusart1RxStatusBuffer:
   910                           	callstack 0
   911  000274                     	ds	8
   912  00027C                     _eusart1RxBuffer:
   913                           	callstack 0
   914  00027C                     	ds	8
   915  000284                     _eusart1TxBuffer:
   916                           	callstack 0
   917  000284                     	ds	8
   918  00028C                     _EHop:
   919                           	callstack 0
   920  00028C                     	ds	2
   921  00028E                     _NextHop:
   922                           	callstack 0
   923  00028E                     	ds	2
   924  000290                     _timer0ReloadVal16bit:
   925                           	callstack 0
   926  000290                     	ds	2
   927  000292                     _classic_data:
   928                           	callstack 0
   929  000292                     	ds	16
   930  0002A2                     _memoryTEMP:
   931                           	callstack 0
   932  0002A2                     	ds	16
   933  0002B2                     _controlLearning_stateMachine:
   934                           	callstack 0
   935  0002B2                     	ds	11
   936  0002BD                     _menuConfiguration_stateMachine:
   937                           	callstack 0
   938  0002BD                     	ds	11
   939  0002C8                     _BufferRF:
   940                           	callstack 0
   941  0002C8                     	ds	9
   942  0002D1                     _DKEY:
   943                           	callstack 0
   944  0002D1                     	ds	8
   945  0002D9                     NormalKeyGen@SEED:
   946                           	callstack 0
   947  0002D9                     	ds	4
   948                           
   949                           	psect	dataBANK2
   950  0002EF                     __pdataBANK2:
   951                           	callstack 0
   952  0002EF                     _zeroCrossingWaitTime:
   953                           	callstack 0
   954  0002EF                     	ds	2
   955                           
   956                           	psect	bssBANK3
   957  000300                     __pbssBANK3:
   958                           	callstack 0
   959  000300                     _listSyncValues:
   960                           	callstack 0
   961  000300                     	ds	150
   962  000396                     _ADC_zero_array:
   963                           	callstack 0
   964  000396                     	ds	60
   965                           
   966                           	psect	dataBANK3
   967  0003D2                     __pdataBANK3:
   968                           	callstack 0
   969  0003D2                     _DispTable:
   970                           	callstack 0
   971  0003D2                     	ds	37
   972                           
   973                           	psect	cstackBANK0
   974  0000D8                     __pcstackBANK0:
   975                           	callstack 0
   976  0000D8                     ??_keeloq_classic_decrypt_packet:
   977  0000D8                     ??_setPositionInvertionInClosing:
   978  0000D8                     ??_validateRemoteSerialNumber:
   979  0000D8                     ??_RemoveSerial:
   980  0000D8                     SaveNVM_VarSystem@page:
   981                           	callstack 0
   982  0000D8                     getStateOpenPosition@state:
   983                           	callstack 0
   984  0000D8                     saveNewSerial@tempSerial:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x0
   988  0000D8                     	ds	1
   989  0000D9                     getStateOpenPosition@stateMotor:
   990                           	callstack 0
   991  0000D9                     SaveNVM_VarSystem@tempAdd:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x1
   995  0000D9                     	ds	1
   996  0000DA                     ??_controlVelocity:
   997  0000DA                     RemoveSerial@cmdType:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x2
  1001  0000DA                     	ds	1
  1002  0000DB                     SaveNVM_VarSystem@point:
  1003                           	callstack 0
  1004  0000DB                     RemoveSerial@tempSerial:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x3
  1008  0000DB                     	ds	1
  1009  0000DC                     ??_eusartparser:
  1010  0000DC                     ??_setValueToEdit:
  1011  0000DC                     saveNewSerial@position:
  1012                           	callstack 0
  1013  0000DC                     sm_execute_ControlLearning@psm:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x4
  1017  0000DC                     	ds	1
  1018  0000DD                     ??_saveNewSerial:
  1019                           
  1020                           ; 1 bytes @ 0x5
  1021  0000DD                     	ds	1
  1022  0000DE                     ??_sm_execute_ControlLearning:
  1023  0000DE                     setValueToEdit@menuType:
  1024                           	callstack 0
  1025  0000DE                     eusartparser@i:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x6
  1029  0000DE                     	ds	1
  1030  0000DF                     setValueToEdit@posindex:
  1031                           	callstack 0
  1032  0000DF                     eusartparser@i_7252:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x7
  1036  0000DF                     	ds	1
  1037  0000E0                     ??_controlSelectRemote:
  1038  0000E0                     setValueToEdit@haveValueToEdit:
  1039                           	callstack 0
  1040  0000E0                     eusartparser@relcounter:
  1041                           	callstack 0
  1042  0000E0                     keeloqDecryptPacket@data:
  1043                           	callstack 0
  1044  0000E0                     DecryptPacket_12BIT@data:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x8
  1048  0000E0                     	ds	1
  1049  0000E1                     controlSelectRemote@validSerial:
  1050                           	callstack 0
  1051  0000E1                     eusartparser@i_7253:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x9
  1055  0000E1                     	ds	1
  1056  0000E2                     controlSelectRemote@pos:
  1057                           	callstack 0
  1058  0000E2                     eusartparser@i_7254:
  1059                           	callstack 0
  1060  0000E2                     keeloqDecryptPacket@classic_data:
  1061                           	callstack 0
  1062  0000E2                     DecryptPacket_12BIT@classic_data:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0xA
  1066  0000E2                     	ds	1
  1067  0000E3                     controlSelectRemote@typeRemote:
  1068                           	callstack 0
  1069                           
  1070                           ; 1 bytes @ 0xB
  1071  0000E3                     	ds	1
  1072  0000E4                     ??_keeloqDecryptPacket:
  1073  0000E4                     DecryptPacket_12BIT@commandType:
  1074                           	callstack 0
  1075  0000E4                     actionZone_Opening@securityClosing:
  1076                           	callstack 0
  1077  0000E4                     controlSelectRemote@tempSerial:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0xC
  1081  0000E4                     	ds	1
  1082  0000E5                     actionZone_Opening@securityOpening:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0xD
  1086  0000E5                     	ds	1
  1087  0000E6                     actionZone_Opening@typeOpenOrder:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0xE
  1091  0000E6                     	ds	1
  1092  0000E7                     sm_execute_ControlGate@psm:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0xF
  1096  0000E7                     	ds	1
  1097  0000E8                     keeloqDecryptPacket@hop_error:
  1098                           	callstack 0
  1099  0000E8                     controlSelectRemote@temp:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x10
  1103  0000E8                     	ds	1
  1104  0000E9                     ??_sm_execute_ControlGate:
  1105  0000E9                     keeloqDecryptPacket@commandType:
  1106                           	callstack 0
  1107  0000E9                     sm_execute_menuConfiguration@psm:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x11
  1111  0000E9                     	ds	2
  1112  0000EB                     ??_sm_execute_menuConfiguration:
  1113  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1114                           	callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x13
  1117  0000EB                     	ds	2
  1118  0000ED                     sm_execute_main@psm:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x15
  1122  0000ED                     	ds	2
  1123  0000EF                     ??_sm_execute_main:
  1124                           
  1125                           ; 1 bytes @ 0x17
  1126  0000EF                     	ds	2
  1127  0000F1                     main@package:
  1128                           	callstack 0
  1129                           
  1130                           ; 7 bytes @ 0x19
  1131  0000F1                     	ds	7
  1132                           
  1133                           	psect	cstackCOMRAM
  1134  000001                     __pcstackCOMRAM:
  1135                           	callstack 0
  1136  000001                     ??_rxi:
  1137  000001                     ??i2_GetMotorPower:
  1138  000001                     ADCC_GetSingleConversion@channel:
  1139                           	callstack 0
  1140  000001                     Segments_Set@value:
  1141                           	callstack 0
  1142  000001                     i2VerifyElectricalBrake@tempState:
  1143                           	callstack 0
  1144  000001                     TMR1_WriteTimer@timerVal:
  1145                           	callstack 0
  1146  000001                     decrementTimeslot@ts:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x0
  1150  000001                     	ds	1
  1151  000002                     ??_ReadADC:
  1152  000002                     i2VerifyElectricalBrake@actualState:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x1
  1156  000002                     	ds	1
  1157  000003                     
  1158                           ; 1 bytes @ 0x2
  1159  000003                     	ds	1
  1160  000004                     i2GetMotorPower@defineatraso:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x3
  1164  000004                     	ds	1
  1165  000005                     ??_controlMotorForce:
  1166  000005                     
  1167                           ; 1 bytes @ 0x4
  1168  000005                     	ds	5
  1169  00000A                     ??_INTERRUPT_InterruptManager:
  1170                           
  1171                           ; 1 bytes @ 0x9
  1172  00000A                     	ds	6
  1173  000010                     ??_GetMotorPower:
  1174  000010                     ??_SetSegmentValueLearn:
  1175  000010                     ?_sumEnergyADC:
  1176                           	callstack 0
  1177  000010                     ?_sm_get_current_state:
  1178                           	callstack 0
  1179  000010                     ?___wmul:
  1180                           	callstack 0
  1181  000010                     ?___lwdiv:
  1182                           	callstack 0
  1183  000010                     ?_calculateMean:
  1184                           	callstack 0
  1185  000010                     ?_sumHIST:
  1186                           	callstack 0
  1187  000010                     ?___lldiv:
  1188                           	callstack 0
  1189  000010                     EUSART1_Read@readValue:
  1190                           	callstack 0
  1191  000010                     EUSART1_Write@txData:
  1192                           	callstack 0
  1193  000010                     I2C1_Open@address:
  1194                           	callstack 0
  1195  000010                     I2C1_Close@returnValue:
  1196                           	callstack 0
  1197  000010                     I2C1_MasterSendTxData@data:
  1198                           	callstack 0
  1199  000010                     WWDT_TimerClear@state:
  1200                           	callstack 0
  1201  000010                     getKeyPressed@temp:
  1202                           	callstack 0
  1203  000010                     RGB_Set@value:
  1204                           	callstack 0
  1205  000010                     SetSegmentValueIntermitent@d2:
  1206                           	callstack 0
  1207  000010                     VerifyElectricalBrake@tempState:
  1208                           	callstack 0
  1209  000010                     VerifyFollowMe@securityClose:
  1210                           	callstack 0
  1211  000010                     init_package@package:
  1212                           	callstack 0
  1213  000010                     ___lbdiv@divisor:
  1214                           	callstack 0
  1215  000010                     ___lbmod@divisor:
  1216                           	callstack 0
  1217  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1218                           	callstack 0
  1219  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1220                           	callstack 0
  1221  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1222                           	callstack 0
  1223  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1224                           	callstack 0
  1225  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1226                           	callstack 0
  1227  000010                     I2C1_SetBuffer@buffer:
  1228                           	callstack 0
  1229  000010                     I2C1_SetCallback@cb:
  1230                           	callstack 0
  1231  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1232                           	callstack 0
  1233  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1234                           	callstack 0
  1235  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1236                           	callstack 0
  1237  000010                     saveEnergyADCHist@valueToSave:
  1238                           	callstack 0
  1239  000010                     DecCHK@data:
  1240                           	callstack 0
  1241  000010                     ReqResync@CurrentHop:
  1242                           	callstack 0
  1243  000010                     verifyProgramingMode@classic_data:
  1244                           	callstack 0
  1245  000010                     setFlashLigth_ON@Freq:
  1246                           	callstack 0
  1247  000010                     sm_restart@psm:
  1248                           	callstack 0
  1249  000010                     sm_get_current_state@psm:
  1250                           	callstack 0
  1251  000010                     ___wmul@multiplier:
  1252                           	callstack 0
  1253  000010                     ___lwdiv@dividend:
  1254                           	callstack 0
  1255  000010                     memcpy@d1:
  1256                           	callstack 0
  1257  000010                     calculateMean@meanValue:
  1258                           	callstack 0
  1259  000010                     ___lldiv@dividend:
  1260                           	callstack 0
  1261  000010                     write_eusartparser@package:
  1262                           	callstack 0
  1263                           
  1264                           ; 7 bytes @ 0xF
  1265  000010                     	ds	1
  1266  000011                     ?_read_package:
  1267                           	callstack 0
  1268  000011                     I2C1_Open@returnValue:
  1269                           	callstack 0
  1270  000011                     VerifyElectricalBrake@actualState:
  1271                           	callstack 0
  1272  000011                     confirmpackage@package:
  1273                           	callstack 0
  1274  000011                     ___lbdiv@dividend:
  1275                           	callstack 0
  1276  000011                     ___lbmod@dividend:
  1277                           	callstack 0
  1278  000011                     SetSegmentValueIntermitent@time:
  1279                           	callstack 0
  1280  000011                     setRGB_ON@Freq:
  1281                           	callstack 0
  1282  000011                     write_package@package:
  1283                           	callstack 0
  1284                           
  1285                           ; 7 bytes @ 0x10
  1286  000011                     	ds	1
  1287  000012                     ??_TMR1_Initialize:
  1288  000012                     ??_ControlMotor:
  1289  000012                     ??_sumEnergyADC:
  1290  000012                     ??_DecCHK:
  1291  000012                     SetSegmentValueLearn@direction:
  1292                           	callstack 0
  1293  000012                     confirmpackage@confirm:
  1294                           	callstack 0
  1295  000012                     ___lbdiv@counter:
  1296                           	callstack 0
  1297  000012                     ___lbmod@counter:
  1298                           	callstack 0
  1299  000012                     I2C1_SetBuffer@bufferSize:
  1300                           	callstack 0
  1301  000012                     I2C1_SetCallback@ptr:
  1302                           	callstack 0
  1303  000012                     sm_init@psm:
  1304                           	callstack 0
  1305  000012                     sm_send_event@psm:
  1306                           	callstack 0
  1307  000012                     ___wmul@multiplicand:
  1308                           	callstack 0
  1309  000012                     ___lwdiv@divisor:
  1310                           	callstack 0
  1311  000012                     memcpy@s1:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x11
  1315  000012                     	ds	1
  1316  000013                     ??_setRGB_ON:
  1317  000013                     SetSegmentValueIntermitent@d1:
  1318                           	callstack 0
  1319  000013                     GetMotorPower@defineatraso:
  1320                           	callstack 0
  1321  000013                     ___lbdiv@quotient:
  1322                           	callstack 0
  1323  000013                     ___lbmod@rem:
  1324                           	callstack 0
  1325                           
  1326                           ; 1 bytes @ 0x12
  1327  000013                     	ds	1
  1328  000014                     ??_InitSoftStop:
  1329  000014                     ??_InitSoftStart:
  1330  000014                     ??_sumHIST:
  1331  000014                     ?___awdiv:
  1332                           	callstack 0
  1333  000014                     I2C1_SetCallback@idx:
  1334                           	callstack 0
  1335  000014                     sumEnergyADC@sumE:
  1336                           	callstack 0
  1337  000014                     sm_init@initial_state:
  1338                           	callstack 0
  1339  000014                     sm_send_event@event:
  1340                           	callstack 0
  1341  000014                     ___wmul@product:
  1342                           	callstack 0
  1343  000014                     ___awdiv@dividend:
  1344                           	callstack 0
  1345  000014                     ___lwdiv@quotient:
  1346                           	callstack 0
  1347  000014                     memcpy@n:
  1348                           	callstack 0
  1349  000014                     calculateMean@newValue:
  1350                           	callstack 0
  1351  000014                     ___lldiv@divisor:
  1352                           	callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x13
  1355  000014                     	ds	1
  1356  000015                     setRGB_ON@RGBLigth:
  1357                           	callstack 0
  1358  000015                     I2C1_SetDataCompleteCallback@cb:
  1359                           	callstack 0
  1360  000015                     I2C1_SetAddressNackCallback@cb:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x14
  1364  000015                     	ds	1
  1365  000016                     ?_getHopCode:
  1366                           	callstack 0
  1367  000016                     ?_getCurrentComparator:
  1368                           	callstack 0
  1369  000016                     sm_init@hist_mode:
  1370                           	callstack 0
  1371  000016                     ___lwdiv@counter:
  1372                           	callstack 0
  1373  000016                     memcpy@tmp:
  1374                           	callstack 0
  1375  000016                     sumEnergyADC@auxValue:
  1376                           	callstack 0
  1377  000016                     getHopCode@data:
  1378                           	callstack 0
  1379  000016                     ___awdiv@divisor:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x15
  1383  000016                     	ds	1
  1384  000017                     ??_write_eusartparser:
  1385  000017                     refreshADCZeroOffset@i:
  1386                           	callstack 0
  1387  000017                     I2C1_SetDataCompleteCallback@ptr:
  1388                           	callstack 0
  1389  000017                     I2C1_SetAddressNackCallback@ptr:
  1390                           	callstack 0
  1391  000017                     memcpy@d:
  1392                           	callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x16
  1395  000017                     	ds	1
  1396  000018                     ??_getHopCode:
  1397  000018                     ??_calculateMean:
  1398  000018                     ??_OpenWalkOrder:
  1399  000018                     sumEnergyADC@i:
  1400                           	callstack 0
  1401  000018                     ControlMotor@stateMotor:
  1402                           	callstack 0
  1403  000018                     read_eusartparser@package:
  1404                           	callstack 0
  1405  000018                     ___awdiv@counter:
  1406                           	callstack 0
  1407  000018                     refreshADCZeroOffset@media:
  1408                           	callstack 0
  1409  000018                     sumHIST@max:
  1410                           	callstack 0
  1411  000018                     ___lldiv@quotient:
  1412                           	callstack 0
  1413  000018                     read_package@package:
  1414                           	callstack 0
  1415                           
  1416                           ; 7 bytes @ 0x17
  1417  000018                     	ds	1
  1418  000019                     ??_read_eusartparser:
  1419  000019                     ___awdiv@sign:
  1420                           	callstack 0
  1421  000019                     wr1RegCompleteHandler@p:
  1422                           	callstack 0
  1423  000019                     rd1RegCompleteHandler@p:
  1424                           	callstack 0
  1425  000019                     rd2RegCompleteHandler@p:
  1426                           	callstack 0
  1427  000019                     wr2RegCompleteHandler@p:
  1428                           	callstack 0
  1429  000019                     rdBlkRegCompleteHandler@p:
  1430                           	callstack 0
  1431  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1432                           	callstack 0
  1433  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1434                           	callstack 0
  1435  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1436                           	callstack 0
  1437  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1438                           	callstack 0
  1439  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1440                           	callstack 0
  1441  000019                     I2C1_CallbackReturnReset@funPtr:
  1442                           	callstack 0
  1443  000019                     memcpy@s:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x18
  1447  000019                     	ds	1
  1448  00001A                     ??_getCurrentComparator:
  1449  00001A                     sumHIST@min:
  1450                           	callstack 0
  1451  00001A                     OpenWalkOrder@diffTime:
  1452                           	callstack 0
  1453  00001A                     ___awdiv@quotient:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x19
  1457  00001A                     	ds	1
  1458  00001B                     ??_I2C1_DO_TX:
  1459  00001B                     ??_I2C1_DO_RX:
  1460  00001B                     ??_I2C1_DO_TX_EMPTY:
  1461  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1462  00001B                     getSerialCmd@serial:
  1463                           	callstack 0
  1464  00001B                     Decrypt@packet:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x1A
  1468  00001B                     	ds	1
  1469  00001C                     getSerialCmd@temp:
  1470                           	callstack 0
  1471  00001C                     SetSegmentValueMain@d2:
  1472                           	callstack 0
  1473  00001C                     SetSegmentValue@d2:
  1474                           	callstack 0
  1475  00001C                     SetSegmentValueIntermitentMain@d2:
  1476                           	callstack 0
  1477  00001C                     ___lldiv@counter:
  1478                           	callstack 0
  1479  00001C                     sumHIST@sumH:
  1480                           	callstack 0
  1481                           
  1482                           ; 4 bytes @ 0x1B
  1483  00001C                     	ds	1
  1484  00001D                     ??_I2C1_MasterFsm:
  1485  00001D                     ?___lmul:
  1486                           	callstack 0
  1487  00001D                     Decrypt@key:
  1488                           	callstack 0
  1489  00001D                     SetSegmentValueMain@d1:
  1490                           	callstack 0
  1491  00001D                     SetSegmentValue@d1:
  1492                           	callstack 0
  1493  00001D                     SetSegmentValueIntermitentMain@time:
  1494                           	callstack 0
  1495  00001D                     ___lmul@multiplier:
  1496                           	callstack 0
  1497                           
  1498                           ; 4 bytes @ 0x1C
  1499  00001D                     	ds	1
  1500  00001E                     Decrypt@i:
  1501                           	callstack 0
  1502                           
  1503                           ; 1 bytes @ 0x1D
  1504  00001E                     	ds	1
  1505  00001F                     Decrypt@j:
  1506                           	callstack 0
  1507  00001F                     SetSegmentValueIntermitentMain@d1:
  1508                           	callstack 0
  1509  00001F                     write_eusartparser@debug:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x1E
  1513  00001F                     	ds	1
  1514  000020                     ??_load_New_Menu:
  1515  000020                     ??_controlSaveRemote:
  1516  000020                     I2C1_MasterOperation@read:
  1517                           	callstack 0
  1518  000020                     sumHIST@i:
  1519                           	callstack 0
  1520  000020                     Decrypt@p:
  1521                           	callstack 0
  1522  000020                     actionZone_Closed@securityOpening:
  1523                           	callstack 0
  1524  000020                     actionZone_Opened@securityClosing:
  1525                           	callstack 0
  1526  000020                     getCurrentComparator@tempOffset:
  1527                           	callstack 0
  1528  000020                     getHopCode@tempHop:
  1529                           	callstack 0
  1530                           
  1531                           ; 2 bytes @ 0x1F
  1532  000020                     	ds	1
  1533  000021                     I2C1_MasterOperation@returnValue:
  1534                           	callstack 0
  1535  000021                     Decrypt@aux:
  1536                           	callstack 0
  1537  000021                     actionZone_Closed@typeOpenOrder:
  1538                           	callstack 0
  1539  000021                     actionZone_Opened@typeOpenOrder:
  1540                           	callstack 0
  1541  000021                     write_eusartparser@debug2:
  1542                           	callstack 0
  1543  000021                     ___lmul@multiplicand:
  1544                           	callstack 0
  1545                           
  1546                           ; 4 bytes @ 0x20
  1547  000021                     	ds	1
  1548  000022                     I2C1_Read1ByteRegister@reg:
  1549                           	callstack 0
  1550  000022                     getCurrentComparator@x:
  1551                           	callstack 0
  1552  000022                     getHopCode@tempPos:
  1553                           	callstack 0
  1554  000022                     load_New_Menu@Menu:
  1555                           	callstack 0
  1556  000022                     i2c_writeNBytes@reg:
  1557                           	callstack 0
  1558  000022                     i2c_readDataBlock@reg:
  1559                           	callstack 0
  1560  000022                     Decrypt@Buffer:
  1561                           	callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x21
  1564  000022                     	ds	1
  1565  000023                     ??_ControlCurrent:
  1566  000023                     I2C1_Read1ByteRegister@address:
  1567                           	callstack 0
  1568  000023                     getHopCode@i:
  1569                           	callstack 0
  1570  000023                     load_New_Menu@i:
  1571                           	callstack 0
  1572                           
  1573                           ; 1 bytes @ 0x22
  1574  000023                     	ds	1
  1575  000024                     i2c_writeNBytes@data:
  1576                           	callstack 0
  1577  000024                     I2C1_Read1ByteRegister@returnValue:
  1578                           	callstack 0
  1579  000024                     i2c_readDataBlock@data:
  1580                           	callstack 0
  1581  000024                     HopCHK@data:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x23
  1585  000024                     	ds	1
  1586  000025                     i2c_writeNBytes@len:
  1587                           	callstack 0
  1588  000025                     ___lmul@product:
  1589                           	callstack 0
  1590                           
  1591                           ; 4 bytes @ 0x24
  1592  000025                     	ds	1
  1593  000026                     i2c_readDataBlock@len:
  1594                           	callstack 0
  1595  000026                     NormalKeyGen@serial:
  1596                           	callstack 0
  1597  000026                     HopCHK@hopDiff:
  1598                           	callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x25
  1601  000026                     	ds	1
  1602  000027                     ??_i2c_writeNBytes:
  1603                           
  1604                           ; 1 bytes @ 0x26
  1605  000027                     	ds	1
  1606  000028                     ??_i2c_readDataBlock:
  1607  000028                     NormalKeyGen@HOPtemp:
  1608                           	callstack 0
  1609  000028                     i2c_writeNBytes@dat:
  1610                           	callstack 0
  1611                           
  1612                           ; 17 bytes @ 0x27
  1613  000028                     	ds	1
  1614  000029                     ?_getTimeDecelaration:
  1615                           	callstack 0
  1616  000029                     i2c_readDataBlock@address:
  1617                           	callstack 0
  1618                           
  1619                           ; 1 bytes @ 0x28
  1620  000029                     	ds	1
  1621  00002A                     i2c_readDataBlock@d:
  1622                           	callstack 0
  1623                           
  1624                           ; 4 bytes @ 0x29
  1625  00002A                     	ds	2
  1626  00002C                     NormalKeyGen@SKEYtemp:
  1627                           	callstack 0
  1628                           
  1629                           ; 4 bytes @ 0x2B
  1630  00002C                     	ds	1
  1631  00002D                     ??_getTimeDecelaration:
  1632                           
  1633                           ; 1 bytes @ 0x2C
  1634  00002D                     	ds	1
  1635  00002E                     cmdMemoryIsEmpty@position:
  1636                           	callstack 0
  1637  00002E                     validateRemoteSerialNumber@serial:
  1638                           	callstack 0
  1639                           
  1640                           ; 4 bytes @ 0x2D
  1641  00002E                     	ds	1
  1642  00002F                     ??_cmdMemoryIsEmpty:
  1643                           
  1644                           ; 1 bytes @ 0x2E
  1645  00002F                     	ds	1
  1646  000030                     NormalKeyGen@Buffer:
  1647                           	callstack 0
  1648                           
  1649                           ; 8 bytes @ 0x2F
  1650  000030                     	ds	1
  1651  000031                     cmdMemoryIsEmpty@cmdType:
  1652                           	callstack 0
  1653  000031                     getTimeDecelaration@state:
  1654                           	callstack 0
  1655                           
  1656                           ; 1 bytes @ 0x30
  1657  000031                     	ds	1
  1658  000032                     ??_setPositionInvertionInOpening:
  1659  000032                     ??_getStateOpenPosition:
  1660  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1661                           	callstack 0
  1662  000032                     actionZone_Closing@securityClosing:
  1663                           	callstack 0
  1664  000032                     cmdMemoryIsEmpty@tempSerial:
  1665                           	callstack 0
  1666                           
  1667                           ; 4 bytes @ 0x31
  1668  000032                     	ds	1
  1669  000033                     actionZone_Closing@typeOpenOrder:
  1670                           	callstack 0
  1671  000033                     validateRemoteSerialNumber@position:
  1672                           	callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x32
  1675  000033                     	ds	2
  1676  000035                     validateRemoteSerialNumber@mask:
  1677                           	callstack 0
  1678                           
  1679                           ; 4 bytes @ 0x34
  1680  000035                     	ds	3
  1681  000038                     keeloq_classic_decrypt_packet@data:
  1682                           	callstack 0
  1683                           
  1684                           ; 2 bytes @ 0x37
  1685  000038                     	ds	1
  1686  000039                     i2c_writeNBytes@address:
  1687                           	callstack 0
  1688  000039                     validateRemoteSerialNumber@j:
  1689                           	callstack 0
  1690                           
  1691                           ; 1 bytes @ 0x38
  1692  000039                     	ds	1
  1693  00003A                     validateRemoteSerialNumber@i:
  1694                           	callstack 0
  1695  00003A                     saveNewSerial@cmdType:
  1696                           	callstack 0
  1697  00003A                     RemoveSerial@position:
  1698                           	callstack 0
  1699  00003A                     ResetDefaultMemory@type:
  1700                           	callstack 0
  1701  00003A                     checkNVM_VarSystem@saveParam:
  1702                           	callstack 0
  1703  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1704                           	callstack 0
  1705  00003A                     setValueToEdit@ParameterSelected:
  1706                           	callstack 0
  1707  00003A                     eusartparser@package:
  1708                           	callstack 0
  1709                           
  1710                           ; 1 bytes @ 0x39
  1711  00003A                     	ds	1
  1712  00003B                     
  1713                           ; 1 bytes @ 0x3A
  1714 ;;
  1715 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1716 ;;
  1717 ;; *************** function _main *****************
  1718 ;; Defined at:
  1719 ;;		line 63 in file "main_MC50.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  package         7   25[BANK0 ] struct package_t
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 3F/1
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1734 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1736 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;Total ram usage:        7 bytes
  1738 ;; Hardware stack levels required when called: 17
  1739 ;; This function calls:
  1740 ;;		_ControlCounterMoves
  1741 ;;		_ControlCurrent
  1742 ;;		_ControlInputs
  1743 ;;		_ControlLights
  1744 ;;		_ControlMotor
  1745 ;;		_EUSART1_is_rx_ready
  1746 ;;		_InitReceiver
  1747 ;;		_SYSTEM_Initialize
  1748 ;;		_SetSegmentValue
  1749 ;;		_ShowVersion
  1750 ;;		_WWDT_SoftEnable
  1751 ;;		_WWDT_TimerClear
  1752 ;;		_controlVelocity
  1753 ;;		_eusartparser
  1754 ;;		_getKeyPressed
  1755 ;;		_loadNVM_VarSystem
  1756 ;;		_readInputs
  1757 ;;		_readRFButtons
  1758 ;;		_read_package
  1759 ;;		_readbutton
  1760 ;;		_sm_execute_ControlGate
  1761 ;;		_sm_execute_main
  1762 ;;		_sm_init
  1763 ;; This function is called by:
  1764 ;;		Startup code after reset
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text0
  1769  005F98                     __ptext0:
  1770                           	callstack 0
  1771  005F98                     _main:
  1772                           	callstack 14
  1773                           
  1774                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1775                           
  1776                           ;incstack = 0
  1777  005F98  0E18               	movlw	24
  1778  005F9A  0100               	movlb	0	; () banked
  1779  005F9C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1780                           
  1781                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1782  005F9E  0E18               	movlw	24
  1783  005FA0  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1784                           
  1785                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1786  005FA2  0E00               	movlw	0
  1787  005FA4  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1788  005FA6  0E00               	movlw	0
  1789  005FA8  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1790                           
  1791                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1792  005FAA  0E01               	movlw	1
  1793  005FAC  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1797  005FAE  ECA0  F046         	call	_SYSTEM_Initialize	;wreg free
  1798                           
  1799                           ; BSR set to: 14
  1800                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1801  005FB2  EC76  F04A         	call	_WWDT_SoftEnable	;wreg free
  1802                           
  1803                           ; BSR set to: 14
  1804                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1805  005FB6  8EF2               	bsf	242,7,c	;volatile
  1806                           
  1807                           ; BSR set to: 14
  1808                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1809  005FB8  8CF2               	bsf	242,6,c	;volatile
  1810                           
  1811                           ; BSR set to: 14
  1812                           ;main_MC50.c: 86:     IOCBP3=1;
  1813  005FBA  010F               	movlb	15	; () banked
  1814  005FBC  8714               	bsf	20,3,b	;volatile
  1815                           
  1816                           ; BSR set to: 15
  1817                           ;main_MC50.c: 87:     IOCBN3=1;
  1818  005FBE  8713               	bsf	19,3,b	;volatile
  1819                           
  1820                           ; BSR set to: 15
  1821                           ;main_MC50.c: 94:     InitReceiver();
  1822  005FC0  EC00  F049         	call	_InitReceiver	;wreg free
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1826  005FC4  EC85  F032         	call	_loadNVM_VarSystem	;wreg free
  1827                           
  1828                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1829  005FC8  ECD6  F048         	call	_WWDT_TimerClear	;wreg free
  1830                           
  1831                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1832  005FCC  0E18               	movlw	24
  1833  005FCE  6E1C               	movwf	SetSegmentValue@d2^0,c
  1834  005FD0  0E18               	movlw	24
  1835  005FD2  EC27  F049         	call	_SetSegmentValue
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1839  005FD6  0E02               	movlw	2
  1840  005FD8  0101               	movlb	1	; () banked
  1841  005FDA  6F9C               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1842                           
  1843                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1844  005FDC  D00B               	goto	l23578
  1845  005FDE                     l23568:
  1846                           
  1847                           ; BSR set to: 1
  1848                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1849  005FDE  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1850  005FE0  A4D8               	btfss	status,2,c
  1851  005FE2  D008               	goto	l23578
  1852                           
  1853                           ; BSR set to: 1
  1854                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1855  005FE4  ECD6  F048         	call	_WWDT_TimerClear	;wreg free
  1856                           
  1857                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1858  005FE8  0E32               	movlw	50
  1859  005FEA  0101               	movlb	1	; () banked
  1860  005FEC  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1861                           
  1862                           ; BSR set to: 1
  1863                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1864  005FEE  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1865                           
  1866                           ; BSR set to: 1
  1867                           ;main_MC50.c: 109:             readInputs();
  1868  005FF0  EC51  F035         	call	_readInputs	;wreg free
  1869  005FF4                     l23578:
  1870                           
  1871                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1872  005FF4  0101               	movlb	1	; () banked
  1873  005FF6  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1874  005FF8  A4D8               	btfss	status,2,c
  1875  005FFA  D7F1               	goto	l23568
  1876                           
  1877                           ; BSR set to: 1
  1878                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1879  005FFC  0EBD               	movlw	low _menuConfiguration_stateMachine
  1880  005FFE  6E12               	movwf	sm_init@psm^0,c
  1881  006000  0E02               	movlw	high _menuConfiguration_stateMachine
  1882  006002  6E13               	movwf	(sm_init@psm+1)^0,c
  1883  006004  0E00               	movlw	0
  1884  006006  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1885  006008  0E00               	movlw	0
  1886  00600A  6E14               	movwf	sm_init@initial_state^0,c
  1887  00600C  0E00               	movlw	0
  1888  00600E  6E16               	movwf	sm_init@hist_mode^0,c
  1889  006010  ECFB  F042         	call	_sm_init	;wreg free
  1890                           
  1891                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1892  006014  0EED               	movlw	low _main_stateMachine
  1893  006016  6E12               	movwf	sm_init@psm^0,c
  1894  006018  0E01               	movlw	high _main_stateMachine
  1895  00601A  6E13               	movwf	(sm_init@psm+1)^0,c
  1896  00601C  0E00               	movlw	0
  1897  00601E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1898  006020  0E00               	movlw	0
  1899  006022  6E14               	movwf	sm_init@initial_state^0,c
  1900  006024  0E00               	movlw	0
  1901  006026  6E16               	movwf	sm_init@hist_mode^0,c
  1902  006028  ECFB  F042         	call	_sm_init	;wreg free
  1903                           
  1904                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1905  00602C  0EE2               	movlw	low _controlGate_stateMachine
  1906  00602E  6E12               	movwf	sm_init@psm^0,c
  1907  006030  0E01               	movlw	high _controlGate_stateMachine
  1908  006032  6E13               	movwf	(sm_init@psm+1)^0,c
  1909  006034  0E00               	movlw	0
  1910  006036  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1911  006038  0E00               	movlw	0
  1912  00603A  6E14               	movwf	sm_init@initial_state^0,c
  1913  00603C  0E00               	movlw	0
  1914  00603E  6E16               	movwf	sm_init@hist_mode^0,c
  1915  006040  ECFB  F042         	call	_sm_init	;wreg free
  1916                           
  1917                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1918  006044  0EB2               	movlw	low _controlLearning_stateMachine
  1919  006046  6E12               	movwf	sm_init@psm^0,c
  1920  006048  0E02               	movlw	high _controlLearning_stateMachine
  1921  00604A  6E13               	movwf	(sm_init@psm+1)^0,c
  1922  00604C  0E00               	movlw	0
  1923  00604E  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1924  006050  0E00               	movlw	0
  1925  006052  6E14               	movwf	sm_init@initial_state^0,c
  1926  006054  0E00               	movlw	0
  1927  006056  6E16               	movwf	sm_init@hist_mode^0,c
  1928  006058  ECFB  F042         	call	_sm_init	;wreg free
  1929                           
  1930                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1931  00605C  0E00               	movlw	0
  1932  00605E  0101               	movlb	1	; () banked
  1933  006060  6FA3               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1934  006062  0E14               	movlw	20
  1935  006064  6FA2               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1936                           
  1937                           ; BSR set to: 1
  1938                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1939  006066  0E01               	movlw	1
  1940  006068  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1941  00606A  0EFE               	movlw	254
  1942  00606C  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1946  00606E  0E00               	movlw	0
  1947  006070  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1948  006072  0E64               	movlw	100
  1949  006074  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1953  006076  0E00               	movlw	0
  1954  006078  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1955  00607A  0E00               	movlw	0
  1956  00607C  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1957                           
  1958                           ; BSR set to: 1
  1959                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1960  00607E  0E00               	movlw	0
  1961  006080  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1962  006082                     l23592:
  1963                           
  1964                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  1965  006082  ECC6  F049         	call	_EUSART1_is_rx_ready	;wreg free
  1966  006086  0900               	iorlw	0
  1967  006088  B4D8               	btfsc	status,2,c
  1968  00608A  D00D               	goto	l23598
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;main_MC50.c: 142:             package=read_package();
  1972  00608C  ECCF  F043         	call	_read_package	;wreg free
  1973  006090  EE20  F0F1         	lfsr	2,main@package
  1974  006094  0E06               	movlw	6
  1975  006096                     u29171:
  1976  006096  CFEB FFDB          	movff	plusw0,plusw2
  1977  00609A  06E8               	decf	wreg,f,c
  1978  00609C  E2FC               	bc	u29171
  1979                           
  1980                           ; BSR set to: 14
  1981                           ;main_MC50.c: 143:             eusartparser(&package);
  1982  00609E  0EF1               	movlw	low main@package
  1983  0060A0  6E3A               	movwf	eusartparser@package^0,c
  1984  0060A2  ECFC  F01F         	call	_eusartparser	;wreg free
  1985  0060A6                     l23598:
  1986                           
  1987                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  1988  0060A6  0101               	movlb	1	; () banked
  1989  0060A8  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1990  0060AA  A4D8               	btfss	status,2,c
  1991  0060AC  D7EA               	goto	l23592
  1992                           
  1993                           ; BSR set to: 1
  1994                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  1995  0060AE  0E32               	movlw	50
  1996  0060B0  6F9D               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2000  0060B2  ECD6  F048         	call	_WWDT_TimerClear	;wreg free
  2001                           
  2002                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2003  0060B6  0E04               	movlw	4
  2004  0060B8  0101               	movlb	1	; () banked
  2005  0060BA  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2006  0060BC  D003               	goto	l23608
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2010  0060BE  EC85  F041         	call	_ShowVersion	;wreg free
  2011                           
  2012                           ;main_MC50.c: 156:             }
  2013  0060C2  D7DF               	goto	l23592
  2014  0060C4                     l23608:
  2015                           
  2016                           ; BSR set to: 1
  2017                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2018  0060C4  EC1B  F041         	call	_readbutton	;wreg free
  2019                           
  2020                           ; BSR set to: 1
  2021                           ;main_MC50.c: 162:                 readRFButtons();
  2022  0060C8  EC3C  F02E         	call	_readRFButtons	;wreg free
  2023                           
  2024                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2025  0060CC  EC59  F049         	call	_getKeyPressed	;wreg free
  2026  0060D0  0101               	movlb	1	; () banked
  2027  0060D2  6F94               	movwf	_lastKey& (0+255),b
  2028                           
  2029                           ; BSR set to: 1
  2030                           ;main_MC50.c: 165:                 readInputs();
  2031  0060D4  EC51  F035         	call	_readInputs	;wreg free
  2032                           
  2033                           ;main_MC50.c: 166:                 ControlInputs();
  2034  0060D8  ECB0  F033         	call	_ControlInputs	;wreg free
  2035                           
  2036                           ;main_MC50.c: 167:                 ControlCurrent();
  2037  0060DC  EC8D  F030         	call	_ControlCurrent	;wreg free
  2038                           
  2039                           ;main_MC50.c: 168:                 controlVelocity();
  2040  0060E0  EC31  F027         	call	_controlVelocity	;wreg free
  2041                           
  2042                           ;main_MC50.c: 169:                 ControlMotor();
  2043  0060E4  ECFB  F024         	call	_ControlMotor	;wreg free
  2044                           
  2045                           ;main_MC50.c: 170:                 ControlLights();
  2046  0060E8  ECEF  F01C         	call	_ControlLights	;wreg free
  2047                           
  2048                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2049  0060EC  ECA2  F042         	call	_ControlCounterMoves	;wreg free
  2050                           
  2051                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2052  0060F0  0EED               	movlw	low _main_stateMachine
  2053  0060F2  0100               	movlb	0	; () banked
  2054  0060F4  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2055  0060F6  0E01               	movlw	high _main_stateMachine
  2056  0060F8  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2057  0060FA  EC50  F012         	call	_sm_execute_main	;wreg free
  2058                           
  2059                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2060  0060FE  0EE2               	movlw	low _controlGate_stateMachine
  2061  006100  0100               	movlb	0	; () banked
  2062  006102  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2063  006104  0E01               	movlw	high _controlGate_stateMachine
  2064  006106  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2065  006108  EC4A  F01B         	call	_sm_execute_ControlGate	;wreg free
  2066                           
  2067                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2068  00610C  0101               	movlb	1	; () banked
  2069  00610E  2994               	incf	_lastKey& (0+255),w,b
  2070  006110  B4D8               	btfsc	status,2,c
  2071  006112  D7B7               	goto	l23592
  2072                           
  2073                           ; BSR set to: 1
  2074                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2075  006114  EC00  F049         	call	_InitReceiver	;wreg free
  2076                           
  2077                           ; BSR set to: 1
  2078                           
  2079                           ;main_MC50.c: 185:         }
  2080  006118  D7B4               	goto	l23592
  2081  00611A                     __end_of_main:
  2082                           	callstack 0
  2083                           
  2084 ;; *************** function _sm_execute_main *****************
  2085 ;; Defined at:
  2086 ;;		line 26 in file "sm_Main_MC50.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  psm             2   21[BANK0 ] PTR struct .
  2089 ;;		 -> main_stateMachine(11), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 3F/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2101 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2105 ;;Total ram usage:        4 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 16
  2108 ;; This function calls:
  2109 ;;		_SetSegmentValueIntermitentMain
  2110 ;;		_SetSegmentValueMain
  2111 ;;		_load_New_Menu
  2112 ;;		_sm_execute_menuConfiguration
  2113 ;;		_sm_send_event
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text1
  2120  0024A0                     __ptext1:
  2121                           	callstack 0
  2122  0024A0                     _sm_execute_main:
  2123                           	callstack 14
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2127                           
  2128                           ; BSR set to: 1
  2129                           ;incstack = 0
  2130  0024A0  D053               	goto	l23094
  2131  0024A2                     l23070:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2135  0024A2  5185               	movf	_programmer_enable& (0+255),w,b
  2136  0024A4  A4D8               	btfss	status,2,c
  2137  0024A6  D066               	goto	l23096
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2141  0024A8  EE20 F004          	lfsr	2,4
  2142  0024AC  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2143  0024AE  26D9               	addwf	fsr2l,f,c
  2144  0024B0  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2145  0024B2  22DA               	addwfc	fsr2h,f,c
  2146  0024B4  0E06               	movlw	6
  2147  0024B6  18DE               	xorwf	postinc2,w,c
  2148  0024B8  10DE               	iorwf	postinc2,w,c
  2149  0024BA  A4D8               	btfss	status,2,c
  2150  0024BC  D006               	goto	l23076
  2151  0024BE                     u28170:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2155  0024BE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2156  0024C2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2157  0024C6  0E01               	movlw	1
  2158  0024C8  D01D               	goto	L2
  2159  0024CA                     l23076:
  2160                           
  2161                           ; BSR set to: 0
  2162  0024CA  EE20 F004          	lfsr	2,4
  2163  0024CE  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2164  0024D0  26D9               	addwf	fsr2l,f,c
  2165  0024D2  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2166  0024D4  22DA               	addwfc	fsr2h,f,c
  2167  0024D6  0E11               	movlw	17
  2168  0024D8  18DE               	xorwf	postinc2,w,c
  2169  0024DA  10DE               	iorwf	postinc2,w,c
  2170  0024DC  A4D8               	btfss	status,2,c
  2171  0024DE  D04A               	goto	l23096
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2175  0024E0  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2176  0024E4  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2177  0024E8  0E02               	movlw	2
  2178  0024EA  D00C               	goto	L2
  2179  0024EC                     l23080:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2183  0024EC  EE20 F004          	lfsr	2,4
  2184  0024F0  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2185  0024F2  26D9               	addwf	fsr2l,f,c
  2186  0024F4  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2187  0024F6  22DA               	addwfc	fsr2h,f,c
  2188  0024F8  0E07               	movlw	7
  2189  0024FA  18DE               	xorwf	postinc2,w,c
  2190  0024FC  10DE               	iorwf	postinc2,w,c
  2191  0024FE  A4D8               	btfss	status,2,c
  2192  002500  D039               	goto	l23096
  2193  002502  D00F               	goto	u28200
  2194  002504                     L2:
  2195  002504  6EDE               	movwf	postinc2,c
  2196  002506  0E00               	movlw	0
  2197  002508  6EDD               	movwf	postdec2,c
  2198  00250A  D034               	goto	l23096
  2199  00250C                     l23084:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2203  00250C  EE20 F004          	lfsr	2,4
  2204  002510  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2205  002512  26D9               	addwf	fsr2l,f,c
  2206  002514  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2207  002516  22DA               	addwfc	fsr2h,f,c
  2208  002518  0E07               	movlw	7
  2209  00251A  18DE               	xorwf	postinc2,w,c
  2210  00251C  10DE               	iorwf	postinc2,w,c
  2211  00251E  A4D8               	btfss	status,2,c
  2212  002520  D006               	goto	l23088
  2213  002522                     u28200:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2217  002522  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2218  002526  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2219  00252A  0E00               	movlw	0
  2220  00252C  D7EB               	goto	L2
  2221  00252E                     l23088:
  2222                           
  2223                           ; BSR set to: 0
  2224  00252E  EE20 F004          	lfsr	2,4
  2225  002532  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2226  002534  26D9               	addwf	fsr2l,f,c
  2227  002536  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2228  002538  22DA               	addwfc	fsr2h,f,c
  2229  00253A  0E06               	movlw	6
  2230  00253C  18DE               	xorwf	postinc2,w,c
  2231  00253E  10DE               	iorwf	postinc2,w,c
  2232  002540  A4D8               	btfss	status,2,c
  2233  002542  D018               	goto	l23096
  2234  002544  D7BC               	goto	u28170
  2235  002546                     l3048:
  2236                           
  2237                           ; BSR set to: 0
  2238  002546  D7FF               	goto	l3048
  2239  002548                     l23094:
  2240                           
  2241                           ; BSR set to: 0
  2242  002548  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2243  00254C  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2244  002550  50DF               	movf	indf2,w,c
  2245  002552  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2246  002554  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2247                           
  2248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2249                           ; Switch size 1, requested type "simple"
  2250                           ; Number of cases is 1, Range of values is 0 to 0
  2251                           ; switch strategies available:
  2252                           ; Name         Instructions Cycles
  2253                           ; simple_byte            4     3 (average)
  2254                           ;	Chosen strategy is simple_byte
  2255  002556  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2256  002558  0A00               	xorlw	0	; case 0
  2257  00255A  A4D8               	btfss	status,2,c
  2258  00255C  D7F4               	goto	l3048
  2259                           
  2260                           ; BSR set to: 0
  2261                           ; Switch size 1, requested type "simple"
  2262                           ; Number of cases is 3, Range of values is 0 to 2
  2263                           ; switch strategies available:
  2264                           ; Name         Instructions Cycles
  2265                           ; simple_byte           10     6 (average)
  2266                           ;	Chosen strategy is simple_byte
  2267  00255E  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2268  002560  0A00               	xorlw	0	; case 0
  2269  002562  B4D8               	btfsc	status,2,c
  2270  002564  D79E               	goto	l23070
  2271  002566  0A01               	xorlw	1	; case 1
  2272  002568  B4D8               	btfsc	status,2,c
  2273  00256A  D7C0               	goto	l23080
  2274  00256C  0A03               	xorlw	3	; case 2
  2275  00256E  B4D8               	btfsc	status,2,c
  2276  002570  D7CD               	goto	l23084
  2277  002572  D7E9               	goto	l3048
  2278  002574                     l23096:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2282  002574  0EED               	movlw	low _main_stateMachine
  2283  002576  6E12               	movwf	sm_send_event@psm^0,c
  2284  002578  0E01               	movlw	high _main_stateMachine
  2285  00257A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2286  00257C  0E00               	movlw	0
  2287  00257E  6E15               	movwf	(sm_send_event@event+1)^0,c
  2288  002580  0E00               	movlw	0
  2289  002582  6E14               	movwf	sm_send_event@event^0,c
  2290  002584  EC18  F042         	call	_sm_send_event	;wreg free
  2291                           
  2292                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2293  002588  D1F8               	goto	l23374
  2294  00258A                     l23098:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2298  00258A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2299  00258C  A4D8               	btfss	status,2,c
  2300  00258E  D016               	goto	l23110
  2301                           
  2302                           ; BSR set to: 0
  2303  002590  0E64               	movlw	100
  2304  002592  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2305  002594  D013               	goto	l23110
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2309  002596  0E01               	movlw	1
  2310  002598  EC81  F01E         	call	_load_New_Menu
  2311  00259C                     l23104:
  2312                           
  2313                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2314  00259C  0EED               	movlw	low _main_stateMachine
  2315  00259E  6E12               	movwf	sm_send_event@psm^0,c
  2316  0025A0  0E01               	movlw	high _main_stateMachine
  2317  0025A2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2318  0025A4  0E00               	movlw	0
  2319  0025A6  6E15               	movwf	(sm_send_event@event+1)^0,c
  2320  0025A8  0E06               	movlw	6
  2321  0025AA  6E14               	movwf	sm_send_event@event^0,c
  2322  0025AC  EC18  F042         	call	_sm_send_event	;wreg free
  2323                           
  2324                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2325  0025B0  0E01               	movlw	1
  2326  0025B2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2327                           
  2328                           ;sm_Main_MC50.c: 91:                 temp=0;
  2329  0025B4  0E00               	movlw	0
  2330  0025B6  0100               	movlb	0	; () banked
  2331  0025B8  6F80               	movwf	_temp& (0+255),b
  2332                           
  2333                           ;sm_Main_MC50.c: 92:             }
  2334  0025BA  0012               	return	
  2335  0025BC                     l23110:
  2336                           
  2337                           ; BSR set to: 0
  2338  0025BC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2339  0025BE  A4D8               	btfss	status,2,c
  2340  0025C0  D00B               	goto	l23118
  2341                           
  2342                           ; BSR set to: 0
  2343  0025C2  0E14               	movlw	20
  2344  0025C4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2345  0025C6  D008               	goto	l23118
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2349  0025C8  0E00               	movlw	0
  2350  0025CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2351  0025CC  0E10               	movlw	16
  2352  0025CE  EC0D  F049         	call	_SetSegmentValueMain
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;sm_Main_MC50.c: 98:                 temp=1;
  2356  0025D2  0E01               	movlw	1
  2357  0025D4  6F80               	movwf	_temp& (0+255),b
  2358                           
  2359                           ;sm_Main_MC50.c: 99:             }
  2360  0025D6  0012               	return	
  2361  0025D8                     l23118:
  2362                           
  2363                           ; BSR set to: 0
  2364  0025D8  0580               	decf	_temp& (0+255),w,b
  2365  0025DA  A4D8               	btfss	status,2,c
  2366  0025DC  D004               	goto	l23128
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2370  0025DE  0E00               	movlw	0
  2371  0025E0  EC81  F01E         	call	_load_New_Menu
  2372  0025E4  D7DB               	goto	l23104
  2373  0025E6                     l23128:
  2374                           
  2375                           ; BSR set to: 0
  2376  0025E6  0E27               	movlw	39
  2377  0025E8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2378  0025EA  A4D8               	btfss	status,2,c
  2379  0025EC  D007               	goto	l23140
  2380                           
  2381                           ; BSR set to: 0
  2382  0025EE  0E78               	movlw	120
  2383  0025F0  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2384  0025F2  D004               	goto	l23140
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2388  0025F4  0E0D               	movlw	13
  2389  0025F6  EC81  F01E         	call	_load_New_Menu
  2390  0025FA  D7D0               	goto	l23104
  2391  0025FC                     l23140:
  2392                           
  2393                           ; BSR set to: 0
  2394  0025FC  0E27               	movlw	39
  2395  0025FE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2396  002600  A4D8               	btfss	status,2,c
  2397  002602  D00B               	goto	l23148
  2398                           
  2399                           ; BSR set to: 0
  2400  002604  0E14               	movlw	20
  2401  002606  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2402  002608  D008               	goto	l23148
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2406  00260A  0E13               	movlw	19
  2407  00260C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2408  00260E  0E05               	movlw	5
  2409  002610  EC0D  F049         	call	_SetSegmentValueMain
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;sm_Main_MC50.c: 119:                 temp=2;
  2413  002614  0E02               	movlw	2
  2414  002616  6F80               	movwf	_temp& (0+255),b
  2415                           
  2416                           ;sm_Main_MC50.c: 120:             }
  2417  002618  0012               	return	
  2418  00261A                     l23148:
  2419                           
  2420                           ; BSR set to: 0
  2421  00261A  0E02               	movlw	2
  2422  00261C  1980               	xorwf	_temp& (0+255),w,b
  2423  00261E  A4D8               	btfss	status,2,c
  2424  002620  D004               	goto	l23158
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2428  002622  0E0C               	movlw	12
  2429  002624  EC81  F01E         	call	_load_New_Menu
  2430  002628  D7B9               	goto	l23104
  2431  00262A                     l23158:
  2432                           
  2433                           ; BSR set to: 0
  2434  00262A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2435  00262C  A4D8               	btfss	status,2,c
  2436  00262E  D009               	goto	l23164
  2437                           
  2438                           ; BSR set to: 0
  2439  002630  0101               	movlb	1	; () banked
  2440  002632  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2441  002634  A4D8               	btfss	status,2,c
  2442  002636  D005               	goto	l23164
  2443                           
  2444                           ; BSR set to: 1
  2445                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2446  002638  0E01               	movlw	1
  2447  00263A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2448                           
  2449                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2450  00263C  0E03               	movlw	3
  2451  00263E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2452                           
  2453                           ;sm_Main_MC50.c: 132:             }
  2454  002640  0012               	return	
  2455  002642                     l23164:
  2456  002642  0E17               	movlw	23
  2457  002644  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2458  002646  A4D8               	btfss	status,2,c
  2459  002648  D009               	goto	l23170
  2460  00264A  0101               	movlb	1	; () banked
  2461  00264C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2462  00264E  A4D8               	btfss	status,2,c
  2463  002650  D005               	goto	l23170
  2464                           
  2465                           ; BSR set to: 1
  2466                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2467  002652  0E01               	movlw	1
  2468  002654  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2469                           
  2470                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2471  002656  0E01               	movlw	1
  2472  002658  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2473                           
  2474                           ;sm_Main_MC50.c: 137:             }
  2475  00265A  0012               	return	
  2476  00265C                     l23170:
  2477  00265C  0101               	movlb	1	; () banked
  2478  00265E  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2479  002660  A4D8               	btfss	status,2,c
  2480  002662  D005               	goto	l23174
  2481                           
  2482                           ; BSR set to: 1
  2483                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2484  002664  0E00               	movlw	0
  2485  002666  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2486                           
  2487                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2488  002668  0E00               	movlw	0
  2489  00266A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2490                           
  2491                           ;sm_Main_MC50.c: 142:             }
  2492  00266C  0012               	return	
  2493  00266E                     l23174:
  2494                           
  2495                           ; BSR set to: 1
  2496  00266E  0E06               	movlw	6
  2497  002670  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2498  002672  B4D8               	btfsc	status,2,c
  2499  002674  D004               	goto	u28380
  2500                           
  2501                           ; BSR set to: 1
  2502  002676  0E05               	movlw	5
  2503  002678  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2504  00267A  A4D8               	btfss	status,2,c
  2505  00267C  D015               	goto	l23188
  2506  00267E                     u28380:
  2507                           
  2508                           ; BSR set to: 1
  2509  00267E  0E63               	movlw	99
  2510  002680  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2511  002682  D012               	goto	l23188
  2512                           
  2513                           ; BSR set to: 1
  2514                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2515  002684  0E0C               	movlw	12
  2516  002686  EC81  F01E         	call	_load_New_Menu
  2517                           
  2518                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2519  00268A  0EED               	movlw	low _main_stateMachine
  2520  00268C  6E12               	movwf	sm_send_event@psm^0,c
  2521  00268E  0E01               	movlw	high _main_stateMachine
  2522  002690  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2523  002692  0E00               	movlw	0
  2524  002694  6E15               	movwf	(sm_send_event@event+1)^0,c
  2525  002696  0E06               	movlw	6
  2526  002698  6E14               	movwf	sm_send_event@event^0,c
  2527  00269A  EC18  F042         	call	_sm_send_event	;wreg free
  2528                           
  2529                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2530  00269E  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2531                           
  2532                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2533  0026A2  0E01               	movlw	1
  2534  0026A4  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2535                           
  2536                           ;sm_Main_MC50.c: 149:             }
  2537  0026A6  0012               	return	
  2538  0026A8                     l23188:
  2539                           
  2540                           ; BSR set to: 1
  2541  0026A8  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2542  0026AA  D005               	goto	u28400
  2543  0026AC  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2544  0026AE  E111               	bnz	l3060
  2545  0026B0  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2546  0026B2  B0D8               	btfsc	status,0,c
  2547  0026B4  0012               	return	
  2548  0026B6                     u28400:
  2549                           
  2550                           ; BSR set to: 1
  2551                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2552  0026B6  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2553  0026B8  A4D8               	btfss	status,2,c
  2554  0026BA  D006               	goto	l23194
  2555                           
  2556                           ; BSR set to: 1
  2557                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2558  0026BC  0E0C               	movlw	12
  2559  0026BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2560  0026C0  0E0F               	movlw	15
  2561  0026C2  EC0D  F049         	call	_SetSegmentValueMain
  2562                           
  2563                           ;sm_Main_MC50.c: 157:                     }
  2564  0026C6  0012               	return	
  2565  0026C8                     l23194:
  2566                           
  2567                           ; BSR set to: 1
  2568                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2569  0026C8  0E18               	movlw	24
  2570  0026CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2571  0026CC  0E18               	movlw	24
  2572  0026CE  EC0D  F049         	call	_SetSegmentValueMain
  2573  0026D2                     l3060:
  2574                           
  2575                           ; BSR set to: 1
  2576  0026D2  0012               	return	
  2577  0026D4                     l23196:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2581  0026D4  0EBD               	movlw	low _menuConfiguration_stateMachine
  2582  0026D6  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2583  0026D8  0E02               	movlw	high _menuConfiguration_stateMachine
  2584  0026DA  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2585  0026DC  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2586                           
  2587                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2588  0026E0  0012               	return	
  2589  0026E2                     l23198:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2593  0026E2  0E00               	movlw	0
  2594  0026E4  0101               	movlb	1	; () banked
  2595  0026E6  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2599  0026E8  0E04               	movlw	4
  2600  0026EA  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2601  0026EC  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2602  0026EE  A4D8               	btfss	status,2,c
  2603  0026F0  D013               	goto	l3083
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2607  0026F2  0100               	movlb	0	; () banked
  2608  0026F4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2609  0026F6  A4D8               	btfss	status,2,c
  2610  0026F8  D007               	goto	l23208
  2611                           
  2612                           ; BSR set to: 0
  2613  0026FA  0101               	movlb	1	; () banked
  2614  0026FC  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2615  0026FE  A4D8               	btfss	status,2,c
  2616  002700  D003               	goto	l23208
  2617  002702                     u28440:
  2618                           
  2619                           ; BSR set to: 1
  2620                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2621  002702  0E01               	movlw	1
  2622  002704  6F8B               	movwf	_aux_in_auto_close& (0+255),b
  2623                           
  2624                           ;sm_Main_MC50.c: 182:                 }
  2625  002706  D008               	goto	l3083
  2626  002708                     l23208:
  2627  002708  0100               	movlb	0	; () banked
  2628  00270A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2629  00270C  B4D8               	btfsc	status,2,c
  2630  00270E  D004               	goto	l3083
  2631                           
  2632                           ; BSR set to: 0
  2633  002710  0101               	movlb	1	; () banked
  2634  002712  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2635  002714  A4D8               	btfss	status,2,c
  2636  002716  D7F5               	goto	u28440
  2637  002718                     l3083:
  2638                           
  2639                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2640  002718  0101               	movlb	1	; () banked
  2641  00271A  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2642  00271C  A4D8               	btfss	status,2,c
  2643  00271E  D069               	goto	l3097
  2644                           
  2645                           ; BSR set to: 1
  2646  002720  0E04               	movlw	4
  2647  002722  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2648  002724  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2649  002726  A4D8               	btfss	status,2,c
  2650  002728  D003               	goto	u28490
  2651                           
  2652                           ; BSR set to: 1
  2653  00272A  518B               	movf	_aux_in_auto_close& (0+255),w,b
  2654  00272C  B4D8               	btfsc	status,2,c
  2655  00272E  D008               	goto	u28510
  2656  002730                     u28490:
  2657                           
  2658                           ; BSR set to: 1
  2659  002730  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2660  002732  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2661  002734  B4D8               	btfsc	status,2,c
  2662  002736  D004               	goto	u28510
  2663                           
  2664                           ; BSR set to: 1
  2665  002738  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
  2666  00273A  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2667  00273C  A4D8               	btfss	status,2,c
  2668  00273E  D059               	goto	l3097
  2669  002740                     u28510:
  2670                           
  2671                           ; BSR set to: 1
  2672                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2673  002740  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2674  002742  A4D8               	btfss	status,2,c
  2675  002744  D015               	goto	l23236
  2676                           
  2677                           ; BSR set to: 1
  2678  002746  0E64               	movlw	100
  2679  002748  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2680  00274A  D012               	goto	l23236
  2681                           
  2682                           ; BSR set to: 1
  2683                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2684  00274C  0E01               	movlw	1
  2685  00274E  EC81  F01E         	call	_load_New_Menu
  2686  002752                     l23230:
  2687                           
  2688                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2689  002752  0EED               	movlw	low _main_stateMachine
  2690  002754  6E12               	movwf	sm_send_event@psm^0,c
  2691  002756  0E01               	movlw	high _main_stateMachine
  2692  002758  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2693  00275A  0E00               	movlw	0
  2694  00275C  6E15               	movwf	(sm_send_event@event+1)^0,c
  2695  00275E  0E06               	movlw	6
  2696  002760  6E14               	movwf	sm_send_event@event^0,c
  2697  002762  EC18  F042         	call	_sm_send_event	;wreg free
  2698                           
  2699                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2700  002766  0E01               	movlw	1
  2701  002768  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2702                           
  2703                           ;sm_Main_MC50.c: 200:                     temp=0;
  2704  00276A  0E00               	movlw	0
  2705  00276C  0100               	movlb	0	; () banked
  2706  00276E  D037               	goto	L4
  2707  002770                     l23236:
  2708                           
  2709                           ; BSR set to: 1
  2710  002770  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2711  002772  A4D8               	btfss	status,2,c
  2712  002774  D00A               	goto	l23244
  2713                           
  2714                           ; BSR set to: 1
  2715  002776  0E14               	movlw	20
  2716  002778  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2717  00277A  D007               	goto	l23244
  2718                           
  2719                           ; BSR set to: 1
  2720                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2721  00277C  0E00               	movlw	0
  2722  00277E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2723  002780  0E10               	movlw	16
  2724  002782  EC0D  F049         	call	_SetSegmentValueMain
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;sm_Main_MC50.c: 206:                     temp=1;
  2728  002786  0E01               	movlw	1
  2729  002788  D02A               	goto	L4
  2730  00278A                     l23244:
  2731                           
  2732                           ; BSR set to: 1
  2733  00278A  0100               	movlb	0	; () banked
  2734  00278C  0580               	decf	_temp& (0+255),w,b
  2735  00278E  A4D8               	btfss	status,2,c
  2736  002790  D00E               	goto	l23258
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2740  002792  0E00               	movlw	0
  2741  002794  EC81  F01E         	call	_load_New_Menu
  2742                           
  2743                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2744  002798  0E01               	movlw	1
  2745  00279A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2746                           
  2747                           ;sm_Main_MC50.c: 213:                     temp=0;
  2748  00279C  0E00               	movlw	0
  2749  00279E  0100               	movlb	0	; () banked
  2750  0027A0  6F80               	movwf	_temp& (0+255),b
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2754  0027A2  0E00               	movlw	0
  2755  0027A4  0101               	movlb	1	; () banked
  2756  0027A6  6FEE               	movwf	(_main_stateMachine+1)& (0+255),b
  2757  0027A8  0E01               	movlw	1
  2758  0027AA  6FED               	movwf	_main_stateMachine& (0+255),b
  2759  0027AC  0012               	return	
  2760  0027AE                     l23258:
  2761                           
  2762                           ; BSR set to: 0
  2763  0027AE  0E27               	movlw	39
  2764  0027B0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2765  0027B2  A4D8               	btfss	status,2,c
  2766  0027B4  D007               	goto	l23270
  2767                           
  2768                           ; BSR set to: 0
  2769  0027B6  0E78               	movlw	120
  2770  0027B8  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2771  0027BA  D004               	goto	l23270
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2775  0027BC  0E0D               	movlw	13
  2776  0027BE  EC81  F01E         	call	_load_New_Menu
  2777  0027C2  D7C7               	goto	l23230
  2778  0027C4                     l23270:
  2779                           
  2780                           ; BSR set to: 0
  2781  0027C4  0E27               	movlw	39
  2782  0027C6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2783  0027C8  A4D8               	btfss	status,2,c
  2784  0027CA  D00B               	goto	l23278
  2785                           
  2786                           ; BSR set to: 0
  2787  0027CC  0E14               	movlw	20
  2788  0027CE  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2789  0027D0  D008               	goto	l23278
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2793  0027D2  0E13               	movlw	19
  2794  0027D4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2795  0027D6  0E05               	movlw	5
  2796  0027D8  EC0D  F049         	call	_SetSegmentValueMain
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;sm_Main_MC50.c: 229:                 temp=2;
  2800  0027DC  0E02               	movlw	2
  2801  0027DE                     L4:
  2802  0027DE  6F80               	movwf	_temp& (0+255),b
  2803                           
  2804                           ;sm_Main_MC50.c: 230:             }
  2805  0027E0  D008               	goto	l3097
  2806  0027E2                     l23278:
  2807                           
  2808                           ; BSR set to: 0
  2809  0027E2  0E02               	movlw	2
  2810  0027E4  1980               	xorwf	_temp& (0+255),w,b
  2811  0027E6  A4D8               	btfss	status,2,c
  2812  0027E8  D004               	goto	l3097
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2816  0027EA  0E0C               	movlw	12
  2817  0027EC  EC81  F01E         	call	_load_New_Menu
  2818  0027F0  D6D5               	goto	l23104
  2819  0027F2                     l3097:
  2820                           
  2821                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2822                           
  2823                           ; BSR set to: 0
  2824  0027F2  0101               	movlb	1	; () banked
  2825  0027F4  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2826  0027F6  D005               	goto	u28620
  2827  0027F8  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2828  0027FA  E102               	bnz	u28621
  2829  0027FC  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2830  0027FE  B0D8               	btfsc	status,0,c
  2831  002800                     u28621:
  2832  002800  0012               	return	
  2833  002802                     u28620:
  2834                           
  2835                           ; BSR set to: 1
  2836  002802  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2837  002804  B4D8               	btfsc	status,2,c
  2838  002806  0012               	return	
  2839                           
  2840                           ; BSR set to: 1
  2841  002808  0E27               	movlw	39
  2842  00280A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2843  00280C  B4D8               	btfsc	status,2,c
  2844  00280E  0012               	return	
  2845                           
  2846                           ; BSR set to: 1
  2847                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2848  002810  0E03               	movlw	3
  2849  002812  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2850  002814  A4D8               	btfss	status,2,c
  2851  002816  D011               	goto	l23304
  2852                           
  2853                           ; BSR set to: 1
  2854                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2855  002818  0E12               	movlw	18
  2856  00281A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2857  00281C  0E00               	movlw	0
  2858  00281E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2859  002820  0E0A               	movlw	10
  2860  002822  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2861  002824  0E0C               	movlw	12
  2862  002826  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  2863  00282A                     l23300:
  2864                           
  2865                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2866  00282A  0E00               	movlw	0
  2867  00282C  0101               	movlb	1	; () banked
  2868  00282E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2869  002830  0E04               	movlw	4
  2870  002832  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2871                           
  2872                           ; BSR set to: 1
  2873                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2874  002834  0E00               	movlw	0
  2875  002836  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2876                           
  2877                           ;sm_Main_MC50.c: 252:                 }
  2878  002838  0012               	return	
  2879  00283A                     l23304:
  2880                           
  2881                           ; BSR set to: 1
  2882  00283A  0E02               	movlw	2
  2883  00283C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2884  00283E  B4D8               	btfsc	status,2,c
  2885  002840  D003               	goto	u28670
  2886                           
  2887                           ; BSR set to: 1
  2888  002842  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2889  002844  A4D8               	btfss	status,2,c
  2890  002846  D00A               	goto	l23314
  2891  002848                     u28670:
  2892                           
  2893                           ; BSR set to: 1
  2894                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2895  002848  0E10               	movlw	16
  2896  00284A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2897  00284C  0E00               	movlw	0
  2898  00284E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2899  002850  0E0A               	movlw	10
  2900  002852  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2901  002854  0E00               	movlw	0
  2902  002856  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  2903  00285A  D7E7               	goto	l23300
  2904  00285C                     l23314:
  2905                           
  2906                           ; BSR set to: 1
  2907  00285C  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2908  00285E  A4D8               	btfss	status,2,c
  2909  002860  D00F               	goto	l23320
  2910                           
  2911                           ; BSR set to: 1
  2912  002862  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
  2913  002864  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2914  002866  A4D8               	btfss	status,2,c
  2915  002868  D00B               	goto	l23320
  2916                           
  2917                           ; BSR set to: 1
  2918                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2919  00286A  0EED               	movlw	low _main_stateMachine
  2920  00286C  6E12               	movwf	sm_send_event@psm^0,c
  2921  00286E  0E01               	movlw	high _main_stateMachine
  2922  002870  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2923  002872  0E00               	movlw	0
  2924  002874  6E15               	movwf	(sm_send_event@event+1)^0,c
  2925  002876  0E07               	movlw	7
  2926  002878  6E14               	movwf	sm_send_event@event^0,c
  2927  00287A  EC18  F042         	call	_sm_send_event	;wreg free
  2928                           
  2929                           ;sm_Main_MC50.c: 264:                 }
  2930  00287E  0012               	return	
  2931  002880                     l23320:
  2932                           
  2933                           ; BSR set to: 1
  2934  002880  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2935  002882  A4D8               	btfss	status,2,c
  2936  002884  D074               	goto	l23370
  2937                           
  2938                           ; BSR set to: 1
  2939  002886  0E04               	movlw	4
  2940  002888  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2941  00288A  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2942  00288C  A4D8               	btfss	status,2,c
  2943  00288E  D06F               	goto	l23370
  2944                           
  2945                           ; BSR set to: 1
  2946                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2947  002890  0100               	movlb	0	; () banked
  2948  002892  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2949  002894  B4D8               	btfsc	status,2,c
  2950  002896  D00B               	goto	u28750
  2951                           
  2952                           ; BSR set to: 0
  2953  002898  0101               	movlb	1	; () banked
  2954  00289A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2955  00289C  B4D8               	btfsc	status,2,c
  2956  00289E  D007               	goto	u28750
  2957                           
  2958                           ; BSR set to: 1
  2959  0028A0  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2960  0028A2  B4D8               	btfsc	status,2,c
  2961  0028A4  D013               	goto	u28790
  2962                           
  2963                           ; BSR set to: 1
  2964  0028A6  0E03               	movlw	3
  2965  0028A8  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2966  0028AA  B4D8               	btfsc	status,2,c
  2967  0028AC  D00F               	goto	u28790
  2968  0028AE                     u28750:
  2969  0028AE  0100               	movlb	0	; () banked
  2970  0028B0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2971  0028B2  A4D8               	btfss	status,2,c
  2972  0028B4  D026               	goto	l23348
  2973                           
  2974                           ; BSR set to: 0
  2975  0028B6  0101               	movlb	1	; () banked
  2976  0028B8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2977  0028BA  A4D8               	btfss	status,2,c
  2978  0028BC  D022               	goto	l23348
  2979                           
  2980                           ; BSR set to: 1
  2981  0028BE  0E02               	movlw	2
  2982  0028C0  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2983  0028C2  B4D8               	btfsc	status,2,c
  2984  0028C4  D01E               	goto	l23348
  2985                           
  2986                           ; BSR set to: 1
  2987  0028C6  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2988  0028C8  B4D8               	btfsc	status,2,c
  2989  0028CA  D01B               	goto	l23348
  2990  0028CC                     u28790:
  2991                           
  2992                           ; BSR set to: 1
  2993                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  2994  0028CC  0E00               	movlw	0
  2995  0028CE  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2996  0028D0  0E0A               	movlw	10
  2997  0028D2  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2998                           
  2999                           ; BSR set to: 1
  3000                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3001  0028D4  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3002  0028D6  A4D8               	btfss	status,2,c
  3003  0028D8  D00A               	goto	l23346
  3004                           
  3005                           ; BSR set to: 1
  3006                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3007  0028DA  0E10               	movlw	16
  3008  0028DC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3009  0028DE  0E00               	movlw	0
  3010  0028E0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3011  0028E2  0E0A               	movlw	10
  3012  0028E4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3013  0028E6  0E0A               	movlw	10
  3014  0028E8  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  3015                           
  3016                           ;sm_Main_MC50.c: 282:                         }
  3017  0028EC  0012               	return	
  3018  0028EE                     l23346:
  3019                           
  3020                           ; BSR set to: 1
  3021                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3022  0028EE  0E0F               	movlw	15
  3023  0028F0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3024  0028F2  0E00               	movlw	0
  3025  0028F4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3026  0028F6  0E0A               	movlw	10
  3027  0028F8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3028  0028FA  0E0A               	movlw	10
  3029  0028FC  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  3030  002900  0012               	return	
  3031  002902                     l23348:
  3032  002902  0100               	movlb	0	; () banked
  3033  002904  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3034  002906  B4D8               	btfsc	status,2,c
  3035  002908  D008               	goto	u28830
  3036                           
  3037                           ; BSR set to: 0
  3038  00290A  0101               	movlb	1	; () banked
  3039  00290C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3040  00290E  B4D8               	btfsc	status,2,c
  3041  002910  D004               	goto	u28830
  3042                           
  3043                           ; BSR set to: 1
  3044  002912  0E02               	movlw	2
  3045  002914  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3046  002916  B4D8               	btfsc	status,2,c
  3047  002918  D00C               	goto	u28860
  3048  00291A                     u28830:
  3049  00291A  0100               	movlb	0	; () banked
  3050  00291C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3051  00291E  A4D8               	btfss	status,2,c
  3052  002920  D016               	goto	l23364
  3053                           
  3054                           ; BSR set to: 0
  3055  002922  0101               	movlb	1	; () banked
  3056  002924  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3057  002926  A4D8               	btfss	status,2,c
  3058  002928  D012               	goto	l23364
  3059                           
  3060                           ; BSR set to: 1
  3061  00292A  0E02               	movlw	2
  3062  00292C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3063  00292E  A4D8               	btfss	status,2,c
  3064  002930  D00E               	goto	l23364
  3065  002932                     u28860:
  3066                           
  3067                           ; BSR set to: 1
  3068                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3069  002932  0E00               	movlw	0
  3070  002934  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3071  002936  0E0A               	movlw	10
  3072  002938  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3076  00293A  0E10               	movlw	16
  3077  00293C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3078  00293E  0E00               	movlw	0
  3079  002940  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3080  002942  0E0A               	movlw	10
  3081  002944  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3082  002946  0E0A               	movlw	10
  3083  002948  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  3084                           
  3085                           ;sm_Main_MC50.c: 298:                     }
  3086  00294C  0012               	return	
  3087  00294E                     l23364:
  3088  00294E  0101               	movlb	1	; () banked
  3089  002950  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3090  002952  A4D8               	btfss	status,2,c
  3091  002954  D006               	goto	l23368
  3092                           
  3093                           ; BSR set to: 1
  3094                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3095  002956  0E00               	movlw	0
  3096  002958  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3097  00295A  0E0F               	movlw	15
  3098  00295C  EC0D  F049         	call	_SetSegmentValueMain
  3099                           
  3100                           ;sm_Main_MC50.c: 304:                     }
  3101  002960  0012               	return	
  3102  002962                     l23368:
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3106  002962  0E18               	movlw	24
  3107  002964  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3108  002966  0E18               	movlw	24
  3109  002968  EC0D  F049         	call	_SetSegmentValueMain
  3110  00296C  0012               	return	
  3111  00296E                     l23370:
  3112                           
  3113                           ; BSR set to: 1
  3114                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3115  00296E  0E18               	movlw	24
  3116  002970  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3117  002972  0E18               	movlw	24
  3118  002974  EC0D  F049         	call	_SetSegmentValueMain
  3119  002978  0012               	return	
  3120  00297A                     l23374:
  3121  00297A  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3122  00297E  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3123  002982  50DF               	movf	indf2,w,c
  3124  002984  0100               	movlb	0	; () banked
  3125  002986  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3126  002988  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3127                           
  3128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3129                           ; Switch size 1, requested type "simple"
  3130                           ; Number of cases is 1, Range of values is 0 to 0
  3131                           ; switch strategies available:
  3132                           ; Name         Instructions Cycles
  3133                           ; simple_byte            4     3 (average)
  3134                           ;	Chosen strategy is simple_byte
  3135  00298A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3136  00298C  0A00               	xorlw	0	; case 0
  3137  00298E  A4D8               	btfss	status,2,c
  3138  002990  0012               	return	
  3139                           
  3140                           ; BSR set to: 0
  3141                           ; Switch size 1, requested type "simple"
  3142                           ; Number of cases is 3, Range of values is 0 to 2
  3143                           ; switch strategies available:
  3144                           ; Name         Instructions Cycles
  3145                           ; simple_byte           10     6 (average)
  3146                           ;	Chosen strategy is simple_byte
  3147  002992  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3148  002994  0A00               	xorlw	0	; case 0
  3149  002996  B4D8               	btfsc	status,2,c
  3150  002998  D5F8               	goto	l23098
  3151  00299A  0A01               	xorlw	1	; case 1
  3152  00299C  B4D8               	btfsc	status,2,c
  3153  00299E  D69A               	goto	l23196
  3154  0029A0  0A03               	xorlw	3	; case 2
  3155  0029A2  A4D8               	btfss	status,2,c
  3156  0029A4  0012               	return	
  3157  0029A6  D69D               	goto	l23198
  3158  0029A8                     __end_of_sm_execute_main:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _sm_execute_menuConfiguration *****************
  3162 ;; Defined at:
  3163 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  psm             2   17[BANK0 ] PTR struct .
  3166 ;;		 -> menuConfiguration_stateMachine(11), 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 3F/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3178 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3180 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3181 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;Total ram usage:        4 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 15
  3185 ;; This function calls:
  3186 ;;		_ClearFlag_rfCMD
  3187 ;;		_ResetDefaultMemory
  3188 ;;		_SaveNVM_VarSystem
  3189 ;;		_SetSegmentValueIntermitentMain
  3190 ;;		_SetSegmentValueMain
  3191 ;;		___lbdiv
  3192 ;;		___lldiv
  3193 ;;		___lmul
  3194 ;;		___lwdiv
  3195 ;;		_controlLearnDigit
  3196 ;;		_controlSaveRemote
  3197 ;;		_controlSelectRemote
  3198 ;;		_load_New_Menu
  3199 ;;		_setValueToEdit
  3200 ;;		_sm_send_event
  3201 ;; This function is called by:
  3202 ;;		_sm_execute_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text2
  3207  000F22                     __ptext2:
  3208                           	callstack 0
  3209  000F22                     _sm_execute_menuConfiguration:
  3210                           	callstack 14
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3214                           
  3215                           ;incstack = 0
  3216  000F22  D0A2               	goto	l22452
  3217  000F24                     l22394:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3221  000F24  EE20 F004          	lfsr	2,4
  3222  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3223  000F2A  26D9               	addwf	fsr2l,f,c
  3224  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3225  000F2E  22DA               	addwfc	fsr2h,f,c
  3226  000F30  04DE               	decf	postinc2,w,c
  3227  000F32  10DE               	iorwf	postinc2,w,c
  3228  000F34  A4D8               	btfss	status,2,c
  3229  000F36  D006               	goto	l22398
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3233  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3234  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3235  000F40  0E01               	movlw	1
  3236  000F42  D04C               	goto	L9
  3237  000F44                     l22398:
  3238                           
  3239                           ; BSR set to: 0
  3240  000F44  EE20 F004          	lfsr	2,4
  3241  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3242  000F4A  26D9               	addwf	fsr2l,f,c
  3243  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3244  000F4E  22DA               	addwfc	fsr2h,f,c
  3245  000F50  0E05               	movlw	5
  3246  000F52  18DE               	xorwf	postinc2,w,c
  3247  000F54  10DE               	iorwf	postinc2,w,c
  3248  000F56  A4D8               	btfss	status,2,c
  3249  000F58  D006               	goto	l22402
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3253  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3254  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3255  000F62  0E03               	movlw	3
  3256  000F64  D03B               	goto	L9
  3257  000F66                     l22402:
  3258                           
  3259                           ; BSR set to: 0
  3260  000F66  EE20 F004          	lfsr	2,4
  3261  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3262  000F6C  26D9               	addwf	fsr2l,f,c
  3263  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3264  000F70  22DA               	addwfc	fsr2h,f,c
  3265  000F72  0E08               	movlw	8
  3266  000F74  18DE               	xorwf	postinc2,w,c
  3267  000F76  10DE               	iorwf	postinc2,w,c
  3268  000F78  A4D8               	btfss	status,2,c
  3269  000F7A  D006               	goto	l22406
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3273  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3274  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3275  000F84  0E04               	movlw	4
  3276  000F86  D02A               	goto	L9
  3277  000F88                     l22406:
  3278                           
  3279                           ; BSR set to: 0
  3280  000F88  EE20 F004          	lfsr	2,4
  3281  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3282  000F8E  26D9               	addwf	fsr2l,f,c
  3283  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3284  000F92  22DA               	addwfc	fsr2h,f,c
  3285  000F94  0E14               	movlw	20
  3286  000F96  18DE               	xorwf	postinc2,w,c
  3287  000F98  10DE               	iorwf	postinc2,w,c
  3288  000F9A  A4D8               	btfss	status,2,c
  3289  000F9C  D087               	goto	l22454
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3293  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3294  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3295  000FA6  0E06               	movlw	6
  3296  000FA8  D019               	goto	L9
  3297  000FAA                     l22410:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3301  000FAA  EE20 F004          	lfsr	2,4
  3302  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3303  000FB0  26D9               	addwf	fsr2l,f,c
  3304  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3305  000FB4  22DA               	addwfc	fsr2h,f,c
  3306  000FB6  0E02               	movlw	2
  3307  000FB8  18DE               	xorwf	postinc2,w,c
  3308  000FBA  10DE               	iorwf	postinc2,w,c
  3309  000FBC  A4D8               	btfss	status,2,c
  3310  000FBE  D006               	goto	l22414
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3314  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3315  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3316  000FC8  0E02               	movlw	2
  3317  000FCA  D008               	goto	L9
  3318  000FCC                     l22414:
  3319                           
  3320                           ; BSR set to: 0
  3321  000FCC  EE20 F004          	lfsr	2,4
  3322  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3323  000FD2  26D9               	addwf	fsr2l,f,c
  3324  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3325  000FD6  22DA               	addwfc	fsr2h,f,c
  3326  000FD8  0E03               	movlw	3
  3327  000FDA  D03B               	goto	L124
  3328  000FDC                     L9:
  3329  000FDC  6EDE               	movwf	postinc2,c
  3330  000FDE  0E00               	movlw	0
  3331  000FE0  6EDD               	movwf	postdec2,c
  3332  000FE2  D064               	goto	l22454
  3333  000FE4                     l22422:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3337  000FE4  EE20 F004          	lfsr	2,4
  3338  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3339  000FEA  26D9               	addwf	fsr2l,f,c
  3340  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3341  000FEE  22DA               	addwfc	fsr2h,f,c
  3342  000FF0  0E04               	movlw	4
  3343  000FF2  18DE               	xorwf	postinc2,w,c
  3344  000FF4  10DE               	iorwf	postinc2,w,c
  3345  000FF6  A4D8               	btfss	status,2,c
  3346  000FF8  D7E9               	goto	l22414
  3347  000FFA  D02F               	goto	u27010
  3348  000FFC                     l22430:
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3352  000FFC  EE20 F004          	lfsr	2,4
  3353  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3354  001002  26D9               	addwf	fsr2l,f,c
  3355  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3356  001006  22DA               	addwfc	fsr2h,f,c
  3357  001008  0E08               	movlw	8
  3358  00100A  18DE               	xorwf	postinc2,w,c
  3359  00100C  10DE               	iorwf	postinc2,w,c
  3360  00100E  A4D8               	btfss	status,2,c
  3361  001010  D7DD               	goto	l22414
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3365  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3366  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3367  00101A  0E05               	movlw	5
  3368  00101C  D7DF               	goto	L9
  3369  00101E                     l22438:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3373  00101E  EE20 F004          	lfsr	2,4
  3374  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3375  001024  26D9               	addwf	fsr2l,f,c
  3376  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3377  001028  22DA               	addwfc	fsr2h,f,c
  3378  00102A  0E09               	movlw	9
  3379  00102C  18DE               	xorwf	postinc2,w,c
  3380  00102E  10DE               	iorwf	postinc2,w,c
  3381  001030  A4D8               	btfss	status,2,c
  3382  001032  D008               	goto	l22446
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3386  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3387  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3388  00103C  0E04               	movlw	4
  3389  00103E  6EDE               	movwf	postinc2,c
  3390  001040  0E00               	movlw	0
  3391  001042  6EDD               	movwf	postdec2,c
  3392  001044                     l22446:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3396  001044  EE20 F004          	lfsr	2,4
  3397  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3398  00104A  26D9               	addwf	fsr2l,f,c
  3399  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3400  00104E  22DA               	addwfc	fsr2h,f,c
  3401  001050  0E04               	movlw	4
  3402  001052                     L124:
  3403  001052  18DE               	xorwf	postinc2,w,c
  3404  001054  10DE               	iorwf	postinc2,w,c
  3405  001056  A4D8               	btfss	status,2,c
  3406  001058  D029               	goto	l22454
  3407  00105A                     u27010:
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3411  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3412  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3413  001062  0E00               	movlw	0
  3414  001064  D7BB               	goto	L9
  3415  001066                     l3228:
  3416                           
  3417                           ; BSR set to: 0
  3418  001066  D7FF               	goto	l3228
  3419  001068                     l22452:
  3420                           
  3421                           ; BSR set to: 0
  3422  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3423  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3424  001070  50DF               	movf	indf2,w,c
  3425  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3426  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3427                           
  3428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3429                           ; Switch size 1, requested type "simple"
  3430                           ; Number of cases is 1, Range of values is 0 to 0
  3431                           ; switch strategies available:
  3432                           ; Name         Instructions Cycles
  3433                           ; simple_byte            4     3 (average)
  3434                           ;	Chosen strategy is simple_byte
  3435  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3436  001078  0A00               	xorlw	0	; case 0
  3437  00107A  A4D8               	btfss	status,2,c
  3438  00107C  D7F4               	goto	l3228
  3439                           
  3440                           ; BSR set to: 0
  3441                           ; Switch size 1, requested type "simple"
  3442                           ; Number of cases is 7, Range of values is 0 to 6
  3443                           ; switch strategies available:
  3444                           ; Name         Instructions Cycles
  3445                           ; simple_byte           22    12 (average)
  3446                           ;	Chosen strategy is simple_byte
  3447  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3448  001080  0A00               	xorlw	0	; case 0
  3449  001082  B4D8               	btfsc	status,2,c
  3450  001084  D74F               	goto	l22394
  3451  001086  0A01               	xorlw	1	; case 1
  3452  001088  B4D8               	btfsc	status,2,c
  3453  00108A  D78F               	goto	l22410
  3454  00108C  0A03               	xorlw	3	; case 2
  3455  00108E  B4D8               	btfsc	status,2,c
  3456  001090  D7D9               	goto	l22446
  3457  001092  0A01               	xorlw	1	; case 3
  3458  001094  B4D8               	btfsc	status,2,c
  3459  001096  D7A6               	goto	l22422
  3460  001098  0A07               	xorlw	7	; case 4
  3461  00109A  B4D8               	btfsc	status,2,c
  3462  00109C  D7AF               	goto	l22430
  3463  00109E  0A01               	xorlw	1	; case 5
  3464  0010A0  B4D8               	btfsc	status,2,c
  3465  0010A2  D7BD               	goto	l22438
  3466  0010A4  0A03               	xorlw	3	; case 6
  3467  0010A6  B4D8               	btfsc	status,2,c
  3468  0010A8  D7CD               	goto	l22446
  3469  0010AA  D7DD               	goto	l3228
  3470  0010AC                     l22454:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3474  0010AC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3475  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3476  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3477  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3478  0010B4  0E00               	movlw	0
  3479  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3480  0010B8  0E00               	movlw	0
  3481  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3482  0010BC  EC18  F042         	call	_sm_send_event	;wreg free
  3483                           
  3484                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3485  0010C0  D3BF               	goto	l22766
  3486  0010C2                     l22456:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3490  0010C2  0E06               	movlw	6
  3491  0010C4  0101               	movlb	1	; () banked
  3492  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3493  0010C8  A4D8               	btfss	status,2,c
  3494  0010CA  D02F               	goto	l22466
  3495                           
  3496                           ; BSR set to: 1
  3497                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3498  0010CC  0E00               	movlw	0
  3499  0010CE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3500  0010D0  0EC8               	movlw	200
  3501  0010D2  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3502                           
  3503                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3504  0010D4  0E01               	movlw	1
  3505  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3506                           
  3507                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3508  0010D8  0E00               	movlw	0
  3509  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3510                           
  3511                           ; BSR set to: 1
  3512                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3513  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3514  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3515  0010E2  ECCA  F00F         	call	_setValueToEdit
  3516  0010E6  0900               	iorlw	0
  3517  0010E8  B4D8               	btfsc	status,2,c
  3518  0010EA  0012               	return	
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3522  0010EC  0EBD               	movlw	low _menuConfiguration_stateMachine
  3523  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3524  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3525  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3526  0010F4  0E00               	movlw	0
  3527  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3528  0010F8  0E08               	movlw	8
  3529  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3530  0010FC  EC18  F042         	call	_sm_send_event	;wreg free
  3531                           
  3532                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3533  001100  0E0A               	movlw	10
  3534  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3535  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3536  001106  EC03  F046         	call	___lbdiv
  3537  00110A  0DF6               	mullw	246
  3538  00110C  50F3               	movf	243,w,c
  3539  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3540  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3541  001112  0E00               	movlw	0
  3542  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3543  001116  0E14               	movlw	20
  3544  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3545  00111A  0E0A               	movlw	10
  3546  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3547  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3548  001120  EC03  F046         	call	___lbdiv
  3549  001124  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  3550  001128  0012               	return	
  3551  00112A                     l22466:
  3552                           
  3553                           ; BSR set to: 1
  3554  00112A  0E05               	movlw	5
  3555  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3556  00112E  A4D8               	btfss	status,2,c
  3557  001130  D02F               	goto	l22476
  3558                           
  3559                           ; BSR set to: 1
  3560                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3561  001132  0E00               	movlw	0
  3562  001134  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3563  001136  0EC8               	movlw	200
  3564  001138  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3565                           
  3566                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3567  00113A  0E01               	movlw	1
  3568  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3569                           
  3570                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3571  00113E  0E01               	movlw	1
  3572  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3576  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3577  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3578  001148  ECCA  F00F         	call	_setValueToEdit
  3579  00114C  0900               	iorlw	0
  3580  00114E  B4D8               	btfsc	status,2,c
  3581  001150  0012               	return	
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3585  001152  0EBD               	movlw	low _menuConfiguration_stateMachine
  3586  001154  6E12               	movwf	sm_send_event@psm^0,c
  3587  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3588  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3589  00115A  0E00               	movlw	0
  3590  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3591  00115E  0E08               	movlw	8
  3592  001160  6E14               	movwf	sm_send_event@event^0,c
  3593  001162  EC18  F042         	call	_sm_send_event	;wreg free
  3594                           
  3595                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3596  001166  0E0A               	movlw	10
  3597  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3598  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3599  00116C  EC03  F046         	call	___lbdiv
  3600  001170  0DF6               	mullw	246
  3601  001172  50F3               	movf	243,w,c
  3602  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3603  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3604  001178  0E00               	movlw	0
  3605  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3606  00117C  0E14               	movlw	20
  3607  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3608  001180  0E0A               	movlw	10
  3609  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3610  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3611  001186  EC03  F046         	call	___lbdiv
  3612  00118A  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  3613                           
  3614                           ; BSR set to: 1
  3615                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3616                           
  3617                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3618  00118E  0012               	return	
  3619  001190                     l22476:
  3620                           
  3621                           ; BSR set to: 1
  3622  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3623  001192  A4D8               	btfss	status,2,c
  3624  001194  D023               	goto	l22488
  3625                           
  3626                           ; BSR set to: 1
  3627                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3628  001196  0E00               	movlw	0
  3629  001198  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3630  00119A  0E64               	movlw	100
  3631  00119C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3632                           
  3633                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3634  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3635  0011A0  A4D8               	btfss	status,2,c
  3636  0011A2  D003               	goto	l22482
  3637                           
  3638                           ; BSR set to: 1
  3639                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3640  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3641  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3642                           
  3643                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3644  0011A8  D001               	goto	l22484
  3645  0011AA                     l22482:
  3646                           
  3647                           ; BSR set to: 1
  3648                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3649  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3650  0011AC                     l22484:
  3651                           
  3652                           ; BSR set to: 1
  3653                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3654  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3655  0011AE  0D02               	mullw	2
  3656  0011B0  0E52               	movlw	low (_menu_st+1)
  3657  0011B2  24F3               	addwf	243,w,c
  3658  0011B4  6ED9               	movwf	fsr2l,c
  3659  0011B6  0E01               	movlw	high (_menu_st+1)
  3660  0011B8  20F4               	addwfc	prodh,w,c
  3661  0011BA  6EDA               	movwf	fsr2h,c
  3662  0011BC  50DF               	movf	indf2,w,c
  3663  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3664  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3665  0011C2  0D02               	mullw	2
  3666  0011C4  0E51               	movlw	low _menu_st
  3667  0011C6  24F3               	addwf	243,w,c
  3668  0011C8  6ED9               	movwf	fsr2l,c
  3669  0011CA  0E01               	movlw	high _menu_st
  3670  0011CC  20F4               	addwfc	prodh,w,c
  3671  0011CE  6EDA               	movwf	fsr2h,c
  3672  0011D0  50DF               	movf	indf2,w,c
  3673  0011D2  EC0D  F049         	call	_SetSegmentValueMain
  3674  0011D6                     l22486:
  3675                           
  3676                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3677  0011D6  0E01               	movlw	1
  3678  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3679                           
  3680                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3681  0011DA  0012               	return	
  3682  0011DC                     l22488:
  3683                           
  3684                           ; BSR set to: 1
  3685  0011DC  0E17               	movlw	23
  3686  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3687  0011E0  A4D8               	btfss	status,2,c
  3688  0011E2  D021               	goto	l22502
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3692  0011E4  0E00               	movlw	0
  3693  0011E6  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3694  0011E8  0E64               	movlw	100
  3695  0011EA  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3699  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3700                           
  3701                           ; BSR set to: 1
  3702                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3703  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3704  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3705  0011F2  A0D8               	btfss	status,0,c
  3706  0011F4  D002               	goto	l22498
  3707                           
  3708                           ; BSR set to: 1
  3709                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3710  0011F6  0E00               	movlw	0
  3711  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3712  0011FA                     l22498:
  3713                           
  3714                           ; BSR set to: 1
  3715                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3716  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3717  0011FC  0D02               	mullw	2
  3718  0011FE  0E52               	movlw	low (_menu_st+1)
  3719  001200  24F3               	addwf	243,w,c
  3720  001202  6ED9               	movwf	fsr2l,c
  3721  001204  0E01               	movlw	high (_menu_st+1)
  3722  001206  20F4               	addwfc	prodh,w,c
  3723  001208  6EDA               	movwf	fsr2h,c
  3724  00120A  50DF               	movf	indf2,w,c
  3725  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3726  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3727  001210  0D02               	mullw	2
  3728  001212  0E51               	movlw	low _menu_st
  3729  001214  24F3               	addwf	243,w,c
  3730  001216  6ED9               	movwf	fsr2l,c
  3731  001218  0E01               	movlw	high _menu_st
  3732  00121A  20F4               	addwfc	prodh,w,c
  3733  00121C  6EDA               	movwf	fsr2h,c
  3734  00121E  50DF               	movf	indf2,w,c
  3735  001220  EC0D  F049         	call	_SetSegmentValueMain
  3736  001224  D7D8               	goto	l22486
  3737  001226                     l22502:
  3738                           
  3739                           ; BSR set to: 1
  3740  001226  0E0C               	movlw	12
  3741  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3742  00122A  D09A               	goto	l22558
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3746  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3747  00122E  A4D8               	btfss	status,2,c
  3748  001230  D053               	goto	l22524
  3749                           
  3750                           ; BSR set to: 1
  3751  001232  0E0A               	movlw	10
  3752  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3753  001236  D050               	goto	l22524
  3754                           
  3755                           ; BSR set to: 1
  3756                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3757  001238  0E00               	movlw	0
  3758  00123A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3759  00123C  0E64               	movlw	100
  3760  00123E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3761                           
  3762                           ; BSR set to: 1
  3763                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3764  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3765  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3766  001246  ECCA  F00F         	call	_setValueToEdit
  3767  00124A  0900               	iorlw	0
  3768  00124C  B4D8               	btfsc	status,2,c
  3769  00124E  D7C3               	goto	l22486
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3773  001250  0EBD               	movlw	low _menuConfiguration_stateMachine
  3774  001252  6E12               	movwf	sm_send_event@psm^0,c
  3775  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3776  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3777  001258  0E00               	movlw	0
  3778  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3779  00125C  0E01               	movlw	1
  3780  00125E  6E14               	movwf	sm_send_event@event^0,c
  3781  001260  EC18  F042         	call	_sm_send_event	;wreg free
  3782                           
  3783                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3784  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3785  001266  0F1C               	addlw	28
  3786  001268  0100               	movlb	0	; () banked
  3787  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3788  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3789  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3790  001270  E101               	bnz	u27145
  3791  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3792  001274                     u27145:
  3793  001274  B4D8               	btfsc	status,2,c
  3794  001276  D009               	goto	u27150
  3795                           
  3796                           ; BSR set to: 0
  3797  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3798  00127A  0F1B               	addlw	27
  3799  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3800  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3801  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3802  001282  E101               	bnz	u27155
  3803  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3804  001286                     u27155:
  3805  001286  A4D8               	btfss	status,2,c
  3806  001288  D016               	goto	l22520
  3807  00128A                     u27150:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3811  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3812  00128C  0D02               	mullw	2
  3813  00128E  0E52               	movlw	low (_menu_st+1)
  3814  001290  24F3               	addwf	243,w,c
  3815  001292  6ED9               	movwf	fsr2l,c
  3816  001294  0E01               	movlw	high (_menu_st+1)
  3817  001296  20F4               	addwfc	prodh,w,c
  3818  001298  6EDA               	movwf	fsr2h,c
  3819  00129A  50DF               	movf	indf2,w,c
  3820  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3821  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3822  0012A0  0D02               	mullw	2
  3823  0012A2  0E51               	movlw	low _menu_st
  3824  0012A4  24F3               	addwf	243,w,c
  3825  0012A6  6ED9               	movwf	fsr2l,c
  3826  0012A8  0E01               	movlw	high _menu_st
  3827  0012AA  20F4               	addwfc	prodh,w,c
  3828  0012AC  6EDA               	movwf	fsr2h,c
  3829  0012AE  50DF               	movf	indf2,w,c
  3830  0012B0  EC0D  F049         	call	_SetSegmentValueMain
  3831                           
  3832                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3833  0012B4  D790               	goto	l22486
  3834  0012B6                     l22520:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3838  0012B6  0E0A               	movlw	10
  3839  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3840  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3841  0012BC  EC03  F046         	call	___lbdiv
  3842  0012C0  0DF6               	mullw	246
  3843  0012C2  50F3               	movf	243,w,c
  3844  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3845  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3846  0012C8  0E0A               	movlw	10
  3847  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3848  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3849  0012CE  EC03  F046         	call	___lbdiv
  3850  0012D2  EC0D  F049         	call	_SetSegmentValueMain
  3851  0012D6  D77F               	goto	l22486
  3852  0012D8                     l22524:
  3853                           
  3854                           ; BSR set to: 1
  3855  0012D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3856  0012DA  D008               	goto	u27170
  3857  0012DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3858  0012DE  E103               	bnz	u27160
  3859  0012E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3860  0012E2  A0D8               	btfss	status,0,c
  3861  0012E4  D003               	goto	u27170
  3862  0012E6                     u27160:
  3863                           
  3864                           ; BSR set to: 1
  3865  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3866  0012E8  A4D8               	btfss	status,2,c
  3867  0012EA  D01E               	goto	l22542
  3868  0012EC                     u27170:
  3869                           
  3870                           ; BSR set to: 1
  3871  0012EC  0E02               	movlw	2
  3872  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3873  0012F0  D01B               	goto	l22542
  3874                           
  3875                           ; BSR set to: 1
  3876                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3877  0012F2  0E00               	movlw	0
  3878  0012F4  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3879  0012F6  0E00               	movlw	0
  3880  0012F8  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3881                           
  3882                           ; BSR set to: 1
  3883                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3884  0012FA  0EED               	movlw	low _main_stateMachine
  3885  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3886  0012FE  0E01               	movlw	high _main_stateMachine
  3887  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3888  001302  0E00               	movlw	0
  3889  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3890  001306  0E07               	movlw	7
  3891  001308  6E14               	movwf	sm_send_event@event^0,c
  3892  00130A  EC18  F042         	call	_sm_send_event	;wreg free
  3893                           
  3894                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3895  00130E  0E18               	movlw	24
  3896  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3897  001312  0E18               	movlw	24
  3898  001314  EC0D  F049         	call	_SetSegmentValueMain
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3902  001318  0E00               	movlw	0
  3903  00131A  0101               	movlb	1	; () banked
  3904  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3905                           
  3906                           ; BSR set to: 1
  3907                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3908  00131E  0E01               	movlw	1
  3909  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3913  001322  EC5E  F04A         	call	_ClearFlag_rfCMD	;wreg free
  3914                           
  3915                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3916  001326  0012               	return	
  3917  001328                     l22542:
  3918                           
  3919                           ; BSR set to: 1
  3920  001328  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3921  00132A  D008               	goto	u27200
  3922  00132C  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3923  00132E  E103               	bnz	u27190
  3924  001330  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3925  001332  A0D8               	btfss	status,0,c
  3926  001334  D003               	goto	u27200
  3927  001336                     u27190:
  3928                           
  3929                           ; BSR set to: 1
  3930  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3931  001338  A4D8               	btfss	status,2,c
  3932  00133A  D004               	goto	l22550
  3933  00133C                     u27200:
  3934                           
  3935                           ; BSR set to: 1
  3936                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3937  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3938  00133E  EC81  F01E         	call	_load_New_Menu
  3939  001342  D749               	goto	l22486
  3940  001344                     l22550:
  3941                           
  3942                           ; BSR set to: 1
  3943  001344  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3944  001346  D005               	goto	u27210
  3945  001348  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3946  00134A  E102               	bnz	u27211
  3947  00134C  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3948  00134E  B0D8               	btfsc	status,0,c
  3949  001350                     u27211:
  3950  001350  0012               	return	
  3951  001352                     u27210:
  3952                           
  3953                           ; BSR set to: 1
  3954  001352  0E01               	movlw	1
  3955  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3956  001356  0012               	return	
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3960  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3961  00135A  EC81  F01E         	call	_load_New_Menu
  3962  00135E  D73B               	goto	l22486
  3963  001360                     l22558:
  3964                           
  3965                           ; BSR set to: 1
  3966  001360  0E27               	movlw	39
  3967  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3968  001364  A4D8               	btfss	status,2,c
  3969  001366  D032               	goto	l22574
  3970                           
  3971                           ; BSR set to: 1
  3972  001368  0E0A               	movlw	10
  3973  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3974  00136C  D02F               	goto	l22574
  3975                           
  3976                           ; BSR set to: 1
  3977  00136E  0E0D               	movlw	13
  3978  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  3979  001372  B4D8               	btfsc	status,2,c
  3980  001374  D02B               	goto	l22574
  3981                           
  3982                           ; BSR set to: 1
  3983                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  3984  001376  0E00               	movlw	0
  3985  001378  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3986  00137A  0E64               	movlw	100
  3987  00137C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3988                           
  3989                           ; BSR set to: 1
  3990                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3991  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3992  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  3993  001384  ECCA  F00F         	call	_setValueToEdit
  3994  001388  0900               	iorlw	0
  3995  00138A  B4D8               	btfsc	status,2,c
  3996  00138C  D724               	goto	l22486
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4000  00138E  0EBD               	movlw	low _menuConfiguration_stateMachine
  4001  001390  6E12               	movwf	sm_send_event@psm^0,c
  4002  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  4003  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4004  001396  0E00               	movlw	0
  4005  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  4006  00139A  0E08               	movlw	8
  4007  00139C  6E14               	movwf	sm_send_event@event^0,c
  4008  00139E  EC18  F042         	call	_sm_send_event	;wreg free
  4009                           
  4010                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4011  0013A2  0E0A               	movlw	10
  4012  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  4013  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4014  0013A8  EC03  F046         	call	___lbdiv
  4015  0013AC  0DF6               	mullw	246
  4016  0013AE  50F3               	movf	243,w,c
  4017  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4018  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4019  0013B4  0E00               	movlw	0
  4020  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4021  0013B8  0E14               	movlw	20
  4022  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4023  0013BC  0E0A               	movlw	10
  4024  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4025  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4026  0013C2  EC03  F046         	call	___lbdiv
  4027  0013C6  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  4028  0013CA  D705               	goto	l22486
  4029  0013CC                     l22574:
  4030                           
  4031                           ; BSR set to: 1
  4032  0013CC  0E0D               	movlw	13
  4033  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4034  0013D0  A4D8               	btfss	status,2,c
  4035  0013D2  D027               	goto	l22592
  4036                           
  4037                           ; BSR set to: 1
  4038  0013D4  51A6               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4039  0013D6  11A7               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4040  0013D8  A4D8               	btfss	status,2,c
  4041  0013DA  D023               	goto	l22592
  4042                           
  4043                           ; BSR set to: 1
  4044                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4045  0013DC  0E00               	movlw	0
  4046  0013DE  0100               	movlb	0	; () banked
  4047  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4048                           
  4049                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4050  0013E2  0E00               	movlw	0
  4051  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4052                           
  4053                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4054  0013E6  0E00               	movlw	0
  4055  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4059  0013EA  0E02               	movlw	2
  4060  0013EC  EC20  F046         	call	_SaveNVM_VarSystem
  4061                           
  4062                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4063  0013F0  0EED               	movlw	low _main_stateMachine
  4064  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4065  0013F4  0E01               	movlw	high _main_stateMachine
  4066  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4067  0013F8  0E00               	movlw	0
  4068  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4069  0013FC  0E07               	movlw	7
  4070  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4071  001400  EC18  F042         	call	_sm_send_event	;wreg free
  4072                           
  4073                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4074  001404  0E18               	movlw	24
  4075  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4076  001408  0E18               	movlw	24
  4077  00140A  EC0D  F049         	call	_SetSegmentValueMain
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4081  00140E  0E01               	movlw	1
  4082  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4083  001412                     l22588:
  4084                           
  4085                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4086  001412  EC5E  F04A         	call	_ClearFlag_rfCMD	;wreg free
  4087  001416                     l22590:
  4088                           
  4089                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4090  001416  0E00               	movlw	0
  4091  001418  0101               	movlb	1	; () banked
  4092  00141A  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4093  00141C  0E00               	movlw	0
  4094  00141E  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4095                           
  4096                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4097  001420  0012               	return	
  4098  001422                     l22592:
  4099                           
  4100                           ; BSR set to: 1
  4101  001422  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4102  001424  D008               	goto	u27300
  4103  001426  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4104  001428  E103               	bnz	u27290
  4105  00142A  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4106  00142C  A0D8               	btfss	status,0,c
  4107  00142E  D003               	goto	u27300
  4108  001430                     u27290:
  4109                           
  4110                           ; BSR set to: 1
  4111  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4112  001432  A4D8               	btfss	status,2,c
  4113  001434  0012               	return	
  4114  001436                     u27300:
  4115                           
  4116                           ; BSR set to: 1
  4117                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4118  001436  0EED               	movlw	low _main_stateMachine
  4119  001438  6E12               	movwf	sm_send_event@psm^0,c
  4120  00143A  0E01               	movlw	high _main_stateMachine
  4121  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4122  00143E  0E00               	movlw	0
  4123  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4124  001442  0E07               	movlw	7
  4125  001444  6E14               	movwf	sm_send_event@event^0,c
  4126  001446  EC18  F042         	call	_sm_send_event	;wreg free
  4127                           
  4128                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4129  00144A  0E18               	movlw	24
  4130  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4131  00144E  0E18               	movlw	24
  4132  001450  EC0D  F049         	call	_SetSegmentValueMain
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4136  001454  EC5E  F04A         	call	_ClearFlag_rfCMD	;wreg free
  4137                           
  4138                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4139  001458  0E01               	movlw	1
  4140  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4141  00145C  D7DC               	goto	l22590
  4142  00145E                     l22606:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4146  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4147  001460  A4D8               	btfss	status,2,c
  4148  001462  D047               	goto	l22626
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4152  001464  0E00               	movlw	0
  4153  001466  0101               	movlb	1	; () banked
  4154  001468  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4155  00146A  0E64               	movlw	100
  4156  00146C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4157                           
  4158                           ; BSR set to: 1
  4159                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4160  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4161  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4162  001472  A0D8               	btfss	status,0,c
  4163  001474  D003               	goto	l22614
  4164                           
  4165                           ; BSR set to: 1
  4166                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4167  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4168                           
  4169                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4170  00147A  D001               	goto	l22616
  4171  00147C                     l22614:
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4175  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4176  00147E                     l22616:
  4177                           
  4178                           ; BSR set to: 1
  4179                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4180  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4181  001480  0F1C               	addlw	28
  4182  001482  0100               	movlb	0	; () banked
  4183  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4184  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4185  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4186  00148A  E101               	bnz	u27335
  4187  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4188  00148E                     u27335:
  4189  00148E  B4D8               	btfsc	status,2,c
  4190  001490  D009               	goto	u27340
  4191                           
  4192                           ; BSR set to: 0
  4193  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4194  001494  0F1B               	addlw	27
  4195  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4196  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4197  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4198  00149C  E101               	bnz	u27345
  4199  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4200  0014A0                     u27345:
  4201  0014A0  A4D8               	btfss	status,2,c
  4202  0014A2  D016               	goto	l22622
  4203  0014A4                     u27340:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4207  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4208  0014A6  0D02               	mullw	2
  4209  0014A8  0E52               	movlw	low (_menu_st+1)
  4210  0014AA  24F3               	addwf	243,w,c
  4211  0014AC  6ED9               	movwf	fsr2l,c
  4212  0014AE  0E01               	movlw	high (_menu_st+1)
  4213  0014B0  20F4               	addwfc	prodh,w,c
  4214  0014B2  6EDA               	movwf	fsr2h,c
  4215  0014B4  50DF               	movf	indf2,w,c
  4216  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4217  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4218  0014BA  0D02               	mullw	2
  4219  0014BC  0E51               	movlw	low _menu_st
  4220  0014BE  24F3               	addwf	243,w,c
  4221  0014C0  6ED9               	movwf	fsr2l,c
  4222  0014C2  0E01               	movlw	high _menu_st
  4223  0014C4  20F4               	addwfc	prodh,w,c
  4224  0014C6  6EDA               	movwf	fsr2h,c
  4225  0014C8  50DF               	movf	indf2,w,c
  4226  0014CA  EC0D  F049         	call	_SetSegmentValueMain
  4227                           
  4228                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4229  0014CE  D683               	goto	l22486
  4230  0014D0                     l22622:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4234  0014D0  0E0A               	movlw	10
  4235  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4236  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4237  0014D6  EC03  F046         	call	___lbdiv
  4238  0014DA  0DF6               	mullw	246
  4239  0014DC  50F3               	movf	243,w,c
  4240  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4241  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4242  0014E2  0E0A               	movlw	10
  4243  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4244  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4245  0014E8  EC03  F046         	call	___lbdiv
  4246  0014EC  EC0D  F049         	call	_SetSegmentValueMain
  4247  0014F0  D672               	goto	l22486
  4248  0014F2                     l22626:
  4249                           
  4250                           ; BSR set to: 0
  4251  0014F2  0E17               	movlw	23
  4252  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4253  0014F6  A4D8               	btfss	status,2,c
  4254  0014F8  D045               	goto	l22646
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4258  0014FA  0E00               	movlw	0
  4259  0014FC  0101               	movlb	1	; () banked
  4260  0014FE  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4261  001500  0E64               	movlw	100
  4262  001502  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4263                           
  4264                           ; BSR set to: 1
  4265                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4266  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4267                           
  4268                           ; BSR set to: 1
  4269                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4270  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4271  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4272  00150A  A0D8               	btfss	status,0,c
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4276  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4277                           
  4278                           ; BSR set to: 1
  4279                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4280  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4281  001512  0F1C               	addlw	28
  4282  001514  0100               	movlb	0	; () banked
  4283  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4284  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4285  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4286  00151C  E101               	bnz	u27375
  4287  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4288  001520                     u27375:
  4289  001520  B4D8               	btfsc	status,2,c
  4290  001522  D009               	goto	u27380
  4291                           
  4292                           ; BSR set to: 0
  4293  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4294  001526  0F1B               	addlw	27
  4295  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4296  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4297  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4298  00152E  E101               	bnz	u27385
  4299  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4300  001532                     u27385:
  4301  001532  A4D8               	btfss	status,2,c
  4302  001534  D016               	goto	l22642
  4303  001536                     u27380:
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4307  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4308  001538  0D02               	mullw	2
  4309  00153A  0E52               	movlw	low (_menu_st+1)
  4310  00153C  24F3               	addwf	243,w,c
  4311  00153E  6ED9               	movwf	fsr2l,c
  4312  001540  0E01               	movlw	high (_menu_st+1)
  4313  001542  20F4               	addwfc	prodh,w,c
  4314  001544  6EDA               	movwf	fsr2h,c
  4315  001546  50DF               	movf	indf2,w,c
  4316  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4317  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4318  00154C  0D02               	mullw	2
  4319  00154E  0E51               	movlw	low _menu_st
  4320  001550  24F3               	addwf	243,w,c
  4321  001552  6ED9               	movwf	fsr2l,c
  4322  001554  0E01               	movlw	high _menu_st
  4323  001556  20F4               	addwfc	prodh,w,c
  4324  001558  6EDA               	movwf	fsr2h,c
  4325  00155A  50DF               	movf	indf2,w,c
  4326  00155C  EC0D  F049         	call	_SetSegmentValueMain
  4327                           
  4328                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4329  001560  D63A               	goto	l22486
  4330  001562                     l22642:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4334  001562  0E0A               	movlw	10
  4335  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4336  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4337  001568  EC03  F046         	call	___lbdiv
  4338  00156C  0DF6               	mullw	246
  4339  00156E  50F3               	movf	243,w,c
  4340  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4341  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4342  001574  0E0A               	movlw	10
  4343  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4344  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4345  00157A  EC03  F046         	call	___lbdiv
  4346  00157E  EC0D  F049         	call	_SetSegmentValueMain
  4347  001582  D629               	goto	l22486
  4348  001584                     l22646:
  4349                           
  4350                           ; BSR set to: 0
  4351  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4352  001586  A4D8               	btfss	status,2,c
  4353  001588  D023               	goto	l22662
  4354                           
  4355                           ; BSR set to: 0
  4356  00158A  0E09               	movlw	9
  4357  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4358  00158E  D020               	goto	l22662
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4362  001590  0E00               	movlw	0
  4363  001592  0101               	movlb	1	; () banked
  4364  001594  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4365  001596  0E64               	movlw	100
  4366  001598  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4367                           
  4368                           ; BSR set to: 1
  4369                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4370  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4371  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4372  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4376  0015A6  0EBD               	movlw	low _menuConfiguration_stateMachine
  4377  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4378  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4379  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4380  0015AE  0E00               	movlw	0
  4381  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4382  0015B2  0E02               	movlw	2
  4383  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4384  0015B6  EC18  F042         	call	_sm_send_event	;wreg free
  4385                           
  4386                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4387  0015BA  0E01               	movlw	1
  4388  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4389  0015BE  0E19               	movlw	25
  4390  0015C0  EC0D  F049         	call	_SetSegmentValueMain
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4394  0015C4  0E00               	movlw	0
  4395  0015C6  0101               	movlb	1	; () banked
  4396  0015C8  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4397  0015CA  0E28               	movlw	40
  4398  0015CC  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4399  0015CE  D603               	goto	l22486
  4400  0015D0                     l22662:
  4401                           
  4402                           ; BSR set to: 0
  4403  0015D0  0101               	movlb	1	; () banked
  4404  0015D2  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4405  0015D4  D008               	goto	u27420
  4406  0015D6  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4407  0015D8  E103               	bnz	u27410
  4408  0015DA  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4409  0015DC  A0D8               	btfss	status,0,c
  4410  0015DE  D003               	goto	u27420
  4411  0015E0                     u27410:
  4412                           
  4413                           ; BSR set to: 1
  4414  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4415  0015E2  A4D8               	btfss	status,2,c
  4416  0015E4  0012               	return	
  4417  0015E6                     u27420:
  4418                           
  4419                           ; BSR set to: 1
  4420                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4421  0015E6  0E00               	movlw	0
  4422  0015E8  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4423  0015EA  0E64               	movlw	100
  4424  0015EC  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4425                           
  4426                           ; BSR set to: 1
  4427                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4428  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4429  0015F0  EC81  F01E         	call	_load_New_Menu
  4430                           
  4431                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4432  0015F4  0EBD               	movlw	low _menuConfiguration_stateMachine
  4433  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4434  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4435  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4436  0015FC  0E00               	movlw	0
  4437  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4438  001600  0E03               	movlw	3
  4439  001602  6E14               	movwf	sm_send_event@event^0,c
  4440  001604  EC18  F042         	call	_sm_send_event	;wreg free
  4441  001608  D5E6               	goto	l22486
  4442  00160A                     l22674:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4446  00160A  0101               	movlb	1	; () banked
  4447  00160C  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4448  00160E  D005               	goto	u27430
  4449  001610  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4450  001612  E102               	bnz	u27431
  4451  001614  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4452  001616  B0D8               	btfsc	status,0,c
  4453  001618                     u27431:
  4454  001618  0012               	return	
  4455  00161A                     u27430:
  4456                           
  4457                           ; BSR set to: 1
  4458                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4459  00161A  0E00               	movlw	0
  4460  00161C  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4461  00161E  0E64               	movlw	100
  4462  001620  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4463                           
  4464                           ; BSR set to: 1
  4465                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4466  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4467  001624  A4D8               	btfss	status,2,c
  4468  001626  D004               	goto	u27450
  4469                           
  4470                           ; BSR set to: 1
  4471  001628  0E08               	movlw	8
  4472  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4473  00162C  B4D8               	btfsc	status,2,c
  4474  00162E  D00A               	goto	u27460
  4475  001630                     u27450:
  4476                           
  4477                           ; BSR set to: 1
  4478  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4479  001632  0F1C               	addlw	28
  4480  001634  0100               	movlb	0	; () banked
  4481  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4482  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4483  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4484  00163C  E101               	bnz	u27465
  4485  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4486  001640                     u27465:
  4487  001640  A4D8               	btfss	status,2,c
  4488  001642  D005               	goto	l22686
  4489  001644                     u27460:
  4490                           
  4491                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4492  001644  0100               	movlb	0	; () banked
  4493  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4494  001648  EC07  F02F         	call	_ResetDefaultMemory
  4495                           
  4496                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4497  00164C  D023               	goto	l22704
  4498  00164E                     l22686:
  4499                           
  4500                           ; BSR set to: 0
  4501  00164E  0101               	movlb	1	; () banked
  4502  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4503  001652  B4D8               	btfsc	status,2,c
  4504  001654  D004               	goto	u27480
  4505                           
  4506                           ; BSR set to: 1
  4507  001656  0E0A               	movlw	10
  4508  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4509  00165A  A4D8               	btfss	status,2,c
  4510  00165C  D004               	goto	l22692
  4511  00165E                     u27480:
  4512                           
  4513                           ; BSR set to: 1
  4514                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4515  00165E  0E01               	movlw	1
  4516  001660  EC20  F046         	call	_SaveNVM_VarSystem
  4517                           
  4518                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4519  001664  D017               	goto	l22704
  4520  001666                     l22692:
  4521                           
  4522                           ; BSR set to: 1
  4523                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4524  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4525  001668  A4D8               	btfss	status,2,c
  4526  00166A  D00E               	goto	l22700
  4527                           
  4528                           ; BSR set to: 1
  4529  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4530  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4531  001674  50DF               	movf	indf2,w,c
  4532  001676  B4D8               	btfsc	status,2,c
  4533  001678  D007               	goto	l22700
  4534                           
  4535                           ; BSR set to: 1
  4536  00167A  0E06               	movlw	6
  4537  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4538  00167E  A4D8               	btfss	status,2,c
  4539  001680  D003               	goto	l22700
  4540                           
  4541                           ; BSR set to: 1
  4542                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4543  001682  0E09               	movlw	9
  4544  001684  0100               	movlb	0	; () banked
  4545  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4546  001688                     l22700:
  4547                           
  4548                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4549  001688  0E01               	movlw	1
  4550  00168A  EC20  F046         	call	_SaveNVM_VarSystem
  4551                           
  4552                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4553  00168E  0E00               	movlw	0
  4554  001690  EC20  F046         	call	_SaveNVM_VarSystem
  4555  001694                     l22704:
  4556                           
  4557                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4558  001694  0EBD               	movlw	low _menuConfiguration_stateMachine
  4559  001696  6E12               	movwf	sm_send_event@psm^0,c
  4560  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4561  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4562  00169C  0E00               	movlw	0
  4563  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4564  0016A0  0E04               	movlw	4
  4565  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4566  0016A4  EC18  F042         	call	_sm_send_event	;wreg free
  4567                           
  4568                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4569  0016A8  0101               	movlb	1	; () banked
  4570  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4571                           
  4572                           ; BSR set to: 1
  4573                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4574  0016AC  0E02               	movlw	2
  4575  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4576  0016B0  D005               	goto	l22714
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4580  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4581                           
  4582                           ; BSR set to: 1
  4583                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4584  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4585  0016B6  EC81  F01E         	call	_load_New_Menu
  4586                           
  4587                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4588  0016BA  0012               	return	
  4589  0016BC                     l22714:
  4590                           
  4591                           ; BSR set to: 1
  4592  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4593  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4594  0016C0  A0D8               	btfss	status,0,c
  4595  0016C2  D005               	goto	l22720
  4596                           
  4597                           ; BSR set to: 1
  4598                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4599  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4600                           
  4601                           ; BSR set to: 1
  4602                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4603  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4604  0016C8  EC81  F01E         	call	_load_New_Menu
  4605                           
  4606                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4607  0016CC  0012               	return	
  4608  0016CE                     l22720:
  4609                           
  4610                           ; BSR set to: 1
  4611                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4612  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4613  0016D0  EC81  F01E         	call	_load_New_Menu
  4614  0016D4  0012               	return	
  4615  0016D6                     l22722:
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4619  0016D6  0101               	movlb	1	; () banked
  4620  0016D8  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4621  0016DA  D005               	goto	u27540
  4622  0016DC  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4623  0016DE  E102               	bnz	u27541
  4624  0016E0  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4625  0016E2  B0D8               	btfsc	status,0,c
  4626  0016E4                     u27541:
  4627  0016E4  0012               	return	
  4628  0016E6                     u27540:
  4629                           
  4630                           ; BSR set to: 1
  4631                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4632  0016E6  0100               	movlb	0	; () banked
  4633  0016E8  51F8               	movf	_auxCounter& (0+255),w,b
  4634  0016EA  11F9               	iorwf	(_auxCounter+1)& (0+255),w,b
  4635  0016EC  A4D8               	btfss	status,2,c
  4636  0016EE  D010               	goto	l22732
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4640  0016F0  0101               	movlb	1	; () banked
  4641  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4642                           
  4643                           ; BSR set to: 1
  4644                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4645  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4646  0016F6  EC81  F01E         	call	_load_New_Menu
  4647                           
  4648                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4649  0016FA  0EBD               	movlw	low _menuConfiguration_stateMachine
  4650  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4651  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4652  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4653  001702  0E00               	movlw	0
  4654  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4655  001706  0E04               	movlw	4
  4656  001708  6E14               	movwf	sm_send_event@event^0,c
  4657  00170A  EC18  F042         	call	_sm_send_event	;wreg free
  4658                           
  4659                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4660  00170E  0012               	return	
  4661  001710                     l22732:
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4665  001710  0E00               	movlw	0
  4666  001712  0101               	movlb	1	; () banked
  4667  001714  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4668  001716  0E3C               	movlw	60
  4669  001718  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4670                           
  4671                           ; BSR set to: 1
  4672                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4673  00171A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4674  00171E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4675  001722  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4676  001726  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4677  00172A  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4678  00172E  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4679  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4680  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4681  001736  EC15  F03E         	call	___lldiv	;wreg free
  4682  00173A  5010               	movf	?___lldiv^0,w,c
  4683  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4684                           
  4685                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4686  00173E  C0F8  F014         	movff	_auxCounter,___lldiv@divisor
  4687  001742  C0F9  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4688  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4689  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4690  00174A  C1F9  F010         	movff	_tempCounter,___lldiv@dividend
  4691  00174E  C1FA  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4692  001752  C1FB  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4693  001756  C1FC  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4694  00175A  EC15  F03E         	call	___lldiv	;wreg free
  4695  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4696  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4697  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4698  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4699  00176E  C0F8  F021         	movff	_auxCounter,___lmul@multiplicand
  4700  001772  C0F9  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4701  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4702  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4703  00177A  EC26  F043         	call	___lmul	;wreg free
  4704  00177E  501D               	movf	?___lmul^0,w,c
  4705  001780  0101               	movlb	1	; () banked
  4706  001782  5DF9               	subwf	_tempCounter& (0+255),w,b
  4707  001784  6FF9               	movwf	_tempCounter& (0+255),b
  4708  001786  501E               	movf	(?___lmul+1)^0,w,c
  4709  001788  59FA               	subwfb	(_tempCounter+1)& (0+255),w,b
  4710  00178A  6FFA               	movwf	(_tempCounter+1)& (0+255),b
  4711  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4712  00178E  59FB               	subwfb	(_tempCounter+2)& (0+255),w,b
  4713  001790  6FFB               	movwf	(_tempCounter+2)& (0+255),b
  4714  001792  5020               	movf	(?___lmul+3)^0,w,c
  4715  001794  59FC               	subwfb	(_tempCounter+3)& (0+255),w,b
  4716  001796  6FFC               	movwf	(_tempCounter+3)& (0+255),b
  4717                           
  4718                           ; BSR set to: 1
  4719                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4720  001798  C0F8  F010         	movff	_auxCounter,___lwdiv@dividend
  4721  00179C  C0F9  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4722  0017A0  0E00               	movlw	0
  4723  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4724  0017A4  0E64               	movlw	100
  4725  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4726  0017A8  ECA6  F043         	call	___lwdiv	;wreg free
  4727  0017AC  C010  F0F8         	movff	?___lwdiv,_auxCounter
  4728  0017B0  C011  F0F9         	movff	?___lwdiv+1,_auxCounter+1
  4729                           
  4730                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4731  0017B4  0E0A               	movlw	10
  4732  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4733  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4734  0017BA  EC03  F046         	call	___lbdiv
  4735  0017BE  0DF6               	mullw	246
  4736  0017C0  50F3               	movf	243,w,c
  4737  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4738  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4739  0017C6  0E00               	movlw	0
  4740  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4741  0017CA  0E0A               	movlw	10
  4742  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4743  0017CE  0E0A               	movlw	10
  4744  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4745  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4746  0017D4  EC03  F046         	call	___lbdiv
  4747  0017D8  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  4748  0017DC  0012               	return	
  4749  0017DE                     l22742:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4753  0017DE  0101               	movlb	1	; () banked
  4754  0017E0  05FD               	decf	_firstselectflag& (0+255),w,b
  4755  0017E2  A4D8               	btfss	status,2,c
  4756  0017E4  D004               	goto	l22746
  4757                           
  4758                           ; BSR set to: 1
  4759                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4760  0017E6  0E00               	movlw	0
  4761  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4762                           
  4763                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4764  0017EA  0E00               	movlw	0
  4765  0017EC  6FFD               	movwf	_firstselectflag& (0+255),b
  4766  0017EE                     l22746:
  4767                           
  4768                           ; BSR set to: 1
  4769                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4770  0017EE  EC6A  F019         	call	_controlSelectRemote	;wreg free
  4771                           
  4772                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4773  0017F2  0012               	return	
  4774  0017F4                     l22748:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4778  0017F4  ECB8  F039         	call	_controlSaveRemote	;wreg free
  4779                           
  4780                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4781  0017F8  0012               	return	
  4782  0017FA                     l22750:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4786  0017FA  EC88  F046         	call	_controlLearnDigit	;wreg free
  4787                           
  4788                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4789  0017FE  0101               	movlb	1	; () banked
  4790  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4791  001802  A4D8               	btfss	status,2,c
  4792  001804  0012               	return	
  4793                           
  4794                           ; BSR set to: 1
  4795                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4796  001806  0EED               	movlw	low _main_stateMachine
  4797  001808  6E12               	movwf	sm_send_event@psm^0,c
  4798  00180A  0E01               	movlw	high _main_stateMachine
  4799  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4800  00180E  0E00               	movlw	0
  4801  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4802  001812  0E07               	movlw	7
  4803  001814  6E14               	movwf	sm_send_event@event^0,c
  4804  001816  EC18  F042         	call	_sm_send_event	;wreg free
  4805                           
  4806                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4807  00181A  0EBD               	movlw	low _menuConfiguration_stateMachine
  4808  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4809  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4810  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4811  001822  0E00               	movlw	0
  4812  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4813  001826  0E04               	movlw	4
  4814  001828  6E14               	movwf	sm_send_event@event^0,c
  4815  00182A  EC18  F042         	call	_sm_send_event	;wreg free
  4816                           
  4817                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4818  00182E  0E18               	movlw	24
  4819  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4820  001832  0E18               	movlw	24
  4821  001834  EC0D  F049         	call	_SetSegmentValueMain
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4825  001838  0E02               	movlw	2
  4826  00183A  EC20  F046         	call	_SaveNVM_VarSystem
  4827  00183E  D5E9               	goto	l22588
  4828  001840                     l22766:
  4829  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4830  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4831  001848  50DF               	movf	indf2,w,c
  4832  00184A  0100               	movlb	0	; () banked
  4833  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4834  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4835                           
  4836                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4837                           ; Switch size 1, requested type "simple"
  4838                           ; Number of cases is 1, Range of values is 0 to 0
  4839                           ; switch strategies available:
  4840                           ; Name         Instructions Cycles
  4841                           ; simple_byte            4     3 (average)
  4842                           ;	Chosen strategy is simple_byte
  4843  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4844  001852  0A00               	xorlw	0	; case 0
  4845  001854  A4D8               	btfss	status,2,c
  4846  001856  0012               	return	
  4847                           
  4848                           ; BSR set to: 0
  4849                           ; Switch size 1, requested type "simple"
  4850                           ; Number of cases is 7, Range of values is 0 to 6
  4851                           ; switch strategies available:
  4852                           ; Name         Instructions Cycles
  4853                           ; simple_byte           22    12 (average)
  4854                           ;	Chosen strategy is simple_byte
  4855  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4856  00185A  0A00               	xorlw	0	; case 0
  4857  00185C  B4D8               	btfsc	status,2,c
  4858  00185E  D431               	goto	l22456
  4859  001860  0A01               	xorlw	1	; case 1
  4860  001862  B4D8               	btfsc	status,2,c
  4861  001864  D5FC               	goto	l22606
  4862  001866  0A03               	xorlw	3	; case 2
  4863  001868  B4D8               	btfsc	status,2,c
  4864  00186A  D6CF               	goto	l22674
  4865  00186C  0A01               	xorlw	1	; case 3
  4866  00186E  B4D8               	btfsc	status,2,c
  4867  001870  D732               	goto	l22722
  4868  001872  0A07               	xorlw	7	; case 4
  4869  001874  B4D8               	btfsc	status,2,c
  4870  001876  D7B3               	goto	l22742
  4871  001878  0A01               	xorlw	1	; case 5
  4872  00187A  B4D8               	btfsc	status,2,c
  4873  00187C  D7BB               	goto	l22748
  4874  00187E  0A03               	xorlw	3	; case 6
  4875  001880  A4D8               	btfss	status,2,c
  4876  001882  0012               	return	
  4877  001884  D7BA               	goto	l22750
  4878  001886                     __end_of_sm_execute_menuConfiguration:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function _setValueToEdit *****************
  4882 ;; Defined at:
  4883 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  menuType        1    wreg     enum E10813
  4886 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  menuType        1    6[BANK0 ] enum E10813
  4889 ;;  posindex        1    7[BANK0 ] unsigned char 
  4890 ;;  haveValueToE    1    8[BANK0 ] unsigned char 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      unsigned char 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 3F/1
  4897 ;;		On exit  : 3F/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4900 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4901 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4902 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4903 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4904 ;;Total ram usage:        6 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; Hardware stack levels required when called: 14
  4907 ;; This function calls:
  4908 ;;		_InitReceiver
  4909 ;;		_SaveNVM_VarSystem
  4910 ;;		_cmdMemoryIsEmpty
  4911 ;;		_load_New_Menu
  4912 ;;		_sm_send_event
  4913 ;; This function is called by:
  4914 ;;		_sm_execute_menuConfiguration
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text3
  4919  001F94                     __ptext3:
  4920                           	callstack 0
  4921  001F94                     _setValueToEdit:
  4922                           	callstack 14
  4923                           
  4924                           ;incstack = 0
  4925                           ;setValueToEdit@menuType stored from wreg
  4926  001F94  0100               	movlb	0	; () banked
  4927  001F96  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4928                           
  4929                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  4930  001F98  0E00               	movlw	0
  4931  001F9A  0100               	movlb	0	; () banked
  4932  001F9C  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4933                           
  4934                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  4935  001F9E  D254               	goto	l21008
  4936  001FA0                     l3353:
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4940  001FA0  C168  F169         	movff	_menu_st+23,_menu_st+24
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  4944  001FA4  0E00               	movlw	0
  4945  001FA6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4946                           
  4947                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  4948  001FA8  D034               	goto	l20764
  4949  001FAA                     l20718:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  4953  001FAA  0E04               	movlw	4
  4954  001FAC  EC81  F01E         	call	_load_New_Menu
  4955                           
  4956                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  4957  001FB0  D274               	goto	l21010
  4958  001FB2                     l20720:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  4962  001FB2  0E05               	movlw	5
  4963  001FB4  EC81  F01E         	call	_load_New_Menu
  4964                           
  4965                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  4966  001FB8  D270               	goto	l21010
  4967  001FBA                     l20722:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  4971  001FBA  0E06               	movlw	6
  4972  001FBC  EC81  F01E         	call	_load_New_Menu
  4973                           
  4974                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  4975  001FC0  D26C               	goto	l21010
  4976  001FC2                     l20724:
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  4980  001FC2  0E63               	movlw	99
  4981  001FC4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  4985  001FC6  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  4989  001FCA  0E9C               	movlw	low (_var_sys_NVM+4)
  4990  001FCC                     L13:
  4991  001FCC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  4992  001FCE  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  4996  001FD0  0E01               	movlw	1
  4997  001FD2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4998                           
  4999                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5000  001FD4  D262               	goto	l21010
  5001  001FD6                     l20732:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5005  001FD6  0E07               	movlw	7
  5006  001FD8  EC81  F01E         	call	_load_New_Menu
  5007                           
  5008                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5009  001FDC  D25E               	goto	l21010
  5010  001FDE                     l20734:
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5014  001FDE  0E08               	movlw	8
  5015  001FE0  EC81  F01E         	call	_load_New_Menu
  5016                           
  5017                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5018  001FE4  D25A               	goto	l21010
  5019  001FE6                     l20736:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5023  001FE6  0E09               	movlw	9
  5024  001FE8  EC81  F01E         	call	_load_New_Menu
  5025                           
  5026                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5027  001FEC  D256               	goto	l21010
  5028  001FEE                     l20738:
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5032  001FEE  0E02               	movlw	2
  5033  001FF0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5037  001FF2  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5041  001FF6  0EA4               	movlw	low (_var_sys_NVM+12)
  5042  001FF8  D7E9               	goto	L13
  5043  001FFA                     l20746:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5047  001FFA  0E03               	movlw	3
  5048  001FFC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5052  001FFE  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5056  002002  0EA5               	movlw	low (_var_sys_NVM+13)
  5057  002004  D7E3               	goto	L13
  5058  002006                     l20754:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5062  002006  0E01               	movlw	1
  5063  002008  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5067  00200A  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5071  00200E  0EA6               	movlw	low (_var_sys_NVM+14)
  5072  002010  D7DD               	goto	L13
  5073  002012                     l20764:
  5074                           
  5075                           ; BSR set to: 0
  5076  002012  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5077  002014  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5078  002016  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5079                           
  5080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5081                           ; Switch size 1, requested type "simple"
  5082                           ; Number of cases is 1, Range of values is 0 to 0
  5083                           ; switch strategies available:
  5084                           ; Name         Instructions Cycles
  5085                           ; simple_byte            4     3 (average)
  5086                           ;	Chosen strategy is simple_byte
  5087  002018  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5088  00201A  0A00               	xorlw	0	; case 0
  5089  00201C  A4D8               	btfss	status,2,c
  5090  00201E  D23D               	goto	l21010
  5091                           
  5092                           ; BSR set to: 0
  5093                           ; Switch size 1, requested type "simple"
  5094                           ; Number of cases is 10, Range of values is 0 to 9
  5095                           ; switch strategies available:
  5096                           ; Name         Instructions Cycles
  5097                           ; simple_byte           31    16 (average)
  5098                           ;	Chosen strategy is simple_byte
  5099  002020  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5100  002022  0A00               	xorlw	0	; case 0
  5101  002024  B4D8               	btfsc	status,2,c
  5102  002026  D7C1               	goto	l20718
  5103  002028  0A01               	xorlw	1	; case 1
  5104  00202A  B4D8               	btfsc	status,2,c
  5105  00202C  D7C2               	goto	l20720
  5106  00202E  0A03               	xorlw	3	; case 2
  5107  002030  B4D8               	btfsc	status,2,c
  5108  002032  D7C3               	goto	l20722
  5109  002034  0A01               	xorlw	1	; case 3
  5110  002036  B4D8               	btfsc	status,2,c
  5111  002038  D7C4               	goto	l20724
  5112  00203A  0A07               	xorlw	7	; case 4
  5113  00203C  B4D8               	btfsc	status,2,c
  5114  00203E  D7CB               	goto	l20732
  5115  002040  0A01               	xorlw	1	; case 5
  5116  002042  B4D8               	btfsc	status,2,c
  5117  002044  D7CC               	goto	l20734
  5118  002046  0A03               	xorlw	3	; case 6
  5119  002048  B4D8               	btfsc	status,2,c
  5120  00204A  D7CD               	goto	l20736
  5121  00204C  0A01               	xorlw	1	; case 7
  5122  00204E  B4D8               	btfsc	status,2,c
  5123  002050  D7CE               	goto	l20738
  5124  002052  0A0F               	xorlw	15	; case 8
  5125  002054  B4D8               	btfsc	status,2,c
  5126  002056  D7D1               	goto	l20746
  5127  002058  0A01               	xorlw	1	; case 9
  5128  00205A  B4D8               	btfsc	status,2,c
  5129  00205C  D7D4               	goto	l20754
  5130  00205E  D21D               	goto	l21010
  5131  002060                     l3367:
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5135  002060  C168  F169         	movff	_menu_st+23,_menu_st+24
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5139  002064  0E01               	movlw	1
  5140  002066  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5141                           
  5142                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5143  002068  0E00               	movlw	0
  5144  00206A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5145                           
  5146                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5147  00206C  D057               	goto	l20820
  5148  00206E                     l20768:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5152  00206E  0E0A               	movlw	10
  5153  002070  EC81  F01E         	call	_load_New_Menu
  5154                           
  5155                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5156  002074  D212               	goto	l21010
  5157  002076                     l20770:
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5161  002076  0E0B               	movlw	11
  5162  002078  EC81  F01E         	call	_load_New_Menu
  5163                           
  5164                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5165  00207C  D20E               	goto	l21010
  5166  00207E                     l20772:
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5170  00207E  0E63               	movlw	99
  5171  002080  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5175  002082  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5179  002086  0EAC               	movlw	low (_var_sys_NVM+20)
  5180  002088  D7A1               	goto	L13
  5181  00208A                     l20780:
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5185  00208A  0E09               	movlw	9
  5186  00208C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5187                           
  5188                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5189  00208E  0E01               	movlw	1
  5190  002090  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5194  002092  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5198  002096  0EAD               	movlw	low (_var_sys_NVM+21)
  5199  002098  D799               	goto	L13
  5200  00209A                     l3375:
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5204  00209A  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5208  00209E  0EAF               	movlw	low (_var_sys_NVM+23)
  5209  0020A0  D795               	goto	L13
  5210  0020A2                     l20792:
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5214  0020A2  0E09               	movlw	9
  5215  0020A4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5216                           
  5217                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5218  0020A6  0E01               	movlw	1
  5219  0020A8  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5223  0020AA  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5227  0020AE  0EB0               	movlw	low (_var_sys_NVM+24)
  5228  0020B0  D78D               	goto	L13
  5229  0020B2                     l20800:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5233  0020B2  0E00               	movlw	0
  5234  0020B4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5235                           
  5236                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5237  0020B6  0E00               	movlw	0
  5238  0020B8  0101               	movlb	1	; () banked
  5239  0020BA  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5240  0020BC  0E00               	movlw	0
  5241  0020BE  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5242                           
  5243                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5244  0020C0  0E27               	movlw	39
  5245  0020C2  0100               	movlb	0	; () banked
  5246  0020C4  6FF9               	movwf	(_auxCounter+1)& (0+255),b
  5247  0020C6  0E10               	movlw	16
  5248  0020C8  6FF8               	movwf	_auxCounter& (0+255),b
  5249                           
  5250                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5251  0020CA  0E00               	movlw	0
  5252  0020CC  0101               	movlb	1	; () banked
  5253  0020CE  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5254  0020D0  0E00               	movlw	0
  5255  0020D2  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5256                           
  5257                           ; BSR set to: 1
  5258                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5259  0020D4  C13C  F1F9         	movff	_var_sys+60,_tempCounter	;volatile
  5260  0020D8  C13D  F1FA         	movff	_var_sys+61,_tempCounter+1	;volatile
  5261  0020DC  C13E  F1FB         	movff	_var_sys+62,_tempCounter+2	;volatile
  5262  0020E0  C13F  F1FC         	movff	_var_sys+63,_tempCounter+3	;volatile
  5263                           
  5264                           ; BSR set to: 1
  5265                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5266  0020E4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5267  0020E6  6E12               	movwf	sm_send_event@psm^0,c
  5268  0020E8  0E02               	movlw	high _menuConfiguration_stateMachine
  5269  0020EA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5270  0020EC  0E00               	movlw	0
  5271  0020EE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5272  0020F0  0E05               	movlw	5
  5273  0020F2  6E14               	movwf	sm_send_event@event^0,c
  5274  0020F4  EC18  F042         	call	_sm_send_event	;wreg free
  5275                           
  5276                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5277  0020F8  D1D0               	goto	l21010
  5278  0020FA                     l20806:
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5282  0020FA  0E00               	movlw	0
  5283  0020FC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5284                           
  5285                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5286  0020FE  0E01               	movlw	1
  5287  002100  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5291  002102  0E00               	movlw	0
  5292  002104  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5293  002106  0E00               	movlw	0
  5294  002108  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5295                           
  5296                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5297  00210A  D1C7               	goto	l21010
  5298  00210C                     l20810:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5302  00210C  0E03               	movlw	3
  5303  00210E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5304                           
  5305                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5306  002110  0E00               	movlw	0
  5307  002112  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5311  002114  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5315  002118  0EB1               	movlw	low (_var_sys_NVM+25)
  5316  00211A  D758               	goto	L13
  5317  00211C                     l20820:
  5318                           
  5319                           ; BSR set to: 0
  5320  00211C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5321  00211E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5322  002120  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5323                           
  5324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5325                           ; Switch size 1, requested type "simple"
  5326                           ; Number of cases is 1, Range of values is 0 to 0
  5327                           ; switch strategies available:
  5328                           ; Name         Instructions Cycles
  5329                           ; simple_byte            4     3 (average)
  5330                           ;	Chosen strategy is simple_byte
  5331  002122  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5332  002124  0A00               	xorlw	0	; case 0
  5333  002126  A4D8               	btfss	status,2,c
  5334  002128  D1B8               	goto	l21010
  5335                           
  5336                           ; BSR set to: 0
  5337                           ; Switch size 1, requested type "simple"
  5338                           ; Number of cases is 10, Range of values is 0 to 9
  5339                           ; switch strategies available:
  5340                           ; Name         Instructions Cycles
  5341                           ; simple_byte           31    16 (average)
  5342                           ;	Chosen strategy is simple_byte
  5343  00212A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5344  00212C  0A00               	xorlw	0	; case 0
  5345  00212E  B4D8               	btfsc	status,2,c
  5346  002130  D79E               	goto	l20768
  5347  002132  0A01               	xorlw	1	; case 1
  5348  002134  B4D8               	btfsc	status,2,c
  5349  002136  D79F               	goto	l20770
  5350  002138  0A03               	xorlw	3	; case 2
  5351  00213A  B4D8               	btfsc	status,2,c
  5352  00213C  D7A0               	goto	l20772
  5353  00213E  0A01               	xorlw	1	; case 3
  5354  002140  B4D8               	btfsc	status,2,c
  5355  002142  D7A3               	goto	l20780
  5356  002144  0A07               	xorlw	7	; case 4
  5357  002146  B4D8               	btfsc	status,2,c
  5358  002148  D1A8               	goto	l21010
  5359  00214A  0A01               	xorlw	1	; case 5
  5360  00214C  B4D8               	btfsc	status,2,c
  5361  00214E  D7A5               	goto	l3375
  5362  002150  0A03               	xorlw	3	; case 6
  5363  002152  B4D8               	btfsc	status,2,c
  5364  002154  D7A6               	goto	l20792
  5365  002156  0A01               	xorlw	1	; case 7
  5366  002158  B4D8               	btfsc	status,2,c
  5367  00215A  D7AB               	goto	l20800
  5368  00215C  0A0F               	xorlw	15	; case 8
  5369  00215E  B4D8               	btfsc	status,2,c
  5370  002160  D7CC               	goto	l20806
  5371  002162  0A01               	xorlw	1	; case 9
  5372  002164  B4D8               	btfsc	status,2,c
  5373  002166  D7D2               	goto	l20810
  5374  002168  D198               	goto	l21010
  5375  00216A                     l20822:
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5379  00216A  0EBD               	movlw	low _menuConfiguration_stateMachine
  5380  00216C  6E12               	movwf	sm_send_event@psm^0,c
  5381  00216E  0E02               	movlw	high _menuConfiguration_stateMachine
  5382  002170  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5383  002172  0E00               	movlw	0
  5384  002174  6E15               	movwf	(sm_send_event@event+1)^0,c
  5385  002176  0E14               	movlw	20
  5386  002178  6E14               	movwf	sm_send_event@event^0,c
  5387  00217A  EC18  F042         	call	_sm_send_event	;wreg free
  5388                           
  5389                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5390  00217E  0EE2               	movlw	low _controlGate_stateMachine
  5391  002180  6E12               	movwf	sm_send_event@psm^0,c
  5392  002182  0E01               	movlw	high _controlGate_stateMachine
  5393  002184  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5394  002186  0E00               	movlw	0
  5395  002188  6E15               	movwf	(sm_send_event@event+1)^0,c
  5396  00218A  0E14               	movlw	20
  5397  00218C  6E14               	movwf	sm_send_event@event^0,c
  5398  00218E  EC18  F042         	call	_sm_send_event	;wreg free
  5399                           
  5400                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5401  002192  0E01               	movlw	1
  5402  002194  0101               	movlb	1	; () banked
  5403  002196  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5404                           
  5405                           ; BSR set to: 1
  5406                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5407  002198  0E00               	movlw	0
  5408  00219A  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5409                           
  5410                           ; BSR set to: 1
  5411                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5412  00219C  0E01               	movlw	1
  5413  00219E  EC20  F046         	call	_SaveNVM_VarSystem
  5414                           
  5415                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5416  0021A2  D17B               	goto	l21010
  5417  0021A4                     l20830:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5421  0021A4  0EBD               	movlw	low _menuConfiguration_stateMachine
  5422  0021A6  6E12               	movwf	sm_send_event@psm^0,c
  5423  0021A8  0E02               	movlw	high _menuConfiguration_stateMachine
  5424  0021AA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5425  0021AC  0E00               	movlw	0
  5426  0021AE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5427  0021B0  0E14               	movlw	20
  5428  0021B2  6E14               	movwf	sm_send_event@event^0,c
  5429  0021B4  EC18  F042         	call	_sm_send_event	;wreg free
  5430                           
  5431                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5432  0021B8  0EE2               	movlw	low _controlGate_stateMachine
  5433  0021BA  6E12               	movwf	sm_send_event@psm^0,c
  5434  0021BC  0E01               	movlw	high _controlGate_stateMachine
  5435  0021BE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5436  0021C0  0E00               	movlw	0
  5437  0021C2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5438  0021C4  0E14               	movlw	20
  5439  0021C6  6E14               	movwf	sm_send_event@event^0,c
  5440  0021C8  EC18  F042         	call	_sm_send_event	;wreg free
  5441                           
  5442                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5443  0021CC  0E01               	movlw	1
  5444  0021CE  0101               	movlb	1	; () banked
  5445  0021D0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5446                           
  5447                           ; BSR set to: 1
  5448                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5449  0021D2  0E01               	movlw	1
  5450  0021D4  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5451                           
  5452                           ; BSR set to: 1
  5453                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5454  0021D6  0E01               	movlw	1
  5455  0021D8  EC20  F046         	call	_SaveNVM_VarSystem
  5456                           
  5457                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5458  0021DC  D15E               	goto	l21010
  5459  0021DE                     l3385:
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5463  0021DE  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5467  0021E2  0E03               	movlw	3
  5468  0021E4  EC81  F01E         	call	_load_New_Menu
  5469                           
  5470                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5471  0021E8  0EB4               	movlw	low (_var_sys_NVM+28)
  5472  0021EA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5473  0021EC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5474                           
  5475                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5476  0021EE  0E01               	movlw	1
  5477  0021F0  0100               	movlb	0	; () banked
  5478  0021F2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5482  0021F4  0E02               	movlw	2
  5483  0021F6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5487  0021F8  0E00               	movlw	0
  5488  0021FA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5489                           
  5490                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5491  0021FC  D14E               	goto	l21010
  5492  0021FE                     l3386:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5496  0021FE  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5500  002202  0E02               	movlw	2
  5501  002204  EC81  F01E         	call	_load_New_Menu
  5502                           
  5503                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5504  002208  0EB3               	movlw	low (_var_sys_NVM+27)
  5505  00220A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5506  00220C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5507                           
  5508                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5509  00220E  0E01               	movlw	1
  5510  002210  0100               	movlb	0	; () banked
  5511  002212  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5515  002214  0E01               	movlw	1
  5516  002216  D7EF               	goto	L14
  5517  002218                     l20860:
  5518                           
  5519                           ; BSR set to: 0
  5520  002218  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5521  00221A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5522  00221C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5523                           
  5524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5525                           ; Switch size 1, requested type "simple"
  5526                           ; Number of cases is 1, Range of values is 0 to 0
  5527                           ; switch strategies available:
  5528                           ; Name         Instructions Cycles
  5529                           ; simple_byte            4     3 (average)
  5530                           ;	Chosen strategy is simple_byte
  5531  00221E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5532  002220  0A00               	xorlw	0	; case 0
  5533  002222  A4D8               	btfss	status,2,c
  5534  002224  D13A               	goto	l21010
  5535                           
  5536                           ; BSR set to: 0
  5537                           ; Switch size 1, requested type "simple"
  5538                           ; Number of cases is 4, Range of values is 0 to 3
  5539                           ; switch strategies available:
  5540                           ; Name         Instructions Cycles
  5541                           ; simple_byte           13     7 (average)
  5542                           ;	Chosen strategy is simple_byte
  5543  002226  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5544  002228  0A00               	xorlw	0	; case 0
  5545  00222A  B4D8               	btfsc	status,2,c
  5546  00222C  D79E               	goto	l20822
  5547  00222E  0A01               	xorlw	1	; case 1
  5548  002230  B4D8               	btfsc	status,2,c
  5549  002232  D7B8               	goto	l20830
  5550  002234  0A03               	xorlw	3	; case 2
  5551  002236  B4D8               	btfsc	status,2,c
  5552  002238  D7D2               	goto	l3385
  5553  00223A  0A01               	xorlw	1	; case 3
  5554  00223C  B4D8               	btfsc	status,2,c
  5555  00223E  D7DF               	goto	l3386
  5556  002240  D12C               	goto	l21010
  5557  002242                     l20862:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5561  002242  0E98               	movlw	low _var_sys_NVM
  5562  002244  D001               	goto	L15
  5563  002246                     l20864:
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5567  002246  0E99               	movlw	low (_var_sys_NVM+1)
  5568  002248                     L15:
  5569  002248  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5570  00224A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5571                           
  5572                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5573  00224C  D00E               	goto	l20870
  5574  00224E                     l20868:
  5575                           
  5576                           ; BSR set to: 0
  5577  00224E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5578  002250  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5579  002252  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5580                           
  5581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5582                           ; Switch size 1, requested type "simple"
  5583                           ; Number of cases is 1, Range of values is 0 to 0
  5584                           ; switch strategies available:
  5585                           ; Name         Instructions Cycles
  5586                           ; simple_byte            4     3 (average)
  5587                           ;	Chosen strategy is simple_byte
  5588  002254  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5589  002256  0A00               	xorlw	0	; case 0
  5590  002258  A4D8               	btfss	status,2,c
  5591  00225A  D007               	goto	l20870
  5592                           
  5593                           ; BSR set to: 0
  5594                           ; Switch size 1, requested type "simple"
  5595                           ; Number of cases is 2, Range of values is 0 to 1
  5596                           ; switch strategies available:
  5597                           ; Name         Instructions Cycles
  5598                           ; simple_byte            7     4 (average)
  5599                           ;	Chosen strategy is simple_byte
  5600  00225C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5601  00225E  0A00               	xorlw	0	; case 0
  5602  002260  B4D8               	btfsc	status,2,c
  5603  002262  D7EF               	goto	l20862
  5604  002264  0A01               	xorlw	1	; case 1
  5605  002266  B4D8               	btfsc	status,2,c
  5606  002268  D7EE               	goto	l20864
  5607  00226A                     l20870:
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5611  00226A  0E2D               	movlw	45
  5612  00226C                     L29:
  5613  00226C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5614                           
  5615                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5616  00226E  0E00               	movlw	0
  5617  002270  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5618  002272                     L19:
  5619                           
  5620                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5621  002272  0E01               	movlw	1
  5622  002274  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5626  002276  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5627  00227A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5628  00227E  50DF               	movf	indf2,w,c
  5629  002280  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5630                           
  5631                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5632  002282  D10B               	goto	l21010
  5633  002284                     l20874:
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5637  002284  0E09               	movlw	9
  5638  002286  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5639                           
  5640                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5641  002288  0E00               	movlw	0
  5642  00228A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5643                           
  5644                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5645  00228C  D00F               	goto	l20890
  5646  00228E                     l20876:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5650  00228E  0E02               	movlw	2
  5651  002290  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5652  002292  D002               	goto	l20880
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5656  002294  0E00               	movlw	0
  5657  002296  D001               	goto	L16
  5658  002298                     l20880:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5662  002298  0E09               	movlw	9
  5663  00229A                     L16:
  5664  00229A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5668  00229C  0E9A               	movlw	low (_var_sys_NVM+2)
  5669  00229E  D003               	goto	L18
  5670  0022A0                     l20884:
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5674  0022A0  0E9B               	movlw	low (_var_sys_NVM+3)
  5675  0022A2  D001               	goto	L18
  5676  0022A4                     l20886:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5680  0022A4  0EA7               	movlw	low (_var_sys_NVM+15)
  5681  0022A6                     L18:
  5682  0022A6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5683  0022A8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5684                           
  5685                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5686  0022AA  D7E3               	goto	L19
  5687  0022AC                     l20890:
  5688                           
  5689                           ; BSR set to: 0
  5690  0022AC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5691  0022AE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5692  0022B0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5693                           
  5694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5695                           ; Switch size 1, requested type "simple"
  5696                           ; Number of cases is 1, Range of values is 0 to 0
  5697                           ; switch strategies available:
  5698                           ; Name         Instructions Cycles
  5699                           ; simple_byte            4     3 (average)
  5700                           ;	Chosen strategy is simple_byte
  5701  0022B2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5702  0022B4  0A00               	xorlw	0	; case 0
  5703  0022B6  A4D8               	btfss	status,2,c
  5704  0022B8  D7DC               	goto	L19
  5705                           
  5706                           ; BSR set to: 0
  5707                           ; Switch size 1, requested type "simple"
  5708                           ; Number of cases is 3, Range of values is 0 to 2
  5709                           ; switch strategies available:
  5710                           ; Name         Instructions Cycles
  5711                           ; simple_byte           10     6 (average)
  5712                           ;	Chosen strategy is simple_byte
  5713  0022BA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5714  0022BC  0A00               	xorlw	0	; case 0
  5715  0022BE  B4D8               	btfsc	status,2,c
  5716  0022C0  D7E6               	goto	l20876
  5717  0022C2  0A01               	xorlw	1	; case 1
  5718  0022C4  B4D8               	btfsc	status,2,c
  5719  0022C6  D7EC               	goto	l20884
  5720  0022C8  0A03               	xorlw	3	; case 2
  5721  0022CA  B4D8               	btfsc	status,2,c
  5722  0022CC  D7EB               	goto	l20886
  5723  0022CE  D7D1               	goto	L19
  5724  0022D0                     l20896:
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5728  0022D0  0E9D               	movlw	low (_var_sys_NVM+5)
  5729  0022D2  D001               	goto	L20
  5730  0022D4                     l20898:
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5734  0022D4  0E9E               	movlw	low (_var_sys_NVM+6)
  5735  0022D6                     L20:
  5736  0022D6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5737  0022D8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5738                           
  5739                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5740  0022DA  D00E               	goto	l20904
  5741  0022DC                     l20902:
  5742                           
  5743                           ; BSR set to: 0
  5744  0022DC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5745  0022DE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5746  0022E0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5747                           
  5748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5749                           ; Switch size 1, requested type "simple"
  5750                           ; Number of cases is 1, Range of values is 0 to 0
  5751                           ; switch strategies available:
  5752                           ; Name         Instructions Cycles
  5753                           ; simple_byte            4     3 (average)
  5754                           ;	Chosen strategy is simple_byte
  5755  0022E2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5756  0022E4  0A00               	xorlw	0	; case 0
  5757  0022E6  A4D8               	btfss	status,2,c
  5758  0022E8  D007               	goto	l20904
  5759                           
  5760                           ; BSR set to: 0
  5761                           ; Switch size 1, requested type "simple"
  5762                           ; Number of cases is 2, Range of values is 0 to 1
  5763                           ; switch strategies available:
  5764                           ; Name         Instructions Cycles
  5765                           ; simple_byte            7     4 (average)
  5766                           ;	Chosen strategy is simple_byte
  5767  0022EA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5768  0022EC  0A00               	xorlw	0	; case 0
  5769  0022EE  B4D8               	btfsc	status,2,c
  5770  0022F0  D7EF               	goto	l20896
  5771  0022F2  0A01               	xorlw	1	; case 1
  5772  0022F4  B4D8               	btfsc	status,2,c
  5773  0022F6  D7EE               	goto	l20898
  5774  0022F8                     l20904:
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5778  0022F8  0E63               	movlw	99
  5779  0022FA  D7B8               	goto	L29
  5780  0022FC                     l20908:
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5784  0022FC  0E9F               	movlw	low (_var_sys_NVM+7)
  5785  0022FE  D034               	goto	L126
  5786  002300                     l20910:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5790  002300  0EA0               	movlw	low (_var_sys_NVM+8)
  5791  002302  D032               	goto	L126
  5792  002304                     l20914:
  5793                           
  5794                           ; BSR set to: 0
  5795  002304  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5796  002306  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5797  002308  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5798                           
  5799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5800                           ; Switch size 1, requested type "simple"
  5801                           ; Number of cases is 1, Range of values is 0 to 0
  5802                           ; switch strategies available:
  5803                           ; Name         Instructions Cycles
  5804                           ; simple_byte            4     3 (average)
  5805                           ;	Chosen strategy is simple_byte
  5806  00230A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5807  00230C  0A00               	xorlw	0	; case 0
  5808  00230E  A4D8               	btfss	status,2,c
  5809  002310  D02D               	goto	L125
  5810                           
  5811                           ; BSR set to: 0
  5812                           ; Switch size 1, requested type "simple"
  5813                           ; Number of cases is 2, Range of values is 0 to 1
  5814                           ; switch strategies available:
  5815                           ; Name         Instructions Cycles
  5816                           ; simple_byte            7     4 (average)
  5817                           ;	Chosen strategy is simple_byte
  5818  002312  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5819  002314  0A00               	xorlw	0	; case 0
  5820  002316  B4D8               	btfsc	status,2,c
  5821  002318  D7F1               	goto	l20908
  5822  00231A  0A01               	xorlw	1	; case 1
  5823  00231C  B4D8               	btfsc	status,2,c
  5824  00231E  D7F0               	goto	l20910
  5825  002320  D025               	goto	L125
  5826  002322                     l20920:
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5830  002322  0EA1               	movlw	low (_var_sys_NVM+9)
  5831  002324  D021               	goto	L126
  5832  002326                     l20922:
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5836  002326  0EA2               	movlw	low (_var_sys_NVM+10)
  5837  002328  D01F               	goto	L126
  5838  00232A                     l20924:
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5842  00232A  0EA3               	movlw	low (_var_sys_NVM+11)
  5843  00232C  D01D               	goto	L126
  5844  00232E                     l20926:
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5848  00232E  0EAE               	movlw	low (_var_sys_NVM+22)
  5849  002330  D01B               	goto	L126
  5850  002332                     l20930:
  5851                           
  5852                           ; BSR set to: 0
  5853  002332  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5854  002334  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5855  002336  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5856                           
  5857                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5858                           ; Switch size 1, requested type "simple"
  5859                           ; Number of cases is 1, Range of values is 0 to 0
  5860                           ; switch strategies available:
  5861                           ; Name         Instructions Cycles
  5862                           ; simple_byte            4     3 (average)
  5863                           ;	Chosen strategy is simple_byte
  5864  002338  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5865  00233A  0A00               	xorlw	0	; case 0
  5866  00233C  A4D8               	btfss	status,2,c
  5867  00233E  D016               	goto	L125
  5868                           
  5869                           ; BSR set to: 0
  5870                           ; Switch size 1, requested type "simple"
  5871                           ; Number of cases is 4, Range of values is 0 to 3
  5872                           ; switch strategies available:
  5873                           ; Name         Instructions Cycles
  5874                           ; simple_byte           13     7 (average)
  5875                           ;	Chosen strategy is simple_byte
  5876  002340  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5877  002342  0A00               	xorlw	0	; case 0
  5878  002344  B4D8               	btfsc	status,2,c
  5879  002346  D7ED               	goto	l20920
  5880  002348  0A01               	xorlw	1	; case 1
  5881  00234A  B4D8               	btfsc	status,2,c
  5882  00234C  D7EC               	goto	l20922
  5883  00234E  0A03               	xorlw	3	; case 2
  5884  002350  B4D8               	btfsc	status,2,c
  5885  002352  D7EB               	goto	l20924
  5886  002354  0A01               	xorlw	1	; case 3
  5887  002356  B4D8               	btfsc	status,2,c
  5888  002358  D7EA               	goto	l20926
  5889  00235A  D008               	goto	L125
  5890  00235C                     l20936:
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5894  00235C  0EA8               	movlw	low (_var_sys_NVM+16)
  5895  00235E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5896  002360  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5900  002362  0E02               	movlw	2
  5901  002364  D783               	goto	L29
  5902  002366                     l20942:
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5906  002366  0EA9               	movlw	low (_var_sys_NVM+17)
  5907  002368                     L126:
  5908  002368  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5909  00236A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5910  00236C                     L125:
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5914  00236C  0E01               	movlw	1
  5915  00236E  D77E               	goto	L29
  5916  002370                     l20950:
  5917                           
  5918                           ; BSR set to: 0
  5919  002370  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5920  002372  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5921  002374  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5922                           
  5923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5924                           ; Switch size 1, requested type "simple"
  5925                           ; Number of cases is 1, Range of values is 0 to 0
  5926                           ; switch strategies available:
  5927                           ; Name         Instructions Cycles
  5928                           ; simple_byte            4     3 (average)
  5929                           ;	Chosen strategy is simple_byte
  5930  002376  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5931  002378  0A00               	xorlw	0	; case 0
  5932  00237A  A4D8               	btfss	status,2,c
  5933  00237C  D77A               	goto	L19
  5934                           
  5935                           ; BSR set to: 0
  5936                           ; Switch size 1, requested type "simple"
  5937                           ; Number of cases is 2, Range of values is 0 to 1
  5938                           ; switch strategies available:
  5939                           ; Name         Instructions Cycles
  5940                           ; simple_byte            7     4 (average)
  5941                           ;	Chosen strategy is simple_byte
  5942  00237E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5943  002380  0A00               	xorlw	0	; case 0
  5944  002382  B4D8               	btfsc	status,2,c
  5945  002384  D7EB               	goto	l20936
  5946  002386  0A01               	xorlw	1	; case 1
  5947  002388  B4D8               	btfsc	status,2,c
  5948  00238A  D7ED               	goto	l20942
  5949  00238C  D772               	goto	L19
  5950  00238E                     l20956:
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5954  00238E  0EAA               	movlw	low (_var_sys_NVM+18)
  5955  002390  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5956  002392  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  5960  002394  0E09               	movlw	9
  5961  002396  D76A               	goto	L29
  5962  002398                     l20962:
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  5966  002398  0EAB               	movlw	low (_var_sys_NVM+19)
  5967  00239A  D7FA               	goto	L27
  5968  00239C                     l20970:
  5969                           
  5970                           ; BSR set to: 0
  5971  00239C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5972  00239E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5973  0023A0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5974                           
  5975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5976                           ; Switch size 1, requested type "simple"
  5977                           ; Number of cases is 1, Range of values is 0 to 0
  5978                           ; switch strategies available:
  5979                           ; Name         Instructions Cycles
  5980                           ; simple_byte            4     3 (average)
  5981                           ;	Chosen strategy is simple_byte
  5982  0023A2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5983  0023A4  0A00               	xorlw	0	; case 0
  5984  0023A6  A4D8               	btfss	status,2,c
  5985  0023A8  D764               	goto	L19
  5986                           
  5987                           ; BSR set to: 0
  5988                           ; Switch size 1, requested type "simple"
  5989                           ; Number of cases is 2, Range of values is 0 to 1
  5990                           ; switch strategies available:
  5991                           ; Name         Instructions Cycles
  5992                           ; simple_byte            7     4 (average)
  5993                           ;	Chosen strategy is simple_byte
  5994  0023AA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5995  0023AC  0A00               	xorlw	0	; case 0
  5996  0023AE  B4D8               	btfsc	status,2,c
  5997  0023B0  D7EE               	goto	l20956
  5998  0023B2  0A01               	xorlw	1	; case 1
  5999  0023B4  B4D8               	btfsc	status,2,c
  6000  0023B6  D7F0               	goto	l20962
  6001  0023B8  D75C               	goto	L19
  6002  0023BA                     l20976:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6006  0023BA  0EF8               	movlw	low setValueToEdit@value
  6007  0023BC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6008  0023BE  0E01               	movlw	high setValueToEdit@value
  6009  0023C0  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6013  0023C2  0E00               	movlw	0
  6014  0023C4  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6015  0023C6  D00D               	goto	l20986
  6016  0023C8                     l3433:
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6020  0023C8  C0DF  F1F8         	movff	setValueToEdit@posindex,setValueToEdit@value
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6024  0023CC  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6025  0023D0  0101               	movlb	1	; () banked
  6026  0023D2  5168               	movf	(_menu_st+23)& (0+255),w,b
  6027  0023D4  ECA6  F03B         	call	_cmdMemoryIsEmpty
  6028  0023D8  0900               	iorlw	0
  6029  0023DA  A4D8               	btfss	status,2,c
  6030  0023DC  D008               	goto	u24120
  6031                           
  6032                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6033  0023DE  0100               	movlb	0	; () banked
  6034  0023E0  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6035  0023E2                     l20986:
  6036                           
  6037                           ; BSR set to: 0
  6038  0023E2  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6039  0023E6  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6040  0023E8  5CDE               	subwf	postinc2,w,c
  6041  0023EA  B0D8               	btfsc	status,0,c
  6042  0023EC  D7ED               	goto	l3433
  6043  0023EE                     u24120:
  6044                           
  6045                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6046  0023EE  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6047  0023F2  D005               	goto	L28
  6048  0023F4                     l20990:
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  6052  0023F4  0EB9               	movlw	low (_var_sys_NVM+33)
  6053  0023F6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6054  0023F8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;sm_MenuConfiguration_MC50.c: 1082:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6058  0023FA  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6059  0023FE                     L28:
  6060  0023FE  50DF               	movf	indf2,w,c
  6061  002400  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6062                           
  6063                           ;sm_MenuConfiguration_MC50.c: 1083:                 };sm_MenuConfiguration_MC50.c: 1084:
      +                                           break;
  6064  002402  D00E               	goto	l20998
  6065  002404                     l20996:
  6066                           
  6067                           ; BSR set to: 0
  6068  002404  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6069  002406  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6070  002408  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6071                           
  6072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6073                           ; Switch size 1, requested type "simple"
  6074                           ; Number of cases is 1, Range of values is 0 to 0
  6075                           ; switch strategies available:
  6076                           ; Name         Instructions Cycles
  6077                           ; simple_byte            4     3 (average)
  6078                           ;	Chosen strategy is simple_byte
  6079  00240A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6080  00240C  0A00               	xorlw	0	; case 0
  6081  00240E  A4D8               	btfss	status,2,c
  6082  002410  D007               	goto	l20998
  6083                           
  6084                           ; BSR set to: 0
  6085                           ; Switch size 1, requested type "simple"
  6086                           ; Number of cases is 2, Range of values is 0 to 1
  6087                           ; switch strategies available:
  6088                           ; Name         Instructions Cycles
  6089                           ; simple_byte            7     4 (average)
  6090                           ;	Chosen strategy is simple_byte
  6091  002412  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6092  002414  0A00               	xorlw	0	; case 0
  6093  002416  B4D8               	btfsc	status,2,c
  6094  002418  D7D0               	goto	l20976
  6095  00241A  0A01               	xorlw	1	; case 1
  6096  00241C  B4D8               	btfsc	status,2,c
  6097  00241E  D7EA               	goto	l20990
  6098  002420                     l20998:
  6099                           
  6100                           ;sm_MenuConfiguration_MC50.c: 1086:             edit_Param.position=*edit_Param.Value;
  6101  002420  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6102  002424  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6103  002428  50DF               	movf	indf2,w,c
  6104  00242A  6E46               	movwf	_edit_Param^0,c	;volatile
  6105                           
  6106                           ;sm_MenuConfiguration_MC50.c: 1087:             edit_Param.Min=0;
  6107  00242C  0E00               	movlw	0
  6108  00242E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6109                           
  6110                           ;sm_MenuConfiguration_MC50.c: 1088:             haveValueToEdit=1;
  6111  002430  0E01               	movlw	1
  6112  002432  0100               	movlb	0	; () banked
  6113  002434  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6114                           
  6115                           ;sm_MenuConfiguration_MC50.c: 1089:             edit_Param.tempValue=*edit_Param.Value;
  6116  002436  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6117  00243A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6118  00243E  50DF               	movf	indf2,w,c
  6119  002440  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;sm_MenuConfiguration_MC50.c: 1090:             InitReceiver();
  6123  002442  EC00  F049         	call	_InitReceiver	;wreg free
  6124                           
  6125                           ;sm_MenuConfiguration_MC50.c: 1091:         };sm_MenuConfiguration_MC50.c: 1092:        
      +                           break;
  6126  002446  D029               	goto	l21010
  6127  002448                     l21008:
  6128                           
  6129                           ; BSR set to: 0
  6130  002448  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6131  00244A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6132  00244C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6133                           
  6134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6135                           ; Switch size 1, requested type "simple"
  6136                           ; Number of cases is 1, Range of values is 0 to 0
  6137                           ; switch strategies available:
  6138                           ; Name         Instructions Cycles
  6139                           ; simple_byte            4     3 (average)
  6140                           ;	Chosen strategy is simple_byte
  6141  00244E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6142  002450  0A00               	xorlw	0	; case 0
  6143  002452  A4D8               	btfss	status,2,c
  6144  002454  D022               	goto	l21010
  6145                           
  6146                           ; BSR set to: 0
  6147                           ; Switch size 1, requested type "simple"
  6148                           ; Number of cases is 11, Range of values is 0 to 12
  6149                           ; switch strategies available:
  6150                           ; Name         Instructions Cycles
  6151                           ; simple_byte           34    18 (average)
  6152                           ;	Chosen strategy is simple_byte
  6153  002456  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6154  002458  0A00               	xorlw	0	; case 0
  6155  00245A  B4D8               	btfsc	status,2,c
  6156  00245C  D5A1               	goto	l3353
  6157  00245E  0A01               	xorlw	1	; case 1
  6158  002460  B4D8               	btfsc	status,2,c
  6159  002462  D5FE               	goto	l3367
  6160  002464  0A05               	xorlw	5	; case 4
  6161  002466  B4D8               	btfsc	status,2,c
  6162  002468  D6D7               	goto	l20860
  6163  00246A  0A01               	xorlw	1	; case 5
  6164  00246C  B4D8               	btfsc	status,2,c
  6165  00246E  D6EF               	goto	l20868
  6166  002470  0A03               	xorlw	3	; case 6
  6167  002472  B4D8               	btfsc	status,2,c
  6168  002474  D707               	goto	l20874
  6169  002476  0A01               	xorlw	1	; case 7
  6170  002478  B4D8               	btfsc	status,2,c
  6171  00247A  D730               	goto	l20902
  6172  00247C  0A0F               	xorlw	15	; case 8
  6173  00247E  B4D8               	btfsc	status,2,c
  6174  002480  D741               	goto	l20914
  6175  002482  0A01               	xorlw	1	; case 9
  6176  002484  B4D8               	btfsc	status,2,c
  6177  002486  D755               	goto	l20930
  6178  002488  0A03               	xorlw	3	; case 10
  6179  00248A  B4D8               	btfsc	status,2,c
  6180  00248C  D771               	goto	l20950
  6181  00248E  0A01               	xorlw	1	; case 11
  6182  002490  B4D8               	btfsc	status,2,c
  6183  002492  D784               	goto	l20970
  6184  002494  0A07               	xorlw	7	; case 12
  6185  002496  B4D8               	btfsc	status,2,c
  6186  002498  D7B5               	goto	l20996
  6187  00249A                     l21010:
  6188                           
  6189                           ;sm_MenuConfiguration_MC50.c: 1095:     return haveValueToEdit;
  6190  00249A  0100               	movlb	0	; () banked
  6191  00249C  51E0               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6192                           
  6193                           ; BSR set to: 0
  6194  00249E  0012               	return		;funcret
  6195  0024A0                     __end_of_setValueToEdit:
  6196                           	callstack 0
  6197                           
  6198 ;; *************** function _load_New_Menu *****************
  6199 ;; Defined at:
  6200 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  Menu            1    wreg     enum E10813
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  Menu            1   33[COMRAM] enum E10813
  6205 ;;  i               1   34[COMRAM] unsigned char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1    wreg      void 
  6208 ;; Registers used:
  6209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6218 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6219 ;;Total ram usage:        4 bytes
  6220 ;; Hardware stack levels used: 1
  6221 ;; Hardware stack levels required when called: 5
  6222 ;; This function calls:
  6223 ;;		_SetSegmentValueIntermitentMain
  6224 ;;		_SetSegmentValueMain
  6225 ;; This function is called by:
  6226 ;;		_sm_execute_main
  6227 ;;		_sm_execute_menuConfiguration
  6228 ;;		_setValueToEdit
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text4
  6233  003D02                     __ptext4:
  6234                           	callstack 0
  6235  003D02                     _load_New_Menu:
  6236                           	callstack 22
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;incstack = 0
  6240                           ;load_New_Menu@Menu stored from wreg
  6241  003D02  6E22               	movwf	load_New_Menu@Menu^0,c
  6242                           
  6243                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6244  003D04  0E00               	movlw	0
  6245  003D06  0101               	movlb	1	; () banked
  6246  003D08  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6247  003D0A  0E64               	movlw	100
  6248  003D0C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6249                           
  6250                           ; BSR set to: 1
  6251                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6252  003D0E  5022               	movf	load_New_Menu@Menu^0,w,c
  6253  003D10  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6254  003D12  B4D8               	btfsc	status,2,c
  6255  003D14  D006               	goto	l20018
  6256                           
  6257                           ; BSR set to: 1
  6258  003D16  0E01               	movlw	1
  6259  003D18  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6260  003D1A  D003               	goto	l20018
  6261                           
  6262                           ; BSR set to: 1
  6263                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6264  003D1C  0E00               	movlw	0
  6265  003D1E  6F68               	movwf	(_menu_st+23)& (0+255),b
  6266                           
  6267                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6268  003D20  D005               	goto	l20022
  6269  003D22                     l20018:
  6270                           
  6271                           ; BSR set to: 1
  6272  003D22  0E02               	movlw	2
  6273  003D24  6022               	cpfslt	load_New_Menu@Menu^0,c
  6274  003D26  D002               	goto	l20022
  6275                           
  6276                           ; BSR set to: 1
  6277                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6278  003D28  C169  F168         	movff	_menu_st+24,_menu_st+23
  6279  003D2C                     l20022:
  6280                           
  6281                           ; BSR set to: 1
  6282                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6283  003D2C  0E00               	movlw	0
  6284  003D2E  6F65               	movwf	(_menu_st+20)& (0+255),b
  6285                           
  6286                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6287  003D30  D0F6               	goto	l20074
  6288  003D32                     l20024:
  6289                           
  6290                           ; BSR set to: 1
  6291                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6292  003D32  0E00               	movlw	0
  6293  003D34  6F66               	movwf	(_menu_st+21)& (0+255),b
  6294                           
  6295                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6296  003D36  0E0A               	movlw	10
  6297  003D38  6F67               	movwf	(_menu_st+22)& (0+255),b
  6298                           
  6299                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6300  003D3A  0E00               	movlw	0
  6301  003D3C  6F69               	movwf	(_menu_st+24)& (0+255),b
  6302                           
  6303                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6304  003D3E  0E00               	movlw	0
  6305  003D40  6E23               	movwf	load_New_Menu@i^0,c
  6306  003D42                     l20030:
  6307                           
  6308                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6309  003D42  5023               	movf	load_New_Menu@i^0,w,c
  6310  003D44  0D02               	mullw	2
  6311  003D46  0E51               	movlw	low _menu_st
  6312  003D48  24F3               	addwf	243,w,c
  6313  003D4A  6ED9               	movwf	fsr2l,c
  6314  003D4C  0E01               	movlw	high _menu_st
  6315  003D4E  20F4               	addwfc	prodh,w,c
  6316  003D50  6EDA               	movwf	fsr2h,c
  6317  003D52  0E10               	movlw	16
  6318  003D54  6EDF               	movwf	indf2,c
  6319                           
  6320                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6321  003D56  5023               	movf	load_New_Menu@i^0,w,c
  6322  003D58  0D02               	mullw	2
  6323  003D5A  0E52               	movlw	low (_menu_st+1)
  6324  003D5C  24F3               	addwf	243,w,c
  6325  003D5E  6ED9               	movwf	fsr2l,c
  6326  003D60  0E01               	movlw	high (_menu_st+1)
  6327  003D62  20F4               	addwfc	prodh,w,c
  6328  003D64  6EDA               	movwf	fsr2h,c
  6329  003D66  C023  FFDF         	movff	load_New_Menu@i,indf2
  6330                           
  6331                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6332  003D6A  2A23               	incf	load_New_Menu@i^0,f,c
  6333  003D6C  0E09               	movlw	9
  6334  003D6E  6423               	cpfsgt	load_New_Menu@i^0,c
  6335  003D70  D7E8               	goto	l20030
  6336  003D72  D107               	goto	l20076
  6337  003D74                     l20036:
  6338                           
  6339                           ; BSR set to: 1
  6340                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6341  003D74  0E01               	movlw	1
  6342  003D76  6F66               	movwf	(_menu_st+21)& (0+255),b
  6343                           
  6344                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6345  003D78  0E0A               	movlw	10
  6346  003D7A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6347                           
  6348                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6349  003D7C  0E00               	movlw	0
  6350  003D7E  6F69               	movwf	(_menu_st+24)& (0+255),b
  6351                           
  6352                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6353  003D80  0E00               	movlw	0
  6354  003D82  6E23               	movwf	load_New_Menu@i^0,c
  6355  003D84                     l20042:
  6356                           
  6357                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6358  003D84  5023               	movf	load_New_Menu@i^0,w,c
  6359  003D86  0D02               	mullw	2
  6360  003D88  0E51               	movlw	low _menu_st
  6361  003D8A  24F3               	addwf	243,w,c
  6362  003D8C  6ED9               	movwf	fsr2l,c
  6363  003D8E  0E01               	movlw	high _menu_st
  6364  003D90  20F4               	addwfc	prodh,w,c
  6365  003D92  6EDA               	movwf	fsr2h,c
  6366  003D94  0E0E               	movlw	14
  6367  003D96  6EDF               	movwf	indf2,c
  6368                           
  6369                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6370  003D98  5023               	movf	load_New_Menu@i^0,w,c
  6371  003D9A  0D02               	mullw	2
  6372  003D9C  0E52               	movlw	low (_menu_st+1)
  6373  003D9E  24F3               	addwf	243,w,c
  6374  003DA0  6ED9               	movwf	fsr2l,c
  6375  003DA2  0E01               	movlw	high (_menu_st+1)
  6376  003DA4  20F4               	addwfc	prodh,w,c
  6377  003DA6  6EDA               	movwf	fsr2h,c
  6378  003DA8  C023  FFDF         	movff	load_New_Menu@i,indf2
  6379                           
  6380                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6381  003DAC  2A23               	incf	load_New_Menu@i^0,f,c
  6382  003DAE  0E09               	movlw	9
  6383  003DB0  6423               	cpfsgt	load_New_Menu@i^0,c
  6384  003DB2  D7E8               	goto	l20042
  6385  003DB4  D0E6               	goto	l20076
  6386  003DB6                     l20048:
  6387                           
  6388                           ; BSR set to: 1
  6389                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6390  003DB6  0E00               	movlw	0
  6391  003DB8  6F65               	movwf	(_menu_st+20)& (0+255),b
  6392                           
  6393                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6394  003DBA  0E04               	movlw	4
  6395  003DBC  6F66               	movwf	(_menu_st+21)& (0+255),b
  6396                           
  6397                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6398  003DBE  0E04               	movlw	4
  6399  003DC0  6F67               	movwf	(_menu_st+22)& (0+255),b
  6400                           
  6401                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6402  003DC2  0E0A               	movlw	10
  6403  003DC4  6F51               	movwf	_menu_st& (0+255),b
  6404                           
  6405                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6406  003DC6  0E13               	movlw	19
  6407  003DC8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6408                           
  6409                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6410  003DCA  0E17               	movlw	23
  6411  003DCC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6412                           
  6413                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6414  003DCE  0E0A               	movlw	10
  6415  003DD0  6F54               	movwf	(_menu_st+3)& (0+255),b
  6416                           
  6417                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6418  003DD2  0E05               	movlw	5
  6419  003DD4  6F55               	movwf	(_menu_st+4)& (0+255),b
  6420                           
  6421                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6422  003DD6  0E21               	movlw	33
  6423  003DD8  6F56               	movwf	(_menu_st+5)& (0+255),b
  6424                           
  6425                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6426  003DDA  0E0D               	movlw	13
  6427  003DDC  6F57               	movwf	(_menu_st+6)& (0+255),b
  6428                           
  6429                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6430  003DDE  0E01               	movlw	1
  6431  003DE0  D051               	goto	L31
  6432  003DE2                     l20050:
  6433                           
  6434                           ; BSR set to: 1
  6435                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6436  003DE2  0E00               	movlw	0
  6437  003DE4  6F65               	movwf	(_menu_st+20)& (0+255),b
  6438                           
  6439                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6440  003DE6  0E05               	movlw	5
  6441  003DE8  6F66               	movwf	(_menu_st+21)& (0+255),b
  6442                           
  6443                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6444  003DEA  0E02               	movlw	2
  6445  003DEC  6F67               	movwf	(_menu_st+22)& (0+255),b
  6446                           
  6447                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6448  003DEE  0E0D               	movlw	13
  6449  003DF0  6F51               	movwf	_menu_st& (0+255),b
  6450                           
  6451                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6452  003DF2  0E0A               	movlw	10
  6453  003DF4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6454                           
  6455                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6456  003DF6  0E0D               	movlw	13
  6457  003DF8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6458                           
  6459                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6460  003DFA  0E0F               	movlw	15
  6461  003DFC  D08E               	goto	L38
  6462  003DFE                     l20052:
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6466  003DFE  0E00               	movlw	0
  6467  003E00  6F65               	movwf	(_menu_st+20)& (0+255),b
  6468                           
  6469                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6470  003E02  0E06               	movlw	6
  6471  003E04  6F66               	movwf	(_menu_st+21)& (0+255),b
  6472                           
  6473                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6474  003E06  0E03               	movlw	3
  6475  003E08  6F67               	movwf	(_menu_st+22)& (0+255),b
  6476                           
  6477                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6478  003E0A  0E0F               	movlw	15
  6479  003E0C  6F51               	movwf	_menu_st& (0+255),b
  6480                           
  6481                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6482  003E0E  0E00               	movlw	0
  6483  003E10  6F52               	movwf	(_menu_st+1)& (0+255),b
  6484                           
  6485                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6486  003E12  0E0F               	movlw	15
  6487  003E14  6F53               	movwf	(_menu_st+2)& (0+255),b
  6488                           
  6489                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6490  003E16  0E05               	movlw	5
  6491  003E18  6F54               	movwf	(_menu_st+3)& (0+255),b
  6492                           
  6493                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6494  003E1A  0E0F               	movlw	15
  6495  003E1C  6F55               	movwf	(_menu_st+4)& (0+255),b
  6496                           
  6497                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6498  003E1E  0E0D               	movlw	13
  6499  003E20  D073               	goto	L33
  6500  003E22                     l20054:
  6501                           
  6502                           ; BSR set to: 1
  6503                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6504  003E22  0E00               	movlw	0
  6505  003E24  6F65               	movwf	(_menu_st+20)& (0+255),b
  6506                           
  6507                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6508  003E26  0E07               	movlw	7
  6509  003E28  6F66               	movwf	(_menu_st+21)& (0+255),b
  6510                           
  6511                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6512  003E2A  0E02               	movlw	2
  6513  003E2C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6514                           
  6515                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6516  003E2E  0E0A               	movlw	10
  6517  003E30  6F51               	movwf	_menu_st& (0+255),b
  6518                           
  6519                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6520  003E32  0E0F               	movlw	15
  6521  003E34  6F52               	movwf	(_menu_st+1)& (0+255),b
  6522                           
  6523                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6524  003E36  0E0A               	movlw	10
  6525  003E38  6F53               	movwf	(_menu_st+2)& (0+255),b
  6526                           
  6527                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6528  003E3A  0E10               	movlw	16
  6529  003E3C  D06E               	goto	L38
  6530  003E3E                     l20056:
  6531                           
  6532                           ; BSR set to: 1
  6533                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6534  003E3E  0E00               	movlw	0
  6535  003E40  6F65               	movwf	(_menu_st+20)& (0+255),b
  6536                           
  6537                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6538  003E42  0E08               	movlw	8
  6539  003E44  6F66               	movwf	(_menu_st+21)& (0+255),b
  6540                           
  6541                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6542  003E46  0E02               	movlw	2
  6543  003E48  6F67               	movwf	(_menu_st+22)& (0+255),b
  6544                           
  6545                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6546  003E4A  0E12               	movlw	18
  6547  003E4C  6F51               	movwf	_menu_st& (0+255),b
  6548                           
  6549                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6550  003E4E  0E0E               	movlw	14
  6551  003E50  6F52               	movwf	(_menu_st+1)& (0+255),b
  6552                           
  6553                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6554  003E52  0E11               	movlw	17
  6555  003E54  6F53               	movwf	(_menu_st+2)& (0+255),b
  6556                           
  6557                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6558  003E56  0E0C               	movlw	12
  6559  003E58  D060               	goto	L38
  6560  003E5A                     l20058:
  6561                           
  6562                           ; BSR set to: 1
  6563                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6564  003E5A  0E00               	movlw	0
  6565  003E5C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6566                           
  6567                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6568  003E5E  0E09               	movlw	9
  6569  003E60  6F66               	movwf	(_menu_st+21)& (0+255),b
  6570                           
  6571                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6572  003E62  0E04               	movlw	4
  6573  003E64  6F67               	movwf	(_menu_st+22)& (0+255),b
  6574                           
  6575                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6576  003E66  0E12               	movlw	18
  6577  003E68  6F51               	movwf	_menu_st& (0+255),b
  6578                           
  6579                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6580  003E6A  0E0A               	movlw	10
  6581  003E6C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6582                           
  6583                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6584  003E6E  0E11               	movlw	17
  6585  003E70  6F53               	movwf	(_menu_st+2)& (0+255),b
  6586                           
  6587                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6588  003E72  0E0A               	movlw	10
  6589  003E74  6F54               	movwf	(_menu_st+3)& (0+255),b
  6590                           
  6591                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6592  003E76  0E11               	movlw	17
  6593  003E78  6F55               	movwf	(_menu_st+4)& (0+255),b
  6594                           
  6595                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6596  003E7A  0E12               	movlw	18
  6597  003E7C  6F56               	movwf	(_menu_st+5)& (0+255),b
  6598                           
  6599                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6600  003E7E  0E05               	movlw	5
  6601  003E80  6F57               	movwf	(_menu_st+6)& (0+255),b
  6602                           
  6603                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6604  003E82  0E15               	movlw	21
  6605  003E84                     L31:
  6606  003E84  6F58               	movwf	(_menu_st+7)& (0+255),b
  6607                           
  6608                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6609  003E86  D07D               	goto	l20076
  6610  003E88                     l20060:
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6614  003E88  0E01               	movlw	1
  6615  003E8A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6616                           
  6617                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6618  003E8C  0E0A               	movlw	10
  6619  003E8E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6620                           
  6621                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6622  003E90  0E02               	movlw	2
  6623  003E92  6F67               	movwf	(_menu_st+22)& (0+255),b
  6624                           
  6625                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6626  003E94  0E11               	movlw	17
  6627  003E96  6F51               	movwf	_menu_st& (0+255),b
  6628                           
  6629                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6630  003E98  0E10               	movlw	16
  6631  003E9A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6632                           
  6633                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6634  003E9C  0E10               	movlw	16
  6635  003E9E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6636                           
  6637                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6638  003EA0  0E12               	movlw	18
  6639  003EA2  D03B               	goto	L38
  6640  003EA4                     l20062:
  6641                           
  6642                           ; BSR set to: 1
  6643                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6644  003EA4  0E01               	movlw	1
  6645  003EA6  6F65               	movwf	(_menu_st+20)& (0+255),b
  6646                           
  6647                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6648  003EA8  0E0B               	movlw	11
  6649  003EAA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6650                           
  6651                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6652  003EAC  0E02               	movlw	2
  6653  003EAE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6654                           
  6655                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6656  003EB0  0E14               	movlw	20
  6657  003EB2  6F51               	movwf	_menu_st& (0+255),b
  6658                           
  6659                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6660  003EB4  0E24               	movlw	36
  6661  003EB6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6662                           
  6663                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6664  003EB8  0E14               	movlw	20
  6665  003EBA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6666                           
  6667                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6668  003EBC  0E23               	movlw	35
  6669  003EBE  D02D               	goto	L38
  6670  003EC0                     l20064:
  6671                           
  6672                           ; BSR set to: 1
  6673                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6674  003EC0  0E0C               	movlw	12
  6675  003EC2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6676                           
  6677                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6678  003EC4  0E00               	movlw	0
  6679  003EC6  6F68               	movwf	(_menu_st+23)& (0+255),b
  6680                           
  6681                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6682  003EC8  0E02               	movlw	2
  6683  003ECA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6684                           
  6685                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6686  003ECC  0E05               	movlw	5
  6687  003ECE  6F51               	movwf	_menu_st& (0+255),b
  6688                           
  6689                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6690  003ED0  0E13               	movlw	19
  6691  003ED2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6692                           
  6693                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6694  003ED4  0E05               	movlw	5
  6695  003ED6  D7B0               	goto	L39
  6696  003ED8                     l20066:
  6697                           
  6698                           ; BSR set to: 1
  6699                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6700  003ED8  0E0D               	movlw	13
  6701  003EDA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6702                           
  6703                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6704  003EDC  0E01               	movlw	1
  6705  003EDE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6706                           
  6707                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6708  003EE0  0E0D               	movlw	13
  6709  003EE2  6F51               	movwf	_menu_st& (0+255),b
  6710                           
  6711                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6712  003EE4  0E12               	movlw	18
  6713  003EE6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6714                           
  6715                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6716  003EE8  0E00               	movlw	0
  6717  003EEA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6718  003EEC  0E3C               	movlw	60
  6719  003EEE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6720                           
  6721                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6722  003EF0  D048               	goto	l20076
  6723  003EF2                     l20068:
  6724                           
  6725                           ; BSR set to: 1
  6726                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6727  003EF2  0E05               	movlw	5
  6728  003EF4  6F51               	movwf	_menu_st& (0+255),b
  6729                           
  6730                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6731  003EF6  0E0C               	movlw	12
  6732  003EF8  6F52               	movwf	(_menu_st+1)& (0+255),b
  6733                           
  6734                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6735  003EFA  0E05               	movlw	5
  6736  003EFC  6F53               	movwf	(_menu_st+2)& (0+255),b
  6737                           
  6738                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6739  003EFE  0E0E               	movlw	14
  6740  003F00  6F54               	movwf	(_menu_st+3)& (0+255),b
  6741                           
  6742                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6743  003F02  0E22               	movlw	34
  6744  003F04  6F55               	movwf	(_menu_st+4)& (0+255),b
  6745                           
  6746                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6747  003F06  0E14               	movlw	20
  6748  003F08                     L33:
  6749  003F08  6F56               	movwf	(_menu_st+5)& (0+255),b
  6750                           
  6751                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6752  003F0A  D03B               	goto	l20076
  6753  003F0C                     l20070:
  6754                           
  6755                           ; BSR set to: 1
  6756                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6757  003F0C  0E12               	movlw	18
  6758  003F0E  6F51               	movwf	_menu_st& (0+255),b
  6759                           
  6760                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6761  003F10  0E0E               	movlw	14
  6762  003F12  6F52               	movwf	(_menu_st+1)& (0+255),b
  6763                           
  6764                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6765  003F14  0E14               	movlw	20
  6766  003F16  6F53               	movwf	(_menu_st+2)& (0+255),b
  6767                           
  6768                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6769  003F18  0E15               	movlw	21
  6770  003F1A                     L38:
  6771  003F1A  6F54               	movwf	(_menu_st+3)& (0+255),b
  6772                           
  6773                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6774  003F1C  D032               	goto	l20076
  6775  003F1E                     l20074:
  6776                           
  6777                           ; BSR set to: 1
  6778  003F1E  5022               	movf	load_New_Menu@Menu^0,w,c
  6779  003F20  6E20               	movwf	??_load_New_Menu^0,c
  6780  003F22  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6781                           
  6782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6783                           ; Switch size 1, requested type "simple"
  6784                           ; Number of cases is 1, Range of values is 0 to 0
  6785                           ; switch strategies available:
  6786                           ; Name         Instructions Cycles
  6787                           ; simple_byte            4     3 (average)
  6788                           ;	Chosen strategy is simple_byte
  6789  003F24  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6790  003F26  0A00               	xorlw	0	; case 0
  6791  003F28  A4D8               	btfss	status,2,c
  6792  003F2A  D02B               	goto	l20076
  6793                           
  6794                           ; BSR set to: 1
  6795                           ; Switch size 1, requested type "simple"
  6796                           ; Number of cases is 14, Range of values is 0 to 13
  6797                           ; switch strategies available:
  6798                           ; Name         Instructions Cycles
  6799                           ; simple_byte           43    22 (average)
  6800                           ;	Chosen strategy is simple_byte
  6801  003F2C  5020               	movf	??_load_New_Menu^0,w,c
  6802  003F2E  0A00               	xorlw	0	; case 0
  6803  003F30  B4D8               	btfsc	status,2,c
  6804  003F32  D6FF               	goto	l20024
  6805  003F34  0A01               	xorlw	1	; case 1
  6806  003F36  B4D8               	btfsc	status,2,c
  6807  003F38  D71D               	goto	l20036
  6808  003F3A  0A03               	xorlw	3	; case 2
  6809  003F3C  B4D8               	btfsc	status,2,c
  6810  003F3E  D7E6               	goto	l20070
  6811  003F40  0A01               	xorlw	1	; case 3
  6812  003F42  B4D8               	btfsc	status,2,c
  6813  003F44  D7D6               	goto	l20068
  6814  003F46  0A07               	xorlw	7	; case 4
  6815  003F48  B4D8               	btfsc	status,2,c
  6816  003F4A  D735               	goto	l20048
  6817  003F4C  0A01               	xorlw	1	; case 5
  6818  003F4E  B4D8               	btfsc	status,2,c
  6819  003F50  D748               	goto	l20050
  6820  003F52  0A03               	xorlw	3	; case 6
  6821  003F54  B4D8               	btfsc	status,2,c
  6822  003F56  D753               	goto	l20052
  6823  003F58  0A01               	xorlw	1	; case 7
  6824  003F5A  B4D8               	btfsc	status,2,c
  6825  003F5C  D762               	goto	l20054
  6826  003F5E  0A0F               	xorlw	15	; case 8
  6827  003F60  B4D8               	btfsc	status,2,c
  6828  003F62  D76D               	goto	l20056
  6829  003F64  0A01               	xorlw	1	; case 9
  6830  003F66  B4D8               	btfsc	status,2,c
  6831  003F68  D778               	goto	l20058
  6832  003F6A  0A03               	xorlw	3	; case 10
  6833  003F6C  B4D8               	btfsc	status,2,c
  6834  003F6E  D78C               	goto	l20060
  6835  003F70  0A01               	xorlw	1	; case 11
  6836  003F72  B4D8               	btfsc	status,2,c
  6837  003F74  D797               	goto	l20062
  6838  003F76  0A07               	xorlw	7	; case 12
  6839  003F78  B4D8               	btfsc	status,2,c
  6840  003F7A  D7A2               	goto	l20064
  6841  003F7C  0A01               	xorlw	1	; case 13
  6842  003F7E  B4D8               	btfsc	status,2,c
  6843  003F80  D7AB               	goto	l20066
  6844  003F82                     l20076:
  6845                           
  6846                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6847  003F82  0101               	movlb	1	; () banked
  6848  003F84  5167               	movf	(_menu_st+22)& (0+255),w,b
  6849  003F86  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6850  003F88  A0D8               	btfss	status,0,c
  6851  003F8A  D002               	goto	l20080
  6852                           
  6853                           ; BSR set to: 1
  6854                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6855  003F8C  0E00               	movlw	0
  6856  003F8E  6F68               	movwf	(_menu_st+23)& (0+255),b
  6857  003F90                     l20080:
  6858                           
  6859                           ; BSR set to: 1
  6860                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6861  003F90  0E0D               	movlw	13
  6862  003F92  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6863  003F94  A4D8               	btfss	status,2,c
  6864  003F96  D01A               	goto	l20084
  6865                           
  6866                           ; BSR set to: 1
  6867                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6868  003F98  5168               	movf	(_menu_st+23)& (0+255),w,b
  6869  003F9A  0D02               	mullw	2
  6870  003F9C  0E52               	movlw	low (_menu_st+1)
  6871  003F9E  24F3               	addwf	243,w,c
  6872  003FA0  6ED9               	movwf	fsr2l,c
  6873  003FA2  0E01               	movlw	high (_menu_st+1)
  6874  003FA4  20F4               	addwfc	prodh,w,c
  6875  003FA6  6EDA               	movwf	fsr2h,c
  6876  003FA8  50DF               	movf	indf2,w,c
  6877  003FAA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6878  003FAC  0E00               	movlw	0
  6879  003FAE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6880  003FB0  0E0A               	movlw	10
  6881  003FB2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6882  003FB4  5168               	movf	(_menu_st+23)& (0+255),w,b
  6883  003FB6  0D02               	mullw	2
  6884  003FB8  0E51               	movlw	low _menu_st
  6885  003FBA  24F3               	addwf	243,w,c
  6886  003FBC  6ED9               	movwf	fsr2l,c
  6887  003FBE  0E01               	movlw	high _menu_st
  6888  003FC0  20F4               	addwfc	prodh,w,c
  6889  003FC2  6EDA               	movwf	fsr2h,c
  6890  003FC4  50DF               	movf	indf2,w,c
  6891  003FC6  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  6892                           
  6893                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6894  003FCA  0012               	return	
  6895  003FCC                     l20084:
  6896                           
  6897                           ; BSR set to: 1
  6898                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6899  003FCC  5168               	movf	(_menu_st+23)& (0+255),w,b
  6900  003FCE  0D02               	mullw	2
  6901  003FD0  0E52               	movlw	low (_menu_st+1)
  6902  003FD2  24F3               	addwf	243,w,c
  6903  003FD4  6ED9               	movwf	fsr2l,c
  6904  003FD6  0E01               	movlw	high (_menu_st+1)
  6905  003FD8  20F4               	addwfc	prodh,w,c
  6906  003FDA  6EDA               	movwf	fsr2h,c
  6907  003FDC  50DF               	movf	indf2,w,c
  6908  003FDE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6909  003FE0  5168               	movf	(_menu_st+23)& (0+255),w,b
  6910  003FE2  0D02               	mullw	2
  6911  003FE4  0E51               	movlw	low _menu_st
  6912  003FE6  24F3               	addwf	243,w,c
  6913  003FE8  6ED9               	movwf	fsr2l,c
  6914  003FEA  0E01               	movlw	high _menu_st
  6915  003FEC  20F4               	addwfc	prodh,w,c
  6916  003FEE  6EDA               	movwf	fsr2h,c
  6917  003FF0  50DF               	movf	indf2,w,c
  6918  003FF2  EC0D  F049         	call	_SetSegmentValueMain
  6919  003FF6  0012               	return		;funcret
  6920  003FF8                     __end_of_load_New_Menu:
  6921                           	callstack 0
  6922                           
  6923 ;; *************** function _InitReceiver *****************
  6924 ;; Defined at:
  6925 ;;		line 207 in file "inputs_MC50.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;		None
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;		None
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  1    wreg      void 
  6932 ;; Registers used:
  6933 ;;		wreg, status,2
  6934 ;; Tracked objects:
  6935 ;;		On entry : 30/F
  6936 ;;		On exit  : 3F/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;Total ram usage:        0 bytes
  6944 ;; Hardware stack levels used: 1
  6945 ;; Hardware stack levels required when called: 4
  6946 ;; This function calls:
  6947 ;;		Nothing
  6948 ;; This function is called by:
  6949 ;;		_main
  6950 ;;		_setValueToEdit
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text5
  6955  009200                     __ptext5:
  6956                           	callstack 0
  6957  009200                     _InitReceiver:
  6958                           	callstack 23
  6959                           
  6960                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6961                           
  6962                           ;incstack = 0
  6963  009200  010E               	movlb	14	; () banked
  6964  009202  9BCA               	bcf	202,5,b	;volatile
  6965                           
  6966                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  6967  009204  8BC2               	bsf	194,5,b	;volatile
  6968                           
  6969                           ;inputs_MC50.c: 210:     GIE = 1;
  6970  009206  8EF2               	bsf	4082,7,c	;volatile
  6971                           
  6972                           ; BSR set to: 14
  6973                           ;inputs_MC50.c: 211:     RFstate = 0;
  6974  009208  0E00               	movlw	0
  6975  00920A  0101               	movlb	1	; () banked
  6976  00920C  6F98               	movwf	_RFstate& (0+255),b
  6977                           
  6978                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  6979  00920E  0E00               	movlw	0
  6980  009210  0100               	movlb	0	; () banked
  6981  009212  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  6982                           
  6983                           ;inputs_MC50.c: 213:     RFFull = 0;
  6984  009214  0E00               	movlw	0
  6985  009216  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  6986                           
  6987                           ; BSR set to: 0
  6988  009218  0012               	return		;funcret
  6989  00921A                     __end_of_InitReceiver:
  6990                           	callstack 0
  6991                           
  6992 ;; *************** function _controlSelectRemote *****************
  6993 ;; Defined at:
  6994 ;;		line 1098 in file "sm_MenuConfiguration_MC50.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;		None
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  typeRemote      1   11[BANK0 ] enum E10392
  6999 ;;  pos             1   10[BANK0 ] unsigned char 
  7000 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7001 ;;  temp            1   16[BANK0 ] unsigned char 
  7002 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  1    wreg      void 
  7005 ;; Registers used:
  7006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7007 ;; Tracked objects:
  7008 ;;		On entry : 3F/1
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7013 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7015 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7016 ;;Total ram usage:        9 bytes
  7017 ;; Hardware stack levels used: 1
  7018 ;; Hardware stack levels required when called: 14
  7019 ;; This function calls:
  7020 ;;		_ClearFlag_rfCMD
  7021 ;;		_RemoveSerial
  7022 ;;		_SaveNVM_VarSystem
  7023 ;;		_SetSegmentValue
  7024 ;;		_SetSegmentValueIntermitentMain
  7025 ;;		_SetSegmentValueMain
  7026 ;;		___awdiv
  7027 ;;		___lbmod
  7028 ;;		_cmdMemoryIsEmpty
  7029 ;;		_getSerialCmd
  7030 ;;		_getTypeRemote
  7031 ;;		_saveNewSerial
  7032 ;;		_sm_send_event
  7033 ;;		_validateRemoteSerialNumber
  7034 ;; This function is called by:
  7035 ;;		_sm_execute_menuConfiguration
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text6
  7040  0032D4                     __ptext6:
  7041                           	callstack 0
  7042  0032D4                     _controlSelectRemote:
  7043                           	callstack 14
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;sm_MenuConfiguration_MC50.c: 1099:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1100:     char temp=getSerialCmd(&tempSerial);
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;incstack = 0
  7050  0032D4  0EE4               	movlw	low controlSelectRemote@tempSerial
  7051  0032D6  6E1B               	movwf	getSerialCmd@serial^0,c
  7052  0032D8  EC1F  F044         	call	_getSerialCmd	;wreg free
  7053  0032DC  0100               	movlb	0	; () banked
  7054  0032DE  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;sm_MenuConfiguration_MC50.c: 1101:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          102:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7058  0032E0  0101               	movlb	1	; () banked
  7059  0032E2  BFA9               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7060  0032E4  D008               	goto	u24140
  7061  0032E6  51A9               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7062  0032E8  E103               	bnz	u24130
  7063  0032EA  05A8               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7064  0032EC  A0D8               	btfss	status,0,c
  7065  0032EE  D003               	goto	u24140
  7066  0032F0                     u24130:
  7067                           
  7068                           ; BSR set to: 1
  7069  0032F0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7070  0032F2  A4D8               	btfss	status,2,c
  7071  0032F4  D028               	goto	l21154
  7072  0032F6                     u24140:
  7073                           
  7074                           ; BSR set to: 1
  7075                           ;sm_MenuConfiguration_MC50.c: 1103:     {;sm_MenuConfiguration_MC50.c: 1104:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7076  0032F6  0EED               	movlw	low _main_stateMachine
  7077  0032F8  6E12               	movwf	sm_send_event@psm^0,c
  7078  0032FA  0E01               	movlw	high _main_stateMachine
  7079  0032FC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7080  0032FE  0E00               	movlw	0
  7081  003300  6E15               	movwf	(sm_send_event@event+1)^0,c
  7082  003302  0E07               	movlw	7
  7083  003304  6E14               	movwf	sm_send_event@event^0,c
  7084  003306  EC18  F042         	call	_sm_send_event	;wreg free
  7085                           
  7086                           ;sm_MenuConfiguration_MC50.c: 1105:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7087  00330A  0EBD               	movlw	low _menuConfiguration_stateMachine
  7088  00330C  6E12               	movwf	sm_send_event@psm^0,c
  7089  00330E  0E02               	movlw	high _menuConfiguration_stateMachine
  7090  003310  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7091  003312  0E00               	movlw	0
  7092  003314  6E15               	movwf	(sm_send_event@event+1)^0,c
  7093  003316  0E03               	movlw	3
  7094  003318  6E14               	movwf	sm_send_event@event^0,c
  7095  00331A  EC18  F042         	call	_sm_send_event	;wreg free
  7096                           
  7097                           ;sm_MenuConfiguration_MC50.c: 1106:         var_sys.DistanceProgrammingActive=NO;
  7098  00331E  0E00               	movlw	0
  7099  003320  0101               	movlb	1	; () banked
  7100  003322  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;sm_MenuConfiguration_MC50.c: 1107:         var_sys.ProgrammingDistanceIs=NoCMD;
  7104  003324  0E00               	movlw	0
  7105  003326  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7106                           
  7107                           ; BSR set to: 1
  7108                           ;sm_MenuConfiguration_MC50.c: 1108:         SetSegmentValueMain(dMinus,dMinus);
  7109  003328  0E18               	movlw	24
  7110  00332A  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7111  00332C  0E18               	movlw	24
  7112  00332E  EC0D  F049         	call	_SetSegmentValueMain
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;sm_MenuConfiguration_MC50.c: 1109:         ClearFlag_rfCMD();
  7116  003332  EC5E  F04A         	call	_ClearFlag_rfCMD	;wreg free
  7117                           
  7118                           ;sm_MenuConfiguration_MC50.c: 1110:         button_struct.processed=1;
  7119  003336  0E01               	movlw	1
  7120  003338  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7121                           
  7122                           ;sm_MenuConfiguration_MC50.c: 1111:         ts_system.timeoutMenu = 0;
  7123  00333A  0E00               	movlw	0
  7124  00333C  0101               	movlb	1	; () banked
  7125  00333E  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7126  003340  0E00               	movlw	0
  7127  003342  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7128                           
  7129                           ;sm_MenuConfiguration_MC50.c: 1113:     }
  7130  003344  0012               	return	
  7131  003346                     l21154:
  7132                           
  7133                           ; BSR set to: 1
  7134  003346  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7135  003348  A4D8               	btfss	status,2,c
  7136  00334A  D05B               	goto	l21176
  7137                           
  7138                           ; BSR set to: 1
  7139  00334C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7140  00334E  B4D8               	btfsc	status,2,c
  7141  003350  D058               	goto	l21176
  7142                           
  7143                           ; BSR set to: 1
  7144                           ;sm_MenuConfiguration_MC50.c: 1115:     {;sm_MenuConfiguration_MC50.c: 1116:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7145  003352  0E00               	movlw	0
  7146  003354  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7147  003356  0E64               	movlw	100
  7148  003358  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7149                           
  7150                           ; BSR set to: 1
  7151                           ;sm_MenuConfiguration_MC50.c: 1117:         if(edit_Param.tempValue<=edit_Param.Min)
  7152  00335A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7153  00335C  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7154  00335E  A0D8               	btfss	status,0,c
  7155  003360  D003               	goto	l21164
  7156                           
  7157                           ; BSR set to: 1
  7158                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7159  003362  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7160                           
  7161                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7162  003366  D001               	goto	l21166
  7163  003368                     l21164:
  7164                           
  7165                           ; BSR set to: 1
  7166                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               edit_Param.tempValue--;
  7167  003368  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7168  00336A                     l21166:
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;sm_MenuConfiguration_MC50.c: 1125:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7172  00336A  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7173  00336E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7174  003370  ECA6  F03B         	call	_cmdMemoryIsEmpty
  7175  003374  06E8               	decf	wreg,f,c
  7176  003376  B4D8               	btfsc	status,2,c
  7177  003378  D004               	goto	u24190
  7178  00337A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7179  00337C  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7180  00337E  A4D8               	btfss	status,2,c
  7181  003380  D021               	goto	l21172
  7182  003382                     u24190:
  7183                           
  7184                           ;sm_MenuConfiguration_MC50.c: 1126:         {;sm_MenuConfiguration_MC50.c: 1127:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7185  003382  0E0A               	movlw	10
  7186  003384  6E10               	movwf	___lbmod@divisor^0,c
  7187  003386  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7188  003388  ECD5  F047         	call	___lbmod
  7189  00338C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7190  00338E  0E00               	movlw	0
  7191  003390  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7192  003392  0E14               	movlw	20
  7193  003394  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7194  003396  0E0A               	movlw	10
  7195  003398  6E10               	movwf	___lbmod@divisor^0,c
  7196  00339A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7197  00339C  ECD5  F047         	call	___lbmod
  7198  0033A0  0100               	movlb	0	; () banked
  7199  0033A2  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7200  0033A4  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7201  0033A6  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7202  0033A8  6E14               	movwf	___awdiv@dividend^0,c
  7203  0033AA  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7204  0033AC  A0D8               	btfss	status,0,c
  7205  0033AE  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7206  0033B0  0E00               	movlw	0
  7207  0033B2  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7208  0033B4  0E0A               	movlw	10
  7209  0033B6  6E16               	movwf	___awdiv@divisor^0,c
  7210  0033B8  EC91  F03D         	call	___awdiv	;wreg free
  7211  0033BC  5014               	movf	?___awdiv^0,w,c
  7212  0033BE  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  7213                           
  7214                           ;sm_MenuConfiguration_MC50.c: 1128:         }
  7215  0033C2  D01C               	goto	l21174
  7216  0033C4                     l21172:
  7217                           
  7218                           ;sm_MenuConfiguration_MC50.c: 1130:         {;sm_MenuConfiguration_MC50.c: 1131:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7219  0033C4  0E0A               	movlw	10
  7220  0033C6  6E10               	movwf	___lbmod@divisor^0,c
  7221  0033C8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7222  0033CA  ECD5  F047         	call	___lbmod
  7223  0033CE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7224  0033D0  0E0A               	movlw	10
  7225  0033D2  6E10               	movwf	___lbmod@divisor^0,c
  7226  0033D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7227  0033D6  ECD5  F047         	call	___lbmod
  7228  0033DA  0100               	movlb	0	; () banked
  7229  0033DC  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7230  0033DE  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7231  0033E0  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7232  0033E2  6E14               	movwf	___awdiv@dividend^0,c
  7233  0033E4  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7234  0033E6  A0D8               	btfss	status,0,c
  7235  0033E8  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7236  0033EA  0E00               	movlw	0
  7237  0033EC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7238  0033EE  0E0A               	movlw	10
  7239  0033F0  6E16               	movwf	___awdiv@divisor^0,c
  7240  0033F2  EC91  F03D         	call	___awdiv	;wreg free
  7241  0033F6  5014               	movf	?___awdiv^0,w,c
  7242  0033F8  EC0D  F049         	call	_SetSegmentValueMain
  7243  0033FC                     l21174:
  7244                           
  7245                           ;sm_MenuConfiguration_MC50.c: 1133:         button_struct.processed=1;
  7246  0033FC  0E01               	movlw	1
  7247  0033FE  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7248                           
  7249                           ;sm_MenuConfiguration_MC50.c: 1134:     }
  7250  003400  0012               	return	
  7251  003402                     l21176:
  7252                           
  7253                           ; BSR set to: 1
  7254  003402  0E17               	movlw	23
  7255  003404  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7256  003406  A4D8               	btfss	status,2,c
  7257  003408  D057               	goto	l21198
  7258                           
  7259                           ; BSR set to: 1
  7260  00340A  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7261  00340C  B4D8               	btfsc	status,2,c
  7262  00340E  D054               	goto	l21198
  7263                           
  7264                           ; BSR set to: 1
  7265                           ;sm_MenuConfiguration_MC50.c: 1136:     {;sm_MenuConfiguration_MC50.c: 1137:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7266  003410  0E00               	movlw	0
  7267  003412  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7268  003414  0E64               	movlw	100
  7269  003416  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7270                           
  7271                           ; BSR set to: 1
  7272                           ;sm_MenuConfiguration_MC50.c: 1138:         edit_Param.tempValue++;
  7273  003418  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;sm_MenuConfiguration_MC50.c: 1139:         if(edit_Param.tempValue>edit_Param.Max)
  7277  00341A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7278  00341C  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7279  00341E  A0D8               	btfss	status,0,c
  7280                           
  7281                           ; BSR set to: 1
  7282                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7283  003420  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7284                           
  7285                           ; BSR set to: 1
  7286                           ;sm_MenuConfiguration_MC50.c: 1143:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7287  003424  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7288  003428  5168               	movf	(_menu_st+23)& (0+255),w,b
  7289  00342A  ECA6  F03B         	call	_cmdMemoryIsEmpty
  7290  00342E  06E8               	decf	wreg,f,c
  7291  003430  B4D8               	btfsc	status,2,c
  7292  003432  D004               	goto	u24240
  7293  003434  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7294  003436  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7295  003438  A4D8               	btfss	status,2,c
  7296  00343A  D021               	goto	l21194
  7297  00343C                     u24240:
  7298                           
  7299                           ;sm_MenuConfiguration_MC50.c: 1144:         {;sm_MenuConfiguration_MC50.c: 1145:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7300  00343C  0E0A               	movlw	10
  7301  00343E  6E10               	movwf	___lbmod@divisor^0,c
  7302  003440  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7303  003442  ECD5  F047         	call	___lbmod
  7304  003446  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7305  003448  0E00               	movlw	0
  7306  00344A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7307  00344C  0E14               	movlw	20
  7308  00344E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7309  003450  0E0A               	movlw	10
  7310  003452  6E10               	movwf	___lbmod@divisor^0,c
  7311  003454  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7312  003456  ECD5  F047         	call	___lbmod
  7313  00345A  0100               	movlb	0	; () banked
  7314  00345C  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7315  00345E  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7316  003460  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7317  003462  6E14               	movwf	___awdiv@dividend^0,c
  7318  003464  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7319  003466  A0D8               	btfss	status,0,c
  7320  003468  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7321  00346A  0E00               	movlw	0
  7322  00346C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7323  00346E  0E0A               	movlw	10
  7324  003470  6E16               	movwf	___awdiv@divisor^0,c
  7325  003472  EC91  F03D         	call	___awdiv	;wreg free
  7326  003476  5014               	movf	?___awdiv^0,w,c
  7327  003478  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  7328                           
  7329                           ;sm_MenuConfiguration_MC50.c: 1146:         }
  7330  00347C  D7BF               	goto	l21174
  7331  00347E                     l21194:
  7332                           
  7333                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7334  00347E  0E0A               	movlw	10
  7335  003480  6E10               	movwf	___lbmod@divisor^0,c
  7336  003482  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7337  003484  ECD5  F047         	call	___lbmod
  7338  003488  6E1C               	movwf	SetSegmentValue@d2^0,c
  7339  00348A  0E0A               	movlw	10
  7340  00348C  6E10               	movwf	___lbmod@divisor^0,c
  7341  00348E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7342  003490  ECD5  F047         	call	___lbmod
  7343  003494  0100               	movlb	0	; () banked
  7344  003496  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7345  003498  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7346  00349A  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7347  00349C  6E14               	movwf	___awdiv@dividend^0,c
  7348  00349E  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7349  0034A0  A0D8               	btfss	status,0,c
  7350  0034A2  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7351  0034A4  0E00               	movlw	0
  7352  0034A6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7353  0034A8  0E0A               	movlw	10
  7354  0034AA  6E16               	movwf	___awdiv@divisor^0,c
  7355  0034AC  EC91  F03D         	call	___awdiv	;wreg free
  7356  0034B0  5014               	movf	?___awdiv^0,w,c
  7357  0034B2  EC27  F049         	call	_SetSegmentValue
  7358  0034B6  D7A2               	goto	l21174
  7359  0034B8                     l21198:
  7360                           
  7361                           ; BSR set to: 1
  7362  0034B8  0E63               	movlw	99
  7363  0034BA  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7364  0034BC  D01A               	goto	l21208
  7365                           
  7366                           ; BSR set to: 1
  7367  0034BE  0E63               	movlw	99
  7368  0034C0  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7369  0034C2  D017               	goto	l21208
  7370                           
  7371                           ; BSR set to: 1
  7372                           ;sm_MenuConfiguration_MC50.c: 1154:     {;sm_MenuConfiguration_MC50.c: 1155:         if(
      +                          menu_st.parameterSelected==0)
  7373  0034C4  5168               	movf	(_menu_st+23)& (0+255),w,b
  7374  0034C6  A4D8               	btfss	status,2,c
  7375  0034C8  D00A               	goto	l21206
  7376                           
  7377                           ; BSR set to: 1
  7378                           ;sm_MenuConfiguration_MC50.c: 1156:         {;sm_MenuConfiguration_MC50.c: 1157:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7379  0034CA  0E13               	movlw	19
  7380  0034CC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7381  0034CE  0E00               	movlw	0
  7382  0034D0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7383  0034D2  0E0A               	movlw	10
  7384  0034D4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7385  0034D6  0E12               	movlw	18
  7386  0034D8  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  7387                           
  7388                           ;sm_MenuConfiguration_MC50.c: 1158:         }
  7389  0034DC  0012               	return	
  7390  0034DE                     l21206:
  7391                           
  7392                           ; BSR set to: 1
  7393                           ;sm_MenuConfiguration_MC50.c: 1160:         {;sm_MenuConfiguration_MC50.c: 1161:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7394  0034DE  0E10               	movlw	16
  7395  0034E0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7396  0034E2  0E00               	movlw	0
  7397  0034E4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7398  0034E6  0E0A               	movlw	10
  7399  0034E8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7400  0034EA  0E12               	movlw	18
  7401  0034EC  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  7402  0034F0  0012               	return	
  7403  0034F2                     l21208:
  7404                           
  7405                           ; BSR set to: 1
  7406  0034F2  0100               	movlb	0	; () banked
  7407  0034F4  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7408  0034F6  B4D8               	btfsc	status,2,c
  7409  0034F8  D097               	goto	l21266
  7410                           
  7411                           ; BSR set to: 0
  7412  0034FA  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7413  0034FC  B4D8               	btfsc	status,2,c
  7414  0034FE  D00F               	goto	u24330
  7415                           
  7416                           ; BSR set to: 0
  7417  003500  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7418  003502  B4D8               	btfsc	status,2,c
  7419  003504  D00C               	goto	u24330
  7420                           
  7421                           ; BSR set to: 0
  7422  003506  0E02               	movlw	2
  7423  003508  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7424  00350A  B4D8               	btfsc	status,2,c
  7425  00350C  D008               	goto	u24330
  7426                           
  7427                           ; BSR set to: 0
  7428  00350E  0E04               	movlw	4
  7429  003510  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7430  003512  B4D8               	btfsc	status,2,c
  7431  003514  D004               	goto	u24330
  7432                           
  7433                           ; BSR set to: 0
  7434  003516  0E08               	movlw	8
  7435  003518  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7436  00351A  A4D8               	btfss	status,2,c
  7437  00351C  D085               	goto	l21266
  7438  00351E                     u24330:
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;sm_MenuConfiguration_MC50.c: 1165:     {;sm_MenuConfiguration_MC50.c: 1166:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1167:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7442  00351E  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7443  003522  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7444  003526  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7445  00352A  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7446  00352E  0E00               	movlw	0
  7447  003530  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7448  003532  0EE2               	movlw	low controlSelectRemote@pos
  7449  003534  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7450  003536  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7451  003538  ECD4  F02B         	call	_validateRemoteSerialNumber	;wreg free
  7452  00353C  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;sm_MenuConfiguration_MC50.c: 1169:         TypeRemote_st typeRemote = getTypeRemote();
  7456  00353E  EC5B  F04A         	call	_getTypeRemote	;wreg free
  7457  003542  0100               	movlb	0	; () banked
  7458  003544  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;sm_MenuConfiguration_MC50.c: 1170:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7462  003546  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7463  003548  A4D8               	btfss	status,2,c
  7464  00354A  0012               	return	
  7465                           
  7466                           ; BSR set to: 0
  7467  00354C  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7468  00354E  B4D8               	btfsc	status,2,c
  7469  003550  D003               	goto	u24360
  7470                           
  7471                           ; BSR set to: 0
  7472  003552  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7473  003554  A4D8               	btfss	status,2,c
  7474  003556  0012               	return	
  7475  003558                     u24360:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;sm_MenuConfiguration_MC50.c: 1171:         {;sm_MenuConfiguration_MC50.c: 1172:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7479  003558  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7480  00355C  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7481  003560  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7482  003564  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7483  003568  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7484  00356C  0101               	movlb	1	; () banked
  7485  00356E  5168               	movf	(_menu_st+23)& (0+255),w,b
  7486  003570  EC3D  F040         	call	_saveNewSerial
  7487                           
  7488                           ;sm_MenuConfiguration_MC50.c: 1173:             if(edit_Param.tempValue==var_sys_NVM.pos
      +                          itionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7489  003574  0100               	movlb	0	; () banked
  7490  003576  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7491  003578  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7492  00357A  A4D8               	btfss	status,2,c
  7493  00357C  D004               	goto	l21238
  7494                           
  7495                           ; BSR set to: 0
  7496  00357E  0E63               	movlw	99
  7497  003580  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7498  003582  D001               	goto	l21238
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;sm_MenuConfiguration_MC50.c: 1174:                 var_sys_NVM.positionRemotesFull++;
  7502  003584  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7503  003586                     l21238:
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;sm_MenuConfiguration_MC50.c: 1175:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7507  003586  0EBD               	movlw	low _menuConfiguration_stateMachine
  7508  003588  6E12               	movwf	sm_send_event@psm^0,c
  7509  00358A  0E02               	movlw	high _menuConfiguration_stateMachine
  7510  00358C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7511  00358E  0E00               	movlw	0
  7512  003590  6E15               	movwf	(sm_send_event@event+1)^0,c
  7513  003592  0E08               	movlw	8
  7514  003594  6E14               	movwf	sm_send_event@event^0,c
  7515  003596  EC18  F042         	call	_sm_send_event	;wreg free
  7516                           
  7517                           ;sm_MenuConfiguration_MC50.c: 1176:             var_sys.DistanceProgrammingActive=NO;
  7518  00359A  0E00               	movlw	0
  7519  00359C  0101               	movlb	1	; () banked
  7520  00359E  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7521                           
  7522                           ; BSR set to: 1
  7523                           ;sm_MenuConfiguration_MC50.c: 1177:             var_sys.ProgrammingDistanceIs=NoCMD;
  7524  0035A0  0E00               	movlw	0
  7525  0035A2  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7526                           
  7527                           ; BSR set to: 1
  7528                           ;sm_MenuConfiguration_MC50.c: 1178:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7529  0035A4  0E00               	movlw	0
  7530  0035A6  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7531  0035A8  0E28               	movlw	40
  7532  0035AA  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7533                           
  7534                           ; BSR set to: 1
  7535                           ;sm_MenuConfiguration_MC50.c: 1179:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7536  0035AC  0E0A               	movlw	10
  7537  0035AE  6E10               	movwf	___lbmod@divisor^0,c
  7538  0035B0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7539  0035B2  ECD5  F047         	call	___lbmod
  7540  0035B6  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7541  0035B8  0E00               	movlw	0
  7542  0035BA  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7543  0035BC  0E04               	movlw	4
  7544  0035BE  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7545  0035C0  0E0A               	movlw	10
  7546  0035C2  6E10               	movwf	___lbmod@divisor^0,c
  7547  0035C4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7548  0035C6  ECD5  F047         	call	___lbmod
  7549  0035CA  0100               	movlb	0	; () banked
  7550  0035CC  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7551  0035CE  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7552  0035D0  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7553  0035D2  6E14               	movwf	___awdiv@dividend^0,c
  7554  0035D4  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7555  0035D6  A0D8               	btfss	status,0,c
  7556  0035D8  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7557  0035DA  0E00               	movlw	0
  7558  0035DC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7559  0035DE  0E0A               	movlw	10
  7560  0035E0  6E16               	movwf	___awdiv@divisor^0,c
  7561  0035E2  EC91  F03D         	call	___awdiv	;wreg free
  7562  0035E6  5014               	movf	?___awdiv^0,w,c
  7563  0035E8  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  7564                           
  7565                           ;sm_MenuConfiguration_MC50.c: 1180:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7566  0035EC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7567  0035EE  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7568  0035F0  B4D8               	btfsc	status,2,c
  7569  0035F2  D003               	goto	u24400
  7570  0035F4  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7571  0035F6  A4D8               	btfss	status,2,c
  7572  0035F8  0012               	return	
  7573  0035FA                     u24400:
  7574                           
  7575                           ;sm_MenuConfiguration_MC50.c: 1181:             {;sm_MenuConfiguration_MC50.c: 1185:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7576  0035FA  0100               	movlb	0	; () banked
  7577  0035FC  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7578  0035FE  A4D8               	btfss	status,2,c
  7579  003600  D008               	goto	l21260
  7580                           
  7581                           ; BSR set to: 0
  7582  003602  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7583  003604  A4D8               	btfss	status,2,c
  7584  003606  D005               	goto	l21260
  7585                           
  7586                           ; BSR set to: 0
  7587  003608  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7588  00360A  A4D8               	btfss	status,2,c
  7589  00360C  D002               	goto	l21260
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;sm_MenuConfiguration_MC50.c: 1186:                 {;sm_MenuConfiguration_MC50.c: 1188:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7593  00360E  0E01               	movlw	1
  7594  003610  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7595  003612                     l21260:
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;sm_MenuConfiguration_MC50.c: 1192:                 edit_Param.tempValue++;
  7599  003612  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;sm_MenuConfiguration_MC50.c: 1193:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7603  003614  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7604  003618  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7605  00361C  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;sm_MenuConfiguration_MC50.c: 1194:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7609  003620  0E02               	movlw	2
  7610  003622  EC20  F046         	call	_SaveNVM_VarSystem
  7611  003626  0012               	return	
  7612  003628                     l21266:
  7613                           
  7614                           ; BSR set to: 0
  7615  003628  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7616  00362A  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7617  00362C  B4D8               	btfsc	status,2,c
  7618  00362E  0012               	return	
  7619                           
  7620                           ; BSR set to: 0
  7621  003630  0E27               	movlw	39
  7622  003632  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7623  003634  A4D8               	btfss	status,2,c
  7624  003636  0012               	return	
  7625                           
  7626                           ; BSR set to: 0
  7627  003638  0E27               	movlw	39
  7628  00363A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7629  00363C  0012               	return	
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;sm_MenuConfiguration_MC50.c: 1201:     {;sm_MenuConfiguration_MC50.c: 1202:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7633  00363E  0E00               	movlw	0
  7634  003640  0101               	movlb	1	; () banked
  7635  003642  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7636  003644  0E64               	movlw	100
  7637  003646  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7638                           
  7639                           ; BSR set to: 1
  7640                           ;sm_MenuConfiguration_MC50.c: 1203:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7641  003648  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7642  00364C  5168               	movf	(_menu_st+23)& (0+255),w,b
  7643  00364E  EC56  F03E         	call	_RemoveSerial
  7644                           
  7645                           ;sm_MenuConfiguration_MC50.c: 1204:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7646  003652  0E0A               	movlw	10
  7647  003654  6E10               	movwf	___lbmod@divisor^0,c
  7648  003656  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7649  003658  ECD5  F047         	call	___lbmod
  7650  00365C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7651  00365E  0E00               	movlw	0
  7652  003660  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7653  003662  0E14               	movlw	20
  7654  003664  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7655  003666  0E0A               	movlw	10
  7656  003668  6E10               	movwf	___lbmod@divisor^0,c
  7657  00366A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7658  00366C  ECD5  F047         	call	___lbmod
  7659  003670  0100               	movlb	0	; () banked
  7660  003672  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7661  003674  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7662  003676  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7663  003678  6E14               	movwf	___awdiv@dividend^0,c
  7664  00367A  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7665  00367C  A0D8               	btfss	status,0,c
  7666  00367E  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7667  003680  0E00               	movlw	0
  7668  003682  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7669  003684  0E0A               	movlw	10
  7670  003686  6E16               	movwf	___awdiv@divisor^0,c
  7671  003688  EC91  F03D         	call	___awdiv	;wreg free
  7672  00368C  5014               	movf	?___awdiv^0,w,c
  7673  00368E  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  7674  003692  0012               	return	
  7675  003694                     __end_of_controlSelectRemote:
  7676                           	callstack 0
  7677                           
  7678 ;; *************** function _saveNewSerial *****************
  7679 ;; Defined at:
  7680 ;;		line 81 in file "controlMemory_MC50.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  cmdType         1    wreg     unsigned char 
  7683 ;;  tempSerial      4    0[BANK0 ] unsigned long 
  7684 ;;  position        1    4[BANK0 ] unsigned char 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  cmdType         1   57[COMRAM] unsigned char 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 3F/1
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7696 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7699 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;Total ram usage:        8 bytes
  7701 ;; Hardware stack levels used: 1
  7702 ;; Hardware stack levels required when called: 13
  7703 ;; This function calls:
  7704 ;;		_i2c_writeNBytes
  7705 ;; This function is called by:
  7706 ;;		_controlSelectRemote
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text7
  7711  00807A                     __ptext7:
  7712                           	callstack 0
  7713  00807A                     _saveNewSerial:
  7714                           	callstack 14
  7715                           
  7716                           ;incstack = 0
  7717                           ;saveNewSerial@cmdType stored from wreg
  7718  00807A  6E3A               	movwf	saveNewSerial@cmdType^0,c
  7719                           
  7720                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
  7721  00807C  503A               	movf	saveNewSerial@cmdType^0,w,c
  7722  00807E  A4D8               	btfss	status,2,c
  7723  008080  D01A               	goto	l19804
  7724                           
  7725                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  7726  008082  0100               	movlb	0	; () banked
  7727  008084  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7728  008086  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7729  008088  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7730  00808A  90D8               	bcf	status,0,c
  7731  00808C  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7732  00808E  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7733  008090  90D8               	bcf	status,0,c
  7734  008092  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7735  008094  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7736  008096  0E00               	movlw	0
  7737  008098  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7738  00809A  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7739  00809C  0E02               	movlw	2
  7740  00809E  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7741  0080A0  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7742  0080A2  0ED8               	movlw	low saveNewSerial@tempSerial
  7743  0080A4  6E24               	movwf	i2c_writeNBytes@data^0,c
  7744  0080A6  0E00               	movlw	0
  7745  0080A8  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7746  0080AA  0E04               	movlw	4
  7747  0080AC  6E25               	movwf	i2c_writeNBytes@len^0,c
  7748  0080AE  0E50               	movlw	80
  7749  0080B0  EC03  F040         	call	_i2c_writeNBytes
  7750                           
  7751                           ;controlMemory_MC50.c: 87:     }
  7752  0080B4  0012               	return	
  7753  0080B6                     l19804:
  7754                           
  7755                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  7756  0080B6  0100               	movlb	0	; () banked
  7757  0080B8  51DC               	movf	saveNewSerial@position& (0+255),w,b
  7758  0080BA  6FDD               	movwf	??_saveNewSerial& (0+255),b
  7759  0080BC  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
  7760  0080BE  90D8               	bcf	status,0,c
  7761  0080C0  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7762  0080C2  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7763  0080C4  90D8               	bcf	status,0,c
  7764  0080C6  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
  7765  0080C8  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
  7766  0080CA  0E00               	movlw	0
  7767  0080CC  25DD               	addwf	??_saveNewSerial& (0+255),w,b
  7768  0080CE  6E22               	movwf	i2c_writeNBytes@reg^0,c
  7769  0080D0  0E05               	movlw	5
  7770  0080D2  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
  7771  0080D4  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  7772  0080D6  0ED8               	movlw	low saveNewSerial@tempSerial
  7773  0080D8  6E24               	movwf	i2c_writeNBytes@data^0,c
  7774  0080DA  0E00               	movlw	0
  7775  0080DC  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  7776  0080DE  0E04               	movlw	4
  7777  0080E0  6E25               	movwf	i2c_writeNBytes@len^0,c
  7778  0080E2  0E50               	movlw	80
  7779  0080E4  EC03  F040         	call	_i2c_writeNBytes
  7780  0080E8  0012               	return		;funcret
  7781  0080EA                     __end_of_saveNewSerial:
  7782                           	callstack 0
  7783                           
  7784 ;; *************** function _getTypeRemote *****************
  7785 ;; Defined at:
  7786 ;;		line 459 in file "inputs_MC50.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      enum E10559
  7793 ;; Registers used:
  7794 ;;		wreg, status,2
  7795 ;; Tracked objects:
  7796 ;;		On entry : 3F/0
  7797 ;;		On exit  : 3F/2
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7804 ;;Total ram usage:        0 bytes
  7805 ;; Hardware stack levels used: 1
  7806 ;; Hardware stack levels required when called: 4
  7807 ;; This function calls:
  7808 ;;		Nothing
  7809 ;; This function is called by:
  7810 ;;		_controlSelectRemote
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text8
  7815  0094B6                     __ptext8:
  7816                           	callstack 0
  7817  0094B6                     _getTypeRemote:
  7818                           	callstack 23
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;inputs_MC50.c: 460:     return classic_data.type;
  7822                           
  7823                           ;incstack = 0
  7824  0094B6  0102               	movlb	2	; () banked
  7825  0094B8  51A0               	movf	(_classic_data+14)& (0+255),w,b
  7826                           
  7827                           ; BSR set to: 2
  7828  0094BA  0012               	return		;funcret
  7829  0094BC                     __end_of_getTypeRemote:
  7830                           	callstack 0
  7831                           
  7832 ;; *************** function _getSerialCmd *****************
  7833 ;; Defined at:
  7834 ;;		line 442 in file "inputs_MC50.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7837 ;;		 -> controlSelectRemote@tempSerial(4), 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  temp            1   27[COMRAM] char 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  1    wreg      char 
  7842 ;; Registers used:
  7843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7844 ;; Tracked objects:
  7845 ;;		On entry : 3F/1
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7849 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7853 ;;Total ram usage:        2 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; Hardware stack levels required when called: 5
  7856 ;; This function calls:
  7857 ;;		_memcpy
  7858 ;; This function is called by:
  7859 ;;		_controlSelectRemote
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text9
  7864  00883E                     __ptext9:
  7865                           	callstack 0
  7866  00883E                     _getSerialCmd:
  7867                           	callstack 22
  7868                           
  7869                           ; BSR set to: 1
  7870                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7871                           
  7872                           ; BSR set to: 2
  7873                           ;incstack = 0
  7874  00883E  681C               	setf	getSerialCmd@temp^0,c
  7875                           
  7876                           ; BSR set to: 1
  7877                           ;inputs_MC50.c: 444:     if(RFFull)
  7878  008840  0100               	movlb	0	; () banked
  7879  008842  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7880  008844  B4D8               	btfsc	status,2,c
  7881  008846  D020               	goto	l19854
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7885  008848  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7886  00884A  B4D8               	btfsc	status,2,c
  7887  00884C  D00E               	goto	l19850
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7891  00884E  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7892  008852  6A11               	clrf	(memcpy@d1+1)^0,c
  7893  008854  0E96               	movlw	low (_classic_data+4)
  7894  008856  6E12               	movwf	memcpy@s1^0,c
  7895  008858  0E02               	movlw	high (_classic_data+4)
  7896  00885A  6E13               	movwf	(memcpy@s1+1)^0,c
  7897  00885C  0E00               	movlw	0
  7898  00885E  6E15               	movwf	(memcpy@n+1)^0,c
  7899  008860  0E04               	movlw	4
  7900  008862  6E14               	movwf	memcpy@n^0,c
  7901  008864  EC22  F045         	call	_memcpy	;wreg free
  7902                           
  7903                           ;inputs_MC50.c: 449:         }
  7904  008868  D00D               	goto	l19852
  7905  00886A                     l19850:
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7909  00886A  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7910  00886E  6A11               	clrf	(memcpy@d1+1)^0,c
  7911  008870  0ECC               	movlw	low (_BufferRF+4)
  7912  008872  6E12               	movwf	memcpy@s1^0,c
  7913  008874  0E02               	movlw	high (_BufferRF+4)
  7914  008876  6E13               	movwf	(memcpy@s1+1)^0,c
  7915  008878  0E00               	movlw	0
  7916  00887A  6E15               	movwf	(memcpy@n+1)^0,c
  7917  00887C  0E04               	movlw	4
  7918  00887E  6E14               	movwf	memcpy@n^0,c
  7919  008880  EC22  F045         	call	_memcpy	;wreg free
  7920  008884                     l19852:
  7921                           
  7922                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7923  008884  C29E  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7924  008888                     l19854:
  7925                           
  7926                           ;inputs_MC50.c: 456:     return temp;
  7927  008888  501C               	movf	getSerialCmd@temp^0,w,c
  7928  00888A  0012               	return		;funcret
  7929  00888C                     __end_of_getSerialCmd:
  7930                           	callstack 0
  7931                           
  7932 ;; *************** function _RemoveSerial *****************
  7933 ;; Defined at:
  7934 ;;		line 95 in file "controlMemory_MC50.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  cmdType         1    wreg     unsigned char 
  7937 ;;  position        1   57[COMRAM] unsigned char 
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;  cmdType         1    2[BANK0 ] unsigned char 
  7940 ;;  tempSerial      4    3[BANK0 ] unsigned long 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      void 
  7943 ;; Registers used:
  7944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 3F/1
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7950 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7951 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7952 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7953 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;Total ram usage:        8 bytes
  7955 ;; Hardware stack levels used: 1
  7956 ;; Hardware stack levels required when called: 13
  7957 ;; This function calls:
  7958 ;;		_i2c_writeNBytes
  7959 ;; This function is called by:
  7960 ;;		_controlSelectRemote
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text10
  7965  007CAC                     __ptext10:
  7966                           	callstack 0
  7967  007CAC                     _RemoveSerial:
  7968                           	callstack 14
  7969                           
  7970                           ;incstack = 0
  7971                           ;RemoveSerial@cmdType stored from wreg
  7972  007CAC  0100               	movlb	0	; () banked
  7973  007CAE  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
  7974                           
  7975                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
  7976  007CB0  0E00               	movlw	0
  7977  007CB2  0100               	movlb	0	; () banked
  7978  007CB4  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
  7979  007CB6  0E00               	movlw	0
  7980  007CB8  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
  7981  007CBA  0E00               	movlw	0
  7982  007CBC  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
  7983  007CBE  0E00               	movlw	0
  7984  007CC0  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
  7988  007CC2  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
  7989  007CC4  A4D8               	btfss	status,2,c
  7990  007CC6  D019               	goto	l19812
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
  7994  007CC8  503A               	movf	RemoveSerial@position^0,w,c
  7995  007CCA  6FD8               	movwf	??_RemoveSerial& (0+255),b
  7996  007CCC  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  7997  007CCE  90D8               	bcf	status,0,c
  7998  007CD0  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  7999  007CD2  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8000  007CD4  90D8               	bcf	status,0,c
  8001  007CD6  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8002  007CD8  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8003  007CDA  0E00               	movlw	0
  8004  007CDC  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8005  007CDE  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8006  007CE0  0E02               	movlw	2
  8007  007CE2  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8008  007CE4  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8009  007CE6  0EDB               	movlw	low RemoveSerial@tempSerial
  8010  007CE8  6E24               	movwf	i2c_writeNBytes@data^0,c
  8011  007CEA  0E00               	movlw	0
  8012  007CEC  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8013  007CEE  0E04               	movlw	4
  8014  007CF0  6E25               	movwf	i2c_writeNBytes@len^0,c
  8015  007CF2  0E50               	movlw	80
  8016  007CF4  EC03  F040         	call	_i2c_writeNBytes
  8017                           
  8018                           ;controlMemory_MC50.c: 103:     }
  8019  007CF8  0012               	return	
  8020  007CFA                     l19812:
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
  8024  007CFA  503A               	movf	RemoveSerial@position^0,w,c
  8025  007CFC  6FD8               	movwf	??_RemoveSerial& (0+255),b
  8026  007CFE  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
  8027  007D00  90D8               	bcf	status,0,c
  8028  007D02  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8029  007D04  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8030  007D06  90D8               	bcf	status,0,c
  8031  007D08  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
  8032  007D0A  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
  8033  007D0C  0E00               	movlw	0
  8034  007D0E  25D8               	addwf	??_RemoveSerial& (0+255),w,b
  8035  007D10  6E22               	movwf	i2c_writeNBytes@reg^0,c
  8036  007D12  0E05               	movlw	5
  8037  007D14  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
  8038  007D16  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
  8039  007D18  0EDB               	movlw	low RemoveSerial@tempSerial
  8040  007D1A  6E24               	movwf	i2c_writeNBytes@data^0,c
  8041  007D1C  0E00               	movlw	0
  8042  007D1E  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
  8043  007D20  0E04               	movlw	4
  8044  007D22  6E25               	movwf	i2c_writeNBytes@len^0,c
  8045  007D24  0E50               	movlw	80
  8046  007D26  EC03  F040         	call	_i2c_writeNBytes
  8047  007D2A  0012               	return		;funcret
  8048  007D2C                     __end_of_RemoveSerial:
  8049                           	callstack 0
  8050                           
  8051 ;; *************** function _controlSaveRemote *****************
  8052 ;; Defined at:
  8053 ;;		line 1209 in file "sm_MenuConfiguration_MC50.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;		None
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;		None
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      void 
  8060 ;; Registers used:
  8061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 3F/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8071 ;;Total ram usage:        1 bytes
  8072 ;; Hardware stack levels used: 1
  8073 ;; Hardware stack levels required when called: 6
  8074 ;; This function calls:
  8075 ;;		_ClearFlag_rfCMD
  8076 ;;		_SetSegmentValueIntermitentMain
  8077 ;;		_SetSegmentValueMain
  8078 ;;		___awdiv
  8079 ;;		___lbmod
  8080 ;;		_sm_send_event
  8081 ;; This function is called by:
  8082 ;;		_sm_execute_menuConfiguration
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text11
  8087  007370                     __ptext11:
  8088                           	callstack 0
  8089  007370                     _controlSaveRemote:
  8090                           	callstack 22
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;sm_MenuConfiguration_MC50.c: 1210:      if (ts_system.timeSinalizationDigit<=0)
  8094                           
  8095                           ;incstack = 0
  8096  007370  0101               	movlb	1	; () banked
  8097  007372  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8098  007374  D005               	goto	u24470
  8099  007376  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8100  007378  E154               	bnz	l3483
  8101  00737A  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8102  00737C  B0D8               	btfsc	status,0,c
  8103  00737E  0012               	return	
  8104  007380                     u24470:
  8105                           
  8106                           ; BSR set to: 1
  8107                           ;sm_MenuConfiguration_MC50.c: 1211:      {;sm_MenuConfiguration_MC50.c: 1212:          i
      +                          f(edit_Param.Max==0)
  8108  007380  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  8109  007382  A4D8               	btfss	status,2,c
  8110  007384  D02E               	goto	l21288
  8111                           
  8112                           ; BSR set to: 1
  8113                           ;sm_MenuConfiguration_MC50.c: 1213:          {;sm_MenuConfiguration_MC50.c: 1214:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  8114  007386  0E00               	movlw	0
  8115  007388  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8116  00738A  0EC8               	movlw	200
  8117  00738C  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8118                           
  8119                           ; BSR set to: 1
  8120                           ;sm_MenuConfiguration_MC50.c: 1215:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  8121  00738E  0EBD               	movlw	low _menuConfiguration_stateMachine
  8122  007390  6E12               	movwf	sm_send_event@psm^0,c
  8123  007392  0E02               	movlw	high _menuConfiguration_stateMachine
  8124  007394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8125  007396  0E00               	movlw	0
  8126  007398  6E15               	movwf	(sm_send_event@event+1)^0,c
  8127  00739A  0E09               	movlw	9
  8128  00739C  6E14               	movwf	sm_send_event@event^0,c
  8129  00739E  EC18  F042         	call	_sm_send_event	;wreg free
  8130                           
  8131                           ;sm_MenuConfiguration_MC50.c: 1216:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  8132  0073A2  0E0A               	movlw	10
  8133  0073A4  6E10               	movwf	___lbmod@divisor^0,c
  8134  0073A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8135  0073A8  ECD5  F047         	call	___lbmod
  8136  0073AC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  8137  0073AE  0E00               	movlw	0
  8138  0073B0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  8139  0073B2  0E14               	movlw	20
  8140  0073B4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  8141  0073B6  0E0A               	movlw	10
  8142  0073B8  6E10               	movwf	___lbmod@divisor^0,c
  8143  0073BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  8144  0073BC  ECD5  F047         	call	___lbmod
  8145  0073C0  6E20               	movwf	??_controlSaveRemote^0,c
  8146  0073C2  5020               	movf	??_controlSaveRemote^0,w,c
  8147  0073C4  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  8148  0073C6  6E14               	movwf	___awdiv@dividend^0,c
  8149  0073C8  6A15               	clrf	(___awdiv@dividend+1)^0,c
  8150  0073CA  A0D8               	btfss	status,0,c
  8151  0073CC  0615               	decf	(___awdiv@dividend+1)^0,f,c
  8152  0073CE  0E00               	movlw	0
  8153  0073D0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  8154  0073D2  0E0A               	movlw	10
  8155  0073D4  6E16               	movwf	___awdiv@divisor^0,c
  8156  0073D6  EC91  F03D         	call	___awdiv	;wreg free
  8157  0073DA  5014               	movf	?___awdiv^0,w,c
  8158  0073DC  ECA9  F049         	call	_SetSegmentValueIntermitentMain
  8159                           
  8160                           ;sm_MenuConfiguration_MC50.c: 1217:          }
  8161  0073E0  0012               	return	
  8162  0073E2                     l21288:
  8163                           
  8164                           ; BSR set to: 1
  8165                           ;sm_MenuConfiguration_MC50.c: 1219:          {;sm_MenuConfiguration_MC50.c: 1220:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  8166  0073E2  0EED               	movlw	low _main_stateMachine
  8167  0073E4  6E12               	movwf	sm_send_event@psm^0,c
  8168  0073E6  0E01               	movlw	high _main_stateMachine
  8169  0073E8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8170  0073EA  0E00               	movlw	0
  8171  0073EC  6E15               	movwf	(sm_send_event@event+1)^0,c
  8172  0073EE  0E07               	movlw	7
  8173  0073F0  6E14               	movwf	sm_send_event@event^0,c
  8174  0073F2  EC18  F042         	call	_sm_send_event	;wreg free
  8175                           
  8176                           ;sm_MenuConfiguration_MC50.c: 1221:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  8177  0073F6  0EBD               	movlw	low _menuConfiguration_stateMachine
  8178  0073F8  6E12               	movwf	sm_send_event@psm^0,c
  8179  0073FA  0E02               	movlw	high _menuConfiguration_stateMachine
  8180  0073FC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  8181  0073FE  0E00               	movlw	0
  8182  007400  6E15               	movwf	(sm_send_event@event+1)^0,c
  8183  007402  0E04               	movlw	4
  8184  007404  6E14               	movwf	sm_send_event@event^0,c
  8185  007406  EC18  F042         	call	_sm_send_event	;wreg free
  8186                           
  8187                           ;sm_MenuConfiguration_MC50.c: 1222:             SetSegmentValueMain(dMinus,dMinus);
  8188  00740A  0E18               	movlw	24
  8189  00740C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  8190  00740E  0E18               	movlw	24
  8191  007410  EC0D  F049         	call	_SetSegmentValueMain
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;sm_MenuConfiguration_MC50.c: 1223:             ClearFlag_rfCMD();
  8195  007414  EC5E  F04A         	call	_ClearFlag_rfCMD	;wreg free
  8196                           
  8197                           ;sm_MenuConfiguration_MC50.c: 1224:             ts_system.timeoutMenu = 0;
  8198  007418  0E00               	movlw	0
  8199  00741A  0101               	movlb	1	; () banked
  8200  00741C  6FA9               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8201  00741E  0E00               	movlw	0
  8202  007420  6FA8               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8203  007422                     l3483:
  8204  007422  0012               	return		;funcret
  8205  007424                     __end_of_controlSaveRemote:
  8206                           	callstack 0
  8207                           
  8208 ;; *************** function ___lbmod *****************
  8209 ;; Defined at:
  8210 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;  dividend        1    wreg     unsigned char 
  8213 ;;  divisor         1   15[COMRAM] unsigned char 
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;  dividend        1   16[COMRAM] unsigned char 
  8216 ;;  rem             1   18[COMRAM] unsigned char 
  8217 ;;  counter         1   17[COMRAM] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      unsigned char 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2, status,0
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/1
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8227 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8228 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8230 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8231 ;;Total ram usage:        4 bytes
  8232 ;; Hardware stack levels used: 1
  8233 ;; Hardware stack levels required when called: 4
  8234 ;; This function calls:
  8235 ;;		Nothing
  8236 ;; This function is called by:
  8237 ;;		_controlSelectRemote
  8238 ;;		_controlSaveRemote
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text12
  8243  008FAA                     __ptext12:
  8244                           	callstack 0
  8245  008FAA                     ___lbmod:
  8246                           	callstack 23
  8247                           
  8248                           ;incstack = 0
  8249                           ;___lbmod@dividend stored from wreg
  8250  008FAA  6E11               	movwf	___lbmod@dividend^0,c
  8251  008FAC  0E08               	movlw	8
  8252  008FAE  6E12               	movwf	___lbmod@counter^0,c
  8253  008FB0  0E00               	movlw	0
  8254  008FB2  6E13               	movwf	___lbmod@rem^0,c
  8255  008FB4                     l12634:
  8256  008FB4  90D8               	bcf	status,0,c
  8257  008FB6  3411               	rlcf	___lbmod@dividend^0,w,c
  8258  008FB8  3413               	rlcf	___lbmod@rem^0,w,c
  8259  008FBA  6E13               	movwf	___lbmod@rem^0,c
  8260  008FBC  90D8               	bcf	status,0,c
  8261  008FBE  3611               	rlcf	___lbmod@dividend^0,f,c
  8262  008FC0  5010               	movf	___lbmod@divisor^0,w,c
  8263  008FC2  5C13               	subwf	___lbmod@rem^0,w,c
  8264  008FC4  A0D8               	btfss	status,0,c
  8265  008FC6  D002               	goto	l12642
  8266  008FC8  5010               	movf	___lbmod@divisor^0,w,c
  8267  008FCA  5E13               	subwf	___lbmod@rem^0,f,c
  8268  008FCC                     l12642:
  8269  008FCC  2E12               	decfsz	___lbmod@counter^0,f,c
  8270  008FCE  D7F2               	goto	l12634
  8271  008FD0  5013               	movf	___lbmod@rem^0,w,c
  8272  008FD2  0012               	return		;funcret
  8273  008FD4                     __end_of___lbmod:
  8274                           	callstack 0
  8275                           
  8276 ;; *************** function ___awdiv *****************
  8277 ;; Defined at:
  8278 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  dividend        2   19[COMRAM] int 
  8281 ;;  divisor         2   21[COMRAM] int 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  quotient        2   25[COMRAM] int 
  8284 ;;  sign            1   24[COMRAM] unsigned char 
  8285 ;;  counter         1   23[COMRAM] unsigned char 
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  2   19[COMRAM] int 
  8288 ;; Registers used:
  8289 ;;		wreg, status,2, status,0
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8296 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8298 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8299 ;;Total ram usage:        8 bytes
  8300 ;; Hardware stack levels used: 1
  8301 ;; Hardware stack levels required when called: 4
  8302 ;; This function calls:
  8303 ;;		Nothing
  8304 ;; This function is called by:
  8305 ;;		_controlSelectRemote
  8306 ;;		_controlSaveRemote
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           	psect	text13
  8311  007B22                     __ptext13:
  8312                           	callstack 0
  8313  007B22                     ___awdiv:
  8314                           	callstack 23
  8315                           
  8316                           ;incstack = 0
  8317  007B22  0E00               	movlw	0
  8318  007B24  6E19               	movwf	___awdiv@sign^0,c
  8319  007B26  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8320  007B28  D006               	goto	l12570
  8321  007B2A  6C16               	negf	___awdiv@divisor^0,c
  8322  007B2C  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8323  007B2E  B0D8               	btfsc	status,0,c
  8324  007B30  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8325  007B32  0E01               	movlw	1
  8326  007B34  6E19               	movwf	___awdiv@sign^0,c
  8327  007B36                     l12570:
  8328  007B36  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8329  007B38  D006               	goto	l12576
  8330  007B3A  6C14               	negf	___awdiv@dividend^0,c
  8331  007B3C  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8332  007B3E  B0D8               	btfsc	status,0,c
  8333  007B40  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8334  007B42  0E01               	movlw	1
  8335  007B44  1A19               	xorwf	___awdiv@sign^0,f,c
  8336  007B46                     l12576:
  8337  007B46  0E00               	movlw	0
  8338  007B48  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8339  007B4A  0E00               	movlw	0
  8340  007B4C  6E1A               	movwf	___awdiv@quotient^0,c
  8341  007B4E  5016               	movf	___awdiv@divisor^0,w,c
  8342  007B50  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8343  007B52  B4D8               	btfsc	status,2,c
  8344  007B54  D01C               	goto	l12598
  8345  007B56  0E01               	movlw	1
  8346  007B58  6E18               	movwf	___awdiv@counter^0,c
  8347  007B5A  D004               	goto	l12584
  8348  007B5C                     l12582:
  8349  007B5C  90D8               	bcf	status,0,c
  8350  007B5E  3616               	rlcf	___awdiv@divisor^0,f,c
  8351  007B60  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8352  007B62  2A18               	incf	___awdiv@counter^0,f,c
  8353  007B64                     l12584:
  8354  007B64  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8355  007B66  D7FA               	goto	l12582
  8356  007B68                     u12210:
  8357  007B68  90D8               	bcf	status,0,c
  8358  007B6A  361A               	rlcf	___awdiv@quotient^0,f,c
  8359  007B6C  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8360  007B6E  5016               	movf	___awdiv@divisor^0,w,c
  8361  007B70  5C14               	subwf	___awdiv@dividend^0,w,c
  8362  007B72  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8363  007B74  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8364  007B76  A0D8               	btfss	status,0,c
  8365  007B78  D005               	goto	l12594
  8366  007B7A  5016               	movf	___awdiv@divisor^0,w,c
  8367  007B7C  5E14               	subwf	___awdiv@dividend^0,f,c
  8368  007B7E  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8369  007B80  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8370  007B82  801A               	bsf	___awdiv@quotient^0,0,c
  8371  007B84                     l12594:
  8372  007B84  90D8               	bcf	status,0,c
  8373  007B86  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8374  007B88  3216               	rrcf	___awdiv@divisor^0,f,c
  8375  007B8A  2E18               	decfsz	___awdiv@counter^0,f,c
  8376  007B8C  D7ED               	goto	u12210
  8377  007B8E                     l12598:
  8378  007B8E  5019               	movf	___awdiv@sign^0,w,c
  8379  007B90  B4D8               	btfsc	status,2,c
  8380  007B92  D004               	goto	l12602
  8381  007B94  6C1A               	negf	___awdiv@quotient^0,c
  8382  007B96  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8383  007B98  B0D8               	btfsc	status,0,c
  8384  007B9A  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8385  007B9C                     l12602:
  8386  007B9C  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8387  007BA0  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8388  007BA4  0012               	return		;funcret
  8389  007BA6                     __end_of___awdiv:
  8390                           	callstack 0
  8391                           
  8392 ;; *************** function _SetSegmentValueMain *****************
  8393 ;; Defined at:
  8394 ;;		line 104 in file "outputs_MC50.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  d1              1    wreg     unsigned char 
  8397 ;;  d2              1   27[COMRAM] unsigned char 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  d1              1   28[COMRAM] unsigned char 
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  1    wreg      void 
  8402 ;; Registers used:
  8403 ;;		wreg, status,2
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 3F/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8409 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;Total ram usage:        2 bytes
  8414 ;; Hardware stack levels used: 1
  8415 ;; Hardware stack levels required when called: 4
  8416 ;; This function calls:
  8417 ;;		Nothing
  8418 ;; This function is called by:
  8419 ;;		_sm_execute_main
  8420 ;;		_sm_execute_menuConfiguration
  8421 ;;		_load_New_Menu
  8422 ;;		_controlSelectRemote
  8423 ;;		_controlSaveRemote
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           	psect	text14
  8428  00921A                     __ptext14:
  8429                           	callstack 0
  8430  00921A                     _SetSegmentValueMain:
  8431                           	callstack 22
  8432                           
  8433                           ;incstack = 0
  8434                           ;SetSegmentValueMain@d1 stored from wreg
  8435  00921A  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8436                           
  8437                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8438  00921C  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8439                           
  8440                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8441  009220  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8442                           
  8443                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8444  009224  0E00               	movlw	0
  8445  009226  0100               	movlb	0	; () banked
  8446  009228  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8447  00922A  0E00               	movlw	0
  8448  00922C  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8452  00922E  0E00               	movlw	0
  8453  009230  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8454                           
  8455                           ; BSR set to: 0
  8456  009232  0012               	return		;funcret
  8457  009234                     __end_of_SetSegmentValueMain:
  8458                           	callstack 0
  8459                           
  8460 ;; *************** function _ClearFlag_rfCMD *****************
  8461 ;; Defined at:
  8462 ;;		line 463 in file "inputs_MC50.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;		None
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/1
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8480 ;;Total ram usage:        0 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 4
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_sm_execute_menuConfiguration
  8487 ;;		_controlSelectRemote
  8488 ;;		_controlSaveRemote
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           	psect	text15
  8493  0094BC                     __ptext15:
  8494                           	callstack 0
  8495  0094BC                     _ClearFlag_rfCMD:
  8496                           	callstack 23
  8497                           
  8498                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;incstack = 0
  8502  0094BC  0E01               	movlw	1
  8503  0094BE  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8504  0094C0  0012               	return		;funcret
  8505  0094C2                     __end_of_ClearFlag_rfCMD:
  8506                           	callstack 0
  8507                           
  8508 ;; *************** function _controlLearnDigit *****************
  8509 ;; Defined at:
  8510 ;;		line 1230 in file "sm_MenuConfiguration_MC50.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;		None
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 3F/0
  8521 ;;		On exit  : 3E/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8528 ;;Total ram usage:        0 bytes
  8529 ;; Hardware stack levels used: 1
  8530 ;; Hardware stack levels required when called: 5
  8531 ;; This function calls:
  8532 ;;		_SetSegmentValueLearn
  8533 ;; This function is called by:
  8534 ;;		_sm_execute_menuConfiguration
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text16
  8539  008D10                     __ptext16:
  8540                           	callstack 0
  8541  008D10                     _controlLearnDigit:
  8542                           	callstack 23
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;sm_MenuConfiguration_MC50.c: 1232:     if(ts_system.timeSinalizationDigit<=0 )
  8546                           
  8547                           ;incstack = 0
  8548  008D10  0101               	movlb	1	; () banked
  8549  008D12  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8550  008D14  D005               	goto	u13770
  8551  008D16  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8552  008D18  E112               	bnz	l3489
  8553  008D1A  05A6               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8554  008D1C  B0D8               	btfsc	status,0,c
  8555  008D1E  0012               	return	
  8556  008D20                     u13770:
  8557                           
  8558                           ; BSR set to: 1
  8559                           ;sm_MenuConfiguration_MC50.c: 1233:     {;sm_MenuConfiguration_MC50.c: 1234:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8560  008D20  0E00               	movlw	0
  8561  008D22  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8562  008D24  0E02               	movlw	2
  8563  008D26  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8564                           
  8565                           ; BSR set to: 1
  8566                           ;sm_MenuConfiguration_MC50.c: 1235:         if(var_sys.StateMotor==InClose)
  8567  008D28  0E03               	movlw	3
  8568  008D2A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8569  008D2C  A4D8               	btfss	status,2,c
  8570  008D2E  D004               	goto	l13956
  8571                           
  8572                           ; BSR set to: 1
  8573                           ;sm_MenuConfiguration_MC50.c: 1236:         {;sm_MenuConfiguration_MC50.c: 1237:        
      +                               SetSegmentValueLearn(Left);
  8574  008D30  0E00               	movlw	0
  8575  008D32  EC54  F036         	call	_SetSegmentValueLearn
  8576                           
  8577                           ;sm_MenuConfiguration_MC50.c: 1238:         }
  8578  008D36  0012               	return	
  8579  008D38                     l13956:
  8580                           
  8581                           ; BSR set to: 1
  8582                           ;sm_MenuConfiguration_MC50.c: 1240:         {;sm_MenuConfiguration_MC50.c: 1241:        
      +                               SetSegmentValueLearn(Rigth);
  8583  008D38  0E01               	movlw	1
  8584  008D3A  EC54  F036         	call	_SetSegmentValueLearn
  8585  008D3E                     l3489:
  8586  008D3E  0012               	return		;funcret
  8587  008D40                     __end_of_controlLearnDigit:
  8588                           	callstack 0
  8589                           
  8590 ;; *************** function _SetSegmentValueLearn *****************
  8591 ;; Defined at:
  8592 ;;		line 124 in file "outputs_MC50.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  direction       1    wreg     enum E10602
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;  direction       1   17[COMRAM] enum E10602
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      void 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0
  8601 ;; Tracked objects:
  8602 ;;		On entry : 3F/1
  8603 ;;		On exit  : 3F/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8608 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8609 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8610 ;;Total ram usage:        3 bytes
  8611 ;; Hardware stack levels used: 1
  8612 ;; Hardware stack levels required when called: 4
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_controlLearnDigit
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text17
  8621  006CA8                     __ptext17:
  8622                           	callstack 0
  8623  006CA8                     _SetSegmentValueLearn:
  8624                           	callstack 23
  8625                           
  8626                           ;incstack = 0
  8627                           ;SetSegmentValueLearn@direction stored from wreg
  8628  006CA8  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8629                           
  8630                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8631  006CAA  0E00               	movlw	0
  8632  006CAC  0100               	movlb	0	; () banked
  8633  006CAE  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8634  006CB0  0E00               	movlw	0
  8635  006CB2  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8636                           
  8637                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8638  006CB4  0E00               	movlw	0
  8639  006CB6  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8640                           
  8641                           ;outputs_MC50.c: 128:     switch (direction)
  8642  006CB8  D066               	goto	l12408
  8643  006CBA                     l12354:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8647  006CBA  0E1A               	movlw	26
  8648  006CBC  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8649  006CBE  A4D8               	btfss	status,2,c
  8650  006CC0  D009               	goto	l12360
  8651                           
  8652                           ; BSR set to: 0
  8653  006CC2  0E20               	movlw	32
  8654  006CC4  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8655  006CC6  A4D8               	btfss	status,2,c
  8656  006CC8  D005               	goto	l12360
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8660  006CCA  0E20               	movlw	32
  8661  006CCC  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8662                           
  8663                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8664  006CCE  0E1A               	movlw	26
  8665  006CD0  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8666                           
  8667                           ;outputs_MC50.c: 135:             }
  8668  006CD2  0012               	return	
  8669  006CD4                     l12360:
  8670                           
  8671                           ; BSR set to: 0
  8672  006CD4  0E20               	movlw	32
  8673  006CD6  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8674  006CD8  A4D8               	btfss	status,2,c
  8675  006CDA  D009               	goto	l12366
  8676                           
  8677                           ; BSR set to: 0
  8678  006CDC  0E1D               	movlw	29
  8679  006CDE  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8680  006CE0  A4D8               	btfss	status,2,c
  8681  006CE2  D005               	goto	l12366
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8685  006CE4  0E1D               	movlw	29
  8686  006CE6  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8687                           
  8688                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8689  006CE8  0E20               	movlw	32
  8690  006CEA  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8691                           
  8692                           ;outputs_MC50.c: 140:             }
  8693  006CEC  0012               	return	
  8694  006CEE                     l12366:
  8695                           
  8696                           ; BSR set to: 0
  8697  006CEE  0E1F               	movlw	31
  8698  006CF0  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8699  006CF2  A4D8               	btfss	status,2,c
  8700  006CF4  D005               	goto	l12370
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8704  006CF6  0E1A               	movlw	26
  8705  006CF8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8706                           
  8707                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8708  006CFA  0E20               	movlw	32
  8709  006CFC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8710                           
  8711                           ;outputs_MC50.c: 145:             }
  8712  006CFE  0012               	return	
  8713  006D00                     l12370:
  8714                           
  8715                           ; BSR set to: 0
  8716  006D00  0E20               	movlw	32
  8717  006D02  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8718  006D04  A4D8               	btfss	status,2,c
  8719  006D06  D002               	goto	l12374
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8723  006D08  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8724                           
  8725                           ;outputs_MC50.c: 149:             }
  8726  006D0A  0012               	return	
  8727  006D0C                     l12374:
  8728                           
  8729                           ; BSR set to: 0
  8730  006D0C  0E20               	movlw	32
  8731  006D0E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8732  006D10  A4D8               	btfss	status,2,c
  8733  006D12  D002               	goto	l12378
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8737  006D14  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8738                           
  8739                           ;outputs_MC50.c: 153:             }
  8740  006D16  0012               	return	
  8741  006D18                     l12378:
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8745  006D18  0E1A               	movlw	26
  8746  006D1A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8747                           
  8748                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8749  006D1C  0E20               	movlw	32
  8750  006D1E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8751  006D20  0012               	return	
  8752  006D22                     l12380:
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8756  006D22  0E1A               	movlw	26
  8757  006D24  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8758  006D26  A4D8               	btfss	status,2,c
  8759  006D28  D009               	goto	l12386
  8760                           
  8761                           ; BSR set to: 0
  8762  006D2A  0E20               	movlw	32
  8763  006D2C  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8764  006D2E  A4D8               	btfss	status,2,c
  8765  006D30  D005               	goto	l12386
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8769  006D32  0E1A               	movlw	26
  8770  006D34  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8771                           
  8772                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8773  006D36  0E20               	movlw	32
  8774  006D38  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8775                           
  8776                           ;outputs_MC50.c: 165:             }
  8777  006D3A  0012               	return	
  8778  006D3C                     l12386:
  8779                           
  8780                           ; BSR set to: 0
  8781  006D3C  0E20               	movlw	32
  8782  006D3E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8783  006D40  A4D8               	btfss	status,2,c
  8784  006D42  D009               	goto	l12392
  8785                           
  8786                           ; BSR set to: 0
  8787  006D44  0E1D               	movlw	29
  8788  006D46  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8789  006D48  A4D8               	btfss	status,2,c
  8790  006D4A  D005               	goto	l12392
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8794  006D4C  0E20               	movlw	32
  8795  006D4E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8796                           
  8797                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8798  006D50  0E1D               	movlw	29
  8799  006D52  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8800                           
  8801                           ;outputs_MC50.c: 170:             }
  8802  006D54  0012               	return	
  8803  006D56                     l12392:
  8804                           
  8805                           ; BSR set to: 0
  8806  006D56  0E1A               	movlw	26
  8807  006D58  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8808  006D5A  A4D8               	btfss	status,2,c
  8809  006D5C  D003               	goto	l12396
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8813  006D5E  0E1F               	movlw	31
  8814  006D60  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8815                           
  8816                           ;outputs_MC50.c: 174:             }
  8817  006D62  0012               	return	
  8818  006D64                     l12396:
  8819                           
  8820                           ; BSR set to: 0
  8821  006D64  0E20               	movlw	32
  8822  006D66  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8823  006D68  A4D8               	btfss	status,2,c
  8824  006D6A  D002               	goto	l12400
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8828  006D6C  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8829                           
  8830                           ;outputs_MC50.c: 178:             }
  8831  006D6E  0012               	return	
  8832  006D70                     l12400:
  8833                           
  8834                           ; BSR set to: 0
  8835  006D70  0E20               	movlw	32
  8836  006D72  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8837  006D74  A4D8               	btfss	status,2,c
  8838  006D76  D002               	goto	l12404
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8842  006D78  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8843                           
  8844                           ;outputs_MC50.c: 182:             }
  8845  006D7A  0012               	return	
  8846  006D7C                     l12404:
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8850  006D7C  0E1A               	movlw	26
  8851  006D7E  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8852                           
  8853                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8854  006D80  0E20               	movlw	32
  8855  006D82  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8856  006D84  0012               	return	
  8857  006D86                     l12408:
  8858                           
  8859                           ; BSR set to: 0
  8860  006D86  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8861  006D88  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8862  006D8A  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8863                           
  8864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8865                           ; Switch size 1, requested type "simple"
  8866                           ; Number of cases is 1, Range of values is 0 to 0
  8867                           ; switch strategies available:
  8868                           ; Name         Instructions Cycles
  8869                           ; simple_byte            4     3 (average)
  8870                           ;	Chosen strategy is simple_byte
  8871  006D8C  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8872  006D8E  0A00               	xorlw	0	; case 0
  8873  006D90  A4D8               	btfss	status,2,c
  8874  006D92  0012               	return	
  8875                           
  8876                           ; BSR set to: 0
  8877                           ; Switch size 1, requested type "simple"
  8878                           ; Number of cases is 2, Range of values is 0 to 1
  8879                           ; switch strategies available:
  8880                           ; Name         Instructions Cycles
  8881                           ; simple_byte            7     4 (average)
  8882                           ;	Chosen strategy is simple_byte
  8883  006D94  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8884  006D96  0A00               	xorlw	0	; case 0
  8885  006D98  B4D8               	btfsc	status,2,c
  8886  006D9A  D7C3               	goto	l12380
  8887  006D9C  0A01               	xorlw	1	; case 1
  8888  006D9E  A4D8               	btfss	status,2,c
  8889  006DA0  0012               	return	
  8890  006DA2  D78B               	goto	l12354
  8891  006DA4                     __end_of_SetSegmentValueLearn:
  8892                           	callstack 0
  8893                           
  8894 ;; *************** function ___lldiv *****************
  8895 ;; Defined at:
  8896 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  dividend        4   15[COMRAM] unsigned long 
  8899 ;;  divisor         4   19[COMRAM] unsigned long 
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;  quotient        4   23[COMRAM] unsigned long 
  8902 ;;  counter         1   27[COMRAM] unsigned char 
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  4   15[COMRAM] unsigned long 
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/1
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8912 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8913 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8915 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8916 ;;Total ram usage:       13 bytes
  8917 ;; Hardware stack levels used: 1
  8918 ;; Hardware stack levels required when called: 4
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_sm_execute_menuConfiguration
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           	psect	text18
  8927  007C2A                     __ptext18:
  8928                           	callstack 0
  8929  007C2A                     ___lldiv:
  8930                           	callstack 24
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;incstack = 0
  8934  007C2A  0E00               	movlw	0
  8935  007C2C  6E18               	movwf	___lldiv@quotient^0,c
  8936  007C2E  0E00               	movlw	0
  8937  007C30  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8938  007C32  0E00               	movlw	0
  8939  007C34  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8940  007C36  0E00               	movlw	0
  8941  007C38  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8942  007C3A  5014               	movf	___lldiv@divisor^0,w,c
  8943  007C3C  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8944  007C3E  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8945  007C40  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8946  007C42  B4D8               	btfsc	status,2,c
  8947  007C44  D02A               	goto	l3706
  8948  007C46  0E01               	movlw	1
  8949  007C48  6E1C               	movwf	___lldiv@counter^0,c
  8950  007C4A  D006               	goto	l13976
  8951  007C4C                     l13974:
  8952  007C4C  90D8               	bcf	status,0,c
  8953  007C4E  3614               	rlcf	___lldiv@divisor^0,f,c
  8954  007C50  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8955  007C52  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8956  007C54  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8957  007C56  2A1C               	incf	___lldiv@counter^0,f,c
  8958  007C58                     l13976:
  8959  007C58  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8960  007C5A  D7F8               	goto	l13974
  8961  007C5C                     u13810:
  8962  007C5C  90D8               	bcf	status,0,c
  8963  007C5E  3618               	rlcf	___lldiv@quotient^0,f,c
  8964  007C60  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8965  007C62  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8966  007C64  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8967  007C66  5014               	movf	___lldiv@divisor^0,w,c
  8968  007C68  5C10               	subwf	___lldiv@dividend^0,w,c
  8969  007C6A  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8970  007C6C  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8971  007C6E  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8972  007C70  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8973  007C72  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8974  007C74  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8975  007C76  A0D8               	btfss	status,0,c
  8976  007C78  D009               	goto	l13986
  8977  007C7A  5014               	movf	___lldiv@divisor^0,w,c
  8978  007C7C  5E10               	subwf	___lldiv@dividend^0,f,c
  8979  007C7E  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8980  007C80  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8981  007C82  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8982  007C84  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8983  007C86  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8984  007C88  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8985  007C8A  8018               	bsf	___lldiv@quotient^0,0,c
  8986  007C8C                     l13986:
  8987  007C8C  90D8               	bcf	status,0,c
  8988  007C8E  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8989  007C90  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8990  007C92  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8991  007C94  3214               	rrcf	___lldiv@divisor^0,f,c
  8992  007C96  2E1C               	decfsz	___lldiv@counter^0,f,c
  8993  007C98  D7E1               	goto	u13810
  8994  007C9A                     l3706:
  8995  007C9A  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8996  007C9E  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8997  007CA2  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8998  007CA6  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8999  007CAA  0012               	return		;funcret
  9000  007CAC                     __end_of___lldiv:
  9001                           	callstack 0
  9002                           
  9003 ;; *************** function _sm_execute_ControlGate *****************
  9004 ;; Defined at:
  9005 ;;		line 128 in file "sm_ControlGate_MC50.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  psm             2   15[BANK0 ] PTR struct .
  9008 ;;		 -> controlGate_stateMachine(11), 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9015 ;; Tracked objects:
  9016 ;;		On entry : 3F/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9023 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9024 ;;Total ram usage:        5 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; Hardware stack levels required when called: 15
  9027 ;; This function calls:
  9028 ;;		_GetOpenOrder
  9029 ;;		_SetSegmentValueIntermitent
  9030 ;;		_WaitPreFlash
  9031 ;;		_actionZone_Closed
  9032 ;;		_actionZone_Closing
  9033 ;;		_actionZone_Opened
  9034 ;;		_actionZone_Opening
  9035 ;;		_sm_execute_ControlLearning
  9036 ;;		_sm_send_event
  9037 ;; This function is called by:
  9038 ;;		_main
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text19
  9043  003694                     __ptext19:
  9044                           	callstack 0
  9045  003694                     _sm_execute_ControlGate:
  9046                           	callstack 15
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  9050                           
  9051                           ;incstack = 0
  9052  003694  0101               	movlb	1	; () banked
  9053  003696  05ED               	decf	_main_stateMachine& (0+255),w,b
  9054  003698  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  9055  00369A  A4D8               	btfss	status,2,c
  9056  00369C  D006               	goto	l23390
  9057                           
  9058                           ; BSR set to: 1
  9059  00369E  0E06               	movlw	6
  9060  0036A0  0102               	movlb	2	; () banked
  9061  0036A2  19BD               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  9062  0036A4  11BE               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  9063  0036A6  A4D8               	btfss	status,2,c
  9064  0036A8  0012               	return	
  9065  0036AA                     l23390:
  9066                           
  9067                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  9068  0036AA  0101               	movlb	1	; () banked
  9069  0036AC  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  9070  0036AE  A4D8               	btfss	status,2,c
  9071  0036B0  D0CE               	goto	l23464
  9072                           
  9073                           ; BSR set to: 1
  9074                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  9075  0036B2  EC75  F040         	call	_WaitPreFlash	;wreg free
  9076  0036B6  D0CB               	goto	l23464
  9077  0036B8                     l23394:
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  9081  0036B8  EE20 F004          	lfsr	2,4
  9082  0036BC  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9083  0036BE  26D9               	addwf	fsr2l,f,c
  9084  0036C0  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9085  0036C2  22DA               	addwfc	fsr2h,f,c
  9086  0036C4  0E0A               	movlw	10
  9087  0036C6  18DE               	xorwf	postinc2,w,c
  9088  0036C8  10DE               	iorwf	postinc2,w,c
  9089  0036CA  A4D8               	btfss	status,2,c
  9090  0036CC  D006               	goto	l23398
  9091  0036CE                     u28910:
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  9095  0036CE  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9096  0036D2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9097  0036D6  0E01               	movlw	1
  9098  0036D8  D0B5               	goto	L55
  9099  0036DA                     l23398:
  9100                           
  9101                           ; BSR set to: 0
  9102  0036DA  EE20 F004          	lfsr	2,4
  9103  0036DE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9104  0036E0  26D9               	addwf	fsr2l,f,c
  9105  0036E2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9106  0036E4  22DA               	addwfc	fsr2h,f,c
  9107  0036E6  0E0B               	movlw	11
  9108  0036E8  18DE               	xorwf	postinc2,w,c
  9109  0036EA  10DE               	iorwf	postinc2,w,c
  9110  0036EC  A4D8               	btfss	status,2,c
  9111  0036EE  D0CF               	goto	l23466
  9112  0036F0  D038               	goto	u28980
  9113  0036F2                     l23402:
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  9117  0036F2  EE20 F004          	lfsr	2,4
  9118  0036F6  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9119  0036F8  26D9               	addwf	fsr2l,f,c
  9120  0036FA  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9121  0036FC  22DA               	addwfc	fsr2h,f,c
  9122  0036FE  0E0C               	movlw	12
  9123  003700  18DE               	xorwf	postinc2,w,c
  9124  003702  10DE               	iorwf	postinc2,w,c
  9125  003704  A4D8               	btfss	status,2,c
  9126  003706  D072               	goto	l23450
  9127  003708                     u28930:
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  9131  003708  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9132  00370C  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9133  003710  0E02               	movlw	2
  9134  003712  D098               	goto	L55
  9135  003714                     l23410:
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  9139  003714  EE20 F004          	lfsr	2,4
  9140  003718  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9141  00371A  26D9               	addwf	fsr2l,f,c
  9142  00371C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9143  00371E  22DA               	addwfc	fsr2h,f,c
  9144  003720  0E0D               	movlw	13
  9145  003722  18DE               	xorwf	postinc2,w,c
  9146  003724  10DE               	iorwf	postinc2,w,c
  9147  003726  B4D8               	btfsc	status,2,c
  9148  003728  D01C               	goto	u28980
  9149                           
  9150                           ; BSR set to: 0
  9151                           
  9152                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  9156  00372A  EE20 F004          	lfsr	2,4
  9157  00372E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9158  003730  26D9               	addwf	fsr2l,f,c
  9159  003732  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9160  003734  22DA               	addwfc	fsr2h,f,c
  9161  003736  0E0E               	movlw	14
  9162  003738  18DE               	xorwf	postinc2,w,c
  9163  00373A  10DE               	iorwf	postinc2,w,c
  9164  00373C  A4D8               	btfss	status,2,c
  9165  00373E  D02D               	goto	L130
  9166  003740                     u28960:
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  9170  003740  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9171  003744  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9172  003748  0E03               	movlw	3
  9173  00374A  D07C               	goto	L55
  9174  00374C                     l23422:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  9178  00374C  EE20 F004          	lfsr	2,4
  9179  003750  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9180  003752  26D9               	addwf	fsr2l,f,c
  9181  003754  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9182  003756  22DA               	addwfc	fsr2h,f,c
  9183  003758  0E0D               	movlw	13
  9184  00375A  18DE               	xorwf	postinc2,w,c
  9185  00375C  10DE               	iorwf	postinc2,w,c
  9186  00375E  A4D8               	btfss	status,2,c
  9187  003760  D006               	goto	l23426
  9188  003762                     u28980:
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  9192  003762  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9193  003766  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9194  00376A  0E04               	movlw	4
  9195  00376C  D06B               	goto	L55
  9196  00376E                     l23426:
  9197                           
  9198                           ; BSR set to: 0
  9199  00376E  EE20 F004          	lfsr	2,4
  9200  003772  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9201  003774  26D9               	addwf	fsr2l,f,c
  9202  003776  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9203  003778  22DA               	addwfc	fsr2h,f,c
  9204  00377A  0E0F               	movlw	15
  9205  00377C  18DE               	xorwf	postinc2,w,c
  9206  00377E  10DE               	iorwf	postinc2,w,c
  9207  003780  B4D8               	btfsc	status,2,c
  9208  003782  D7A5               	goto	u28910
  9209                           
  9210                           ; BSR set to: 0
  9211                           
  9212                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9216  003784  EE20 F004          	lfsr	2,4
  9217  003788  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9218  00378A  26D9               	addwf	fsr2l,f,c
  9219  00378C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9220  00378E  22DA               	addwfc	fsr2h,f,c
  9221  003790  0E0C               	movlw	12
  9222  003792  18DE               	xorwf	postinc2,w,c
  9223  003794  10DE               	iorwf	postinc2,w,c
  9224  003796  B4D8               	btfsc	status,2,c
  9225  003798  D7B7               	goto	u28930
  9226  00379A                     L130:
  9227                           
  9228                           ; BSR set to: 0
  9229                           
  9230                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9234  00379A  EE20 F004          	lfsr	2,4
  9235  00379E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9236  0037A0  26D9               	addwf	fsr2l,f,c
  9237  0037A2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9238  0037A4  22DA               	addwfc	fsr2h,f,c
  9239  0037A6  0E10               	movlw	16
  9240  0037A8  D044               	goto	L127
  9241  0037AA                     l23438:
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9245  0037AA  EE20 F004          	lfsr	2,4
  9246  0037AE  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9247  0037B0  26D9               	addwf	fsr2l,f,c
  9248  0037B2  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9249  0037B4  22DA               	addwfc	fsr2h,f,c
  9250  0037B6  0E0E               	movlw	14
  9251  0037B8  18DE               	xorwf	postinc2,w,c
  9252  0037BA  10DE               	iorwf	postinc2,w,c
  9253  0037BC  B4D8               	btfsc	status,2,c
  9254  0037BE  D7C0               	goto	u28960
  9255                           
  9256                           ; BSR set to: 0
  9257                           
  9258                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9262  0037C0  EE20 F004          	lfsr	2,4
  9263  0037C4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9264  0037C6  26D9               	addwf	fsr2l,f,c
  9265  0037C8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9266  0037CA  22DA               	addwfc	fsr2h,f,c
  9267  0037CC  0E0C               	movlw	12
  9268  0037CE  18DE               	xorwf	postinc2,w,c
  9269  0037D0  10DE               	iorwf	postinc2,w,c
  9270  0037D2  B4D8               	btfsc	status,2,c
  9271  0037D4  D799               	goto	u28930
  9272                           
  9273                           ; BSR set to: 0
  9274                           
  9275                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9279  0037D6  EE20 F004          	lfsr	2,4
  9280  0037DA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9281  0037DC  26D9               	addwf	fsr2l,f,c
  9282  0037DE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9283  0037E0  22DA               	addwfc	fsr2h,f,c
  9284  0037E2  0E10               	movlw	16
  9285  0037E4  18DE               	xorwf	postinc2,w,c
  9286  0037E6  10DE               	iorwf	postinc2,w,c
  9287  0037E8  B4D8               	btfsc	status,2,c
  9288  0037EA  D027               	goto	L128
  9289  0037EC                     l23450:
  9290                           
  9291                           ; BSR set to: 0
  9292  0037EC  EE20 F004          	lfsr	2,4
  9293  0037F0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9294  0037F2  26D9               	addwf	fsr2l,f,c
  9295  0037F4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9296  0037F6  22DA               	addwfc	fsr2h,f,c
  9297  0037F8  0E14               	movlw	20
  9298  0037FA  18DE               	xorwf	postinc2,w,c
  9299  0037FC  10DE               	iorwf	postinc2,w,c
  9300  0037FE  A4D8               	btfss	status,2,c
  9301  003800  D046               	goto	l23466
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9305  003802  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9306  003806  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9307  00380A  0E05               	movlw	5
  9308  00380C  D01B               	goto	L55
  9309  00380E                     l23454:
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9313  00380E  EE20 F004          	lfsr	2,4
  9314  003812  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9315  003814  26D9               	addwf	fsr2l,f,c
  9316  003816  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9317  003818  22DA               	addwfc	fsr2h,f,c
  9318  00381A  0E13               	movlw	19
  9319  00381C  18DE               	xorwf	postinc2,w,c
  9320  00381E  10DE               	iorwf	postinc2,w,c
  9321  003820  B4D8               	btfsc	status,2,c
  9322  003822  D755               	goto	u28910
  9323                           
  9324                           ; BSR set to: 0
  9325                           
  9326                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9330  003824  EE20 F004          	lfsr	2,4
  9331  003828  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9332  00382A  26D9               	addwf	fsr2l,f,c
  9333  00382C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9334  00382E  22DA               	addwfc	fsr2h,f,c
  9335  003830  0E12               	movlw	18
  9336  003832                     L127:
  9337  003832  18DE               	xorwf	postinc2,w,c
  9338  003834  10DE               	iorwf	postinc2,w,c
  9339  003836  A4D8               	btfss	status,2,c
  9340  003838  D02A               	goto	l23466
  9341  00383A                     L128:
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9345  00383A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9346  00383E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9347  003842  0E00               	movlw	0
  9348  003844                     L55:
  9349  003844  6EDE               	movwf	postinc2,c
  9350  003846  0E00               	movlw	0
  9351  003848  6EDD               	movwf	postdec2,c
  9352  00384A  D021               	goto	l23466
  9353  00384C                     l2648:
  9354                           
  9355                           ; BSR set to: 0
  9356  00384C  D7FF               	goto	l2648
  9357  00384E                     l23464:
  9358                           
  9359                           ; BSR set to: 1
  9360  00384E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9361  003852  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9362  003856  50DF               	movf	indf2,w,c
  9363  003858  0100               	movlb	0	; () banked
  9364  00385A  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9365  00385C  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9366                           
  9367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9368                           ; Switch size 1, requested type "simple"
  9369                           ; Number of cases is 1, Range of values is 0 to 0
  9370                           ; switch strategies available:
  9371                           ; Name         Instructions Cycles
  9372                           ; simple_byte            4     3 (average)
  9373                           ;	Chosen strategy is simple_byte
  9374  00385E  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9375  003860  0A00               	xorlw	0	; case 0
  9376  003862  A4D8               	btfss	status,2,c
  9377  003864  D7F3               	goto	l2648
  9378                           
  9379                           ; BSR set to: 0
  9380                           ; Switch size 1, requested type "simple"
  9381                           ; Number of cases is 6, Range of values is 0 to 5
  9382                           ; switch strategies available:
  9383                           ; Name         Instructions Cycles
  9384                           ; simple_byte           19    10 (average)
  9385                           ;	Chosen strategy is simple_byte
  9386  003866  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9387  003868  0A00               	xorlw	0	; case 0
  9388  00386A  B4D8               	btfsc	status,2,c
  9389  00386C  D725               	goto	l23394
  9390  00386E  0A01               	xorlw	1	; case 1
  9391  003870  B4D8               	btfsc	status,2,c
  9392  003872  D73F               	goto	l23402
  9393  003874  0A03               	xorlw	3	; case 2
  9394  003876  B4D8               	btfsc	status,2,c
  9395  003878  D74D               	goto	l23410
  9396  00387A  0A01               	xorlw	1	; case 3
  9397  00387C  B4D8               	btfsc	status,2,c
  9398  00387E  D766               	goto	l23422
  9399  003880  0A07               	xorlw	7	; case 4
  9400  003882  B4D8               	btfsc	status,2,c
  9401  003884  D792               	goto	l23438
  9402  003886  0A01               	xorlw	1	; case 5
  9403  003888  B4D8               	btfsc	status,2,c
  9404  00388A  D7C1               	goto	l23454
  9405  00388C  D7DF               	goto	l2648
  9406  00388E                     l23466:
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9410  00388E  0EE2               	movlw	low _controlGate_stateMachine
  9411  003890  6E12               	movwf	sm_send_event@psm^0,c
  9412  003892  0E01               	movlw	high _controlGate_stateMachine
  9413  003894  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9414  003896  0E00               	movlw	0
  9415  003898  6E15               	movwf	(sm_send_event@event+1)^0,c
  9416  00389A  0E00               	movlw	0
  9417  00389C  6E14               	movwf	sm_send_event@event^0,c
  9418  00389E  EC18  F042         	call	_sm_send_event	;wreg free
  9419                           
  9420                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9421  0038A2  D07D               	goto	l23530
  9422  0038A4                     l23468:
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9426  0038A4  0E00               	movlw	0
  9427  0038A6  0101               	movlb	1	; () banked
  9428  0038A8  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9429  0038AA  0E64               	movlw	100
  9430  0038AC  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9431                           
  9432                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9433  0038AE  0E01               	movlw	1
  9434  0038B0  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9435                           
  9436                           ; BSR set to: 1
  9437                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9438  0038B2  0E02               	movlw	2
  9439  0038B4  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9440  0038B6  B4D8               	btfsc	status,2,c
  9441  0038B8  D003               	goto	u29090
  9442                           
  9443                           ; BSR set to: 1
  9444  0038BA  0E03               	movlw	3
  9445  0038BC  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9446  0038BE  D027               	goto	l23490
  9447  0038C0                     u29090:
  9448                           
  9449                           ; BSR set to: 1
  9450                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9451  0038C0  EC20  F02A         	call	_GetOpenOrder	;wreg free
  9452  0038C4  0100               	movlb	0	; () banked
  9453  0038C6  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9457  0038C8  0E14               	movlw	20
  9458  0038CA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9459  0038CC  0E00               	movlw	0
  9460  0038CE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9461  0038D0  0E14               	movlw	20
  9462  0038D2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9463  0038D4  0E0E               	movlw	14
  9464  0038D6  ECB7  F046         	call	_SetSegmentValueIntermitent
  9465                           
  9466                           ; BSR set to: 1
  9467                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9468  0038DA  0E00               	movlw	0
  9469  0038DC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9470  0038DE  0E0A               	movlw	10
  9471  0038E0  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9472                           
  9473                           ; BSR set to: 1
  9474                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9475  0038E2  0100               	movlb	0	; () banked
  9476  0038E4  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9477  0038E6  A4D8               	btfss	status,2,c
  9478  0038E8  D00A               	goto	u29130
  9479                           
  9480                           ; BSR set to: 0
  9481  0038EA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9482  0038EC  B4D8               	btfsc	status,2,c
  9483  0038EE  D007               	goto	u29130
  9484                           
  9485                           ; BSR set to: 0
  9486  0038F0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9487  0038F2  B4D8               	btfsc	status,2,c
  9488  0038F4  D004               	goto	u29130
  9489                           
  9490                           ; BSR set to: 0
  9491  0038F6  0E17               	movlw	23
  9492  0038F8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9493  0038FA  A4D8               	btfss	status,2,c
  9494  0038FC  0012               	return	
  9495  0038FE                     u29130:
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9499  0038FE  0E00               	movlw	0
  9500  003900  0101               	movlb	1	; () banked
  9501  003902  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9502                           
  9503                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9504  003904  0E00               	movlw	0
  9505  003906  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9506                           
  9507                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9508  003908  0E01               	movlw	1
  9509  00390A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9510  00390C  0012               	return	
  9511  00390E                     l23490:
  9512                           
  9513                           ; BSR set to: 1
  9514                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9515  00390E  0E01               	movlw	1
  9516  003910  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9517                           
  9518                           ; BSR set to: 1
  9519                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9520  003912  0E01               	movlw	1
  9521  003914  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9522  003916  0E00               	movlw	0
  9523  003918  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9524  00391A  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9525  00391C  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9526                           
  9527                           ; BSR set to: 1
  9528                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9529  00391E  0E00               	movlw	0
  9530  003920  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9531                           
  9532                           ; BSR set to: 1
  9533                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9534  003922  0E00               	movlw	0
  9535  003924  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9536  003926  0E00               	movlw	0
  9537  003928  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9538  00392A  0E00               	movlw	0
  9539  00392C  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9540  00392E  0E00               	movlw	0
  9541  003930  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9542                           
  9543                           ; BSR set to: 1
  9544                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9545  003932  0E00               	movlw	0
  9546  003934  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9547                           
  9548                           ; BSR set to: 1
  9549                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9550  003936  0E00               	movlw	0
  9551  003938  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9552                           
  9553                           ; BSR set to: 1
  9554                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9555  00393A  0E00               	movlw	0
  9556  00393C  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9557                           
  9558                           ; BSR set to: 1
  9559                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9560  00393E  0E00               	movlw	0
  9561  003940  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9562  003942  0E28               	movlw	40
  9563  003944  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9564                           
  9565                           ; BSR set to: 1
  9566                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9567  003946  0E0C               	movlw	12
  9568  003948  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9569  00394A  0E00               	movlw	0
  9570  00394C  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9571  00394E  0E04               	movlw	4
  9572  003950  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9573  003952  0E0F               	movlw	15
  9574  003954  ECB7  F046         	call	_SetSegmentValueIntermitent
  9575                           
  9576                           ; BSR set to: 1
  9577                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9578  003958  0EE2               	movlw	low _controlGate_stateMachine
  9579  00395A  6E12               	movwf	sm_send_event@psm^0,c
  9580  00395C  0E01               	movlw	high _controlGate_stateMachine
  9581  00395E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9582  003960  0E00               	movlw	0
  9583  003962  6E15               	movwf	(sm_send_event@event+1)^0,c
  9584  003964  0E0A               	movlw	10
  9585  003966  6E14               	movwf	sm_send_event@event^0,c
  9586  003968  EC18  F042         	call	_sm_send_event	;wreg free
  9587  00396C  0012               	return	
  9588  00396E                     l23510:
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9592  00396E  EC12  F03A         	call	_actionZone_Closed	;wreg free
  9593                           
  9594                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9595  003972  0012               	return	
  9596  003974                     l23512:
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9600  003974  ECD1  F023         	call	_actionZone_Opening	;wreg free
  9601  003978                     l23514:
  9602                           
  9603                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9604  003978  0E00               	movlw	0
  9605  00397A  0101               	movlb	1	; () banked
  9606  00397C  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9607  00397E  0E64               	movlw	100
  9608  003980  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9609                           
  9610                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9611  003982  0012               	return	
  9612  003984                     l23516:
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9616  003984  EC40  F028         	call	_actionZone_Opened	;wreg free
  9617  003988  D7F7               	goto	l23514
  9618  00398A                     l23520:
  9619                           
  9620                           ; BSR set to: 0
  9621                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9622  00398A  EC50  F021         	call	_actionZone_Closing	;wreg free
  9623  00398E  D7F4               	goto	l23514
  9624  003990                     l23524:
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9628  003990  0EB2               	movlw	low _controlLearning_stateMachine
  9629  003992  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9630  003994  0E02               	movlw	high _controlLearning_stateMachine
  9631  003996  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9632  003998  EC43  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9633  00399C  D7ED               	goto	l23514
  9634  00399E                     l23530:
  9635  00399E  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9636  0039A2  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9637  0039A6  50DF               	movf	indf2,w,c
  9638  0039A8  0100               	movlb	0	; () banked
  9639  0039AA  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9640  0039AC  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9641                           
  9642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9643                           ; Switch size 1, requested type "simple"
  9644                           ; Number of cases is 1, Range of values is 0 to 0
  9645                           ; switch strategies available:
  9646                           ; Name         Instructions Cycles
  9647                           ; simple_byte            4     3 (average)
  9648                           ;	Chosen strategy is simple_byte
  9649  0039AE  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9650  0039B0  0A00               	xorlw	0	; case 0
  9651  0039B2  A4D8               	btfss	status,2,c
  9652  0039B4  0012               	return	
  9653                           
  9654                           ; BSR set to: 0
  9655                           ; Switch size 1, requested type "simple"
  9656                           ; Number of cases is 6, Range of values is 0 to 5
  9657                           ; switch strategies available:
  9658                           ; Name         Instructions Cycles
  9659                           ; simple_byte           19    10 (average)
  9660                           ;	Chosen strategy is simple_byte
  9661  0039B6  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9662  0039B8  0A00               	xorlw	0	; case 0
  9663  0039BA  B4D8               	btfsc	status,2,c
  9664  0039BC  D773               	goto	l23468
  9665  0039BE  0A01               	xorlw	1	; case 1
  9666  0039C0  B4D8               	btfsc	status,2,c
  9667  0039C2  D7D5               	goto	l23510
  9668  0039C4  0A03               	xorlw	3	; case 2
  9669  0039C6  B4D8               	btfsc	status,2,c
  9670  0039C8  D7D5               	goto	l23512
  9671  0039CA  0A01               	xorlw	1	; case 3
  9672  0039CC  B4D8               	btfsc	status,2,c
  9673  0039CE  D7DD               	goto	l23520
  9674  0039D0  0A07               	xorlw	7	; case 4
  9675  0039D2  B4D8               	btfsc	status,2,c
  9676  0039D4  D7D7               	goto	l23516
  9677  0039D6  0A01               	xorlw	1	; case 5
  9678  0039D8  A4D8               	btfss	status,2,c
  9679  0039DA  0012               	return	
  9680  0039DC  D7D9               	goto	l23524
  9681  0039DE                     __end_of_sm_execute_ControlGate:
  9682                           	callstack 0
  9683                           
  9684 ;; *************** function _sm_execute_ControlLearning *****************
  9685 ;; Defined at:
  9686 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  psm             2    4[BANK0 ] PTR struct .
  9689 ;;		 -> controlLearning_stateMachine(11), 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      void 
  9694 ;; Registers used:
  9695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 3F/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9703 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9704 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9705 ;;Total ram usage:        5 bytes
  9706 ;; Hardware stack levels used: 1
  9707 ;; Hardware stack levels required when called: 14
  9708 ;; This function calls:
  9709 ;;		_GetOpenOrder
  9710 ;;		_SaveNVM_VarSystem
  9711 ;;		_calculateMean
  9712 ;;		_clearLearningValue
  9713 ;;		_generateErrorLearnig
  9714 ;;		_sm_send_event
  9715 ;; This function is called by:
  9716 ;;		_sm_execute_ControlGate
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text20
  9721  001886                     __ptext20:
  9722                           	callstack 0
  9723  001886                     _sm_execute_ControlLearning:
  9724                           	callstack 15
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9728                           
  9729                           ;incstack = 0
  9730  001886  EC20  F02A         	call	_GetOpenOrder	;wreg free
  9731  00188A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9732                           
  9733                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9734  00188C  D0B8               	goto	l22120
  9735  00188E                     l22046:
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9739  00188E  EE20 F004          	lfsr	2,4
  9740  001892  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9741  001894  26D9               	addwf	fsr2l,f,c
  9742  001896  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9743  001898  22DA               	addwfc	fsr2h,f,c
  9744  00189A  0E0A               	movlw	10
  9745  00189C  18DE               	xorwf	postinc2,w,c
  9746  00189E  10DE               	iorwf	postinc2,w,c
  9747  0018A0  A4D8               	btfss	status,2,c
  9748  0018A2  D00D               	goto	l22054
  9749                           
  9750                           ; BSR set to: 0
  9751  0018A4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9752  0018A6  B4D8               	btfsc	status,2,c
  9753  0018A8  D00A               	goto	l22054
  9754                           
  9755                           ; BSR set to: 0
  9756  0018AA  0101               	movlb	1	; () banked
  9757  0018AC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9758  0018AE  A4D8               	btfss	status,2,c
  9759  0018B0  D006               	goto	l22054
  9760  0018B2                     u26130:
  9761                           
  9762                           ; BSR set to: 1
  9763                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9764  0018B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9765  0018B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9766  0018BA  0E02               	movlw	2
  9767  0018BC  D08A               	goto	L66
  9768  0018BE                     l22054:
  9769  0018BE  0100               	movlb	0	; () banked
  9770  0018C0  EE20 F004          	lfsr	2,4
  9771  0018C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9772  0018C6  26D9               	addwf	fsr2l,f,c
  9773  0018C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9774  0018CA  22DA               	addwfc	fsr2h,f,c
  9775  0018CC  0E0A               	movlw	10
  9776  0018CE  18DE               	xorwf	postinc2,w,c
  9777  0018D0  10DE               	iorwf	postinc2,w,c
  9778  0018D2  A4D8               	btfss	status,2,c
  9779  0018D4  D00D               	goto	l22062
  9780                           
  9781                           ; BSR set to: 0
  9782  0018D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9783  0018D8  B4D8               	btfsc	status,2,c
  9784  0018DA  D004               	goto	u26160
  9785                           
  9786                           ; BSR set to: 0
  9787  0018DC  0101               	movlb	1	; () banked
  9788  0018DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9789  0018E0  A4D8               	btfss	status,2,c
  9790  0018E2  D006               	goto	l22062
  9791  0018E4                     u26160:
  9792                           
  9793                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9794  0018E4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9795  0018E8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9796  0018EC  0E04               	movlw	4
  9797  0018EE  D071               	goto	L66
  9798  0018F0                     l22062:
  9799  0018F0  0100               	movlb	0	; () banked
  9800  0018F2  EE20 F004          	lfsr	2,4
  9801  0018F6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9802  0018F8  26D9               	addwf	fsr2l,f,c
  9803  0018FA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9804  0018FC  22DA               	addwfc	fsr2h,f,c
  9805  0018FE  0E0B               	movlw	11
  9806  001900  18DE               	xorwf	postinc2,w,c
  9807  001902  10DE               	iorwf	postinc2,w,c
  9808  001904  A4D8               	btfss	status,2,c
  9809  001906  D09B               	goto	l22122
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9813  001908  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9814  00190C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9815  001910  0E01               	movlw	1
  9816  001912  D05F               	goto	L66
  9817  001914                     l22066:
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9821  001914  EE20 F004          	lfsr	2,4
  9822  001918  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9823  00191A  26D9               	addwf	fsr2l,f,c
  9824  00191C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9825  00191E  22DA               	addwfc	fsr2h,f,c
  9826  001920  0E0A               	movlw	10
  9827  001922  18DE               	xorwf	postinc2,w,c
  9828  001924  10DE               	iorwf	postinc2,w,c
  9829  001926  A4D8               	btfss	status,2,c
  9830  001928  D007               	goto	l22074
  9831                           
  9832                           ; BSR set to: 0
  9833  00192A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9834  00192C  B4D8               	btfsc	status,2,c
  9835  00192E  D004               	goto	l22074
  9836                           
  9837                           ; BSR set to: 0
  9838  001930  0101               	movlb	1	; () banked
  9839  001932  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9840  001934  B4D8               	btfsc	status,2,c
  9841  001936  D7BD               	goto	u26130
  9842  001938                     l22074:
  9843  001938  0100               	movlb	0	; () banked
  9844  00193A  EE20 F004          	lfsr	2,4
  9845  00193E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9846  001940  26D9               	addwf	fsr2l,f,c
  9847  001942  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9848  001944  22DA               	addwfc	fsr2h,f,c
  9849  001946  0E0A               	movlw	10
  9850  001948  18DE               	xorwf	postinc2,w,c
  9851  00194A  10DE               	iorwf	postinc2,w,c
  9852  00194C  A4D8               	btfss	status,2,c
  9853  00194E  D007               	goto	l22082
  9854                           
  9855                           ; BSR set to: 0
  9856  001950  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9857  001952  B4D8               	btfsc	status,2,c
  9858  001954  D7C7               	goto	u26160
  9859                           
  9860                           ; BSR set to: 0
  9861  001956  0101               	movlb	1	; () banked
  9862  001958  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9863  00195A  B4D8               	btfsc	status,2,c
  9864  00195C  D7C3               	goto	u26160
  9865  00195E                     l22082:
  9866  00195E  0100               	movlb	0	; () banked
  9867  001960                     L68:
  9868  001960  EE20 F004          	lfsr	2,4
  9869  001964  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9870  001966  26D9               	addwf	fsr2l,f,c
  9871  001968  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9872  00196A  22DA               	addwfc	fsr2h,f,c
  9873  00196C  0E10               	movlw	16
  9874  00196E  18DE               	xorwf	postinc2,w,c
  9875  001970  10DE               	iorwf	postinc2,w,c
  9876  001972  A4D8               	btfss	status,2,c
  9877  001974  D064               	goto	l22122
  9878  001976  D03C               	goto	L129
  9879  001978                     l22086:
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9883  001978  EE20 F004          	lfsr	2,4
  9884  00197C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9885  00197E  26D9               	addwf	fsr2l,f,c
  9886  001980  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9887  001982  22DA               	addwfc	fsr2h,f,c
  9888  001984  0E0B               	movlw	11
  9889  001986  18DE               	xorwf	postinc2,w,c
  9890  001988  10DE               	iorwf	postinc2,w,c
  9891  00198A  A4D8               	btfss	status,2,c
  9892  00198C  D7E9               	goto	L68
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9896  00198E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9897  001992  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9898  001996  0E03               	movlw	3
  9899  001998  D01C               	goto	L66
  9900  00199A                     l22094:
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9904  00199A  EE20 F004          	lfsr	2,4
  9905  00199E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9906  0019A0  26D9               	addwf	fsr2l,f,c
  9907  0019A2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9908  0019A4  22DA               	addwfc	fsr2h,f,c
  9909  0019A6  0E0A               	movlw	10
  9910  0019A8  18DE               	xorwf	postinc2,w,c
  9911  0019AA  10DE               	iorwf	postinc2,w,c
  9912  0019AC  A4D8               	btfss	status,2,c
  9913  0019AE  D7D8               	goto	L68
  9914  0019B0  D799               	goto	u26160
  9915  0019B2                     l22102:
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9919  0019B2  EE20 F004          	lfsr	2,4
  9920  0019B6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9921  0019B8  26D9               	addwf	fsr2l,f,c
  9922  0019BA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9923  0019BC  22DA               	addwfc	fsr2h,f,c
  9924  0019BE  0E0B               	movlw	11
  9925  0019C0  18DE               	xorwf	postinc2,w,c
  9926  0019C2  10DE               	iorwf	postinc2,w,c
  9927  0019C4  A4D8               	btfss	status,2,c
  9928  0019C6  D7CC               	goto	L68
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9932  0019C8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9933  0019CC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9934  0019D0  0E05               	movlw	5
  9935  0019D2                     L66:
  9936  0019D2  6EDE               	movwf	postinc2,c
  9937  0019D4  0E00               	movlw	0
  9938  0019D6  6EDD               	movwf	postdec2,c
  9939  0019D8  D032               	goto	l22122
  9940  0019DA                     l22110:
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9944  0019DA  EE20 F004          	lfsr	2,4
  9945  0019DE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9946  0019E0  26D9               	addwf	fsr2l,f,c
  9947  0019E2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9948  0019E4  22DA               	addwfc	fsr2h,f,c
  9949  0019E6  0E0A               	movlw	10
  9950  0019E8  18DE               	xorwf	postinc2,w,c
  9951  0019EA  10DE               	iorwf	postinc2,w,c
  9952  0019EC  A4D8               	btfss	status,2,c
  9953  0019EE  D7B8               	goto	L68
  9954  0019F0                     L129:
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9958  0019F0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9959  0019F4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9960  0019F8  0E00               	movlw	0
  9961  0019FA  D7EB               	goto	L66
  9962  0019FC                     l2907:
  9963                           
  9964                           ; BSR set to: 0
  9965  0019FC  D7FF               	goto	l2907
  9966  0019FE                     l22120:
  9967  0019FE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9968  001A02  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9969  001A06  50DF               	movf	indf2,w,c
  9970  001A08  0100               	movlb	0	; () banked
  9971  001A0A  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9972  001A0C  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9973                           
  9974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9975                           ; Switch size 1, requested type "simple"
  9976                           ; Number of cases is 1, Range of values is 0 to 0
  9977                           ; switch strategies available:
  9978                           ; Name         Instructions Cycles
  9979                           ; simple_byte            4     3 (average)
  9980                           ;	Chosen strategy is simple_byte
  9981  001A0E  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9982  001A10  0A00               	xorlw	0	; case 0
  9983  001A12  A4D8               	btfss	status,2,c
  9984  001A14  D7F3               	goto	l2907
  9985                           
  9986                           ; BSR set to: 0
  9987                           ; Switch size 1, requested type "simple"
  9988                           ; Number of cases is 6, Range of values is 0 to 5
  9989                           ; switch strategies available:
  9990                           ; Name         Instructions Cycles
  9991                           ; simple_byte           19    10 (average)
  9992                           ;	Chosen strategy is simple_byte
  9993  001A16  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9994  001A18  0A00               	xorlw	0	; case 0
  9995  001A1A  B4D8               	btfsc	status,2,c
  9996  001A1C  D738               	goto	l22046
  9997  001A1E  0A01               	xorlw	1	; case 1
  9998  001A20  B4D8               	btfsc	status,2,c
  9999  001A22  D778               	goto	l22066
 10000  001A24  0A03               	xorlw	3	; case 2
 10001  001A26  B4D8               	btfsc	status,2,c
 10002  001A28  D7A7               	goto	l22086
 10003  001A2A  0A01               	xorlw	1	; case 3
 10004  001A2C  B4D8               	btfsc	status,2,c
 10005  001A2E  D7B5               	goto	l22094
 10006  001A30  0A07               	xorlw	7	; case 4
 10007  001A32  B4D8               	btfsc	status,2,c
 10008  001A34  D7BE               	goto	l22102
 10009  001A36  0A01               	xorlw	1	; case 5
 10010  001A38  B4D8               	btfsc	status,2,c
 10011  001A3A  D7CF               	goto	l22110
 10012  001A3C  D7DF               	goto	l2907
 10013  001A3E                     l22122:
 10014                           
 10015                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
 10016  001A3E  0EB2               	movlw	low _controlLearning_stateMachine
 10017  001A40  6E12               	movwf	sm_send_event@psm^0,c
 10018  001A42  0E02               	movlw	high _controlLearning_stateMachine
 10019  001A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10020  001A46  0E00               	movlw	0
 10021  001A48  6E15               	movwf	(sm_send_event@event+1)^0,c
 10022  001A4A  0E00               	movlw	0
 10023  001A4C  6E14               	movwf	sm_send_event@event^0,c
 10024  001A4E  EC18  F042         	call	_sm_send_event	;wreg free
 10025                           
 10026                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
 10027  001A52  D280               	goto	l22378
 10028  001A54                     l22124:
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
 10032  001A54  0101               	movlb	1	; () banked
 10033  001A56  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10034  001A58  A4D8               	btfss	status,2,c
 10035  001A5A  D03A               	goto	l22142
 10036                           
 10037                           ; BSR set to: 1
 10038                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
 10039  001A5C  0E01               	movlw	1
 10040  001A5E  0100               	movlb	0	; () banked
 10041  001A60  6F81               	movwf	_control_limit_switch& (0+255),b
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10045  001A62  0EB2               	movlw	low _controlLearning_stateMachine
 10046  001A64  6E12               	movwf	sm_send_event@psm^0,c
 10047  001A66  0E02               	movlw	high _controlLearning_stateMachine
 10048  001A68  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10049  001A6A  0E00               	movlw	0
 10050  001A6C  6E15               	movwf	(sm_send_event@event+1)^0,c
 10051  001A6E  0E0A               	movlw	10
 10052  001A70  6E14               	movwf	sm_send_event@event^0,c
 10053  001A72  EC18  F042         	call	_sm_send_event	;wreg free
 10054                           
 10055                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
 10056  001A76  0E01               	movlw	1
 10057  001A78  0101               	movlb	1	; () banked
 10058  001A7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10059                           
 10060                           ; BSR set to: 1
 10061                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
 10062  001A7C  ECD5  F03E         	call	_clearLearningValue	;wreg free
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
 10066  001A80  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10067  001A82  B4D8               	btfsc	status,2,c
 10068  001A84  D016               	goto	l22140
 10069                           
 10070                           ; BSR set to: 0
 10071  001A86  0101               	movlb	1	; () banked
 10072  001A88  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10073  001A8A  A4D8               	btfss	status,2,c
 10074  001A8C  D012               	goto	l22140
 10075  001A8E                     u26350:
 10076                           
 10077                           ; BSR set to: 1
 10078                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
 10079  001A8E  0E01               	movlw	1
 10080  001A90  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10081  001A92  0E2C               	movlw	44
 10082  001A94  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10083                           
 10084                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
 10085  001A96  0E00               	movlw	0
 10086  001A98  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10087  001A9A  0E78               	movlw	120
 10088  001A9C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10089                           
 10090                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10091  001A9E  0E00               	movlw	0
 10092  001AA0  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10093  001AA2  0E14               	movlw	20
 10094  001AA4  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10095                           
 10096                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
 10097  001AA6  0E01               	movlw	1
 10098  001AA8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10099                           
 10100                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
 10101  001AAA  0E00               	movlw	0
 10102  001AAC  0100               	movlb	0	; () banked
 10103  001AAE  6F81               	movwf	_control_limit_switch& (0+255),b
 10104                           
 10105                           ;sm_ControlLearning_MC50.c: 148:                  }
 10106  001AB0  0012               	return	
 10107  001AB2                     l22140:
 10108                           
 10109                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
 10110  001AB2  0E00               	movlw	0
 10111  001AB4  0101               	movlb	1	; () banked
 10112  001AB6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10113                           
 10114                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10115  001AB8  0E00               	movlw	0
 10116  001ABA  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10117  001ABC  0E50               	movlw	80
 10118  001ABE  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10119                           
 10120                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10121  001AC0  0E00               	movlw	0
 10122  001AC2  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10123  001AC4  0E14               	movlw	20
 10124  001AC6  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10125                           
 10126                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
 10127  001AC8  0E00               	movlw	0
 10128  001ACA  0100               	movlb	0	; () banked
 10129  001ACC  6F81               	movwf	_control_limit_switch& (0+255),b
 10130  001ACE  0012               	return	
 10131  001AD0                     l22142:
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10135  001AD0  0EB2               	movlw	low _controlLearning_stateMachine
 10136  001AD2  6E12               	movwf	sm_send_event@psm^0,c
 10137  001AD4  0E02               	movlw	high _controlLearning_stateMachine
 10138  001AD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10139  001AD8  0E00               	movlw	0
 10140  001ADA  6E15               	movwf	(sm_send_event@event+1)^0,c
 10141  001ADC  0E0B               	movlw	11
 10142  001ADE  6E14               	movwf	sm_send_event@event^0,c
 10143  001AE0  EC18  F042         	call	_sm_send_event	;wreg free
 10144                           
 10145                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
 10146  001AE4  0E03               	movlw	3
 10147  001AE6  0101               	movlb	1	; () banked
 10148  001AE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10149                           
 10150                           ; BSR set to: 1
 10151                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
 10152  001AEA  0E01               	movlw	1
 10153  001AEC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10154                           
 10155                           ; BSR set to: 1
 10156                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
 10157                           
 10158                           ;sm_ControlLearning_MC50.c: 163:             }
 10159  001AEE  0012               	return	
 10160  001AF0                     l22148:
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10164  001AF0  0101               	movlb	1	; () banked
 10165  001AF2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10166  001AF4  B4D8               	btfsc	status,2,c
 10167  001AF6  D00E               	goto	u26400
 10168                           
 10169                           ; BSR set to: 1
 10170  001AF8  0100               	movlb	0	; () banked
 10171  001AFA  0581               	decf	_control_limit_switch& (0+255),w,b
 10172  001AFC  B4D8               	btfsc	status,2,c
 10173  001AFE  D00A               	goto	u26400
 10174                           
 10175                           ; BSR set to: 0
 10176  001B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10177  001B02  B4D8               	btfsc	status,2,c
 10178  001B04  D003               	goto	u26390
 10179                           
 10180                           ; BSR set to: 0
 10181  001B06  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10182  001B08  A4D8               	btfss	status,2,c
 10183  001B0A  D028               	goto	l22176
 10184  001B0C                     u26390:
 10185                           
 10186                           ; BSR set to: 0
 10187  001B0C  0101               	movlb	1	; () banked
 10188  001B0E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10189  001B10  A4D8               	btfss	status,2,c
 10190  001B12  D024               	goto	l22176
 10191  001B14                     u26400:
 10192                           
 10193                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
 10194  001B14  0E01               	movlw	1
 10195  001B16  0100               	movlb	0	; () banked
 10196  001B18  6F81               	movwf	_control_limit_switch& (0+255),b
 10197                           
 10198                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10199  001B1A  0E00               	movlw	0
 10200  001B1C  0101               	movlb	1	; () banked
 10201  001B1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10202                           
 10203                           ; BSR set to: 1
 10204                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10205  001B20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10206  001B22  D005               	goto	u26410
 10207  001B24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10208  001B26  E102               	bnz	u26411
 10209  001B28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10210  001B2A  B0D8               	btfsc	status,0,c
 10211  001B2C                     u26411:
 10212  001B2C  0012               	return	
 10213  001B2E                     u26410:
 10214                           
 10215                           ; BSR set to: 1
 10216                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10217  001B2E  0EB2               	movlw	low _controlLearning_stateMachine
 10218  001B30  6E12               	movwf	sm_send_event@psm^0,c
 10219  001B32  0E02               	movlw	high _controlLearning_stateMachine
 10220  001B34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10221  001B36  0E00               	movlw	0
 10222  001B38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10223  001B3A  0E0A               	movlw	10
 10224  001B3C  6E14               	movwf	sm_send_event@event^0,c
 10225  001B3E  EC18  F042         	call	_sm_send_event	;wreg free
 10226                           
 10227                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10228  001B42  0E01               	movlw	1
 10229  001B44  0101               	movlb	1	; () banked
 10230  001B46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10231                           
 10232                           ; BSR set to: 1
 10233                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10234  001B48  ECD5  F03E         	call	_clearLearningValue	;wreg free
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10238  001B4C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10239  001B4E  B4D8               	btfsc	status,2,c
 10240  001B50  D7B0               	goto	l22140
 10241                           
 10242                           ; BSR set to: 0
 10243  001B52  0101               	movlb	1	; () banked
 10244  001B54  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10245  001B56  B4D8               	btfsc	status,2,c
 10246  001B58  D79A               	goto	u26350
 10247  001B5A  D7AB               	goto	l22140
 10248  001B5C                     l22176:
 10249  001B5C  0101               	movlb	1	; () banked
 10250  001B5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10251  001B60  A4D8               	btfss	status,2,c
 10252  001B62  D003               	goto	l22180
 10253  001B64                     u26440:
 10254                           
 10255                           ; BSR set to: 1
 10256                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10257  001B64  EC51  F041         	call	_generateErrorLearnig	;wreg free
 10258                           
 10259                           ;sm_ControlLearning_MC50.c: 198:             }
 10260  001B68  0012               	return	
 10261  001B6A                     l22180:
 10262                           
 10263                           ; BSR set to: 1
 10264                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10265  001B6A  0E00               	movlw	0
 10266  001B6C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10267  001B6E  0E28               	movlw	40
 10268  001B70  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10269  001B72  0012               	return	
 10270  001B74                     l22182:
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10274  001B74  0101               	movlb	1	; () banked
 10275  001B76  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10276  001B78  A4D8               	btfss	status,2,c
 10277                           
 10278                           ; BSR set to: 1
 10279  001B7A  BFD1               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10280  001B7C  D009               	goto	u26470
 10281  001B7E  51D1               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10282  001B80  E103               	bnz	u26460
 10283  001B82  05D0               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10284  001B84  A0D8               	btfss	status,0,c
 10285  001B86  D004               	goto	u26470
 10286  001B88                     u26460:
 10287                           
 10288                           ; BSR set to: 1
 10289  001B88  0100               	movlb	0	; () banked
 10290  001B8A  0581               	decf	_control_limit_switch& (0+255),w,b
 10291  001B8C  A4D8               	btfss	status,2,c
 10292  001B8E  D02A               	goto	l22204
 10293  001B90                     u26470:
 10294                           
 10295                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10296  001B90  0E01               	movlw	1
 10297  001B92  0100               	movlb	0	; () banked
 10298  001B94  6F81               	movwf	_control_limit_switch& (0+255),b
 10299                           
 10300                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10301  001B96  0E00               	movlw	0
 10302  001B98  0101               	movlb	1	; () banked
 10303  001B9A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10304                           
 10305                           ; BSR set to: 1
 10306                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10307  001B9C  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10308  001B9E  D005               	goto	u26480
 10309  001BA0  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10310  001BA2  E102               	bnz	u26481
 10311  001BA4  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10312  001BA6  B0D8               	btfsc	status,0,c
 10313  001BA8                     u26481:
 10314  001BA8  0012               	return	
 10315  001BAA                     u26480:
 10316                           
 10317                           ; BSR set to: 1
 10318                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10319  001BAA  0EB2               	movlw	low _controlLearning_stateMachine
 10320  001BAC  6E12               	movwf	sm_send_event@psm^0,c
 10321  001BAE  0E02               	movlw	high _controlLearning_stateMachine
 10322  001BB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10323  001BB2  0E00               	movlw	0
 10324  001BB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10325  001BB6  0E0B               	movlw	11
 10326  001BB8  6E14               	movwf	sm_send_event@event^0,c
 10327  001BBA  EC18  F042         	call	_sm_send_event	;wreg free
 10328                           
 10329                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10330  001BBE  0E03               	movlw	3
 10331  001BC0  0101               	movlb	1	; () banked
 10332  001BC2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10333                           
 10334                           ; BSR set to: 1
 10335                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10336  001BC4  0E00               	movlw	0
 10337  001BC6  6FD1               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10338  001BC8  0E64               	movlw	100
 10339  001BCA  6FD0               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10340                           
 10341                           ; BSR set to: 1
 10342                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10343  001BCC  0E00               	movlw	0
 10344  001BCE  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10345  001BD0  0E64               	movlw	100
 10346  001BD2                     L67:
 10347  001BD2  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10348                           
 10349                           ; BSR set to: 1
 10350                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10351  001BD4  0E00               	movlw	0
 10352  001BD6  6FDF               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10353  001BD8  0E14               	movlw	20
 10354  001BDA  6FDE               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10355                           
 10356                           ; BSR set to: 1
 10357                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10358  001BDC  0E00               	movlw	0
 10359  001BDE  0100               	movlb	0	; () banked
 10360  001BE0  6F81               	movwf	_control_limit_switch& (0+255),b
 10361  001BE2  0012               	return	
 10362  001BE4                     l22204:
 10363                           
 10364                           ; BSR set to: 0
 10365  001BE4  0101               	movlb	1	; () banked
 10366  001BE6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10367  001BE8  B4D8               	btfsc	status,2,c
 10368  001BEA  D7BC               	goto	u26440
 10369                           
 10370                           ; BSR set to: 1
 10371                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10372  001BEC  0E00               	movlw	0
 10373  001BEE  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10374  001BF0  0E28               	movlw	40
 10375  001BF2  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10376                           
 10377                           ; BSR set to: 1
 10378                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10379  001BF4  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10380  001BF6  D005               	goto	u26500
 10381  001BF8  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10382  001BFA  E102               	bnz	u26501
 10383  001BFC  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10384  001BFE  B0D8               	btfsc	status,0,c
 10385  001C00                     u26501:
 10386  001C00  0012               	return	
 10387  001C02                     u26500:
 10388                           
 10389                           ; BSR set to: 1
 10390                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10391  001C02  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10392  001C04  0012               	return	
 10393  001C06  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10394  001C08  E103               	bnz	u26510
 10395  001C0A  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10396  001C0C  A0D8               	btfss	status,0,c
 10397  001C0E  0012               	return	
 10398  001C10                     u26510:
 10399                           
 10400                           ; BSR set to: 1
 10401                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10402  001C10  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10403  001C14  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10404  001C18  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10405  001C1A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10406  001C1C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10407  001C20  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10408  001C24  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10409  001C28  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10410  001C2C  ECB8  F041         	call	_calculateMean	;wreg free
 10411  001C30  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10412  001C34  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10413  001C38  0012               	return	
 10414  001C3A                     l22216:
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10418  001C3A  0101               	movlb	1	; () banked
 10419  001C3C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10420  001C3E  B4D8               	btfsc	status,2,c
 10421  001C40  D004               	goto	u26530
 10422                           
 10423                           ; BSR set to: 1
 10424  001C42  0100               	movlb	0	; () banked
 10425  001C44  0581               	decf	_control_limit_switch& (0+255),w,b
 10426  001C46  A4D8               	btfss	status,2,c
 10427  001C48  D020               	goto	l22236
 10428  001C4A                     u26530:
 10429                           
 10430                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10431  001C4A  0E01               	movlw	1
 10432  001C4C  0100               	movlb	0	; () banked
 10433  001C4E  6F81               	movwf	_control_limit_switch& (0+255),b
 10434                           
 10435                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10436  001C50  0E00               	movlw	0
 10437  001C52  0101               	movlb	1	; () banked
 10438  001C54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10439                           
 10440                           ; BSR set to: 1
 10441                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10442  001C56  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10443  001C58  D005               	goto	u26540
 10444  001C5A  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10445  001C5C  E102               	bnz	u26541
 10446  001C5E  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10447  001C60  B0D8               	btfsc	status,0,c
 10448  001C62                     u26541:
 10449  001C62  0012               	return	
 10450  001C64                     u26540:
 10451                           
 10452                           ; BSR set to: 1
 10453                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10454  001C64  0EB2               	movlw	low _controlLearning_stateMachine
 10455  001C66  6E12               	movwf	sm_send_event@psm^0,c
 10456  001C68  0E02               	movlw	high _controlLearning_stateMachine
 10457  001C6A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10458  001C6C  0E00               	movlw	0
 10459  001C6E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10460  001C70  0E0A               	movlw	10
 10461  001C72  6E14               	movwf	sm_send_event@event^0,c
 10462  001C74  EC18  F042         	call	_sm_send_event	;wreg free
 10463                           
 10464                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10465  001C78  0E01               	movlw	1
 10466  001C7A  0101               	movlb	1	; () banked
 10467  001C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10468                           
 10469                           ; BSR set to: 1
 10470                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10471  001C7E  0E00               	movlw	0
 10472  001C80  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10473                           
 10474                           ; BSR set to: 1
 10475                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10476  001C82  0E00               	movlw	0
 10477  001C84  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10478  001C86  0E3C               	movlw	60
 10479  001C88  D7A4               	goto	L67
 10480  001C8A                     l22236:
 10481                           
 10482                           ; BSR set to: 0
 10483  001C8A  0101               	movlb	1	; () banked
 10484  001C8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10485  001C8E  B4D8               	btfsc	status,2,c
 10486  001C90  D769               	goto	u26440
 10487                           
 10488                           ; BSR set to: 1
 10489                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10490  001C92  0E00               	movlw	0
 10491  001C94  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10492  001C96  0E28               	movlw	40
 10493  001C98  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10494                           
 10495                           ; BSR set to: 1
 10496                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10497  001C9A  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10498  001C9C  D005               	goto	u26560
 10499  001C9E  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10500  001CA0  E102               	bnz	u26561
 10501  001CA2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10502  001CA4  B0D8               	btfsc	status,0,c
 10503  001CA6                     u26561:
 10504  001CA6  0012               	return	
 10505  001CA8                     u26560:
 10506                           
 10507                           ; BSR set to: 1
 10508                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10509  001CA8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10510  001CAA  0012               	return	
 10511  001CAC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10512  001CAE  E103               	bnz	u26570
 10513  001CB0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10514  001CB2  A0D8               	btfss	status,0,c
 10515  001CB4  0012               	return	
 10516  001CB6                     u26570:
 10517                           
 10518                           ; BSR set to: 1
 10519                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10520  001CB6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10521  001CBA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10522  001CBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10523  001CC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10524  001CC2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10525  001CC6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10526  001CCA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10527  001CCE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10528  001CD2  ECB8  F041         	call	_calculateMean	;wreg free
 10529  001CD6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10530  001CDA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10531  001CDE  0012               	return	
 10532  001CE0                     l22248:
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10536  001CE0  0101               	movlb	1	; () banked
 10537  001CE2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10538  001CE4  B4D8               	btfsc	status,2,c
 10539  001CE6  D011               	goto	u26630
 10540                           
 10541                           ; BSR set to: 1
 10542  001CE8  0100               	movlb	0	; () banked
 10543  001CEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10544  001CEC  B4D8               	btfsc	status,2,c
 10545  001CEE  D00D               	goto	u26630
 10546                           
 10547                           ; BSR set to: 0
 10548  001CF0  0101               	movlb	1	; () banked
 10549  001CF2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10550  001CF4  A4D8               	btfss	status,2,c
 10551  001CF6  D02C               	goto	l22274
 10552                           
 10553                           ; BSR set to: 1
 10554  001CF8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10555  001CFA  B4D8               	btfsc	status,2,c
 10556  001CFC  D003               	goto	u26620
 10557                           
 10558                           ; BSR set to: 1
 10559  001CFE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10560  001D00  A4D8               	btfss	status,2,c
 10561  001D02  D026               	goto	l22274
 10562  001D04                     u26620:
 10563                           
 10564                           ; BSR set to: 1
 10565  001D04  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10566  001D06  A4D8               	btfss	status,2,c
 10567  001D08  D023               	goto	l22274
 10568  001D0A                     u26630:
 10569                           
 10570                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10571  001D0A  0E00               	movlw	0
 10572  001D0C  0101               	movlb	1	; () banked
 10573  001D0E  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10574                           
 10575                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10576  001D10  0E00               	movlw	0
 10577  001D12  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10578                           
 10579                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10580  001D14  0E01               	movlw	1
 10581  001D16  0100               	movlb	0	; () banked
 10582  001D18  6F81               	movwf	_control_limit_switch& (0+255),b
 10583                           
 10584                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10585  001D1A  0E00               	movlw	0
 10586  001D1C  0101               	movlb	1	; () banked
 10587  001D1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10588                           
 10589                           ; BSR set to: 1
 10590                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10591  001D20  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10592  001D22  D005               	goto	u26640
 10593  001D24  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10594  001D26  E102               	bnz	u26641
 10595  001D28  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10596  001D2A  B0D8               	btfsc	status,0,c
 10597  001D2C                     u26641:
 10598  001D2C  0012               	return	
 10599  001D2E                     u26640:
 10600                           
 10601                           ; BSR set to: 1
 10602                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10603  001D2E  0EB2               	movlw	low _controlLearning_stateMachine
 10604  001D30  6E12               	movwf	sm_send_event@psm^0,c
 10605  001D32  0E02               	movlw	high _controlLearning_stateMachine
 10606  001D34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10607  001D36  0E00               	movlw	0
 10608  001D38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10609  001D3A  0E0B               	movlw	11
 10610  001D3C  6E14               	movwf	sm_send_event@event^0,c
 10611  001D3E  EC18  F042         	call	_sm_send_event	;wreg free
 10612                           
 10613                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10614  001D42  0E03               	movlw	3
 10615  001D44  0101               	movlb	1	; () banked
 10616  001D46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10617                           
 10618                           ; BSR set to: 1
 10619                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10620  001D48  0E00               	movlw	0
 10621  001D4A  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10622  001D4C  0E50               	movlw	80
 10623  001D4E  D741               	goto	L67
 10624  001D50                     l22274:
 10625                           
 10626                           ; BSR set to: 1
 10627  001D50  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10628  001D52  B4D8               	btfsc	status,2,c
 10629  001D54  D707               	goto	u26440
 10630                           
 10631                           ; BSR set to: 1
 10632  001D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10633  001D58  B4D8               	btfsc	status,2,c
 10634  001D5A  D003               	goto	u26670
 10635                           
 10636                           ; BSR set to: 1
 10637  001D5C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10638  001D5E  A4D8               	btfss	status,2,c
 10639  001D60  D00F               	goto	l22288
 10640  001D62                     u26670:
 10641                           
 10642                           ; BSR set to: 1
 10643  001D62  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10644  001D64  A4D8               	btfss	status,2,c
 10645  001D66  D00C               	goto	l22288
 10646                           
 10647                           ; BSR set to: 1
 10648  001D68  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10649  001D6A  A4D8               	btfss	status,2,c
 10650  001D6C  D009               	goto	l22288
 10651  001D6E                     u26690:
 10652                           
 10653                           ; BSR set to: 1
 10654                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10655  001D6E  0E01               	movlw	1
 10656  001D70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10657                           
 10658                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10659  001D72  0E01               	movlw	1
 10660  001D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10661                           
 10662                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10663  001D76  0E00               	movlw	0
 10664  001D78  6FCF               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10665  001D7A  0E50               	movlw	80
 10666  001D7C  6FCE               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10667                           
 10668                           ;sm_ControlLearning_MC50.c: 309:             }
 10669  001D7E  0012               	return	
 10670  001D80                     l22288:
 10671                           
 10672                           ; BSR set to: 1
 10673  001D80  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10674  001D82  A4D8               	btfss	status,2,c
 10675  001D84  D00C               	goto	l22296
 10676                           
 10677                           ; BSR set to: 1
 10678                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10679  001D86  0E00               	movlw	0
 10680  001D88  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10681  001D8A  0E28               	movlw	40
 10682  001D8C  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10683                           
 10684                           ; BSR set to: 1
 10685                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10686  001D8E  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10687  001D90  0012               	return	
 10688  001D92  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10689  001D94  E103               	bnz	u26710
 10690  001D96  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10691  001D98  A0D8               	btfss	status,0,c
 10692  001D9A  0012               	return	
 10693  001D9C                     u26710:
 10694  001D9C  D739               	goto	u26510
 10695  001D9E                     l22296:
 10696                           
 10697                           ; BSR set to: 1
 10698                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10699  001D9E  0E01               	movlw	1
 10700  001DA0  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10701                           
 10702                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10703  001DA2  0E00               	movlw	0
 10704  001DA4  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10705  001DA6  0E28               	movlw	40
 10706  001DA8  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10707                           
 10708                           ; BSR set to: 1
 10709                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10710  001DAA  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10711  001DAC  D005               	goto	u26720
 10712  001DAE  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10713  001DB0  E102               	bnz	u26721
 10714  001DB2  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10715  001DB4  B0D8               	btfsc	status,0,c
 10716  001DB6                     u26721:
 10717  001DB6  0012               	return	
 10718  001DB8                     u26720:
 10719                           
 10720                           ; BSR set to: 1
 10721                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10722  001DB8  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10723  001DBA  0012               	return	
 10724  001DBC  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10725  001DBE  E103               	bnz	u26730
 10726  001DC0  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10727  001DC2  A0D8               	btfss	status,0,c
 10728  001DC4  0012               	return	
 10729  001DC6                     u26730:
 10730                           
 10731                           ; BSR set to: 1
 10732                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10733  001DC6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10734  001DCA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10735  001DCE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10736  001DD0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10737  001DD2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10738  001DD6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10739  001DDA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10740  001DDC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10741  001DDE  ECB8  F041         	call	_calculateMean	;wreg free
 10742  001DE2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10743  001DE6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10744  001DEA  0012               	return	
 10745  001DEC                     l22304:
 10746                           
 10747                           ; BSR set to: 0
 10748                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10749  001DEC  0101               	movlb	1	; () banked
 10750  001DEE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10751  001DF0  B4D8               	btfsc	status,2,c
 10752  001DF2  D00C               	goto	u26780
 10753                           
 10754                           ; BSR set to: 1
 10755  001DF4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10756  001DF6  A4D8               	btfss	status,2,c
 10757  001DF8  D06F               	goto	l22350
 10758                           
 10759                           ; BSR set to: 1
 10760  001DFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10761  001DFC  B4D8               	btfsc	status,2,c
 10762  001DFE  D003               	goto	u26770
 10763                           
 10764                           ; BSR set to: 1
 10765  001E00  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10766  001E02  A4D8               	btfss	status,2,c
 10767  001E04  D069               	goto	l22350
 10768  001E06                     u26770:
 10769                           
 10770                           ; BSR set to: 1
 10771  001E06  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10772  001E08  A4D8               	btfss	status,2,c
 10773  001E0A  D066               	goto	l22350
 10774  001E0C                     u26780:
 10775                           
 10776                           ; BSR set to: 1
 10777                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10778  001E0C  0E01               	movlw	1
 10779  001E0E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10780                           
 10781                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10782  001E10  0E00               	movlw	0
 10783  001E12  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10784                           
 10785                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10786  001E14  0E00               	movlw	0
 10787  001E16  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10788                           
 10789                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10790  001E18  0E00               	movlw	0
 10791  001E1A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10792                           
 10793                           ; BSR set to: 1
 10794                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10795  001E1C  0EB2               	movlw	low _controlLearning_stateMachine
 10796  001E1E  6E12               	movwf	sm_send_event@psm^0,c
 10797  001E20  0E02               	movlw	high _controlLearning_stateMachine
 10798  001E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10799  001E24  0E00               	movlw	0
 10800  001E26  6E15               	movwf	(sm_send_event@event+1)^0,c
 10801  001E28  0E0A               	movlw	10
 10802  001E2A  6E14               	movwf	sm_send_event@event^0,c
 10803  001E2C  EC18  F042         	call	_sm_send_event	;wreg free
 10804                           
 10805                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10806  001E30  0EE2               	movlw	low _controlGate_stateMachine
 10807  001E32  6E12               	movwf	sm_send_event@psm^0,c
 10808  001E34  0E01               	movlw	high _controlGate_stateMachine
 10809  001E36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10810  001E38  0E00               	movlw	0
 10811  001E3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10812  001E3C  0E13               	movlw	19
 10813  001E3E  6E14               	movwf	sm_send_event@event^0,c
 10814  001E40  EC18  F042         	call	_sm_send_event	;wreg free
 10815                           
 10816                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10817  001E44  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10818  001E48  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10819  001E4C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10820  001E50  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10821                           
 10822                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10823  001E54  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10824  001E58  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10825  001E5C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10826  001E60  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10827                           
 10828                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10829  001E64  0101               	movlb	1	; () banked
 10830  001E66  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10831  001E68  A4D8               	btfss	status,2,c
 10832  001E6A  D005               	goto	l22328
 10833                           
 10834                           ; BSR set to: 1
 10835                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10836  001E6C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10837                           
 10838                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10839  001E70  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10840                           
 10841                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10842  001E74  D005               	goto	l22330
 10843  001E76                     l22328:
 10844                           
 10845                           ; BSR set to: 1
 10846                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10847  001E76  0E04               	movlw	4
 10848  001E78  0100               	movlb	0	; () banked
 10849  001E7A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10850                           
 10851                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10852  001E7C  0E04               	movlw	4
 10853  001E7E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10854  001E80                     l22330:
 10855                           
 10856                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10857  001E80  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10858  001E84  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10859                           
 10860                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10861  001E88  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10862  001E8C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10863                           
 10864                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10865  001E90  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10866  001E94  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10867  001E98  0100               	movlb	0	; () banked
 10868  001E9A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10869  001E9C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10870                           
 10871                           ; BSR set to: 0
 10872                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10873  001E9E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10874  001EA2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10875  001EA6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10876  001EA8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10880  001EAA  0E00               	movlw	0
 10881  001EAC  EC20  F046         	call	_SaveNVM_VarSystem
 10882                           
 10883                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10884  001EB0  0E03               	movlw	3
 10885  001EB2  EC20  F046         	call	_SaveNVM_VarSystem
 10886                           
 10887                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10888  001EB6  0E02               	movlw	2
 10889  001EB8  EC20  F046         	call	_SaveNVM_VarSystem
 10890                           
 10891                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10892  001EBC  0E00               	movlw	0
 10893  001EBE  0101               	movlb	1	; () banked
 10894  001EC0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10895                           
 10896                           ; BSR set to: 1
 10897                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10898  001EC2  0E00               	movlw	0
 10899  001EC4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10900  001EC6  0E00               	movlw	0
 10901  001EC8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10902  001ECA  0E00               	movlw	0
 10903  001ECC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10904  001ECE  0E00               	movlw	0
 10905  001ED0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10906                           
 10907                           ; BSR set to: 1
 10908                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10909  001ED2  0E00               	movlw	0
 10910  001ED4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10911                           
 10912                           ;sm_ControlLearning_MC50.c: 369:             }
 10913  001ED6  0012               	return	
 10914  001ED8                     l22350:
 10915                           
 10916                           ; BSR set to: 1
 10917  001ED8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10918  001EDA  B4D8               	btfsc	status,2,c
 10919  001EDC  D643               	goto	u26440
 10920                           
 10921                           ; BSR set to: 1
 10922  001EDE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10923  001EE0  B4D8               	btfsc	status,2,c
 10924  001EE2  D003               	goto	u26820
 10925                           
 10926                           ; BSR set to: 1
 10927  001EE4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10928  001EE6  A4D8               	btfss	status,2,c
 10929  001EE8  D003               	goto	l22362
 10930  001EEA                     u26820:
 10931                           
 10932                           ; BSR set to: 1
 10933  001EEA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10934  001EEC  B4D8               	btfsc	status,2,c
 10935  001EEE  D73F               	goto	u26690
 10936  001EF0                     l22362:
 10937                           
 10938                           ; BSR set to: 1
 10939  001EF0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10940  001EF2  A4D8               	btfss	status,2,c
 10941  001EF4  D008               	goto	l22368
 10942                           
 10943                           ; BSR set to: 1
 10944                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10945  001EF6  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10946  001EF8  0012               	return	
 10947  001EFA  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10948  001EFC  E103               	bnz	u26850
 10949  001EFE  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10950  001F00  A0D8               	btfss	status,0,c
 10951  001F02  0012               	return	
 10952  001F04                     u26850:
 10953  001F04  D6D8               	goto	u26570
 10954  001F06                     l22368:
 10955                           
 10956                           ; BSR set to: 1
 10957                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10958  001F06  0E01               	movlw	1
 10959  001F08  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10960                           
 10961                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10962  001F0A  0E00               	movlw	0
 10963  001F0C  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10964  001F0E  0E28               	movlw	40
 10965  001F10  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10966                           
 10967                           ; BSR set to: 1
 10968                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10969  001F12  BFDF               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10970  001F14  D005               	goto	u26860
 10971  001F16  51DF               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10972  001F18  E102               	bnz	u26861
 10973  001F1A  05DE               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10974  001F1C  B0D8               	btfsc	status,0,c
 10975  001F1E                     u26861:
 10976  001F1E  0012               	return	
 10977  001F20                     u26860:
 10978                           
 10979                           ; BSR set to: 1
 10980                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10981  001F20  BFCF               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10982  001F22  0012               	return	
 10983  001F24  51CF               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10984  001F26  E103               	bnz	u26870
 10985  001F28  05CE               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10986  001F2A  A0D8               	btfss	status,0,c
 10987  001F2C  0012               	return	
 10988  001F2E                     u26870:
 10989                           
 10990                           ; BSR set to: 1
 10991                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10992  001F2E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10993  001F32  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10994  001F36  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10995  001F38  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10996  001F3A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10997  001F3E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10998  001F42  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10999  001F44  6A17               	clrf	(calculateMean@newValue+3)^0,c
 11000  001F46  ECB8  F041         	call	_calculateMean	;wreg free
 11001  001F4A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 11002  001F4E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 11003  001F52  0012               	return	
 11004  001F54                     l22378:
 11005  001F54  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 11006  001F58  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 11007  001F5C  50DF               	movf	indf2,w,c
 11008  001F5E  0100               	movlb	0	; () banked
 11009  001F60  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 11010  001F62  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 11011                           
 11012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11013                           ; Switch size 1, requested type "simple"
 11014                           ; Number of cases is 1, Range of values is 0 to 0
 11015                           ; switch strategies available:
 11016                           ; Name         Instructions Cycles
 11017                           ; simple_byte            4     3 (average)
 11018                           ;	Chosen strategy is simple_byte
 11019  001F64  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 11020  001F66  0A00               	xorlw	0	; case 0
 11021  001F68  A4D8               	btfss	status,2,c
 11022  001F6A  0012               	return	
 11023                           
 11024                           ; BSR set to: 0
 11025                           ; Switch size 1, requested type "simple"
 11026                           ; Number of cases is 6, Range of values is 0 to 5
 11027                           ; switch strategies available:
 11028                           ; Name         Instructions Cycles
 11029                           ; simple_byte           19    10 (average)
 11030                           ;	Chosen strategy is simple_byte
 11031  001F6C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 11032  001F6E  0A00               	xorlw	0	; case 0
 11033  001F70  B4D8               	btfsc	status,2,c
 11034  001F72  D570               	goto	l22124
 11035  001F74  0A01               	xorlw	1	; case 1
 11036  001F76  B4D8               	btfsc	status,2,c
 11037  001F78  D5BB               	goto	l22148
 11038  001F7A  0A03               	xorlw	3	; case 2
 11039  001F7C  B4D8               	btfsc	status,2,c
 11040  001F7E  D5FA               	goto	l22182
 11041  001F80  0A01               	xorlw	1	; case 3
 11042  001F82  B4D8               	btfsc	status,2,c
 11043  001F84  D65A               	goto	l22216
 11044  001F86  0A07               	xorlw	7	; case 4
 11045  001F88  B4D8               	btfsc	status,2,c
 11046  001F8A  D6AA               	goto	l22248
 11047  001F8C  0A01               	xorlw	1	; case 5
 11048  001F8E  A4D8               	btfss	status,2,c
 11049  001F90  0012               	return	
 11050  001F92  D72C               	goto	l22304
 11051  001F94                     __end_of_sm_execute_ControlLearning:
 11052                           	callstack 0
 11053                           
 11054 ;; *************** function _generateErrorLearnig *****************
 11055 ;; Defined at:
 11056 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;		None
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;		None
 11061 ;; Return value:  Size  Location     Type
 11062 ;;                  1    wreg      void 
 11063 ;; Registers used:
 11064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11065 ;; Tracked objects:
 11066 ;;		On entry : 3E/1
 11067 ;;		On exit  : 0/0
 11068 ;;		Unchanged: 0/0
 11069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11074 ;;Total ram usage:        0 bytes
 11075 ;; Hardware stack levels used: 1
 11076 ;; Hardware stack levels required when called: 6
 11077 ;; This function calls:
 11078 ;;		_sm_init
 11079 ;; This function is called by:
 11080 ;;		_sm_execute_ControlLearning
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084                           	psect	text21
 11085  0082A2                     __ptext21:
 11086                           	callstack 0
 11087  0082A2                     _generateErrorLearnig:
 11088                           	callstack 22
 11089                           
 11090                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 11091                           
 11092                           ;incstack = 0
 11093  0082A2  0E00               	movlw	0
 11094  0082A4  0101               	movlb	1	; () banked
 11095  0082A6  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 11096                           
 11097                           ; BSR set to: 1
 11098                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 11099  0082A8  0EBD               	movlw	low _menuConfiguration_stateMachine
 11100  0082AA  6E12               	movwf	sm_init@psm^0,c
 11101  0082AC  0E02               	movlw	high _menuConfiguration_stateMachine
 11102  0082AE  6E13               	movwf	(sm_init@psm+1)^0,c
 11103  0082B0  0E00               	movlw	0
 11104  0082B2  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11105  0082B4  0E00               	movlw	0
 11106  0082B6  6E14               	movwf	sm_init@initial_state^0,c
 11107  0082B8  0E00               	movlw	0
 11108  0082BA  6E16               	movwf	sm_init@hist_mode^0,c
 11109  0082BC  ECFB  F042         	call	_sm_init	;wreg free
 11110                           
 11111                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 11112  0082C0  0EED               	movlw	low _main_stateMachine
 11113  0082C2  6E12               	movwf	sm_init@psm^0,c
 11114  0082C4  0E01               	movlw	high _main_stateMachine
 11115  0082C6  6E13               	movwf	(sm_init@psm+1)^0,c
 11116  0082C8  0E00               	movlw	0
 11117  0082CA  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11118  0082CC  0E00               	movlw	0
 11119  0082CE  6E14               	movwf	sm_init@initial_state^0,c
 11120  0082D0  0E00               	movlw	0
 11121  0082D2  6E16               	movwf	sm_init@hist_mode^0,c
 11122  0082D4  ECFB  F042         	call	_sm_init	;wreg free
 11123                           
 11124                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 11125  0082D8  0EE2               	movlw	low _controlGate_stateMachine
 11126  0082DA  6E12               	movwf	sm_init@psm^0,c
 11127  0082DC  0E01               	movlw	high _controlGate_stateMachine
 11128  0082DE  6E13               	movwf	(sm_init@psm+1)^0,c
 11129  0082E0  0E00               	movlw	0
 11130  0082E2  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11131  0082E4  0E00               	movlw	0
 11132  0082E6  6E14               	movwf	sm_init@initial_state^0,c
 11133  0082E8  0E00               	movlw	0
 11134  0082EA  6E16               	movwf	sm_init@hist_mode^0,c
 11135  0082EC  ECFB  F042         	call	_sm_init	;wreg free
 11136                           
 11137                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 11138  0082F0  0EB2               	movlw	low _controlLearning_stateMachine
 11139  0082F2  6E12               	movwf	sm_init@psm^0,c
 11140  0082F4  0E02               	movlw	high _controlLearning_stateMachine
 11141  0082F6  6E13               	movwf	(sm_init@psm+1)^0,c
 11142  0082F8  0E00               	movlw	0
 11143  0082FA  6E15               	movwf	(sm_init@initial_state+1)^0,c
 11144  0082FC  0E00               	movlw	0
 11145  0082FE  6E14               	movwf	sm_init@initial_state^0,c
 11146  008300  0E00               	movlw	0
 11147  008302  6E16               	movwf	sm_init@hist_mode^0,c
 11148  008304  ECFB  F042         	call	_sm_init	;wreg free
 11149  008308  0012               	return		;funcret
 11150  00830A                     __end_of_generateErrorLearnig:
 11151                           	callstack 0
 11152                           
 11153 ;; *************** function _sm_init *****************
 11154 ;; Defined at:
 11155 ;;		line 12 in file "sm_common_MC50.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;  psm             2   17[COMRAM] PTR struct .
 11158 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11159 ;;  initial_stat    2   19[COMRAM] int 
 11160 ;;  hist_mode       1   21[COMRAM] enum E348
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      void 
 11165 ;; Registers used:
 11166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/1
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11172 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11175 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11176 ;;Total ram usage:        5 bytes
 11177 ;; Hardware stack levels used: 1
 11178 ;; Hardware stack levels required when called: 5
 11179 ;; This function calls:
 11180 ;;		_sm_restart
 11181 ;; This function is called by:
 11182 ;;		_main
 11183 ;;		_generateErrorLearnig
 11184 ;; This function uses a non-reentrant model
 11185 ;;
 11186                           
 11187                           	psect	text22
 11188  0085F6                     __ptext22:
 11189                           	callstack 0
 11190  0085F6                     _sm_init:
 11191                           	callstack 25
 11192                           
 11193                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 11194                           
 11195                           ;incstack = 0
 11196  0085F6  EE20 F002          	lfsr	2,2
 11197  0085FA  5012               	movf	sm_init@psm^0,w,c
 11198  0085FC  26D9               	addwf	fsr2l,f,c
 11199  0085FE  5013               	movf	(sm_init@psm+1)^0,w,c
 11200  008600  22DA               	addwfc	fsr2h,f,c
 11201  008602  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11202  008606  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11203                           
 11204                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11205  00860A  EE20 F006          	lfsr	2,6
 11206  00860E  5012               	movf	sm_init@psm^0,w,c
 11207  008610  26D9               	addwf	fsr2l,f,c
 11208  008612  5013               	movf	(sm_init@psm+1)^0,w,c
 11209  008614  22DA               	addwfc	fsr2h,f,c
 11210  008616  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11211                           
 11212                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11213  00861A  C012  FFD9         	movff	sm_init@psm,fsr2l
 11214  00861E  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11215  008622  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11216  008626  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11217                           
 11218                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11219  00862A  EE20 F007          	lfsr	2,7
 11220  00862E  5012               	movf	sm_init@psm^0,w,c
 11221  008630  26D9               	addwf	fsr2l,f,c
 11222  008632  5013               	movf	(sm_init@psm+1)^0,w,c
 11223  008634  22DA               	addwfc	fsr2h,f,c
 11224  008636  0E00               	movlw	0
 11225  008638  6EDE               	movwf	postinc2,c
 11226  00863A  0E00               	movlw	0
 11227  00863C  6EDD               	movwf	postdec2,c
 11228                           
 11229                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11230  00863E  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11231  008642  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11232  008646  EC00  F045         	call	_sm_restart	;wreg free
 11233  00864A  0012               	return		;funcret
 11234  00864C                     __end_of_sm_init:
 11235                           	callstack 0
 11236                           
 11237 ;; *************** function _sm_restart *****************
 11238 ;; Defined at:
 11239 ;;		line 23 in file "sm_common_MC50.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;  psm             2   15[COMRAM] PTR struct .
 11242 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;		None
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  1    wreg      void 
 11247 ;; Registers used:
 11248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/1
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11258 ;;Total ram usage:        2 bytes
 11259 ;; Hardware stack levels used: 1
 11260 ;; Hardware stack levels required when called: 4
 11261 ;; This function calls:
 11262 ;;		Nothing
 11263 ;; This function is called by:
 11264 ;;		_sm_init
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           	psect	text23
 11269  008A00                     __ptext23:
 11270                           	callstack 0
 11271  008A00                     _sm_restart:
 11272                           	callstack 25
 11273                           
 11274                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11275                           
 11276                           ;incstack = 0
 11277  008A00  EE20 F006          	lfsr	2,6
 11278  008A04  5010               	movf	sm_restart@psm^0,w,c
 11279  008A06  26D9               	addwf	fsr2l,f,c
 11280  008A08  5011               	movf	(sm_restart@psm+1)^0,w,c
 11281  008A0A  22DA               	addwfc	fsr2h,f,c
 11282  008A0C  50DF               	movf	indf2,w,c
 11283  008A0E  A4D8               	btfss	status,2,c
 11284  008A10  D00E               	goto	l19748
 11285                           
 11286                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11287  008A12  EE20 F002          	lfsr	2,2
 11288  008A16  5010               	movf	sm_restart@psm^0,w,c
 11289  008A18  26D9               	addwf	fsr2l,f,c
 11290  008A1A  5011               	movf	(sm_restart@psm+1)^0,w,c
 11291  008A1C  22DA               	addwfc	fsr2h,f,c
 11292  008A1E  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11293  008A22  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11294  008A26  CFDE FFE6          	movff	postinc2,postinc1
 11295  008A2A  CFDD FFE5          	movff	postdec2,postdec1
 11296  008A2E                     l19748:
 11297                           
 11298                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11299  008A2E  EE20 F004          	lfsr	2,4
 11300  008A32  5010               	movf	sm_restart@psm^0,w,c
 11301  008A34  26D9               	addwf	fsr2l,f,c
 11302  008A36  5011               	movf	(sm_restart@psm+1)^0,w,c
 11303  008A38  22DA               	addwfc	fsr2h,f,c
 11304  008A3A  0E00               	movlw	0
 11305  008A3C  6EDE               	movwf	postinc2,c
 11306  008A3E  0E00               	movlw	0
 11307  008A40  6EDD               	movwf	postdec2,c
 11308  008A42  0012               	return		;funcret
 11309  008A44                     __end_of_sm_restart:
 11310                           	callstack 0
 11311                           
 11312 ;; *************** function _clearLearningValue *****************
 11313 ;; Defined at:
 11314 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11315 ;; Parameters:    Size  Location     Type
 11316 ;;		None
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;		None
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  1    wreg      void 
 11321 ;; Registers used:
 11322 ;;		wreg, status,2
 11323 ;; Tracked objects:
 11324 ;;		On entry : 3F/1
 11325 ;;		On exit  : 3F/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11332 ;;Total ram usage:        0 bytes
 11333 ;; Hardware stack levels used: 1
 11334 ;; Hardware stack levels required when called: 4
 11335 ;; This function calls:
 11336 ;;		Nothing
 11337 ;; This function is called by:
 11338 ;;		_sm_execute_ControlLearning
 11339 ;; This function uses a non-reentrant model
 11340 ;;
 11341                           
 11342                           	psect	text24
 11343  007DAA                     __ptext24:
 11344                           	callstack 0
 11345  007DAA                     _clearLearningValue:
 11346                           	callstack 24
 11347                           
 11348                           ; BSR set to: 1
 11349                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11350                           
 11351                           ;incstack = 0
 11352  007DAA  0E00               	movlw	0
 11353  007DAC  0100               	movlb	0	; () banked
 11354  007DAE  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11355  007DB0  0E00               	movlw	0
 11356  007DB2  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11357  007DB4  0E00               	movlw	0
 11358  007DB6  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11359  007DB8  0E00               	movlw	0
 11360  007DBA  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11361                           
 11362                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11363  007DBC  0E00               	movlw	0
 11364  007DBE  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11365  007DC0  0E00               	movlw	0
 11366  007DC2  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11367  007DC4  0E00               	movlw	0
 11368  007DC6  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11369  007DC8  0E00               	movlw	0
 11370  007DCA  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11371                           
 11372                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11373  007DCC  0E00               	movlw	0
 11374  007DCE  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11375                           
 11376                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11377  007DD0  0E00               	movlw	0
 11378  007DD2  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11379                           
 11380                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11381  007DD4  0E00               	movlw	0
 11382  007DD6  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11383  007DD8  0E00               	movlw	0
 11384  007DDA  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11385                           
 11386                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11387  007DDC  0E00               	movlw	0
 11388  007DDE  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11389  007DE0  0E00               	movlw	0
 11390  007DE2  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11391                           
 11392                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11393  007DE4  0E00               	movlw	0
 11394  007DE6  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11395  007DE8  0E00               	movlw	0
 11396  007DEA  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11397                           
 11398                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11399  007DEC  0E00               	movlw	0
 11400  007DEE  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11401  007DF0  0E00               	movlw	0
 11402  007DF2  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11403                           
 11404                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11405  007DF4  0E00               	movlw	0
 11406  007DF6  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11407  007DF8  0E00               	movlw	0
 11408  007DFA  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11409                           
 11410                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11411  007DFC  0E00               	movlw	0
 11412  007DFE  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11413  007E00  0E00               	movlw	0
 11414  007E02  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11415                           
 11416                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11417  007E04  0E00               	movlw	0
 11418  007E06  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11419  007E08  0E00               	movlw	0
 11420  007E0A  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11421  007E0C  0E00               	movlw	0
 11422  007E0E  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11423  007E10  0E00               	movlw	0
 11424  007E12  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11425                           
 11426                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11427  007E14  0E00               	movlw	0
 11428  007E16  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11429  007E18  0E00               	movlw	0
 11430  007E1A  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11431  007E1C  0E00               	movlw	0
 11432  007E1E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11433  007E20  0E00               	movlw	0
 11434  007E22  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11435                           
 11436                           ; BSR set to: 0
 11437  007E24  0012               	return		;funcret
 11438  007E26                     __end_of_clearLearningValue:
 11439                           	callstack 0
 11440                           
 11441 ;; *************** function _calculateMean *****************
 11442 ;; Defined at:
 11443 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  meanValue       4   15[COMRAM] unsigned long 
 11446 ;;  newValue        4   19[COMRAM] unsigned long 
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;		None
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  4   15[COMRAM] unsigned long 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2, status,0
 11453 ;; Tracked objects:
 11454 ;;		On entry : 3E/1
 11455 ;;		On exit  : 3E/0
 11456 ;;		Unchanged: 3E/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11458 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11460 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11461 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11462 ;;Total ram usage:       12 bytes
 11463 ;; Hardware stack levels used: 1
 11464 ;; Hardware stack levels required when called: 4
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_sm_execute_ControlLearning
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text25
 11473  008370                     __ptext25:
 11474                           	callstack 0
 11475  008370                     _calculateMean:
 11476                           	callstack 24
 11477                           
 11478                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;incstack = 0
 11482  008370  5010               	movf	calculateMean@meanValue^0,w,c
 11483  008372  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11484  008374  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11485  008376  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11486  008378  A4D8               	btfss	status,2,c
 11487  00837A  D009               	goto	l20708
 11488                           
 11489                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11490  00837C  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11491  008380  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11492  008384  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11493  008388  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11494                           
 11495                           ;sm_ControlLearning_MC50.c: 416:     }
 11496  00838C  D019               	goto	l20710
 11497  00838E                     l20708:
 11498                           
 11499                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11500  00838E  5014               	movf	calculateMean@newValue^0,w,c
 11501  008390  2410               	addwf	calculateMean@meanValue^0,w,c
 11502  008392  6E18               	movwf	??_calculateMean^0,c
 11503  008394  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11504  008396  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11505  008398  6E19               	movwf	(??_calculateMean+1)^0,c
 11506  00839A  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11507  00839C  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11508  00839E  6E1A               	movwf	(??_calculateMean+2)^0,c
 11509  0083A0  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11510  0083A2  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11511  0083A4  6E1B               	movwf	(??_calculateMean+3)^0,c
 11512  0083A6  90D8               	bcf	status,0,c
 11513  0083A8  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11514  0083AA  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11515  0083AC  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11516  0083AE  3218               	rrcf	??_calculateMean^0,f,c
 11517  0083B0  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11518  0083B4  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11519  0083B8  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11520  0083BC  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11521  0083C0                     l20710:
 11522                           
 11523                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11524  0083C0  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11525  0083C4  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11526  0083C8  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11527  0083CC  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11528  0083D0  0012               	return		;funcret
 11529  0083D2                     __end_of_calculateMean:
 11530                           	callstack 0
 11531                           
 11532 ;; *************** function _actionZone_Opening *****************
 11533 ;; Defined at:
 11534 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11539 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11540 ;;  securityClos    1   12[BANK0 ] enum E10397
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 3F/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11551 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11553 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11554 ;;Total ram usage:        3 bytes
 11555 ;; Hardware stack levels used: 1
 11556 ;; Hardware stack levels required when called: 8
 11557 ;; This function calls:
 11558 ;;		_CloseOrder
 11559 ;;		_GetOpenOrder
 11560 ;;		_GetSecurityStateInClosing
 11561 ;;		_GetSecurityStateInOpening
 11562 ;;		_InitFullAutoTime
 11563 ;;		_InitWalkAutoTime
 11564 ;;		_SetSegmentValueIntermitent
 11565 ;;		_StopOrder
 11566 ;;		_VerifyFollowMe
 11567 ;;		_controlVelocity
 11568 ;;		_setPositionInvertionInClosing
 11569 ;;		_setPositionInvertionInOpening
 11570 ;;		_sm_send_event
 11571 ;; This function is called by:
 11572 ;;		_sm_execute_ControlGate
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           	psect	text26
 11577  0047A2                     __ptext26:
 11578                           	callstack 0
 11579  0047A2                     _actionZone_Opening:
 11580                           	callstack 21
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11584                           
 11585                           ;incstack = 0
 11586  0047A2  EC67  F03A         	call	_GetSecurityStateInClosing	;wreg free
 11587  0047A6  0100               	movlb	0	; () banked
 11588  0047A8  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11589                           
 11590                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11591  0047AA  ECBA  F03A         	call	_GetSecurityStateInOpening	;wreg free
 11592  0047AE  0100               	movlb	0	; () banked
 11593  0047B0  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11597  0047B2  EC20  F02A         	call	_GetOpenOrder	;wreg free
 11598  0047B6  0100               	movlb	0	; () banked
 11599  0047B8  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11603  0047BA  EC31  F027         	call	_controlVelocity	;wreg free
 11604                           
 11605                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11606  0047BE  EC1A  F049         	call	_InitFullAutoTime	;wreg free
 11607                           
 11608                           ; BSR set to: 0
 11609                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11610  0047C2  0E00               	movlw	0
 11611  0047C4  0101               	movlb	1	; () banked
 11612  0047C6  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11613                           
 11614                           ; BSR set to: 1
 11615                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11616  0047C8  0100               	movlb	0	; () banked
 11617  0047CA  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11618  0047CC  EC72  F048         	call	_VerifyFollowMe
 11619                           
 11620                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11621  0047D0  0E03               	movlw	3
 11622  0047D2  0101               	movlb	1	; () banked
 11623  0047D4  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11624  0047D6  D00D               	goto	l21580
 11625                           
 11626                           ; BSR set to: 1
 11627                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11628  0047D8  0E00               	movlw	0
 11629  0047DA  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11630  0047DC                     l21578:
 11631                           
 11632                           ; BSR set to: 1
 11633                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11634  0047DC  0EE2               	movlw	low _controlGate_stateMachine
 11635  0047DE  6E12               	movwf	sm_send_event@psm^0,c
 11636  0047E0  0E01               	movlw	high _controlGate_stateMachine
 11637  0047E2  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11638  0047E4  0E00               	movlw	0
 11639  0047E6  6E15               	movwf	(sm_send_event@event+1)^0,c
 11640  0047E8  0E10               	movlw	16
 11641  0047EA  6E14               	movwf	sm_send_event@event^0,c
 11642  0047EC  EC18  F042         	call	_sm_send_event	;wreg free
 11643                           
 11644                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11645  0047F0  0012               	return	
 11646  0047F2                     l21580:
 11647                           
 11648                           ; BSR set to: 1
 11649  0047F2  0E02               	movlw	2
 11650  0047F4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11651  0047F6  A4D8               	btfss	status,2,c
 11652  0047F8  D013               	goto	l21594
 11653                           
 11654                           ; BSR set to: 1
 11655  0047FA  BFAB               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11656  0047FC  D005               	goto	u25060
 11657  0047FE  51AB               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11658  004800  E10F               	bnz	l21594
 11659  004802  05AA               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11660  004804  B0D8               	btfsc	status,0,c
 11661  004806  D00C               	goto	l21594
 11662  004808                     u25060:
 11663                           
 11664                           ; BSR set to: 1
 11665                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11666  004808  ECC3  F037         	call	_setPositionInvertionInOpening	;wreg free
 11667                           
 11668                           ; BSR set to: 1
 11669                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11670  00480C  ECC8  F048         	call	_StopOrder	;wreg free
 11671                           
 11672                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11673  004810  EC9F  F049         	call	_InitWalkAutoTime	;wreg free
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11677  004814  0E01               	movlw	1
 11678  004816  0101               	movlb	1	; () banked
 11679  004818  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11680                           
 11681                           ; BSR set to: 1
 11682                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11683  00481A  0E01               	movlw	1
 11684  00481C  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 11685                           
 11686                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11687  00481E  0012               	return	
 11688  004820                     l21594:
 11689                           
 11690                           ; BSR set to: 1
 11691  004820  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11692  004822  B4D8               	btfsc	status,2,c
 11693  004824  D010               	goto	u25110
 11694                           
 11695                           ; BSR set to: 1
 11696  004826  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11697  004828  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11698  00482A  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11699  00482C  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11700  00482E  A4D8               	btfss	status,2,c
 11701  004830  D02F               	goto	l21614
 11702                           
 11703                           ; BSR set to: 1
 11704  004832  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11705  004834  A4D8               	btfss	status,2,c
 11706  004836  D02C               	goto	l21614
 11707                           
 11708                           ; BSR set to: 1
 11709  004838  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11710  00483A  A4D8               	btfss	status,2,c
 11711  00483C  D029               	goto	l21614
 11712                           
 11713                           ; BSR set to: 1
 11714  00483E  0E02               	movlw	2
 11715  004840  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11716  004842  A4D8               	btfss	status,2,c
 11717  004844  D025               	goto	l21614
 11718  004846                     u25110:
 11719                           
 11720                           ; BSR set to: 1
 11721                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11722  004846  0E04               	movlw	4
 11723  004848  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11724                           
 11725                           ; BSR set to: 1
 11726                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11727  00484A  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11728  00484E  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11729  004852  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11730  004856  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11731                           
 11732                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11733  00485A  0E00               	movlw	0
 11734  00485C  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11735                           
 11736                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11737  00485E  0E00               	movlw	0
 11738  004860  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11739                           
 11740                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11741  004862  0E01               	movlw	1
 11742  004864  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11743                           
 11744                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11745  004866  0E00               	movlw	0
 11746  004868  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11747                           
 11748                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11749  00486A  0E00               	movlw	0
 11750  00486C  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11751  00486E  0E28               	movlw	40
 11752  004870  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11753                           
 11754                           ; BSR set to: 1
 11755                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11756  004872  0E00               	movlw	0
 11757  004874  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11758  004876  0E00               	movlw	0
 11759  004878  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11760  00487A  0E04               	movlw	4
 11761  00487C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11762  00487E  0E0F               	movlw	15
 11763  004880  ECB7  F046         	call	_SetSegmentValueIntermitent
 11764                           
 11765                           ; BSR set to: 1
 11766                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11767  004884  ECC8  F048         	call	_StopOrder	;wreg free
 11768                           
 11769                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11770  004888  0E01               	movlw	1
 11771  00488A  0101               	movlb	1	; () banked
 11772  00488C  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11773                           
 11774                           ;sm_ControlGate_MC50.c: 419:     }
 11775  00488E  0012               	return	
 11776  004890                     l21614:
 11777                           
 11778                           ; BSR set to: 1
 11779  004890  0100               	movlb	0	; () banked
 11780  004892  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11781  004894  B4D8               	btfsc	status,2,c
 11782  004896  D012               	goto	u25150
 11783                           
 11784                           ; BSR set to: 0
 11785  004898  0101               	movlb	1	; () banked
 11786  00489A  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11787  00489C  D025               	goto	l21634
 11788  00489E  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11789  0048A0  E103               	bnz	u25130
 11790  0048A2  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11791  0048A4  A0D8               	btfss	status,0,c
 11792  0048A6  D020               	goto	l21634
 11793  0048A8                     u25130:
 11794                           
 11795                           ; BSR set to: 1
 11796  0048A8  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11797  0048AA  A4D8               	btfss	status,2,c
 11798  0048AC  D01D               	goto	l21634
 11799                           
 11800                           ; BSR set to: 1
 11801  0048AE  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11802  0048B0  D005               	goto	u25150
 11803  0048B2  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11804  0048B4  E119               	bnz	l21634
 11805  0048B6  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11806  0048B8  B0D8               	btfsc	status,0,c
 11807  0048BA  D016               	goto	l21634
 11808  0048BC                     u25150:
 11809  0048BC  0101               	movlb	1	; () banked
 11810  0048BE  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11811  0048C0  A4D8               	btfss	status,2,c
 11812  0048C2  D012               	goto	l21634
 11813                           
 11814                           ; BSR set to: 1
 11815                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11816  0048C4  0100               	movlb	0	; () banked
 11817  0048C6  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11818  0048C8  B4D8               	btfsc	status,2,c
 11819  0048CA  D002               	goto	l21628
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11823  0048CC  0101               	movlb	1	; () banked
 11824  0048CE  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11825  0048D0                     l21628:
 11826                           
 11827                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11828  0048D0  0E01               	movlw	1
 11829  0048D2  0101               	movlb	1	; () banked
 11830  0048D4  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11831                           
 11832                           ; BSR set to: 1
 11833                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11834  0048D6  0E00               	movlw	0
 11835  0048D8  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11836  0048DA  0E0A               	movlw	10
 11837  0048DC  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11838                           
 11839                           ; BSR set to: 1
 11840                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11841  0048DE  0E00               	movlw	0
 11842  0048E0  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11843  0048E2  0E1E               	movlw	30
 11844  0048E4  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11845                           
 11846                           ;sm_ControlGate_MC50.c: 430:     }
 11847  0048E6  0012               	return	
 11848  0048E8                     l21634:
 11849                           
 11850                           ; BSR set to: 1
 11851  0048E8  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11852  0048EA  D02D               	goto	l21664
 11853  0048EC  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11854  0048EE  E103               	bnz	u25180
 11855  0048F0  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11856  0048F2  A0D8               	btfss	status,0,c
 11857  0048F4  D028               	goto	l21664
 11858  0048F6                     u25180:
 11859                           
 11860                           ; BSR set to: 1
 11861  0048F6  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11862  0048F8  A4D8               	btfss	status,2,c
 11863  0048FA  D025               	goto	l21664
 11864                           
 11865                           ; BSR set to: 1
 11866                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11867  0048FC  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11868  0048FE  A4D8               	btfss	status,2,c
 11869  004900  D005               	goto	l21646
 11870                           
 11871                           ; BSR set to: 1
 11872                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11873  004902  0E00               	movlw	0
 11874  004904  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11875                           
 11876                           ; BSR set to: 1
 11877                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11878  004906  EC1C  F033         	call	_setPositionInvertionInClosing	;wreg free
 11879  00490A  D768               	goto	l21578
 11880  00490C                     l21646:
 11881                           
 11882                           ; BSR set to: 1
 11883  00490C  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11884  00490E  D005               	goto	u25210
 11885  004910  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11886  004912  E116               	bnz	l21662
 11887  004914  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11888  004916  B0D8               	btfsc	status,0,c
 11889  004918  D013               	goto	l21662
 11890  00491A                     u25210:
 11891                           
 11892                           ; BSR set to: 1
 11893                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11894  00491A  EC13  F048         	call	_CloseOrder	;wreg free
 11895                           
 11896                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11897  00491E  ECC3  F037         	call	_setPositionInvertionInOpening	;wreg free
 11898                           
 11899                           ; BSR set to: 1
 11900                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11901  004922  0E00               	movlw	0
 11902  004924  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11903                           
 11904                           ; BSR set to: 1
 11905                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11906  004926  0E01               	movlw	1
 11907  004928  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11908                           
 11909                           ; BSR set to: 1
 11910                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11911  00492A  0E00               	movlw	0
 11912  00492C  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11913  00492E  0E14               	movlw	20
 11914  004930  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11915                           
 11916                           ; BSR set to: 1
 11917                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11918  004932  0E00               	movlw	0
 11919  004934  6FCD               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11920  004936  0E28               	movlw	40
 11921  004938  6FCC               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11922                           
 11923                           ; BSR set to: 1
 11924                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11925  00493A  0E01               	movlw	1
 11926  00493C  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11927                           
 11928                           ;sm_ControlGate_MC50.c: 449:         } else
 11929  00493E  0012               	return	
 11930  004940                     l21662:
 11931                           
 11932                           ; BSR set to: 1
 11933                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11934  004940  0E00               	movlw	0
 11935  004942  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11936  004944  0012               	return	
 11937  004946                     l21664:
 11938                           
 11939                           ; BSR set to: 1
 11940  004946  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11941  004948  A4D8               	btfss	status,2,c
 11942  00494A  D00A               	goto	l21684
 11943                           
 11944                           ; BSR set to: 1
 11945                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11946  00494C  0E00               	movlw	0
 11947  00494E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11948                           
 11949                           ; BSR set to: 1
 11950                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11951  004950  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11952  004952  D7E3               	goto	u25210
 11953  004954  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11954  004956  E14E               	bnz	l2718
 11955  004958  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11956  00495A  B0D8               	btfsc	status,0,c
 11957  00495C  0012               	return	
 11958  00495E  D7DD               	goto	u25210
 11959  004960                     l21684:
 11960                           
 11961                           ; BSR set to: 1
 11962  004960  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11963  004962  A4D8               	btfss	status,2,c
 11964  004964  D018               	goto	l21702
 11965                           
 11966                           ; BSR set to: 1
 11967  004966  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11968  004968  D005               	goto	u25250
 11969  00496A  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11970  00496C  E114               	bnz	l21702
 11971  00496E  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11972  004970  B0D8               	btfsc	status,0,c
 11973  004972  D011               	goto	l21702
 11974  004974                     u25250:
 11975                           
 11976                           ; BSR set to: 1
 11977                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11978  004974  0E02               	movlw	2
 11979  004976  0100               	movlb	0	; () banked
 11980  004978  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11981  00497A  B4D8               	btfsc	status,2,c
 11982  00497C  D007               	goto	l21698
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11986  00497E  0101               	movlb	1	; () banked
 11987  004980  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11988                           
 11989                           ; BSR set to: 1
 11990                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11991  004982  0E00               	movlw	0
 11992  004984  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11993                           
 11994                           ; BSR set to: 1
 11995                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11996  004986  ECC3  F037         	call	_setPositionInvertionInOpening	;wreg free
 11997  00498A  D728               	goto	l21578
 11998  00498C                     l21698:
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 12002  00498C  ECC3  F037         	call	_setPositionInvertionInOpening	;wreg free
 12003  004990                     l21700:
 12004                           
 12005                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 12006  004990  ECC8  F048         	call	_StopOrder	;wreg free
 12007  004994  0012               	return	
 12008  004996                     l21702:
 12009                           
 12010                           ; BSR set to: 1
 12011  004996  0100               	movlb	0	; () banked
 12012  004998  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 12013  00499A  A4D8               	btfss	status,2,c
 12014  00499C  D005               	goto	l21708
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 12018  00499E  0E03               	movlw	3
 12019  0049A0  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12020  0049A2  B4D8               	btfsc	status,2,c
 12021  0049A4  0012               	return	
 12022  0049A6  D7F4               	goto	l21700
 12023  0049A8                     l21708:
 12024                           
 12025                           ; BSR set to: 0
 12026  0049A8  0E02               	movlw	2
 12027  0049AA  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12028  0049AC  A4D8               	btfss	status,2,c
 12029  0049AE  D011               	goto	l21720
 12030                           
 12031                           ; BSR set to: 0
 12032  0049B0  0E02               	movlw	2
 12033  0049B2  0101               	movlb	1	; () banked
 12034  0049B4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12035  0049B6  A4D8               	btfss	status,2,c
 12036  0049B8  D00C               	goto	l21720
 12037                           
 12038                           ; BSR set to: 1
 12039  0049BA  0E02               	movlw	2
 12040  0049BC  0100               	movlb	0	; () banked
 12041  0049BE  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12042  0049C0  B4D8               	btfsc	status,2,c
 12043  0049C2  D007               	goto	l21720
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 12047  0049C4  ECC3  F037         	call	_setPositionInvertionInOpening	;wreg free
 12048                           
 12049                           ; BSR set to: 1
 12050                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 12051  0049C8  ECC8  F048         	call	_StopOrder	;wreg free
 12052                           
 12053                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 12054  0049CC  EC9F  F049         	call	_InitWalkAutoTime	;wreg free
 12055                           
 12056                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 12057  0049D0  0012               	return	
 12058  0049D2                     l21720:
 12059  0049D2  0100               	movlb	0	; () banked
 12060  0049D4  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12061  0049D6  B4D8               	btfsc	status,2,c
 12062  0049D8  D008               	goto	u25340
 12063                           
 12064                           ; BSR set to: 0
 12065  0049DA  0E03               	movlw	3
 12066  0049DC  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12067  0049DE  B4D8               	btfsc	status,2,c
 12068  0049E0  D004               	goto	u25340
 12069                           
 12070                           ; BSR set to: 0
 12071  0049E2  0E04               	movlw	4
 12072  0049E4  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 12073  0049E6  A4D8               	btfss	status,2,c
 12074  0049E8  0012               	return	
 12075  0049EA                     u25340:
 12076                           
 12077                           ; BSR set to: 0
 12078  0049EA  0E02               	movlw	2
 12079  0049EC  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 12080  0049EE  B4D8               	btfsc	status,2,c
 12081  0049F0  0012               	return	
 12082  0049F2  D7CC               	goto	l21698
 12083  0049F4                     l2718:
 12084  0049F4  0012               	return		;funcret
 12085  0049F6                     __end_of_actionZone_Opening:
 12086                           	callstack 0
 12087                           
 12088 ;; *************** function _setPositionInvertionInOpening *****************
 12089 ;; Defined at:
 12090 ;;		line 894 in file "sm_ControlGate_MC50.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;		None
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;		None
 12095 ;; Return value:  Size  Location     Type
 12096 ;;                  1    wreg      void 
 12097 ;; Registers used:
 12098 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12099 ;; Tracked objects:
 12100 ;;		On entry : 3E/1
 12101 ;;		On exit  : 3F/1
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12106 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12107 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12108 ;;Total ram usage:        8 bytes
 12109 ;; Hardware stack levels used: 1
 12110 ;; Hardware stack levels required when called: 6
 12111 ;; This function calls:
 12112 ;;		_getTimeDecelaration
 12113 ;; This function is called by:
 12114 ;;		_actionZone_Opening
 12115 ;; This function uses a non-reentrant model
 12116 ;;
 12117                           
 12118                           	psect	text27
 12119  006F86                     __ptext27:
 12120                           	callstack 0
 12121  006F86                     _setPositionInvertionInOpening:
 12122                           	callstack 22
 12123                           
 12124                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 12125                           
 12126                           ;incstack = 0
 12127  006F86  0E02               	movlw	2
 12128  006F88  0100               	movlb	0	; () banked
 12129  006F8A  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 12130  006F8C  B4D8               	btfsc	status,2,c
 12131  006F8E  D009               	goto	l20660
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 12135  006F90  0EFE               	movlw	254
 12136  006F92  0101               	movlb	1	; () banked
 12137  006F94  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12138  006F96  0EFF               	movlw	255
 12139  006F98  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12140  006F9A  0EFF               	movlw	255
 12141  006F9C  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12142  006F9E  0EFF               	movlw	255
 12143  006FA0  D006               	goto	L69
 12144  006FA2                     l20660:
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 12148  006FA2  0E01               	movlw	1
 12149  006FA4  0101               	movlb	1	; () banked
 12150  006FA6  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 12151  006FA8  0E00               	movlw	0
 12152  006FAA  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 12153  006FAC  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 12154  006FAE                     L69:
 12155  006FAE  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 12156                           
 12157                           ; BSR set to: 1
 12158                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 12159  006FB0  0E03               	movlw	3
 12160  006FB2  EC4F  F037         	call	_getTimeDecelaration
 12161  006FB6  5029               	movf	?_getTimeDecelaration^0,w,c
 12162  006FB8  0101               	movlb	1	; () banked
 12163  006FBA  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12164  006FBC  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12165  006FBE  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12166  006FC0  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12167  006FC2  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12168  006FC4  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12169  006FC6  0A80               	xorlw	128
 12170  006FC8  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12171  006FCA  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12172  006FCC  0A80               	xorlw	128
 12173  006FCE  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12174  006FD0  B0D8               	btfsc	status,0,c
 12175  006FD2  D004               	goto	l20666
 12176                           
 12177                           ; BSR set to: 1
 12178                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 12179  006FD4  0E03               	movlw	3
 12180  006FD6  EC4F  F037         	call	_getTimeDecelaration
 12181  006FDA  D015               	goto	L70
 12182  006FDC                     l20666:
 12183                           
 12184                           ; BSR set to: 1
 12185  006FDC  0E01               	movlw	1
 12186  006FDE  EC4F  F037         	call	_getTimeDecelaration
 12187  006FE2  0101               	movlb	1	; () banked
 12188  006FE4  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12189  006FE6  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12190  006FE8  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12191  006FEA  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12192  006FEC  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12193  006FEE  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12194  006FF0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12195  006FF2  0A80               	xorlw	128
 12196  006FF4  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12197  006FF6  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12198  006FF8  0A80               	xorlw	128
 12199  006FFA  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12200  006FFC  B0D8               	btfsc	status,0,c
 12201  006FFE  D00B               	goto	l20670
 12202                           
 12203                           ; BSR set to: 1
 12204                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12205  007000  0E01               	movlw	1
 12206  007002  EC4F  F037         	call	_getTimeDecelaration
 12207  007006                     L70:
 12208  007006  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12209  00700A  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12210  00700E  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12211  007012  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12212  007016                     l20670:
 12213                           
 12214                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12215  007016  0100               	movlb	0	; () banked
 12216  007018  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12217  00701A  0D0A               	mullw	10
 12218  00701C  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12219  007020  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12220  007024  0E00               	movlw	0
 12221  007026  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12222  007028  0EFF               	movlw	255
 12223  00702A  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12224  00702C  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12225  00702E  0101               	movlb	1	; () banked
 12226  007030  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12227  007032  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12228  007034  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12229  007036  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12230  007038  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12231  00703A  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12232  00703C  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12233  00703E  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12234  007040  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12235  007042  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12236  007044  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12237  007046  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12238  007048  0EC8               	movlw	200
 12239  00704A  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12240  00704C  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12241  00704E  0E00               	movlw	0
 12242  007050  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12243  007052  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12244  007054  0E00               	movlw	0
 12245  007056  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12246  007058  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12247  00705A  0E00               	movlw	0
 12248  00705C  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12249  00705E  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12250                           
 12251                           ; BSR set to: 1
 12252  007060  0012               	return		;funcret
 12253  007062                     __end_of_setPositionInvertionInOpening:
 12254                           	callstack 0
 12255                           
 12256 ;; *************** function _controlVelocity *****************
 12257 ;; Defined at:
 12258 ;;		line 527 in file "outputs_MC50.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;		None
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;		None
 12263 ;; Return value:  Size  Location     Type
 12264 ;;                  1    wreg      void 
 12265 ;; Registers used:
 12266 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12267 ;; Tracked objects:
 12268 ;;		On entry : 3E/1
 12269 ;;		On exit  : 3E/0
 12270 ;;		Unchanged: 0/0
 12271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12275 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12276 ;;Total ram usage:        1 bytes
 12277 ;; Hardware stack levels used: 1
 12278 ;; Hardware stack levels required when called: 7
 12279 ;; This function calls:
 12280 ;;		_ControlDecelarationFactor
 12281 ;;		_InitSoftStop
 12282 ;;		_getStateOpenPosition
 12283 ;;		_getTimeDecelaration
 12284 ;; This function is called by:
 12285 ;;		_main
 12286 ;;		_actionZone_Opening
 12287 ;; This function uses a non-reentrant model
 12288 ;;
 12289                           
 12290                           	psect	text28
 12291  004E62                     __ptext28:
 12292                           	callstack 0
 12293  004E62                     _controlVelocity:
 12294                           	callstack 21
 12295                           
 12296                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12297                           
 12298                           ; BSR set to: 1
 12299                           ;incstack = 0
 12300  004E62  0101               	movlb	1	; () banked
 12301  004E64  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12302  004E66  A4D8               	btfss	status,2,c
 12303  004E68  D017               	goto	l20472
 12304                           
 12305                           ; BSR set to: 1
 12306  004E6A  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12307  004E6C  A4D8               	btfss	status,2,c
 12308  004E6E  D014               	goto	l20472
 12309                           
 12310                           ; BSR set to: 1
 12311                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12312  004E70  517B               	movf	_powerControl_st& (0+255),w,b
 12313  004E72  A4D8               	btfss	status,2,c
 12314  004E74  D008               	goto	l20466
 12315                           
 12316                           ; BSR set to: 1
 12317                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12318  004E76  0E00               	movlw	0
 12319  004E78  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12320  004E7A  0E0A               	movlw	10
 12321  004E7C  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12322                           
 12323                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12324  004E7E  0E00               	movlw	0
 12325  004E80  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12326  004E82  0E14               	movlw	20
 12327  004E84  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12328  004E86                     l20466:
 12329                           
 12330                           ; BSR set to: 1
 12331                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12332  004E86  EC41  F049         	call	_ControlDecelarationFactor	;wreg free
 12333                           
 12334                           ; BSR set to: 1
 12335                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12336  004E8A  0E01               	movlw	1
 12337  004E8C  6F7B               	movwf	_powerControl_st& (0+255),b
 12338                           
 12339                           ; BSR set to: 1
 12340                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12341  004E8E  0E00               	movlw	0
 12342  004E90  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12343  004E92  0E00               	movlw	0
 12344  004E94  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12345                           
 12346                           ;outputs_MC50.c: 541:     }
 12347  004E96  0012               	return	
 12348  004E98                     l20472:
 12349                           
 12350                           ; BSR set to: 1
 12351  004E98  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12352  004E9A  B4D8               	btfsc	status,2,c
 12353  004E9C  D003               	goto	u23600
 12354                           
 12355                           ; BSR set to: 1
 12356  004E9E  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12357  004EA0  A4D8               	btfss	status,2,c
 12358  004EA2  D007               	goto	l20478
 12359  004EA4                     u23600:
 12360                           
 12361                           ; BSR set to: 1
 12362                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12363  004EA4  0E00               	movlw	0
 12364  004EA6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12365  004EA8  0E00               	movlw	0
 12366  004EAA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12367                           
 12368                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12369  004EAC  0E00               	movlw	0
 12370  004EAE  6F7B               	movwf	_powerControl_st& (0+255),b
 12371                           
 12372                           ;outputs_MC50.c: 547:     }
 12373  004EB0  0012               	return	
 12374  004EB2                     l20478:
 12375                           
 12376                           ; BSR set to: 1
 12377  004EB2  0E03               	movlw	3
 12378  004EB4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12379  004EB6  A4D8               	btfss	status,2,c
 12380  004EB8  D068               	goto	l20526
 12381                           
 12382                           ; BSR set to: 1
 12383  004EBA  0E03               	movlw	3
 12384  004EBC  EC4F  F037         	call	_getTimeDecelaration
 12385  004EC0  5029               	movf	?_getTimeDecelaration^0,w,c
 12386  004EC2  0101               	movlb	1	; () banked
 12387  004EC4  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12388  004EC6  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12389  004EC8  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12390  004ECA  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12391  004ECC  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12392  004ECE  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12393  004ED0  0A80               	xorlw	128
 12394  004ED2  0100               	movlb	0	; () banked
 12395  004ED4  6FDA               	movwf	??_controlVelocity& (0+255),b
 12396  004ED6  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12397  004ED8  0A80               	xorlw	128
 12398  004EDA  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12399  004EDC  A0D8               	btfss	status,0,c
 12400  004EDE  D004               	goto	u23630
 12401                           
 12402                           ; BSR set to: 0
 12403  004EE0  0101               	movlb	1	; () banked
 12404  004EE2  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12405  004EE4  A4D8               	btfss	status,2,c
 12406  004EE6  D051               	goto	l20526
 12407  004EE8                     u23630:
 12408  004EE8  0100               	movlb	0	; () banked
 12409  004EEA  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12410  004EEC  B4D8               	btfsc	status,2,c
 12411  004EEE  D004               	goto	u23650
 12412                           
 12413                           ; BSR set to: 0
 12414  004EF0  0101               	movlb	1	; () banked
 12415  004EF2  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12416  004EF4  B4D8               	btfsc	status,2,c
 12417  004EF6  D00C               	goto	u23670
 12418  004EF8                     u23650:
 12419  004EF8  0101               	movlb	1	; () banked
 12420  004EFA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12421  004EFC  D005               	goto	u23660
 12422  004EFE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12423  004F00  E144               	bnz	l20526
 12424  004F02  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12425  004F04  B0D8               	btfsc	status,0,c
 12426  004F06  D041               	goto	l20526
 12427  004F08                     u23660:
 12428                           
 12429                           ; BSR set to: 1
 12430  004F08  0100               	movlb	0	; () banked
 12431  004F0A  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12432  004F0C  B4D8               	btfsc	status,2,c
 12433  004F0E  D03D               	goto	l20526
 12434  004F10                     u23670:
 12435                           
 12436                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12437  004F10  0101               	movlb	1	; () banked
 12438  004F12  517B               	movf	_powerControl_st& (0+255),w,b
 12439  004F14  A4D8               	btfss	status,2,c
 12440  004F16  D022               	goto	l20512
 12441                           
 12442                           ; BSR set to: 1
 12443  004F18  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12444  004F1A  A4D8               	btfss	status,2,c
 12445  004F1C  D01F               	goto	l20512
 12446                           
 12447                           ; BSR set to: 1
 12448                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12449  004F1E  0E00               	movlw	0
 12450  004F20  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12451  004F22  0E14               	movlw	20
 12452  004F24  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12453                           
 12454                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12455  004F26  0100               	movlb	0	; () banked
 12456  004F28  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12457  004F2A  B4D8               	btfsc	status,2,c
 12458  004F2C  D008               	goto	l20502
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12462  004F2E  0E00               	movlw	0
 12463  004F30  0101               	movlb	1	; () banked
 12464  004F32  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12465                           
 12466                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12467  004F34  0E01               	movlw	1
 12468  004F36  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12469                           
 12470                           ; BSR set to: 1
 12471                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12472  004F38  EC94  F044         	call	_InitSoftStop	;wreg free
 12473                           
 12474                           ;outputs_MC50.c: 563:                     }
 12475  004F3C  D00F               	goto	l20512
 12476  004F3E                     l20502:
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12480  004F3E  0E00               	movlw	0
 12481  004F40  0101               	movlb	1	; () banked
 12482  004F42  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12483  004F44  0E0A               	movlw	10
 12484  004F46  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12485                           
 12486                           ; BSR set to: 1
 12487                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12488  004F48  EC41  F049         	call	_ControlDecelarationFactor	;wreg free
 12489                           
 12490                           ; BSR set to: 1
 12491                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12492  004F4C  0E01               	movlw	1
 12493  004F4E  6F7B               	movwf	_powerControl_st& (0+255),b
 12494                           
 12495                           ; BSR set to: 1
 12496                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12497  004F50  0E00               	movlw	0
 12498  004F52  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12499  004F54  0E00               	movlw	0
 12500  004F56  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12501                           
 12502                           ; BSR set to: 1
 12503                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12504  004F58  0E00               	movlw	0
 12505  004F5A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12506  004F5C                     l20512:
 12507                           
 12508                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12509  004F5C  0101               	movlb	1	; () banked
 12510  004F5E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12511  004F60  D005               	goto	u23710
 12512  004F62  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12513  004F64  E102               	bnz	u23711
 12514  004F66  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12515  004F68  B0D8               	btfsc	status,0,c
 12516  004F6A                     u23711:
 12517  004F6A  0012               	return	
 12518  004F6C                     u23710:
 12519                           
 12520                           ; BSR set to: 1
 12521  004F6C  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12522  004F6E  A4D8               	btfss	status,2,c
 12523  004F70  0012               	return	
 12524                           
 12525                           ; BSR set to: 1
 12526  004F72  0100               	movlb	0	; () banked
 12527  004F74  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12528  004F76  B4D8               	btfsc	status,2,c
 12529  004F78  0012               	return	
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12533  004F7A  0E00               	movlw	0
 12534  004F7C  0101               	movlb	1	; () banked
 12535  004F7E  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12536  004F80  0E02               	movlw	2
 12537  004F82  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12538                           
 12539                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12540  004F84  0E00               	movlw	0
 12541  004F86  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12542  004F88  D77E               	goto	l20466
 12543  004F8A                     l20526:
 12544  004F8A  0101               	movlb	1	; () banked
 12545  004F8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12546  004F8E  EC42  F034         	call	_getStateOpenPosition
 12547  004F92  06E8               	decf	wreg,f,c
 12548  004F94  A4D8               	btfss	status,2,c
 12549  004F96  D042               	goto	l20568
 12550                           
 12551                           ; BSR set to: 0
 12552  004F98  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12553  004F9A  B4D8               	btfsc	status,2,c
 12554  004F9C  D004               	goto	u23760
 12555                           
 12556                           ; BSR set to: 0
 12557  004F9E  0101               	movlb	1	; () banked
 12558  004FA0  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12559  004FA2  B4D8               	btfsc	status,2,c
 12560  004FA4  D00C               	goto	u23780
 12561  004FA6                     u23760:
 12562  004FA6  0101               	movlb	1	; () banked
 12563  004FA8  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12564  004FAA  D005               	goto	u23770
 12565  004FAC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12566  004FAE  E136               	bnz	l20568
 12567  004FB0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12568  004FB2  B0D8               	btfsc	status,0,c
 12569  004FB4  D033               	goto	l20568
 12570  004FB6                     u23770:
 12571                           
 12572                           ; BSR set to: 1
 12573  004FB6  0100               	movlb	0	; () banked
 12574  004FB8  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12575  004FBA  B4D8               	btfsc	status,2,c
 12576  004FBC  D02F               	goto	l20568
 12577  004FBE                     u23780:
 12578                           
 12579                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12580  004FBE  0101               	movlb	1	; () banked
 12581  004FC0  517B               	movf	_powerControl_st& (0+255),w,b
 12582  004FC2  A4D8               	btfss	status,2,c
 12583  004FC4  D022               	goto	l20554
 12584                           
 12585                           ; BSR set to: 1
 12586  004FC6  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12587  004FC8  A4D8               	btfss	status,2,c
 12588  004FCA  D01F               	goto	l20554
 12589                           
 12590                           ; BSR set to: 1
 12591                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12592  004FCC  0E00               	movlw	0
 12593  004FCE  6FC9               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12594  004FD0  0E14               	movlw	20
 12595  004FD2  6FC8               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12596                           
 12597                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12598  004FD4  0100               	movlb	0	; () banked
 12599  004FD6  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12600  004FD8  B4D8               	btfsc	status,2,c
 12601  004FDA  D008               	goto	l20546
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12605  004FDC  0E00               	movlw	0
 12606  004FDE  0101               	movlb	1	; () banked
 12607  004FE0  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12608                           
 12609                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12610  004FE2  0E01               	movlw	1
 12611  004FE4  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12612                           
 12613                           ; BSR set to: 1
 12614                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12615  004FE6  EC94  F044         	call	_InitSoftStop	;wreg free
 12616                           
 12617                           ;outputs_MC50.c: 598:             }else{
 12618  004FEA  D00F               	goto	l20554
 12619  004FEC                     l20546:
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12623  004FEC  0E00               	movlw	0
 12624  004FEE  0101               	movlb	1	; () banked
 12625  004FF0  6FC7               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12626  004FF2  0E0A               	movlw	10
 12627  004FF4  6FC6               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12628                           
 12629                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12630  004FF6  0E00               	movlw	0
 12631  004FF8  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12632                           
 12633                           ; BSR set to: 1
 12634                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12635  004FFA  EC41  F049         	call	_ControlDecelarationFactor	;wreg free
 12636                           
 12637                           ; BSR set to: 1
 12638                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12639  004FFE  0E01               	movlw	1
 12640  005000  6F7B               	movwf	_powerControl_st& (0+255),b
 12641                           
 12642                           ; BSR set to: 1
 12643                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12644  005002  0E00               	movlw	0
 12645  005004  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12646  005006  0E00               	movlw	0
 12647  005008  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12648  00500A                     l20554:
 12649                           
 12650                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12651  00500A  0101               	movlb	1	; () banked
 12652  00500C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12653  00500E  D7AE               	goto	u23710
 12654  005010  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12655  005012  E135               	bnz	l2306
 12656  005014  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12657  005016  B0D8               	btfsc	status,0,c
 12658  005018  0012               	return	
 12659  00501A  D7A8               	goto	u23710
 12660  00501C                     l20568:
 12661  00501C  0101               	movlb	1	; () banked
 12662  00501E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12663  005020  D012               	goto	l20576
 12664  005022  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12665  005024  E103               	bnz	u23850
 12666  005026  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12667  005028  A0D8               	btfss	status,0,c
 12668  00502A  D00D               	goto	l20576
 12669  00502C                     u23850:
 12670                           
 12671                           ; BSR set to: 1
 12672  00502C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12673  00502E  B4D8               	btfsc	status,2,c
 12674  005030  D00A               	goto	l20576
 12675                           
 12676                           ; BSR set to: 1
 12677                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12678  005032  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12679  005034  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12680  005036  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12681  005038  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12682  00503A  A0D8               	btfss	status,0,c
 12683  00503C  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12684  00503E  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12685  005040                     l20574:
 12686                           
 12687                           ; BSR set to: 1
 12688                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12689  005040  0E00               	movlw	0
 12690  005042  6F7B               	movwf	_powerControl_st& (0+255),b
 12691                           
 12692                           ;outputs_MC50.c: 623:     }
 12693  005044  0012               	return	
 12694  005046                     l20576:
 12695                           
 12696                           ; BSR set to: 1
 12697  005046  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12698  005048  D010               	goto	l20584
 12699  00504A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12700  00504C  E103               	bnz	u23870
 12701  00504E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12702  005050  A0D8               	btfss	status,0,c
 12703  005052  D00B               	goto	l20584
 12704  005054                     u23870:
 12705                           
 12706                           ; BSR set to: 1
 12707  005054  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12708  005056  B4D8               	btfsc	status,2,c
 12709  005058  D008               	goto	l20584
 12710                           
 12711                           ; BSR set to: 1
 12712                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12713  00505A  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12714  00505C  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12715  00505E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12716  005060  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12717  005062  A0D8               	btfss	status,0,c
 12718  005064  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12719  005066  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12720  005068  D7EB               	goto	l20574
 12721  00506A                     l20584:
 12722                           
 12723                           ; BSR set to: 1
 12724                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12725  00506A  0E00               	movlw	0
 12726  00506C  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12727  00506E  0E00               	movlw	0
 12728  005070  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12729                           
 12730                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12731  005072  0E00               	movlw	0
 12732  005074  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12733  005076  0E00               	movlw	0
 12734  005078  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12735                           
 12736                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12737  00507A  0E00               	movlw	0
 12738  00507C  6F7B               	movwf	_powerControl_st& (0+255),b
 12739  00507E                     l2306:
 12740  00507E  0012               	return		;funcret
 12741  005080                     __end_of_controlVelocity:
 12742                           	callstack 0
 12743                           
 12744 ;; *************** function _getStateOpenPosition *****************
 12745 ;; Defined at:
 12746 ;;		line 470 in file "outputs_MC50.c"
 12747 ;; Parameters:    Size  Location     Type
 12748 ;;  stateMotor      1    wreg     enum E10381
 12749 ;; Auto vars:     Size  Location     Type
 12750 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12751 ;;  state           1    0[BANK0 ] _Bool 
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  1    wreg      _Bool 
 12754 ;; Registers used:
 12755 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12756 ;; Tracked objects:
 12757 ;;		On entry : 3F/1
 12758 ;;		On exit  : 3F/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12762 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12763 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12764 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12765 ;;Total ram usage:       11 bytes
 12766 ;; Hardware stack levels used: 1
 12767 ;; Hardware stack levels required when called: 6
 12768 ;; This function calls:
 12769 ;;		___lmul
 12770 ;;		_getTimeDecelaration
 12771 ;; This function is called by:
 12772 ;;		_controlVelocity
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           	psect	text29
 12777  006884                     __ptext29:
 12778                           	callstack 0
 12779  006884                     _getStateOpenPosition:
 12780                           	callstack 21
 12781                           
 12782                           ;incstack = 0
 12783                           ;getStateOpenPosition@stateMotor stored from wreg
 12784  006884  0100               	movlb	0	; () banked
 12785  006886  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12786                           
 12787                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12788  006888  0E00               	movlw	0
 12789  00688A  0100               	movlb	0	; () banked
 12790  00688C  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12791                           
 12792                           ; BSR set to: 0
 12793                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12794  00688E  0101               	movlb	1	; () banked
 12795  006890  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12796  006892  A4D8               	btfss	status,2,c
 12797  006894  D002               	goto	l19952
 12798  006896                     u22850:
 12799                           
 12800                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12801  006896  0E01               	movlw	1
 12802  006898  D046               	goto	L71
 12803  00689A                     l19952:
 12804                           
 12805                           ; BSR set to: 1
 12806  00689A  0100               	movlb	0	; () banked
 12807  00689C  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12808  00689E  0D14               	mullw	20
 12809  0068A0  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12810  0068A4  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12811  0068A8  0E00               	movlw	0
 12812  0068AA  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12813  0068AC  0EFF               	movlw	255
 12814  0068AE  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12815  0068B0  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12816  0068B2  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12817  0068B4  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12818  0068B6  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12819  0068B8  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12820  0068BA  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12821  0068BC  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12822  0068BE  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12823  0068C0  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12824  0068C2  B0D8               	btfsc	status,0,c
 12825  0068C4  D033               	goto	l19966
 12826                           
 12827                           ; BSR set to: 0
 12828  0068C6  0E02               	movlw	2
 12829  0068C8  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12830  0068CA  A4D8               	btfss	status,2,c
 12831  0068CC  D02F               	goto	l19966
 12832                           
 12833                           ; BSR set to: 0
 12834                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12835  0068CE  90D8               	bcf	status,0,c
 12836  0068D0  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12837  0068D2  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12838  0068D4  D001               	goto	l19960
 12839  0068D6  D7DF               	goto	u22850
 12840  0068D8                     l19960:
 12841                           
 12842                           ; BSR set to: 0
 12843  0068D8  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12844  0068DA  0D14               	mullw	20
 12845  0068DC  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12846  0068E0  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12847  0068E4  0E00               	movlw	0
 12848  0068E6  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12849  0068E8  0EFF               	movlw	255
 12850  0068EA  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12851  0068EC  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12852  0068EE  0ED8               	movlw	216
 12853  0068F0  2432               	addwf	??_getStateOpenPosition^0,w,c
 12854  0068F2  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12855  0068F4  0EFF               	movlw	255
 12856  0068F6  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12857  0068F8  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12858  0068FA  0EFF               	movlw	255
 12859  0068FC  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12860  0068FE  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12861  006900  0EFF               	movlw	255
 12862  006902  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12863  006904  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12864  006906  0101               	movlb	1	; () banked
 12865  006908  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12866  00690A  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12867  00690C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12868  00690E  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12869  006910  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12870  006912  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12871  006914  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12872  006916  0A80               	xorlw	128
 12873  006918  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12874  00691A  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12875  00691C  0A80               	xorlw	128
 12876  00691E  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12877  006920  A0D8               	btfss	status,0,c
 12878  006922  D7B9               	goto	u22850
 12879                           
 12880                           ; BSR set to: 1
 12881                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12882  006924  0E00               	movlw	0
 12883  006926                     L71:
 12884  006926  0100               	movlb	0	; () banked
 12885  006928  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12886  00692A  D032               	goto	l2249
 12887  00692C                     l19966:
 12888                           
 12889                           ; BSR set to: 0
 12890  00692C  0E02               	movlw	2
 12891  00692E  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12892  006930  B4D8               	btfsc	status,2,c
 12893  006932  D003               	goto	u22910
 12894                           
 12895                           ; BSR set to: 0
 12896  006934  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12897  006936  A4D8               	btfss	status,2,c
 12898  006938  D02B               	goto	l2249
 12899  00693A                     u22910:
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12903  00693A  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12904  00693C  6E1D               	movwf	___lmul@multiplier^0,c
 12905  00693E  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12906  006940  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12907  006942  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12908  006944  0E0A               	movlw	10
 12909  006946  6E21               	movwf	___lmul@multiplicand^0,c
 12910  006948  0E00               	movlw	0
 12911  00694A  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12912  00694C  0E00               	movlw	0
 12913  00694E  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12914  006950  0E00               	movlw	0
 12915  006952  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12916  006954  EC26  F043         	call	___lmul	;wreg free
 12917  006958  501D               	movf	?___lmul^0,w,c
 12918  00695A  0100               	movlb	0	; () banked
 12919  00695C  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12920  00695E  501E               	movf	(?___lmul+1)^0,w,c
 12921  006960  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12922  006962  501F               	movf	(?___lmul+2)^0,w,c
 12923  006964  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12924  006966  5020               	movf	(?___lmul+3)^0,w,c
 12925  006968  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12926  00696A  A0D8               	btfss	status,0,c
 12927  00696C  D794               	goto	u22850
 12928                           
 12929                           ; BSR set to: 0
 12930  00696E  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12931  006970  EC4F  F037         	call	_getTimeDecelaration
 12932  006974  0101               	movlb	1	; () banked
 12933  006976  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12934  006978  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12935  00697A  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12936  00697C  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12937  00697E  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12938  006980  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12939  006982  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12940  006984  0A80               	xorlw	128
 12941  006986  6E32               	movwf	??_getStateOpenPosition^0,c
 12942  006988  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12943  00698A  0A80               	xorlw	128
 12944  00698C  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12945  00698E  D7C8               	goto	L72
 12946  006990                     l2249:
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;outputs_MC50.c: 507:     return state;
 12950  006990  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12951                           
 12952                           ; BSR set to: 0
 12953  006992  0012               	return		;funcret
 12954  006994                     __end_of_getStateOpenPosition:
 12955                           	callstack 0
 12956                           
 12957 ;; *************** function _InitSoftStop *****************
 12958 ;; Defined at:
 12959 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;		None
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;		None
 12964 ;; Return value:  Size  Location     Type
 12965 ;;                  1    wreg      void 
 12966 ;; Registers used:
 12967 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12968 ;; Tracked objects:
 12969 ;;		On entry : 3F/1
 12970 ;;		On exit  : 3E/0
 12971 ;;		Unchanged: 0/0
 12972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12975 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12976 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12977 ;;Total ram usage:        1 bytes
 12978 ;; Hardware stack levels used: 1
 12979 ;; Hardware stack levels required when called: 5
 12980 ;; This function calls:
 12981 ;;		_GetMotorPower
 12982 ;; This function is called by:
 12983 ;;		_controlVelocity
 12984 ;; This function uses a non-reentrant model
 12985 ;;
 12986                           
 12987                           	psect	text30
 12988  008928                     __ptext30:
 12989                           	callstack 0
 12990  008928                     _InitSoftStop:
 12991                           	callstack 22
 12992                           
 12993                           ; BSR set to: 1
 12994                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;incstack = 0
 12998  008928  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12999  00892A  B4D8               	btfsc	status,2,c
 13000  00892C  D003               	goto	u22950
 13001                           
 13002                           ; BSR set to: 1
 13003  00892E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13004  008930  A4D8               	btfss	status,2,c
 13005  008932  0012               	return	
 13006  008934                     u22950:
 13007                           
 13008                           ; BSR set to: 1
 13009  008934  0100               	movlb	0	; () banked
 13010  008936  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13011  008938  B4D8               	btfsc	status,2,c
 13012  00893A  0012               	return	
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 13016  00893C  0E00               	movlw	0
 13017  00893E  0101               	movlb	1	; () banked
 13018  008940  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 13019  008942  0E00               	movlw	0
 13020  008944  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 13021                           
 13022                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 13023  008946  0E00               	movlw	0
 13024  008948  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 13025  00894A  0E00               	movlw	0
 13026  00894C  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13027                           
 13028                           ; BSR set to: 1
 13029                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 13030  00894E  EC97  F038         	call	_GetMotorPower	;wreg free
 13031  008952  6E14               	movwf	??_InitSoftStop^0,c
 13032  008954  5014               	movf	??_InitSoftStop^0,w,c
 13033  008956  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 13034  008958  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 13035                           
 13036                           ; BSR set to: 1
 13037                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 13038  00895A  0E01               	movlw	1
 13039  00895C  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 13040  00895E  6FB2               	movwf	(_ts_system+24)& (0+255),b	;volatile
 13041  008960  0E00               	movlw	0
 13042  008962  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 13043  008964  6FB3               	movwf	(_ts_system+25)& (0+255),b	;volatile
 13044                           
 13045                           ; BSR set to: 1
 13046                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 13047  008966  0100               	movlb	0	; () banked
 13048  008968  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 13049  00896A  080A               	sublw	10
 13050  00896C  0101               	movlb	1	; () banked
 13051  00896E  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 13052  008970  0012               	return		;funcret
 13053  008972                     __end_of_InitSoftStop:
 13054                           	callstack 0
 13055                           
 13056 ;; *************** function _ControlDecelarationFactor *****************
 13057 ;; Defined at:
 13058 ;;		line 463 in file "outputs_MC50.c"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;		None
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;		None
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  1    wreg      void 
 13065 ;; Registers used:
 13066 ;;		wreg, status,2, status,0, prodl, prodh
 13067 ;; Tracked objects:
 13068 ;;		On entry : 3E/1
 13069 ;;		On exit  : 3F/1
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13076 ;;Total ram usage:        0 bytes
 13077 ;; Hardware stack levels used: 1
 13078 ;; Hardware stack levels required when called: 4
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		_controlVelocity
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086                           	psect	text31
 13087  009282                     __ptext31:
 13088                           	callstack 0
 13089  009282                     _ControlDecelarationFactor:
 13090                           	callstack 23
 13091                           
 13092                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 13093                           
 13094                           ;incstack = 0
 13095  009282  0E01               	movlw	1
 13096  009284  0101               	movlb	1	; () banked
 13097  009286  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 13098                           
 13099                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 13100  009288  0E02               	movlw	2
 13101  00928A  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 13102                           
 13103                           ; BSR set to: 1
 13104                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 13105  00928C  0100               	movlb	0	; () banked
 13106  00928E  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 13107  009290  0101               	movlb	1	; () banked
 13108  009292  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 13109  009294  CFF3 F17E          	movff	prodl,_powerControl_st+3
 13110                           
 13111                           ; BSR set to: 1
 13112  009298  0012               	return		;funcret
 13113  00929A                     __end_of_ControlDecelarationFactor:
 13114                           	callstack 0
 13115                           
 13116 ;; *************** function _actionZone_Opened *****************
 13117 ;; Defined at:
 13118 ;;		line 514 in file "sm_ControlGate_MC50.c"
 13119 ;; Parameters:    Size  Location     Type
 13120 ;;		None
 13121 ;; Auto vars:     Size  Location     Type
 13122 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 13123 ;;  securityClos    1   31[COMRAM] enum E10397
 13124 ;; Return value:  Size  Location     Type
 13125 ;;                  1    wreg      void 
 13126 ;; Registers used:
 13127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13128 ;; Tracked objects:
 13129 ;;		On entry : 3F/0
 13130 ;;		On exit  : 3E/0
 13131 ;;		Unchanged: 0/0
 13132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13137 ;;Total ram usage:        2 bytes
 13138 ;; Hardware stack levels used: 1
 13139 ;; Hardware stack levels required when called: 7
 13140 ;; This function calls:
 13141 ;;		_CloseOrder
 13142 ;;		_GetOpenOrder
 13143 ;;		_GetSecurityStateInClosing
 13144 ;;		_InitFullAutoTime
 13145 ;;		_InitWalkAutoTime
 13146 ;;		_OpenFullOrder
 13147 ;;		_OpenWalkOrder
 13148 ;;		_VerifyFollowMe
 13149 ;; This function is called by:
 13150 ;;		_sm_execute_ControlGate
 13151 ;; This function uses a non-reentrant model
 13152 ;;
 13153                           
 13154                           	psect	text32
 13155  005080                     __ptext32:
 13156                           	callstack 0
 13157  005080                     _actionZone_Opened:
 13158                           	callstack 22
 13159                           
 13160                           ; BSR set to: 0
 13161                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13162                           
 13163                           ; BSR set to: 1
 13164                           ;incstack = 0
 13165  005080  EC67  F03A         	call	_GetSecurityStateInClosing	;wreg free
 13166  005084  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 13167                           
 13168                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 13169  005086  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13170  005088  B4D8               	btfsc	status,2,c
 13171  00508A  D007               	goto	l21740
 13172  00508C  0101               	movlb	1	; () banked
 13173  00508E  518D               	movf	_Abertura_pedonal& (0+255),w,b
 13174  005090  A4D8               	btfss	status,2,c
 13175  005092  D003               	goto	l21740
 13176                           
 13177                           ; BSR set to: 1
 13178                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 13179  005094  EC1A  F049         	call	_InitFullAutoTime	;wreg free
 13180                           
 13181                           ;sm_ControlGate_MC50.c: 519:     }
 13182  005098  D008               	goto	l2722
 13183  00509A                     l21740:
 13184  00509A  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13185  00509C  B4D8               	btfsc	status,2,c
 13186  00509E  D005               	goto	l2722
 13187  0050A0  0101               	movlb	1	; () banked
 13188  0050A2  058D               	decf	_Abertura_pedonal& (0+255),w,b
 13189  0050A4  B4D8               	btfsc	status,2,c
 13190                           
 13191                           ; BSR set to: 1
 13192                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 13193  0050A6  EC9F  F049         	call	_InitWalkAutoTime	;wreg free
 13194  0050AA                     l2722:
 13195                           
 13196                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13197  0050AA  EC20  F02A         	call	_GetOpenOrder	;wreg free
 13198  0050AE  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13199                           
 13200                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13201  0050B0  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13202  0050B2  EC72  F048         	call	_VerifyFollowMe
 13203                           
 13204                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13205  0050B6  B28E               	btfsc	142,1,c	;volatile
 13206  0050B8  D013               	goto	l2724
 13207  0050BA  0100               	movlb	0	; () banked
 13208  0050BC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13209  0050BE  B4D8               	btfsc	status,2,c
 13210  0050C0  D00F               	goto	l2724
 13211                           
 13212                           ; BSR set to: 0
 13213  0050C2  0101               	movlb	1	; () banked
 13214  0050C4  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13215  0050C6  B4D8               	btfsc	status,2,c
 13216  0050C8  D00B               	goto	l2724
 13217                           
 13218                           ; BSR set to: 1
 13219  0050CA  0E35               	movlw	53
 13220  0050CC  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13221  0050CE  B4D8               	btfsc	status,2,c
 13222  0050D0  D007               	goto	l2724
 13223                           
 13224                           ; BSR set to: 1
 13225  0050D2  0E02               	movlw	2
 13226  0050D4  0100               	movlb	0	; () banked
 13227  0050D6  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13228  0050D8  A4D8               	btfss	status,2,c
 13229  0050DA  D002               	goto	l2724
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13233  0050DC  0E00               	movlw	0
 13234  0050DE  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13235  0050E0                     l2724:
 13236                           
 13237                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13238  0050E0  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13239  0050E2  B4D8               	btfsc	status,2,c
 13240  0050E4  D05D               	goto	l2725
 13241                           
 13242                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13243  0050E6  0E00               	movlw	0
 13244  0050E8  0101               	movlb	1	; () banked
 13245  0050EA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13246  0050EC  0E3C               	movlw	60
 13247  0050EE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13248                           
 13249                           ; BSR set to: 1
 13250                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13251  0050F0  0E02               	movlw	2
 13252  0050F2  0100               	movlb	0	; () banked
 13253  0050F4  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13254  0050F6  A4D8               	btfss	status,2,c
 13255  0050F8  D00D               	goto	l21772
 13256                           
 13257                           ; BSR set to: 0
 13258  0050FA  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13259  0050FC  A4D8               	btfss	status,2,c
 13260  0050FE  D00A               	goto	l21772
 13261                           
 13262                           ; BSR set to: 0
 13263  005100  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13264  005102  B4D8               	btfsc	status,2,c
 13265  005104  D004               	goto	u25490
 13266                           
 13267                           ; BSR set to: 0
 13268  005106  0E04               	movlw	4
 13269  005108  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13270  00510A  A4D8               	btfss	status,2,c
 13271  00510C  D003               	goto	l21772
 13272  00510E                     u25490:
 13273                           
 13274                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13275  00510E  EC13  F048         	call	_CloseOrder	;wreg free
 13276                           
 13277                           ;sm_ControlGate_MC50.c: 546:         }
 13278  005112  0012               	return	
 13279  005114                     l21772:
 13280                           
 13281                           ; BSR set to: 0
 13282  005114  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13283  005116  B4D8               	btfsc	status,2,c
 13284  005118  D014               	goto	l21786
 13285                           
 13286                           ; BSR set to: 0
 13287                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13288  00511A  0E03               	movlw	3
 13289  00511C  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13290  00511E  A4D8               	btfss	status,2,c
 13291  005120  D00B               	goto	l21782
 13292                           
 13293                           ; BSR set to: 0
 13294  005122  0101               	movlb	1	; () banked
 13295  005124  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13296  005126  A4D8               	btfss	status,2,c
 13297  005128  D007               	goto	l21782
 13298                           
 13299                           ; BSR set to: 1
 13300  00512A  0E04               	movlw	4
 13301  00512C  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13302  00512E  B4D8               	btfsc	status,2,c
 13303  005130  D003               	goto	l21782
 13304  005132                     u25530:
 13305                           
 13306                           ; BSR set to: 1
 13307                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13308  005132  EC26  F048         	call	_OpenFullOrder	;wreg free
 13309                           
 13310                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13311  005136  0012               	return	
 13312  005138                     l21782:
 13313  005138  0E04               	movlw	4
 13314  00513A  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13315  00513C  A4D8               	btfss	status,2,c
 13316  00513E  0012               	return	
 13317  005140  D7E6               	goto	u25490
 13318  005142                     l21786:
 13319                           
 13320                           ; BSR set to: 0
 13321  005142  0E03               	movlw	3
 13322  005144  0101               	movlb	1	; () banked
 13323  005146  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13324  005148  A4D8               	btfss	status,2,c
 13325  00514A  D009               	goto	l21794
 13326                           
 13327                           ; BSR set to: 1
 13328  00514C  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13329  00514E  A4D8               	btfss	status,2,c
 13330  005150  D006               	goto	l21794
 13331  005152                     u25560:
 13332                           
 13333                           ; BSR set to: 1
 13334                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13335  005152  EC26  F048         	call	_OpenFullOrder	;wreg free
 13336  005156                     l21792:
 13337                           
 13338                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13339  005156  0E00               	movlw	0
 13340  005158  0101               	movlb	1	; () banked
 13341  00515A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13342                           
 13343                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13344  00515C  0012               	return	
 13345  00515E                     l21794:
 13346                           
 13347                           ; BSR set to: 1
 13348  00515E  0E03               	movlw	3
 13349  005160  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13350  005162  A4D8               	btfss	status,2,c
 13351  005164  D007               	goto	l21802
 13352                           
 13353                           ; BSR set to: 1
 13354  005166  0E02               	movlw	2
 13355  005168  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13356  00516A  A4D8               	btfss	status,2,c
 13357  00516C  D003               	goto	l21802
 13358                           
 13359                           ; BSR set to: 1
 13360                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13361  00516E  ECAD  F040         	call	_OpenWalkOrder	;wreg free
 13362  005172  D7F1               	goto	l21792
 13363  005174                     l21802:
 13364                           
 13365                           ; BSR set to: 1
 13366  005174  0E03               	movlw	3
 13367  005176  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13368  005178  A4D8               	btfss	status,2,c
 13369  00517A  D005               	goto	l21812
 13370                           
 13371                           ; BSR set to: 1
 13372                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13373  00517C  0E04               	movlw	4
 13374  00517E  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13375  005180  B4D8               	btfsc	status,2,c
 13376  005182  0012               	return	
 13377  005184  D7E6               	goto	u25560
 13378  005186                     l21812:
 13379                           
 13380                           ; BSR set to: 1
 13381  005186  0100               	movlb	0	; () banked
 13382  005188  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13383  00518A  B4D8               	btfsc	status,2,c
 13384  00518C  D007               	goto	l21818
 13385                           
 13386                           ; BSR set to: 0
 13387  00518E  0E02               	movlw	2
 13388  005190  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13389  005192  A4D8               	btfss	status,2,c
 13390  005194  D003               	goto	l21818
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13394  005196  EC1A  F049         	call	_InitFullAutoTime	;wreg free
 13395                           
 13396                           ;sm_ControlGate_MC50.c: 586:         }
 13397  00519A  0012               	return	
 13398  00519C                     l21818:
 13399                           
 13400                           ; BSR set to: 0
 13401  00519C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13402  00519E  D7CE               	goto	L73
 13403  0051A0                     l2725:
 13404  0051A0  B28E               	btfsc	142,1,c	;volatile
 13405  0051A2  D00B               	goto	l21826
 13406  0051A4  0100               	movlb	0	; () banked
 13407  0051A6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13408  0051A8  B4D8               	btfsc	status,2,c
 13409  0051AA  D007               	goto	l21826
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13413  0051AC  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13414  0051AE  0D14               	mullw	20
 13415  0051B0  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13416  0051B4  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13417                           
 13418                           ;sm_ControlGate_MC50.c: 599:     }
 13419  0051B8  0012               	return	
 13420  0051BA                     l21826:
 13421  0051BA  0101               	movlb	1	; () banked
 13422  0051BC  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13423  0051BE  A4D8               	btfss	status,2,c
 13424  0051C0  D00F               	goto	l21836
 13425                           
 13426                           ; BSR set to: 1
 13427  0051C2  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13428  0051C4  A4D8               	btfss	status,2,c
 13429  0051C6  D00C               	goto	l21836
 13430                           
 13431                           ; BSR set to: 1
 13432                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13433  0051C8  0E00               	movlw	0
 13434  0051CA  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13435                           
 13436                           ; BSR set to: 1
 13437                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13438  0051CC  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13439                           
 13440                           ; BSR set to: 1
 13441                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13442  0051D0  0100               	movlb	0	; () banked
 13443  0051D2  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13444  0051D4  0D14               	mullw	20
 13445  0051D6  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 13446  0051DA  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 13447                           
 13448                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13449  0051DE  0012               	return	
 13450  0051E0                     l21836:
 13451                           
 13452                           ; BSR set to: 1
 13453  0051E0  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13454  0051E2  D005               	goto	u25680
 13455  0051E4  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13456  0051E6  E113               	bnz	l21848
 13457  0051E8  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13458  0051EA  B0D8               	btfsc	status,0,c
 13459  0051EC  D010               	goto	l21848
 13460  0051EE                     u25680:
 13461                           
 13462                           ; BSR set to: 1
 13463  0051EE  0100               	movlb	0	; () banked
 13464  0051F0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13465  0051F2  A4D8               	btfss	status,2,c
 13466  0051F4  D00C               	goto	l21848
 13467                           
 13468                           ; BSR set to: 0
 13469  0051F6  0101               	movlb	1	; () banked
 13470  0051F8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13471  0051FA  A4D8               	btfss	status,2,c
 13472  0051FC  D008               	goto	l21848
 13473                           
 13474                           ; BSR set to: 1
 13475  0051FE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13476  005200  B4D8               	btfsc	status,2,c
 13477  005202  D005               	goto	l21848
 13478                           
 13479                           ; BSR set to: 1
 13480                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13481  005204  0E00               	movlw	0
 13482  005206  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13483                           
 13484                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13485  005208  0E00               	movlw	0
 13486  00520A  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13487  00520C  D780               	goto	u25490
 13488  00520E                     l21848:
 13489  00520E  0101               	movlb	1	; () banked
 13490  005210  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13491  005212  D005               	goto	u25720
 13492  005214  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13493  005216  E119               	bnz	l21866
 13494  005218  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13495  00521A  B0D8               	btfsc	status,0,c
 13496  00521C  D016               	goto	l21866
 13497  00521E                     u25720:
 13498                           
 13499                           ; BSR set to: 1
 13500  00521E  0100               	movlb	0	; () banked
 13501  005220  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13502  005222  B4D8               	btfsc	status,2,c
 13503  005224  D012               	goto	l21866
 13504                           
 13505                           ; BSR set to: 0
 13506  005226  0101               	movlb	1	; () banked
 13507  005228  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13508  00522A  B4D8               	btfsc	status,2,c
 13509  00522C  D00E               	goto	l21866
 13510                           
 13511                           ; BSR set to: 1
 13512                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13513  00522E  0E00               	movlw	0
 13514  005230  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13515                           
 13516                           ; BSR set to: 1
 13517                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13518  005232  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13519  005234  A4D8               	btfss	status,2,c
 13520  005236  D003               	goto	l21862
 13521                           
 13522                           ; BSR set to: 1
 13523                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13524  005238  0E00               	movlw	0
 13525  00523A  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13526  00523C  D77A               	goto	u25530
 13527  00523E                     l21862:
 13528                           
 13529                           ; BSR set to: 1
 13530                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13531  00523E  EC13  F048         	call	_CloseOrder	;wreg free
 13532                           
 13533                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13534  005242  0E00               	movlw	0
 13535  005244  0101               	movlb	1	; () banked
 13536  005246  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13537  005248  0012               	return	
 13538  00524A                     l21866:
 13539  00524A  0101               	movlb	1	; () banked
 13540  00524C  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13541  00524E  A4D8               	btfss	status,2,c
 13542  005250  0012               	return	
 13543                           
 13544                           ; BSR set to: 1
 13545  005252  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13546  005254  A4D8               	btfss	status,2,c
 13547  005256  0012               	return	
 13548                           
 13549                           ; BSR set to: 1
 13550                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13551  005258  BFA7               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13552  00525A  D006               	goto	u25780
 13553  00525C  51A7               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13554  00525E  E103               	bnz	u25781
 13555  005260  0E02               	movlw	2
 13556  005262  5DA6               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13557  005264  B0D8               	btfsc	status,0,c
 13558  005266                     u25781:
 13559  005266  0012               	return	
 13560  005268                     u25780:
 13561                           
 13562                           ; BSR set to: 1
 13563                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13564  005268  0E00               	movlw	0
 13565  00526A  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13566  00526C  0012               	return		;funcret
 13567  00526E                     __end_of_actionZone_Opened:
 13568                           	callstack 0
 13569                           
 13570 ;; *************** function _VerifyFollowMe *****************
 13571 ;; Defined at:
 13572 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13573 ;; Parameters:    Size  Location     Type
 13574 ;;  securityClos    1    wreg     enum E10397
 13575 ;; Auto vars:     Size  Location     Type
 13576 ;;  securityClos    1   15[COMRAM] enum E10397
 13577 ;; Return value:  Size  Location     Type
 13578 ;;                  1    wreg      void 
 13579 ;; Registers used:
 13580 ;;		wreg, status,2, status,0
 13581 ;; Tracked objects:
 13582 ;;		On entry : 0/0
 13583 ;;		On exit  : 3E/0
 13584 ;;		Unchanged: 0/0
 13585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13590 ;;Total ram usage:        1 bytes
 13591 ;; Hardware stack levels used: 1
 13592 ;; Hardware stack levels required when called: 4
 13593 ;; This function calls:
 13594 ;;		Nothing
 13595 ;; This function is called by:
 13596 ;;		_actionZone_Opening
 13597 ;;		_actionZone_Opened
 13598 ;; This function uses a non-reentrant model
 13599 ;;
 13600                           
 13601                           	psect	text33
 13602  0090E4                     __ptext33:
 13603                           	callstack 0
 13604  0090E4                     _VerifyFollowMe:
 13605                           	callstack 24
 13606                           
 13607                           ;incstack = 0
 13608                           ;VerifyFollowMe@securityClose stored from wreg
 13609  0090E4  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13610                           
 13611                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13612  0090E6  0100               	movlb	0	; () banked
 13613  0090E8  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13614  0090EA  B4D8               	btfsc	status,2,c
 13615  0090EC  0012               	return	
 13616                           
 13617                           ; BSR set to: 0
 13618  0090EE  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13619  0090F0  A4D8               	btfss	status,2,c
 13620  0090F2  0012               	return	
 13621                           
 13622                           ; BSR set to: 0
 13623                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13624  0090F4  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13625  0090F6  A4D8               	btfss	status,2,c
 13626  0090F8  0012               	return	
 13627                           
 13628                           ; BSR set to: 0
 13629  0090FA  0101               	movlb	1	; () banked
 13630  0090FC  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13631  0090FE  A4D8               	btfss	status,2,c
 13632  009100  0012               	return	
 13633                           
 13634                           ; BSR set to: 1
 13635                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13636  009102  0E01               	movlw	1
 13637  009104  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13638  009106  0012               	return		;funcret
 13639  009108                     __end_of_VerifyFollowMe:
 13640                           	callstack 0
 13641                           
 13642 ;; *************** function _CloseOrder *****************
 13643 ;; Defined at:
 13644 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13645 ;; Parameters:    Size  Location     Type
 13646 ;;		None
 13647 ;; Auto vars:     Size  Location     Type
 13648 ;;		None
 13649 ;; Return value:  Size  Location     Type
 13650 ;;                  1    wreg      void 
 13651 ;; Registers used:
 13652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13653 ;; Tracked objects:
 13654 ;;		On entry : 3E/1
 13655 ;;		On exit  : 3E/0
 13656 ;;		Unchanged: 0/0
 13657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13662 ;;Total ram usage:        0 bytes
 13663 ;; Hardware stack levels used: 1
 13664 ;; Hardware stack levels required when called: 6
 13665 ;; This function calls:
 13666 ;;		_InitSoftStart
 13667 ;;		_sm_send_event
 13668 ;; This function is called by:
 13669 ;;		_actionZone_Opening
 13670 ;;		_actionZone_Opened
 13671 ;; This function uses a non-reentrant model
 13672 ;;
 13673                           
 13674                           	psect	text34
 13675  009026                     __ptext34:
 13676                           	callstack 0
 13677  009026                     _CloseOrder:
 13678                           	callstack 22
 13679                           
 13680                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13681                           
 13682                           ;incstack = 0
 13683  009026  0E03               	movlw	3
 13684  009028  0101               	movlb	1	; () banked
 13685  00902A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13686                           
 13687                           ; BSR set to: 1
 13688                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13689  00902C  0EE2               	movlw	low _controlGate_stateMachine
 13690  00902E  6E12               	movwf	sm_send_event@psm^0,c
 13691  009030  0E01               	movlw	high _controlGate_stateMachine
 13692  009032  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13693  009034  0E00               	movlw	0
 13694  009036  6E15               	movwf	(sm_send_event@event+1)^0,c
 13695  009038  0E0E               	movlw	14
 13696  00903A  6E14               	movwf	sm_send_event@event^0,c
 13697  00903C  EC18  F042         	call	_sm_send_event	;wreg free
 13698                           
 13699                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13700  009040  0E03               	movlw	3
 13701  009042  0101               	movlb	1	; () banked
 13702  009044  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13703                           
 13704                           ; BSR set to: 1
 13705                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13706  009046  EC46  F042         	call	_InitSoftStart	;wreg free
 13707  00904A  0012               	return		;funcret
 13708  00904C                     __end_of_CloseOrder:
 13709                           	callstack 0
 13710                           
 13711 ;; *************** function _actionZone_Closing *****************
 13712 ;; Defined at:
 13713 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13714 ;; Parameters:    Size  Location     Type
 13715 ;;		None
 13716 ;; Auto vars:     Size  Location     Type
 13717 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13718 ;;  securityClos    1   49[COMRAM] enum E10397
 13719 ;; Return value:  Size  Location     Type
 13720 ;;                  1    wreg      void 
 13721 ;; Registers used:
 13722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13723 ;; Tracked objects:
 13724 ;;		On entry : 3F/0
 13725 ;;		On exit  : 0/0
 13726 ;;		Unchanged: 0/0
 13727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13732 ;;Total ram usage:        2 bytes
 13733 ;; Hardware stack levels used: 1
 13734 ;; Hardware stack levels required when called: 7
 13735 ;; This function calls:
 13736 ;;		_GetOpenOrder
 13737 ;;		_GetSecurityStateInClosing
 13738 ;;		_InitFullAutoTime
 13739 ;;		_InitWalkAutoTime
 13740 ;;		_OpenFullOrder
 13741 ;;		_OpenWalkOrder
 13742 ;;		_SetSegmentValueIntermitent
 13743 ;;		_StopOrder
 13744 ;;		___lmul
 13745 ;;		_setPositionInvertionInClosing
 13746 ;;		_sm_send_event
 13747 ;; This function is called by:
 13748 ;;		_sm_execute_ControlGate
 13749 ;; This function uses a non-reentrant model
 13750 ;;
 13751                           
 13752                           	psect	text35
 13753  0042A0                     __ptext35:
 13754                           	callstack 0
 13755  0042A0                     _actionZone_Closing:
 13756                           	callstack 22
 13757                           
 13758                           ; BSR set to: 0
 13759                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13760                           
 13761                           ;incstack = 0
 13762  0042A0  EC20  F02A         	call	_GetOpenOrder	;wreg free
 13763  0042A4  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13764                           
 13765                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13766  0042A6  EC67  F03A         	call	_GetSecurityStateInClosing	;wreg free
 13767  0042AA  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13768                           
 13769                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13770  0042AC  0E00               	movlw	0
 13771  0042AE  0101               	movlb	1	; () banked
 13772  0042B0  6F8D               	movwf	_Abertura_pedonal& (0+255),b
 13773                           
 13774                           ; BSR set to: 1
 13775                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13776  0042B2  EC1A  F049         	call	_InitFullAutoTime	;wreg free
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13780  0042B6  0E00               	movlw	0
 13781  0042B8  0101               	movlb	1	; () banked
 13782  0042BA  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13783                           
 13784                           ; BSR set to: 1
 13785                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13786  0042BC  0E03               	movlw	3
 13787  0042BE  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13788  0042C0  D00D               	goto	l21890
 13789                           
 13790                           ; BSR set to: 1
 13791                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13792  0042C2  0E00               	movlw	0
 13793  0042C4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13794  0042C6                     l21888:
 13795                           
 13796                           ; BSR set to: 1
 13797                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13798  0042C6  0EE2               	movlw	low _controlGate_stateMachine
 13799  0042C8  6E12               	movwf	sm_send_event@psm^0,c
 13800  0042CA  0E01               	movlw	high _controlGate_stateMachine
 13801  0042CC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13802  0042CE  0E00               	movlw	0
 13803  0042D0  6E15               	movwf	(sm_send_event@event+1)^0,c
 13804  0042D2  0E10               	movlw	16
 13805  0042D4  6E14               	movwf	sm_send_event@event^0,c
 13806  0042D6  EC18  F042         	call	_sm_send_event	;wreg free
 13807                           
 13808                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13809  0042DA  0012               	return	
 13810  0042DC                     l21890:
 13811                           
 13812                           ; BSR set to: 1
 13813  0042DC  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13814  0042DE  B4D8               	btfsc	status,2,c
 13815  0042E0  D00C               	goto	u25830
 13816                           
 13817                           ; BSR set to: 1
 13818  0042E2  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13819  0042E4  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13820  0042E6  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13821  0042E8  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13822  0042EA  A4D8               	btfss	status,2,c
 13823  0042EC  D05F               	goto	l21922
 13824                           
 13825                           ; BSR set to: 1
 13826  0042EE  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13827  0042F0  A4D8               	btfss	status,2,c
 13828  0042F2  D05C               	goto	l21922
 13829                           
 13830                           ; BSR set to: 1
 13831  0042F4  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13832  0042F6  A4D8               	btfss	status,2,c
 13833  0042F8  D059               	goto	l21922
 13834  0042FA                     u25830:
 13835                           
 13836                           ; BSR set to: 1
 13837                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13838  0042FA  0E02               	movlw	2
 13839  0042FC  0100               	movlb	0	; () banked
 13840  0042FE  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13841  004300  A4D8               	btfss	status,2,c
 13842  004302  D018               	goto	l21902
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13846  004304  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13847  004306  6E1D               	movwf	___lmul@multiplier^0,c
 13848  004308  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13849  00430A  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13850  00430C  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13851  00430E  0EB0               	movlw	176
 13852  004310  6E21               	movwf	___lmul@multiplicand^0,c
 13853  004312  0E04               	movlw	4
 13854  004314  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13855  004316  0E00               	movlw	0
 13856  004318  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13857  00431A  0E00               	movlw	0
 13858  00431C  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13859  00431E  EC26  F043         	call	___lmul	;wreg free
 13860  004322  C01D  F1BA         	movff	?___lmul,_ts_system+32	;volatile
 13861  004326  C01E  F1BB         	movff	?___lmul+1,_ts_system+33	;volatile
 13862  00432A  C01F  F1BC         	movff	?___lmul+2,_ts_system+34	;volatile
 13863  00432E  C020  F1BD         	movff	?___lmul+3,_ts_system+35	;volatile
 13864                           
 13865                           ;sm_ControlGate_MC50.c: 668:         }
 13866  004332  D009               	goto	l2768
 13867  004334                     l21902:
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13871  004334  0E00               	movlw	0
 13872  004336  0101               	movlb	1	; () banked
 13873  004338  6FBA               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13874  00433A  0E00               	movlw	0
 13875  00433C  6FBB               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13876  00433E  0E00               	movlw	0
 13877  004340  6FBC               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13878  004342  0E00               	movlw	0
 13879  004344  6FBD               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13880  004346                     l2768:
 13881                           
 13882                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13883  004346  0E00               	movlw	0
 13884  004348  0101               	movlb	1	; () banked
 13885  00434A  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13886                           
 13887                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13888  00434C  0E01               	movlw	1
 13889  00434E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13890                           
 13891                           ; BSR set to: 1
 13892                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13893  004350  0E01               	movlw	1
 13894  004352  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13895  004354  0E00               	movlw	0
 13896  004356  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13897  004358  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13898  00435A  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13899                           
 13900                           ; BSR set to: 1
 13901                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13902  00435C  0E00               	movlw	0
 13903  00435E  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13904                           
 13905                           ; BSR set to: 1
 13906                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13907  004360  0E00               	movlw	0
 13908  004362  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13909  004364  0E00               	movlw	0
 13910  004366  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13911  004368  0E00               	movlw	0
 13912  00436A  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13913  00436C  0E00               	movlw	0
 13914  00436E  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13915                           
 13916                           ; BSR set to: 1
 13917                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13918  004370  0E00               	movlw	0
 13919  004372  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13920                           
 13921                           ; BSR set to: 1
 13922                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13923  004374  0E00               	movlw	0
 13924  004376  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13925                           
 13926                           ; BSR set to: 1
 13927                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13928  004378  0E00               	movlw	0
 13929  00437A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13930                           
 13931                           ; BSR set to: 1
 13932                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13933  00437C  0E00               	movlw	0
 13934  00437E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13935  004380  0E28               	movlw	40
 13936  004382  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13937                           
 13938                           ; BSR set to: 1
 13939                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13940  004384  0E0C               	movlw	12
 13941  004386  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13942  004388  0E00               	movlw	0
 13943  00438A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13944  00438C  0E04               	movlw	4
 13945  00438E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13946  004390  0E0F               	movlw	15
 13947  004392  ECB7  F046         	call	_SetSegmentValueIntermitent
 13948                           
 13949                           ; BSR set to: 1
 13950                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13951  004396  0EE2               	movlw	low _controlGate_stateMachine
 13952  004398  6E12               	movwf	sm_send_event@psm^0,c
 13953  00439A  0E01               	movlw	high _controlGate_stateMachine
 13954  00439C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13955  00439E  0E00               	movlw	0
 13956  0043A0  6E15               	movwf	(sm_send_event@event+1)^0,c
 13957  0043A2  0E0F               	movlw	15
 13958  0043A4  6E14               	movwf	sm_send_event@event^0,c
 13959  0043A6  EC18  F042         	call	_sm_send_event	;wreg free
 13960                           
 13961                           ;sm_ControlGate_MC50.c: 691:     }
 13962  0043AA  0012               	return	
 13963  0043AC                     l21922:
 13964                           
 13965                           ; BSR set to: 1
 13966  0043AC  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13967  0043AE  B4D8               	btfsc	status,2,c
 13968  0043B0  D011               	goto	u25880
 13969                           
 13970                           ; BSR set to: 1
 13971  0043B2  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13972  0043B4  D021               	goto	l21942
 13973  0043B6  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13974  0043B8  E103               	bnz	u25860
 13975  0043BA  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13976  0043BC  A0D8               	btfss	status,0,c
 13977  0043BE  D01C               	goto	l21942
 13978  0043C0                     u25860:
 13979                           
 13980                           ; BSR set to: 1
 13981  0043C0  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13982  0043C2  A4D8               	btfss	status,2,c
 13983  0043C4  D019               	goto	l21942
 13984                           
 13985                           ; BSR set to: 1
 13986  0043C6  BFCB               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13987  0043C8  D005               	goto	u25880
 13988  0043CA  51CB               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13989  0043CC  E115               	bnz	l21942
 13990  0043CE  05CA               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13991  0043D0  B0D8               	btfsc	status,0,c
 13992  0043D2  D012               	goto	l21942
 13993  0043D4                     u25880:
 13994                           
 13995                           ; BSR set to: 1
 13996  0043D4  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13997  0043D6  A4D8               	btfss	status,2,c
 13998  0043D8  D00F               	goto	l21942
 13999                           
 14000                           ; BSR set to: 1
 14001                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 14002  0043DA  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 14003  0043DC  A4D8               	btfss	status,2,c
 14004                           
 14005                           ; BSR set to: 1
 14006                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 14007  0043DE  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14008                           
 14009                           ; BSR set to: 1
 14010                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 14011                           
 14012                           ;sm_ControlGate_MC50.c: 696:         }
 14013  0043E0  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14014                           
 14015                           ; BSR set to: 1
 14016                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 14017  0043E2  0E01               	movlw	1
 14018  0043E4  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14019                           
 14020                           ; BSR set to: 1
 14021                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 14022  0043E6  0E00               	movlw	0
 14023  0043E8  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14024  0043EA  0E0A               	movlw	10
 14025  0043EC  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14026                           
 14027                           ; BSR set to: 1
 14028                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 14029  0043EE  0E00               	movlw	0
 14030  0043F0  6FDB               	movwf	(_ts_system+65)& (0+255),b	;volatile
 14031  0043F2  0E1E               	movlw	30
 14032  0043F4  6FDA               	movwf	(_ts_system+64)& (0+255),b	;volatile
 14033                           
 14034                           ;sm_ControlGate_MC50.c: 702:     }
 14035  0043F6  0012               	return	
 14036  0043F8                     l21942:
 14037                           
 14038                           ; BSR set to: 1
 14039  0043F8  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 14040  0043FA  D02E               	goto	l21972
 14041  0043FC  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 14042  0043FE  E103               	bnz	u25910
 14043  004400  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 14044  004402  A0D8               	btfss	status,0,c
 14045  004404  D029               	goto	l21972
 14046  004406                     u25910:
 14047                           
 14048                           ; BSR set to: 1
 14049  004406  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14050  004408  A4D8               	btfss	status,2,c
 14051  00440A  D026               	goto	l21972
 14052                           
 14053                           ; BSR set to: 1
 14054                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 14055  00440C  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 14056  00440E  A4D8               	btfss	status,2,c
 14057  004410  D005               	goto	l21954
 14058  004412                     u25930:
 14059                           
 14060                           ; BSR set to: 1
 14061                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 14062  004412  0E00               	movlw	0
 14063  004414  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14064                           
 14065                           ; BSR set to: 1
 14066                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 14067  004416  EC1C  F033         	call	_setPositionInvertionInClosing	;wreg free
 14068  00441A  D755               	goto	l21888
 14069  00441C                     l21954:
 14070                           
 14071                           ; BSR set to: 1
 14072  00441C  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14073  00441E  D005               	goto	u25940
 14074  004420  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14075  004422  E117               	bnz	l21970
 14076  004424  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14077  004426  B0D8               	btfsc	status,0,c
 14078  004428  D014               	goto	l21970
 14079  00442A                     u25940:
 14080                           
 14081                           ; BSR set to: 1
 14082                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 14083  00442A  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14084  00442C  A4D8               	btfss	status,2,c
 14085  00442E  D003               	goto	l21960
 14086                           
 14087                           ; BSR set to: 1
 14088                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 14089  004430  ECAD  F040         	call	_OpenWalkOrder	;wreg free
 14090                           
 14091                           ;sm_ControlGate_MC50.c: 713:             }
 14092  004434  D004               	goto	l21964
 14093  004436                     l21960:
 14094                           
 14095                           ; BSR set to: 1
 14096                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 14097  004436  EC26  F048         	call	_OpenFullOrder	;wreg free
 14098                           
 14099                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 14100  00443A  EC1C  F033         	call	_setPositionInvertionInClosing	;wreg free
 14101  00443E                     l21964:
 14102                           
 14103                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 14104  00443E  0E00               	movlw	0
 14105  004440  0101               	movlb	1	; () banked
 14106  004442  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14107                           
 14108                           ; BSR set to: 1
 14109                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 14110  004444  0E01               	movlw	1
 14111  004446  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 14112                           
 14113                           ; BSR set to: 1
 14114                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 14115  004448  0E00               	movlw	0
 14116  00444A  6FCB               	movwf	(_ts_system+49)& (0+255),b	;volatile
 14117  00444C  0E14               	movlw	20
 14118  00444E  6FCA               	movwf	(_ts_system+48)& (0+255),b	;volatile
 14119                           
 14120                           ;sm_ControlGate_MC50.c: 726:         } else
 14121  004450  0012               	return	
 14122  004452                     l21970:
 14123                           
 14124                           ; BSR set to: 1
 14125                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 14126  004452  0E00               	movlw	0
 14127  004454  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14128  004456  0012               	return	
 14129  004458                     l21972:
 14130                           
 14131                           ; BSR set to: 1
 14132  004458  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 14133  00445A  A4D8               	btfss	status,2,c
 14134  00445C  D017               	goto	l21988
 14135                           
 14136                           ; BSR set to: 1
 14137                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 14138  00445E  0E00               	movlw	0
 14139  004460  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14140                           
 14141                           ; BSR set to: 1
 14142                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 14143  004462  BFBF               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 14144  004464  D005               	goto	u25970
 14145  004466  51BF               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 14146  004468  E160               	bnz	l2805
 14147  00446A  05BE               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 14148  00446C  B0D8               	btfsc	status,0,c
 14149  00446E  0012               	return	
 14150  004470                     u25970:
 14151                           
 14152                           ; BSR set to: 1
 14153                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 14154  004470  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 14155  004472  A4D8               	btfss	status,2,c
 14156  004474  D003               	goto	l21982
 14157                           
 14158                           ; BSR set to: 1
 14159                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 14160  004476  ECAD  F040         	call	_OpenWalkOrder	;wreg free
 14161                           
 14162                           ;sm_ControlGate_MC50.c: 741:             }
 14163  00447A  D004               	goto	l21986
 14164  00447C                     l21982:
 14165                           
 14166                           ; BSR set to: 1
 14167                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 14168  00447C  EC26  F048         	call	_OpenFullOrder	;wreg free
 14169                           
 14170                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 14171  004480  EC1C  F033         	call	_setPositionInvertionInClosing	;wreg free
 14172  004484                     l21986:
 14173                           
 14174                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 14175  004484  0E00               	movlw	0
 14176  004486  0101               	movlb	1	; () banked
 14177  004488  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14178  00448A  0012               	return	
 14179  00448C                     l21988:
 14180                           
 14181                           ; BSR set to: 1
 14182  00448C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 14183  00448E  A4D8               	btfss	status,2,c
 14184  004490  D00B               	goto	l22004
 14185                           
 14186                           ; BSR set to: 1
 14187                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 14188  004492  0E02               	movlw	2
 14189  004494  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 14190  004496  B4D8               	btfsc	status,2,c
 14191  004498  D002               	goto	l22000
 14192                           
 14193                           ; BSR set to: 1
 14194                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14195  00449A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14196  00449C  D7BA               	goto	u25930
 14197  00449E                     l22000:
 14198                           
 14199                           ; BSR set to: 1
 14200                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14201  00449E  EC1C  F033         	call	_setPositionInvertionInClosing	;wreg free
 14202  0044A2                     l22002:
 14203                           
 14204                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14205  0044A2  ECC8  F048         	call	_StopOrder	;wreg free
 14206  0044A6  0012               	return	
 14207  0044A8                     l22004:
 14208                           
 14209                           ; BSR set to: 1
 14210  0044A8  BFCD               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14211  0044AA  D005               	goto	u26010
 14212  0044AC  51CD               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14213  0044AE  E10B               	bnz	l22014
 14214  0044B0  05CC               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14215  0044B2  B0D8               	btfsc	status,0,c
 14216  0044B4  D008               	goto	l22014
 14217  0044B6                     u26010:
 14218                           
 14219                           ; BSR set to: 1
 14220  0044B6  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14221  0044B8  A4D8               	btfss	status,2,c
 14222  0044BA  D005               	goto	l22014
 14223                           
 14224                           ; BSR set to: 1
 14225                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14226  0044BC  EC1C  F033         	call	_setPositionInvertionInClosing	;wreg free
 14227                           
 14228                           ; BSR set to: 1
 14229                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14230  0044C0  0E00               	movlw	0
 14231  0044C2  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14232  0044C4  D7EE               	goto	l22002
 14233  0044C6                     l22014:
 14234                           
 14235                           ; BSR set to: 1
 14236  0044C6  0100               	movlb	0	; () banked
 14237  0044C8  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14238  0044CA  B4D8               	btfsc	status,2,c
 14239  0044CC  D004               	goto	u26040
 14240                           
 14241                           ; BSR set to: 0
 14242  0044CE  0E02               	movlw	2
 14243  0044D0  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14244  0044D2  A4D8               	btfss	status,2,c
 14245  0044D4  D005               	goto	l22022
 14246  0044D6                     u26040:
 14247                           
 14248                           ; BSR set to: 0
 14249                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14250  0044D6  0E04               	movlw	4
 14251  0044D8  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14252  0044DA  B4D8               	btfsc	status,2,c
 14253  0044DC  0012               	return	
 14254  0044DE  D7E1               	goto	l22002
 14255  0044E0                     l22022:
 14256                           
 14257                           ; BSR set to: 0
 14258  0044E0  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14259  0044E2  B4D8               	btfsc	status,2,c
 14260  0044E4  0012               	return	
 14261                           
 14262                           ; BSR set to: 0
 14263                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14264  0044E6  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14265  0044E8  A4D8               	btfss	status,2,c
 14266  0044EA  D013               	goto	l22038
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14270  0044EC  EC1C  F033         	call	_setPositionInvertionInClosing	;wreg free
 14271                           
 14272                           ; BSR set to: 1
 14273                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14274  0044F0  ECC8  F048         	call	_StopOrder	;wreg free
 14275                           
 14276                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14277  0044F4  0E02               	movlw	2
 14278  0044F6  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14279  0044F8  A4D8               	btfss	status,2,c
 14280  0044FA  0012               	return	
 14281  0044FC  0E02               	movlw	2
 14282  0044FE  0100               	movlb	0	; () banked
 14283  004500  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14284  004502  B4D8               	btfsc	status,2,c
 14285  004504  0012               	return	
 14286                           
 14287                           ; BSR set to: 0
 14288                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14289  004506  EC9F  F049         	call	_InitWalkAutoTime	;wreg free
 14290                           
 14291                           ; BSR set to: 0
 14292                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14293  00450A  0E01               	movlw	1
 14294  00450C  0101               	movlb	1	; () banked
 14295  00450E  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14296  004510  0012               	return	
 14297  004512                     l22038:
 14298                           
 14299                           ; BSR set to: 0
 14300                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14301  004512  0E04               	movlw	4
 14302  004514  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14303  004516  B4D8               	btfsc	status,2,c
 14304  004518  D7C4               	goto	l22002
 14305                           
 14306                           ; BSR set to: 0
 14307                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14308  00451A  0E01               	movlw	1
 14309  00451C  0101               	movlb	1	; () banked
 14310  00451E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14311                           
 14312                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14313  004520  0E00               	movlw	0
 14314  004522  6FBF               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14315  004524  0E0A               	movlw	10
 14316  004526  6FBE               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14317                           
 14318                           ;sm_ControlGate_MC50.c: 806:             }
 14319  004528  0012               	return	
 14320  00452A                     l2805:
 14321  00452A  0012               	return		;funcret
 14322  00452C                     __end_of_actionZone_Closing:
 14323                           	callstack 0
 14324                           
 14325 ;; *************** function _setPositionInvertionInClosing *****************
 14326 ;; Defined at:
 14327 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;		None
 14330 ;; Auto vars:     Size  Location     Type
 14331 ;;		None
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  1    wreg      void 
 14334 ;; Registers used:
 14335 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14336 ;; Tracked objects:
 14337 ;;		On entry : 3E/1
 14338 ;;		On exit  : 3F/1
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14343 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14344 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14345 ;;Total ram usage:       12 bytes
 14346 ;; Hardware stack levels used: 1
 14347 ;; Hardware stack levels required when called: 6
 14348 ;; This function calls:
 14349 ;;		_getTimeDecelaration
 14350 ;; This function is called by:
 14351 ;;		_actionZone_Opening
 14352 ;;		_actionZone_Closing
 14353 ;; This function uses a non-reentrant model
 14354 ;;
 14355                           
 14356                           	psect	text36
 14357  006638                     __ptext36:
 14358                           	callstack 0
 14359  006638                     _setPositionInvertionInClosing:
 14360                           	callstack 22
 14361                           
 14362                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14363                           
 14364                           ;incstack = 0
 14365  006638  0E02               	movlw	2
 14366  00663A  0100               	movlb	0	; () banked
 14367  00663C  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14368  00663E  B4D8               	btfsc	status,2,c
 14369  006640  D007               	goto	l20676
 14370                           
 14371                           ; BSR set to: 0
 14372                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14373  006642  0E02               	movlw	2
 14374  006644  0101               	movlb	1	; () banked
 14375  006646  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14376  006648  0E00               	movlw	0
 14377  00664A  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14378  00664C  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14379  00664E  D008               	goto	L74
 14380  006650                     l20676:
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14384  006650  0EFF               	movlw	255
 14385  006652  0101               	movlb	1	; () banked
 14386  006654  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14387  006656  0EFF               	movlw	255
 14388  006658  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14389  00665A  0EFF               	movlw	255
 14390  00665C  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14391  00665E  0EFF               	movlw	255
 14392  006660                     L74:
 14393  006660  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14394                           
 14395                           ; BSR set to: 1
 14396                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14397  006662  0E01               	movlw	1
 14398  006664  EC4F  F037         	call	_getTimeDecelaration
 14399  006668  0101               	movlb	1	; () banked
 14400  00666A  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14401  00666C  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14402  00666E  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14403  006670  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14404  006672  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14405  006674  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14406  006676  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14407  006678  0A80               	xorlw	128
 14408  00667A  0100               	movlb	0	; () banked
 14409  00667C  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14410  00667E  0101               	movlb	1	; () banked
 14411  006680  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14412  006682  0A80               	xorlw	128
 14413  006684  0100               	movlb	0	; () banked
 14414  006686  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14415  006688  B0D8               	btfsc	status,0,c
 14416  00668A  D008               	goto	l20684
 14417                           
 14418                           ; BSR set to: 0
 14419  00668C  0E02               	movlw	2
 14420  00668E  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14421  006690  B4D8               	btfsc	status,2,c
 14422  006692  D004               	goto	l20684
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14426  006694  0E01               	movlw	1
 14427  006696  EC4F  F037         	call	_getTimeDecelaration
 14428  00669A  D01A               	goto	L75
 14429  00669C                     l20684:
 14430                           
 14431                           ; BSR set to: 0
 14432  00669C  0E03               	movlw	3
 14433  00669E  EC4F  F037         	call	_getTimeDecelaration
 14434  0066A2  5029               	movf	?_getTimeDecelaration^0,w,c
 14435  0066A4  0101               	movlb	1	; () banked
 14436  0066A6  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14437  0066A8  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14438  0066AA  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14439  0066AC  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14440  0066AE  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14441  0066B0  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14442  0066B2  0A80               	xorlw	128
 14443  0066B4  0100               	movlb	0	; () banked
 14444  0066B6  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14445  0066B8  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14446  0066BA  0A80               	xorlw	128
 14447  0066BC  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14448  0066BE  B0D8               	btfsc	status,0,c
 14449  0066C0  D00F               	goto	l20690
 14450                           
 14451                           ; BSR set to: 0
 14452  0066C2  0E02               	movlw	2
 14453  0066C4  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14454  0066C6  B4D8               	btfsc	status,2,c
 14455  0066C8  D00B               	goto	l20690
 14456                           
 14457                           ; BSR set to: 0
 14458                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14459  0066CA  0E03               	movlw	3
 14460  0066CC  EC4F  F037         	call	_getTimeDecelaration
 14461  0066D0                     L75:
 14462  0066D0  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14463  0066D4  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14464  0066D8  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14465  0066DC  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14466  0066E0                     l20690:
 14467                           
 14468                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14469  0066E0  0100               	movlb	0	; () banked
 14470  0066E2  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14471  0066E4  0D0A               	mullw	10
 14472  0066E6  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14473  0066EA  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14474  0066EE  0E00               	movlw	0
 14475  0066F0  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14476  0066F2  0EFF               	movlw	255
 14477  0066F4  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14478  0066F6  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14479  0066F8  0101               	movlb	1	; () banked
 14480  0066FA  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14481  0066FC  0100               	movlb	0	; () banked
 14482  0066FE  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14483  006700  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14484  006702  0101               	movlb	1	; () banked
 14485  006704  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14486  006706  0100               	movlb	0	; () banked
 14487  006708  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14488  00670A  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14489  00670C  0101               	movlb	1	; () banked
 14490  00670E  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14491  006710  0100               	movlb	0	; () banked
 14492  006712  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14493  006714  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14494  006716  0101               	movlb	1	; () banked
 14495  006718  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14496  00671A  0100               	movlb	0	; () banked
 14497  00671C  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14498  00671E  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14499  006720  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14500  006722  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14501  006724  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14502  006726  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14503  006728  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14504  00672A  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14505  00672C  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14506  00672E  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14507  006730  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14508  006732  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14509  006734  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14510  006736  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14511  006738  0EC8               	movlw	200
 14512  00673A  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14513  00673C  0101               	movlb	1	; () banked
 14514  00673E  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14515  006740  0E00               	movlw	0
 14516  006742  0100               	movlb	0	; () banked
 14517  006744  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14518  006746  0101               	movlb	1	; () banked
 14519  006748  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14520  00674A  0E00               	movlw	0
 14521  00674C  0100               	movlb	0	; () banked
 14522  00674E  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14523  006750  0101               	movlb	1	; () banked
 14524  006752  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14525  006754  0E00               	movlw	0
 14526  006756  0100               	movlb	0	; () banked
 14527  006758  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14528  00675A  0101               	movlb	1	; () banked
 14529  00675C  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14530                           
 14531                           ; BSR set to: 1
 14532  00675E  0012               	return		;funcret
 14533  006760                     __end_of_setPositionInvertionInClosing:
 14534                           	callstack 0
 14535                           
 14536 ;; *************** function _getTimeDecelaration *****************
 14537 ;; Defined at:
 14538 ;;		line 641 in file "outputs_MC50.c"
 14539 ;; Parameters:    Size  Location     Type
 14540 ;;  state           1    wreg     enum E10381
 14541 ;; Auto vars:     Size  Location     Type
 14542 ;;  state           1   48[COMRAM] enum E10381
 14543 ;; Return value:  Size  Location     Type
 14544 ;;                  4   40[COMRAM] long 
 14545 ;; Registers used:
 14546 ;;		wreg, status,2, status,0, cstack
 14547 ;; Tracked objects:
 14548 ;;		On entry : 3E/1
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14555 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14556 ;;Total ram usage:        9 bytes
 14557 ;; Hardware stack levels used: 1
 14558 ;; Hardware stack levels required when called: 5
 14559 ;; This function calls:
 14560 ;;		___lmul
 14561 ;; This function is called by:
 14562 ;;		_getStateOpenPosition
 14563 ;;		_controlVelocity
 14564 ;;		_setPositionInvertionInClosing
 14565 ;;		_setPositionInvertionInOpening
 14566 ;; This function uses a non-reentrant model
 14567 ;;
 14568                           
 14569                           	psect	text37
 14570  006E9E                     __ptext37:
 14571                           	callstack 0
 14572  006E9E                     _getTimeDecelaration:
 14573                           	callstack 22
 14574                           
 14575                           ; BSR set to: 1
 14576                           ;incstack = 0
 14577                           ;getTimeDecelaration@state stored from wreg
 14578  006E9E  6E31               	movwf	getTimeDecelaration@state^0,c
 14579                           
 14580                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14581  006EA0  0E03               	movlw	3
 14582  006EA2  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14583  006EA4  A4D8               	btfss	status,2,c
 14584  006EA6  D033               	goto	l19712
 14585                           
 14586                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14587  006EA8  0E02               	movlw	2
 14588  006EAA  0100               	movlb	0	; () banked
 14589  006EAC  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14590  006EAE  B4D8               	btfsc	status,2,c
 14591  006EB0  D018               	goto	l19708
 14592                           
 14593                           ; BSR set to: 0
 14594                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14595  006EB2  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14596  006EB4  6E1D               	movwf	___lmul@multiplier^0,c
 14597  006EB6  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14598  006EB8  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14599  006EBA  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14600  006EBC  0E0A               	movlw	10
 14601  006EBE  6E21               	movwf	___lmul@multiplicand^0,c
 14602  006EC0  0E00               	movlw	0
 14603  006EC2  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14604  006EC4  0E00               	movlw	0
 14605  006EC6  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14606  006EC8  0E00               	movlw	0
 14607  006ECA  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14608  006ECC  EC26  F043         	call	___lmul	;wreg free
 14609  006ED0  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14610  006ED4  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14611  006ED8  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14612  006EDC  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14613  006EE0  0012               	return	
 14614  006EE2                     l19708:
 14615                           
 14616                           ; BSR set to: 0
 14617  006EE2  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14618  006EE6  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14619  006EE8  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14620  006EEA  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14621  006EEC  0E02               	movlw	2
 14622  006EEE                     u22565:
 14623  006EEE  90D8               	bcf	status,0,c
 14624  006EF0  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14625  006EF2  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14626  006EF4  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14627  006EF6  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14628  006EF8  2EE8               	decfsz	wreg,f,c
 14629  006EFA  D7F9               	goto	u22565
 14630  006EFC  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14631  006F00  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14632  006F04  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14633  006F08  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14634  006F0C  0012               	return	
 14635  006F0E                     l19712:
 14636                           
 14637                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14638  006F0E  0E02               	movlw	2
 14639  006F10  0100               	movlb	0	; () banked
 14640  006F12  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14641  006F14  B4D8               	btfsc	status,2,c
 14642  006F16  D01D               	goto	l19720
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14646  006F18  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14647  006F1A  6E1D               	movwf	___lmul@multiplier^0,c
 14648  006F1C  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14649  006F1E  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14650  006F20  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14651  006F22  0EF6               	movlw	246
 14652  006F24  6E21               	movwf	___lmul@multiplicand^0,c
 14653  006F26  0EFF               	movlw	255
 14654  006F28  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14655  006F2A  0EFF               	movlw	255
 14656  006F2C  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14657  006F2E  0EFF               	movlw	255
 14658  006F30  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14659  006F32  EC26  F043         	call	___lmul	;wreg free
 14660  006F36  0100               	movlb	0	; () banked
 14661  006F38  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14662  006F3A  241D               	addwf	?___lmul^0,w,c
 14663  006F3C  6E29               	movwf	?_getTimeDecelaration^0,c
 14664  006F3E  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14665  006F40  201E               	addwfc	(?___lmul+1)^0,w,c
 14666  006F42  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14667  006F44  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14668  006F46  201F               	addwfc	(?___lmul+2)^0,w,c
 14669  006F48  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14670  006F4A  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14671  006F4C  2020               	addwfc	(?___lmul+3)^0,w,c
 14672  006F4E  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14673  006F50  0012               	return	
 14674  006F52                     l19720:
 14675                           
 14676                           ; BSR set to: 0
 14677  006F52  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14678  006F56  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14679  006F58  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14680  006F5A  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14681  006F5C  0E02               	movlw	2
 14682  006F5E                     u22585:
 14683  006F5E  90D8               	bcf	status,0,c
 14684  006F60  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14685  006F62  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14686  006F64  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14687  006F66  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14688  006F68  2EE8               	decfsz	wreg,f,c
 14689  006F6A  D7F9               	goto	u22585
 14690  006F6C  502D               	movf	??_getTimeDecelaration^0,w,c
 14691  006F6E  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14692  006F70  6E29               	movwf	?_getTimeDecelaration^0,c
 14693  006F72  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14694  006F74  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14695  006F76  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14696  006F78  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14697  006F7A  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14698  006F7C  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14699  006F7E  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14700  006F80  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14701  006F82  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14702  006F84  0012               	return		;funcret
 14703  006F86                     __end_of_getTimeDecelaration:
 14704                           	callstack 0
 14705                           
 14706 ;; *************** function ___lmul *****************
 14707 ;; Defined at:
 14708 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;  multiplier      4   28[COMRAM] unsigned long 
 14711 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14712 ;; Auto vars:     Size  Location     Type
 14713 ;;  product         4   36[COMRAM] unsigned long 
 14714 ;; Return value:  Size  Location     Type
 14715 ;;                  4   28[COMRAM] unsigned long 
 14716 ;; Registers used:
 14717 ;;		wreg, status,2, status,0
 14718 ;; Tracked objects:
 14719 ;;		On entry : 0/1
 14720 ;;		On exit  : 0/0
 14721 ;;		Unchanged: 0/0
 14722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14723 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14724 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14726 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14727 ;;Total ram usage:       12 bytes
 14728 ;; Hardware stack levels used: 1
 14729 ;; Hardware stack levels required when called: 4
 14730 ;; This function calls:
 14731 ;;		Nothing
 14732 ;; This function is called by:
 14733 ;;		_getStateOpenPosition
 14734 ;;		_getTimeDecelaration
 14735 ;;		_actionZone_Closing
 14736 ;;		_sm_execute_menuConfiguration
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740                           	psect	text38
 14741  00864C                     __ptext38:
 14742                           	callstack 0
 14743  00864C                     ___lmul:
 14744                           	callstack 24
 14745                           
 14746                           ;incstack = 0
 14747  00864C  0E00               	movlw	0
 14748  00864E  6E25               	movwf	___lmul@product^0,c
 14749  008650  0E00               	movlw	0
 14750  008652  6E26               	movwf	(___lmul@product+1)^0,c
 14751  008654  0E00               	movlw	0
 14752  008656  6E27               	movwf	(___lmul@product+2)^0,c
 14753  008658  0E00               	movlw	0
 14754  00865A  6E28               	movwf	(___lmul@product+3)^0,c
 14755  00865C                     l19598:
 14756  00865C  A01D               	btfss	___lmul@multiplier^0,0,c
 14757  00865E  D008               	goto	l19602
 14758  008660  5021               	movf	___lmul@multiplicand^0,w,c
 14759  008662  2625               	addwf	___lmul@product^0,f,c
 14760  008664  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14761  008666  2226               	addwfc	(___lmul@product+1)^0,f,c
 14762  008668  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14763  00866A  2227               	addwfc	(___lmul@product+2)^0,f,c
 14764  00866C  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14765  00866E  2228               	addwfc	(___lmul@product+3)^0,f,c
 14766  008670                     l19602:
 14767  008670  90D8               	bcf	status,0,c
 14768  008672  3621               	rlcf	___lmul@multiplicand^0,f,c
 14769  008674  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14770  008676  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14771  008678  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14772  00867A  90D8               	bcf	status,0,c
 14773  00867C  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14774  00867E  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14775  008680  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14776  008682  321D               	rrcf	___lmul@multiplier^0,f,c
 14777  008684  501D               	movf	___lmul@multiplier^0,w,c
 14778  008686  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14779  008688  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14780  00868A  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14781  00868C  A4D8               	btfss	status,2,c
 14782  00868E  D7E6               	goto	l19598
 14783  008690  C025  F01D         	movff	___lmul@product,?___lmul
 14784  008694  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14785  008698  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14786  00869C  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14787  0086A0  0012               	return		;funcret
 14788  0086A2                     __end_of___lmul:
 14789                           	callstack 0
 14790                           
 14791 ;; *************** function _StopOrder *****************
 14792 ;; Defined at:
 14793 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14794 ;; Parameters:    Size  Location     Type
 14795 ;;		None
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;		None
 14798 ;; Return value:  Size  Location     Type
 14799 ;;                  1    wreg      void 
 14800 ;; Registers used:
 14801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14802 ;; Tracked objects:
 14803 ;;		On entry : 3E/1
 14804 ;;		On exit  : 0/0
 14805 ;;		Unchanged: 0/0
 14806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14811 ;;Total ram usage:        0 bytes
 14812 ;; Hardware stack levels used: 1
 14813 ;; Hardware stack levels required when called: 6
 14814 ;; This function calls:
 14815 ;;		_sm_send_event
 14816 ;; This function is called by:
 14817 ;;		_actionZone_Opening
 14818 ;;		_actionZone_Closing
 14819 ;; This function uses a non-reentrant model
 14820 ;;
 14821                           
 14822                           	psect	text39
 14823  009190                     __ptext39:
 14824                           	callstack 0
 14825  009190                     _StopOrder:
 14826                           	callstack 22
 14827                           
 14828                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14829                           
 14830                           ;incstack = 0
 14831  009190  0E00               	movlw	0
 14832  009192  0101               	movlb	1	; () banked
 14833  009194  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14834                           
 14835                           ; BSR set to: 1
 14836                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14837  009196  0EE2               	movlw	low _controlGate_stateMachine
 14838  009198  6E12               	movwf	sm_send_event@psm^0,c
 14839  00919A  0E01               	movlw	high _controlGate_stateMachine
 14840  00919C  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14841  00919E  0E00               	movlw	0
 14842  0091A0  6E15               	movwf	(sm_send_event@event+1)^0,c
 14843  0091A2  0E0D               	movlw	13
 14844  0091A4  6E14               	movwf	sm_send_event@event^0,c
 14845  0091A6  EC18  F042         	call	_sm_send_event	;wreg free
 14846  0091AA  0012               	return		;funcret
 14847  0091AC                     __end_of_StopOrder:
 14848                           	callstack 0
 14849                           
 14850 ;; *************** function _GetSecurityStateInClosing *****************
 14851 ;; Defined at:
 14852 ;;		line 776 in file "inputs_MC50.c"
 14853 ;; Parameters:    Size  Location     Type
 14854 ;;		None
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;		None
 14857 ;; Return value:  Size  Location     Type
 14858 ;;                  1    wreg      enum E10564
 14859 ;; Registers used:
 14860 ;;		wreg, status,2, status,0, cstack
 14861 ;; Tracked objects:
 14862 ;;		On entry : 0/0
 14863 ;;		On exit  : 3E/0
 14864 ;;		Unchanged: 0/0
 14865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14870 ;;Total ram usage:        0 bytes
 14871 ;; Hardware stack levels used: 1
 14872 ;; Hardware stack levels required when called: 5
 14873 ;; This function calls:
 14874 ;;		_SetSegmentValueIntermitent
 14875 ;; This function is called by:
 14876 ;;		_actionZone_Opening
 14877 ;;		_actionZone_Opened
 14878 ;;		_actionZone_Closing
 14879 ;; This function uses a non-reentrant model
 14880 ;;
 14881                           
 14882                           	psect	text40
 14883  0074CE                     __ptext40:
 14884                           	callstack 0
 14885  0074CE                     _GetSecurityStateInClosing:
 14886                           	callstack 23
 14887                           
 14888                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14889                           
 14890                           ;incstack = 0
 14891  0074CE  0100               	movlb	0	; () banked
 14892  0074D0  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14893  0074D2  A4D8               	btfss	status,2,c
 14894  0074D4  D01B               	goto	l20356
 14895                           
 14896                           ; BSR set to: 0
 14897  0074D6  0101               	movlb	1	; () banked
 14898  0074D8  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14899  0074DA  A4D8               	btfss	status,2,c
 14900  0074DC  D017               	goto	l20356
 14901                           
 14902                           ; BSR set to: 1
 14903  0074DE  0100               	movlb	0	; () banked
 14904  0074E0  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14905  0074E2  A4D8               	btfss	status,2,c
 14906  0074E4  D013               	goto	l20356
 14907                           
 14908                           ; BSR set to: 0
 14909  0074E6  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14910  0074E8  A4D8               	btfss	status,2,c
 14911  0074EA  D010               	goto	l20356
 14912                           
 14913                           ; BSR set to: 0
 14914                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14915  0074EC  0E00               	movlw	0
 14916  0074EE  0101               	movlb	1	; () banked
 14917  0074F0  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14918  0074F2  0E04               	movlw	4
 14919  0074F4  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14920                           
 14921                           ; BSR set to: 1
 14922                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14923  0074F6  0E0A               	movlw	10
 14924  0074F8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14925  0074FA  0E00               	movlw	0
 14926  0074FC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14927  0074FE  0E14               	movlw	20
 14928  007500  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14929  007502  0E12               	movlw	18
 14930  007504  ECB7  F046         	call	_SetSegmentValueIntermitent
 14931  007508                     l20350:
 14932                           
 14933                           ; BSR set to: 1
 14934                           ;inputs_MC50.c: 792:         return YES;
 14935  007508  0E01               	movlw	1
 14936  00750A  0012               	return	
 14937  00750C                     l20356:
 14938  00750C  0100               	movlb	0	; () banked
 14939  00750E  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14940  007510  A4D8               	btfss	status,2,c
 14941  007512  D013               	goto	l20370
 14942                           
 14943                           ; BSR set to: 0
 14944  007514  0101               	movlb	1	; () banked
 14945  007516  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14946  007518  A4D8               	btfss	status,2,c
 14947  00751A  D00F               	goto	l20370
 14948                           
 14949                           ; BSR set to: 1
 14950                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14951  00751C  0E00               	movlw	0
 14952  00751E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14953  007520  0E04               	movlw	4
 14954  007522  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14955                           
 14956                           ; BSR set to: 1
 14957                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14958  007524  0E15               	movlw	21
 14959  007526  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14960  007528  0E00               	movlw	0
 14961  00752A  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14962  00752C  0E14               	movlw	20
 14963  00752E  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14964  007530  0E05               	movlw	5
 14965  007532  ECB7  F046         	call	_SetSegmentValueIntermitent
 14966                           
 14967                           ; BSR set to: 1
 14968                           ;inputs_MC50.c: 799:         return ST;
 14969  007536  0E02               	movlw	2
 14970  007538  0012               	return	
 14971  00753A                     l20370:
 14972  00753A  0100               	movlb	0	; () banked
 14973  00753C  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14974  00753E  A4D8               	btfss	status,2,c
 14975  007540  D017               	goto	l20386
 14976                           
 14977                           ; BSR set to: 0
 14978  007542  0101               	movlb	1	; () banked
 14979  007544  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14980  007546  A4D8               	btfss	status,2,c
 14981  007548  D013               	goto	l20386
 14982                           
 14983                           ; BSR set to: 1
 14984  00754A  0100               	movlb	0	; () banked
 14985  00754C  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14986  00754E  A4D8               	btfss	status,2,c
 14987  007550  D00F               	goto	l20386
 14988                           
 14989                           ; BSR set to: 0
 14990                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14991  007552  0E00               	movlw	0
 14992  007554  0101               	movlb	1	; () banked
 14993  007556  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14994  007558  0E04               	movlw	4
 14995  00755A  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14996                           
 14997                           ; BSR set to: 1
 14998                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14999  00755C  0E0E               	movlw	14
 15000  00755E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15001  007560  0E00               	movlw	0
 15002  007562  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15003  007564  0E14               	movlw	20
 15004  007566  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15005  007568  0E12               	movlw	18
 15006  00756A  ECB7  F046         	call	_SetSegmentValueIntermitent
 15007  00756E  D7CC               	goto	l20350
 15008  007570                     l20386:
 15009                           
 15010                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 15011  007570  0E00               	movlw	0
 15012  007572  0012               	return		;funcret
 15013  007574                     __end_of_GetSecurityStateInClosing:
 15014                           	callstack 0
 15015                           
 15016 ;; *************** function _actionZone_Closed *****************
 15017 ;; Defined at:
 15018 ;;		line 327 in file "sm_ControlGate_MC50.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 15023 ;;  securityOpen    1   31[COMRAM] enum E10397
 15024 ;; Return value:  Size  Location     Type
 15025 ;;                  1    wreg      void 
 15026 ;; Registers used:
 15027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15028 ;; Tracked objects:
 15029 ;;		On entry : 3F/0
 15030 ;;		On exit  : 0/0
 15031 ;;		Unchanged: 0/0
 15032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15034 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15037 ;;Total ram usage:        2 bytes
 15038 ;; Hardware stack levels used: 1
 15039 ;; Hardware stack levels required when called: 8
 15040 ;; This function calls:
 15041 ;;		_GetOpenOrder
 15042 ;;		_GetSecurityStateInOpening
 15043 ;;		_InitFullAutoTime
 15044 ;;		_InitWalkAutoTime
 15045 ;;		_OpenFullOrder
 15046 ;;		_OpenWalkOrder
 15047 ;;		_WaitPreFlash
 15048 ;;		_sm_send_event
 15049 ;; This function is called by:
 15050 ;;		_sm_execute_ControlGate
 15051 ;; This function uses a non-reentrant model
 15052 ;;
 15053                           
 15054                           	psect	text41
 15055  007424                     __ptext41:
 15056                           	callstack 0
 15057  007424                     _actionZone_Closed:
 15058                           	callstack 21
 15059                           
 15060                           ; BSR set to: 0
 15061                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 15062                           
 15063                           ;incstack = 0
 15064  007424  0101               	movlb	1	; () banked
 15065  007426  05ED               	decf	_main_stateMachine& (0+255),w,b
 15066  007428  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15067  00742A  B4D8               	btfsc	status,2,c
 15068  00742C  0012               	return	
 15069                           
 15070                           ; BSR set to: 1
 15071                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 15072  00742E  EC20  F02A         	call	_GetOpenOrder	;wreg free
 15073  007432  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 15074                           
 15075                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 15076  007434  ECBA  F03A         	call	_GetSecurityStateInOpening	;wreg free
 15077  007438  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 15078                           
 15079                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 15080  00743A  0100               	movlb	0	; () banked
 15081  00743C  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15082  00743E  A4D8               	btfss	status,2,c
 15083  007440  D018               	goto	l21530
 15084                           
 15085                           ; BSR set to: 0
 15086                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 15087  007442  0E03               	movlw	3
 15088  007444  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15089  007446  A4D8               	btfss	status,2,c
 15090  007448  0012               	return	
 15091                           
 15092                           ; BSR set to: 0
 15093  00744A  0101               	movlb	1	; () banked
 15094  00744C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 15095  00744E  A4D8               	btfss	status,2,c
 15096  007450  0012               	return	
 15097                           
 15098                           ; BSR set to: 1
 15099  007452  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15100  007454  A4D8               	btfss	status,2,c
 15101  007456  0012               	return	
 15102                           
 15103                           ; BSR set to: 1
 15104                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 15105  007458  EC26  F048         	call	_OpenFullOrder	;wreg free
 15106  00745C                     l21528:
 15107                           
 15108                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 15109  00745C  0EED               	movlw	low _main_stateMachine
 15110  00745E  6E12               	movwf	sm_send_event@psm^0,c
 15111  007460  0E01               	movlw	high _main_stateMachine
 15112  007462  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15113  007464  0E00               	movlw	0
 15114  007466  6E15               	movwf	(sm_send_event@event+1)^0,c
 15115  007468  0E11               	movlw	17
 15116  00746A  6E14               	movwf	sm_send_event@event^0,c
 15117  00746C  EC18  F042         	call	_sm_send_event	;wreg free
 15118  007470  0012               	return	
 15119  007472                     l21530:
 15120                           
 15121                           ; BSR set to: 0
 15122  007472  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 15123  007474  B4D8               	btfsc	status,2,c
 15124  007476  D004               	goto	u24970
 15125                           
 15126                           ; BSR set to: 0
 15127  007478  0E03               	movlw	3
 15128  00747A  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15129  00747C  A4D8               	btfss	status,2,c
 15130  00747E  D017               	goto	l21550
 15131  007480                     u24970:
 15132                           
 15133                           ; BSR set to: 0
 15134  007480  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15135  007482  A4D8               	btfss	status,2,c
 15136  007484  D014               	goto	l21550
 15137                           
 15138                           ; BSR set to: 0
 15139  007486  0101               	movlb	1	; () banked
 15140  007488  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 15141  00748A  A4D8               	btfss	status,2,c
 15142  00748C  D010               	goto	l21550
 15143                           
 15144                           ; BSR set to: 1
 15145                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 15146  00748E  0E02               	movlw	2
 15147  007490  0100               	movlb	0	; () banked
 15148  007492  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15149  007494  A4D8               	btfss	status,2,c
 15150  007496  D006               	goto	l21544
 15151                           
 15152                           ; BSR set to: 0
 15153                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 15154  007498  0E01               	movlw	1
 15155  00749A  0101               	movlb	1	; () banked
 15156  00749C  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15157                           
 15158                           ; BSR set to: 1
 15159                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 15160  00749E  EC75  F040         	call	_WaitPreFlash	;wreg free
 15161                           
 15162                           ;sm_ControlGate_MC50.c: 356:             }
 15163  0074A2  0012               	return	
 15164  0074A4                     l21544:
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 15168  0074A4  EC26  F048         	call	_OpenFullOrder	;wreg free
 15169                           
 15170                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 15171  0074A8  EC1A  F049         	call	_InitFullAutoTime	;wreg free
 15172  0074AC  D7D7               	goto	l21528
 15173  0074AE                     l21550:
 15174  0074AE  0E02               	movlw	2
 15175  0074B0  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 15176  0074B2  A4D8               	btfss	status,2,c
 15177  0074B4  0012               	return	
 15178  0074B6  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 15179  0074B8  A4D8               	btfss	status,2,c
 15180  0074BA  0012               	return	
 15181  0074BC  0100               	movlb	0	; () banked
 15182  0074BE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15183  0074C0  B4D8               	btfsc	status,2,c
 15184  0074C2  0012               	return	
 15185                           
 15186                           ; BSR set to: 0
 15187                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 15188  0074C4  ECAD  F040         	call	_OpenWalkOrder	;wreg free
 15189                           
 15190                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 15191  0074C8  EC9F  F049         	call	_InitWalkAutoTime	;wreg free
 15192  0074CC  D7C7               	goto	l21528
 15193  0074CE                     __end_of_actionZone_Closed:
 15194                           	callstack 0
 15195                           
 15196 ;; *************** function _WaitPreFlash *****************
 15197 ;; Defined at:
 15198 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15199 ;; Parameters:    Size  Location     Type
 15200 ;;		None
 15201 ;; Auto vars:     Size  Location     Type
 15202 ;;		None
 15203 ;; Return value:  Size  Location     Type
 15204 ;;                  1    wreg      void 
 15205 ;; Registers used:
 15206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15207 ;; Tracked objects:
 15208 ;;		On entry : 3F/1
 15209 ;;		On exit  : 3F/1
 15210 ;;		Unchanged: 0/0
 15211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15216 ;;Total ram usage:        0 bytes
 15217 ;; Hardware stack levels used: 1
 15218 ;; Hardware stack levels required when called: 7
 15219 ;; This function calls:
 15220 ;;		_InitFullAutoTime
 15221 ;;		_OpenFullOrder
 15222 ;;		_sm_send_event
 15223 ;; This function is called by:
 15224 ;;		_sm_execute_ControlGate
 15225 ;;		_actionZone_Closed
 15226 ;; This function uses a non-reentrant model
 15227 ;;
 15228                           
 15229                           	psect	text42
 15230  0080EA                     __ptext42:
 15231                           	callstack 0
 15232  0080EA                     _WaitPreFlash:
 15233                           	callstack 21
 15234                           
 15235                           ; BSR set to: 1
 15236                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15237                           
 15238                           ;incstack = 0
 15239  0080EA  0E02               	movlw	2
 15240  0080EC  0100               	movlb	0	; () banked
 15241  0080EE  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15242  0080F0  A4D8               	btfss	status,2,c
 15243  0080F2  D014               	goto	l20596
 15244                           
 15245                           ; BSR set to: 0
 15246  0080F4  0101               	movlb	1	; () banked
 15247  0080F6  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15248  0080F8  A4D8               	btfss	status,2,c
 15249  0080FA  D010               	goto	l20596
 15250                           
 15251                           ; BSR set to: 1
 15252  0080FC  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15253  0080FE  D005               	goto	u23910
 15254  008100  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15255  008102  E10C               	bnz	l20596
 15256  008104  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15257  008106  B0D8               	btfsc	status,0,c
 15258  008108  D009               	goto	l20596
 15259  00810A                     u23910:
 15260                           
 15261                           ; BSR set to: 1
 15262  00810A  518C               	movf	_aux_i& (0+255),w,b
 15263  00810C  A4D8               	btfss	status,2,c
 15264  00810E  D006               	goto	l20596
 15265                           
 15266                           ; BSR set to: 1
 15267                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15268  008110  0E00               	movlw	0
 15269  008112  6FE1               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15270  008114  0E3C               	movlw	60
 15271  008116  6FE0               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15272                           
 15273                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15274  008118  0E01               	movlw	1
 15275  00811A  6F8C               	movwf	_aux_i& (0+255),b
 15276  00811C                     l20596:
 15277                           
 15278                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15279  00811C  0101               	movlb	1	; () banked
 15280  00811E  BFE1               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15281  008120  D005               	goto	u23930
 15282  008122  51E1               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15283  008124  E119               	bnz	l2580
 15284  008126  05E0               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15285  008128  B0D8               	btfsc	status,0,c
 15286  00812A  0012               	return	
 15287  00812C                     u23930:
 15288                           
 15289                           ; BSR set to: 1
 15290  00812C  058C               	decf	_aux_i& (0+255),w,b
 15291  00812E  A4D8               	btfss	status,2,c
 15292  008130  0012               	return	
 15293                           
 15294                           ; BSR set to: 1
 15295                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15296  008132  0E00               	movlw	0
 15297  008134  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15298                           
 15299                           ; BSR set to: 1
 15300                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15301  008136  EC26  F048         	call	_OpenFullOrder	;wreg free
 15302                           
 15303                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15304  00813A  EC1A  F049         	call	_InitFullAutoTime	;wreg free
 15305                           
 15306                           ; BSR set to: 0
 15307                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15308  00813E  0EED               	movlw	low _main_stateMachine
 15309  008140  6E12               	movwf	sm_send_event@psm^0,c
 15310  008142  0E01               	movlw	high _main_stateMachine
 15311  008144  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15312  008146  0E00               	movlw	0
 15313  008148  6E15               	movwf	(sm_send_event@event+1)^0,c
 15314  00814A  0E11               	movlw	17
 15315  00814C  6E14               	movwf	sm_send_event@event^0,c
 15316  00814E  EC18  F042         	call	_sm_send_event	;wreg free
 15317                           
 15318                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15319  008152  0E00               	movlw	0
 15320  008154  0101               	movlb	1	; () banked
 15321  008156  6F8C               	movwf	_aux_i& (0+255),b
 15322  008158                     l2580:
 15323                           
 15324                           ; BSR set to: 1
 15325  008158  0012               	return		;funcret
 15326  00815A                     __end_of_WaitPreFlash:
 15327                           	callstack 0
 15328                           
 15329 ;; *************** function _OpenFullOrder *****************
 15330 ;; Defined at:
 15331 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15332 ;; Parameters:    Size  Location     Type
 15333 ;;		None
 15334 ;; Auto vars:     Size  Location     Type
 15335 ;;		None
 15336 ;; Return value:  Size  Location     Type
 15337 ;;                  1    wreg      void 
 15338 ;; Registers used:
 15339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15340 ;; Tracked objects:
 15341 ;;		On entry : 3E/1
 15342 ;;		On exit  : 3E/0
 15343 ;;		Unchanged: 0/0
 15344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15349 ;;Total ram usage:        0 bytes
 15350 ;; Hardware stack levels used: 1
 15351 ;; Hardware stack levels required when called: 6
 15352 ;; This function calls:
 15353 ;;		_InitSoftStart
 15354 ;;		_sm_send_event
 15355 ;; This function is called by:
 15356 ;;		_WaitPreFlash
 15357 ;;		_actionZone_Closed
 15358 ;;		_actionZone_Opened
 15359 ;;		_actionZone_Closing
 15360 ;; This function uses a non-reentrant model
 15361 ;;
 15362                           
 15363                           	psect	text43
 15364  00904C                     __ptext43:
 15365                           	callstack 0
 15366  00904C                     _OpenFullOrder:
 15367                           	callstack 22
 15368                           
 15369                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15370                           
 15371                           ; BSR set to: 1
 15372                           ;incstack = 0
 15373  00904C  0E01               	movlw	1
 15374  00904E  0101               	movlb	1	; () banked
 15375  009050  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15376                           
 15377                           ; BSR set to: 1
 15378                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15379  009052  0EE2               	movlw	low _controlGate_stateMachine
 15380  009054  6E12               	movwf	sm_send_event@psm^0,c
 15381  009056  0E01               	movlw	high _controlGate_stateMachine
 15382  009058  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15383  00905A  0E00               	movlw	0
 15384  00905C  6E15               	movwf	(sm_send_event@event+1)^0,c
 15385  00905E  0E0C               	movlw	12
 15386  009060  6E14               	movwf	sm_send_event@event^0,c
 15387  009062  EC18  F042         	call	_sm_send_event	;wreg free
 15388                           
 15389                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15390  009066  0E01               	movlw	1
 15391  009068  0101               	movlb	1	; () banked
 15392  00906A  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15393                           
 15394                           ; BSR set to: 1
 15395                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15396  00906C  EC46  F042         	call	_InitSoftStart	;wreg free
 15397  009070  0012               	return		;funcret
 15398  009072                     __end_of_OpenFullOrder:
 15399                           	callstack 0
 15400                           
 15401 ;; *************** function _InitFullAutoTime *****************
 15402 ;; Defined at:
 15403 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;		None
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      void 
 15410 ;; Registers used:
 15411 ;;		wreg, status,2, status,0, prodl, prodh
 15412 ;; Tracked objects:
 15413 ;;		On entry : 3E/0
 15414 ;;		On exit  : 3F/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15421 ;;Total ram usage:        0 bytes
 15422 ;; Hardware stack levels used: 1
 15423 ;; Hardware stack levels required when called: 4
 15424 ;; This function calls:
 15425 ;;		Nothing
 15426 ;; This function is called by:
 15427 ;;		_WaitPreFlash
 15428 ;;		_actionZone_Closed
 15429 ;;		_actionZone_Opening
 15430 ;;		_actionZone_Opened
 15431 ;;		_actionZone_Closing
 15432 ;; This function uses a non-reentrant model
 15433 ;;
 15434                           
 15435                           	psect	text44
 15436  009234                     __ptext44:
 15437                           	callstack 0
 15438  009234                     _InitFullAutoTime:
 15439                           	callstack 24
 15440                           
 15441                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15442                           
 15443                           ;incstack = 0
 15444  009234  0100               	movlb	0	; () banked
 15445  009236  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15446  009238  A4D8               	btfss	status,2,c
 15447  00923A  0012               	return	
 15448                           
 15449                           ; BSR set to: 0
 15450                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15451  00923C  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15452  00923E  0D14               	mullw	20
 15453  009240  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 15454  009244  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 15455                           
 15456                           ; BSR set to: 0
 15457                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15458  009248  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15459                           
 15460                           ; BSR set to: 0
 15461  00924C  0012               	return		;funcret
 15462  00924E                     __end_of_InitFullAutoTime:
 15463                           	callstack 0
 15464                           
 15465 ;; *************** function _OpenWalkOrder *****************
 15466 ;; Defined at:
 15467 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;		None
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;  diffTime        2   25[COMRAM] int 
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  1    wreg      void 
 15474 ;; Registers used:
 15475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15476 ;; Tracked objects:
 15477 ;;		On entry : 3E/1
 15478 ;;		On exit  : 3E/0
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15482 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;Total ram usage:        4 bytes
 15486 ;; Hardware stack levels used: 1
 15487 ;; Hardware stack levels required when called: 6
 15488 ;; This function calls:
 15489 ;;		_InitSoftStart
 15490 ;;		_sm_send_event
 15491 ;; This function is called by:
 15492 ;;		_actionZone_Closed
 15493 ;;		_actionZone_Opened
 15494 ;;		_actionZone_Closing
 15495 ;; This function uses a non-reentrant model
 15496 ;;
 15497                           
 15498                           	psect	text45
 15499  00815A                     __ptext45:
 15500                           	callstack 0
 15501  00815A                     _OpenWalkOrder:
 15502                           	callstack 22
 15503                           
 15504                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15505                           
 15506                           ; BSR set to: 0
 15507                           ;incstack = 0
 15508  00815A  0100               	movlb	0	; () banked
 15509  00815C  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15510  00815E  0D14               	mullw	20
 15511  008160  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15512  008164  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15513  008168  0101               	movlb	1	; () banked
 15514  00816A  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15515  00816C  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15516  00816E  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15517  008170  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15518  008172  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15519  008174  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15520                           
 15521                           ; BSR set to: 1
 15522                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15523  008176  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15524  008178  D022               	goto	l20634
 15525  00817A  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15526  00817C  E103               	bnz	u23950
 15527  00817E  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15528  008180  A0D8               	btfss	status,0,c
 15529  008182  D01D               	goto	l20634
 15530  008184                     u23950:
 15531                           
 15532                           ; BSR set to: 1
 15533                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15534  008184  0EE2               	movlw	low _controlGate_stateMachine
 15535  008186  6E12               	movwf	sm_send_event@psm^0,c
 15536  008188  0E01               	movlw	high _controlGate_stateMachine
 15537  00818A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15538  00818C  0E00               	movlw	0
 15539  00818E  6E15               	movwf	(sm_send_event@event+1)^0,c
 15540  008190  0E0C               	movlw	12
 15541  008192  6E14               	movwf	sm_send_event@event^0,c
 15542  008194  EC18  F042         	call	_sm_send_event	;wreg free
 15543                           
 15544                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15545  008198  0101               	movlb	1	; () banked
 15546  00819A  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15547  00819C  A4D8               	btfss	status,2,c
 15548  00819E  D005               	goto	l20628
 15549                           
 15550                           ; BSR set to: 1
 15551                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15552  0081A0  C01A  F1AA         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15553  0081A4  C01B  F1AB         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15554                           
 15555                           ;sm_ControlGate_MC50.c: 79:         }
 15556  0081A8  D006               	goto	l20630
 15557  0081AA                     l20628:
 15558                           
 15559                           ; BSR set to: 1
 15560                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15561  0081AA  0E14               	movlw	20
 15562  0081AC  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15563  0081AE  6FAA               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15564  0081B0  0E00               	movlw	0
 15565  0081B2  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15566  0081B4  6FAB               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15567  0081B6                     l20630:
 15568                           
 15569                           ; BSR set to: 1
 15570                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15571  0081B6  0E02               	movlw	2
 15572  0081B8  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15573                           
 15574                           ; BSR set to: 1
 15575                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15576  0081BA  0E01               	movlw	1
 15577  0081BC  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15578  0081BE                     l20634:
 15579                           
 15580                           ; BSR set to: 1
 15581                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15582  0081BE  0E02               	movlw	2
 15583  0081C0  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15584                           
 15585                           ; BSR set to: 1
 15586                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15587  0081C2  EC46  F042         	call	_InitSoftStart	;wreg free
 15588  0081C6  0012               	return		;funcret
 15589  0081C8                     __end_of_OpenWalkOrder:
 15590                           	callstack 0
 15591                           
 15592 ;; *************** function _sm_send_event *****************
 15593 ;; Defined at:
 15594 ;;		line 34 in file "sm_common_MC50.c"
 15595 ;; Parameters:    Size  Location     Type
 15596 ;;  psm             2   17[COMRAM] PTR struct .
 15597 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15598 ;;  event           2   19[COMRAM] int 
 15599 ;; Auto vars:     Size  Location     Type
 15600 ;;		None
 15601 ;; Return value:  Size  Location     Type
 15602 ;;                  1    wreg      void 
 15603 ;; Registers used:
 15604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15605 ;; Tracked objects:
 15606 ;;		On entry : 0/0
 15607 ;;		On exit  : 0/0
 15608 ;;		Unchanged: 0/0
 15609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15613 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15614 ;;Total ram usage:        6 bytes
 15615 ;; Hardware stack levels used: 1
 15616 ;; Hardware stack levels required when called: 5
 15617 ;; This function calls:
 15618 ;;		_sm_get_current_state
 15619 ;; This function is called by:
 15620 ;;		_OpenFullOrder
 15621 ;;		_WaitPreFlash
 15622 ;;		_CloseOrder
 15623 ;;		_OpenWalkOrder
 15624 ;;		_StopOrder
 15625 ;;		_sm_execute_ControlGate
 15626 ;;		_actionZone_Closed
 15627 ;;		_actionZone_Opening
 15628 ;;		_actionZone_Closing
 15629 ;;		_sm_execute_ControlLearning
 15630 ;;		_sm_execute_main
 15631 ;;		_sm_execute_menuConfiguration
 15632 ;;		_setValueToEdit
 15633 ;;		_controlSelectRemote
 15634 ;;		_controlSaveRemote
 15635 ;; This function uses a non-reentrant model
 15636 ;;
 15637                           
 15638                           	psect	text46
 15639  008430                     __ptext46:
 15640                           	callstack 0
 15641  008430                     _sm_send_event:
 15642                           	callstack 24
 15643                           
 15644                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15645                           
 15646                           ;incstack = 0
 15647  008430  EE20 F007          	lfsr	2,7
 15648  008434  5012               	movf	sm_send_event@psm^0,w,c
 15649  008436  26D9               	addwf	fsr2l,f,c
 15650  008438  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15651  00843A  22DA               	addwfc	fsr2h,f,c
 15652  00843C  50DE               	movf	postinc2,w,c
 15653  00843E  10DE               	iorwf	postinc2,w,c
 15654  008440  B4D8               	btfsc	status,2,c
 15655  008442  D019               	goto	u22600
 15656  008444  EE20 F007          	lfsr	2,7
 15657  008448  5012               	movf	sm_send_event@psm^0,w,c
 15658  00844A  26D9               	addwf	fsr2l,f,c
 15659  00844C  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15660  00844E  22DA               	addwfc	fsr2h,f,c
 15661  008450  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15662  008454  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15663  008458  ECBD  F049         	call	_sm_get_current_state	;wreg free
 15664  00845C  EE20 F009          	lfsr	2,9
 15665  008460  5012               	movf	sm_send_event@psm^0,w,c
 15666  008462  26D9               	addwf	fsr2l,f,c
 15667  008464  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15668  008466  22DA               	addwfc	fsr2h,f,c
 15669  008468  50DE               	movf	postinc2,w,c
 15670  00846A  1810               	xorwf	?_sm_get_current_state^0,w,c
 15671  00846C  E10E               	bnz	l3507
 15672  00846E  50DE               	movf	postinc2,w,c
 15673  008470  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15674  008472  A4D8               	btfss	status,2,c
 15675  008474  0012               	return	
 15676  008476                     u22600:
 15677                           
 15678                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15679  008476  EE20 F004          	lfsr	2,4
 15680  00847A  5012               	movf	sm_send_event@psm^0,w,c
 15681  00847C  26D9               	addwf	fsr2l,f,c
 15682  00847E  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15683  008480  22DA               	addwfc	fsr2h,f,c
 15684  008482  C014  FFDE         	movff	sm_send_event@event,postinc2
 15685  008486  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15686  00848A                     l3507:
 15687  00848A  0012               	return		;funcret
 15688  00848C                     __end_of_sm_send_event:
 15689                           	callstack 0
 15690                           
 15691 ;; *************** function _sm_get_current_state *****************
 15692 ;; Defined at:
 15693 ;;		line 30 in file "sm_common_MC50.c"
 15694 ;; Parameters:    Size  Location     Type
 15695 ;;  psm             2   15[COMRAM] PTR struct .
 15696 ;;		 -> NULL(0), 
 15697 ;; Auto vars:     Size  Location     Type
 15698 ;;		None
 15699 ;; Return value:  Size  Location     Type
 15700 ;;                  2   15[COMRAM] int 
 15701 ;; Registers used:
 15702 ;;		fsr2l, fsr2h
 15703 ;; Tracked objects:
 15704 ;;		On entry : 0/0
 15705 ;;		On exit  : 0/0
 15706 ;;		Unchanged: 0/0
 15707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15712 ;;Total ram usage:        2 bytes
 15713 ;; Hardware stack levels used: 1
 15714 ;; Hardware stack levels required when called: 4
 15715 ;; This function calls:
 15716 ;;		Nothing
 15717 ;; This function is called by:
 15718 ;;		_sm_send_event
 15719 ;; This function uses a non-reentrant model
 15720 ;;
 15721                           
 15722                           	psect	text47
 15723  00937A                     __ptext47:
 15724                           	callstack 0
 15725  00937A                     _sm_get_current_state:
 15726                           	callstack 24
 15727                           
 15728                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15729                           
 15730                           ;incstack = 0
 15731  00937A  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15732  00937E  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15733  009382  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15734  009386  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15735  00938A  0012               	return		;funcret
 15736  00938C                     __end_of_sm_get_current_state:
 15737                           	callstack 0
 15738                           
 15739 ;; *************** function _InitSoftStart *****************
 15740 ;; Defined at:
 15741 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;		None
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;		None
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15750 ;; Tracked objects:
 15751 ;;		On entry : 3F/1
 15752 ;;		On exit  : 3E/0
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15759 ;;Total ram usage:        1 bytes
 15760 ;; Hardware stack levels used: 1
 15761 ;; Hardware stack levels required when called: 5
 15762 ;; This function calls:
 15763 ;;		_GetMotorPower
 15764 ;; This function is called by:
 15765 ;;		_OpenFullOrder
 15766 ;;		_CloseOrder
 15767 ;;		_OpenWalkOrder
 15768 ;; This function uses a non-reentrant model
 15769 ;;
 15770                           
 15771                           	psect	text48
 15772  00848C                     __ptext48:
 15773                           	callstack 0
 15774  00848C                     _InitSoftStart:
 15775                           	callstack 22
 15776                           
 15777                           ; BSR set to: 1
 15778                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15779                           
 15780                           ;incstack = 0
 15781  00848C  0100               	movlb	0	; () banked
 15782  00848E  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15783  008490  B4D8               	btfsc	status,2,c
 15784  008492  0012               	return	
 15785                           
 15786                           ; BSR set to: 0
 15787  008494  0101               	movlb	1	; () banked
 15788  008496  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15789  008498  A4D8               	btfss	status,2,c
 15790  00849A  0012               	return	
 15791                           
 15792                           ; BSR set to: 1
 15793                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15794  00849C  0E00               	movlw	0
 15795  00849E  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15796  0084A0  0E00               	movlw	0
 15797  0084A2  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15798                           
 15799                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15800  0084A4  0E00               	movlw	0
 15801  0084A6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15802  0084A8  0E00               	movlw	0
 15803  0084AA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15804                           
 15805                           ; BSR set to: 1
 15806                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15807  0084AC  EC97  F038         	call	_GetMotorPower	;wreg free
 15808  0084B0  6E14               	movwf	??_InitSoftStart^0,c
 15809  0084B2  5014               	movf	??_InitSoftStart^0,w,c
 15810  0084B4  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15811  0084B6  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15812                           
 15813                           ; BSR set to: 1
 15814                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15815  0084B8  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15816  0084BA  D00A               	goto	l19742
 15817  0084BC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15818  0084BE  E104               	bnz	u22630
 15819  0084C0  0E52               	movlw	82
 15820  0084C2  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15821  0084C4  A0D8               	btfss	status,0,c
 15822  0084C6  D004               	goto	l19742
 15823  0084C8                     u22630:
 15824                           
 15825                           ; BSR set to: 1
 15826                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15827  0084C8  0E00               	movlw	0
 15828  0084CA  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15829  0084CC  0E51               	movlw	81
 15830  0084CE  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15831  0084D0                     l19742:
 15832                           
 15833                           ; BSR set to: 1
 15834                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15835  0084D0  0E01               	movlw	1
 15836  0084D2  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15837  0084D4  6FB0               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15838  0084D6  0E00               	movlw	0
 15839  0084D8  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15840  0084DA  6FB1               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15841                           
 15842                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15843  0084DC  0100               	movlb	0	; () banked
 15844  0084DE  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15845  0084E0  080A               	sublw	10
 15846  0084E2  0101               	movlb	1	; () banked
 15847  0084E4  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15848  0084E6  0012               	return		;funcret
 15849  0084E8                     __end_of_InitSoftStart:
 15850                           	callstack 0
 15851                           
 15852 ;; *************** function _InitWalkAutoTime *****************
 15853 ;; Defined at:
 15854 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15855 ;; Parameters:    Size  Location     Type
 15856 ;;		None
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;		None
 15859 ;; Return value:  Size  Location     Type
 15860 ;;                  1    wreg      void 
 15861 ;; Registers used:
 15862 ;;		wreg, status,2, status,0, prodl, prodh
 15863 ;; Tracked objects:
 15864 ;;		On entry : 0/1
 15865 ;;		On exit  : 3F/0
 15866 ;;		Unchanged: 0/0
 15867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15872 ;;Total ram usage:        0 bytes
 15873 ;; Hardware stack levels used: 1
 15874 ;; Hardware stack levels required when called: 4
 15875 ;; This function calls:
 15876 ;;		Nothing
 15877 ;; This function is called by:
 15878 ;;		_actionZone_Closed
 15879 ;;		_actionZone_Opening
 15880 ;;		_actionZone_Opened
 15881 ;;		_actionZone_Closing
 15882 ;; This function uses a non-reentrant model
 15883 ;;
 15884                           
 15885                           	psect	text49
 15886  00933E                     __ptext49:
 15887                           	callstack 0
 15888  00933E                     _InitWalkAutoTime:
 15889                           	callstack 24
 15890                           
 15891                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15892                           
 15893                           ;incstack = 0
 15894  00933E  0100               	movlb	0	; () banked
 15895  009340  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15896  009342  0D14               	mullw	20
 15897  009344  CFF3 F1AC          	movff	prodl,_ts_system+18	;volatile
 15898  009348  CFF4 F1AD          	movff	prodh,_ts_system+19	;volatile
 15899                           
 15900                           ; BSR set to: 0
 15901                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15902  00934C  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15903                           
 15904                           ; BSR set to: 0
 15905  009350  0012               	return		;funcret
 15906  009352                     __end_of_InitWalkAutoTime:
 15907                           	callstack 0
 15908                           
 15909 ;; *************** function _GetSecurityStateInOpening *****************
 15910 ;; Defined at:
 15911 ;;		line 738 in file "inputs_MC50.c"
 15912 ;; Parameters:    Size  Location     Type
 15913 ;;		None
 15914 ;; Auto vars:     Size  Location     Type
 15915 ;;		None
 15916 ;; Return value:  Size  Location     Type
 15917 ;;                  1    wreg      enum E10564
 15918 ;; Registers used:
 15919 ;;		wreg, status,2, status,0, cstack
 15920 ;; Tracked objects:
 15921 ;;		On entry : 0/0
 15922 ;;		On exit  : 3E/0
 15923 ;;		Unchanged: 0/0
 15924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15929 ;;Total ram usage:        0 bytes
 15930 ;; Hardware stack levels used: 1
 15931 ;; Hardware stack levels required when called: 5
 15932 ;; This function calls:
 15933 ;;		_SetSegmentValueIntermitent
 15934 ;; This function is called by:
 15935 ;;		_actionZone_Closed
 15936 ;;		_actionZone_Opening
 15937 ;; This function uses a non-reentrant model
 15938 ;;
 15939                           
 15940                           	psect	text50
 15941  007574                     __ptext50:
 15942                           	callstack 0
 15943  007574                     _GetSecurityStateInOpening:
 15944                           	callstack 23
 15945                           
 15946                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15947                           
 15948                           ; BSR set to: 0
 15949                           ;incstack = 0
 15950  007574  0100               	movlb	0	; () banked
 15951  007576  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15952  007578  A4D8               	btfss	status,2,c
 15953  00757A  D01B               	goto	l20304
 15954                           
 15955                           ; BSR set to: 0
 15956  00757C  0101               	movlb	1	; () banked
 15957  00757E  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15958  007580  A4D8               	btfss	status,2,c
 15959  007582  D017               	goto	l20304
 15960                           
 15961                           ; BSR set to: 1
 15962  007584  0100               	movlb	0	; () banked
 15963  007586  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15964  007588  A4D8               	btfss	status,2,c
 15965  00758A  D013               	goto	l20304
 15966                           
 15967                           ; BSR set to: 0
 15968  00758C  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15969  00758E  A4D8               	btfss	status,2,c
 15970  007590  D010               	goto	l20304
 15971                           
 15972                           ; BSR set to: 0
 15973                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15974  007592  0E00               	movlw	0
 15975  007594  0101               	movlb	1	; () banked
 15976  007596  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15977  007598  0E04               	movlw	4
 15978  00759A  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15979                           
 15980                           ; BSR set to: 1
 15981                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15982  00759C  0E0A               	movlw	10
 15983  00759E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15984  0075A0  0E00               	movlw	0
 15985  0075A2  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15986  0075A4  0E14               	movlw	20
 15987  0075A6  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15988  0075A8  0E12               	movlw	18
 15989  0075AA  ECB7  F046         	call	_SetSegmentValueIntermitent
 15990  0075AE                     l20298:
 15991                           
 15992                           ; BSR set to: 1
 15993                           ;inputs_MC50.c: 752:         return YES;
 15994  0075AE  0E01               	movlw	1
 15995  0075B0  0012               	return	
 15996  0075B2                     l20304:
 15997  0075B2  0100               	movlb	0	; () banked
 15998  0075B4  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15999  0075B6  A4D8               	btfss	status,2,c
 16000  0075B8  D013               	goto	l20318
 16001                           
 16002                           ; BSR set to: 0
 16003  0075BA  0101               	movlb	1	; () banked
 16004  0075BC  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 16005  0075BE  A4D8               	btfss	status,2,c
 16006  0075C0  D00F               	goto	l20318
 16007                           
 16008                           ; BSR set to: 1
 16009                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16010  0075C2  0E00               	movlw	0
 16011  0075C4  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16012  0075C6  0E04               	movlw	4
 16013  0075C8  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16014                           
 16015                           ; BSR set to: 1
 16016                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 16017  0075CA  0E15               	movlw	21
 16018  0075CC  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16019  0075CE  0E00               	movlw	0
 16020  0075D0  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16021  0075D2  0E14               	movlw	20
 16022  0075D4  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16023  0075D6  0E05               	movlw	5
 16024  0075D8  ECB7  F046         	call	_SetSegmentValueIntermitent
 16025                           
 16026                           ; BSR set to: 1
 16027                           ;inputs_MC50.c: 760:         return ST;
 16028  0075DC  0E02               	movlw	2
 16029  0075DE  0012               	return	
 16030  0075E0                     l20318:
 16031  0075E0  0100               	movlb	0	; () banked
 16032  0075E2  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 16033  0075E4  A4D8               	btfss	status,2,c
 16034  0075E6  D017               	goto	l20334
 16035                           
 16036                           ; BSR set to: 0
 16037  0075E8  0101               	movlb	1	; () banked
 16038  0075EA  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 16039  0075EC  A4D8               	btfss	status,2,c
 16040  0075EE  D013               	goto	l20334
 16041                           
 16042                           ; BSR set to: 1
 16043  0075F0  0100               	movlb	0	; () banked
 16044  0075F2  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 16045  0075F4  A4D8               	btfss	status,2,c
 16046  0075F6  D00F               	goto	l20334
 16047                           
 16048                           ; BSR set to: 0
 16049                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 16050  0075F8  0E00               	movlw	0
 16051  0075FA  0101               	movlb	1	; () banked
 16052  0075FC  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16053  0075FE  0E04               	movlw	4
 16054  007600  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16055                           
 16056                           ; BSR set to: 1
 16057                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 16058  007602  0E0E               	movlw	14
 16059  007604  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 16060  007606  0E00               	movlw	0
 16061  007608  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 16062  00760A  0E14               	movlw	20
 16063  00760C  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 16064  00760E  0E12               	movlw	18
 16065  007610  ECB7  F046         	call	_SetSegmentValueIntermitent
 16066  007614  D7CC               	goto	l20298
 16067  007616                     l20334:
 16068                           
 16069                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 16070  007616  0E00               	movlw	0
 16071  007618  0012               	return		;funcret
 16072  00761A                     __end_of_GetSecurityStateInOpening:
 16073                           	callstack 0
 16074                           
 16075 ;; *************** function _SetSegmentValueIntermitent *****************
 16076 ;; Defined at:
 16077 ;;		line 201 in file "outputs_MC50.c"
 16078 ;; Parameters:    Size  Location     Type
 16079 ;;  d1              1    wreg     unsigned char 
 16080 ;;  d2              1   15[COMRAM] unsigned char 
 16081 ;;  time            2   16[COMRAM] int 
 16082 ;; Auto vars:     Size  Location     Type
 16083 ;;  d1              1   18[COMRAM] unsigned char 
 16084 ;; Return value:  Size  Location     Type
 16085 ;;                  1    wreg      void 
 16086 ;; Registers used:
 16087 ;;		wreg, status,2, status,0
 16088 ;; Tracked objects:
 16089 ;;		On entry : 3E/0
 16090 ;;		On exit  : 3F/1
 16091 ;;		Unchanged: 0/0
 16092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16093 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16097 ;;Total ram usage:        4 bytes
 16098 ;; Hardware stack levels used: 1
 16099 ;; Hardware stack levels required when called: 4
 16100 ;; This function calls:
 16101 ;;		Nothing
 16102 ;; This function is called by:
 16103 ;;		_GetSecurityStateInOpening
 16104 ;;		_GetSecurityStateInClosing
 16105 ;;		_sm_execute_ControlGate
 16106 ;;		_actionZone_Opening
 16107 ;;		_actionZone_Closing
 16108 ;; This function uses a non-reentrant model
 16109 ;;
 16110                           
 16111                           	psect	text51
 16112  008D6E                     __ptext51:
 16113                           	callstack 0
 16114  008D6E                     _SetSegmentValueIntermitent:
 16115                           	callstack 24
 16116                           
 16117                           ;incstack = 0
 16118                           ;SetSegmentValueIntermitent@d1 stored from wreg
 16119  008D6E  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 16120                           
 16121                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 16122  008D70  0101               	movlb	1	; () banked
 16123  008D72  05ED               	decf	_main_stateMachine& (0+255),w,b
 16124  008D74  11EE               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 16125  008D76  B4D8               	btfsc	status,2,c
 16126  008D78  0012               	return	
 16127                           
 16128                           ; BSR set to: 1
 16129  008D7A  51A8               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 16130  008D7C  11A9               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 16131  008D7E  A4D8               	btfss	status,2,c
 16132  008D80  0012               	return	
 16133                           
 16134                           ; BSR set to: 1
 16135  008D82  0E14               	movlw	20
 16136  008D84  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16137  008D86  0012               	return	
 16138                           
 16139                           ; BSR set to: 1
 16140                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 16141  008D88  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 16142                           
 16143                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 16144  008D8C  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 16145                           
 16146                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 16147  008D90  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 16148  008D94  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 16149                           
 16150                           ; BSR set to: 1
 16151  008D98  0012               	return		;funcret
 16152  008D9A                     __end_of_SetSegmentValueIntermitent:
 16153                           	callstack 0
 16154                           
 16155 ;; *************** function _GetOpenOrder *****************
 16156 ;; Defined at:
 16157 ;;		line 330 in file "inputs_MC50.c"
 16158 ;; Parameters:    Size  Location     Type
 16159 ;;		None
 16160 ;; Auto vars:     Size  Location     Type
 16161 ;;		None
 16162 ;; Return value:  Size  Location     Type
 16163 ;;                  1    wreg      enum E10539
 16164 ;; Registers used:
 16165 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16166 ;; Tracked objects:
 16167 ;;		On entry : 3E/1
 16168 ;;		On exit  : 0/0
 16169 ;;		Unchanged: 0/0
 16170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16175 ;;Total ram usage:        0 bytes
 16176 ;; Hardware stack levels used: 1
 16177 ;; Hardware stack levels required when called: 5
 16178 ;; This function calls:
 16179 ;;		_SetSegmentValueIntermitentMain
 16180 ;;		___lbdiv
 16181 ;; This function is called by:
 16182 ;;		_sm_execute_ControlGate
 16183 ;;		_actionZone_Closed
 16184 ;;		_actionZone_Opening
 16185 ;;		_actionZone_Opened
 16186 ;;		_actionZone_Closing
 16187 ;;		_sm_execute_ControlLearning
 16188 ;; This function uses a non-reentrant model
 16189 ;;
 16190                           
 16191                           	psect	text52
 16192  005440                     __ptext52:
 16193                           	callstack 0
 16194  005440                     _GetOpenOrder:
 16195                           	callstack 23
 16196                           
 16197                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16198                           
 16199                           ; BSR set to: 1
 16200                           ;incstack = 0
 16201  005440  0101               	movlb	1	; () banked
 16202  005442  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16203  005444  A4D8               	btfss	status,2,c
 16204  005446  D0C0               	goto	l20274
 16205                           
 16206                           ; BSR set to: 1
 16207                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16208  005448  BFC5               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16209  00544A  D019               	goto	l20166
 16210  00544C  51C5               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16211  00544E  E103               	bnz	u23160
 16212  005450  05C4               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16213  005452  A0D8               	btfss	status,0,c
 16214  005454  D014               	goto	l20166
 16215  005456                     u23160:
 16216                           
 16217                           ; BSR set to: 1
 16218                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16219  005456  0E01               	movlw	1
 16220  005458  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16221  00545A  0E00               	movlw	0
 16222  00545C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16223  00545E  0E14               	movlw	20
 16224  005460  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16225  005462  0E12               	movlw	18
 16226  005464  ECA9  F049         	call	_SetSegmentValueIntermitentMain
 16227                           
 16228                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16229  005468  0E00               	movlw	0
 16230  00546A  0101               	movlb	1	; () banked
 16231  00546C  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16232  00546E  0E0A               	movlw	10
 16233  005470  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16234                           
 16235                           ; BSR set to: 1
 16236                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16237  005472  0E01               	movlw	1
 16238  005474  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16239                           
 16240                           ; BSR set to: 1
 16241                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16242  005476  0E01               	movlw	1
 16243  005478  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16244  00547A                     l20160:
 16245                           
 16246                           ;inputs_MC50.c: 341:             return NoCMD;
 16247  00547A  0E00               	movlw	0
 16248  00547C  0012               	return	
 16249  00547E                     l20166:
 16250                           
 16251                           ; BSR set to: 1
 16252  00547E  0100               	movlb	0	; () banked
 16253  005480  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16254  005482  B4D8               	btfsc	status,2,c
 16255  005484  D02F               	goto	l20200
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16259  005486  0E35               	movlw	53
 16260  005488  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16261  00548A  A4D8               	btfss	status,2,c
 16262  00548C  D017               	goto	l20184
 16263                           
 16264                           ; BSR set to: 0
 16265                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16266  00548E  0E00               	movlw	0
 16267  005490  0101               	movlb	1	; () banked
 16268  005492  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16269  005494  0E0A               	movlw	10
 16270  005496  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16271                           
 16272                           ; BSR set to: 1
 16273                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16274  005498  0E00               	movlw	0
 16275  00549A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16276  00549C  0E00               	movlw	0
 16277  00549E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16278  0054A0  0E04               	movlw	4
 16279  0054A2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16280  0054A4  0E12               	movlw	18
 16281  0054A6  ECA9  F049         	call	_SetSegmentValueIntermitentMain
 16282                           
 16283                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16284  0054AA  0E02               	movlw	2
 16285  0054AC  0100               	movlb	0	; () banked
 16286  0054AE  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16287  0054B0  A4D8               	btfss	status,2,c
 16288  0054B2  D002               	goto	l20178
 16289  0054B4                     u23190:
 16290                           
 16291                           ; BSR set to: 0
 16292                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16293  0054B4  0E01               	movlw	1
 16294  0054B6  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16295  0054B8                     l20178:
 16296                           
 16297                           ; BSR set to: 0
 16298                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16299  0054B8  0E03               	movlw	3
 16300  0054BA  0012               	return	
 16301  0054BC                     l20184:
 16302                           
 16303                           ; BSR set to: 0
 16304  0054BC  0E33               	movlw	51
 16305  0054BE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16306  0054C0  A4D8               	btfss	status,2,c
 16307  0054C2  D7DB               	goto	l20160
 16308                           
 16309                           ; BSR set to: 0
 16310                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16311  0054C4  0E00               	movlw	0
 16312  0054C6  0101               	movlb	1	; () banked
 16313  0054C8  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16314  0054CA  0E0A               	movlw	10
 16315  0054CC  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16316                           
 16317                           ; BSR set to: 1
 16318                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16319  0054CE  0E05               	movlw	5
 16320  0054D0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16321  0054D2  0E00               	movlw	0
 16322  0054D4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16323  0054D6  0E04               	movlw	4
 16324  0054D8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16325  0054DA  0E12               	movlw	18
 16326  0054DC  ECA9  F049         	call	_SetSegmentValueIntermitentMain
 16327  0054E0                     l20190:
 16328                           
 16329                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16330  0054E0  0E04               	movlw	4
 16331  0054E2  0012               	return	
 16332  0054E4                     l20200:
 16333                           
 16334                           ; BSR set to: 0
 16335  0054E4  0E35               	movlw	53
 16336  0054E6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16337  0054E8  A4D8               	btfss	status,2,c
 16338  0054EA  D016               	goto	l20222
 16339                           
 16340                           ; BSR set to: 0
 16341                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16342  0054EC  0E00               	movlw	0
 16343  0054EE  0101               	movlb	1	; () banked
 16344  0054F0  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16345  0054F2  0E28               	movlw	40
 16346  0054F4  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16347                           
 16348                           ; BSR set to: 1
 16349                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16350  0054F6  0E00               	movlw	0
 16351  0054F8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16352  0054FA  0E00               	movlw	0
 16353  0054FC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16354  0054FE  0E04               	movlw	4
 16355  005500  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16356  005502  0E12               	movlw	18
 16357  005504  ECA9  F049         	call	_SetSegmentValueIntermitentMain
 16358                           
 16359                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16360  005508  0100               	movlb	0	; () banked
 16361  00550A  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16362  00550C  B4D8               	btfsc	status,2,c
 16363  00550E  D7D2               	goto	u23190
 16364  005510                     l20216:
 16365                           
 16366                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16367  005510  0E01               	movlw	1
 16368  005512  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16369                           
 16370                           ;inputs_MC50.c: 382:                 return TypeFull;
 16371  005514  0E01               	movlw	1
 16372  005516  0012               	return	
 16373  005518                     l20222:
 16374                           
 16375                           ; BSR set to: 0
 16376  005518  0E33               	movlw	51
 16377  00551A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16378  00551C  A4D8               	btfss	status,2,c
 16379  00551E  D019               	goto	l20244
 16380                           
 16381                           ; BSR set to: 0
 16382                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16383  005520  0E00               	movlw	0
 16384  005522  0101               	movlb	1	; () banked
 16385  005524  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16386  005526  0E28               	movlw	40
 16387  005528  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16388                           
 16389                           ; BSR set to: 1
 16390                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16391  00552A  0E05               	movlw	5
 16392  00552C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16393  00552E  0E00               	movlw	0
 16394  005530  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16395  005532  0E04               	movlw	4
 16396  005534  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16397  005536  0E12               	movlw	18
 16398  005538  ECA9  F049         	call	_SetSegmentValueIntermitentMain
 16399                           
 16400                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16401  00553C  0100               	movlb	0	; () banked
 16402  00553E  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16403  005540  A4D8               	btfss	status,2,c
 16404  005542  D003               	goto	l20238
 16405                           
 16406                           ; BSR set to: 0
 16407                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16408  005544  0E01               	movlw	1
 16409  005546  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16410  005548  D7CB               	goto	l20190
 16411  00554A                     l20238:
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16415  00554A  0E01               	movlw	1
 16416  00554C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16417                           
 16418                           ; BSR set to: 0
 16419                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16420  00554E  0E02               	movlw	2
 16421  005550  0012               	return	
 16422  005552                     l20244:
 16423                           
 16424                           ; BSR set to: 0
 16425  005552  0E36               	movlw	54
 16426  005554  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16427  005556  A4D8               	btfss	status,2,c
 16428  005558  D00F               	goto	l20258
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16432  00555A  0E00               	movlw	0
 16433  00555C  0101               	movlb	1	; () banked
 16434  00555E  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16435  005560  0E28               	movlw	40
 16436  005562  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16437                           
 16438                           ; BSR set to: 1
 16439                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16440  005564  0E13               	movlw	19
 16441  005566  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16442  005568  0E00               	movlw	0
 16443  00556A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16444  00556C  0E04               	movlw	4
 16445  00556E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16446  005570  0E10               	movlw	16
 16447  005572  ECA9  F049         	call	_SetSegmentValueIntermitentMain
 16448  005576  D7CC               	goto	l20216
 16449  005578                     l20258:
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16453  005578  503B               	movf	_rfCMD^0,w,c	;volatile
 16454  00557A  B4D8               	btfsc	status,2,c
 16455  00557C  D023               	goto	l20270
 16456                           
 16457                           ; BSR set to: 0
 16458  00557E  0E06               	movlw	6
 16459  005580  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16460  005582  B4D8               	btfsc	status,2,c
 16461  005584  D01F               	goto	l20270
 16462                           
 16463                           ; BSR set to: 0
 16464  005586  0E05               	movlw	5
 16465  005588  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16466  00558A  B4D8               	btfsc	status,2,c
 16467  00558C  D01B               	goto	l20270
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16471  00558E  0E0A               	movlw	10
 16472  005590  6E10               	movwf	___lbdiv@divisor^0,c
 16473  005592  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16474  005594  EC03  F046         	call	___lbdiv
 16475  005598  0DF6               	mullw	246
 16476  00559A  50F3               	movf	243,w,c
 16477  00559C  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16478  00559E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16479  0055A0  0E00               	movlw	0
 16480  0055A2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16481  0055A4  0E04               	movlw	4
 16482  0055A6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16483  0055A8  0E0A               	movlw	10
 16484  0055AA  6E10               	movwf	___lbdiv@divisor^0,c
 16485  0055AC  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16486  0055AE  EC03  F046         	call	___lbdiv
 16487  0055B2  ECA9  F049         	call	_SetSegmentValueIntermitentMain
 16488                           
 16489                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16490  0055B6  0E00               	movlw	0
 16491  0055B8  0101               	movlb	1	; () banked
 16492  0055BA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16493  0055BC  0E28               	movlw	40
 16494  0055BE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16495                           
 16496                           ; BSR set to: 1
 16497                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16498  0055C0  0E01               	movlw	1
 16499  0055C2  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16500  0055C4                     l20270:
 16501                           
 16502                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16503  0055C4  503B               	movf	_rfCMD^0,w,c	;volatile
 16504  0055C6  0012               	return	
 16505  0055C8                     l20274:
 16506                           
 16507                           ; BSR set to: 1
 16508                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16509  0055C8  503B               	movf	_rfCMD^0,w,c	;volatile
 16510  0055CA  B4D8               	btfsc	status,2,c
 16511  0055CC  D01B               	goto	l20282
 16512                           
 16513                           ; BSR set to: 1
 16514                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16515  0055CE  0E0A               	movlw	10
 16516  0055D0  6E10               	movwf	___lbdiv@divisor^0,c
 16517  0055D2  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16518  0055D4  EC03  F046         	call	___lbdiv
 16519  0055D8  0DF6               	mullw	246
 16520  0055DA  50F3               	movf	243,w,c
 16521  0055DC  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16522  0055DE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16523  0055E0  0E00               	movlw	0
 16524  0055E2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16525  0055E4  0E04               	movlw	4
 16526  0055E6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16527  0055E8  0E0A               	movlw	10
 16528  0055EA  6E10               	movwf	___lbdiv@divisor^0,c
 16529  0055EC  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16530  0055EE  EC03  F046         	call	___lbdiv
 16531  0055F2  ECA9  F049         	call	_SetSegmentValueIntermitentMain
 16532                           
 16533                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16534  0055F6  0E00               	movlw	0
 16535  0055F8  0101               	movlb	1	; () banked
 16536  0055FA  6FA7               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16537  0055FC  0E14               	movlw	20
 16538  0055FE  6FA6               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16539                           
 16540                           ; BSR set to: 1
 16541                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16542  005600  0E01               	movlw	1
 16543  005602  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16544  005604                     l20282:
 16545                           
 16546                           ; BSR set to: 1
 16547                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16548  005604  503B               	movf	_rfCMD^0,w,c	;volatile
 16549  005606  0012               	return		;funcret
 16550  005608                     __end_of_GetOpenOrder:
 16551                           	callstack 0
 16552                           
 16553 ;; *************** function ___lbdiv *****************
 16554 ;; Defined at:
 16555 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16556 ;; Parameters:    Size  Location     Type
 16557 ;;  dividend        1    wreg     unsigned char 
 16558 ;;  divisor         1   15[COMRAM] unsigned char 
 16559 ;; Auto vars:     Size  Location     Type
 16560 ;;  dividend        1   16[COMRAM] unsigned char 
 16561 ;;  quotient        1   18[COMRAM] unsigned char 
 16562 ;;  counter         1   17[COMRAM] unsigned char 
 16563 ;; Return value:  Size  Location     Type
 16564 ;;                  1    wreg      unsigned char 
 16565 ;; Registers used:
 16566 ;;		wreg, status,2, status,0
 16567 ;; Tracked objects:
 16568 ;;		On entry : 0/0
 16569 ;;		On exit  : 0/0
 16570 ;;		Unchanged: 0/0
 16571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16572 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16573 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16575 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16576 ;;Total ram usage:        4 bytes
 16577 ;; Hardware stack levels used: 1
 16578 ;; Hardware stack levels required when called: 4
 16579 ;; This function calls:
 16580 ;;		Nothing
 16581 ;; This function is called by:
 16582 ;;		_GetOpenOrder
 16583 ;;		_sm_execute_menuConfiguration
 16584 ;; This function uses a non-reentrant model
 16585 ;;
 16586                           
 16587                           	psect	text53
 16588  008C06                     __ptext53:
 16589                           	callstack 0
 16590  008C06                     ___lbdiv:
 16591                           	callstack 24
 16592                           
 16593                           ;incstack = 0
 16594                           ;___lbdiv@dividend stored from wreg
 16595  008C06  6E11               	movwf	___lbdiv@dividend^0,c
 16596  008C08  0E00               	movlw	0
 16597  008C0A  6E13               	movwf	___lbdiv@quotient^0,c
 16598  008C0C  5010               	movf	___lbdiv@divisor^0,w,c
 16599  008C0E  B4D8               	btfsc	status,2,c
 16600  008C10  D015               	goto	l20112
 16601  008C12  0E01               	movlw	1
 16602  008C14  6E12               	movwf	___lbdiv@counter^0,c
 16603  008C16  D003               	goto	l20100
 16604  008C18                     l20096:
 16605  008C18  90D8               	bcf	status,0,c
 16606  008C1A  3610               	rlcf	___lbdiv@divisor^0,f,c
 16607  008C1C  2A12               	incf	___lbdiv@counter^0,f,c
 16608  008C1E                     l20100:
 16609  008C1E  AE10               	btfss	___lbdiv@divisor^0,7,c
 16610  008C20  D7FB               	goto	l20096
 16611  008C22                     u23060:
 16612  008C22  90D8               	bcf	status,0,c
 16613  008C24  3613               	rlcf	___lbdiv@quotient^0,f,c
 16614  008C26  5010               	movf	___lbdiv@divisor^0,w,c
 16615  008C28  5C11               	subwf	___lbdiv@dividend^0,w,c
 16616  008C2A  A0D8               	btfss	status,0,c
 16617  008C2C  D003               	goto	l20108
 16618  008C2E  5010               	movf	___lbdiv@divisor^0,w,c
 16619  008C30  5E11               	subwf	___lbdiv@dividend^0,f,c
 16620  008C32  8013               	bsf	___lbdiv@quotient^0,0,c
 16621  008C34                     l20108:
 16622  008C34  90D8               	bcf	status,0,c
 16623  008C36  3210               	rrcf	___lbdiv@divisor^0,f,c
 16624  008C38  2E12               	decfsz	___lbdiv@counter^0,f,c
 16625  008C3A  D7F3               	goto	u23060
 16626  008C3C                     l20112:
 16627  008C3C  5013               	movf	___lbdiv@quotient^0,w,c
 16628  008C3E  0012               	return		;funcret
 16629  008C40                     __end_of___lbdiv:
 16630                           	callstack 0
 16631                           
 16632 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16633 ;; Defined at:
 16634 ;;		line 193 in file "outputs_MC50.c"
 16635 ;; Parameters:    Size  Location     Type
 16636 ;;  d1              1    wreg     unsigned char 
 16637 ;;  d2              1   27[COMRAM] unsigned char 
 16638 ;;  time            2   28[COMRAM] int 
 16639 ;; Auto vars:     Size  Location     Type
 16640 ;;  d1              1   30[COMRAM] unsigned char 
 16641 ;; Return value:  Size  Location     Type
 16642 ;;                  1    wreg      void 
 16643 ;; Registers used:
 16644 ;;		wreg
 16645 ;; Tracked objects:
 16646 ;;		On entry : 0/1
 16647 ;;		On exit  : 0/0
 16648 ;;		Unchanged: 0/0
 16649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16650 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16654 ;;Total ram usage:        4 bytes
 16655 ;; Hardware stack levels used: 1
 16656 ;; Hardware stack levels required when called: 4
 16657 ;; This function calls:
 16658 ;;		Nothing
 16659 ;; This function is called by:
 16660 ;;		_GetOpenOrder
 16661 ;;		_sm_execute_main
 16662 ;;		_sm_execute_menuConfiguration
 16663 ;;		_load_New_Menu
 16664 ;;		_controlSelectRemote
 16665 ;;		_controlSaveRemote
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text54
 16670  009352                     __ptext54:
 16671                           	callstack 0
 16672  009352                     _SetSegmentValueIntermitentMain:
 16673                           	callstack 22
 16674                           
 16675                           ;incstack = 0
 16676                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16677  009352  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16678                           
 16679                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16680  009354  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16681                           
 16682                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16683  009358  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16684                           
 16685                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16686  00935C  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16687  009360  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16688  009364  0012               	return		;funcret
 16689  009366                     __end_of_SetSegmentValueIntermitentMain:
 16690                           	callstack 0
 16691                           
 16692 ;; *************** function _readbutton *****************
 16693 ;; Defined at:
 16694 ;;		line 471 in file "inputs_MC50.c"
 16695 ;; Parameters:    Size  Location     Type
 16696 ;;		None
 16697 ;; Auto vars:     Size  Location     Type
 16698 ;;		None
 16699 ;; Return value:  Size  Location     Type
 16700 ;;                  1    wreg      void 
 16701 ;; Registers used:
 16702 ;;		wreg, status,2, status,0
 16703 ;; Tracked objects:
 16704 ;;		On entry : 3F/1
 16705 ;;		On exit  : 3F/1
 16706 ;;		Unchanged: 0/0
 16707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16712 ;;Total ram usage:        0 bytes
 16713 ;; Hardware stack levels used: 1
 16714 ;; Hardware stack levels required when called: 4
 16715 ;; This function calls:
 16716 ;;		Nothing
 16717 ;; This function is called by:
 16718 ;;		_main
 16719 ;; This function uses a non-reentrant model
 16720 ;;
 16721                           
 16722                           	psect	text55
 16723  008236                     __ptext55:
 16724                           	callstack 0
 16725  008236                     _readbutton:
 16726                           	callstack 26
 16727                           
 16728                           ; BSR set to: 1
 16729                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16730                           
 16731                           ;incstack = 0
 16732  008236  508E               	movf	142,w,c	;volatile
 16733  008238  0B37               	andlw	55
 16734  00823A  6F96               	movwf	readbutton@key2& (0+255),b
 16735  00823C  F000               	nop		;# 
 16736  00823E  F000               	nop		;# 
 16737  008240  F000               	nop		;# 
 16738                           
 16739                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16740  008242  508E               	movf	142,w,c	;volatile
 16741  008244  0B37               	andlw	55
 16742  008246  0100               	movlb	0	; () banked
 16743  008248  6F86               	movwf	readbutton@key1& (0+255),b
 16744                           
 16745                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16746  00824A  5186               	movf	readbutton@key1& (0+255),w,b
 16747  00824C  0101               	movlb	1	; () banked
 16748  00824E  1996               	xorwf	readbutton@key2& (0+255),w,b
 16749  008250  A4D8               	btfss	status,2,c
 16750  008252  D003               	goto	l16712
 16751                           
 16752                           ; BSR set to: 1
 16753                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16754  008254  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16755                           
 16756                           ;inputs_MC50.c: 488:  }
 16757  008258  D002               	goto	l16714
 16758  00825A                     l16712:
 16759                           
 16760                           ; BSR set to: 1
 16761                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16762  00825A  0E37               	movlw	55
 16763  00825C  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16764  00825E                     l16714:
 16765                           
 16766                           ; BSR set to: 1
 16767                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16768  00825E  0E37               	movlw	55
 16769  008260  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16770  008262  B4D8               	btfsc	status,2,c
 16771  008264  D007               	goto	u19200
 16772                           
 16773                           ; BSR set to: 1
 16774  008266  504C               	movf	_button_struct^0,w,c	;volatile
 16775  008268  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16776  00826A  B4D8               	btfsc	status,2,c
 16777  00826C  D007               	goto	l16722
 16778                           
 16779                           ; BSR set to: 1
 16780  00826E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16781  008270  A4D8               	btfss	status,2,c
 16782  008272  D004               	goto	l16722
 16783  008274                     u19200:
 16784                           
 16785                           ; BSR set to: 1
 16786                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16787  008274  0E00               	movlw	0
 16788  008276  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16789                           
 16790                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16791  008278  0E00               	movlw	0
 16792  00827A  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16793  00827C                     l16722:
 16794                           
 16795                           ; BSR set to: 1
 16796                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16797  00827C  0E37               	movlw	55
 16798  00827E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16799  008280  B4D8               	btfsc	status,2,c
 16800  008282  D007               	goto	l16730
 16801                           
 16802                           ; BSR set to: 1
 16803                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16804  008284  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16805                           
 16806                           ; BSR set to: 1
 16807                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16808  008288  0EFA               	movlw	250
 16809  00828A  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16810  00828C  D004               	goto	l16732
 16811                           
 16812                           ; BSR set to: 1
 16813                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16814  00828E  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16815  008290  D002               	goto	l16732
 16816  008292                     l16730:
 16817                           
 16818                           ; BSR set to: 1
 16819                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16820  008292  0E00               	movlw	0
 16821  008294  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16822  008296                     l16732:
 16823                           
 16824                           ; BSR set to: 1
 16825                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16826  008296  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16827  008298  A4D8               	btfss	status,2,c
 16828  00829A  0012               	return	
 16829                           
 16830                           ; BSR set to: 1
 16831                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16832  00829C  0E37               	movlw	55
 16833  00829E  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16834                           
 16835                           ; BSR set to: 1
 16836  0082A0  0012               	return		;funcret
 16837  0082A2                     __end_of_readbutton:
 16838                           	callstack 0
 16839                           
 16840 ;; *************** function _read_package *****************
 16841 ;; Defined at:
 16842 ;;		line 21 in file "eusartpackage.c"
 16843 ;; Parameters:    Size  Location     Type
 16844 ;;		None
 16845 ;; Auto vars:     Size  Location     Type
 16846 ;;  package         7   23[COMRAM] struct package_t
 16847 ;; Return value:  Size  Location     Type
 16848 ;;                  7   16[COMRAM] struct package_t
 16849 ;; Registers used:
 16850 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16851 ;; Tracked objects:
 16852 ;;		On entry : 3F/0
 16853 ;;		On exit  : 3F/E
 16854 ;;		Unchanged: 0/0
 16855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16856 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16857 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16859 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16860 ;;Total ram usage:       14 bytes
 16861 ;; Hardware stack levels used: 1
 16862 ;; Hardware stack levels required when called: 5
 16863 ;; This function calls:
 16864 ;;		_EUSART1_Read
 16865 ;; This function is called by:
 16866 ;;		_main
 16867 ;; This function uses a non-reentrant model
 16868 ;;
 16869                           
 16870                           	psect	text56
 16871  00879E                     __ptext56:
 16872                           	callstack 0
 16873  00879E                     _read_package:
 16874                           	callstack 25
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16878                           
 16879                           ; BSR set to: 1
 16880                           ;incstack = 0
 16881  00879E  ECB9  F044         	call	_EUSART1_Read	;wreg free
 16882  0087A2  0A0A               	xorlw	10
 16883  0087A4  B4D8               	btfsc	status,2,c
 16884  0087A6  D00C               	goto	l16890
 16885  0087A8                     u19730:
 16886                           
 16887                           ; BSR set to: 14
 16888                           ;eusartpackage.c: 25:             package.valid=0;
 16889  0087A8  0E00               	movlw	0
 16890  0087AA  6E1E               	movwf	(read_package@package+6)^0,c
 16891                           
 16892                           ; BSR set to: 14
 16893                           ;eusartpackage.c: 26:             return package;
 16894  0087AC  EE20  F018         	lfsr	2,read_package@package
 16895  0087B0  EE00  F011         	lfsr	0,?_read_package
 16896  0087B4  0E06               	movlw	6
 16897  0087B6                     u19741:
 16898  0087B6  CFDB FFEB          	movff	plusw2,plusw0
 16899  0087BA  06E8               	decf	wreg,f,c
 16900  0087BC  E2FC               	bc	u19741
 16901  0087BE  0012               	return	
 16902  0087C0                     l16890:
 16903                           
 16904                           ; BSR set to: 14
 16905                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16906  0087C0  0E0A               	movlw	10
 16907  0087C2  6E1C               	movwf	(read_package@package+4)^0,c
 16908                           
 16909                           ; BSR set to: 14
 16910                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16911  0087C4  ECB9  F044         	call	_EUSART1_Read	;wreg free
 16912  0087C8  6E18               	movwf	read_package@package^0,c
 16913                           
 16914                           ; BSR set to: 14
 16915                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16916  0087CA  ECB9  F044         	call	_EUSART1_Read	;wreg free
 16917  0087CE  6E19               	movwf	(read_package@package+1)^0,c
 16918                           
 16919                           ; BSR set to: 14
 16920                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16921  0087D0  ECB9  F044         	call	_EUSART1_Read	;wreg free
 16922  0087D4  6E1A               	movwf	(read_package@package+2)^0,c
 16923                           
 16924                           ; BSR set to: 14
 16925                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16926  0087D6  ECB9  F044         	call	_EUSART1_Read	;wreg free
 16927  0087DA  6E1B               	movwf	(read_package@package+3)^0,c
 16928                           
 16929                           ; BSR set to: 14
 16930                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16931  0087DC  ECB9  F044         	call	_EUSART1_Read	;wreg free
 16932  0087E0  0A0D               	xorlw	13
 16933  0087E2  A4D8               	btfss	status,2,c
 16934  0087E4  D7E1               	goto	u19730
 16935                           
 16936                           ; BSR set to: 14
 16937                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16938  0087E6  0E0D               	movlw	13
 16939  0087E8  6E1D               	movwf	(read_package@package+5)^0,c
 16940                           
 16941                           ; BSR set to: 14
 16942                           ;eusartpackage.c: 46:         package.valid=1;
 16943  0087EA  0E01               	movlw	1
 16944  0087EC  D7DE               	goto	L76
 16945  0087EE                     __end_of_read_package:
 16946                           	callstack 0
 16947                           
 16948 ;; *************** function _EUSART1_Read *****************
 16949 ;; Defined at:
 16950 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16951 ;; Parameters:    Size  Location     Type
 16952 ;;		None
 16953 ;; Auto vars:     Size  Location     Type
 16954 ;;  readValue       1   15[COMRAM] unsigned char 
 16955 ;; Return value:  Size  Location     Type
 16956 ;;                  1    wreg      unsigned char 
 16957 ;; Registers used:
 16958 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16959 ;; Tracked objects:
 16960 ;;		On entry : 31/0
 16961 ;;		On exit  : 3F/E
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16968 ;;Total ram usage:        1 bytes
 16969 ;; Hardware stack levels used: 1
 16970 ;; Hardware stack levels required when called: 4
 16971 ;; This function calls:
 16972 ;;		Nothing
 16973 ;; This function is called by:
 16974 ;;		_read_package
 16975 ;; This function uses a non-reentrant model
 16976 ;;
 16977                           
 16978                           	psect	text57
 16979  008972                     __ptext57:
 16980                           	callstack 0
 16981  008972                     _EUSART1_Read:
 16982                           	callstack 25
 16983                           
 16984                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16985                           
 16986                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16987                           
 16988                           ; BSR set to: 14
 16989                           ;incstack = 0
 16990  008972  0100               	movlb	0	; () banked
 16991  008974  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16992  008976  B4D8               	btfsc	status,2,c
 16993  008978  D7FC               	goto	__ptext57
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16997  00897A  0E74               	movlw	low _eusart1RxStatusBuffer
 16998  00897C  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16999  00897E  6ED9               	movwf	fsr2l,c
 17000  008980  6ADA               	clrf	fsr2h,c
 17001  008982  0E02               	movlw	high _eusart1RxStatusBuffer
 17002  008984  22DA               	addwfc	fsr2h,f,c
 17003  008986  50DF               	movf	indf2,w,c
 17004  008988  0101               	movlb	1	; () banked
 17005  00898A  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 17006                           
 17007                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 17008  00898C  0E7C               	movlw	low _eusart1RxBuffer
 17009  00898E  0100               	movlb	0	; () banked
 17010  008990  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 17011  008992  6ED9               	movwf	fsr2l,c
 17012  008994  6ADA               	clrf	fsr2h,c
 17013  008996  0E02               	movlw	high _eusart1RxBuffer
 17014  008998  22DA               	addwfc	fsr2h,f,c
 17015  00899A  50DF               	movf	indf2,w,c
 17016  00899C  6E10               	movwf	EUSART1_Read@readValue^0,c
 17017                           
 17018                           ; BSR set to: 0
 17019  00899E  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 17020                           
 17021                           ; BSR set to: 0
 17022                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 17023  0089A0  0E07               	movlw	7
 17024  0089A2  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 17025  0089A4  D002               	goto	l14114
 17026                           
 17027                           ; BSR set to: 0
 17028                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 17029  0089A6  0E00               	movlw	0
 17030  0089A8  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 17031  0089AA                     l14114:
 17032                           
 17033                           ; BSR set to: 0
 17034                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 17035  0089AA  010E               	movlb	14	; () banked
 17036  0089AC  9BC5               	bcf	197,5,b	;volatile
 17037                           
 17038                           ; BSR set to: 14
 17039                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 17040  0089AE  0100               	movlb	0	; () banked
 17041  0089B0  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 17042                           
 17043                           ; BSR set to: 0
 17044                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 17045  0089B2  010E               	movlb	14	; () banked
 17046  0089B4  8BC5               	bsf	197,5,b	;volatile
 17047                           
 17048                           ; BSR set to: 14
 17049                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 17050  0089B6  5010               	movf	EUSART1_Read@readValue^0,w,c
 17051                           
 17052                           ; BSR set to: 14
 17053  0089B8  0012               	return		;funcret
 17054  0089BA                     __end_of_EUSART1_Read:
 17055                           	callstack 0
 17056                           
 17057 ;; *************** function _readRFButtons *****************
 17058 ;; Defined at:
 17059 ;;		line 231 in file "inputs_MC50.c"
 17060 ;; Parameters:    Size  Location     Type
 17061 ;;		None
 17062 ;; Auto vars:     Size  Location     Type
 17063 ;;		None
 17064 ;; Return value:  Size  Location     Type
 17065 ;;                  1    wreg      void 
 17066 ;; Registers used:
 17067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17068 ;; Tracked objects:
 17069 ;;		On entry : 3F/1
 17070 ;;		On exit  : 3E/0
 17071 ;;		Unchanged: 0/0
 17072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17077 ;;Total ram usage:        0 bytes
 17078 ;; Hardware stack levels used: 1
 17079 ;; Hardware stack levels required when called: 15
 17080 ;; This function calls:
 17081 ;;		_DecryptPacket_12BIT
 17082 ;;		_keeloqDecryptPacket
 17083 ;; This function is called by:
 17084 ;;		_main
 17085 ;; This function uses a non-reentrant model
 17086 ;;
 17087                           
 17088                           	psect	text58
 17089  005C78                     __ptext58:
 17090                           	callstack 0
 17091  005C78                     _readRFButtons:
 17092                           	callstack 15
 17093                           
 17094                           ; BSR set to: 1
 17095                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 17096                           
 17097                           ; BSR set to: 14
 17098                           ;incstack = 0
 17099  005C78  0100               	movlb	0	; () banked
 17100  005C7A  518B               	movf	_RFFull& (0+255),w,b	;volatile
 17101  005C7C  B4D8               	btfsc	status,2,c
 17102  005C7E  D0B9               	goto	l22952
 17103                           
 17104                           ; BSR set to: 0
 17105                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 17106  005C80  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 17107  005C82  A4D8               	btfss	status,2,c
 17108  005C84  D00B               	goto	l22898
 17109                           
 17110                           ; BSR set to: 0
 17111                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 17112  005C86  0EC8               	movlw	low _BufferRF
 17113  005C88  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 17114  005C8A  0E02               	movlw	high _BufferRF
 17115  005C8C  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 17116  005C8E  0E92               	movlw	low _classic_data
 17117  005C90  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 17118  005C92  0E02               	movlw	high _classic_data
 17119  005C94  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 17120  005C96  EC37  F029         	call	_keeloqDecryptPacket	;wreg free
 17121  005C9A  D00A               	goto	L77
 17122  005C9C                     l22898:
 17123                           
 17124                           ; BSR set to: 0
 17125                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 17126  005C9C  0EC8               	movlw	low _BufferRF
 17127  005C9E  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 17128  005CA0  0E02               	movlw	high _BufferRF
 17129  005CA2  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 17130  005CA4  0E92               	movlw	low _classic_data
 17131  005CA6  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 17132  005CA8  0E02               	movlw	high _classic_data
 17133  005CAA  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 17134  005CAC  EC37  F03C         	call	_DecryptPacket_12BIT	;wreg free
 17135  005CB0                     L77:
 17136  005CB0  6F87               	movwf	readRFButtons@keyType& (0+255),b
 17137                           
 17138                           ; BSR set to: 0
 17139                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 17140  005CB2  C29E  F088         	movff	_classic_data+12,readRFButtons@key1
 17141                           
 17142                           ; BSR set to: 0
 17143                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 17144  005CB6  C296  F181         	movff	_classic_data+4,readRFButtons@serial
 17145  005CBA  C297  F182         	movff	_classic_data+5,readRFButtons@serial+1
 17146  005CBE  C298  F183         	movff	_classic_data+6,readRFButtons@serial+2
 17147  005CC2  C299  F184         	movff	_classic_data+7,readRFButtons@serial+3
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 17151  005CC6  C29A  F185         	movff	_classic_data+8,readRFButtons@rollingCode
 17152  005CCA  C29B  F186         	movff	_classic_data+9,readRFButtons@rollingCode+1
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 17156  005CCE  C2A0  F197         	movff	_classic_data+14,readRFButtons@typeRemote
 17157                           
 17158                           ; BSR set to: 0
 17159                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 17160  005CD2  0101               	movlb	1	; () banked
 17161  005CD4  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 17162  005CD6  A4D8               	btfss	status,2,c
 17163  005CD8  D01E               	goto	l22920
 17164                           
 17165                           ; BSR set to: 1
 17166                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 17167  005CDA  0100               	movlb	0	; () banked
 17168  005CDC  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17169  005CDE  B4D8               	btfsc	status,2,c
 17170  005CE0  D044               	goto	u27900
 17171                           
 17172                           ; BSR set to: 0
 17173  005CE2  5188               	movf	readRFButtons@key1& (0+255),w,b
 17174  005CE4  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17175  005CE6  A4D8               	btfss	status,2,c
 17176  005CE8  D040               	goto	u27900
 17177                           
 17178                           ; BSR set to: 0
 17179  005CEA  0101               	movlb	1	; () banked
 17180  005CEC  5181               	movf	readRFButtons@serial& (0+255),w,b
 17181  005CEE  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17182  005CF0  E13C               	bnz	l22932
 17183  005CF2  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17184  005CF4  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17185  005CF6  E139               	bnz	l22932
 17186  005CF8  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17187  005CFA  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17188  005CFC  E136               	bnz	l22932
 17189  005CFE  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17190  005D00  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17191  005D02  A4D8               	btfss	status,2,c
 17192  005D04  D032               	goto	u27900
 17193                           
 17194                           ; BSR set to: 1
 17195  005D06  0100               	movlb	0	; () banked
 17196  005D08  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17197  005D0A  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17198  005D0C  A4D8               	btfss	status,2,c
 17199  005D0E  D02D               	goto	u27900
 17200  005D10                     l1649:
 17201                           
 17202                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17203  005D10  0E00               	movlw	0
 17204  005D12  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17205                           
 17206                           ;inputs_MC50.c: 275:         }
 17207  005D14  D038               	goto	l1652
 17208  005D16                     l22920:
 17209                           
 17210                           ; BSR set to: 1
 17211  005D16  0100               	movlb	0	; () banked
 17212  005D18  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17213  005D1A  B4D8               	btfsc	status,2,c
 17214  005D1C  D026               	goto	u27900
 17215                           
 17216                           ; BSR set to: 0
 17217  005D1E  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17218  005D20  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17219  005D22  B4D8               	btfsc	status,2,c
 17220  005D24  D00F               	goto	u27880
 17221                           
 17222                           ; BSR set to: 0
 17223  005D26  0101               	movlb	1	; () banked
 17224  005D28  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17225  005D2A  D005               	goto	u27870
 17226  005D2C  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17227  005D2E  E10A               	bnz	l22928
 17228  005D30  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17229  005D32  B0D8               	btfsc	status,0,c
 17230  005D34  D007               	goto	u27880
 17231  005D36                     u27870:
 17232                           
 17233                           ; BSR set to: 1
 17234  005D36  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17235  005D38  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17236  005D3A  E117               	bnz	l22932
 17237  005D3C  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17238  005D3E  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17239  005D40  A4D8               	btfss	status,2,c
 17240  005D42  D013               	goto	u27900
 17241  005D44                     u27880:
 17242  005D44                     l22928:
 17243  005D44  0100               	movlb	0	; () banked
 17244  005D46  5188               	movf	readRFButtons@key1& (0+255),w,b
 17245  005D48  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17246  005D4A  A4D8               	btfss	status,2,c
 17247  005D4C  D00E               	goto	u27900
 17248                           
 17249                           ; BSR set to: 0
 17250  005D4E  0101               	movlb	1	; () banked
 17251  005D50  5181               	movf	readRFButtons@serial& (0+255),w,b
 17252  005D52  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17253  005D54  E10A               	bnz	u27900
 17254  005D56  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17255  005D58  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17256  005D5A  E107               	bnz	u27900
 17257  005D5C  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17258  005D5E  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17259  005D60  E104               	bnz	u27900
 17260  005D62  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17261  005D64  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17262  005D66  B4D8               	btfsc	status,2,c
 17263  005D68  D003               	goto	l22934
 17264  005D6A                     u27900:
 17265  005D6A                     l22932:
 17266                           
 17267                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17268  005D6A  0E00               	movlw	0
 17269  005D6C  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17270  005D6E  D7D0               	goto	l1649
 17271  005D70                     l22934:
 17272                           
 17273                           ; BSR set to: 1
 17274  005D70  BFAF               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17275  005D72  D005               	goto	u27910
 17276  005D74  51AF               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17277  005D76  E107               	bnz	l1652
 17278  005D78  05AE               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17279  005D7A  B0D8               	btfsc	status,0,c
 17280  005D7C  D004               	goto	l1652
 17281  005D7E                     u27910:
 17282                           
 17283                           ; BSR set to: 1
 17284  005D7E  0E02               	movlw	2
 17285  005D80  1997               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17286  005D82  B4D8               	btfsc	status,2,c
 17287  005D84  D7F2               	goto	u27900
 17288  005D86                     l1652:
 17289                           
 17290                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17291  005D86  0E00               	movlw	0
 17292  005D88  0101               	movlb	1	; () banked
 17293  005D8A  6FAF               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17294  005D8C  0E0A               	movlw	10
 17295  005D8E  6FAE               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17296                           
 17297                           ; BSR set to: 1
 17298                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17299  005D90  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17300                           
 17301                           ;inputs_MC50.c: 292:         if
 17302  005D94  503B               	movf	_rfCMD^0,w,c	;volatile
 17303  005D96  B4D8               	btfsc	status,2,c
 17304  005D98  D01A               	goto	u27960
 17305                           
 17306                           ; BSR set to: 1
 17307  005D9A  0100               	movlb	0	; () banked
 17308  005D9C  5188               	movf	readRFButtons@key1& (0+255),w,b
 17309  005D9E  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17310  005DA0  A4D8               	btfss	status,2,c
 17311  005DA2  D015               	goto	u27960
 17312                           
 17313                           ; BSR set to: 0
 17314  005DA4  0101               	movlb	1	; () banked
 17315  005DA6  5181               	movf	readRFButtons@serial& (0+255),w,b
 17316  005DA8  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17317  005DAA  E111               	bnz	l1662
 17318  005DAC  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17319  005DAE  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17320  005DB0  E10E               	bnz	l1662
 17321  005DB2  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17322  005DB4  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17323  005DB6  E10B               	bnz	l1662
 17324  005DB8  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17325  005DBA  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17326  005DBC  A4D8               	btfss	status,2,c
 17327  005DBE  D007               	goto	u27960
 17328                           
 17329                           ; BSR set to: 1
 17330  005DC0  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17331  005DC2  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17332  005DC4  E104               	bnz	u27960
 17333  005DC6  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17334  005DC8  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17335  005DCA  B4D8               	btfsc	status,2,c
 17336  005DCC  D00E               	goto	l22950
 17337  005DCE                     u27960:
 17338  005DCE                     l1662:
 17339                           
 17340                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17341  005DCE  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17342                           
 17343                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17344  005DD2  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17345  005DD6  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17346  005DDA  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17347  005DDE  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17348                           
 17349                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17350  005DE2  C2A1  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17351                           
 17352                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17353  005DE6  0E00               	movlw	0
 17354  005DE8  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17355  005DEA                     l22950:
 17356                           
 17357                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17358  005DEA  C185  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17359  005DEE  C186  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17360  005DF2                     l22952:
 17361                           
 17362                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17363  005DF2  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17364  005DF4  A4D8               	btfss	status,2,c
 17365  005DF6  D003               	goto	l22956
 17366                           
 17367                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17368  005DF8  0E00               	movlw	0
 17369  005DFA  6E3B               	movwf	_rfCMD^0,c	;volatile
 17370                           
 17371                           ;inputs_MC50.c: 313:     }
 17372  005DFC  0012               	return	
 17373  005DFE                     l22956:
 17374  005DFE  503B               	movf	_rfCMD^0,w,c	;volatile
 17375  005E00  B4D8               	btfsc	status,2,c
 17376  005E02  0012               	return	
 17377                           
 17378                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17379  005E04  0EFA               	movlw	250
 17380  005E06  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17381  005E08  0012               	return	
 17382                           
 17383                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17384  005E0A  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17385  005E0C  0012               	return		;funcret
 17386  005E0E                     __end_of_readRFButtons:
 17387                           	callstack 0
 17388                           
 17389 ;; *************** function _keeloqDecryptPacket *****************
 17390 ;; Defined at:
 17391 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17392 ;; Parameters:    Size  Location     Type
 17393 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17394 ;;		 -> BufferRF(9), 
 17395 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17396 ;;		 -> classic_data(16), 
 17397 ;; Auto vars:     Size  Location     Type
 17398 ;;  commandType     1   17[BANK0 ] enum E10539
 17399 ;;  hop_error       1   16[BANK0 ] enum E10730
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  1    wreg      enum E10539
 17402 ;; Registers used:
 17403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17404 ;; Tracked objects:
 17405 ;;		On entry : 3F/0
 17406 ;;		On exit  : 3F/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17409 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17410 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17411 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17412 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17413 ;;Total ram usage:       10 bytes
 17414 ;; Hardware stack levels used: 1
 17415 ;; Hardware stack levels required when called: 14
 17416 ;; This function calls:
 17417 ;;		_DecCHK
 17418 ;;		_HopCHK
 17419 ;;		_keeloq_classic_decrypt_packet
 17420 ;;		_memcpy
 17421 ;;		_validateRemoteSerialNumber
 17422 ;;		_verifyProgramingMode
 17423 ;; This function is called by:
 17424 ;;		_readRFButtons
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428                           	psect	text59
 17429  00526E                     __ptext59:
 17430                           	callstack 0
 17431  00526E                     _keeloqDecryptPacket:
 17432                           	callstack 15
 17433                           
 17434                           ; BSR set to: 0
 17435                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17436                           
 17437                           ;incstack = 0
 17438  00526E  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17439  005272  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17440  005276  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17441  00527A  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17442  00527E  0E00               	movlw	0
 17443  005280  6E15               	movwf	(memcpy@n+1)^0,c
 17444  005282  0E08               	movlw	8
 17445  005284  6E14               	movwf	memcpy@n^0,c
 17446  005286  EC22  F045         	call	_memcpy	;wreg free
 17447                           
 17448                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17449  00528A  0E08               	movlw	8
 17450  00528C  0100               	movlb	0	; () banked
 17451  00528E  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17452  005290  6E10               	movwf	memcpy@d1^0,c
 17453  005292  0E00               	movlw	0
 17454  005294  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17455  005296  6E11               	movwf	(memcpy@d1+1)^0,c
 17456  005298  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17457  00529C  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17458  0052A0  0E00               	movlw	0
 17459  0052A2  6E15               	movwf	(memcpy@n+1)^0,c
 17460  0052A4  0E04               	movlw	4
 17461  0052A6  6E14               	movwf	memcpy@n^0,c
 17462  0052A8  EC22  F045         	call	_memcpy	;wreg free
 17463                           
 17464                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17465  0052AC  0100               	movlb	0	; () banked
 17466  0052AE  EE20 F00C          	lfsr	2,12
 17467  0052B2  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17468  0052B4  26D9               	addwf	fsr2l,f,c
 17469  0052B6  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17470  0052B8  22DA               	addwfc	fsr2h,f,c
 17471  0052BA  EE10 F007          	lfsr	1,7
 17472  0052BE  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17473  0052C0  26E1               	addwf	fsr1l,f,c
 17474  0052C2  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17475  0052C4  22E2               	addwfc	fsr1h,f,c
 17476  0052C6  50E7               	movf	indf1,w,c
 17477  0052C8  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17478  0052CA  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17479  0052CC  0B0F               	andlw	15
 17480  0052CE  6EDF               	movwf	indf2,c
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17484  0052D0  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17485  0052D4  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17486  0052D8  EC3C  F046         	call	_verifyProgramingMode	;wreg free
 17487  0052DC  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17488                           
 17489                           ; BSR set to: 0
 17490                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17491  0052DE  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17492  0052E0  A4D8               	btfss	status,2,c
 17493  0052E2  D019               	goto	l21436
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17497  0052E4  EE20 F004          	lfsr	2,4
 17498  0052E8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17499  0052EA  26D9               	addwf	fsr2l,f,c
 17500  0052EC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17501  0052EE  22DA               	addwfc	fsr2h,f,c
 17502  0052F0  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17503  0052F4  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17504  0052F8  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17505  0052FC  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17506  005300  0E00               	movlw	0
 17507  005302  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17508  005304  0E0F               	movlw	15
 17509  005306  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17510  005308  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17511  00530A  0E00               	movlw	0
 17512  00530C  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17513  00530E  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17514  005310  ECD4  F02B         	call	_validateRemoteSerialNumber	;wreg free
 17515  005314  D004               	goto	L78
 17516  005316                     l21436:
 17517                           
 17518                           ; BSR set to: 0
 17519  005316  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17520  005318  A4D8               	btfss	status,2,c
 17521  00531A  D002               	goto	l21440
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17525  00531C  0E00               	movlw	0
 17526  00531E                     L78:
 17527  00531E  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17528  005320                     l21440:
 17529                           
 17530                           ; BSR set to: 0
 17531                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17532  005320  EE20 F004          	lfsr	2,4
 17533  005324  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17534  005326  26D9               	addwf	fsr2l,f,c
 17535  005328  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17536  00532A  22DA               	addwfc	fsr2h,f,c
 17537  00532C  0EFF               	movlw	255
 17538  00532E  14DE               	andwf	postinc2,w,c
 17539  005330  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17540  005332  0EFF               	movlw	255
 17541  005334  14DE               	andwf	postinc2,w,c
 17542  005336  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17543  005338  0EFF               	movlw	255
 17544  00533A  14DE               	andwf	postinc2,w,c
 17545  00533C  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17546  00533E  0E0F               	movlw	15
 17547  005340  14DE               	andwf	postinc2,w,c
 17548  005342  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17549  005344  EE20 F004          	lfsr	2,4
 17550  005348  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17551  00534A  26D9               	addwf	fsr2l,f,c
 17552  00534C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17553  00534E  22DA               	addwfc	fsr2h,f,c
 17554  005350  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17555  005354  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17556  005358  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17557  00535C  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17558                           
 17559                           ; BSR set to: 0
 17560                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17561  005360  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17562  005364  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17563  005368  ECCF  F042         	call	_keeloq_classic_decrypt_packet	;wreg free
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17567  00536C  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17568  00536E  A4D8               	btfss	status,2,c
 17569  005370  D01B               	goto	l21458
 17570                           
 17571                           ; BSR set to: 0
 17572                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17573  005372  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17574  005376  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17575  00537A  EC56  F046         	call	_DecCHK	;wreg free
 17576  00537E  0900               	iorlw	0
 17577  005380  A4D8               	btfss	status,2,c
 17578  005382  D008               	goto	l21450
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17582  005384  EE20 F00E          	lfsr	2,14
 17583  005388  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17584  00538A  26D9               	addwf	fsr2l,f,c
 17585  00538C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17586  00538E  22DA               	addwfc	fsr2h,f,c
 17587  005390  0E01               	movlw	1
 17588  005392  D007               	goto	L79
 17589  005394                     l21450:
 17590                           
 17591                           ; BSR set to: 0
 17592                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17593  005394  EE20 F00E          	lfsr	2,14
 17594  005398  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17595  00539A  26D9               	addwf	fsr2l,f,c
 17596  00539C  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17597  00539E  22DA               	addwfc	fsr2h,f,c
 17598  0053A0  0E00               	movlw	0
 17599  0053A2                     L79:
 17600  0053A2  6EDF               	movwf	indf2,c
 17601  0053A4                     l21452:
 17602                           
 17603                           ; BSR set to: 0
 17604                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17605  0053A4  0E00               	movlw	0
 17606  0053A6  0012               	return	
 17607  0053A8                     l21458:
 17608                           
 17609                           ; BSR set to: 0
 17610  0053A8  0E06               	movlw	6
 17611  0053AA  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17612  0053AC  B4D8               	btfsc	status,2,c
 17613  0053AE  D004               	goto	u24860
 17614                           
 17615                           ; BSR set to: 0
 17616  0053B0  0E05               	movlw	5
 17617  0053B2  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17618  0053B4  A4D8               	btfss	status,2,c
 17619  0053B6  D01B               	goto	l21468
 17620  0053B8                     u24860:
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17624  0053B8  EE20 F004          	lfsr	2,4
 17625  0053BC  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17626  0053BE  26D9               	addwf	fsr2l,f,c
 17627  0053C0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17628  0053C2  22DA               	addwfc	fsr2h,f,c
 17629  0053C4  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17630  0053C8  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17631  0053CC  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17632  0053D0  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17633  0053D4  0E01               	movlw	1
 17634  0053D6  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17635  0053D8  0E0F               	movlw	15
 17636  0053DA  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17637  0053DC  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17638  0053DE  0E00               	movlw	0
 17639  0053E0  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17640  0053E2  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17641  0053E4  ECD4  F02B         	call	_validateRemoteSerialNumber	;wreg free
 17642  0053E8  0900               	iorlw	0
 17643  0053EA  B4D8               	btfsc	status,2,c
 17644  0053EC  D7DB               	goto	l21452
 17645  0053EE                     l21468:
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17649  0053EE  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17650  0053F2  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17651  0053F6  EC56  F046         	call	_DecCHK	;wreg free
 17652  0053FA  0900               	iorlw	0
 17653  0053FC  A4D8               	btfss	status,2,c
 17654  0053FE  D00D               	goto	l21484
 17655                           
 17656                           ; BSR set to: 0
 17657                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17658  005400  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17659  005402  B4D8               	btfsc	status,2,c
 17660  005404  D7CF               	goto	l21452
 17661                           
 17662                           ; BSR set to: 0
 17663                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17664  005406  EE20 F00E          	lfsr	2,14
 17665  00540A  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17666  00540C  26D9               	addwf	fsr2l,f,c
 17667  00540E  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17668  005410  22DA               	addwfc	fsr2h,f,c
 17669  005412  0E01               	movlw	1
 17670  005414  6EDF               	movwf	indf2,c
 17671                           
 17672                           ; BSR set to: 0
 17673                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17674  005416  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17675  005418  0012               	return	
 17676  00541A                     l21484:
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17680  00541A  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17681  00541E  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17682  005422  EC09  F03D         	call	_HopCHK	;wreg free
 17683  005426  0100               	movlb	0	; () banked
 17684  005428  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17688  00542A  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17689  00542C  A4D8               	btfss	status,2,c
 17690  00542E  D7BA               	goto	l21452
 17691                           
 17692                           ; BSR set to: 0
 17693                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17694  005430  EE20 F00E          	lfsr	2,14
 17695  005434  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17696  005436  26D9               	addwf	fsr2l,f,c
 17697  005438  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17698  00543A  22DA               	addwfc	fsr2h,f,c
 17699  00543C  0E00               	movlw	0
 17700  00543E  D7EA               	goto	L80
 17701  005440                     __end_of_keeloqDecryptPacket:
 17702                           	callstack 0
 17703                           
 17704 ;; *************** function _verifyProgramingMode *****************
 17705 ;; Defined at:
 17706 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17707 ;; Parameters:    Size  Location     Type
 17708 ;;  classic_data    2   15[COMRAM] PTR struct .
 17709 ;;		 -> classic_data(16), 
 17710 ;; Auto vars:     Size  Location     Type
 17711 ;;		None
 17712 ;; Return value:  Size  Location     Type
 17713 ;;                  1    wreg      enum E10539
 17714 ;; Registers used:
 17715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17716 ;; Tracked objects:
 17717 ;;		On entry : 3F/0
 17718 ;;		On exit  : 3F/0
 17719 ;;		Unchanged: 3F/0
 17720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17724 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17725 ;;Total ram usage:        3 bytes
 17726 ;; Hardware stack levels used: 1
 17727 ;; Hardware stack levels required when called: 4
 17728 ;; This function calls:
 17729 ;;		Nothing
 17730 ;; This function is called by:
 17731 ;;		_keeloqDecryptPacket
 17732 ;; This function uses a non-reentrant model
 17733 ;;
 17734                           
 17735                           	psect	text60
 17736  008C78                     __ptext60:
 17737                           	callstack 0
 17738  008C78                     _verifyProgramingMode:
 17739                           	callstack 24
 17740                           
 17741                           ; BSR set to: 0
 17742                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;incstack = 0
 17746  008C78  EE20 F00C          	lfsr	2,12
 17747  008C7C  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17748  008C7E  26D9               	addwf	fsr2l,f,c
 17749  008C80  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17750  008C82  22DA               	addwfc	fsr2h,f,c
 17751  008C84  0E0A               	movlw	10
 17752  008C86  18DE               	xorwf	postinc2,w,c
 17753  008C88  A4D8               	btfss	status,2,c
 17754  008C8A  D002               	goto	l20442
 17755                           
 17756                           ; BSR set to: 0
 17757                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17758  008C8C  0E06               	movlw	6
 17759  008C8E  0012               	return	
 17760  008C90                     l20442:
 17761                           
 17762                           ; BSR set to: 0
 17763  008C90  EE20 F00C          	lfsr	2,12
 17764  008C94  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17765  008C96  26D9               	addwf	fsr2l,f,c
 17766  008C98  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17767  008C9A  22DA               	addwfc	fsr2h,f,c
 17768  008C9C  0E05               	movlw	5
 17769  008C9E  18DE               	xorwf	postinc2,w,c
 17770  008CA0  A4D8               	btfss	status,2,c
 17771  008CA2  D002               	goto	l20450
 17772                           
 17773                           ; BSR set to: 0
 17774                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17775  008CA4  0E05               	movlw	5
 17776  008CA6  0012               	return	
 17777  008CA8                     l20450:
 17778                           
 17779                           ; BSR set to: 0
 17780                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17781  008CA8  0E00               	movlw	0
 17782                           
 17783                           ; BSR set to: 0
 17784  008CAA  0012               	return		;funcret
 17785  008CAC                     __end_of_verifyProgramingMode:
 17786                           	callstack 0
 17787                           
 17788 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17789 ;; Defined at:
 17790 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17791 ;; Parameters:    Size  Location     Type
 17792 ;;  data            2   55[COMRAM] PTR struct .
 17793 ;;		 -> classic_data(16), 
 17794 ;; Auto vars:     Size  Location     Type
 17795 ;;		None
 17796 ;; Return value:  Size  Location     Type
 17797 ;;                  1    wreg      void 
 17798 ;; Registers used:
 17799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17800 ;; Tracked objects:
 17801 ;;		On entry : 3F/0
 17802 ;;		On exit  : 3F/0
 17803 ;;		Unchanged: 0/0
 17804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17807 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17808 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17809 ;;Total ram usage:        5 bytes
 17810 ;; Hardware stack levels used: 1
 17811 ;; Hardware stack levels required when called: 7
 17812 ;; This function calls:
 17813 ;;		_Decrypt
 17814 ;;		_NormalKeyGen
 17815 ;; This function is called by:
 17816 ;;		_keeloqDecryptPacket
 17817 ;; This function uses a non-reentrant model
 17818 ;;
 17819                           
 17820                           	psect	text61
 17821  00859E                     __ptext61:
 17822                           	callstack 0
 17823  00859E                     _keeloq_classic_decrypt_packet:
 17824                           	callstack 21
 17825                           
 17826                           ; BSR set to: 0
 17827                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17828                           
 17829                           ; BSR set to: 0
 17830                           ;incstack = 0
 17831  00859E  0E04               	movlw	4
 17832  0085A0  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17833  0085A2  6E26               	movwf	NormalKeyGen@serial^0,c
 17834  0085A4  0E00               	movlw	0
 17835  0085A6  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17836  0085A8  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17837  0085AA  ECCA  F034         	call	_NormalKeyGen	;wreg free
 17838                           
 17839                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17840  0085AE  0E08               	movlw	8
 17841  0085B0  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17842  0085B2  6E1B               	movwf	Decrypt@packet^0,c
 17843  0085B4  0E00               	movlw	0
 17844  0085B6  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17845  0085B8  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17846  0085BA  EC31  F038         	call	_Decrypt	;wreg free
 17847                           
 17848                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17849  0085BE  EE20 F00D          	lfsr	2,13
 17850  0085C2  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17851  0085C4  26D9               	addwf	fsr2l,f,c
 17852  0085C6  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17853  0085C8  22DA               	addwfc	fsr2h,f,c
 17854  0085CA  EE10 F00A          	lfsr	1,10
 17855  0085CE  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17856  0085D0  26E1               	addwf	fsr1l,f,c
 17857  0085D2  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17858  0085D4  22E2               	addwfc	fsr1h,f,c
 17859  0085D6  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17860  0085DA  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17861  0085DE  0E0C               	movlw	12
 17862  0085E0  0100               	movlb	0	; () banked
 17863  0085E2  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17864  0085E4                     u23555:
 17865  0085E4  90D8               	bcf	status,0,c
 17866  0085E6  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17867  0085E8  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17868  0085EA  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17869  0085EC  D7FB               	goto	u23555
 17870  0085EE  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17871  0085F0  0B0F               	andlw	15
 17872  0085F2  6EDF               	movwf	indf2,c
 17873                           
 17874                           ; BSR set to: 0
 17875  0085F4  0012               	return		;funcret
 17876  0085F6                     __end_of_keeloq_classic_decrypt_packet:
 17877                           	callstack 0
 17878                           
 17879 ;; *************** function _NormalKeyGen *****************
 17880 ;; Defined at:
 17881 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17882 ;; Parameters:    Size  Location     Type
 17883 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17884 ;;		 -> classic_data(16), 
 17885 ;; Auto vars:     Size  Location     Type
 17886 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17887 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17888 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17889 ;; Return value:  Size  Location     Type
 17890 ;;                  1    wreg      void 
 17891 ;; Registers used:
 17892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17893 ;; Tracked objects:
 17894 ;;		On entry : 3F/0
 17895 ;;		On exit  : 0/0
 17896 ;;		Unchanged: 0/0
 17897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17899 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17901 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17902 ;;Total ram usage:       18 bytes
 17903 ;; Hardware stack levels used: 1
 17904 ;; Hardware stack levels required when called: 6
 17905 ;; This function calls:
 17906 ;;		_Decrypt
 17907 ;;		_LoadManufCode
 17908 ;;		_memcpy
 17909 ;; This function is called by:
 17910 ;;		_keeloq_classic_decrypt_packet
 17911 ;; This function uses a non-reentrant model
 17912 ;;
 17913                           
 17914                           	psect	text62
 17915  006994                     __ptext62:
 17916                           	callstack 0
 17917  006994                     _NormalKeyGen:
 17918                           	callstack 21
 17919                           
 17920                           ; BSR set to: 0
 17921                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17922                           
 17923                           ; BSR set to: 0
 17924                           ;incstack = 0
 17925  006994  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17926  006996  6E10               	movwf	memcpy@d1^0,c
 17927  006998  6A11               	clrf	(memcpy@d1+1)^0,c
 17928  00699A  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17929  00699E  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17930  0069A2  0E00               	movlw	0
 17931  0069A4  6E15               	movwf	(memcpy@n+1)^0,c
 17932  0069A6  0E04               	movlw	4
 17933  0069A8  6E14               	movwf	memcpy@n^0,c
 17934  0069AA  EC22  F045         	call	_memcpy	;wreg free
 17935                           
 17936                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17937  0069AE  0E28               	movlw	low NormalKeyGen@HOPtemp
 17938  0069B0  6E10               	movwf	memcpy@d1^0,c
 17939  0069B2  6A11               	clrf	(memcpy@d1+1)^0,c
 17940  0069B4  0E30               	movlw	low NormalKeyGen@Buffer
 17941  0069B6  6E12               	movwf	memcpy@s1^0,c
 17942  0069B8  6A13               	clrf	(memcpy@s1+1)^0,c
 17943  0069BA  0E00               	movlw	0
 17944  0069BC  6E15               	movwf	(memcpy@n+1)^0,c
 17945  0069BE  0E04               	movlw	4
 17946  0069C0  6E14               	movwf	memcpy@n^0,c
 17947  0069C2  EC22  F045         	call	_memcpy	;wreg free
 17948                           
 17949                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17950  0069C6  0ED9               	movlw	low NormalKeyGen@SEED
 17951  0069C8  6E10               	movwf	memcpy@d1^0,c
 17952  0069CA  0E02               	movlw	high NormalKeyGen@SEED
 17953  0069CC  6E11               	movwf	(memcpy@d1+1)^0,c
 17954  0069CE  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17955  0069D0  6E12               	movwf	memcpy@s1^0,c
 17956  0069D2  6A13               	clrf	(memcpy@s1+1)^0,c
 17957  0069D4  0E00               	movlw	0
 17958  0069D6  6E15               	movwf	(memcpy@n+1)^0,c
 17959  0069D8  0E04               	movlw	4
 17960  0069DA  6E14               	movwf	memcpy@n^0,c
 17961  0069DC  EC22  F045         	call	_memcpy	;wreg free
 17962                           
 17963                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17964  0069E0  0E0F               	movlw	15
 17965  0069E2  0102               	movlb	2	; () banked
 17966  0069E4  17DC               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17967                           
 17968                           ; BSR set to: 2
 17969                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17970  0069E6  0E30               	movlw	low NormalKeyGen@Buffer
 17971  0069E8  6E10               	movwf	memcpy@d1^0,c
 17972  0069EA  6A11               	clrf	(memcpy@d1+1)^0,c
 17973  0069EC  0ED9               	movlw	low NormalKeyGen@SEED
 17974  0069EE  6E12               	movwf	memcpy@s1^0,c
 17975  0069F0  0E02               	movlw	high NormalKeyGen@SEED
 17976  0069F2  6E13               	movwf	(memcpy@s1+1)^0,c
 17977  0069F4  0E00               	movlw	0
 17978  0069F6  6E15               	movwf	(memcpy@n+1)^0,c
 17979  0069F8  0E04               	movlw	4
 17980  0069FA  6E14               	movwf	memcpy@n^0,c
 17981  0069FC  EC22  F045         	call	_memcpy	;wreg free
 17982                           
 17983                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17984  006A00  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17985                           
 17986                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17987  006A02  EC84  F048         	call	_LoadManufCode	;wreg free
 17988                           
 17989                           ; BSR set to: 2
 17990                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17991  006A06  0E30               	movlw	low NormalKeyGen@Buffer
 17992  006A08  6E1B               	movwf	Decrypt@packet^0,c
 17993  006A0A  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17994  006A0C  EC31  F038         	call	_Decrypt	;wreg free
 17995                           
 17996                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17997  006A10  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17998  006A12  6E10               	movwf	memcpy@d1^0,c
 17999  006A14  6A11               	clrf	(memcpy@d1+1)^0,c
 18000  006A16  0E30               	movlw	low NormalKeyGen@Buffer
 18001  006A18  6E12               	movwf	memcpy@s1^0,c
 18002  006A1A  6A13               	clrf	(memcpy@s1+1)^0,c
 18003  006A1C  0E00               	movlw	0
 18004  006A1E  6E15               	movwf	(memcpy@n+1)^0,c
 18005  006A20  0E04               	movlw	4
 18006  006A22  6E14               	movwf	memcpy@n^0,c
 18007  006A24  EC22  F045         	call	_memcpy	;wreg free
 18008                           
 18009                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 18010  006A28  0E30               	movlw	low NormalKeyGen@Buffer
 18011  006A2A  6E10               	movwf	memcpy@d1^0,c
 18012  006A2C  6A11               	clrf	(memcpy@d1+1)^0,c
 18013  006A2E  0ED9               	movlw	low NormalKeyGen@SEED
 18014  006A30  6E12               	movwf	memcpy@s1^0,c
 18015  006A32  0E02               	movlw	high NormalKeyGen@SEED
 18016  006A34  6E13               	movwf	(memcpy@s1+1)^0,c
 18017  006A36  0E00               	movlw	0
 18018  006A38  6E15               	movwf	(memcpy@n+1)^0,c
 18019  006A3A  0E04               	movlw	4
 18020  006A3C  6E14               	movwf	memcpy@n^0,c
 18021  006A3E  EC22  F045         	call	_memcpy	;wreg free
 18022                           
 18023                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 18024  006A42  0E60               	movlw	96
 18025  006A44  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 18026                           
 18027                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 18028  006A46  EC84  F048         	call	_LoadManufCode	;wreg free
 18029                           
 18030                           ; BSR set to: 2
 18031                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 18032  006A4A  0E30               	movlw	low NormalKeyGen@Buffer
 18033  006A4C  6E1B               	movwf	Decrypt@packet^0,c
 18034  006A4E  6A1C               	clrf	(Decrypt@packet+1)^0,c
 18035  006A50  EC31  F038         	call	_Decrypt	;wreg free
 18036                           
 18037                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 18038  006A54  0ED5               	movlw	low (_DKEY+4)
 18039  006A56  6E10               	movwf	memcpy@d1^0,c
 18040  006A58  0E02               	movlw	high (_DKEY+4)
 18041  006A5A  6E11               	movwf	(memcpy@d1+1)^0,c
 18042  006A5C  0E30               	movlw	low NormalKeyGen@Buffer
 18043  006A5E  6E12               	movwf	memcpy@s1^0,c
 18044  006A60  6A13               	clrf	(memcpy@s1+1)^0,c
 18045  006A62  0E00               	movlw	0
 18046  006A64  6E15               	movwf	(memcpy@n+1)^0,c
 18047  006A66  0E04               	movlw	4
 18048  006A68  6E14               	movwf	memcpy@n^0,c
 18049  006A6A  EC22  F045         	call	_memcpy	;wreg free
 18050                           
 18051                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 18052  006A6E  0ED1               	movlw	low _DKEY
 18053  006A70  6E10               	movwf	memcpy@d1^0,c
 18054  006A72  0E02               	movlw	high _DKEY
 18055  006A74  6E11               	movwf	(memcpy@d1+1)^0,c
 18056  006A76  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 18057  006A78  6E12               	movwf	memcpy@s1^0,c
 18058  006A7A  6A13               	clrf	(memcpy@s1+1)^0,c
 18059  006A7C  0E00               	movlw	0
 18060  006A7E  6E15               	movwf	(memcpy@n+1)^0,c
 18061  006A80  0E04               	movlw	4
 18062  006A82  6E14               	movwf	memcpy@n^0,c
 18063  006A84  EC22  F045         	call	_memcpy	;wreg free
 18064                           
 18065                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 18066  006A88  0E30               	movlw	low NormalKeyGen@Buffer
 18067  006A8A  6E10               	movwf	memcpy@d1^0,c
 18068  006A8C  6A11               	clrf	(memcpy@d1+1)^0,c
 18069  006A8E  0E28               	movlw	low NormalKeyGen@HOPtemp
 18070  006A90  6E12               	movwf	memcpy@s1^0,c
 18071  006A92  6A13               	clrf	(memcpy@s1+1)^0,c
 18072  006A94  0E00               	movlw	0
 18073  006A96  6E15               	movwf	(memcpy@n+1)^0,c
 18074  006A98  0E04               	movlw	4
 18075  006A9A  6E14               	movwf	memcpy@n^0,c
 18076  006A9C  EC22  F045         	call	_memcpy	;wreg free
 18077  006AA0  0012               	return		;funcret
 18078  006AA2                     __end_of_NormalKeyGen:
 18079                           	callstack 0
 18080                           
 18081 ;; *************** function _LoadManufCode *****************
 18082 ;; Defined at:
 18083 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 18084 ;; Parameters:    Size  Location     Type
 18085 ;;		None
 18086 ;; Auto vars:     Size  Location     Type
 18087 ;;		None
 18088 ;; Return value:  Size  Location     Type
 18089 ;;                  1    wreg      void 
 18090 ;; Registers used:
 18091 ;;		wreg, status,2
 18092 ;; Tracked objects:
 18093 ;;		On entry : 0/2
 18094 ;;		On exit  : 3F/2
 18095 ;;		Unchanged: 0/0
 18096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18101 ;;Total ram usage:        0 bytes
 18102 ;; Hardware stack levels used: 1
 18103 ;; Hardware stack levels required when called: 4
 18104 ;; This function calls:
 18105 ;;		Nothing
 18106 ;; This function is called by:
 18107 ;;		_NormalKeyGen
 18108 ;; This function uses a non-reentrant model
 18109 ;;
 18110                           
 18111                           	psect	text63
 18112  009108                     __ptext63:
 18113                           	callstack 0
 18114  009108                     _LoadManufCode:
 18115                           	callstack 22
 18116                           
 18117                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 18118                           
 18119                           ;incstack = 0
 18120  009108  0102               	movlb	2	; () banked
 18121  00910A  69D1               	setf	_DKEY& (0+255),b
 18122                           
 18123                           ; BSR set to: 2
 18124                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 18125  00910C  0ECA               	movlw	202
 18126  00910E  6FD2               	movwf	(_DKEY+1)& (0+255),b
 18127                           
 18128                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 18129  009110  0E76               	movlw	118
 18130  009112  6FD3               	movwf	(_DKEY+2)& (0+255),b
 18131                           
 18132                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 18133  009114  0E94               	movlw	148
 18134  009116  6FD4               	movwf	(_DKEY+3)& (0+255),b
 18135                           
 18136                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 18137  009118  0E22               	movlw	34
 18138  00911A  6FD5               	movwf	(_DKEY+4)& (0+255),b
 18139                           
 18140                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 18141  00911C  0E68               	movlw	104
 18142  00911E  6FD6               	movwf	(_DKEY+5)& (0+255),b
 18143                           
 18144                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 18145  009120  0E27               	movlw	39
 18146  009122  6FD7               	movwf	(_DKEY+6)& (0+255),b
 18147                           
 18148                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 18149  009124  0E57               	movlw	87
 18150  009126  6FD8               	movwf	(_DKEY+7)& (0+255),b
 18151                           
 18152                           ; BSR set to: 2
 18153  009128  0012               	return		;funcret
 18154  00912A                     __end_of_LoadManufCode:
 18155                           	callstack 0
 18156                           
 18157 ;; *************** function _Decrypt *****************
 18158 ;; Defined at:
 18159 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 18160 ;; Parameters:    Size  Location     Type
 18161 ;;  packet          2   26[COMRAM] PTR unsigned char 
 18162 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 18163 ;; Auto vars:     Size  Location     Type
 18164 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 18165 ;;  aux             1   32[COMRAM] unsigned char 
 18166 ;;  p               1   31[COMRAM] char 
 18167 ;;  j               1   30[COMRAM] unsigned char 
 18168 ;;  i               1   29[COMRAM] unsigned char 
 18169 ;;  key             1   28[COMRAM] unsigned char 
 18170 ;; Return value:  Size  Location     Type
 18171 ;;                  1    wreg      void 
 18172 ;; Registers used:
 18173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18174 ;; Tracked objects:
 18175 ;;		On entry : 0/0
 18176 ;;		On exit  : 0/0
 18177 ;;		Unchanged: 0/0
 18178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18180 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18182 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18183 ;;Total ram usage:       11 bytes
 18184 ;; Hardware stack levels used: 1
 18185 ;; Hardware stack levels required when called: 5
 18186 ;; This function calls:
 18187 ;;		_memcpy
 18188 ;; This function is called by:
 18189 ;;		_NormalKeyGen
 18190 ;;		_keeloq_classic_decrypt_packet
 18191 ;; This function uses a non-reentrant model
 18192 ;;
 18193                           
 18194                           	psect	text64
 18195  007062                     __ptext64:
 18196                           	callstack 0
 18197  007062                     _Decrypt:
 18198                           	callstack 21
 18199                           
 18200                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18201                           
 18202                           ; BSR set to: 2
 18203                           ;incstack = 0
 18204  007062  0E22               	movlw	low Decrypt@Buffer
 18205  007064  6E10               	movwf	memcpy@d1^0,c
 18206  007066  6A11               	clrf	(memcpy@d1+1)^0,c
 18207  007068  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18208  00706C  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18209  007070  0E00               	movlw	0
 18210  007072  6E15               	movwf	(memcpy@n+1)^0,c
 18211  007074  0E04               	movlw	4
 18212  007076  6E14               	movwf	memcpy@n^0,c
 18213  007078  EC22  F045         	call	_memcpy	;wreg free
 18214                           
 18215                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18216  00707C  0E01               	movlw	1
 18217  00707E  6E20               	movwf	Decrypt@p^0,c
 18218                           
 18219                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18220  007080  0E42               	movlw	66
 18221  007082  6E1F               	movwf	Decrypt@j^0,c
 18222  007084                     l19654:
 18223                           
 18224                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18225  007084  0ED1               	movlw	low _DKEY
 18226  007086  2420               	addwf	Decrypt@p^0,w,c
 18227  007088  6ED9               	movwf	fsr2l,c
 18228  00708A  6ADA               	clrf	fsr2h,c
 18229  00708C  0E02               	movlw	high _DKEY
 18230  00708E  22DA               	addwfc	fsr2h,f,c
 18231  007090  50DF               	movf	indf2,w,c
 18232  007092  6E1D               	movwf	Decrypt@key^0,c
 18233  007094  0620               	decf	Decrypt@p^0,f,c
 18234                           
 18235                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18236  007096  AE20               	btfss	Decrypt@p^0,7,c
 18237  007098  D002               	goto	l19662
 18238                           
 18239                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18240  00709A  0E08               	movlw	8
 18241  00709C  2620               	addwf	Decrypt@p^0,f,c
 18242  00709E                     l19662:
 18243                           
 18244                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18245  00709E  0E08               	movlw	8
 18246  0070A0  6E1E               	movwf	Decrypt@i^0,c
 18247  0070A2                     l1854:
 18248                           
 18249                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18250  0070A2  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18251  0070A4  D006               	goto	l1856
 18252                           
 18253                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18254  0070A6  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18255  0070A8  D002               	goto	l19672
 18256                           
 18257                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18258  0070AA  0E3A               	movlw	58
 18259  0070AC  D007               	goto	L81
 18260  0070AE                     l19672:
 18261                           
 18262                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18263  0070AE  0E5C               	movlw	92
 18264  0070B0  D005               	goto	L81
 18265  0070B2                     l1856:
 18266                           
 18267                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18268  0070B2  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18269  0070B4  D002               	goto	l19676
 18270                           
 18271                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18272  0070B6  0E74               	movlw	116
 18273  0070B8  D001               	goto	L81
 18274  0070BA                     l19676:
 18275                           
 18276                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18277  0070BA  0E2E               	movlw	46
 18278  0070BC                     L81:
 18279  0070BC  6E21               	movwf	Decrypt@aux^0,c
 18280                           
 18281                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18282  0070BE  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18283                           
 18284                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18285  0070C0  3A21               	swapf	Decrypt@aux^0,f,c
 18286                           
 18287                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18288  0070C2  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18289  0070C4  D004               	goto	l19684
 18290                           
 18291                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18292  0070C6  90D8               	bcf	status,0,c
 18293  0070C8  3621               	rlcf	Decrypt@aux^0,f,c
 18294  0070CA  90D8               	bcf	status,0,c
 18295  0070CC  3621               	rlcf	Decrypt@aux^0,f,c
 18296  0070CE                     l19684:
 18297                           
 18298                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18299  0070CE  A022               	btfss	Decrypt@Buffer^0,0,c
 18300  0070D0  D002               	goto	l1864
 18301                           
 18302                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18303  0070D2  90D8               	bcf	status,0,c
 18304  0070D4  3621               	rlcf	Decrypt@aux^0,f,c
 18305  0070D6                     l1864:
 18306                           
 18307                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18308  0070D6  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18309  0070D8  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18310  0070DA  181D               	xorwf	Decrypt@key^0,w,c
 18311  0070DC  1A21               	xorwf	Decrypt@aux^0,f,c
 18312                           
 18313                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18314  0070DE  90D8               	bcf	status,0,c
 18315  0070E0  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18316  0070E2  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18317  0070E4  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18318                           
 18319                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18320  0070E6  90D8               	bcf	status,0,c
 18321  0070E8  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18322  0070EA  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18323  0070EC  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18324                           
 18325                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18326  0070EE  90D8               	bcf	status,0,c
 18327  0070F0  3422               	rlcf	Decrypt@Buffer^0,w,c
 18328  0070F2  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18329  0070F4  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18330                           
 18331                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18332  0070F6  90D8               	bcf	status,0,c
 18333  0070F8  3421               	rlcf	Decrypt@aux^0,w,c
 18334  0070FA  3422               	rlcf	Decrypt@Buffer^0,w,c
 18335  0070FC  6E22               	movwf	Decrypt@Buffer^0,c
 18336                           
 18337                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18338  0070FE  90D8               	bcf	status,0,c
 18339  007100  361D               	rlcf	Decrypt@key^0,f,c
 18340                           
 18341                           ;keeloqDecrypt_MC50.c: 189:         }
 18342  007102  061E               	decf	Decrypt@i^0,f,c
 18343  007104  501E               	movf	Decrypt@i^0,w,c
 18344  007106  A4D8               	btfss	status,2,c
 18345  007108  D7CC               	goto	l1854
 18346                           
 18347                           ;keeloqDecrypt_MC50.c: 190:     }
 18348  00710A  061F               	decf	Decrypt@j^0,f,c
 18349  00710C  501F               	movf	Decrypt@j^0,w,c
 18350  00710E  A4D8               	btfss	status,2,c
 18351  007110  D7B9               	goto	l19654
 18352                           
 18353                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18354  007112  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18355  007116  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18356  00711A  0E22               	movlw	low Decrypt@Buffer
 18357  00711C  6E12               	movwf	memcpy@s1^0,c
 18358  00711E  6A13               	clrf	(memcpy@s1+1)^0,c
 18359  007120  0E00               	movlw	0
 18360  007122  6E15               	movwf	(memcpy@n+1)^0,c
 18361  007124  0E04               	movlw	4
 18362  007126  6E14               	movwf	memcpy@n^0,c
 18363  007128  EC22  F045         	call	_memcpy	;wreg free
 18364  00712C  0012               	return		;funcret
 18365  00712E                     __end_of_Decrypt:
 18366                           	callstack 0
 18367                           
 18368 ;; *************** function _HopCHK *****************
 18369 ;; Defined at:
 18370 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18371 ;; Parameters:    Size  Location     Type
 18372 ;;  data            2   35[COMRAM] PTR struct .
 18373 ;;		 -> classic_data(16), 
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;  hopDiff         2   37[COMRAM] short 
 18376 ;; Return value:  Size  Location     Type
 18377 ;;                  1    wreg      enum E10730
 18378 ;; Registers used:
 18379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18380 ;; Tracked objects:
 18381 ;;		On entry : 3F/0
 18382 ;;		On exit  : 3C/0
 18383 ;;		Unchanged: 0/0
 18384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18388 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18389 ;;Total ram usage:        4 bytes
 18390 ;; Hardware stack levels used: 1
 18391 ;; Hardware stack levels required when called: 6
 18392 ;; This function calls:
 18393 ;;		_ReqResync
 18394 ;;		_getHopCode
 18395 ;; This function is called by:
 18396 ;;		_keeloqDecryptPacket
 18397 ;; This function uses a non-reentrant model
 18398 ;;
 18399                           
 18400                           	psect	text65
 18401  007A12                     __ptext65:
 18402                           	callstack 0
 18403  007A12                     _HopCHK:
 18404                           	callstack 22
 18405                           
 18406                           ; BSR set to: 0
 18407                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18408                           
 18409                           ;incstack = 0
 18410  007A12  EE20 F008          	lfsr	2,8
 18411  007A16  5024               	movf	HopCHK@data^0,w,c
 18412  007A18  26D9               	addwf	fsr2l,f,c
 18413  007A1A  5025               	movf	(HopCHK@data+1)^0,w,c
 18414  007A1C  22DA               	addwfc	fsr2h,f,c
 18415  007A1E  CFDE F07C          	movff	postinc2,_Hop
 18416  007A22  CFDD F07D          	movff	postdec2,_Hop+1
 18417                           
 18418                           ; BSR set to: 0
 18419                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18420  007A26  C024  F016         	movff	HopCHK@data,getHopCode@data
 18421  007A2A  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18422  007A2E  ECEE  F031         	call	_getHopCode	;wreg free
 18423  007A32  C016  F28C         	movff	?_getHopCode,_EHop
 18424  007A36  C017  F28D         	movff	?_getHopCode+1,_EHop+1
 18425                           
 18426                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18427  007A3A  0101               	movlb	1	; () banked
 18428  007A3C  5195               	movf	_F2Chance& (0+255),w,b
 18429  007A3E  B4D8               	btfsc	status,2,c
 18430  007A40  D010               	goto	l20414
 18431                           
 18432                           ; BSR set to: 1
 18433                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18434  007A42  0100               	movlb	0	; () banked
 18435  007A44  517C               	movf	_Hop& (0+255),w,b
 18436  007A46  0102               	movlb	2	; () banked
 18437  007A48  198E               	xorwf	_NextHop& (0+255),w,b
 18438  007A4A  E10B               	bnz	l20414
 18439  007A4C  0100               	movlb	0	; () banked
 18440  007A4E  517D               	movf	(_Hop+1)& (0+255),w,b
 18441  007A50  0102               	movlb	2	; () banked
 18442  007A52  198F               	xorwf	(_NextHop+1)& (0+255),w,b
 18443  007A54  A4D8               	btfss	status,2,c
 18444  007A56  D005               	goto	l20414
 18445                           
 18446                           ; BSR set to: 2
 18447                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18448  007A58  0E00               	movlw	0
 18449  007A5A  0101               	movlb	1	; () banked
 18450  007A5C  6F95               	movwf	_F2Chance& (0+255),b
 18451  007A5E                     l20410:
 18452                           
 18453                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18454  007A5E  0E01               	movlw	1
 18455  007A60  0012               	return	
 18456  007A62                     l20414:
 18457                           
 18458                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18459  007A62  0102               	movlb	2	; () banked
 18460  007A64  518C               	movf	_EHop& (0+255),w,b
 18461  007A66  0100               	movlb	0	; () banked
 18462  007A68  5D7C               	subwf	_Hop& (0+255),w,b
 18463  007A6A  6E26               	movwf	HopCHK@hopDiff^0,c
 18464  007A6C  0102               	movlb	2	; () banked
 18465  007A6E  518D               	movf	(_EHop+1)& (0+255),w,b
 18466  007A70  0100               	movlb	0	; () banked
 18467  007A72  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18468  007A74  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18469                           
 18470                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18471  007A76  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18472  007A78  D002               	goto	l20422
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18476  007A7A  0E0A               	movlw	10
 18477  007A7C  0012               	return	
 18478  007A7E                     l20422:
 18479                           
 18480                           ; BSR set to: 0
 18481  007A7E  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18482  007A80  D7EE               	goto	l20410
 18483  007A82  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18484  007A84  E104               	bnz	u23520
 18485  007A86  0E11               	movlw	17
 18486  007A88  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18487  007A8A  A0D8               	btfss	status,0,c
 18488  007A8C  D7E8               	goto	l20410
 18489  007A8E                     u23520:
 18490                           
 18491                           ; BSR set to: 0
 18492                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18493  007A8E  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18494  007A92  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18495  007A96  EC4D  F049         	call	_ReqResync	;wreg free
 18496  007A9A  0012               	return		;funcret
 18497  007A9C                     __end_of_HopCHK:
 18498                           	callstack 0
 18499                           
 18500 ;; *************** function _getHopCode *****************
 18501 ;; Defined at:
 18502 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18503 ;; Parameters:    Size  Location     Type
 18504 ;;  data            2   21[COMRAM] PTR struct .
 18505 ;;		 -> classic_data(16), 
 18506 ;; Auto vars:     Size  Location     Type
 18507 ;;  tempHop         2   31[COMRAM] unsigned short 
 18508 ;;  i               1   34[COMRAM] unsigned char 
 18509 ;;  tempPos         1   33[COMRAM] char 
 18510 ;; Return value:  Size  Location     Type
 18511 ;;                  2   21[COMRAM] unsigned short 
 18512 ;; Registers used:
 18513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18514 ;; Tracked objects:
 18515 ;;		On entry : 3F/0
 18516 ;;		On exit  : 3D/0
 18517 ;;		Unchanged: 0/0
 18518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18520 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18521 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18522 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18523 ;;Total ram usage:       14 bytes
 18524 ;; Hardware stack levels used: 1
 18525 ;; Hardware stack levels required when called: 5
 18526 ;; This function calls:
 18527 ;;		_ReqResync
 18528 ;;		___wmul
 18529 ;; This function is called by:
 18530 ;;		_HopCHK
 18531 ;; This function uses a non-reentrant model
 18532 ;;
 18533                           
 18534                           	psect	text66
 18535  0063DC                     __ptext66:
 18536                           	callstack 0
 18537  0063DC                     _getHopCode:
 18538                           	callstack 22
 18539                           
 18540                           ; BSR set to: 0
 18541                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18542                           
 18543                           ;incstack = 0
 18544  0063DC  0E00               	movlw	0
 18545  0063DE  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18546  0063E0  0E00               	movlw	0
 18547  0063E2  6E20               	movwf	getHopCode@tempHop^0,c
 18548                           
 18549                           ; BSR set to: 0
 18550                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18551  0063E4  6822               	setf	getHopCode@tempPos^0,c
 18552                           
 18553                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18554  0063E6  0E00               	movlw	0
 18555  0063E8  6E23               	movwf	getHopCode@i^0,c
 18556  0063EA                     l19902:
 18557                           
 18558                           ; BSR set to: 0
 18559                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18560  0063EA  EE20 F004          	lfsr	2,4
 18561  0063EE  5016               	movf	getHopCode@data^0,w,c
 18562  0063F0  26D9               	addwf	fsr2l,f,c
 18563  0063F2  5017               	movf	(getHopCode@data+1)^0,w,c
 18564  0063F4  22DA               	addwfc	fsr2h,f,c
 18565  0063F6  5023               	movf	getHopCode@i^0,w,c
 18566  0063F8  0D06               	mullw	6
 18567  0063FA  0E00               	movlw	low _listSyncValues
 18568  0063FC  24F3               	addwf	243,w,c
 18569  0063FE  6EE1               	movwf	fsr1l,c
 18570  006400  0E03               	movlw	high _listSyncValues
 18571  006402  20F4               	addwfc	prodh,w,c
 18572  006404  6EE2               	movwf	fsr1h,c
 18573  006406  50DE               	movf	postinc2,w,c
 18574  006408  18E6               	xorwf	postinc1,w,c
 18575  00640A  E118               	bnz	l19908
 18576  00640C  50DE               	movf	postinc2,w,c
 18577  00640E  18E6               	xorwf	postinc1,w,c
 18578  006410  E115               	bnz	l19908
 18579  006412  50DE               	movf	postinc2,w,c
 18580  006414  18E6               	xorwf	postinc1,w,c
 18581  006416  E112               	bnz	l19908
 18582  006418  50DE               	movf	postinc2,w,c
 18583  00641A  18E6               	xorwf	postinc1,w,c
 18584  00641C  A4D8               	btfss	status,2,c
 18585  00641E  D00E               	goto	l19908
 18586                           
 18587                           ; BSR set to: 0
 18588                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18589  006420  5023               	movf	getHopCode@i^0,w,c
 18590  006422  0D06               	mullw	6
 18591  006424  0E04               	movlw	low (_listSyncValues+4)
 18592  006426  24F3               	addwf	243,w,c
 18593  006428  6ED9               	movwf	fsr2l,c
 18594  00642A  0E03               	movlw	high (_listSyncValues+4)
 18595  00642C  20F4               	addwfc	prodh,w,c
 18596  00642E  6EDA               	movwf	fsr2h,c
 18597  006430  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18598  006434  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18602  006438  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18603  00643C                     l19908:
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;keeloqDecrypt_MC50.c: 278:     }
 18607  00643C  2A23               	incf	getHopCode@i^0,f,c
 18608                           
 18609                           ; BSR set to: 0
 18610  00643E  0E18               	movlw	24
 18611  006440  6423               	cpfsgt	getHopCode@i^0,c
 18612  006442  D7D3               	goto	l19902
 18613                           
 18614                           ; BSR set to: 0
 18615                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18616  006444  AE22               	btfss	getHopCode@tempPos^0,7,c
 18617  006446  D050               	goto	l19928
 18618                           
 18619                           ; BSR set to: 0
 18620                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18621  006448  EE20 F004          	lfsr	2,4
 18622  00644C  5016               	movf	getHopCode@data^0,w,c
 18623  00644E  26D9               	addwf	fsr2l,f,c
 18624  006450  5017               	movf	(getHopCode@data+1)^0,w,c
 18625  006452  22DA               	addwfc	fsr2h,f,c
 18626  006454  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18627  006458  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18628  00645C  0E00               	movlw	0
 18629  00645E  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18630  006460  0E06               	movlw	6
 18631  006462  6E12               	movwf	___wmul@multiplicand^0,c
 18632  006464  EC39  F048         	call	___wmul	;wreg free
 18633  006468  0E00               	movlw	low _listSyncValues
 18634  00646A  2410               	addwf	?___wmul^0,w,c
 18635  00646C  6EE1               	movwf	fsr1l,c
 18636  00646E  0E03               	movlw	high _listSyncValues
 18637  006470  2011               	addwfc	(?___wmul+1)^0,w,c
 18638  006472  6EE2               	movwf	fsr1h,c
 18639  006474  CFDE FFE6          	movff	postinc2,postinc1
 18640  006478  CFDE FFE6          	movff	postinc2,postinc1
 18641  00647C  CFDE FFE6          	movff	postinc2,postinc1
 18642  006480  CFDE FFE6          	movff	postinc2,postinc1
 18643                           
 18644                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18645  006484  EE20 F008          	lfsr	2,8
 18646  006488  5016               	movf	getHopCode@data^0,w,c
 18647  00648A  26D9               	addwf	fsr2l,f,c
 18648  00648C  5017               	movf	(getHopCode@data+1)^0,w,c
 18649  00648E  22DA               	addwfc	fsr2h,f,c
 18650  006490  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18651  006494  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18652  006498  0E00               	movlw	0
 18653  00649A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18654  00649C  0E06               	movlw	6
 18655  00649E  6E12               	movwf	___wmul@multiplicand^0,c
 18656  0064A0  EC39  F048         	call	___wmul	;wreg free
 18657  0064A4  0E04               	movlw	low (_listSyncValues+4)
 18658  0064A6  2410               	addwf	?___wmul^0,w,c
 18659  0064A8  6EE1               	movwf	fsr1l,c
 18660  0064AA  0E03               	movlw	high (_listSyncValues+4)
 18661  0064AC  2011               	addwfc	(?___wmul+1)^0,w,c
 18662  0064AE  6EE2               	movwf	fsr1h,c
 18663  0064B0  CFDE FFE6          	movff	postinc2,postinc1
 18664  0064B4  CFDD FFE5          	movff	postdec2,postdec1
 18665                           
 18666                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18667  0064B8  0100               	movlb	0	; () banked
 18668  0064BA  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18669  0064BC  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18670                           
 18671                           ; BSR set to: 0
 18672                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18673  0064BE  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18674  0064C0  E104               	bnz	u22840
 18675  0064C2  0E19               	movlw	25
 18676  0064C4  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18677  0064C6  A0D8               	btfss	status,0,c
 18678  0064C8  D004               	goto	l19922
 18679  0064CA                     u22840:
 18680                           
 18681                           ; BSR set to: 0
 18682                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18683  0064CA  0E00               	movlw	0
 18684  0064CC  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18685  0064CE  0E00               	movlw	0
 18686  0064D0  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18687  0064D2                     l19922:
 18688                           
 18689                           ; BSR set to: 0
 18690                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18691  0064D2  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18692  0064D6  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18693  0064DA  EC4D  F049         	call	_ReqResync	;wreg free
 18694  0064DE  6E18               	movwf	??_getHopCode^0,c
 18695  0064E0  5018               	movf	??_getHopCode^0,w,c
 18696  0064E2  6E16               	movwf	?_getHopCode^0,c
 18697  0064E4  6A17               	clrf	(?_getHopCode+1)^0,c
 18698  0064E6  0012               	return	
 18699  0064E8                     l19928:
 18700                           
 18701                           ; BSR set to: 0
 18702                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18703  0064E8  5022               	movf	getHopCode@tempPos^0,w,c
 18704  0064EA  0D06               	mullw	6
 18705  0064EC  0E04               	movlw	low (_listSyncValues+4)
 18706  0064EE  24F3               	addwf	243,w,c
 18707  0064F0  6ED9               	movwf	fsr2l,c
 18708  0064F2  0E03               	movlw	high (_listSyncValues+4)
 18709  0064F4  20F4               	addwfc	prodh,w,c
 18710  0064F6  6EDA               	movwf	fsr2h,c
 18711  0064F8  C07C  FFDE         	movff	_Hop,postinc2
 18712  0064FC  C07D  FFDD         	movff	_Hop+1,postdec2
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18716  006500  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18717  006504  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18718  006508  0012               	return		;funcret
 18719  00650A                     __end_of_getHopCode:
 18720                           	callstack 0
 18721                           
 18722 ;; *************** function _ReqResync *****************
 18723 ;; Defined at:
 18724 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18725 ;; Parameters:    Size  Location     Type
 18726 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18727 ;; Auto vars:     Size  Location     Type
 18728 ;;		None
 18729 ;; Return value:  Size  Location     Type
 18730 ;;                  1    wreg      enum E10730
 18731 ;; Registers used:
 18732 ;;		wreg, status,2, status,0
 18733 ;; Tracked objects:
 18734 ;;		On entry : 3F/0
 18735 ;;		On exit  : 3F/2
 18736 ;;		Unchanged: 0/0
 18737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18742 ;;Total ram usage:        2 bytes
 18743 ;; Hardware stack levels used: 1
 18744 ;; Hardware stack levels required when called: 4
 18745 ;; This function calls:
 18746 ;;		Nothing
 18747 ;; This function is called by:
 18748 ;;		_HopCHK
 18749 ;;		_getHopCode
 18750 ;; This function uses a non-reentrant model
 18751 ;;
 18752                           
 18753                           	psect	text67
 18754  00929A                     __ptext67:
 18755                           	callstack 0
 18756  00929A                     _ReqResync:
 18757                           	callstack 22
 18758                           
 18759                           ; BSR set to: 0
 18760                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18761                           
 18762                           ;incstack = 0
 18763  00929A  0E01               	movlw	1
 18764  00929C  0101               	movlb	1	; () banked
 18765  00929E  6F95               	movwf	_F2Chance& (0+255),b
 18766                           
 18767                           ; BSR set to: 1
 18768                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18769  0092A0  0E01               	movlw	1
 18770  0092A2  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18771  0092A4  0102               	movlb	2	; () banked
 18772  0092A6  6F8E               	movwf	_NextHop& (0+255),b
 18773  0092A8  0E00               	movlw	0
 18774  0092AA  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18775  0092AC  6F8F               	movwf	(_NextHop+1)& (0+255),b
 18776                           
 18777                           ; BSR set to: 2
 18778                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18779  0092AE  0E09               	movlw	9
 18780                           
 18781                           ; BSR set to: 2
 18782  0092B0  0012               	return		;funcret
 18783  0092B2                     __end_of_ReqResync:
 18784                           	callstack 0
 18785                           
 18786 ;; *************** function _DecCHK *****************
 18787 ;; Defined at:
 18788 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18789 ;; Parameters:    Size  Location     Type
 18790 ;;  data            2   15[COMRAM] PTR struct .
 18791 ;;		 -> classic_data(16), 
 18792 ;; Auto vars:     Size  Location     Type
 18793 ;;		None
 18794 ;; Return value:  Size  Location     Type
 18795 ;;                  1    wreg      _Bool 
 18796 ;; Registers used:
 18797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18798 ;; Tracked objects:
 18799 ;;		On entry : 3F/0
 18800 ;;		On exit  : 3F/0
 18801 ;;		Unchanged: 3F/0
 18802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18807 ;;Total ram usage:        4 bytes
 18808 ;; Hardware stack levels used: 1
 18809 ;; Hardware stack levels required when called: 4
 18810 ;; This function calls:
 18811 ;;		Nothing
 18812 ;; This function is called by:
 18813 ;;		_keeloqDecryptPacket
 18814 ;; This function uses a non-reentrant model
 18815 ;;
 18816                           
 18817                           	psect	text68
 18818  008CAC                     __ptext68:
 18819                           	callstack 0
 18820  008CAC                     _DecCHK:
 18821                           	callstack 24
 18822                           
 18823                           ; BSR set to: 0
 18824                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18825                           
 18826                           ; BSR set to: 2
 18827                           ;incstack = 0
 18828  008CAC  EE20 F00D          	lfsr	2,13
 18829  008CB0  5010               	movf	DecCHK@data^0,w,c
 18830  008CB2  26D9               	addwf	fsr2l,f,c
 18831  008CB4  5011               	movf	(DecCHK@data+1)^0,w,c
 18832  008CB6  22DA               	addwfc	fsr2h,f,c
 18833  008CB8  50DF               	movf	indf2,w,c
 18834  008CBA  6E12               	movwf	??_DecCHK^0,c
 18835  008CBC  EE20 F00C          	lfsr	2,12
 18836  008CC0  5010               	movf	DecCHK@data^0,w,c
 18837  008CC2  26D9               	addwf	fsr2l,f,c
 18838  008CC4  5011               	movf	(DecCHK@data+1)^0,w,c
 18839  008CC6  22DA               	addwfc	fsr2h,f,c
 18840  008CC8  50DF               	movf	indf2,w,c
 18841  008CCA  1812               	xorwf	??_DecCHK^0,w,c
 18842  008CCC  6E13               	movwf	(??_DecCHK+1)^0,c
 18843  008CCE  0E0F               	movlw	15
 18844  008CD0  1613               	andwf	(??_DecCHK+1)^0,f,c
 18845  008CD2  B4D8               	btfsc	status,2,c
 18846  008CD4  D002               	goto	l20396
 18847                           
 18848                           ; BSR set to: 0
 18849                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18850  008CD6  0E00               	movlw	0
 18851  008CD8  0012               	return	
 18852  008CDA                     l20396:
 18853                           
 18854                           ; BSR set to: 0
 18855                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18856  008CDA  0E01               	movlw	1
 18857                           
 18858                           ; BSR set to: 0
 18859  008CDC  0012               	return		;funcret
 18860  008CDE                     __end_of_DecCHK:
 18861                           	callstack 0
 18862                           
 18863 ;; *************** function _DecryptPacket_12BIT *****************
 18864 ;; Defined at:
 18865 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18866 ;; Parameters:    Size  Location     Type
 18867 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18868 ;;		 -> BufferRF(9), 
 18869 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18870 ;;		 -> classic_data(16), 
 18871 ;; Auto vars:     Size  Location     Type
 18872 ;;  commandType     1   12[BANK0 ] enum E10539
 18873 ;; Return value:  Size  Location     Type
 18874 ;;                  1    wreg      enum E10539
 18875 ;; Registers used:
 18876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18877 ;; Tracked objects:
 18878 ;;		On entry : 3F/0
 18879 ;;		On exit  : 3F/0
 18880 ;;		Unchanged: 0/0
 18881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18882 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18885 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18886 ;;Total ram usage:        5 bytes
 18887 ;; Hardware stack levels used: 1
 18888 ;; Hardware stack levels required when called: 14
 18889 ;; This function calls:
 18890 ;;		_memcpy
 18891 ;;		_validateRemoteSerialNumber
 18892 ;; This function is called by:
 18893 ;;		_readRFButtons
 18894 ;; This function uses a non-reentrant model
 18895 ;;
 18896                           
 18897                           	psect	text69
 18898  00786E                     __ptext69:
 18899                           	callstack 0
 18900  00786E                     _DecryptPacket_12BIT:
 18901                           	callstack 15
 18902                           
 18903                           ; BSR set to: 0
 18904                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18905                           
 18906                           ; BSR set to: 0
 18907                           ;incstack = 0
 18908  00786E  0E04               	movlw	4
 18909  007870  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18910  007872  6E10               	movwf	memcpy@d1^0,c
 18911  007874  0E00               	movlw	0
 18912  007876  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18913  007878  6E11               	movwf	(memcpy@d1+1)^0,c
 18914  00787A  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18915  00787E  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18916  007882  0E00               	movlw	0
 18917  007884  6E15               	movwf	(memcpy@n+1)^0,c
 18918  007886  0E04               	movlw	4
 18919  007888  6E14               	movwf	memcpy@n^0,c
 18920  00788A  EC22  F045         	call	_memcpy	;wreg free
 18921                           
 18922                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18923  00788E  0100               	movlb	0	; () banked
 18924  007890  EE20 F004          	lfsr	2,4
 18925  007894  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18926  007896  26D9               	addwf	fsr2l,f,c
 18927  007898  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18928  00789A  22DA               	addwfc	fsr2h,f,c
 18929  00789C  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18930  0078A0  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18931  0078A4  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18932  0078A8  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18933  0078AC  0E00               	movlw	0
 18934  0078AE  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18935  0078B0  0E0F               	movlw	15
 18936  0078B2  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18937  0078B4  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18938  0078B6  0E00               	movlw	0
 18939  0078B8  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18940  0078BA  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18941  0078BC  ECD4  F02B         	call	_validateRemoteSerialNumber	;wreg free
 18942  0078C0  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18943                           
 18944                           ; BSR set to: 0
 18945                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18946  0078C2  EE20 F00C          	lfsr	2,12
 18947  0078C6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18948  0078C8  26D9               	addwf	fsr2l,f,c
 18949  0078CA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18950  0078CC  22DA               	addwfc	fsr2h,f,c
 18951  0078CE  0E00               	movlw	0
 18952  0078D0  6EDF               	movwf	indf2,c
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18956  0078D2  EE20 F008          	lfsr	2,8
 18957  0078D6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18958  0078D8  26D9               	addwf	fsr2l,f,c
 18959  0078DA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18960  0078DC  22DA               	addwfc	fsr2h,f,c
 18961  0078DE  0E00               	movlw	0
 18962  0078E0  6EDE               	movwf	postinc2,c
 18963  0078E2  0E00               	movlw	0
 18964  0078E4  6EDD               	movwf	postdec2,c
 18965                           
 18966                           ; BSR set to: 0
 18967                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18968  0078E6  EE20 F00E          	lfsr	2,14
 18969  0078EA  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18970  0078EC  26D9               	addwf	fsr2l,f,c
 18971  0078EE  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18972  0078F0  22DA               	addwfc	fsr2h,f,c
 18973  0078F2  0E02               	movlw	2
 18974  0078F4  6EDF               	movwf	indf2,c
 18975                           
 18976                           ; BSR set to: 0
 18977                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18978  0078F6  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18979                           
 18980                           ; BSR set to: 0
 18981  0078F8  0012               	return		;funcret
 18982  0078FA                     __end_of_DecryptPacket_12BIT:
 18983                           	callstack 0
 18984                           
 18985 ;; *************** function _validateRemoteSerialNumber *****************
 18986 ;; Defined at:
 18987 ;;		line 27 in file "controlMemory_MC50.c"
 18988 ;; Parameters:    Size  Location     Type
 18989 ;;  serial          4   45[COMRAM] unsigned long 
 18990 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 18991 ;;  position        2   50[COMRAM] PTR unsigned char 
 18992 ;;		 -> controlSelectRemote@pos(1), classic_data(16), 
 18993 ;; Auto vars:     Size  Location     Type
 18994 ;;  mask            4   52[COMRAM] unsigned long 
 18995 ;;  i               1   57[COMRAM] unsigned char 
 18996 ;;  j               1   56[COMRAM] unsigned char 
 18997 ;; Return value:  Size  Location     Type
 18998 ;;                  1    wreg      enum E10539
 18999 ;; Registers used:
 19000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19001 ;; Tracked objects:
 19002 ;;		On entry : 3F/0
 19003 ;;		On exit  : 3F/0
 19004 ;;		Unchanged: 0/0
 19005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19006 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19007 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19008 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19009 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19010 ;;Total ram usage:       21 bytes
 19011 ;; Hardware stack levels used: 1
 19012 ;; Hardware stack levels required when called: 13
 19013 ;; This function calls:
 19014 ;;		_i2c_readDataBlock
 19015 ;; This function is called by:
 19016 ;;		_keeloqDecryptPacket
 19017 ;;		_DecryptPacket_12BIT
 19018 ;;		_controlSelectRemote
 19019 ;; This function uses a non-reentrant model
 19020 ;;
 19021                           
 19022                           	psect	text70
 19023  0057A8                     __ptext70:
 19024                           	callstack 0
 19025  0057A8                     _validateRemoteSerialNumber:
 19026                           	callstack 14
 19027                           
 19028                           ; BSR set to: 0
 19029                           ;controlMemory_MC50.c: 29:     char j=0;
 19030                           
 19031                           ; BSR set to: 0
 19032                           ;incstack = 0
 19033  0057A8  0E00               	movlw	0
 19034  0057AA  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19035                           
 19036                           ; BSR set to: 0
 19037                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 19038  0057AC  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 19039  0057AE  A4D8               	btfss	status,2,c
 19040  0057B0  D009               	goto	l1436
 19041                           
 19042                           ; BSR set to: 0
 19043                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 19044  0057B2  0EFF               	movlw	255
 19045  0057B4  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 19046  0057B6  0EFF               	movlw	255
 19047  0057B8  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 19048  0057BA  0EFF               	movlw	255
 19049  0057BC  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 19050  0057BE  0E0F               	movlw	15
 19051  0057C0  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 19052                           
 19053                           ;controlMemory_MC50.c: 36:     }
 19054  0057C2  D004               	goto	l19756
 19055  0057C4                     l1436:
 19056                           
 19057                           ; BSR set to: 0
 19058                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 19059  0057C4  6835               	setf	validateRemoteSerialNumber@mask^0,c
 19060  0057C6  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 19061  0057C8  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 19062  0057CA  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 19063  0057CC                     l19756:
 19064                           
 19065                           ; BSR set to: 0
 19066                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 19067  0057CC  0E00               	movlw	0
 19068  0057CE  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19069  0057D0  D056               	goto	l19774
 19070  0057D2                     l19758:
 19071                           
 19072                           ; BSR set to: 0
 19073                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 19074  0057D2  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19075  0057D6  0E03               	movlw	3
 19076  0057D8  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19077  0057DA  A4D8               	btfss	status,2,c
 19078  0057DC  D01C               	goto	l19764
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 19082  0057DE  0E00               	movlw	0
 19083  0057E0  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19084                           
 19085                           ; BSR set to: 0
 19086                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19087  0057E2  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19088  0057E4  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19089  0057E6  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19090  0057E8  90D8               	bcf	status,0,c
 19091  0057EA  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19092  0057EC  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19093  0057EE  90D8               	bcf	status,0,c
 19094  0057F0  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19095  0057F2  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19096  0057F4  0E00               	movlw	0
 19097  0057F6  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19098  0057F8  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19099  0057FA  0E02               	movlw	2
 19100  0057FC  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19101  0057FE  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19102  005800  0EA2               	movlw	low _memoryTEMP
 19103  005802  6E24               	movwf	i2c_readDataBlock@data^0,c
 19104  005804  0E02               	movlw	high _memoryTEMP
 19105  005806  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19106  005808  0E00               	movlw	0
 19107  00580A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19108  00580C  0E10               	movlw	16
 19109  00580E  6E26               	movwf	i2c_readDataBlock@len^0,c
 19110  005810  0E50               	movlw	80
 19111  005812  ECC8  F03F         	call	_i2c_readDataBlock
 19112  005816                     l19764:
 19113                           
 19114                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19115  005816  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19116  005818  0D04               	mullw	4
 19117  00581A  0EA2               	movlw	low _memoryTEMP
 19118  00581C  24F3               	addwf	243,w,c
 19119  00581E  6ED9               	movwf	fsr2l,c
 19120  005820  0E02               	movlw	high _memoryTEMP
 19121  005822  20F4               	addwfc	prodh,w,c
 19122  005824  6EDA               	movwf	fsr2h,c
 19123  005826  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19124  00582A  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19125  00582E  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19126  005832  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19127  005836  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19128  005838  0100               	movlb	0	; () banked
 19129  00583A  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19130  00583C  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19131  00583E  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19132  005840  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19133  005842  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19134  005844  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19135  005846  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19136  005848  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19137  00584A  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19138  00584C  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19139  00584E  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19140  005850  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19141  005852  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19142  005854  E112               	bnz	l19772
 19143  005856  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19144  005858  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19145  00585A  E10F               	bnz	l19772
 19146  00585C  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19147  00585E  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19148  005860  E10C               	bnz	l19772
 19149  005862  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19150  005864  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19151  005866  A4D8               	btfss	status,2,c
 19152  005868  D008               	goto	l19772
 19153                           
 19154                           ; BSR set to: 0
 19155                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 19156  00586A  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19157  00586E  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19158  005872  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19159                           
 19160                           ; BSR set to: 0
 19161                           ;controlMemory_MC50.c: 54:             return TypeFull;
 19162  005876  0E01               	movlw	1
 19163  005878  0012               	return	
 19164  00587A                     l19772:
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;controlMemory_MC50.c: 57:         j++;
 19168  00587A  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19169                           
 19170                           ;controlMemory_MC50.c: 59:     }
 19171  00587C  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19172  00587E                     l19774:
 19173                           
 19174                           ; BSR set to: 0
 19175  00587E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 19176  005880  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19177  005882  A0D8               	btfss	status,0,c
 19178  005884  D7A6               	goto	l19758
 19179                           
 19180                           ; BSR set to: 0
 19181                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 19182  005886  0E00               	movlw	0
 19183  005888  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 19184  00588A  D056               	goto	l19794
 19185  00588C                     l19778:
 19186                           
 19187                           ; BSR set to: 0
 19188                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 19189  00588C  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 19190  005890  0E03               	movlw	3
 19191  005892  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 19192  005894  A4D8               	btfss	status,2,c
 19193  005896  D01C               	goto	l19784
 19194                           
 19195                           ; BSR set to: 0
 19196                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 19197  005898  0E00               	movlw	0
 19198  00589A  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 19199                           
 19200                           ; BSR set to: 0
 19201                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 19202  00589C  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 19203  00589E  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 19204  0058A0  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 19205  0058A2  90D8               	bcf	status,0,c
 19206  0058A4  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19207  0058A6  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19208  0058A8  90D8               	bcf	status,0,c
 19209  0058AA  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 19210  0058AC  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 19211  0058AE  0E00               	movlw	0
 19212  0058B0  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 19213  0058B2  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19214  0058B4  0E05               	movlw	5
 19215  0058B6  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19216  0058B8  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19217  0058BA  0EA2               	movlw	low _memoryTEMP
 19218  0058BC  6E24               	movwf	i2c_readDataBlock@data^0,c
 19219  0058BE  0E02               	movlw	high _memoryTEMP
 19220  0058C0  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 19221  0058C2  0E00               	movlw	0
 19222  0058C4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19223  0058C6  0E10               	movlw	16
 19224  0058C8  6E26               	movwf	i2c_readDataBlock@len^0,c
 19225  0058CA  0E50               	movlw	80
 19226  0058CC  ECC8  F03F         	call	_i2c_readDataBlock
 19227  0058D0                     l19784:
 19228                           
 19229                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 19230  0058D0  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 19231  0058D2  0D04               	mullw	4
 19232  0058D4  0EA2               	movlw	low _memoryTEMP
 19233  0058D6  24F3               	addwf	243,w,c
 19234  0058D8  6ED9               	movwf	fsr2l,c
 19235  0058DA  0E02               	movlw	high _memoryTEMP
 19236  0058DC  20F4               	addwfc	prodh,w,c
 19237  0058DE  6EDA               	movwf	fsr2h,c
 19238  0058E0  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 19239  0058E4  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 19240  0058E8  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 19241  0058EC  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 19242  0058F0  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 19243  0058F2  0100               	movlb	0	; () banked
 19244  0058F4  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 19245  0058F6  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 19246  0058F8  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 19247  0058FA  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 19248  0058FC  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 19249  0058FE  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 19250  005900  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 19251  005902  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 19252  005904  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 19253  005906  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 19254  005908  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 19255  00590A  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 19256  00590C  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 19257  00590E  E112               	bnz	l19792
 19258  005910  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 19259  005912  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 19260  005914  E10F               	bnz	l19792
 19261  005916  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 19262  005918  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 19263  00591A  E10C               	bnz	l19792
 19264  00591C  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 19265  00591E  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 19266  005920  A4D8               	btfss	status,2,c
 19267  005922  D008               	goto	l19792
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 19271  005924  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 19272  005928  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 19273  00592C  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 19274                           
 19275                           ; BSR set to: 0
 19276                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 19277  005930  0E02               	movlw	2
 19278  005932  0012               	return	
 19279  005934                     l19792:
 19280                           
 19281                           ; BSR set to: 0
 19282                           ;controlMemory_MC50.c: 75:         j++;
 19283  005934  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 19284                           
 19285                           ;controlMemory_MC50.c: 76:     }
 19286  005936  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 19287  005938                     l19794:
 19288                           
 19289                           ; BSR set to: 0
 19290  005938  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 19291  00593A  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 19292  00593C  A0D8               	btfss	status,0,c
 19293  00593E  D7A6               	goto	l19778
 19294                           
 19295                           ; BSR set to: 0
 19296                           ;controlMemory_MC50.c: 78:     return NoCMD;
 19297  005940  0E00               	movlw	0
 19298                           
 19299                           ; BSR set to: 0
 19300  005942  0012               	return		;funcret
 19301  005944                     __end_of_validateRemoteSerialNumber:
 19302                           	callstack 0
 19303                           
 19304 ;; *************** function _readInputs *****************
 19305 ;; Defined at:
 19306 ;;		line 528 in file "inputs_MC50.c"
 19307 ;; Parameters:    Size  Location     Type
 19308 ;;		None
 19309 ;; Auto vars:     Size  Location     Type
 19310 ;;		None
 19311 ;; Return value:  Size  Location     Type
 19312 ;;                  1    wreg      void 
 19313 ;; Registers used:
 19314 ;;		wreg, status,2, status,0
 19315 ;; Tracked objects:
 19316 ;;		On entry : 3F/1
 19317 ;;		On exit  : 3E/0
 19318 ;;		Unchanged: 0/0
 19319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19324 ;;Total ram usage:        0 bytes
 19325 ;; Hardware stack levels used: 1
 19326 ;; Hardware stack levels required when called: 4
 19327 ;; This function calls:
 19328 ;;		Nothing
 19329 ;; This function is called by:
 19330 ;;		_main
 19331 ;; This function uses a non-reentrant model
 19332 ;;
 19333                           
 19334                           	psect	text71
 19335  006AA2                     __ptext71:
 19336                           	callstack 0
 19337  006AA2                     _readInputs:
 19338                           	callstack 26
 19339                           
 19340                           ; BSR set to: 1
 19341                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 19342                           
 19343                           ; BSR set to: 0
 19344                           ;incstack = 0
 19345  006AA2  0100               	movlb	0	; () banked
 19346  006AA4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19347  006AA6  A4D8               	btfss	status,2,c
 19348  006AA8  D006               	goto	l16740
 19349                           
 19350                           ; BSR set to: 0
 19351  006AAA  0E00               	movlw	0
 19352  006AAC  B28D               	btfsc	141,1,c	;volatile
 19353  006AAE  0E01               	movlw	1
 19354  006AB0  0101               	movlb	1	; () banked
 19355  006AB2  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19356  006AB4  D005               	goto	l16742
 19357  006AB6                     l16740:
 19358                           
 19359                           ; BSR set to: 0
 19360  006AB6  0E00               	movlw	0
 19361  006AB8  B48D               	btfsc	141,2,c	;volatile
 19362  006ABA  0E01               	movlw	1
 19363  006ABC  0101               	movlb	1	; () banked
 19364  006ABE  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 19365  006AC0                     l16742:
 19366                           
 19367                           ; BSR set to: 1
 19368                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 19369  006AC0  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 19370  006AC2  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 19371  006AC4  A4D8               	btfss	status,2,c
 19372  006AC6  D002               	goto	l1726
 19373                           
 19374                           ; BSR set to: 1
 19375                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 19376  006AC8  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 19377                           
 19378                           ;inputs_MC50.c: 544:     }
 19379  006ACA  D004               	goto	l1727
 19380  006ACC                     l1726:
 19381                           
 19382                           ; BSR set to: 1
 19383                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 19384  006ACC  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 19385                           
 19386                           ; BSR set to: 1
 19387                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 19388  006AD0  0E00               	movlw	0
 19389  006AD2  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 19390  006AD4                     l1727:
 19391                           
 19392                           ; BSR set to: 1
 19393                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 19394  006AD4  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 19395  006AD6  A4D8               	btfss	status,2,c
 19396                           
 19397                           ; BSR set to: 1
 19398                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 19399  006AD8  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 19400                           
 19401                           ; BSR set to: 1
 19402                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 19403  006ADC  0100               	movlb	0	; () banked
 19404  006ADE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 19405  006AE0  A4D8               	btfss	status,2,c
 19406  006AE2  D006               	goto	l16754
 19407                           
 19408                           ; BSR set to: 0
 19409  006AE4  0E00               	movlw	0
 19410  006AE6  B48D               	btfsc	141,2,c	;volatile
 19411  006AE8  0E01               	movlw	1
 19412  006AEA  0101               	movlb	1	; () banked
 19413  006AEC  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19414  006AEE  D005               	goto	l16756
 19415  006AF0                     l16754:
 19416                           
 19417                           ; BSR set to: 0
 19418  006AF0  0E00               	movlw	0
 19419  006AF2  B28D               	btfsc	141,1,c	;volatile
 19420  006AF4  0E01               	movlw	1
 19421  006AF6  0101               	movlb	1	; () banked
 19422  006AF8  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 19423  006AFA                     l16756:
 19424                           
 19425                           ; BSR set to: 1
 19426                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 19427  006AFA  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 19428  006AFC  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 19429  006AFE  A4D8               	btfss	status,2,c
 19430  006B00  D002               	goto	l1731
 19431                           
 19432                           ; BSR set to: 1
 19433                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 19434  006B02  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 19435                           
 19436                           ;inputs_MC50.c: 573:     }
 19437  006B04  D004               	goto	l1732
 19438  006B06                     l1731:
 19439                           
 19440                           ; BSR set to: 1
 19441                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 19442  006B06  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 19443                           
 19444                           ; BSR set to: 1
 19445                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 19446  006B0A  0E00               	movlw	0
 19447  006B0C  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 19448  006B0E                     l1732:
 19449                           
 19450                           ; BSR set to: 1
 19451                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 19452  006B0E  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 19453  006B10  A4D8               	btfss	status,2,c
 19454                           
 19455                           ; BSR set to: 1
 19456                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 19457  006B12  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 19458                           
 19459                           ; BSR set to: 1
 19460                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 19461  006B16  0E00               	movlw	0
 19462  006B18  B88D               	btfsc	141,4,c	;volatile
 19463  006B1A  0E01               	movlw	1
 19464  006B1C  6F6A               	movwf	_security& (0+255),b	;volatile
 19465                           
 19466                           ; BSR set to: 1
 19467                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 19468  006B1E  516A               	movf	_security& (0+255),w,b	;volatile
 19469  006B20  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 19470  006B22  A4D8               	btfss	status,2,c
 19471  006B24  D002               	goto	l1734
 19472                           
 19473                           ; BSR set to: 1
 19474                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 19475  006B26  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 19476                           
 19477                           ;inputs_MC50.c: 597:     }
 19478  006B28  D004               	goto	l1735
 19479  006B2A                     l1734:
 19480                           
 19481                           ; BSR set to: 1
 19482                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 19483  006B2A  C16A  F16B         	movff	_security,_security+1	;volatile
 19484                           
 19485                           ; BSR set to: 1
 19486                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 19487  006B2E  0E00               	movlw	0
 19488  006B30  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 19489  006B32                     l1735:
 19490                           
 19491                           ; BSR set to: 1
 19492                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 19493  006B32  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 19494  006B34  A4D8               	btfss	status,2,c
 19495                           
 19496                           ; BSR set to: 1
 19497                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 19498  006B36  C16A  F101         	movff	_security,_var_sys+1	;volatile
 19499                           
 19500                           ; BSR set to: 1
 19501                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 19502  006B3A  0E00               	movlw	0
 19503  006B3C  BA8D               	btfsc	141,5,c	;volatile
 19504  006B3E  0E01               	movlw	1
 19505  006B40  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 19506                           
 19507                           ; BSR set to: 1
 19508                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 19509  006B42  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 19510  006B44  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 19511  006B46  A4D8               	btfss	status,2,c
 19512  006B48  D002               	goto	l1737
 19513                           
 19514                           ; BSR set to: 1
 19515                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19516  006B4A  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19517                           
 19518                           ;inputs_MC50.c: 619:     }
 19519  006B4C  D004               	goto	l1738
 19520  006B4E                     l1737:
 19521                           
 19522                           ; BSR set to: 1
 19523                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19524  006B4E  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19525                           
 19526                           ; BSR set to: 1
 19527                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19528  006B52  0E00               	movlw	0
 19529  006B54  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19530  006B56                     l1738:
 19531                           
 19532                           ; BSR set to: 1
 19533                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19534  006B56  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19535  006B58  A4D8               	btfss	status,2,c
 19536                           
 19537                           ; BSR set to: 1
 19538                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19539  006B5A  C16D  F170         	movff	_security+3,_security+6	;volatile
 19540                           
 19541                           ; BSR set to: 1
 19542                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19543  006B5E  0E00               	movlw	0
 19544  006B60  BC8D               	btfsc	141,6,c	;volatile
 19545  006B62  0E01               	movlw	1
 19546  006B64  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19547                           
 19548                           ; BSR set to: 1
 19549                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19550  006B66  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19551  006B68  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19552  006B6A  A4D8               	btfss	status,2,c
 19553  006B6C  D002               	goto	l1740
 19554                           
 19555                           ; BSR set to: 1
 19556                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19557  006B6E  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19558                           
 19559                           ;inputs_MC50.c: 640:     }
 19560  006B70  D004               	goto	l1741
 19561  006B72                     l1740:
 19562                           
 19563                           ; BSR set to: 1
 19564                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19565  006B72  C171  F172         	movff	_security+7,_security+8	;volatile
 19566                           
 19567                           ; BSR set to: 1
 19568                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19569  006B76  0E00               	movlw	0
 19570  006B78  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19571  006B7A                     l1741:
 19572                           
 19573                           ; BSR set to: 1
 19574                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19575  006B7A  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19576  006B7C  A4D8               	btfss	status,2,c
 19577                           
 19578                           ; BSR set to: 1
 19579                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19580  006B7E  C171  F174         	movff	_security+7,_security+10	;volatile
 19581                           
 19582                           ; BSR set to: 1
 19583                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19584  006B82  0100               	movlb	0	; () banked
 19585  006B84  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19586  006B86  A4D8               	btfss	status,2,c
 19587  006B88  D00D               	goto	l1743
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19591  006B8A  0101               	movlb	1	; () banked
 19592  006B8C  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19593  006B8E  A4D8               	btfss	status,2,c
 19594  006B90  D006               	goto	l16802
 19595                           
 19596                           ; BSR set to: 1
 19597  006B92  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19598  006B94  A4D8               	btfss	status,2,c
 19599  006B96  D003               	goto	l16802
 19600                           
 19601                           ; BSR set to: 1
 19602                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19603  006B98  0E00               	movlw	0
 19604  006B9A  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19605                           
 19606                           ;inputs_MC50.c: 660:         }
 19607  006B9C  0012               	return	
 19608  006B9E                     l16802:
 19609                           
 19610                           ; BSR set to: 1
 19611                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19612  006B9E  0E01               	movlw	1
 19613  006BA0  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19614  006BA2  0012               	return	
 19615  006BA4                     l1743:
 19616                           
 19617                           ; BSR set to: 0
 19618                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19619  006BA4  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19620  006BA8  0012               	return		;funcret
 19621  006BAA                     __end_of_readInputs:
 19622                           	callstack 0
 19623                           
 19624 ;; *************** function _loadNVM_VarSystem *****************
 19625 ;; Defined at:
 19626 ;;		line 139 in file "controlMemory_MC50.c"
 19627 ;; Parameters:    Size  Location     Type
 19628 ;;		None
 19629 ;; Auto vars:     Size  Location     Type
 19630 ;;		None
 19631 ;; Return value:  Size  Location     Type
 19632 ;;                  1    wreg      void 
 19633 ;; Registers used:
 19634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19635 ;; Tracked objects:
 19636 ;;		On entry : 3F/0
 19637 ;;		On exit  : 0/0
 19638 ;;		Unchanged: 0/0
 19639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19644 ;;Total ram usage:        0 bytes
 19645 ;; Hardware stack levels used: 1
 19646 ;; Hardware stack levels required when called: 15
 19647 ;; This function calls:
 19648 ;;		_I2C1_Read1ByteRegister
 19649 ;;		_ResetDefaultMemory
 19650 ;;		_SaveNVM_VarSystem
 19651 ;;		_checkNVM_VarSystem
 19652 ;;		_i2c_readDataBlock
 19653 ;; This function is called by:
 19654 ;;		_main
 19655 ;; This function uses a non-reentrant model
 19656 ;;
 19657                           
 19658                           	psect	text72
 19659  00650A                     __ptext72:
 19660                           	callstack 0
 19661  00650A                     _loadNVM_VarSystem:
 19662                           	callstack 15
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;controlMemory_MC50.c: 141:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19666                           
 19667                           ;incstack = 0
 19668  00650A  0E00               	movlw	0
 19669  00650C  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19670  00650E  0E50               	movlw	80
 19671  006510  EC74  F042         	call	_I2C1_Read1ByteRegister
 19672  006514  0AFF               	xorlw	255
 19673  006516  A4D8               	btfss	status,2,c
 19674  006518  D04C               	goto	l22870
 19675  00651A  0E10               	movlw	16
 19676  00651C  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19677  00651E  0E50               	movlw	80
 19678  006520  EC74  F042         	call	_I2C1_Read1ByteRegister
 19679  006524  0AFF               	xorlw	255
 19680  006526  A4D8               	btfss	status,2,c
 19681  006528  D044               	goto	l22870
 19682                           
 19683                           ;controlMemory_MC50.c: 142:     {;controlMemory_MC50.c: 143:         ResetDefaultMemory(
      +                          SC);
 19684  00652A  0E00               	movlw	0
 19685  00652C  EC07  F02F         	call	_ResetDefaultMemory
 19686                           
 19687                           ;controlMemory_MC50.c: 144:         var_sys_NVM.learningTimeToClose = 0;
 19688  006530  0E00               	movlw	0
 19689  006532  0100               	movlb	0	; () banked
 19690  006534  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19691  006536  0E00               	movlw	0
 19692  006538  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19693  00653A  0E00               	movlw	0
 19694  00653C  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19695  00653E  0E00               	movlw	0
 19696  006540  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19697                           
 19698                           ; BSR set to: 0
 19699                           ;controlMemory_MC50.c: 145:         var_sys_NVM.learningTimeToOpen = 0;
 19700  006542  0E00               	movlw	0
 19701  006544  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19702  006546  0E00               	movlw	0
 19703  006548  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19704  00654A  0E00               	movlw	0
 19705  00654C  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19706  00654E  0E00               	movlw	0
 19707  006550  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19708                           
 19709                           ; BSR set to: 0
 19710                           ;controlMemory_MC50.c: 146:         var_sys_NVM.learningCurrentNormalClose = 0;
 19711  006552  0E00               	movlw	0
 19712  006554  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19713  006556  0E00               	movlw	0
 19714  006558  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19715                           
 19716                           ; BSR set to: 0
 19717                           ;controlMemory_MC50.c: 147:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19718  00655A  0E00               	movlw	0
 19719  00655C  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19720  00655E  0E00               	movlw	0
 19721  006560  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19722                           
 19723                           ; BSR set to: 0
 19724                           ;controlMemory_MC50.c: 148:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19725  006562  0E00               	movlw	0
 19726  006564  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19727  006566  0E00               	movlw	0
 19728  006568  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19729  00656A  0E00               	movlw	0
 19730  00656C  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19731  00656E  0E00               	movlw	0
 19732  006570  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;controlMemory_MC50.c: 149:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19736  006572  0E00               	movlw	0
 19737  006574  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19738  006576  0E00               	movlw	0
 19739  006578  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19740  00657A  0E00               	movlw	0
 19741  00657C  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19742  00657E  0E00               	movlw	0
 19743  006580  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19744                           
 19745                           ;controlMemory_MC50.c: 150:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19746  006582  0E03               	movlw	3
 19747  006584  EC20  F046         	call	_SaveNVM_VarSystem
 19748                           
 19749                           ;controlMemory_MC50.c: 151:         var_sys_NVM.positionRemotesFull = 0;
 19750  006588  0E00               	movlw	0
 19751  00658A  0100               	movlb	0	; () banked
 19752  00658C  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;controlMemory_MC50.c: 152:         var_sys_NVM.positionRemotesWalk = 0;
 19756  00658E  0E00               	movlw	0
 19757  006590  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19758                           
 19759                           ; BSR set to: 0
 19760                           ;controlMemory_MC50.c: 153:         var_sys_NVM.OnlyRollingCode = NO;
 19761  006592  0E00               	movlw	0
 19762  006594  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19763                           
 19764                           ; BSR set to: 0
 19765                           ;controlMemory_MC50.c: 154:         var_sys_NVM.counterMoves = 0;
 19766  006596  0E00               	movlw	0
 19767  006598  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19768  00659A  0E00               	movlw	0
 19769  00659C  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19770  00659E  0E00               	movlw	0
 19771  0065A0  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19772  0065A2  0E00               	movlw	0
 19773  0065A4  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19774                           
 19775                           ;controlMemory_MC50.c: 155:        SaveNVM_VarSystem(pageMemoryCounters);
 19776  0065A6  0E02               	movlw	2
 19777  0065A8  EC20  F046         	call	_SaveNVM_VarSystem
 19778                           
 19779                           ;controlMemory_MC50.c: 157:          var_sys_NVM.TypeofMotor = 0;
 19780  0065AC  0E00               	movlw	0
 19781  0065AE  0100               	movlb	0	; () banked
 19782  0065B0  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19783  0065B2                     l22870:
 19784                           
 19785                           ;controlMemory_MC50.c: 160:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19786  0065B2  0E00               	movlw	0
 19787  0065B4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19788  0065B6  0E00               	movlw	0
 19789  0065B8  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19790  0065BA  0E98               	movlw	low _var_sys_NVM
 19791  0065BC  6E24               	movwf	i2c_readDataBlock@data^0,c
 19792  0065BE  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19793  0065C0  0E00               	movlw	0
 19794  0065C2  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19795  0065C4  0E10               	movlw	16
 19796  0065C6  6E26               	movwf	i2c_readDataBlock@len^0,c
 19797  0065C8  0E50               	movlw	80
 19798  0065CA  ECC8  F03F         	call	_i2c_readDataBlock
 19799                           
 19800                           ;controlMemory_MC50.c: 161:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19801  0065CE  0E00               	movlw	0
 19802  0065D0  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19803  0065D2  0E10               	movlw	16
 19804  0065D4  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19805  0065D6  0EA8               	movlw	low (_var_sys_NVM+16)
 19806  0065D8  6E24               	movwf	i2c_readDataBlock@data^0,c
 19807  0065DA  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19808  0065DC  0E00               	movlw	0
 19809  0065DE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19810  0065E0  0E10               	movlw	16
 19811  0065E2  6E26               	movwf	i2c_readDataBlock@len^0,c
 19812  0065E4  0E50               	movlw	80
 19813  0065E6  ECC8  F03F         	call	_i2c_readDataBlock
 19814                           
 19815                           ;controlMemory_MC50.c: 162:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19816  0065EA  0E00               	movlw	0
 19817  0065EC  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19818  0065EE  0E20               	movlw	32
 19819  0065F0  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19820  0065F2  0EB8               	movlw	low (_var_sys_NVM+32)
 19821  0065F4  6E24               	movwf	i2c_readDataBlock@data^0,c
 19822  0065F6  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19823  0065F8  0E00               	movlw	0
 19824  0065FA  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19825  0065FC  0E10               	movlw	16
 19826  0065FE  6E26               	movwf	i2c_readDataBlock@len^0,c
 19827  006600  0E50               	movlw	80
 19828  006602  ECC8  F03F         	call	_i2c_readDataBlock
 19829                           
 19830                           ;controlMemory_MC50.c: 163:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19831  006606  0E00               	movlw	0
 19832  006608  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19833  00660A  0E30               	movlw	48
 19834  00660C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19835  00660E  0EC8               	movlw	low (_var_sys_NVM+48)
 19836  006610  6E24               	movwf	i2c_readDataBlock@data^0,c
 19837  006612  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19838  006614  0E00               	movlw	0
 19839  006616  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19840  006618  0E10               	movlw	16
 19841  00661A  6E26               	movwf	i2c_readDataBlock@len^0,c
 19842  00661C  0E50               	movlw	80
 19843  00661E  ECC8  F03F         	call	_i2c_readDataBlock
 19844                           
 19845                           ;controlMemory_MC50.c: 166:     checkNVM_VarSystem();
 19846  006622  EC04  F02B         	call	_checkNVM_VarSystem	;wreg free
 19847                           
 19848                           ;controlMemory_MC50.c: 168:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19849  006626  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19850  00662A  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19851  00662E  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19852  006632  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19853  006636  0012               	return		;funcret
 19854  006638                     __end_of_loadNVM_VarSystem:
 19855                           	callstack 0
 19856                           
 19857 ;; *************** function _checkNVM_VarSystem *****************
 19858 ;; Defined at:
 19859 ;;		line 314 in file "controlMemory_MC50.c"
 19860 ;; Parameters:    Size  Location     Type
 19861 ;;		None
 19862 ;; Auto vars:     Size  Location     Type
 19863 ;;  saveParam       1   57[COMRAM] unsigned char 
 19864 ;; Return value:  Size  Location     Type
 19865 ;;                  1    wreg      void 
 19866 ;; Registers used:
 19867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19868 ;; Tracked objects:
 19869 ;;		On entry : 0/2
 19870 ;;		On exit  : 0/0
 19871 ;;		Unchanged: 0/0
 19872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19877 ;;Total ram usage:        1 bytes
 19878 ;; Hardware stack levels used: 1
 19879 ;; Hardware stack levels required when called: 14
 19880 ;; This function calls:
 19881 ;;		_SaveNVM_VarSystem
 19882 ;; This function is called by:
 19883 ;;		_loadNVM_VarSystem
 19884 ;; This function uses a non-reentrant model
 19885 ;;
 19886                           
 19887                           	psect	text73
 19888  005608                     __ptext73:
 19889                           	callstack 0
 19890  005608                     _checkNVM_VarSystem:
 19891                           	callstack 15
 19892                           
 19893                           ;controlMemory_MC50.c: 316:     char saveParam;;controlMemory_MC50.c: 319:     saveParam
      +                           = 0;
 19894                           
 19895                           ;incstack = 0
 19896  005608  0E00               	movlw	0
 19897  00560A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19898                           
 19899                           ;controlMemory_MC50.c: 327:     if ( var_sys_NVM.decelarationOpen>45 )
 19900  00560C  0E2D               	movlw	45
 19901  00560E  0100               	movlb	0	; () banked
 19902  005610  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19903  005612  D004               	goto	l21320
 19904                           
 19905                           ; BSR set to: 0
 19906                           ;controlMemory_MC50.c: 328:     {;controlMemory_MC50.c: 330:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19907  005614  0E03               	movlw	3
 19908  005616  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19909                           
 19910                           ;controlMemory_MC50.c: 331:         saveParam=1;
 19911  005618  0E01               	movlw	1
 19912  00561A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19913  00561C                     l21320:
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;controlMemory_MC50.c: 334:     if ( var_sys_NVM.decelarationClose>45 )
 19917  00561C  0E2D               	movlw	45
 19918  00561E  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19919  005620  D004               	goto	l1490
 19920                           
 19921                           ; BSR set to: 0
 19922                           ;controlMemory_MC50.c: 335:     {;controlMemory_MC50.c: 337:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19923  005622  0E03               	movlw	3
 19924  005624  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19925                           
 19926                           ;controlMemory_MC50.c: 338:         saveParam=1;
 19927  005626  0E01               	movlw	1
 19928  005628  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19929  00562A                     l1490:
 19930                           
 19931                           ; BSR set to: 0
 19932                           ;controlMemory_MC50.c: 341:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19933  00562A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19934  00562C  B4D8               	btfsc	status,2,c
 19935  00562E  D003               	goto	u24540
 19936                           
 19937                           ; BSR set to: 0
 19938  005630  0E09               	movlw	9
 19939  005632  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19940  005634  D004               	goto	l21328
 19941  005636                     u24540:
 19942                           
 19943                           ; BSR set to: 0
 19944                           ;controlMemory_MC50.c: 342:     {;controlMemory_MC50.c: 344:         var_sys_NVM.motorPo
      +                          wer = 9;
 19945  005636  0E09               	movlw	9
 19946  005638  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19947                           
 19948                           ;controlMemory_MC50.c: 345:         saveParam=1;
 19949  00563A  0E01               	movlw	1
 19950  00563C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19951  00563E                     l21328:
 19952                           
 19953                           ; BSR set to: 0
 19954                           ;controlMemory_MC50.c: 348:     if ( var_sys_NVM.motorSensitivity>9 )
 19955  00563E  0E09               	movlw	9
 19956  005640  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19957  005642  D004               	goto	l21332
 19958                           
 19959                           ; BSR set to: 0
 19960                           ;controlMemory_MC50.c: 349:     {;controlMemory_MC50.c: 351:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19961  005644  0E00               	movlw	0
 19962  005646  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19963                           
 19964                           ;controlMemory_MC50.c: 352:         saveParam=1;
 19965  005648  0E01               	movlw	1
 19966  00564A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19967  00564C                     l21332:
 19968                           
 19969                           ; BSR set to: 0
 19970                           ;controlMemory_MC50.c: 355:     if ( var_sys_NVM.walkTime>99 )
 19971  00564C  0E63               	movlw	99
 19972  00564E  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19973  005650  D004               	goto	l21336
 19974                           
 19975                           ; BSR set to: 0
 19976                           ;controlMemory_MC50.c: 356:     {;controlMemory_MC50.c: 358:         var_sys_NVM.walkTim
      +                          e = 10;
 19977  005652  0E0A               	movlw	10
 19978  005654  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19979                           
 19980                           ;controlMemory_MC50.c: 359:         saveParam=1;
 19981  005656  0E01               	movlw	1
 19982  005658  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19983  00565A                     l21336:
 19984                           
 19985                           ; BSR set to: 0
 19986                           ;controlMemory_MC50.c: 362:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19987  00565A  0E63               	movlw	99
 19988  00565C  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19989  00565E  D004               	goto	l21340
 19990                           
 19991                           ; BSR set to: 0
 19992                           ;controlMemory_MC50.c: 363:     {;controlMemory_MC50.c: 365:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19993  005660  0E00               	movlw	0
 19994  005662  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19995                           
 19996                           ;controlMemory_MC50.c: 366:         saveParam=1;
 19997  005664  0E01               	movlw	1
 19998  005666  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19999  005668                     l21340:
 20000                           
 20001                           ; BSR set to: 0
 20002                           ;controlMemory_MC50.c: 369:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 20003  005668  0E63               	movlw	99
 20004  00566A  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 20005  00566C  D004               	goto	l21344
 20006                           
 20007                           ; BSR set to: 0
 20008                           ;controlMemory_MC50.c: 370:     {;controlMemory_MC50.c: 372:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 20009  00566E  0E00               	movlw	0
 20010  005670  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20011                           
 20012                           ;controlMemory_MC50.c: 373:         saveParam=1;
 20013  005672  0E01               	movlw	1
 20014  005674  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20015  005676                     l21344:
 20016                           
 20017                           ; BSR set to: 0
 20018                           ;controlMemory_MC50.c: 376:     if ( var_sys_NVM.photoCellIsON>1 )
 20019  005676  0E01               	movlw	1
 20020  005678  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 20021  00567A  D004               	goto	l21348
 20022                           
 20023                           ; BSR set to: 0
 20024                           ;controlMemory_MC50.c: 377:     {;controlMemory_MC50.c: 379:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 20025  00567C  0E00               	movlw	0
 20026  00567E  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20027                           
 20028                           ;controlMemory_MC50.c: 380:         saveParam=1;
 20029  005680  0E01               	movlw	1
 20030  005682  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20031  005684                     l21348:
 20032                           
 20033                           ; BSR set to: 0
 20034                           ;controlMemory_MC50.c: 383:     if ( var_sys_NVM.photoCellInOpen>1 )
 20035  005684  0E01               	movlw	1
 20036  005686  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 20037  005688  D004               	goto	l21352
 20038                           
 20039                           ; BSR set to: 0
 20040                           ;controlMemory_MC50.c: 384:     {;controlMemory_MC50.c: 386:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 20041  00568A  0E00               	movlw	0
 20042  00568C  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20043                           
 20044                           ;controlMemory_MC50.c: 387:         saveParam=1;
 20045  00568E  0E01               	movlw	1
 20046  005690  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20047  005692                     l21352:
 20048                           
 20049                           ; BSR set to: 0
 20050                           ;controlMemory_MC50.c: 390:     if ( var_sys_NVM.securityBandIsON>1 )
 20051  005692  0E01               	movlw	1
 20052  005694  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 20053  005696  D004               	goto	l21356
 20054                           
 20055                           ; BSR set to: 0
 20056                           ;controlMemory_MC50.c: 391:     {;controlMemory_MC50.c: 393:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 20057  005698  0E00               	movlw	0
 20058  00569A  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20059                           
 20060                           ;controlMemory_MC50.c: 394:         saveParam=1;
 20061  00569C  0E01               	movlw	1
 20062  00569E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20063  0056A0                     l21356:
 20064                           
 20065                           ; BSR set to: 0
 20066                           ;controlMemory_MC50.c: 397:     if ( var_sys_NVM.securityBandType>1 )
 20067  0056A0  0E01               	movlw	1
 20068  0056A2  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 20069  0056A4  D004               	goto	l21360
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;controlMemory_MC50.c: 398:     {;controlMemory_MC50.c: 400:         var_sys_NVM.securit
      +                          yBandType = 1;
 20073  0056A6  0E01               	movlw	1
 20074  0056A8  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20075                           
 20076                           ;controlMemory_MC50.c: 401:         saveParam=1;
 20077  0056AA  0E01               	movlw	1
 20078  0056AC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20079  0056AE                     l21360:
 20080                           
 20081                           ; BSR set to: 0
 20082                           ;controlMemory_MC50.c: 404:     if ( var_sys_NVM.securityBandInOpen>1 )
 20083  0056AE  0E01               	movlw	1
 20084  0056B0  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 20085  0056B2  D004               	goto	l21364
 20086                           
 20087                           ; BSR set to: 0
 20088                           ;controlMemory_MC50.c: 405:     {;controlMemory_MC50.c: 407:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 20089  0056B4  0E00               	movlw	0
 20090  0056B6  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20091                           
 20092                           ;controlMemory_MC50.c: 408:         saveParam=1;
 20093  0056B8  0E01               	movlw	1
 20094  0056BA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20095  0056BC                     l21364:
 20096                           
 20097                           ; BSR set to: 0
 20098                           ;controlMemory_MC50.c: 411:     if ( var_sys_NVM.operationMode>2 )
 20099  0056BC  0E02               	movlw	2
 20100  0056BE  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 20101  0056C0  D004               	goto	l21368
 20102                           
 20103                           ; BSR set to: 0
 20104                           ;controlMemory_MC50.c: 412:     {;controlMemory_MC50.c: 414:         var_sys_NVM.operati
      +                          onMode = 0;
 20105  0056C2  0E00               	movlw	0
 20106  0056C4  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20107                           
 20108                           ;controlMemory_MC50.c: 415:         saveParam=1;
 20109  0056C6  0E01               	movlw	1
 20110  0056C8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20111  0056CA                     l21368:
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;controlMemory_MC50.c: 418:     if ( var_sys_NVM.flashLightMode>3 )
 20115  0056CA  0E03               	movlw	3
 20116  0056CC  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 20117  0056CE  D004               	goto	l21372
 20118                           
 20119                           ; BSR set to: 0
 20120                           ;controlMemory_MC50.c: 419:     {;controlMemory_MC50.c: 421:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 20121  0056D0  0E00               	movlw	0
 20122  0056D2  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20123                           
 20124                           ;controlMemory_MC50.c: 422:         saveParam=1;
 20125  0056D4  0E01               	movlw	1
 20126  0056D6  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20127  0056D8                     l21372:
 20128                           
 20129                           ; BSR set to: 0
 20130                           ;controlMemory_MC50.c: 425:     if ( var_sys_NVM.programmingDistance>1 )
 20131  0056D8  0E01               	movlw	1
 20132  0056DA  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 20133  0056DC  D004               	goto	l21376
 20134                           
 20135                           ; BSR set to: 0
 20136                           ;controlMemory_MC50.c: 426:     {;controlMemory_MC50.c: 428:         var_sys_NVM.program
      +                          mingDistance = 0;
 20137  0056DE  0E00               	movlw	0
 20138  0056E0  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20139                           
 20140                           ;controlMemory_MC50.c: 429:         saveParam=1;
 20141  0056E2  0E01               	movlw	1
 20142  0056E4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20143  0056E6                     l21376:
 20144                           
 20145                           ; BSR set to: 0
 20146                           ;controlMemory_MC50.c: 432:     if ( var_sys_NVM.decelarationSensivity>9 )
 20147  0056E6  0E09               	movlw	9
 20148  0056E8  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 20149  0056EA  D004               	goto	l21380
 20150                           
 20151                           ; BSR set to: 0
 20152                           ;controlMemory_MC50.c: 433:     {;controlMemory_MC50.c: 435:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 20153  0056EC  0E00               	movlw	0
 20154  0056EE  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20155                           
 20156                           ;controlMemory_MC50.c: 436:         saveParam=1;
 20157  0056F0  0E01               	movlw	1
 20158  0056F2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20159  0056F4                     l21380:
 20160                           
 20161                           ; BSR set to: 0
 20162                           ;controlMemory_MC50.c: 441:     if ( var_sys_NVM.homemPresente>2 )
 20163  0056F4  0E02               	movlw	2
 20164  0056F6  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 20165  0056F8  D004               	goto	l21384
 20166                           
 20167                           ; BSR set to: 0
 20168                           ;controlMemory_MC50.c: 442:     {;controlMemory_MC50.c: 444:         var_sys_NVM.homemPr
      +                          esente = 0;
 20169  0056FA  0E00               	movlw	0
 20170  0056FC  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20171                           
 20172                           ;controlMemory_MC50.c: 445:         saveParam=1;
 20173  0056FE  0E01               	movlw	1
 20174  005700  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20175  005702                     l21384:
 20176                           
 20177                           ; BSR set to: 0
 20178                           ;controlMemory_MC50.c: 448:     if ( var_sys_NVM.logicDigital>1 )
 20179  005702  0E01               	movlw	1
 20180  005704  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 20181  005706  D004               	goto	l21388
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;controlMemory_MC50.c: 449:     {;controlMemory_MC50.c: 451:         var_sys_NVM.logicDi
      +                          gital = 0;
 20185  005708  0E00               	movlw	0
 20186  00570A  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20187                           
 20188                           ;controlMemory_MC50.c: 452:         saveParam=1;
 20189  00570C  0E01               	movlw	1
 20190  00570E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20191  005710                     l21388:
 20192                           
 20193                           ; BSR set to: 0
 20194                           ;controlMemory_MC50.c: 455:     if ( var_sys_NVM.softStart>9 )
 20195  005710  0E09               	movlw	9
 20196  005712  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 20197  005714  D004               	goto	l21392
 20198                           
 20199                           ; BSR set to: 0
 20200                           ;controlMemory_MC50.c: 456:     {;controlMemory_MC50.c: 458:         var_sys_NVM.softSta
      +                          rt = 0;
 20201  005716  0E00               	movlw	0
 20202  005718  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20203                           
 20204                           ;controlMemory_MC50.c: 459:         saveParam=1;
 20205  00571A  0E01               	movlw	1
 20206  00571C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20207  00571E                     l21392:
 20208                           
 20209                           ; BSR set to: 0
 20210                           ;controlMemory_MC50.c: 463:     if ( var_sys_NVM.ligthTime>99 )
 20211  00571E  0E63               	movlw	99
 20212  005720  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 20213  005722  D004               	goto	l21396
 20214                           
 20215                           ; BSR set to: 0
 20216                           ;controlMemory_MC50.c: 464:     {;controlMemory_MC50.c: 466:         var_sys_NVM.ligthTi
      +                          me = 3;
 20217  005724  0E03               	movlw	3
 20218  005726  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20219                           
 20220                           ;controlMemory_MC50.c: 467:         saveParam=1;
 20221  005728  0E01               	movlw	1
 20222  00572A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20223  00572C                     l21396:
 20224                           
 20225                           ; BSR set to: 0
 20226                           ;controlMemory_MC50.c: 470:     if ( var_sys_NVM.folow_me>9 )
 20227  00572C  0E09               	movlw	9
 20228  00572E  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 20229  005730  D004               	goto	l21400
 20230                           
 20231                           ; BSR set to: 0
 20232                           ;controlMemory_MC50.c: 471:     {;controlMemory_MC50.c: 473:         var_sys_NVM.folow_m
      +                          e = 0;
 20233  005732  0E00               	movlw	0
 20234  005734  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20235                           
 20236                           ;controlMemory_MC50.c: 474:         saveParam=1;
 20237  005736  0E01               	movlw	1
 20238  005738  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20239  00573A                     l21400:
 20240                           
 20241                           ; BSR set to: 0
 20242                           ;controlMemory_MC50.c: 479:     if ( var_sys_NVM.electricBrake>1 )
 20243  00573A  0E01               	movlw	1
 20244  00573C  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 20245  00573E  D004               	goto	l1512
 20246                           
 20247                           ; BSR set to: 0
 20248                           ;controlMemory_MC50.c: 480:     {;controlMemory_MC50.c: 482:         var_sys_NVM.electri
      +                          cBrake = 0;
 20249  005740  0E00               	movlw	0
 20250  005742  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20251                           
 20252                           ;controlMemory_MC50.c: 483:         saveParam=1;
 20253  005744  0E01               	movlw	1
 20254  005746  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20255  005748                     l1512:
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;controlMemory_MC50.c: 486:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 20259  005748  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 20260  00574A  B4D8               	btfsc	status,2,c
 20261  00574C  D003               	goto	u24750
 20262                           
 20263                           ; BSR set to: 0
 20264  00574E  0E09               	movlw	9
 20265  005750  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 20266  005752  D004               	goto	l21408
 20267  005754                     u24750:
 20268                           
 20269                           ; BSR set to: 0
 20270                           ;controlMemory_MC50.c: 487:     {;controlMemory_MC50.c: 489:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 20271  005754  0E05               	movlw	5
 20272  005756  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20273                           
 20274                           ;controlMemory_MC50.c: 490:         saveParam=1;
 20275  005758  0E01               	movlw	1
 20276  00575A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20277  00575C                     l21408:
 20278                           
 20279                           ; BSR set to: 0
 20280                           ;controlMemory_MC50.c: 493:     if ( var_sys_NVM.flashRGBMode>3 )
 20281  00575C  0E03               	movlw	3
 20282  00575E  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 20283  005760  D004               	goto	l21412
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;controlMemory_MC50.c: 494:     {;controlMemory_MC50.c: 496:         var_sys_NVM.flashRG
      +                          BMode = 3;
 20287  005762  0E03               	movlw	3
 20288  005764  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20289                           
 20290                           ;controlMemory_MC50.c: 497:         saveParam=1;
 20291  005766  0E01               	movlw	1
 20292  005768  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20293  00576A                     l21412:
 20294                           
 20295                           ; BSR set to: 0
 20296                           ;controlMemory_MC50.c: 499:         if ( var_sys_NVM.Stopboton > 1 )
 20297  00576A  0E01               	movlw	1
 20298  00576C  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 20299  00576E  D004               	goto	l21416
 20300                           
 20301                           ; BSR set to: 0
 20302                           ;controlMemory_MC50.c: 500:     {;controlMemory_MC50.c: 502:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 20303  005770  0E00               	movlw	0
 20304  005772  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20305                           
 20306                           ;controlMemory_MC50.c: 503:         saveParam=1;
 20307  005774  0E01               	movlw	1
 20308  005776  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20309  005778                     l21416:
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;controlMemory_MC50.c: 505:         if ( var_sys_NVM.Direction_motor>1 )
 20313  005778  0E01               	movlw	1
 20314  00577A  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 20315  00577C  D004               	goto	l21420
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.Directi
      +                          on_motor = 1;
 20319  00577E  0E01               	movlw	1
 20320  005780  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20321                           
 20322                           ;controlMemory_MC50.c: 509:         saveParam=1;
 20323  005782  0E01               	movlw	1
 20324  005784  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20325  005786                     l21420:
 20326                           
 20327                           ; BSR set to: 0
 20328                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.softstop>9 )
 20329  005786  0E09               	movlw	9
 20330  005788  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 20331  00578A  D004               	goto	l1519
 20332                           
 20333                           ; BSR set to: 0
 20334                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.softsto
      +                          p = 0;
 20335  00578C  0E00               	movlw	0
 20336  00578E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20337                           
 20338                           ;controlMemory_MC50.c: 515:         saveParam=1;
 20339  005790  0E01               	movlw	1
 20340  005792  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 20341  005794                     l1519:
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;controlMemory_MC50.c: 540:     if ( saveParam != 0 )
 20345  005794  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 20346  005796  B4D8               	btfsc	status,2,c
 20347  005798  0012               	return	
 20348                           
 20349                           ; BSR set to: 0
 20350                           ;controlMemory_MC50.c: 541:     {;controlMemory_MC50.c: 542:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 20351  00579A  0E00               	movlw	0
 20352  00579C  EC20  F046         	call	_SaveNVM_VarSystem
 20353                           
 20354                           ;controlMemory_MC50.c: 543:         SaveNVM_VarSystem(pageMemoryE);
 20355  0057A0  0E01               	movlw	1
 20356  0057A2  EC20  F046         	call	_SaveNVM_VarSystem
 20357  0057A6  0012               	return		;funcret
 20358  0057A8                     __end_of_checkNVM_VarSystem:
 20359                           	callstack 0
 20360                           
 20361 ;; *************** function _ResetDefaultMemory *****************
 20362 ;; Defined at:
 20363 ;;		line 186 in file "controlMemory_MC50.c"
 20364 ;; Parameters:    Size  Location     Type
 20365 ;;  type            1    wreg     unsigned char 
 20366 ;; Auto vars:     Size  Location     Type
 20367 ;;  type            1   57[COMRAM] unsigned char 
 20368 ;; Return value:  Size  Location     Type
 20369 ;;                  1    wreg      void 
 20370 ;; Registers used:
 20371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20372 ;; Tracked objects:
 20373 ;;		On entry : 31/0
 20374 ;;		On exit  : 0/0
 20375 ;;		Unchanged: 0/0
 20376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20381 ;;Total ram usage:        1 bytes
 20382 ;; Hardware stack levels used: 1
 20383 ;; Hardware stack levels required when called: 14
 20384 ;; This function calls:
 20385 ;;		_SaveNVM_VarSystem
 20386 ;; This function is called by:
 20387 ;;		_loadNVM_VarSystem
 20388 ;;		_sm_execute_menuConfiguration
 20389 ;; This function uses a non-reentrant model
 20390 ;;
 20391                           
 20392                           	psect	text74
 20393  005E0E                     __ptext74:
 20394                           	callstack 0
 20395  005E0E                     _ResetDefaultMemory:
 20396                           	callstack 14
 20397                           
 20398                           ;incstack = 0
 20399                           ;ResetDefaultMemory@type stored from wreg
 20400  005E0E  6E3A               	movwf	ResetDefaultMemory@type^0,c
 20401                           
 20402                           ;controlMemory_MC50.c: 186: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 187: {;controlMemory_MC50.c: 190:     var_sys_NVM.decelarationOpen = 3;
 20403  005E10  0E03               	movlw	3
 20404  005E12  0100               	movlb	0	; () banked
 20405  005E14  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20406                           
 20407                           ;controlMemory_MC50.c: 191:     var_sys_NVM.motorPower = 9;
 20408  005E16  0E09               	movlw	9
 20409  005E18  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 20410                           
 20411                           ;controlMemory_MC50.c: 192:     var_sys_NVM.decelarationClose = 3;
 20412  005E1A  0E03               	movlw	3
 20413  005E1C  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20414                           
 20415                           ;controlMemory_MC50.c: 193:     var_sys_NVM.photoCellIsON = 0;
 20416  005E1E  0E00               	movlw	0
 20417  005E20  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 20418                           
 20419                           ;controlMemory_MC50.c: 194:     var_sys_NVM.photoCellInOpen = 0;
 20420  005E22  0E00               	movlw	0
 20421  005E24  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 20422                           
 20423                           ;controlMemory_MC50.c: 195:     var_sys_NVM.securityBandIsON = 0 ;
 20424  005E26  0E00               	movlw	0
 20425  005E28  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 20426                           
 20427                           ;controlMemory_MC50.c: 196:     var_sys_NVM.securityBandType = 1;
 20428  005E2A  0E01               	movlw	1
 20429  005E2C  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 20430                           
 20431                           ;controlMemory_MC50.c: 197:     var_sys_NVM.securityBandInOpen = 0;
 20432  005E2E  0E00               	movlw	0
 20433  005E30  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 20434                           
 20435                           ;controlMemory_MC50.c: 198:     var_sys_NVM.flashLightMode = 0;
 20436  005E32  0E00               	movlw	0
 20437  005E34  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 20438                           
 20439                           ;controlMemory_MC50.c: 199:     var_sys_NVM.programmingDistance = 0;
 20440  005E36  0E00               	movlw	0
 20441  005E38  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 20442                           
 20443                           ;controlMemory_MC50.c: 200:     var_sys_NVM.decelarationSensivity = 0;
 20444  005E3A  0E00               	movlw	0
 20445  005E3C  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 20446                           
 20447                           ;controlMemory_MC50.c: 201:     var_sys_NVM.homemPresente = 0;
 20448  005E3E  0E00               	movlw	0
 20449  005E40  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 20450                           
 20451                           ;controlMemory_MC50.c: 202:     var_sys_NVM.autoTimeWalkClose = 0;
 20452  005E42  0E00               	movlw	0
 20453  005E44  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20454                           
 20455                           ;controlMemory_MC50.c: 203:     var_sys_NVM.ligthTime = 3;
 20456  005E46  0E03               	movlw	3
 20457  005E48  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 20458                           
 20459                           ;controlMemory_MC50.c: 204:     var_sys_NVM.folow_me = 0;
 20460  005E4A  0E00               	movlw	0
 20461  005E4C  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 20462                           
 20463                           ;controlMemory_MC50.c: 205:     var_sys_NVM.electricBrake = 0;
 20464  005E4E  0E00               	movlw	0
 20465  005E50  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 20466                           
 20467                           ;controlMemory_MC50.c: 206:     var_sys_NVM.autoTimeWalkClose = 0;
 20468  005E52  0E00               	movlw	0
 20469  005E54  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 20470                           
 20471                           ;controlMemory_MC50.c: 207:     var_sys_NVM.Direction_motor = 1 ;
 20472  005E56  0E01               	movlw	1
 20473  005E58  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20474                           
 20475                           ; BSR set to: 0
 20476                           ;controlMemory_MC50.c: 210:     if (type == SC){
 20477  005E5A  503A               	movf	ResetDefaultMemory@type^0,w,c
 20478  005E5C  A4D8               	btfss	status,2,c
 20479  005E5E  D014               	goto	l20122
 20480                           
 20481                           ; BSR set to: 0
 20482                           ;controlMemory_MC50.c: 212:         var_sys_NVM.motorSensitivity = 0;
 20483  005E60  0E00               	movlw	0
 20484  005E62  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20485                           
 20486                           ;controlMemory_MC50.c: 213:         var_sys_NVM.logicDigital = 0;
 20487  005E64  0E00               	movlw	0
 20488  005E66  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20489                           
 20490                           ;controlMemory_MC50.c: 214:         var_sys_NVM.Stopboton = 0;
 20491  005E68  0E00               	movlw	0
 20492  005E6A  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20493                           
 20494                           ;controlMemory_MC50.c: 215:         var_sys_NVM.autoTimeFullClose = 0;
 20495  005E6C  0E00               	movlw	0
 20496  005E6E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20497                           
 20498                           ;controlMemory_MC50.c: 216:         var_sys_NVM.operationMode = 0;
 20499  005E70  0E00               	movlw	0
 20500  005E72  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20501                           
 20502                           ;controlMemory_MC50.c: 217:         var_sys_NVM.velocityDecelaration = 5;
 20503  005E74  0E05               	movlw	5
 20504  005E76  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20505                           
 20506                           ;controlMemory_MC50.c: 218:         var_sys_NVM.flashRGBMode = 3;
 20507  005E78  0E03               	movlw	3
 20508  005E7A  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20509                           
 20510                           ;controlMemory_MC50.c: 219:         var_sys_NVM.softstop = 0;
 20511  005E7C  0E00               	movlw	0
 20512  005E7E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20513                           
 20514                           ;controlMemory_MC50.c: 220:         var_sys_NVM.softStart = 0;
 20515  005E80  0E00               	movlw	0
 20516  005E82  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20517                           
 20518                           ;controlMemory_MC50.c: 221:         var_sys_NVM.walkTime = 10;
 20519  005E84  0E0A               	movlw	10
 20520  005E86  D039               	goto	L82
 20521  005E88                     l20122:
 20522                           
 20523                           ; BSR set to: 0
 20524  005E88  043A               	decf	ResetDefaultMemory@type^0,w,c
 20525  005E8A  A4D8               	btfss	status,2,c
 20526  005E8C  D01B               	goto	l20126
 20527                           
 20528                           ; BSR set to: 0
 20529                           ;controlMemory_MC50.c: 225:         var_sys_NVM.decelarationClose = 4;
 20530  005E8E  0E04               	movlw	4
 20531  005E90  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20532                           
 20533                           ;controlMemory_MC50.c: 226:         var_sys_NVM.decelarationOpen = 4;
 20534  005E92  0E04               	movlw	4
 20535  005E94  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20536                           
 20537                           ;controlMemory_MC50.c: 227:         var_sys_NVM.motorSensitivity = 4;
 20538  005E96  0E04               	movlw	4
 20539  005E98  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20540                           
 20541                           ;controlMemory_MC50.c: 228:         var_sys_NVM.logicDigital = 1;
 20542  005E9A  0E01               	movlw	1
 20543  005E9C  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20544                           
 20545                           ;controlMemory_MC50.c: 229:         var_sys_NVM.Stopboton = 1;
 20546  005E9E  0E01               	movlw	1
 20547  005EA0  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20548                           
 20549                           ;controlMemory_MC50.c: 230:         var_sys_NVM.autoTimeFullClose = 0;
 20550  005EA2  0E00               	movlw	0
 20551  005EA4  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20552                           
 20553                           ;controlMemory_MC50.c: 231:         var_sys_NVM.operationMode = 0;
 20554  005EA6  0E00               	movlw	0
 20555  005EA8  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20556                           
 20557                           ;controlMemory_MC50.c: 232:         var_sys_NVM.velocityDecelaration = 5;
 20558  005EAA  0E05               	movlw	5
 20559  005EAC  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20560                           
 20561                           ;controlMemory_MC50.c: 233:         var_sys_NVM.flashRGBMode = 3;
 20562  005EAE  0E03               	movlw	3
 20563  005EB0  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20564                           
 20565                           ;controlMemory_MC50.c: 234:         var_sys_NVM.softstop = 0;
 20566  005EB2  0E00               	movlw	0
 20567  005EB4  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20568                           
 20569                           ;controlMemory_MC50.c: 235:         var_sys_NVM.softStart = 5;
 20570  005EB6  0E05               	movlw	5
 20571  005EB8  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20572                           
 20573                           ;controlMemory_MC50.c: 236:         var_sys_NVM.walkTime = 0;
 20574  005EBA  0E00               	movlw	0
 20575  005EBC  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20576                           
 20577                           ;controlMemory_MC50.c: 237:         var_sys_NVM.Direction_motor = 0 ;
 20578  005EBE  0E00               	movlw	0
 20579  005EC0  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20580                           
 20581                           ;controlMemory_MC50.c: 239:     }
 20582  005EC2  D01C               	goto	l20130
 20583  005EC4                     l20126:
 20584                           
 20585                           ; BSR set to: 0
 20586  005EC4  0E02               	movlw	2
 20587  005EC6  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20588  005EC8  A4D8               	btfss	status,2,c
 20589  005ECA  D018               	goto	l20130
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;controlMemory_MC50.c: 241:         var_sys_NVM.decelarationClose = 6;
 20593  005ECC  0E06               	movlw	6
 20594  005ECE  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20595                           
 20596                           ;controlMemory_MC50.c: 242:         var_sys_NVM.decelarationOpen = 2;
 20597  005ED0  0E02               	movlw	2
 20598  005ED2  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20599                           
 20600                           ;controlMemory_MC50.c: 243:         var_sys_NVM.motorSensitivity = 0;
 20601  005ED4  0E00               	movlw	0
 20602  005ED6  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20603                           
 20604                           ;controlMemory_MC50.c: 244:         var_sys_NVM.logicDigital = 0;
 20605  005ED8  0E00               	movlw	0
 20606  005EDA  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20607                           
 20608                           ;controlMemory_MC50.c: 245:         var_sys_NVM.Stopboton = 0;
 20609  005EDC  0E00               	movlw	0
 20610  005EDE  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20611                           
 20612                           ;controlMemory_MC50.c: 246:         var_sys_NVM.autoTimeFullClose = 0;
 20613  005EE0  0E00               	movlw	0
 20614  005EE2  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20615                           
 20616                           ;controlMemory_MC50.c: 247:         var_sys_NVM.operationMode = 2;
 20617  005EE4  0E02               	movlw	2
 20618  005EE6  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20619                           
 20620                           ;controlMemory_MC50.c: 248:         var_sys_NVM.velocityDecelaration = 5;
 20621  005EE8  0E05               	movlw	5
 20622  005EEA  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20623                           
 20624                           ;controlMemory_MC50.c: 249:         var_sys_NVM.flashRGBMode = 1;
 20625  005EEC  0E01               	movlw	1
 20626  005EEE  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20627                           
 20628                           ;controlMemory_MC50.c: 250:         var_sys_NVM.softstop = 5;
 20629  005EF0  0E05               	movlw	5
 20630  005EF2  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20631                           
 20632                           ;controlMemory_MC50.c: 251:         var_sys_NVM.softStart = 0;
 20633  005EF4  0E00               	movlw	0
 20634  005EF6  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20635                           
 20636                           ;controlMemory_MC50.c: 252:         var_sys_NVM.walkTime = 0;
 20637  005EF8  0E00               	movlw	0
 20638  005EFA                     L82:
 20639  005EFA  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20640  005EFC                     l20130:
 20641                           
 20642                           ; BSR set to: 0
 20643                           ;controlMemory_MC50.c: 260:     SaveNVM_VarSystem(pageMemoryE);
 20644  005EFC  0E01               	movlw	1
 20645  005EFE  EC20  F046         	call	_SaveNVM_VarSystem
 20646                           
 20647                           ;controlMemory_MC50.c: 261:     SaveNVM_VarSystem(pageMemoryP);
 20648  005F02  0E00               	movlw	0
 20649  005F04  EC20  F046         	call	_SaveNVM_VarSystem
 20650                           
 20651                           ;controlMemory_MC50.c: 266:     var_sys_NVM.learningTimeToClose = 0;
 20652  005F08  0E00               	movlw	0
 20653  005F0A  0100               	movlb	0	; () banked
 20654  005F0C  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20655  005F0E  0E00               	movlw	0
 20656  005F10  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20657  005F12  0E00               	movlw	0
 20658  005F14  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20659  005F16  0E00               	movlw	0
 20660  005F18  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20661                           
 20662                           ;controlMemory_MC50.c: 267:     var_sys_NVM.learningTimeToOpen = 0;
 20663  005F1A  0E00               	movlw	0
 20664  005F1C  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20665  005F1E  0E00               	movlw	0
 20666  005F20  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20667  005F22  0E00               	movlw	0
 20668  005F24  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20669  005F26  0E00               	movlw	0
 20670  005F28  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20671                           
 20672                           ;controlMemory_MC50.c: 268:     var_sys_NVM.learningCurrentNormalClose = 0;
 20673  005F2A  0E00               	movlw	0
 20674  005F2C  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20675  005F2E  0E00               	movlw	0
 20676  005F30  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20677                           
 20678                           ;controlMemory_MC50.c: 269:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20679  005F32  0E00               	movlw	0
 20680  005F34  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20681  005F36  0E00               	movlw	0
 20682  005F38  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20683                           
 20684                           ;controlMemory_MC50.c: 270:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20685  005F3A  0E00               	movlw	0
 20686  005F3C  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20687  005F3E  0E00               	movlw	0
 20688  005F40  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20689  005F42  0E00               	movlw	0
 20690  005F44  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20691  005F46  0E00               	movlw	0
 20692  005F48  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20693                           
 20694                           ;controlMemory_MC50.c: 271:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20695  005F4A  0E00               	movlw	0
 20696  005F4C  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20697  005F4E  0E00               	movlw	0
 20698  005F50  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20699  005F52  0E00               	movlw	0
 20700  005F54  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20701  005F56  0E00               	movlw	0
 20702  005F58  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20703                           
 20704                           ; BSR set to: 0
 20705                           ;controlMemory_MC50.c: 277:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20706  005F5A  A48D               	btfss	141,2,c	;volatile
 20707                           
 20708                           ; BSR set to: 0
 20709  005F5C  B28D               	btfsc	141,1,c	;volatile
 20710  005F5E  D015               	goto	l20144
 20711                           
 20712                           ; BSR set to: 0
 20713  005F60  A08E               	btfss	142,0,c	;volatile
 20714                           
 20715                           ; BSR set to: 0
 20716  005F62  BA8D               	btfsc	141,5,c	;volatile
 20717  005F64  D012               	goto	l20144
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;controlMemory_MC50.c: 278:      var_sys.actualCounterMoves = 0;
 20721  005F66  0E00               	movlw	0
 20722  005F68  0101               	movlb	1	; () banked
 20723  005F6A  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20724  005F6C  0E00               	movlw	0
 20725  005F6E  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20726  005F70  0E00               	movlw	0
 20727  005F72  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20728  005F74  0E00               	movlw	0
 20729  005F76  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20730                           
 20731                           ;controlMemory_MC50.c: 279:      var_sys_NVM.counterMoves = 0;
 20732  005F78  0E00               	movlw	0
 20733  005F7A  0100               	movlb	0	; () banked
 20734  005F7C  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20735  005F7E  0E00               	movlw	0
 20736  005F80  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20737  005F82  0E00               	movlw	0
 20738  005F84  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20739  005F86  0E00               	movlw	0
 20740  005F88  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20741  005F8A                     l20144:
 20742                           
 20743                           ; BSR set to: 0
 20744                           ;controlMemory_MC50.c: 284:     SaveNVM_VarSystem(pageMemoryCounters);
 20745  005F8A  0E02               	movlw	2
 20746  005F8C  EC20  F046         	call	_SaveNVM_VarSystem
 20747                           
 20748                           ;controlMemory_MC50.c: 285:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20749  005F90  0E03               	movlw	3
 20750  005F92  EC20  F046         	call	_SaveNVM_VarSystem
 20751  005F96  0012               	return		;funcret
 20752  005F98                     __end_of_ResetDefaultMemory:
 20753                           	callstack 0
 20754                           
 20755 ;; *************** function _I2C1_Read1ByteRegister *****************
 20756 ;; Defined at:
 20757 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20758 ;; Parameters:    Size  Location     Type
 20759 ;;  address         1    wreg     unsigned char 
 20760 ;;  reg             1   33[COMRAM] unsigned char 
 20761 ;; Auto vars:     Size  Location     Type
 20762 ;;  address         1   34[COMRAM] unsigned char 
 20763 ;;  returnValue     1   35[COMRAM] unsigned char 
 20764 ;; Return value:  Size  Location     Type
 20765 ;;                  1    wreg      unsigned char 
 20766 ;; Registers used:
 20767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20768 ;; Tracked objects:
 20769 ;;		On entry : 31/0
 20770 ;;		On exit  : 33/2
 20771 ;;		Unchanged: 0/0
 20772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20773 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20777 ;;Total ram usage:        3 bytes
 20778 ;; Hardware stack levels used: 1
 20779 ;; Hardware stack levels required when called: 12
 20780 ;; This function calls:
 20781 ;;		_I2C1_Close
 20782 ;;		_I2C1_MasterWrite
 20783 ;;		_I2C1_Open
 20784 ;;		_I2C1_SetAddressNackCallback
 20785 ;;		_I2C1_SetBuffer
 20786 ;;		_I2C1_SetDataCompleteCallback
 20787 ;; This function is called by:
 20788 ;;		_loadNVM_VarSystem
 20789 ;; This function uses a non-reentrant model
 20790 ;;
 20791                           
 20792                           	psect	text75
 20793  0084E8                     __ptext75:
 20794                           	callstack 0
 20795  0084E8                     _I2C1_Read1ByteRegister:
 20796                           	callstack 17
 20797                           
 20798                           ;incstack = 0
 20799                           ;I2C1_Read1ByteRegister@address stored from wreg
 20800  0084E8  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20801                           
 20802                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20803  0084EA  0E00               	movlw	0
 20804  0084EC  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20805  0084EE                     l21298:
 20806  0084EE  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20807  0084F0  ECD3  F03D         	call	_I2C1_Open
 20808  0084F4  0900               	iorlw	0
 20809  0084F6  B4D8               	btfsc	status,2,c
 20810  0084F8  D7FA               	goto	l21298
 20811                           
 20812                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20813  0084FA  0EA2               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20814  0084FC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20815  0084FE  0E8E               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20816  008500  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20817  008502  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20818  008504  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20819  008506  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20820  008508  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20821                           
 20822                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20823  00850C  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20824  00850E  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20825  008510  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20826  008512  0E00               	movlw	0
 20827  008514  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20828  008516  0E01               	movlw	1
 20829  008518  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20830  00851A  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 20831                           
 20832                           ; BSR set to: 2
 20833                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20834  00851E  0E00               	movlw	0
 20835  008520  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20836  008522  0E00               	movlw	0
 20837  008524  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20838  008526  0E00               	movlw	0
 20839  008528  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20840  00852A  0E00               	movlw	0
 20841  00852C  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20842  00852E  EC65  F049         	call	_I2C1_SetAddressNackCallback	;wreg free
 20843                           
 20844                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20845  008532  EC33  F04A         	call	_I2C1_MasterWrite	;wreg free
 20846  008536                     l21308:
 20847  008536  ECA6  F048         	call	_I2C1_Close	;wreg free
 20848  00853A  06E8               	decf	wreg,f,c
 20849  00853C  B4D8               	btfsc	status,2,c
 20850  00853E  D7FB               	goto	l21308
 20851                           
 20852                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20853  008540  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20854  008542  0012               	return		;funcret
 20855  008544                     __end_of_I2C1_Read1ByteRegister:
 20856                           	callstack 0
 20857                           
 20858 ;; *************** function _getKeyPressed *****************
 20859 ;; Defined at:
 20860 ;;		line 217 in file "inputs_MC50.c"
 20861 ;; Parameters:    Size  Location     Type
 20862 ;;		None
 20863 ;; Auto vars:     Size  Location     Type
 20864 ;;  temp            1   15[COMRAM] char 
 20865 ;; Return value:  Size  Location     Type
 20866 ;;                  1    wreg      char 
 20867 ;; Registers used:
 20868 ;;		wreg, status,2, status,0
 20869 ;; Tracked objects:
 20870 ;;		On entry : 3E/1
 20871 ;;		On exit  : 3D/0
 20872 ;;		Unchanged: 0/0
 20873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20878 ;;Total ram usage:        1 bytes
 20879 ;; Hardware stack levels used: 1
 20880 ;; Hardware stack levels required when called: 4
 20881 ;; This function calls:
 20882 ;;		Nothing
 20883 ;; This function is called by:
 20884 ;;		_main
 20885 ;; This function uses a non-reentrant model
 20886 ;;
 20887                           
 20888                           	psect	text76
 20889  0092B2                     __ptext76:
 20890                           	callstack 0
 20891  0092B2                     _getKeyPressed:
 20892                           	callstack 26
 20893                           
 20894                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20895                           
 20896                           ;incstack = 0
 20897  0092B2  6810               	setf	getKeyPressed@temp^0,c
 20898                           
 20899                           ;inputs_MC50.c: 219:     if(RFFull)
 20900  0092B4  0100               	movlb	0	; () banked
 20901  0092B6  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20902  0092B8  B4D8               	btfsc	status,2,c
 20903  0092BA  D005               	goto	l16634
 20904                           
 20905                           ; BSR set to: 0
 20906                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20907  0092BC  0102               	movlb	2	; () banked
 20908  0092BE  39CF               	swapf	(_BufferRF+7)& (0+255),w,b
 20909  0092C0  0B0F               	andlw	15
 20910  0092C2  0B0F               	andlw	15
 20911  0092C4  6E10               	movwf	getKeyPressed@temp^0,c
 20912  0092C6                     l16634:
 20913                           
 20914                           ;inputs_MC50.c: 223:     return temp;
 20915  0092C6  5010               	movf	getKeyPressed@temp^0,w,c
 20916  0092C8  0012               	return		;funcret
 20917  0092CA                     __end_of_getKeyPressed:
 20918                           	callstack 0
 20919                           
 20920 ;; *************** function _eusartparser *****************
 20921 ;; Defined at:
 20922 ;;		line 458 in file "eusartparser.c"
 20923 ;; Parameters:    Size  Location     Type
 20924 ;;  package         1   57[COMRAM] PTR struct package_t
 20925 ;;		 -> main@package(7), 
 20926 ;; Auto vars:     Size  Location     Type
 20927 ;;  i               1   10[BANK0 ] unsigned char 
 20928 ;;  i               1    9[BANK0 ] unsigned char 
 20929 ;;  i               1    7[BANK0 ] unsigned char 
 20930 ;;  i               1    6[BANK0 ] unsigned char 
 20931 ;;  a               7    0        struct package_t
 20932 ;;  relcounter      1    8[BANK0 ] unsigned char 
 20933 ;; Return value:  Size  Location     Type
 20934 ;;                  1    wreg      void 
 20935 ;; Registers used:
 20936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20937 ;; Tracked objects:
 20938 ;;		On entry : 3F/E
 20939 ;;		On exit  : 0/0
 20940 ;;		Unchanged: 0/0
 20941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20942 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20943 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20945 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20946 ;;Total ram usage:        8 bytes
 20947 ;; Hardware stack levels used: 1
 20948 ;; Hardware stack levels required when called: 14
 20949 ;; This function calls:
 20950 ;;		_SaveNVM_VarSystem
 20951 ;;		_cmdMemoryIsEmpty
 20952 ;;		_confirmpackage
 20953 ;;		_read_eusartparser
 20954 ;;		_write_eusartparser
 20955 ;;		_write_package
 20956 ;; This function is called by:
 20957 ;;		_main
 20958 ;; This function uses a non-reentrant model
 20959 ;;
 20960                           
 20961                           	psect	text77
 20962  003FF8                     __ptext77:
 20963                           	callstack 0
 20964  003FF8                     _eusartparser:
 20965                           	callstack 16
 20966                           
 20967                           ; BSR set to: 14
 20968                           ;eusartparser.c: 459:         struct package_t a;;eusartparser.c: 460:         uint8_t r
      +                          elcounter;;eusartparser.c: 461:         switch(package->functioncode){
 20969                           
 20970                           ;incstack = 0
 20971  003FF8  D12E               	goto	l23060
 20972  003FFA                     l22964:
 20973                           
 20974                           ; BSR set to: 0
 20975                           ;eusartparser.c: 463:                 if(programmer_enable)
 20976  003FFA  5185               	movf	_programmer_enable& (0+255),w,b
 20977  003FFC  B4D8               	btfsc	status,2,c
 20978  003FFE  D005               	goto	l22968
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;eusartparser.c: 464:                     package->functioncode=0x03;
 20982  004000  503A               	movf	eusartparser@package^0,w,c
 20983  004002  6ED9               	movwf	fsr2l,c
 20984  004004  6ADA               	clrf	fsr2h,c
 20985  004006  0E03               	movlw	3
 20986  004008  6EDF               	movwf	indf2,c
 20987  00400A                     l22968:
 20988                           
 20989                           ; BSR set to: 0
 20990                           ;eusartparser.c: 465:                     read_eusartparser(package);
 20991  00400A  C03A  F018         	movff	eusartparser@package,read_eusartparser@package
 20992  00400E  ECD4  F014         	call	_read_eusartparser	;wreg free
 20993                           
 20994                           ;eusartparser.c: 466:                 break;
 20995  004012  0012               	return	
 20996  004014                     l22970:
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;eusartparser.c: 469:                 if(programmer_enable)
 21000  004014  5185               	movf	_programmer_enable& (0+255),w,b
 21001  004016  B4D8               	btfsc	status,2,c
 21002  004018  0012               	return	
 21003                           
 21004                           ; BSR set to: 0
 21005                           ;eusartparser.c: 470:                     write_eusartparser(*package);
 21006  00401A  503A               	movf	eusartparser@package^0,w,c
 21007  00401C  6ED9               	movwf	fsr2l,c
 21008  00401E  6ADA               	clrf	fsr2h,c
 21009  004020  EE00  F010         	lfsr	0,write_eusartparser@package
 21010  004024  0E06               	movlw	6
 21011  004026                     u28021:
 21012  004026  CFDB FFEB          	movff	plusw2,plusw0
 21013  00402A  06E8               	decf	wreg,f,c
 21014  00402C  E2FC               	bc	u28021
 21015  00402E  EC58  F017         	call	_write_eusartparser	;wreg free
 21016  004032  0012               	return	
 21017  004034                     l22974:
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;eusartparser.c: 474:                 if(programmer_enable){
 21021  004034  5185               	movf	_programmer_enable& (0+255),w,b
 21022  004036  B4D8               	btfsc	status,2,c
 21023  004038  D008               	goto	l22980
 21024                           
 21025                           ; BSR set to: 0
 21026                           ;eusartparser.c: 475:                     SaveNVM_VarSystem(pageMemoryE);
 21027  00403A  0E01               	movlw	1
 21028  00403C  EC20  F046         	call	_SaveNVM_VarSystem
 21029                           
 21030                           ;eusartparser.c: 476:                     SaveNVM_VarSystem(pageMemoryP);
 21031  004040  0E00               	movlw	0
 21032  004042  EC20  F046         	call	_SaveNVM_VarSystem
 21033                           
 21034                           ;eusartparser.c: 477:                     programmer_enable=0;
 21035  004046  0E00               	movlw	0
 21036  004048  D005               	goto	L83
 21037  00404A                     l22980:
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;eusartparser.c: 480:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 21041  00404A  0101               	movlb	1	; () banked
 21042  00404C  51ED               	movf	_main_stateMachine& (0+255),w,b
 21043  00404E  A4D8               	btfss	status,2,c
 21044  004050  D004               	goto	l22984
 21045                           
 21046                           ; BSR set to: 1
 21047                           ;eusartparser.c: 481:                         programmer_enable=1;
 21048  004052  0E01               	movlw	1
 21049  004054                     L83:
 21050  004054  0100               	movlb	0	; () banked
 21051  004056  6F85               	movwf	_programmer_enable& (0+255),b
 21052  004058  D016               	goto	l22988
 21053  00405A                     l22984:
 21054                           
 21055                           ; BSR set to: 1
 21056                           ;eusartparser.c: 483:                         package->data.data16=(uint16_t)2;
 21057  00405A  503A               	movf	eusartparser@package^0,w,c
 21058  00405C  6ED9               	movwf	fsr2l,c
 21059  00405E  6ADA               	clrf	fsr2h,c
 21060  004060  0E02               	movlw	2
 21061  004062  26D9               	addwf	fsr2l,f,c
 21062  004064  0E02               	movlw	2
 21063  004066  6EDE               	movwf	postinc2,c
 21064  004068  0E00               	movlw	0
 21065  00406A  6EDD               	movwf	postdec2,c
 21066  00406C                     l22986:
 21067                           
 21068                           ;eusartparser.c: 484:                         write_package(*package);
 21069  00406C  503A               	movf	eusartparser@package^0,w,c
 21070  00406E  6ED9               	movwf	fsr2l,c
 21071  004070  6ADA               	clrf	fsr2h,c
 21072  004072  EE00  F011         	lfsr	0,write_package@package
 21073  004076  0E06               	movlw	6
 21074  004078                     u28051:
 21075  004078  CFDB FFEB          	movff	plusw2,plusw0
 21076  00407C  06E8               	decf	wreg,f,c
 21077  00407E  E2FC               	bc	u28051
 21078  004080  ECCD  F046         	call	_write_package	;wreg free
 21079                           
 21080                           ;eusartparser.c: 485:                         break;
 21081  004084  0012               	return	
 21082  004086                     l22988:
 21083                           
 21084                           ; BSR set to: 0
 21085                           ;eusartparser.c: 489:                 package->data.data16=(uint16_t)programmer_enable;
 21086  004086  5185               	movf	_programmer_enable& (0+255),w,b
 21087  004088  6FDC               	movwf	??_eusartparser& (0+255),b
 21088  00408A  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21089  00408C  503A               	movf	eusartparser@package^0,w,c
 21090  00408E  6ED9               	movwf	fsr2l,c
 21091  004090  6ADA               	clrf	fsr2h,c
 21092  004092  0E02               	movlw	2
 21093  004094  26D9               	addwf	fsr2l,f,c
 21094  004096  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21095  00409A  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21096  00409E  D7E6               	goto	l22986
 21097  0040A0                     l22992:
 21098                           
 21099                           ; BSR set to: 0
 21100                           ;eusartparser.c: 493:                 confirmpackage(package, 1);
 21101  0040A0  C03A  F011         	movff	eusartparser@package,confirmpackage@package
 21102  0040A4  0E01               	movlw	1
 21103  0040A6  6E12               	movwf	confirmpackage@confirm^0,c
 21104  0040A8  EC46  F044         	call	_confirmpackage	;wreg free
 21105  0040AC  D7DF               	goto	l22986
 21106  0040AE                     l22996:
 21107                           
 21108                           ; BSR set to: 0
 21109                           ;eusartparser.c: 497:                 package->address=0x00;
 21110  0040AE  503A               	movf	eusartparser@package^0,w,c
 21111  0040B0  6ED9               	movwf	fsr2l,c
 21112  0040B2  6ADA               	clrf	fsr2h,c
 21113  0040B4  0E01               	movlw	1
 21114  0040B6  26D9               	addwf	fsr2l,f,c
 21115  0040B8  0E00               	movlw	0
 21116  0040BA  6EDF               	movwf	indf2,c
 21117                           
 21118                           ;eusartparser.c: 498:                 package->data.data16=var_sys_NVM.positionRemotesFu
      +                          ll;
 21119  0040BC  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21120  0040BE  6FDC               	movwf	??_eusartparser& (0+255),b
 21121  0040C0  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21122  0040C2  503A               	movf	eusartparser@package^0,w,c
 21123  0040C4  6ED9               	movwf	fsr2l,c
 21124  0040C6  6ADA               	clrf	fsr2h,c
 21125  0040C8  0E02               	movlw	2
 21126  0040CA  26D9               	addwf	fsr2l,f,c
 21127  0040CC  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21128  0040D0  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21129                           
 21130                           ; BSR set to: 0
 21131                           ;eusartparser.c: 499:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 21132  0040D4  0E00               	movlw	0
 21133  0040D6  6FDE               	movwf	eusartparser@i& (0+255),b
 21134  0040D8  D012               	goto	l23006
 21135  0040DA                     l23000:
 21136                           
 21137                           ; BSR set to: 0
 21138                           ;eusartparser.c: 500:                 if(cmdMemoryIsEmpty(0,i)==1)
 21139  0040DA  C0DE  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 21140  0040DE  0E00               	movlw	0
 21141  0040E0  ECA6  F03B         	call	_cmdMemoryIsEmpty
 21142  0040E4  06E8               	decf	wreg,f,c
 21143  0040E6  A4D8               	btfss	status,2,c
 21144  0040E8  D008               	goto	l23004
 21145                           
 21146                           ;eusartparser.c: 501:                     package->data.data16--;
 21147  0040EA  503A               	movf	eusartparser@package^0,w,c
 21148  0040EC  6ED9               	movwf	fsr2l,c
 21149  0040EE  6ADA               	clrf	fsr2h,c
 21150  0040F0  0E02               	movlw	2
 21151  0040F2  26D9               	addwf	fsr2l,f,c
 21152  0040F4  06DE               	decf	postinc2,f,c
 21153  0040F6  0E00               	movlw	0
 21154  0040F8  5ADD               	subwfb	postdec2,f,c
 21155  0040FA                     l23004:
 21156  0040FA  0100               	movlb	0	; () banked
 21157  0040FC  2BDE               	incf	eusartparser@i& (0+255),f,b
 21158  0040FE                     l23006:
 21159                           
 21160                           ; BSR set to: 0
 21161  0040FE  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21162  004100  5DDE               	subwf	eusartparser@i& (0+255),w,b
 21163  004102  B0D8               	btfsc	status,0,c
 21164  004104  D7B3               	goto	l22986
 21165  004106  D7E9               	goto	l23000
 21166  004108                     l23010:
 21167                           
 21168                           ; BSR set to: 0
 21169                           ;eusartparser.c: 505:                 package->address=0x00;
 21170  004108  503A               	movf	eusartparser@package^0,w,c
 21171  00410A  6ED9               	movwf	fsr2l,c
 21172  00410C  6ADA               	clrf	fsr2h,c
 21173  00410E  0E01               	movlw	1
 21174  004110  26D9               	addwf	fsr2l,f,c
 21175  004112  0E00               	movlw	0
 21176  004114  6EDF               	movwf	indf2,c
 21177                           
 21178                           ;eusartparser.c: 506:                 package->data.data16=0;
 21179  004116  503A               	movf	eusartparser@package^0,w,c
 21180  004118  6ED9               	movwf	fsr2l,c
 21181  00411A  6ADA               	clrf	fsr2h,c
 21182  00411C  0E02               	movlw	2
 21183  00411E  26D9               	addwf	fsr2l,f,c
 21184  004120  0E00               	movlw	0
 21185  004122  6EDE               	movwf	postinc2,c
 21186  004124  0E00               	movlw	0
 21187  004126  6EDD               	movwf	postdec2,c
 21188                           
 21189                           ; BSR set to: 0
 21190                           ;eusartparser.c: 507:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 21191  004128  0E00               	movlw	0
 21192  00412A  6FDF               	movwf	eusartparser@i_7252& (0+255),b
 21193  00412C  D012               	goto	l23020
 21194  00412E                     l23014:
 21195                           
 21196                           ; BSR set to: 0
 21197                           ;eusartparser.c: 508:                 if(cmdMemoryIsEmpty(0,i)==1)
 21198  00412E  C0DF  F02E         	movff	eusartparser@i_7252,cmdMemoryIsEmpty@position
 21199  004132  0E00               	movlw	0
 21200  004134  ECA6  F03B         	call	_cmdMemoryIsEmpty
 21201  004138  06E8               	decf	wreg,f,c
 21202  00413A  A4D8               	btfss	status,2,c
 21203  00413C  D008               	goto	l23018
 21204                           
 21205                           ;eusartparser.c: 509:                     package->data.data16++;
 21206  00413E  503A               	movf	eusartparser@package^0,w,c
 21207  004140  6ED9               	movwf	fsr2l,c
 21208  004142  6ADA               	clrf	fsr2h,c
 21209  004144  0E02               	movlw	2
 21210  004146  26D9               	addwf	fsr2l,f,c
 21211  004148  2ADE               	incf	postinc2,f,c
 21212  00414A  0E00               	movlw	0
 21213  00414C  22DD               	addwfc	postdec2,f,c
 21214  00414E                     l23018:
 21215  00414E  0100               	movlb	0	; () banked
 21216  004150  2BDF               	incf	eusartparser@i_7252& (0+255),f,b
 21217  004152                     l23020:
 21218                           
 21219                           ; BSR set to: 0
 21220  004152  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21221  004154  5DDF               	subwf	eusartparser@i_7252& (0+255),w,b
 21222  004156  B0D8               	btfsc	status,0,c
 21223  004158  D789               	goto	l22986
 21224  00415A  D7E9               	goto	l23014
 21225  00415C                     l23024:
 21226                           
 21227                           ; BSR set to: 0
 21228                           ;eusartparser.c: 513:                 relcounter=1;
 21229  00415C  0E01               	movlw	1
 21230  00415E  6FE0               	movwf	eusartparser@relcounter& (0+255),b
 21231                           
 21232                           ;eusartparser.c: 514:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 21233  004160  0E00               	movlw	0
 21234  004162  6FE1               	movwf	eusartparser@i_7253& (0+255),b
 21235  004164  D02B               	goto	l23036
 21236  004166                     l23026:
 21237                           
 21238                           ; BSR set to: 0
 21239                           ;eusartparser.c: 515:                     if(cmdMemoryIsEmpty(0,i)==0){
 21240  004166  C0E1  F02E         	movff	eusartparser@i_7253,cmdMemoryIsEmpty@position
 21241  00416A  0E00               	movlw	0
 21242  00416C  ECA6  F03B         	call	_cmdMemoryIsEmpty
 21243  004170  0900               	iorlw	0
 21244  004172  A4D8               	btfss	status,2,c
 21245  004174  D021               	goto	l23034
 21246                           
 21247                           ;eusartparser.c: 516:                         package->data.data16=(uint16_t)i;
 21248  004176  0100               	movlb	0	; () banked
 21249  004178  51E1               	movf	eusartparser@i_7253& (0+255),w,b
 21250  00417A  6FDC               	movwf	??_eusartparser& (0+255),b
 21251  00417C  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21252  00417E  503A               	movf	eusartparser@package^0,w,c
 21253  004180  6ED9               	movwf	fsr2l,c
 21254  004182  6ADA               	clrf	fsr2h,c
 21255  004184  0E02               	movlw	2
 21256  004186  26D9               	addwf	fsr2l,f,c
 21257  004188  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21258  00418C  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21259                           
 21260                           ;eusartparser.c: 517:                         package->address=relcounter;
 21261  004190  503A               	movf	eusartparser@package^0,w,c
 21262  004192  6ED9               	movwf	fsr2l,c
 21263  004194  6ADA               	clrf	fsr2h,c
 21264  004196  0E01               	movlw	1
 21265  004198  26D9               	addwf	fsr2l,f,c
 21266  00419A  C0E0  FFDF         	movff	eusartparser@relcounter,indf2
 21267                           
 21268                           ; BSR set to: 0
 21269                           ;eusartparser.c: 518:                         relcounter++;
 21270  00419E  2BE0               	incf	eusartparser@relcounter& (0+255),f,b
 21271                           
 21272                           ; BSR set to: 0
 21273                           ;eusartparser.c: 519:                         write_package(*package);
 21274  0041A0  503A               	movf	eusartparser@package^0,w,c
 21275  0041A2  6ED9               	movwf	fsr2l,c
 21276  0041A4  6ADA               	clrf	fsr2h,c
 21277  0041A6  EE00  F011         	lfsr	0,write_package@package
 21278  0041AA  0E06               	movlw	6
 21279  0041AC                     u28111:
 21280  0041AC  CFDB FFEB          	movff	plusw2,plusw0
 21281  0041B0  06E8               	decf	wreg,f,c
 21282  0041B2  E2FC               	bc	u28111
 21283  0041B4  ECCD  F046         	call	_write_package	;wreg free
 21284  0041B8                     l23034:
 21285  0041B8  0100               	movlb	0	; () banked
 21286  0041BA  2BE1               	incf	eusartparser@i_7253& (0+255),f,b
 21287  0041BC                     l23036:
 21288                           
 21289                           ; BSR set to: 0
 21290  0041BC  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21291  0041BE  5DE1               	subwf	eusartparser@i_7253& (0+255),w,b
 21292  0041C0  B0D8               	btfsc	status,0,c
 21293  0041C2  0012               	return	
 21294  0041C4  D7D0               	goto	l23026
 21295  0041C6                     l23038:
 21296                           
 21297                           ; BSR set to: 0
 21298                           ;eusartparser.c: 523:                 relcounter=1;
 21299  0041C6  0E01               	movlw	1
 21300  0041C8  6FE0               	movwf	eusartparser@relcounter& (0+255),b
 21301                           
 21302                           ;eusartparser.c: 524:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 21303  0041CA  0E00               	movlw	0
 21304  0041CC  6FE2               	movwf	eusartparser@i_7254& (0+255),b
 21305  0041CE  D02B               	goto	l23050
 21306  0041D0                     l23040:
 21307                           
 21308                           ; BSR set to: 0
 21309                           ;eusartparser.c: 525:                     if(cmdMemoryIsEmpty(0,i)==1){
 21310  0041D0  C0E2  F02E         	movff	eusartparser@i_7254,cmdMemoryIsEmpty@position
 21311  0041D4  0E00               	movlw	0
 21312  0041D6  ECA6  F03B         	call	_cmdMemoryIsEmpty
 21313  0041DA  06E8               	decf	wreg,f,c
 21314  0041DC  A4D8               	btfss	status,2,c
 21315  0041DE  D021               	goto	l23048
 21316                           
 21317                           ;eusartparser.c: 526:                         package->data.data16=(uint16_t)i;
 21318  0041E0  0100               	movlb	0	; () banked
 21319  0041E2  51E2               	movf	eusartparser@i_7254& (0+255),w,b
 21320  0041E4  6FDC               	movwf	??_eusartparser& (0+255),b
 21321  0041E6  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21322  0041E8  503A               	movf	eusartparser@package^0,w,c
 21323  0041EA  6ED9               	movwf	fsr2l,c
 21324  0041EC  6ADA               	clrf	fsr2h,c
 21325  0041EE  0E02               	movlw	2
 21326  0041F0  26D9               	addwf	fsr2l,f,c
 21327  0041F2  C0DC  FFDE         	movff	??_eusartparser,postinc2
 21328  0041F6  C0DD  FFDD         	movff	??_eusartparser+1,postdec2
 21329                           
 21330                           ;eusartparser.c: 527:                         package->address=relcounter;
 21331  0041FA  503A               	movf	eusartparser@package^0,w,c
 21332  0041FC  6ED9               	movwf	fsr2l,c
 21333  0041FE  6ADA               	clrf	fsr2h,c
 21334  004200  0E01               	movlw	1
 21335  004202  26D9               	addwf	fsr2l,f,c
 21336  004204  C0E0  FFDF         	movff	eusartparser@relcounter,indf2
 21337                           
 21338                           ; BSR set to: 0
 21339                           ;eusartparser.c: 528:                         relcounter++;
 21340  004208  2BE0               	incf	eusartparser@relcounter& (0+255),f,b
 21341                           
 21342                           ; BSR set to: 0
 21343                           ;eusartparser.c: 529:                         write_package(*package);
 21344  00420A  503A               	movf	eusartparser@package^0,w,c
 21345  00420C  6ED9               	movwf	fsr2l,c
 21346  00420E  6ADA               	clrf	fsr2h,c
 21347  004210  EE00  F011         	lfsr	0,write_package@package
 21348  004214  0E06               	movlw	6
 21349  004216                     u28141:
 21350  004216  CFDB FFEB          	movff	plusw2,plusw0
 21351  00421A  06E8               	decf	wreg,f,c
 21352  00421C  E2FC               	bc	u28141
 21353  00421E  ECCD  F046         	call	_write_package	;wreg free
 21354  004222                     l23048:
 21355  004222  0100               	movlb	0	; () banked
 21356  004224  2BE2               	incf	eusartparser@i_7254& (0+255),f,b
 21357  004226                     l23050:
 21358                           
 21359                           ; BSR set to: 0
 21360  004226  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21361  004228  5DE2               	subwf	eusartparser@i_7254& (0+255),w,b
 21362  00422A  B0D8               	btfsc	status,0,c
 21363  00422C  0012               	return	
 21364  00422E  D7D0               	goto	l23040
 21365  004230                     l23052:
 21366                           
 21367                           ; BSR set to: 0
 21368                           ;eusartparser.c: 534:                 package->functioncode=0x03;
 21369  004230  503A               	movf	eusartparser@package^0,w,c
 21370  004232  6ED9               	movwf	fsr2l,c
 21371  004234  6ADA               	clrf	fsr2h,c
 21372  004236  0E03               	movlw	3
 21373  004238  6EDF               	movwf	indf2,c
 21374                           
 21375                           ; BSR set to: 0
 21376                           ;eusartparser.c: 535:                 package->address=0x00;
 21377  00423A  503A               	movf	eusartparser@package^0,w,c
 21378  00423C  6ED9               	movwf	fsr2l,c
 21379  00423E  6ADA               	clrf	fsr2h,c
 21380  004240  0E01               	movlw	1
 21381  004242  26D9               	addwf	fsr2l,f,c
 21382  004244  0E00               	movlw	0
 21383  004246  6EDF               	movwf	indf2,c
 21384                           
 21385                           ; BSR set to: 0
 21386                           ;eusartparser.c: 536:                 package->data.data16=0x0000;
 21387  004248  503A               	movf	eusartparser@package^0,w,c
 21388  00424A  6ED9               	movwf	fsr2l,c
 21389  00424C  6ADA               	clrf	fsr2h,c
 21390  00424E  0E02               	movlw	2
 21391  004250  26D9               	addwf	fsr2l,f,c
 21392  004252  0E00               	movlw	0
 21393  004254  D708               	goto	L84
 21394  004256                     l23060:
 21395                           
 21396                           ; BSR set to: 14
 21397  004256  503A               	movf	eusartparser@package^0,w,c
 21398  004258  6ED9               	movwf	fsr2l,c
 21399  00425A  6ADA               	clrf	fsr2h,c
 21400  00425C  50DF               	movf	indf2,w,c
 21401  00425E  0100               	movlb	0	; () banked
 21402  004260  6FDC               	movwf	??_eusartparser& (0+255),b
 21403  004262  6BDD               	clrf	(??_eusartparser+1)& (0+255),b
 21404                           
 21405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21406                           ; Switch size 1, requested type "simple"
 21407                           ; Number of cases is 1, Range of values is 0 to 0
 21408                           ; switch strategies available:
 21409                           ; Name         Instructions Cycles
 21410                           ; simple_byte            4     3 (average)
 21411                           ;	Chosen strategy is simple_byte
 21412  004264  51DD               	movf	(??_eusartparser+1)& (0+255),w,b
 21413  004266  0A00               	xorlw	0	; case 0
 21414  004268  A4D8               	btfss	status,2,c
 21415  00426A  D7E2               	goto	l23052
 21416                           
 21417                           ; BSR set to: 0
 21418                           ; Switch size 1, requested type "simple"
 21419                           ; Number of cases is 8, Range of values is 0 to 7
 21420                           ; switch strategies available:
 21421                           ; Name         Instructions Cycles
 21422                           ; simple_byte           25    13 (average)
 21423                           ;	Chosen strategy is simple_byte
 21424  00426C  51DC               	movf	??_eusartparser& (0+255),w,b
 21425  00426E  0A00               	xorlw	0	; case 0
 21426  004270  B4D8               	btfsc	status,2,c
 21427  004272  D6C3               	goto	l22964
 21428  004274  0A01               	xorlw	1	; case 1
 21429  004276  B4D8               	btfsc	status,2,c
 21430  004278  D6CD               	goto	l22970
 21431  00427A  0A03               	xorlw	3	; case 2
 21432  00427C  B4D8               	btfsc	status,2,c
 21433  00427E  D6DA               	goto	l22974
 21434  004280  0A01               	xorlw	1	; case 3
 21435  004282  B4D8               	btfsc	status,2,c
 21436  004284  D70D               	goto	l22992
 21437  004286  0A07               	xorlw	7	; case 4
 21438  004288  B4D8               	btfsc	status,2,c
 21439  00428A  D711               	goto	l22996
 21440  00428C  0A01               	xorlw	1	; case 5
 21441  00428E  B4D8               	btfsc	status,2,c
 21442  004290  D73B               	goto	l23010
 21443  004292  0A03               	xorlw	3	; case 6
 21444  004294  B4D8               	btfsc	status,2,c
 21445  004296  D762               	goto	l23024
 21446  004298  0A01               	xorlw	1	; case 7
 21447  00429A  B4D8               	btfsc	status,2,c
 21448  00429C  D794               	goto	l23038
 21449  00429E  D7C8               	goto	l23052
 21450  0042A0                     __end_of_eusartparser:
 21451                           	callstack 0
 21452                           
 21453 ;; *************** function _write_eusartparser *****************
 21454 ;; Defined at:
 21455 ;;		line 248 in file "eusartparser.c"
 21456 ;; Parameters:    Size  Location     Type
 21457 ;;  package         7   15[COMRAM] struct package_t
 21458 ;; Auto vars:     Size  Location     Type
 21459 ;;  debug2          2   32[COMRAM] volatile int 
 21460 ;;  debug           2   30[COMRAM] volatile int 
 21461 ;; Return value:  Size  Location     Type
 21462 ;;                  1    wreg      void 
 21463 ;; Registers used:
 21464 ;;		wreg, status,2, status,0
 21465 ;; Tracked objects:
 21466 ;;		On entry : 3F/0
 21467 ;;		On exit  : 3F/0
 21468 ;;		Unchanged: 0/0
 21469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21470 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21471 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21472 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21473 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21474 ;;Total ram usage:       19 bytes
 21475 ;; Hardware stack levels used: 1
 21476 ;; Hardware stack levels required when called: 4
 21477 ;; This function calls:
 21478 ;;		Nothing
 21479 ;; This function is called by:
 21480 ;;		_eusartparser
 21481 ;; This function uses a non-reentrant model
 21482 ;;
 21483                           
 21484                           	psect	text78
 21485  002EB0                     __ptext78:
 21486                           	callstack 0
 21487  002EB0                     _write_eusartparser:
 21488                           	callstack 25
 21489                           
 21490                           ; BSR set to: 0
 21491                           ;eusartparser.c: 249:         volatile int debug=(uint8_t)package.address;
 21492                           
 21493                           ;incstack = 0
 21494  002EB0  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21495  002EB4  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21496                           
 21497                           ; BSR set to: 0
 21498                           ;eusartparser.c: 250:         volatile int debug2=0x10;
 21499  002EB6  0E00               	movlw	0
 21500  002EB8  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21501  002EBA  0E10               	movlw	16
 21502  002EBC  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21503                           
 21504                           ;eusartparser.c: 251:         switch((uint8_t)package.address){
 21505  002EBE  D180               	goto	l16314
 21506  002EC0                     l3591:
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;eusartparser.c: 256:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21510  002EC0  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21511                           
 21512                           ;eusartparser.c: 257:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21513  002EC4  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21514                           
 21515                           ;eusartparser.c: 258:                 break;
 21516  002EC8  0012               	return	
 21517  002ECA                     l3593:
 21518                           
 21519                           ; BSR set to: 0
 21520                           ;eusartparser.c: 262:                 var_sys_NVM.motorPower=package.data.data8[0];
 21521  002ECA  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21522                           
 21523                           ;eusartparser.c: 263:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21524  002ECE  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21525                           
 21526                           ;eusartparser.c: 264:                 break;
 21527  002ED2  0012               	return	
 21528  002ED4                     l3594:
 21529                           
 21530                           ; BSR set to: 0
 21531                           ;eusartparser.c: 268:                 var_sys_NVM.walkTime=package.data.data8[1];
 21532  002ED4  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21533                           
 21534                           ;eusartparser.c: 269:                 break;
 21535  002ED8  0012               	return	
 21536  002EDA                     l3596:
 21537                           
 21538                           ; BSR set to: 0
 21539                           ;eusartparser.c: 274:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21540  002EDA  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21541                           
 21542                           ;eusartparser.c: 275:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21543  002EDE  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21544                           
 21545                           ;eusartparser.c: 276:                 break;
 21546  002EE2  0012               	return	
 21547  002EE4                     l3598:
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;eusartparser.c: 281:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21551  002EE4  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21552                           
 21553                           ;eusartparser.c: 282:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21554  002EE8  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21555                           
 21556                           ;eusartparser.c: 283:                 break;
 21557  002EEC  0012               	return	
 21558  002EEE                     l3599:
 21559                           
 21560                           ; BSR set to: 0
 21561                           ;eusartparser.c: 287:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21562  002EEE  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21563                           
 21564                           ;eusartparser.c: 288:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21565  002EF2  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21566                           
 21567                           ;eusartparser.c: 289:                 break;
 21568  002EF6  0012               	return	
 21569  002EF8                     l3600:
 21570                           
 21571                           ; BSR set to: 0
 21572                           ;eusartparser.c: 293:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21573  002EF8  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21574                           
 21575                           ;eusartparser.c: 294:                 break;
 21576  002EFC  0012               	return	
 21577  002EFE                     l3601:
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;eusartparser.c: 298:                 var_sys_NVM.operationMode=package.data.data8[1];
 21581  002EFE  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21582                           
 21583                           ;eusartparser.c: 299:                 break;
 21584  002F02  0012               	return	
 21585  002F04                     l3602:
 21586                           
 21587                           ; BSR set to: 0
 21588                           ;eusartparser.c: 303:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21589  002F04  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21590                           
 21591                           ;eusartparser.c: 304:                 break;
 21592  002F08  0012               	return	
 21593  002F0A                     l3603:
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;eusartparser.c: 308:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21597  002F0A  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21598                           
 21599                           ;eusartparser.c: 309:                 break;
 21600  002F0E  0012               	return	
 21601  002F10                     l3604:
 21602                           
 21603                           ; BSR set to: 0
 21604                           ;eusartparser.c: 313:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21605  002F10  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21606                           
 21607                           ;eusartparser.c: 314:                 break;
 21608  002F14  0012               	return	
 21609  002F16                     l3605:
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;eusartparser.c: 319:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21613  002F16  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21614                           
 21615                           ;eusartparser.c: 320:                 break;
 21616  002F1A  0012               	return	
 21617  002F1C                     l3607:
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;eusartparser.c: 325:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21621  002F1C  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21622                           
 21623                           ;eusartparser.c: 326:                 break;
 21624  002F20  0012               	return	
 21625  002F22                     l3608:
 21626                           
 21627                           ; BSR set to: 0
 21628                           ;eusartparser.c: 330:                 var_sys_NVM.softStart=package.data.data8[0];
 21629  002F22  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21630                           
 21631                           ;eusartparser.c: 331:                 var_sys_NVM.softstop=package.data.data8[1];
 21632  002F26  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21633                           
 21634                           ;eusartparser.c: 332:                 break;
 21635  002F2A  0012               	return	
 21636  002F2C                     l3610:
 21637                           
 21638                           ; BSR set to: 0
 21639                           ;eusartparser.c: 337:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21640  002F2C  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21641                           
 21642                           ;eusartparser.c: 338:                 break;
 21643  002F30  0012               	return	
 21644  002F32                     l3612:
 21645                           
 21646                           ; BSR set to: 0
 21647                           ;eusartparser.c: 343:                 var_sys_NVM.folow_me=package.data.data8[1];
 21648  002F32  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21649                           
 21650                           ;eusartparser.c: 344:                 break;
 21651  002F36  0012               	return	
 21652  002F38                     l3613:
 21653                           
 21654                           ; BSR set to: 0
 21655                           ;eusartparser.c: 348:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21656  002F38  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21657                           
 21658                           ;eusartparser.c: 349:                 break;
 21659  002F3C  0012               	return	
 21660  002F3E                     l3614:
 21661                           
 21662                           ; BSR set to: 0
 21663                           ;eusartparser.c: 353:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21664  002F3E  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21665                           
 21666                           ;eusartparser.c: 354:                 break;
 21667  002F42  0012               	return	
 21668  002F44                     l3615:
 21669                           
 21670                           ; BSR set to: 0
 21671                           ;eusartparser.c: 358:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21672  002F44  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21673                           
 21674                           ;eusartparser.c: 359:                 break;
 21675  002F48  0012               	return	
 21676  002F4A                     l3617:
 21677                           
 21678                           ; BSR set to: 0
 21679                           ;eusartparser.c: 364:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21680  002F4A  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21681                           
 21682                           ;eusartparser.c: 365:                 break;
 21683  002F4E  0012               	return	
 21684  002F50                     l3618:
 21685                           
 21686                           ; BSR set to: 0
 21687                           ;eusartparser.c: 369:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21688  002F50  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21689                           
 21690                           ;eusartparser.c: 370:                 break;
 21691  002F54  0012               	return	
 21692  002F56                     l3619:
 21693                           
 21694                           ; BSR set to: 0
 21695                           ;eusartparser.c: 374:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21696  002F56  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21697                           
 21698                           ;eusartparser.c: 375:                 break;
 21699  002F5A  0012               	return	
 21700  002F5C                     l3620:
 21701                           
 21702                           ; BSR set to: 0
 21703                           ;eusartparser.c: 379:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21704  002F5C  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21705                           
 21706                           ;eusartparser.c: 380:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21707  002F60  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21708                           
 21709                           ;eusartparser.c: 381:                 break;
 21710  002F64  0012               	return	
 21711  002F66                     l16292:
 21712                           
 21713                           ; BSR set to: 0
 21714                           ;eusartparser.c: 384:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21715  002F66  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21716  002F68  6E17               	movwf	??_write_eusartparser^0,c
 21717  002F6A  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21718  002F6C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21719  002F6E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21720  002F70  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21721  002F72  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21722  002F76  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21723  002F7A  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21724  002F7C  6A17               	clrf	??_write_eusartparser^0,c
 21725  002F7E  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21726  002F80  1017               	iorwf	??_write_eusartparser^0,w,c
 21727  002F82  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21728  002F84  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21729  002F86  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21730  002F88  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21731  002F8A  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21732  002F8C  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21733  002F8E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21734  002F90  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21735  002F92  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21736  002F94  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21737                           
 21738                           ;eusartparser.c: 385:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21739  002F96  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21740  002F98  6E17               	movwf	??_write_eusartparser^0,c
 21741  002F9A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21742  002F9C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21743  002F9E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21744  002FA0  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21745  002FA2  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21746  002FA6  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21747  002FAA  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21748  002FAC  6A17               	clrf	??_write_eusartparser^0,c
 21749  002FAE  1C17               	comf	??_write_eusartparser^0,w,c
 21750  002FB0  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21751  002FB2  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21752  002FB4  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21753  002FB6  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21754  002FB8  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21755  002FBA  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21756  002FBC  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21757  002FBE  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21758  002FC0  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21759  002FC2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21760  002FC4  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21761  002FC6  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21762  002FC8  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21763  002FCA  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21764  002FCC  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21765  002FCE  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21766  002FD0  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21767  002FD2  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21768  002FD4  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21769                           
 21770                           ;eusartparser.c: 386:                 break;
 21771  002FD6  0012               	return	
 21772  002FD8                     l16294:
 21773                           
 21774                           ; BSR set to: 0
 21775                           ;eusartparser.c: 388:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21776  002FD8  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21777  002FDA  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21778  002FDC  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21779  002FDE  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21780  002FE0  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21781  002FE2  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21782  002FE4  0E00               	movlw	0
 21783  002FE6  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21784  002FE8  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21785  002FEA  0E00               	movlw	0
 21786  002FEC  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21787  002FEE  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21788                           
 21789                           ;eusartparser.c: 389:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21790  002FF0  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21791  002FF2  6E17               	movwf	??_write_eusartparser^0,c
 21792  002FF4  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21793  002FF6  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21794  002FF8  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21795  002FFA  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21796  002FFC  1C17               	comf	??_write_eusartparser^0,w,c
 21797  002FFE  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21798  003000  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21799  003002  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21800  003004  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21801  003006  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21802  003008  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21803  00300A  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21804  00300C  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21805  00300E  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21806  003010  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21807  003012  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21808  003014  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21809  003016  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21810  003018  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21811  00301A  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21812  00301C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21813  00301E  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21814  003020  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21815  003022  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21816                           
 21817                           ;eusartparser.c: 390:                 break;
 21818  003024  0012               	return	
 21819  003026                     l3623:
 21820                           
 21821                           ; BSR set to: 0
 21822                           ;eusartparser.c: 395:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21823  003026  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21824                           
 21825                           ;eusartparser.c: 396:                 break;
 21826  00302A  0012               	return	
 21827  00302C                     l16296:
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;eusartparser.c: 399:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21831  00302C  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21832  00302E  6E17               	movwf	??_write_eusartparser^0,c
 21833  003030  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21834  003032  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21835  003034  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21836  003036  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21837  003038  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21838  00303C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21839  003040  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21840  003042  6A17               	clrf	??_write_eusartparser^0,c
 21841  003044  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21842  003046  1017               	iorwf	??_write_eusartparser^0,w,c
 21843  003048  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21844  00304A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21845  00304C  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21846  00304E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21847  003050  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21848  003052  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21849  003054  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21850  003056  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21851  003058  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21852  00305A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21853                           
 21854                           ;eusartparser.c: 400:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21855  00305C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21856  00305E  6E17               	movwf	??_write_eusartparser^0,c
 21857  003060  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21858  003062  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21859  003064  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21860  003066  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21861  003068  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21862  00306C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21863  003070  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21864  003072  6A17               	clrf	??_write_eusartparser^0,c
 21865  003074  1C17               	comf	??_write_eusartparser^0,w,c
 21866  003076  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21867  003078  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21868  00307A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21869  00307C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21870  00307E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21871  003080  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21872  003082  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21873  003084  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21874  003086  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21875  003088  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21876  00308A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21877  00308C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21878  00308E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21879  003090  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21880  003092  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21881  003094  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21882  003096  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21883  003098  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21884  00309A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21885                           
 21886                           ;eusartparser.c: 401:                 break;
 21887  00309C  0012               	return	
 21888  00309E                     l16298:
 21889                           
 21890                           ; BSR set to: 0
 21891                           ;eusartparser.c: 403:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21892  00309E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21893  0030A0  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21894  0030A2  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21895  0030A4  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21896  0030A6  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21897  0030A8  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21898  0030AA  0E00               	movlw	0
 21899  0030AC  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21900  0030AE  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21901  0030B0  0E00               	movlw	0
 21902  0030B2  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21903  0030B4  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21904                           
 21905                           ;eusartparser.c: 404:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21906  0030B6  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21907  0030B8  6E17               	movwf	??_write_eusartparser^0,c
 21908  0030BA  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21909  0030BC  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21910  0030BE  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21911  0030C0  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21912  0030C2  1C17               	comf	??_write_eusartparser^0,w,c
 21913  0030C4  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21914  0030C6  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21915  0030C8  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21916  0030CA  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21917  0030CC  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21918  0030CE  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21919  0030D0  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21920  0030D2  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21921  0030D4  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21922  0030D6  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21923  0030D8  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21924  0030DA  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21925  0030DC  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21926  0030DE  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21927  0030E0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21928  0030E2  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21929  0030E4  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21930  0030E6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21931  0030E8  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21932                           
 21933                           ;eusartparser.c: 405:                 break;
 21934  0030EA  0012               	return	
 21935  0030EC                     l16300:
 21936                           
 21937                           ; BSR set to: 0
 21938                           ;eusartparser.c: 408:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21939  0030EC  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21940  0030EE  6E17               	movwf	??_write_eusartparser^0,c
 21941  0030F0  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21942  0030F2  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21943  0030F4  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21944  0030F6  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21945  0030F8  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21946  0030FC  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21947  003100  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21948  003102  6A17               	clrf	??_write_eusartparser^0,c
 21949  003104  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21950  003106  1017               	iorwf	??_write_eusartparser^0,w,c
 21951  003108  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21952  00310A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21953  00310C  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21954  00310E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21955  003110  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21956  003112  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21957  003114  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21958  003116  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21959  003118  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21960  00311A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21961                           
 21962                           ;eusartparser.c: 409:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21963  00311C  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21964  00311E  6E17               	movwf	??_write_eusartparser^0,c
 21965  003120  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21966  003122  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21967  003124  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21968  003126  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21969  003128  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21970  00312C  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21971  003130  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21972  003132  6A17               	clrf	??_write_eusartparser^0,c
 21973  003134  1C17               	comf	??_write_eusartparser^0,w,c
 21974  003136  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21975  003138  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21976  00313A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21977  00313C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21978  00313E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21979  003140  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21980  003142  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21981  003144  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21982  003146  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21983  003148  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21984  00314A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21985  00314C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21986  00314E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21987  003150  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21988  003152  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21989  003154  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21990  003156  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21991  003158  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21992  00315A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21993                           
 21994                           ;eusartparser.c: 410:                 break;
 21995  00315C  0012               	return	
 21996  00315E                     l16302:
 21997                           
 21998                           ; BSR set to: 0
 21999                           ;eusartparser.c: 412:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 22000  00315E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 22001  003160  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22002  003162  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22003  003164  5013               	movf	(write_eusartparser@package+3)^0,w,c
 22004  003166  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22005  003168  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22006  00316A  0E00               	movlw	0
 22007  00316C  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22008  00316E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22009  003170  0E00               	movlw	0
 22010  003172  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22011  003174  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22012                           
 22013                           ;eusartparser.c: 413:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 22014  003176  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 22015  003178  6E17               	movwf	??_write_eusartparser^0,c
 22016  00317A  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 22017  00317C  6E18               	movwf	(??_write_eusartparser+1)^0,c
 22018  00317E  6A19               	clrf	(??_write_eusartparser+2)^0,c
 22019  003180  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 22020  003182  1C17               	comf	??_write_eusartparser^0,w,c
 22021  003184  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 22022  003186  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 22023  003188  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 22024  00318A  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 22025  00318C  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 22026  00318E  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 22027  003190  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 22028  003192  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 22029  003194  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 22030  003196  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 22031  003198  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 22032  00319A  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 22033  00319C  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 22034  00319E  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 22035  0031A0  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 22036  0031A2  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 22037  0031A4  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 22038  0031A6  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 22039  0031A8  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 22040                           
 22041                           ;eusartparser.c: 414:                 break;
 22042  0031AA  0012               	return	
 22043  0031AC                     l3628:
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;eusartparser.c: 417:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 22047  0031AC  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 22048  0031B0  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 22049                           
 22050                           ;eusartparser.c: 418:                 break;
 22051  0031B4  0012               	return	
 22052  0031B6                     l3629:
 22053                           
 22054                           ; BSR set to: 0
 22055                           ;eusartparser.c: 421:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 22056  0031B6  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 22057  0031BA  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 22058                           
 22059                           ;eusartparser.c: 422:                 break;
 22060  0031BE  0012               	return	
 22061  0031C0                     l16314:
 22062                           
 22063                           ; BSR set to: 0
 22064  0031C0  5011               	movf	(write_eusartparser@package+1)^0,w,c
 22065  0031C2  6E17               	movwf	??_write_eusartparser^0,c
 22066  0031C4  6A18               	clrf	(??_write_eusartparser+1)^0,c
 22067                           
 22068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22069                           ; Switch size 1, requested type "simple"
 22070                           ; Number of cases is 1, Range of values is 0 to 0
 22071                           ; switch strategies available:
 22072                           ; Name         Instructions Cycles
 22073                           ; simple_byte            4     3 (average)
 22074                           ;	Chosen strategy is simple_byte
 22075  0031C6  5018               	movf	(??_write_eusartparser+1)^0,w,c
 22076  0031C8  0A00               	xorlw	0	; case 0
 22077  0031CA  A4D8               	btfss	status,2,c
 22078  0031CC  0012               	return	
 22079                           
 22080                           ; BSR set to: 0
 22081                           ; Switch size 1, requested type "simple"
 22082                           ; Number of cases is 43, Range of values is 0 to 51
 22083                           ; switch strategies available:
 22084                           ; Name         Instructions Cycles
 22085                           ; simple_byte          130    66 (average)
 22086                           ;	Chosen strategy is simple_byte
 22087  0031CE  5017               	movf	??_write_eusartparser^0,w,c
 22088  0031D0  0A00               	xorlw	0	; case 0
 22089  0031D2  B4D8               	btfsc	status,2,c
 22090  0031D4  D675               	goto	l3591
 22091  0031D6  0A02               	xorlw	2	; case 2
 22092  0031D8  B4D8               	btfsc	status,2,c
 22093  0031DA  D67F               	goto	l3596
 22094  0031DC  0A01               	xorlw	1	; case 3
 22095  0031DE  B4D8               	btfsc	status,2,c
 22096  0031E0  D6A5               	goto	l3610
 22097  0031E2  0A06               	xorlw	6	; case 5
 22098  0031E4  B4D8               	btfsc	status,2,c
 22099  0031E6  D67E               	goto	l3598
 22100  0031E8  0A02               	xorlw	2	; case 7
 22101  0031EA  B4D8               	btfsc	status,2,c
 22102  0031EC  D697               	goto	l3607
 22103  0031EE  0A0F               	xorlw	15	; case 8
 22104  0031F0  B4D8               	btfsc	status,2,c
 22105  0031F2  D6AB               	goto	l3617
 22106  0031F4  0A02               	xorlw	2	; case 10
 22107  0031F6  B4D8               	btfsc	status,2,c
 22108  0031F8  D69C               	goto	l3612
 22109  0031FA  0A1A               	xorlw	26	; case 16
 22110  0031FC  B4D8               	btfsc	status,2,c
 22111  0031FE  D660               	goto	l3591
 22112  003200  0A01               	xorlw	1	; case 17
 22113  003202  B4D8               	btfsc	status,2,c
 22114  003204  D662               	goto	l3593
 22115  003206  0A03               	xorlw	3	; case 18
 22116  003208  B4D8               	btfsc	status,2,c
 22117  00320A  D664               	goto	l3594
 22118  00320C  0A01               	xorlw	1	; case 19
 22119  00320E  B4D8               	btfsc	status,2,c
 22120  003210  D664               	goto	l3596
 22121  003212  0A07               	xorlw	7	; case 20
 22122  003214  B4D8               	btfsc	status,2,c
 22123  003216  D666               	goto	l3598
 22124  003218  0A01               	xorlw	1	; case 21
 22125  00321A  B4D8               	btfsc	status,2,c
 22126  00321C  D668               	goto	l3599
 22127  00321E  0A03               	xorlw	3	; case 22
 22128  003220  B4D8               	btfsc	status,2,c
 22129  003222  D66A               	goto	l3600
 22130  003224  0A01               	xorlw	1	; case 23
 22131  003226  B4D8               	btfsc	status,2,c
 22132  003228  D66A               	goto	l3601
 22133  00322A  0A0F               	xorlw	15	; case 24
 22134  00322C  B4D8               	btfsc	status,2,c
 22135  00322E  D66A               	goto	l3602
 22136  003230  0A01               	xorlw	1	; case 25
 22137  003232  B4D8               	btfsc	status,2,c
 22138  003234  D66A               	goto	l3603
 22139  003236  0A03               	xorlw	3	; case 26
 22140  003238  B4D8               	btfsc	status,2,c
 22141  00323A  D66A               	goto	l3604
 22142  00323C  0A01               	xorlw	1	; case 27
 22143  00323E  B4D8               	btfsc	status,2,c
 22144  003240  D66A               	goto	l3605
 22145  003242  0A07               	xorlw	7	; case 28
 22146  003244  B4D8               	btfsc	status,2,c
 22147  003246  D66A               	goto	l3607
 22148  003248  0A01               	xorlw	1	; case 29
 22149  00324A  B4D8               	btfsc	status,2,c
 22150  00324C  D66A               	goto	l3608
 22151  00324E  0A03               	xorlw	3	; case 30
 22152  003250  B4D8               	btfsc	status,2,c
 22153  003252  D66C               	goto	l3610
 22154  003254  0A01               	xorlw	1	; case 31
 22155  003256  B4D8               	btfsc	status,2,c
 22156  003258  D66C               	goto	l3612
 22157  00325A  0A3F               	xorlw	63	; case 32
 22158  00325C  B4D8               	btfsc	status,2,c
 22159  00325E  D66C               	goto	l3613
 22160  003260  0A01               	xorlw	1	; case 33
 22161  003262  B4D8               	btfsc	status,2,c
 22162  003264  D66C               	goto	l3614
 22163  003266  0A03               	xorlw	3	; case 34
 22164  003268  B4D8               	btfsc	status,2,c
 22165  00326A  D66C               	goto	l3615
 22166  00326C  0A01               	xorlw	1	; case 35
 22167  00326E  B4D8               	btfsc	status,2,c
 22168  003270  D66C               	goto	l3617
 22169  003272  0A07               	xorlw	7	; case 36
 22170  003274  B4D8               	btfsc	status,2,c
 22171  003276  D66C               	goto	l3618
 22172  003278  0A01               	xorlw	1	; case 37
 22173  00327A  B4D8               	btfsc	status,2,c
 22174  00327C  D66C               	goto	l3619
 22175  00327E  0A03               	xorlw	3	; case 38
 22176  003280  B4D8               	btfsc	status,2,c
 22177  003282  D66C               	goto	l3620
 22178  003284  0A01               	xorlw	1	; case 39
 22179  003286  B4D8               	btfsc	status,2,c
 22180  003288  D66E               	goto	l16292
 22181  00328A  0A0F               	xorlw	15	; case 40
 22182  00328C  B4D8               	btfsc	status,2,c
 22183  00328E  D6A4               	goto	l16294
 22184  003290  0A01               	xorlw	1	; case 41
 22185  003292  B4D8               	btfsc	status,2,c
 22186  003294  D6C8               	goto	l3623
 22187  003296  0A03               	xorlw	3	; case 42
 22188  003298  B4D8               	btfsc	status,2,c
 22189  00329A  D6C8               	goto	l16296
 22190  00329C  0A01               	xorlw	1	; case 43
 22191  00329E  B4D8               	btfsc	status,2,c
 22192  0032A0  D6FE               	goto	l16298
 22193  0032A2  0A07               	xorlw	7	; case 44
 22194  0032A4  B4D8               	btfsc	status,2,c
 22195  0032A6  D722               	goto	l16300
 22196  0032A8  0A01               	xorlw	1	; case 45
 22197  0032AA  B4D8               	btfsc	status,2,c
 22198  0032AC  D758               	goto	l16302
 22199  0032AE  0A03               	xorlw	3	; case 46
 22200  0032B0  B4D8               	btfsc	status,2,c
 22201  0032B2  D77C               	goto	l3628
 22202  0032B4  0A01               	xorlw	1	; case 47
 22203  0032B6  B4D8               	btfsc	status,2,c
 22204  0032B8  D77E               	goto	l3629
 22205  0032BA  0A1F               	xorlw	31	; case 48
 22206  0032BC  B4D8               	btfsc	status,2,c
 22207  0032BE  D716               	goto	l16300
 22208  0032C0  0A01               	xorlw	1	; case 49
 22209  0032C2  B4D8               	btfsc	status,2,c
 22210  0032C4  D74C               	goto	l16302
 22211  0032C6  0A03               	xorlw	3	; case 50
 22212  0032C8  B4D8               	btfsc	status,2,c
 22213  0032CA  D710               	goto	l16300
 22214  0032CC  0A01               	xorlw	1	; case 51
 22215  0032CE  A4D8               	btfss	status,2,c
 22216  0032D0  0012               	return	
 22217  0032D2  D745               	goto	l16302
 22218  0032D4                     __end_of_write_eusartparser:
 22219                           	callstack 0
 22220                           
 22221 ;; *************** function _read_eusartparser *****************
 22222 ;; Defined at:
 22223 ;;		line 12 in file "eusartparser.c"
 22224 ;; Parameters:    Size  Location     Type
 22225 ;;  package         1   23[COMRAM] PTR struct package_t
 22226 ;;		 -> main@package(7), 
 22227 ;; Auto vars:     Size  Location     Type
 22228 ;;		None
 22229 ;; Return value:  Size  Location     Type
 22230 ;;                  1    wreg      void 
 22231 ;; Registers used:
 22232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22233 ;; Tracked objects:
 22234 ;;		On entry : 3F/0
 22235 ;;		On exit  : 0/0
 22236 ;;		Unchanged: 0/0
 22237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22238 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22241 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22242 ;;Total ram usage:        3 bytes
 22243 ;; Hardware stack levels used: 1
 22244 ;; Hardware stack levels required when called: 6
 22245 ;; This function calls:
 22246 ;;		_write_package
 22247 ;; This function is called by:
 22248 ;;		_eusartparser
 22249 ;; This function uses a non-reentrant model
 22250 ;;
 22251                           
 22252                           	psect	text79
 22253  0029A8                     __ptext79:
 22254                           	callstack 0
 22255  0029A8                     _read_eusartparser:
 22256                           	callstack 23
 22257                           
 22258                           ; BSR set to: 0
 22259                           ;eusartparser.c: 13:         switch(package->address){
 22260                           
 22261                           ; BSR set to: 0
 22262                           ;incstack = 0
 22263  0029A8  D203               	goto	l16282
 22264  0029AA                     l16146:
 22265                           
 22266                           ; BSR set to: 0
 22267                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22268  0029AA  5018               	movf	read_eusartparser@package^0,w,c
 22269  0029AC  6ED9               	movwf	fsr2l,c
 22270  0029AE  6ADA               	clrf	fsr2h,c
 22271  0029B0  0E03               	movlw	3
 22272  0029B2  26D9               	addwf	fsr2l,f,c
 22273  0029B4  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22274                           
 22275                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22276  0029B8  5018               	movf	read_eusartparser@package^0,w,c
 22277  0029BA  6ED9               	movwf	fsr2l,c
 22278  0029BC  6ADA               	clrf	fsr2h,c
 22279  0029BE  0E02               	movlw	2
 22280  0029C0  26D9               	addwf	fsr2l,f,c
 22281  0029C2  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22282  0029C6                     l16148:
 22283                           
 22284                           ; BSR set to: 0
 22285                           ;eusartparser.c: 20:                 write_package(*package);
 22286  0029C6  5018               	movf	read_eusartparser@package^0,w,c
 22287  0029C8  6ED9               	movwf	fsr2l,c
 22288  0029CA  6ADA               	clrf	fsr2h,c
 22289  0029CC  EE00  F011         	lfsr	0,write_package@package
 22290  0029D0  0E06               	movlw	6
 22291  0029D2                     u18211:
 22292  0029D2  CFDB FFEB          	movff	plusw2,plusw0
 22293  0029D6  06E8               	decf	wreg,f,c
 22294  0029D8  E2FC               	bc	u18211
 22295  0029DA  ECCD  F046         	call	_write_package	;wreg free
 22296                           
 22297                           ;eusartparser.c: 21:                 break;
 22298  0029DE  0012               	return	
 22299  0029E0                     l16150:
 22300                           
 22301                           ; BSR set to: 0
 22302                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22303  0029E0  5018               	movf	read_eusartparser@package^0,w,c
 22304  0029E2  6ED9               	movwf	fsr2l,c
 22305  0029E4  6ADA               	clrf	fsr2h,c
 22306  0029E6  0E03               	movlw	3
 22307  0029E8  26D9               	addwf	fsr2l,f,c
 22308  0029EA  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22309                           
 22310                           ;eusartparser.c: 26:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22311  0029EE  5018               	movf	read_eusartparser@package^0,w,c
 22312  0029F0  6ED9               	movwf	fsr2l,c
 22313  0029F2  6ADA               	clrf	fsr2h,c
 22314  0029F4  0E02               	movlw	2
 22315  0029F6  26D9               	addwf	fsr2l,f,c
 22316  0029F8  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22317  0029FC  D7E4               	goto	l16148
 22318  0029FE                     l16154:
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;eusartparser.c: 32:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22322  0029FE  5018               	movf	read_eusartparser@package^0,w,c
 22323  002A00  6ED9               	movwf	fsr2l,c
 22324  002A02  6ADA               	clrf	fsr2h,c
 22325  002A04  0E03               	movlw	3
 22326  002A06  26D9               	addwf	fsr2l,f,c
 22327  002A08  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22328  002A0C  D0F9               	goto	L100
 22329  002A0E                     l16158:
 22330                           
 22331                           ; BSR set to: 0
 22332                           ;eusartparser.c: 40:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22333  002A0E  5018               	movf	read_eusartparser@package^0,w,c
 22334  002A10  6ED9               	movwf	fsr2l,c
 22335  002A12  6ADA               	clrf	fsr2h,c
 22336  002A14  0E03               	movlw	3
 22337  002A16  26D9               	addwf	fsr2l,f,c
 22338  002A18  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22339                           
 22340                           ;eusartparser.c: 41:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22341  002A1C  5018               	movf	read_eusartparser@package^0,w,c
 22342  002A1E  6ED9               	movwf	fsr2l,c
 22343  002A20  6ADA               	clrf	fsr2h,c
 22344  002A22  0E02               	movlw	2
 22345  002A24  26D9               	addwf	fsr2l,f,c
 22346  002A26  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22347  002A2A  D7CD               	goto	l16148
 22348  002A2C                     l16162:
 22349                           
 22350                           ; BSR set to: 0
 22351                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22352  002A2C  5018               	movf	read_eusartparser@package^0,w,c
 22353  002A2E  6ED9               	movwf	fsr2l,c
 22354  002A30  6ADA               	clrf	fsr2h,c
 22355  002A32  0E03               	movlw	3
 22356  002A34  26D9               	addwf	fsr2l,f,c
 22357  002A36  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22358                           
 22359                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22360  002A3A  5018               	movf	read_eusartparser@package^0,w,c
 22361  002A3C  6ED9               	movwf	fsr2l,c
 22362  002A3E  6ADA               	clrf	fsr2h,c
 22363  002A40  0E02               	movlw	2
 22364  002A42  26D9               	addwf	fsr2l,f,c
 22365  002A44  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22366  002A48  D7BE               	goto	l16148
 22367  002A4A                     l16166:
 22368                           
 22369                           ; BSR set to: 0
 22370                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22371  002A4A  5018               	movf	read_eusartparser@package^0,w,c
 22372  002A4C  6ED9               	movwf	fsr2l,c
 22373  002A4E  6ADA               	clrf	fsr2h,c
 22374  002A50  0E03               	movlw	3
 22375  002A52  26D9               	addwf	fsr2l,f,c
 22376  002A54  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22377                           
 22378                           ;eusartparser.c: 56:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22379  002A58  5018               	movf	read_eusartparser@package^0,w,c
 22380  002A5A  6ED9               	movwf	fsr2l,c
 22381  002A5C  6ADA               	clrf	fsr2h,c
 22382  002A5E  0E02               	movlw	2
 22383  002A60  26D9               	addwf	fsr2l,f,c
 22384  002A62  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22385  002A66  D7AF               	goto	l16148
 22386  002A68                     l16170:
 22387                           
 22388                           ; BSR set to: 0
 22389                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22390  002A68  5018               	movf	read_eusartparser@package^0,w,c
 22391  002A6A  6ED9               	movwf	fsr2l,c
 22392  002A6C  6ADA               	clrf	fsr2h,c
 22393  002A6E  0E03               	movlw	3
 22394  002A70  26D9               	addwf	fsr2l,f,c
 22395  002A72  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22396  002A76  D0C4               	goto	L100
 22397  002A78                     l16174:
 22398                           
 22399                           ; BSR set to: 0
 22400                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22401  002A78  5018               	movf	read_eusartparser@package^0,w,c
 22402  002A7A  6ED9               	movwf	fsr2l,c
 22403  002A7C  6ADA               	clrf	fsr2h,c
 22404  002A7E  0E03               	movlw	3
 22405  002A80  26D9               	addwf	fsr2l,f,c
 22406  002A82  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22407  002A86  D0BC               	goto	L100
 22408  002A88                     l16178:
 22409                           
 22410                           ; BSR set to: 0
 22411                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22412  002A88  5018               	movf	read_eusartparser@package^0,w,c
 22413  002A8A  6ED9               	movwf	fsr2l,c
 22414  002A8C  6ADA               	clrf	fsr2h,c
 22415  002A8E  0E03               	movlw	3
 22416  002A90  26D9               	addwf	fsr2l,f,c
 22417  002A92  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22418  002A96  D0B4               	goto	L100
 22419  002A98                     l16182:
 22420                           
 22421                           ; BSR set to: 0
 22422                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22423  002A98  5018               	movf	read_eusartparser@package^0,w,c
 22424  002A9A  6ED9               	movwf	fsr2l,c
 22425  002A9C  6ADA               	clrf	fsr2h,c
 22426  002A9E  0E03               	movlw	3
 22427  002AA0  26D9               	addwf	fsr2l,f,c
 22428  002AA2  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22429  002AA6  D0AC               	goto	L100
 22430  002AA8                     l16186:
 22431                           
 22432                           ; BSR set to: 0
 22433                           ;eusartparser.c: 90:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22434  002AA8  5018               	movf	read_eusartparser@package^0,w,c
 22435  002AAA  6ED9               	movwf	fsr2l,c
 22436  002AAC  6ADA               	clrf	fsr2h,c
 22437  002AAE  0E03               	movlw	3
 22438  002AB0  26D9               	addwf	fsr2l,f,c
 22439  002AB2  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22440  002AB6  D0A4               	goto	L100
 22441  002AB8                     l16190:
 22442                           
 22443                           ; BSR set to: 0
 22444                           ;eusartparser.c: 98:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22445  002AB8  5018               	movf	read_eusartparser@package^0,w,c
 22446  002ABA  6ED9               	movwf	fsr2l,c
 22447  002ABC  6ADA               	clrf	fsr2h,c
 22448  002ABE  0E03               	movlw	3
 22449  002AC0  26D9               	addwf	fsr2l,f,c
 22450  002AC2  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22451  002AC6  D09C               	goto	L100
 22452  002AC8                     l16194:
 22453                           
 22454                           ; BSR set to: 0
 22455                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22456  002AC8  5018               	movf	read_eusartparser@package^0,w,c
 22457  002ACA  6ED9               	movwf	fsr2l,c
 22458  002ACC  6ADA               	clrf	fsr2h,c
 22459  002ACE  0E03               	movlw	3
 22460  002AD0  26D9               	addwf	fsr2l,f,c
 22461  002AD2  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22462  002AD6  D094               	goto	L100
 22463  002AD8                     l16198:
 22464                           
 22465                           ; BSR set to: 0
 22466                           ;eusartparser.c: 113:                 package->data.data8[1]=var_sys_NVM.softstop;
 22467  002AD8  5018               	movf	read_eusartparser@package^0,w,c
 22468  002ADA  6ED9               	movwf	fsr2l,c
 22469  002ADC  6ADA               	clrf	fsr2h,c
 22470  002ADE  0E03               	movlw	3
 22471  002AE0  26D9               	addwf	fsr2l,f,c
 22472  002AE2  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22473                           
 22474                           ;eusartparser.c: 114:                 package->data.data8[0]=var_sys_NVM.softStart;
 22475  002AE6  5018               	movf	read_eusartparser@package^0,w,c
 22476  002AE8  6ED9               	movwf	fsr2l,c
 22477  002AEA  6ADA               	clrf	fsr2h,c
 22478  002AEC  0E02               	movlw	2
 22479  002AEE  26D9               	addwf	fsr2l,f,c
 22480  002AF0  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22481  002AF4  D768               	goto	l16148
 22482  002AF6                     l16202:
 22483                           
 22484                           ; BSR set to: 0
 22485                           ;eusartparser.c: 121:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22486  002AF6  5018               	movf	read_eusartparser@package^0,w,c
 22487  002AF8  6ED9               	movwf	fsr2l,c
 22488  002AFA  6ADA               	clrf	fsr2h,c
 22489  002AFC  0E03               	movlw	3
 22490  002AFE  26D9               	addwf	fsr2l,f,c
 22491  002B00  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22492  002B04  D07D               	goto	L100
 22493  002B06                     l16206:
 22494                           
 22495                           ; BSR set to: 0
 22496                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22497  002B06  5018               	movf	read_eusartparser@package^0,w,c
 22498  002B08  6ED9               	movwf	fsr2l,c
 22499  002B0A  6ADA               	clrf	fsr2h,c
 22500  002B0C  0E03               	movlw	3
 22501  002B0E  26D9               	addwf	fsr2l,f,c
 22502  002B10  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22503  002B14  D075               	goto	L100
 22504  002B16                     l16210:
 22505                           
 22506                           ; BSR set to: 0
 22507                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22508  002B16  5018               	movf	read_eusartparser@package^0,w,c
 22509  002B18  6ED9               	movwf	fsr2l,c
 22510  002B1A  6ADA               	clrf	fsr2h,c
 22511  002B1C  0E03               	movlw	3
 22512  002B1E  26D9               	addwf	fsr2l,f,c
 22513  002B20  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22514  002B24  D06D               	goto	L100
 22515  002B26                     l16214:
 22516                           
 22517                           ; BSR set to: 0
 22518                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22519  002B26  5018               	movf	read_eusartparser@package^0,w,c
 22520  002B28  6ED9               	movwf	fsr2l,c
 22521  002B2A  6ADA               	clrf	fsr2h,c
 22522  002B2C  0E03               	movlw	3
 22523  002B2E  26D9               	addwf	fsr2l,f,c
 22524  002B30  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22525  002B34  D065               	goto	L100
 22526  002B36                     l16218:
 22527                           
 22528                           ; BSR set to: 0
 22529                           ;eusartparser.c: 150:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22530  002B36  5018               	movf	read_eusartparser@package^0,w,c
 22531  002B38  6ED9               	movwf	fsr2l,c
 22532  002B3A  6ADA               	clrf	fsr2h,c
 22533  002B3C  0E03               	movlw	3
 22534  002B3E  26D9               	addwf	fsr2l,f,c
 22535  002B40  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22536  002B44  D05D               	goto	L100
 22537  002B46                     l16222:
 22538                           
 22539                           ; BSR set to: 0
 22540                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22541  002B46  5018               	movf	read_eusartparser@package^0,w,c
 22542  002B48  6ED9               	movwf	fsr2l,c
 22543  002B4A  6ADA               	clrf	fsr2h,c
 22544  002B4C  0E03               	movlw	3
 22545  002B4E  26D9               	addwf	fsr2l,f,c
 22546  002B50  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22547  002B54  D055               	goto	L100
 22548  002B56                     l16226:
 22549                           
 22550                           ; BSR set to: 0
 22551                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22552  002B56  5018               	movf	read_eusartparser@package^0,w,c
 22553  002B58  6ED9               	movwf	fsr2l,c
 22554  002B5A  6ADA               	clrf	fsr2h,c
 22555  002B5C  0E03               	movlw	3
 22556  002B5E  26D9               	addwf	fsr2l,f,c
 22557  002B60  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22558  002B64  D04D               	goto	L100
 22559  002B66                     l16230:
 22560                           
 22561                           ; BSR set to: 0
 22562                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22563  002B66  5018               	movf	read_eusartparser@package^0,w,c
 22564  002B68  6ED9               	movwf	fsr2l,c
 22565  002B6A  6ADA               	clrf	fsr2h,c
 22566  002B6C  0E03               	movlw	3
 22567  002B6E  26D9               	addwf	fsr2l,f,c
 22568  002B70  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22569  002B74  D045               	goto	L100
 22570  002B76                     l16234:
 22571                           
 22572                           ; BSR set to: 0
 22573                           ;eusartparser.c: 179:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22574  002B76  5018               	movf	read_eusartparser@package^0,w,c
 22575  002B78  6ED9               	movwf	fsr2l,c
 22576  002B7A  6ADA               	clrf	fsr2h,c
 22577  002B7C  0E03               	movlw	3
 22578  002B7E  26D9               	addwf	fsr2l,f,c
 22579  002B80  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22580                           
 22581                           ;eusartparser.c: 180:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22582  002B84  5018               	movf	read_eusartparser@package^0,w,c
 22583  002B86  6ED9               	movwf	fsr2l,c
 22584  002B88  6ADA               	clrf	fsr2h,c
 22585  002B8A  0E02               	movlw	2
 22586  002B8C  26D9               	addwf	fsr2l,f,c
 22587  002B8E  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22588  002B92  D719               	goto	l16148
 22589  002B94                     l16238:
 22590                           
 22591                           ; BSR set to: 0
 22592                           ;eusartparser.c: 186:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22593  002B94  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22594  002B98  5018               	movf	read_eusartparser@package^0,w,c
 22595  002B9A  6EE1               	movwf	fsr1l,c
 22596  002B9C  6AE2               	clrf	fsr1h,c
 22597  002B9E  0E02               	movlw	2
 22598  002BA0  26E1               	addwf	fsr1l,f,c
 22599  002BA2  CFDE FFE6          	movff	postinc2,postinc1
 22600  002BA6  CFDD FFE5          	movff	postdec2,postdec1
 22601                           
 22602                           ; BSR set to: 0
 22603                           ;eusartparser.c: 187:                 write_package(*package);
 22604  002BAA  5018               	movf	read_eusartparser@package^0,w,c
 22605  002BAC  6ED9               	movwf	fsr2l,c
 22606  002BAE  6ADA               	clrf	fsr2h,c
 22607  002BB0  EE00  F011         	lfsr	0,write_package@package
 22608  002BB4  0E06               	movlw	6
 22609  002BB6                     u18221:
 22610  002BB6  CFDB FFEB          	movff	plusw2,plusw0
 22611  002BBA  06E8               	decf	wreg,f,c
 22612  002BBC  E2FC               	bc	u18221
 22613  002BBE  ECCD  F046         	call	_write_package	;wreg free
 22614                           
 22615                           ;eusartparser.c: 188:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22616  002BC2  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22617  002BC6  5018               	movf	read_eusartparser@package^0,w,c
 22618  002BC8  6EE1               	movwf	fsr1l,c
 22619  002BCA  6AE2               	clrf	fsr1h,c
 22620  002BCC  0E02               	movlw	2
 22621  002BCE  26E1               	addwf	fsr1l,f,c
 22622  002BD0  CFDE FFE6          	movff	postinc2,postinc1
 22623  002BD4  CFDD FFE5          	movff	postdec2,postdec1
 22624                           
 22625                           ;eusartparser.c: 189:                 write_package(*package);
 22626  002BD8  5018               	movf	read_eusartparser@package^0,w,c
 22627  002BDA  6ED9               	movwf	fsr2l,c
 22628  002BDC  6ADA               	clrf	fsr2h,c
 22629  002BDE  EE00  F011         	lfsr	0,write_package@package
 22630  002BE2  0E06               	movlw	6
 22631  002BE4                     u18231:
 22632  002BE4  CFDB FFEB          	movff	plusw2,plusw0
 22633  002BE8  06E8               	decf	wreg,f,c
 22634  002BEA  E2FC               	bc	u18231
 22635  002BEC  ECCD  F046         	call	_write_package	;wreg free
 22636                           
 22637                           ;eusartparser.c: 190:                 break;
 22638  002BF0  0012               	return	
 22639  002BF2                     l16244:
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;eusartparser.c: 194:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22643  002BF2  5018               	movf	read_eusartparser@package^0,w,c
 22644  002BF4  6ED9               	movwf	fsr2l,c
 22645  002BF6  6ADA               	clrf	fsr2h,c
 22646  002BF8  0E03               	movlw	3
 22647  002BFA  26D9               	addwf	fsr2l,f,c
 22648  002BFC  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22649  002C00                     L100:
 22650                           
 22651                           ;eusartparser.c: 195:                 package->data.data8[0]=0x00;
 22652  002C00  5018               	movf	read_eusartparser@package^0,w,c
 22653  002C02  6ED9               	movwf	fsr2l,c
 22654  002C04  6ADA               	clrf	fsr2h,c
 22655  002C06  0E02               	movlw	2
 22656  002C08  26D9               	addwf	fsr2l,f,c
 22657  002C0A  0E00               	movlw	0
 22658  002C0C  6EDF               	movwf	indf2,c
 22659  002C0E  D6DB               	goto	l16148
 22660  002C10                     l16248:
 22661                           
 22662                           ; BSR set to: 0
 22663                           ;eusartparser.c: 201:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22664  002C10  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22665  002C14  5018               	movf	read_eusartparser@package^0,w,c
 22666  002C16  6EE1               	movwf	fsr1l,c
 22667  002C18  6AE2               	clrf	fsr1h,c
 22668  002C1A  0E02               	movlw	2
 22669  002C1C  26E1               	addwf	fsr1l,f,c
 22670  002C1E  CFDE FFE6          	movff	postinc2,postinc1
 22671  002C22  CFDD FFE5          	movff	postdec2,postdec1
 22672                           
 22673                           ; BSR set to: 0
 22674                           ;eusartparser.c: 202:                 write_package(*package);
 22675  002C26  5018               	movf	read_eusartparser@package^0,w,c
 22676  002C28  6ED9               	movwf	fsr2l,c
 22677  002C2A  6ADA               	clrf	fsr2h,c
 22678  002C2C  EE00  F011         	lfsr	0,write_package@package
 22679  002C30  0E06               	movlw	6
 22680  002C32                     u18241:
 22681  002C32  CFDB FFEB          	movff	plusw2,plusw0
 22682  002C36  06E8               	decf	wreg,f,c
 22683  002C38  E2FC               	bc	u18241
 22684  002C3A  ECCD  F046         	call	_write_package	;wreg free
 22685                           
 22686                           ;eusartparser.c: 203:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 22687  002C3E  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 22688  002C42  5018               	movf	read_eusartparser@package^0,w,c
 22689  002C44  6EE1               	movwf	fsr1l,c
 22690  002C46  6AE2               	clrf	fsr1h,c
 22691  002C48  0E02               	movlw	2
 22692  002C4A  26E1               	addwf	fsr1l,f,c
 22693  002C4C  CFDE FFE6          	movff	postinc2,postinc1
 22694  002C50  CFDD FFE5          	movff	postdec2,postdec1
 22695                           
 22696                           ;eusartparser.c: 204:                 write_package(*package);
 22697  002C54  5018               	movf	read_eusartparser@package^0,w,c
 22698  002C56  6ED9               	movwf	fsr2l,c
 22699  002C58  6ADA               	clrf	fsr2h,c
 22700  002C5A  EE00  F011         	lfsr	0,write_package@package
 22701  002C5E  0E06               	movlw	6
 22702  002C60                     u18251:
 22703  002C60  CFDB FFEB          	movff	plusw2,plusw0
 22704  002C64  06E8               	decf	wreg,f,c
 22705  002C66  E2FC               	bc	u18251
 22706  002C68  ECCD  F046         	call	_write_package	;wreg free
 22707                           
 22708                           ;eusartparser.c: 205:                 break;
 22709  002C6C  0012               	return	
 22710  002C6E                     l16254:
 22711                           
 22712                           ; BSR set to: 0
 22713                           ;eusartparser.c: 209:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 22714  002C6E  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 22715  002C72  5018               	movf	read_eusartparser@package^0,w,c
 22716  002C74  6EE1               	movwf	fsr1l,c
 22717  002C76  6AE2               	clrf	fsr1h,c
 22718  002C78  0E02               	movlw	2
 22719  002C7A  26E1               	addwf	fsr1l,f,c
 22720  002C7C  CFDE FFE6          	movff	postinc2,postinc1
 22721  002C80  CFDD FFE5          	movff	postdec2,postdec1
 22722                           
 22723                           ; BSR set to: 0
 22724                           ;eusartparser.c: 210:                 write_package(*package);
 22725  002C84  5018               	movf	read_eusartparser@package^0,w,c
 22726  002C86  6ED9               	movwf	fsr2l,c
 22727  002C88  6ADA               	clrf	fsr2h,c
 22728  002C8A  EE00  F011         	lfsr	0,write_package@package
 22729  002C8E  0E06               	movlw	6
 22730  002C90                     u18261:
 22731  002C90  CFDB FFEB          	movff	plusw2,plusw0
 22732  002C94  06E8               	decf	wreg,f,c
 22733  002C96  E2FC               	bc	u18261
 22734  002C98  ECCD  F046         	call	_write_package	;wreg free
 22735                           
 22736                           ;eusartparser.c: 211:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 22737  002C9C  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 22738  002CA0  5018               	movf	read_eusartparser@package^0,w,c
 22739  002CA2  6EE1               	movwf	fsr1l,c
 22740  002CA4  6AE2               	clrf	fsr1h,c
 22741  002CA6  0E02               	movlw	2
 22742  002CA8  26E1               	addwf	fsr1l,f,c
 22743  002CAA  CFDE FFE6          	movff	postinc2,postinc1
 22744  002CAE  CFDD FFE5          	movff	postdec2,postdec1
 22745                           
 22746                           ;eusartparser.c: 212:                 write_package(*package);
 22747  002CB2  5018               	movf	read_eusartparser@package^0,w,c
 22748  002CB4  6ED9               	movwf	fsr2l,c
 22749  002CB6  6ADA               	clrf	fsr2h,c
 22750  002CB8  EE00  F011         	lfsr	0,write_package@package
 22751  002CBC  0E06               	movlw	6
 22752  002CBE                     u18271:
 22753  002CBE  CFDB FFEB          	movff	plusw2,plusw0
 22754  002CC2  06E8               	decf	wreg,f,c
 22755  002CC4  E2FC               	bc	u18271
 22756  002CC6  ECCD  F046         	call	_write_package	;wreg free
 22757                           
 22758                           ;eusartparser.c: 213:                 break;
 22759  002CCA  0012               	return	
 22760  002CCC                     l16260:
 22761                           
 22762                           ; BSR set to: 0
 22763                           ;eusartparser.c: 217:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 22764  002CCC  5018               	movf	read_eusartparser@package^0,w,c
 22765  002CCE  6ED9               	movwf	fsr2l,c
 22766  002CD0  6ADA               	clrf	fsr2h,c
 22767  002CD2  0E02               	movlw	2
 22768  002CD4  26D9               	addwf	fsr2l,f,c
 22769  002CD6  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 22770  002CDA  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 22771  002CDE  D673               	goto	l16148
 22772  002CE0                     l16264:
 22773                           
 22774                           ; BSR set to: 0
 22775                           ;eusartparser.c: 223:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 22776  002CE0  5018               	movf	read_eusartparser@package^0,w,c
 22777  002CE2  6ED9               	movwf	fsr2l,c
 22778  002CE4  6ADA               	clrf	fsr2h,c
 22779  002CE6  0E02               	movlw	2
 22780  002CE8  26D9               	addwf	fsr2l,f,c
 22781  002CEA  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 22782  002CEE  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 22783  002CF2  D669               	goto	l16148
 22784  002CF4                     l16268:
 22785                           
 22786                           ; BSR set to: 0
 22787                           ;eusartparser.c: 229:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 22788  002CF4  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 22789  002CF8  5018               	movf	read_eusartparser@package^0,w,c
 22790  002CFA  6EE1               	movwf	fsr1l,c
 22791  002CFC  6AE2               	clrf	fsr1h,c
 22792  002CFE  0E02               	movlw	2
 22793  002D00  26E1               	addwf	fsr1l,f,c
 22794  002D02  CFDE FFE6          	movff	postinc2,postinc1
 22795  002D06  CFDD FFE5          	movff	postdec2,postdec1
 22796                           
 22797                           ; BSR set to: 0
 22798                           ;eusartparser.c: 230:                 write_package(*package);
 22799  002D0A  5018               	movf	read_eusartparser@package^0,w,c
 22800  002D0C  6ED9               	movwf	fsr2l,c
 22801  002D0E  6ADA               	clrf	fsr2h,c
 22802  002D10  EE00  F011         	lfsr	0,write_package@package
 22803  002D14  0E06               	movlw	6
 22804  002D16                     u18281:
 22805  002D16  CFDB FFEB          	movff	plusw2,plusw0
 22806  002D1A  06E8               	decf	wreg,f,c
 22807  002D1C  E2FC               	bc	u18281
 22808  002D1E  ECCD  F046         	call	_write_package	;wreg free
 22809                           
 22810                           ;eusartparser.c: 231:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 22811  002D22  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 22812  002D26  5018               	movf	read_eusartparser@package^0,w,c
 22813  002D28  6EE1               	movwf	fsr1l,c
 22814  002D2A  6AE2               	clrf	fsr1h,c
 22815  002D2C  0E02               	movlw	2
 22816  002D2E  26E1               	addwf	fsr1l,f,c
 22817  002D30  CFDE FFE6          	movff	postinc2,postinc1
 22818  002D34  CFDD FFE5          	movff	postdec2,postdec1
 22819                           
 22820                           ;eusartparser.c: 232:                 write_package(*package);
 22821  002D38  5018               	movf	read_eusartparser@package^0,w,c
 22822  002D3A  6ED9               	movwf	fsr2l,c
 22823  002D3C  6ADA               	clrf	fsr2h,c
 22824  002D3E  EE00  F011         	lfsr	0,write_package@package
 22825  002D42  0E06               	movlw	6
 22826  002D44                     u18291:
 22827  002D44  CFDB FFEB          	movff	plusw2,plusw0
 22828  002D48  06E8               	decf	wreg,f,c
 22829  002D4A  E2FC               	bc	u18291
 22830  002D4C  ECCD  F046         	call	_write_package	;wreg free
 22831                           
 22832                           ;eusartparser.c: 233:                 break;
 22833  002D50  0012               	return	
 22834  002D52                     l16274:
 22835                           
 22836                           ; BSR set to: 0
 22837                           ;eusartparser.c: 237:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 22838  002D52  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 22839  002D56  5018               	movf	read_eusartparser@package^0,w,c
 22840  002D58  6EE1               	movwf	fsr1l,c
 22841  002D5A  6AE2               	clrf	fsr1h,c
 22842  002D5C  0E02               	movlw	2
 22843  002D5E  26E1               	addwf	fsr1l,f,c
 22844  002D60  CFDE FFE6          	movff	postinc2,postinc1
 22845  002D64  CFDD FFE5          	movff	postdec2,postdec1
 22846                           
 22847                           ; BSR set to: 0
 22848                           ;eusartparser.c: 238:                 write_package(*package);
 22849  002D68  5018               	movf	read_eusartparser@package^0,w,c
 22850  002D6A  6ED9               	movwf	fsr2l,c
 22851  002D6C  6ADA               	clrf	fsr2h,c
 22852  002D6E  EE00  F011         	lfsr	0,write_package@package
 22853  002D72  0E06               	movlw	6
 22854  002D74                     u18301:
 22855  002D74  CFDB FFEB          	movff	plusw2,plusw0
 22856  002D78  06E8               	decf	wreg,f,c
 22857  002D7A  E2FC               	bc	u18301
 22858  002D7C  ECCD  F046         	call	_write_package	;wreg free
 22859                           
 22860                           ;eusartparser.c: 239:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 22861  002D80  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 22862  002D84  5018               	movf	read_eusartparser@package^0,w,c
 22863  002D86  6EE1               	movwf	fsr1l,c
 22864  002D88  6AE2               	clrf	fsr1h,c
 22865  002D8A  0E02               	movlw	2
 22866  002D8C  26E1               	addwf	fsr1l,f,c
 22867  002D8E  CFDE FFE6          	movff	postinc2,postinc1
 22868  002D92  CFDD FFE5          	movff	postdec2,postdec1
 22869                           
 22870                           ;eusartparser.c: 240:                 write_package(*package);
 22871  002D96  5018               	movf	read_eusartparser@package^0,w,c
 22872  002D98  6ED9               	movwf	fsr2l,c
 22873  002D9A  6ADA               	clrf	fsr2h,c
 22874  002D9C  EE00  F011         	lfsr	0,write_package@package
 22875  002DA0  0E06               	movlw	6
 22876  002DA2                     u18311:
 22877  002DA2  CFDB FFEB          	movff	plusw2,plusw0
 22878  002DA6  06E8               	decf	wreg,f,c
 22879  002DA8  E2FC               	bc	u18311
 22880  002DAA  ECCD  F046         	call	_write_package	;wreg free
 22881                           
 22882                           ;eusartparser.c: 241:                 break;
 22883  002DAE  0012               	return	
 22884  002DB0                     l16282:
 22885                           
 22886                           ; BSR set to: 0
 22887  002DB0  5018               	movf	read_eusartparser@package^0,w,c
 22888  002DB2  6ED9               	movwf	fsr2l,c
 22889  002DB4  6ADA               	clrf	fsr2h,c
 22890  002DB6  0E01               	movlw	1
 22891  002DB8  26D9               	addwf	fsr2l,f,c
 22892  002DBA  50DF               	movf	indf2,w,c
 22893  002DBC  6E19               	movwf	??_read_eusartparser^0,c
 22894  002DBE  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 22895                           
 22896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22897                           ; Switch size 1, requested type "simple"
 22898                           ; Number of cases is 1, Range of values is 0 to 0
 22899                           ; switch strategies available:
 22900                           ; Name         Instructions Cycles
 22901                           ; simple_byte            4     3 (average)
 22902                           ;	Chosen strategy is simple_byte
 22903  002DC0  501A               	movf	(??_read_eusartparser+1)^0,w,c
 22904  002DC2  0A00               	xorlw	0	; case 0
 22905  002DC4  A4D8               	btfss	status,2,c
 22906  002DC6  0012               	return	
 22907                           
 22908                           ; BSR set to: 0
 22909                           ; Switch size 1, requested type "simple"
 22910                           ; Number of cases is 38, Range of values is 0 to 50
 22911                           ; switch strategies available:
 22912                           ; Name         Instructions Cycles
 22913                           ; simple_byte          115    58 (average)
 22914                           ;	Chosen strategy is simple_byte
 22915  002DC8  5019               	movf	??_read_eusartparser^0,w,c
 22916  002DCA  0A00               	xorlw	0	; case 0
 22917  002DCC  B4D8               	btfsc	status,2,c
 22918  002DCE  D5ED               	goto	l16146
 22919  002DD0  0A02               	xorlw	2	; case 2
 22920  002DD2  B4D8               	btfsc	status,2,c
 22921  002DD4  D61C               	goto	l16158
 22922  002DD6  0A01               	xorlw	1	; case 3
 22923  002DD8  B4D8               	btfsc	status,2,c
 22924  002DDA  D68D               	goto	l16202
 22925  002DDC  0A06               	xorlw	6	; case 5
 22926  002DDE  B4D8               	btfsc	status,2,c
 22927  002DE0  D625               	goto	l16162
 22928  002DE2  0A02               	xorlw	2	; case 7
 22929  002DE4  B4D8               	btfsc	status,2,c
 22930  002DE6  D670               	goto	l16194
 22931  002DE8  0A0F               	xorlw	15	; case 8
 22932  002DEA  B4D8               	btfsc	status,2,c
 22933  002DEC  D6AC               	goto	l16222
 22934  002DEE  0A02               	xorlw	2	; case 10
 22935  002DF0  B4D8               	btfsc	status,2,c
 22936  002DF2  D689               	goto	l16206
 22937  002DF4  0A1A               	xorlw	26	; case 16
 22938  002DF6  B4D8               	btfsc	status,2,c
 22939  002DF8  D5D8               	goto	l16146
 22940  002DFA  0A01               	xorlw	1	; case 17
 22941  002DFC  B4D8               	btfsc	status,2,c
 22942  002DFE  D5F0               	goto	l16150
 22943  002E00  0A03               	xorlw	3	; case 18
 22944  002E02  B4D8               	btfsc	status,2,c
 22945  002E04  D5FC               	goto	l16154
 22946  002E06  0A01               	xorlw	1	; case 19
 22947  002E08  B4D8               	btfsc	status,2,c
 22948  002E0A  D601               	goto	l16158
 22949  002E0C  0A07               	xorlw	7	; case 20
 22950  002E0E  B4D8               	btfsc	status,2,c
 22951  002E10  D60D               	goto	l16162
 22952  002E12  0A01               	xorlw	1	; case 21
 22953  002E14  B4D8               	btfsc	status,2,c
 22954  002E16  D619               	goto	l16166
 22955  002E18  0A03               	xorlw	3	; case 22
 22956  002E1A  B4D8               	btfsc	status,2,c
 22957  002E1C  D625               	goto	l16170
 22958  002E1E  0A01               	xorlw	1	; case 23
 22959  002E20  B4D8               	btfsc	status,2,c
 22960  002E22  D62A               	goto	l16174
 22961  002E24  0A0F               	xorlw	15	; case 24
 22962  002E26  B4D8               	btfsc	status,2,c
 22963  002E28  D62F               	goto	l16178
 22964  002E2A  0A01               	xorlw	1	; case 25
 22965  002E2C  B4D8               	btfsc	status,2,c
 22966  002E2E  D634               	goto	l16182
 22967  002E30  0A03               	xorlw	3	; case 26
 22968  002E32  B4D8               	btfsc	status,2,c
 22969  002E34  D639               	goto	l16186
 22970  002E36  0A01               	xorlw	1	; case 27
 22971  002E38  B4D8               	btfsc	status,2,c
 22972  002E3A  D63E               	goto	l16190
 22973  002E3C  0A07               	xorlw	7	; case 28
 22974  002E3E  B4D8               	btfsc	status,2,c
 22975  002E40  D643               	goto	l16194
 22976  002E42  0A01               	xorlw	1	; case 29
 22977  002E44  B4D8               	btfsc	status,2,c
 22978  002E46  D648               	goto	l16198
 22979  002E48  0A03               	xorlw	3	; case 30
 22980  002E4A  B4D8               	btfsc	status,2,c
 22981  002E4C  D654               	goto	l16202
 22982  002E4E  0A01               	xorlw	1	; case 31
 22983  002E50  B4D8               	btfsc	status,2,c
 22984  002E52  D659               	goto	l16206
 22985  002E54  0A3F               	xorlw	63	; case 32
 22986  002E56  B4D8               	btfsc	status,2,c
 22987  002E58  D65E               	goto	l16210
 22988  002E5A  0A01               	xorlw	1	; case 33
 22989  002E5C  B4D8               	btfsc	status,2,c
 22990  002E5E  D663               	goto	l16214
 22991  002E60  0A03               	xorlw	3	; case 34
 22992  002E62  B4D8               	btfsc	status,2,c
 22993  002E64  D668               	goto	l16218
 22994  002E66  0A01               	xorlw	1	; case 35
 22995  002E68  B4D8               	btfsc	status,2,c
 22996  002E6A  D66D               	goto	l16222
 22997  002E6C  0A07               	xorlw	7	; case 36
 22998  002E6E  B4D8               	btfsc	status,2,c
 22999  002E70  D672               	goto	l16226
 23000  002E72  0A01               	xorlw	1	; case 37
 23001  002E74  B4D8               	btfsc	status,2,c
 23002  002E76  D677               	goto	l16230
 23003  002E78  0A03               	xorlw	3	; case 38
 23004  002E7A  B4D8               	btfsc	status,2,c
 23005  002E7C  D67C               	goto	l16234
 23006  002E7E  0A01               	xorlw	1	; case 39
 23007  002E80  B4D8               	btfsc	status,2,c
 23008  002E82  D688               	goto	l16238
 23009  002E84  0A0E               	xorlw	14	; case 41
 23010  002E86  B4D8               	btfsc	status,2,c
 23011  002E88  D6B4               	goto	l16244
 23012  002E8A  0A03               	xorlw	3	; case 42
 23013  002E8C  B4D8               	btfsc	status,2,c
 23014  002E8E  D6C0               	goto	l16248
 23015  002E90  0A06               	xorlw	6	; case 44
 23016  002E92  B4D8               	btfsc	status,2,c
 23017  002E94  D6EC               	goto	l16254
 23018  002E96  0A02               	xorlw	2	; case 46
 23019  002E98  B4D8               	btfsc	status,2,c
 23020  002E9A  D718               	goto	l16260
 23021  002E9C  0A01               	xorlw	1	; case 47
 23022  002E9E  B4D8               	btfsc	status,2,c
 23023  002EA0  D71F               	goto	l16264
 23024  002EA2  0A1F               	xorlw	31	; case 48
 23025  002EA4  B4D8               	btfsc	status,2,c
 23026  002EA6  D726               	goto	l16268
 23027  002EA8  0A02               	xorlw	2	; case 50
 23028  002EAA  A4D8               	btfss	status,2,c
 23029  002EAC  0012               	return	
 23030  002EAE  D751               	goto	l16274
 23031  002EB0                     __end_of_read_eusartparser:
 23032                           	callstack 0
 23033                           
 23034 ;; *************** function _write_package *****************
 23035 ;; Defined at:
 23036 ;;		line 50 in file "eusartpackage.c"
 23037 ;; Parameters:    Size  Location     Type
 23038 ;;  package         7   16[COMRAM] const struct package_t
 23039 ;; Auto vars:     Size  Location     Type
 23040 ;;		None
 23041 ;; Return value:  Size  Location     Type
 23042 ;;                  1    wreg      void 
 23043 ;; Registers used:
 23044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23045 ;; Tracked objects:
 23046 ;;		On entry : 0/1
 23047 ;;		On exit  : 0/0
 23048 ;;		Unchanged: 0/0
 23049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23050 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23053 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23054 ;;Total ram usage:        7 bytes
 23055 ;; Hardware stack levels used: 1
 23056 ;; Hardware stack levels required when called: 5
 23057 ;; This function calls:
 23058 ;;		_EUSART1_Write
 23059 ;; This function is called by:
 23060 ;;		_read_eusartparser
 23061 ;;		_eusartparser
 23062 ;; This function uses a non-reentrant model
 23063 ;;
 23064                           
 23065                           	psect	text80
 23066  008D9A                     __ptext80:
 23067                           	callstack 0
 23068  008D9A                     _write_package:
 23069                           	callstack 24
 23070                           
 23071                           ;eusartpackage.c: 52:         if(package.valid==0)
 23072                           
 23073                           ;incstack = 0
 23074  008D9A  5017               	movf	(write_package@package+6)^0,w,c
 23075  008D9C  B4D8               	btfsc	status,2,c
 23076  008D9E  0012               	return	
 23077                           
 23078                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 23079  008DA0  5015               	movf	(write_package@package+4)^0,w,c
 23080  008DA2  EC65  F045         	call	_EUSART1_Write
 23081                           
 23082                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 23083  008DA6  5011               	movf	write_package@package^0,w,c
 23084  008DA8  EC65  F045         	call	_EUSART1_Write
 23085                           
 23086                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 23087  008DAC  5012               	movf	(write_package@package+1)^0,w,c
 23088  008DAE  EC65  F045         	call	_EUSART1_Write
 23089                           
 23090                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 23091  008DB2  5013               	movf	(write_package@package+2)^0,w,c
 23092  008DB4  EC65  F045         	call	_EUSART1_Write
 23093                           
 23094                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 23095  008DB8  5014               	movf	(write_package@package+3)^0,w,c
 23096  008DBA  EC65  F045         	call	_EUSART1_Write
 23097                           
 23098                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 23099  008DBE  5016               	movf	(write_package@package+5)^0,w,c
 23100  008DC0  EC65  F045         	call	_EUSART1_Write
 23101  008DC4  0012               	return		;funcret
 23102  008DC6                     __end_of_write_package:
 23103                           	callstack 0
 23104                           
 23105 ;; *************** function _EUSART1_Write *****************
 23106 ;; Defined at:
 23107 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23108 ;; Parameters:    Size  Location     Type
 23109 ;;  txData          1    wreg     unsigned char 
 23110 ;; Auto vars:     Size  Location     Type
 23111 ;;  txData          1   15[COMRAM] unsigned char 
 23112 ;; Return value:  Size  Location     Type
 23113 ;;                  1    wreg      void 
 23114 ;; Registers used:
 23115 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23116 ;; Tracked objects:
 23117 ;;		On entry : 0/1
 23118 ;;		On exit  : 3F/E
 23119 ;;		Unchanged: 0/0
 23120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23125 ;;Total ram usage:        1 bytes
 23126 ;; Hardware stack levels used: 1
 23127 ;; Hardware stack levels required when called: 4
 23128 ;; This function calls:
 23129 ;;		Nothing
 23130 ;; This function is called by:
 23131 ;;		_write_package
 23132 ;; This function uses a non-reentrant model
 23133 ;;
 23134                           
 23135                           	psect	text81
 23136  008ACA                     __ptext81:
 23137                           	callstack 0
 23138  008ACA                     _EUSART1_Write:
 23139                           	callstack 24
 23140                           
 23141                           ;incstack = 0
 23142                           ;EUSART1_Write@txData stored from wreg
 23143  008ACA  6E10               	movwf	EUSART1_Write@txData^0,c
 23144  008ACC                     
 23145                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23146                           
 23147                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23148  008ACC  0101               	movlb	1	; () banked
 23149  008ACE  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 23150  008AD0  B4D8               	btfsc	status,2,c
 23151  008AD2  D7FC               	goto	l12124
 23152                           
 23153                           ; BSR set to: 1
 23154                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23155  008AD4  010E               	movlb	14	; () banked
 23156  008AD6  B9C5               	btfsc	197,4,b	;volatile
 23157  008AD8  D003               	goto	l100
 23158                           
 23159                           ; BSR set to: 14
 23160                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23161  008ADA  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23162                           
 23163                           ;mcc_generated_files/eusart1.c: 182:     }
 23164  008ADE  D012               	goto	l12140
 23165  008AE0                     l100:
 23166                           
 23167                           ; BSR set to: 14
 23168                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23169  008AE0  99C5               	bcf	197,4,b	;volatile
 23170                           
 23171                           ; BSR set to: 14
 23172                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23173  008AE2  0E84               	movlw	low _eusart1TxBuffer
 23174  008AE4  0100               	movlb	0	; () banked
 23175  008AE6  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23176  008AE8  6ED9               	movwf	fsr2l,c
 23177  008AEA  6ADA               	clrf	fsr2h,c
 23178  008AEC  0E02               	movlw	high _eusart1TxBuffer
 23179  008AEE  22DA               	addwfc	fsr2h,f,c
 23180  008AF0  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23181                           
 23182                           ; BSR set to: 0
 23183  008AF4  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23187  008AF6  0E07               	movlw	7
 23188  008AF8  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23189  008AFA  D002               	goto	l12138
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23193  008AFC  0E00               	movlw	0
 23194  008AFE  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23195  008B00                     l12138:
 23196                           
 23197                           ; BSR set to: 0
 23198                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23199  008B00  0101               	movlb	1	; () banked
 23200  008B02  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23201  008B04                     l12140:
 23202                           
 23203                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23204  008B04  010E               	movlb	14	; () banked
 23205  008B06  89C5               	bsf	197,4,b	;volatile
 23206                           
 23207                           ; BSR set to: 14
 23208  008B08  0012               	return		;funcret
 23209  008B0A                     __end_of_EUSART1_Write:
 23210                           	callstack 0
 23211                           
 23212 ;; *************** function _confirmpackage *****************
 23213 ;; Defined at:
 23214 ;;		line 448 in file "eusartparser.c"
 23215 ;; Parameters:    Size  Location     Type
 23216 ;;  package         1   16[COMRAM] PTR struct package_t
 23217 ;;		 -> main@package(7), 
 23218 ;;  confirm         1   17[COMRAM] _Bool 
 23219 ;; Auto vars:     Size  Location     Type
 23220 ;;		None
 23221 ;; Return value:  Size  Location     Type
 23222 ;;                  1    wreg      void 
 23223 ;; Registers used:
 23224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23225 ;; Tracked objects:
 23226 ;;		On entry : 31/0
 23227 ;;		On exit  : 31/0
 23228 ;;		Unchanged: 31/0
 23229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23233 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23234 ;;Total ram usage:        2 bytes
 23235 ;; Hardware stack levels used: 1
 23236 ;; Hardware stack levels required when called: 5
 23237 ;; This function calls:
 23238 ;;		_init_package
 23239 ;; This function is called by:
 23240 ;;		_eusartparser
 23241 ;; This function uses a non-reentrant model
 23242 ;;
 23243                           
 23244                           	psect	text82
 23245  00888C                     __ptext82:
 23246                           	callstack 0
 23247  00888C                     _confirmpackage:
 23248                           	callstack 24
 23249                           
 23250                           ;eusartparser.c: 449:         init_package(package);
 23251                           
 23252                           ; BSR set to: 14
 23253                           ;incstack = 0
 23254  00888C  C011  F010         	movff	confirmpackage@package,init_package@package
 23255  008890  ECE3  F046         	call	_init_package	;wreg free
 23256                           
 23257                           ;eusartparser.c: 450:         package->functioncode=0x03;
 23258  008894  5011               	movf	confirmpackage@package^0,w,c
 23259  008896  6ED9               	movwf	fsr2l,c
 23260  008898  6ADA               	clrf	fsr2h,c
 23261  00889A  0E03               	movlw	3
 23262  00889C  6EDF               	movwf	indf2,c
 23263                           
 23264                           ;eusartparser.c: 451:         package->address=0x00;
 23265  00889E  5011               	movf	confirmpackage@package^0,w,c
 23266  0088A0  6ED9               	movwf	fsr2l,c
 23267  0088A2  6ADA               	clrf	fsr2h,c
 23268  0088A4  0E01               	movlw	1
 23269  0088A6  26D9               	addwf	fsr2l,f,c
 23270  0088A8  0E00               	movlw	0
 23271  0088AA  6EDF               	movwf	indf2,c
 23272                           
 23273                           ;eusartparser.c: 452:         if(confirm==1)
 23274  0088AC  0412               	decf	confirmpackage@confirm^0,w,c
 23275  0088AE  A4D8               	btfss	status,2,c
 23276  0088B0  D00A               	goto	l16330
 23277                           
 23278                           ;eusartparser.c: 453:             package->data.data16=0x0001;
 23279  0088B2  5011               	movf	confirmpackage@package^0,w,c
 23280  0088B4  6ED9               	movwf	fsr2l,c
 23281  0088B6  6ADA               	clrf	fsr2h,c
 23282  0088B8  0E02               	movlw	2
 23283  0088BA  26D9               	addwf	fsr2l,f,c
 23284  0088BC  0E01               	movlw	1
 23285  0088BE  6EDE               	movwf	postinc2,c
 23286  0088C0  0E00               	movlw	0
 23287  0088C2  6EDD               	movwf	postdec2,c
 23288  0088C4  0012               	return	
 23289  0088C6                     l16330:
 23290                           
 23291                           ;eusartparser.c: 455:             package->data.data16=0x0000;
 23292  0088C6  5011               	movf	confirmpackage@package^0,w,c
 23293  0088C8  6ED9               	movwf	fsr2l,c
 23294  0088CA  6ADA               	clrf	fsr2h,c
 23295  0088CC  0E02               	movlw	2
 23296  0088CE  26D9               	addwf	fsr2l,f,c
 23297  0088D0  0E00               	movlw	0
 23298  0088D2  6EDE               	movwf	postinc2,c
 23299  0088D4  0E00               	movlw	0
 23300  0088D6  6EDD               	movwf	postdec2,c
 23301  0088D8  0012               	return		;funcret
 23302  0088DA                     __end_of_confirmpackage:
 23303                           	callstack 0
 23304                           
 23305 ;; *************** function _init_package *****************
 23306 ;; Defined at:
 23307 ;;		line 11 in file "eusartpackage.c"
 23308 ;; Parameters:    Size  Location     Type
 23309 ;;  package         1   15[COMRAM] PTR struct package_t
 23310 ;;		 -> main@package(7), 
 23311 ;; Auto vars:     Size  Location     Type
 23312 ;;		None
 23313 ;; Return value:  Size  Location     Type
 23314 ;;                  1    wreg      void 
 23315 ;; Registers used:
 23316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23317 ;; Tracked objects:
 23318 ;;		On entry : 31/0
 23319 ;;		On exit  : 31/0
 23320 ;;		Unchanged: 31/0
 23321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23322 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23326 ;;Total ram usage:        1 bytes
 23327 ;; Hardware stack levels used: 1
 23328 ;; Hardware stack levels required when called: 4
 23329 ;; This function calls:
 23330 ;;		Nothing
 23331 ;; This function is called by:
 23332 ;;		_confirmpackage
 23333 ;; This function uses a non-reentrant model
 23334 ;;
 23335                           
 23336                           	psect	text83
 23337  008DC6                     __ptext83:
 23338                           	callstack 0
 23339  008DC6                     _init_package:
 23340                           	callstack 24
 23341                           
 23342                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 23343                           
 23344                           ;incstack = 0
 23345  008DC6  5010               	movf	init_package@package^0,w,c
 23346  008DC8  6ED9               	movwf	fsr2l,c
 23347  008DCA  6ADA               	clrf	fsr2h,c
 23348  008DCC  0E04               	movlw	4
 23349  008DCE  26D9               	addwf	fsr2l,f,c
 23350  008DD0  0E0A               	movlw	10
 23351  008DD2  6EDF               	movwf	indf2,c
 23352                           
 23353                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 23354  008DD4  5010               	movf	init_package@package^0,w,c
 23355  008DD6  6ED9               	movwf	fsr2l,c
 23356  008DD8  6ADA               	clrf	fsr2h,c
 23357  008DDA  0E05               	movlw	5
 23358  008DDC  26D9               	addwf	fsr2l,f,c
 23359  008DDE  0E0D               	movlw	13
 23360  008DE0  6EDF               	movwf	indf2,c
 23361                           
 23362                           ;eusartpackage.c: 14:         package->valid=1;
 23363  008DE2  5010               	movf	init_package@package^0,w,c
 23364  008DE4  6ED9               	movwf	fsr2l,c
 23365  008DE6  6ADA               	clrf	fsr2h,c
 23366  008DE8  0E06               	movlw	6
 23367  008DEA  26D9               	addwf	fsr2l,f,c
 23368  008DEC  0E01               	movlw	1
 23369  008DEE  6EDF               	movwf	indf2,c
 23370  008DF0  0012               	return		;funcret
 23371  008DF2                     __end_of_init_package:
 23372                           	callstack 0
 23373                           
 23374 ;; *************** function _cmdMemoryIsEmpty *****************
 23375 ;; Defined at:
 23376 ;;		line 110 in file "controlMemory_MC50.c"
 23377 ;; Parameters:    Size  Location     Type
 23378 ;;  cmdType         1    wreg     unsigned char 
 23379 ;;  position        1   45[COMRAM] unsigned char 
 23380 ;; Auto vars:     Size  Location     Type
 23381 ;;  cmdType         1   48[COMRAM] unsigned char 
 23382 ;;  tempSerial      4   49[COMRAM] unsigned long 
 23383 ;; Return value:  Size  Location     Type
 23384 ;;                  1    wreg      unsigned char 
 23385 ;; Registers used:
 23386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23387 ;; Tracked objects:
 23388 ;;		On entry : 30/1
 23389 ;;		On exit  : 0/0
 23390 ;;		Unchanged: 0/0
 23391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23392 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23393 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23395 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23396 ;;Total ram usage:        8 bytes
 23397 ;; Hardware stack levels used: 1
 23398 ;; Hardware stack levels required when called: 13
 23399 ;; This function calls:
 23400 ;;		_i2c_readDataBlock
 23401 ;; This function is called by:
 23402 ;;		_setValueToEdit
 23403 ;;		_controlSelectRemote
 23404 ;;		_eusartparser
 23405 ;; This function uses a non-reentrant model
 23406 ;;
 23407                           
 23408                           	psect	text84
 23409  00774C                     __ptext84:
 23410                           	callstack 0
 23411  00774C                     _cmdMemoryIsEmpty:
 23412                           	callstack 14
 23413                           
 23414                           ;incstack = 0
 23415                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 23416  00774C  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 23417                           
 23418                           ;controlMemory_MC50.c: 110: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 111: {;controlMemory_MC50.c: 112:     unsigned long tempSerial=0;
 23419  00774E  0E00               	movlw	0
 23420  007750  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 23421  007752  0E00               	movlw	0
 23422  007754  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 23423  007756  0E00               	movlw	0
 23424  007758  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 23425  00775A  0E00               	movlw	0
 23426  00775C  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 23427                           
 23428                           ;controlMemory_MC50.c: 115:      if(cmdType==0)
 23429  00775E  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 23430  007760  A4D8               	btfss	status,2,c
 23431  007762  D01A               	goto	l19820
 23432                           
 23433                           ;controlMemory_MC50.c: 116:     {;controlMemory_MC50.c: 117:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 23434  007764  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 23435  007766  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 23436  007768  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 23437  00776A  90D8               	bcf	status,0,c
 23438  00776C  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23439  00776E  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23440  007770  90D8               	bcf	status,0,c
 23441  007772  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23442  007774  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23443  007776  0E00               	movlw	0
 23444  007778  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 23445  00777A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23446  00777C  0E02               	movlw	2
 23447  00777E  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 23448  007780  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23449  007782  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 23450  007784  6E24               	movwf	i2c_readDataBlock@data^0,c
 23451  007786  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 23452  007788  0E00               	movlw	0
 23453  00778A  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23454  00778C  0E04               	movlw	4
 23455  00778E  6E26               	movwf	i2c_readDataBlock@len^0,c
 23456  007790  0E50               	movlw	80
 23457  007792  ECC8  F03F         	call	_i2c_readDataBlock
 23458                           
 23459                           ;controlMemory_MC50.c: 118:     }
 23460  007796  D019               	goto	l19822
 23461  007798                     l19820:
 23462                           
 23463                           ;controlMemory_MC50.c: 120:     {;controlMemory_MC50.c: 121:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 23464  007798  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 23465  00779A  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 23466  00779C  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 23467  00779E  90D8               	bcf	status,0,c
 23468  0077A0  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23469  0077A2  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23470  0077A4  90D8               	bcf	status,0,c
 23471  0077A6  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23472  0077A8  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23473  0077AA  0E00               	movlw	0
 23474  0077AC  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 23475  0077AE  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23476  0077B0  0E05               	movlw	5
 23477  0077B2  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 23478  0077B4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23479  0077B6  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 23480  0077B8  6E24               	movwf	i2c_readDataBlock@data^0,c
 23481  0077BA  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 23482  0077BC  0E00               	movlw	0
 23483  0077BE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23484  0077C0  0E04               	movlw	4
 23485  0077C2  6E26               	movwf	i2c_readDataBlock@len^0,c
 23486  0077C4  0E50               	movlw	80
 23487  0077C6  ECC8  F03F         	call	_i2c_readDataBlock
 23488  0077CA                     l19822:
 23489                           
 23490                           ;controlMemory_MC50.c: 124:      if( tempSerial==0)
 23491  0077CA  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 23492  0077CC  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 23493  0077CE  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 23494  0077D0  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 23495  0077D2  A4D8               	btfss	status,2,c
 23496  0077D4  D002               	goto	l19830
 23497                           
 23498                           ;controlMemory_MC50.c: 125:      {;controlMemory_MC50.c: 126:          return 1;
 23499  0077D6  0E01               	movlw	1
 23500  0077D8  0012               	return	
 23501  0077DA                     l19830:
 23502                           
 23503                           ;controlMemory_MC50.c: 129:      {;controlMemory_MC50.c: 130:          return 0;
 23504  0077DA  0E00               	movlw	0
 23505  0077DC  0012               	return		;funcret
 23506  0077DE                     __end_of_cmdMemoryIsEmpty:
 23507                           	callstack 0
 23508                           
 23509 ;; *************** function _i2c_readDataBlock *****************
 23510 ;; Defined at:
 23511 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23512 ;; Parameters:    Size  Location     Type
 23513 ;;  address         1    wreg     unsigned char 
 23514 ;;  reg             2   33[COMRAM] unsigned short 
 23515 ;;  data            2   35[COMRAM] PTR void 
 23516 ;;		 -> var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemotesFull(1), memoryTEMP(16)
      +, 
 23517 ;;		 -> var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 23518 ;;  len             2   37[COMRAM] unsigned int 
 23519 ;; Auto vars:     Size  Location     Type
 23520 ;;  address         1   40[COMRAM] unsigned char 
 23521 ;;  d               4   41[COMRAM] struct .
 23522 ;; Return value:  Size  Location     Type
 23523 ;;                  1    wreg      void 
 23524 ;; Registers used:
 23525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23526 ;; Tracked objects:
 23527 ;;		On entry : 0/0
 23528 ;;		On exit  : 0/0
 23529 ;;		Unchanged: 0/0
 23530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23531 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23532 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23534 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23535 ;;Total ram usage:       12 bytes
 23536 ;; Hardware stack levels used: 1
 23537 ;; Hardware stack levels required when called: 12
 23538 ;; This function calls:
 23539 ;;		_I2C1_Close
 23540 ;;		_I2C1_MasterWrite
 23541 ;;		_I2C1_Open
 23542 ;;		_I2C1_SetAddressNackCallback
 23543 ;;		_I2C1_SetBuffer
 23544 ;;		_I2C1_SetDataCompleteCallback
 23545 ;; This function is called by:
 23546 ;;		_validateRemoteSerialNumber
 23547 ;;		_cmdMemoryIsEmpty
 23548 ;;		_loadNVM_VarSystem
 23549 ;; This function uses a non-reentrant model
 23550 ;;
 23551                           
 23552                           	psect	text85
 23553  007F90                     __ptext85:
 23554                           	callstack 0
 23555  007F90                     _i2c_readDataBlock:
 23556                           	callstack 14
 23557                           
 23558                           ;incstack = 0
 23559                           ;i2c_readDataBlock@address stored from wreg
 23560  007F90  6E29               	movwf	i2c_readDataBlock@address^0,c
 23561                           
 23562                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 23563  007F92  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 23564  007F96  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 23565                           
 23566                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 23567  007F9A  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 23568  007F9E  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 23569  007FA2                     l19624:
 23570  007FA2  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 23571  007FA4  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 23572  007FA6  ECD3  F03D         	call	_I2C1_Open
 23573  007FAA  0900               	iorlw	0
 23574  007FAC  B4D8               	btfsc	status,2,c
 23575  007FAE  D7F9               	goto	l19624
 23576                           
 23577                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 23578  007FB0  0E4A               	movlw	low _rdBlkRegCompleteHandler
 23579  007FB2  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 23580  007FB4  0E8B               	movlw	high _rdBlkRegCompleteHandler
 23581  007FB6  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 23582  007FB8  0E2A               	movlw	low i2c_readDataBlock@d
 23583  007FBA  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 23584  007FBC  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 23585  007FBE  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 23586                           
 23587                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 23588  007FC2  0E22               	movlw	low i2c_readDataBlock@reg
 23589  007FC4  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 23590  007FC6  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 23591  007FC8  0E00               	movlw	0
 23592  007FCA  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 23593  007FCC  0E01               	movlw	1
 23594  007FCE  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 23595  007FD0  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 23596                           
 23597                           ; BSR set to: 2
 23598                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 23599  007FD4  0E00               	movlw	0
 23600  007FD6  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 23601  007FD8  0E00               	movlw	0
 23602  007FDA  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 23603  007FDC  0E00               	movlw	0
 23604  007FDE  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 23605  007FE0  0E00               	movlw	0
 23606  007FE2  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 23607  007FE4  EC65  F049         	call	_I2C1_SetAddressNackCallback	;wreg free
 23608                           
 23609                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 23610  007FE8  EC33  F04A         	call	_I2C1_MasterWrite	;wreg free
 23611  007FEC                     l19634:
 23612  007FEC  ECA6  F048         	call	_I2C1_Close	;wreg free
 23613  007FF0  06E8               	decf	wreg,f,c
 23614  007FF2  B4D8               	btfsc	status,2,c
 23615  007FF4  D7FB               	goto	l19634
 23616                           
 23617                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 23618  007FF6  0ED0               	movlw	208
 23619  007FF8  6E28               	movwf	??_i2c_readDataBlock^0,c
 23620  007FFA  0ECA               	movlw	202
 23621  007FFC                     u29217:
 23622  007FFC  2EE8               	decfsz	wreg,f,c
 23623  007FFE  D7FE               	bra	u29217
 23624  008000  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 23625  008002  D7FC               	bra	u29217
 23626  008004  0012               	return		;funcret
 23627  008006                     __end_of_i2c_readDataBlock:
 23628                           	callstack 0
 23629                           
 23630 ;; *************** function _WWDT_TimerClear *****************
 23631 ;; Defined at:
 23632 ;;		line 128 in file "mcc_generated_files/mcc.c"
 23633 ;; Parameters:    Size  Location     Type
 23634 ;;		None
 23635 ;; Auto vars:     Size  Location     Type
 23636 ;;  state           1   15[COMRAM] _Bool 
 23637 ;;  readBack        1    0        unsigned char 
 23638 ;; Return value:  Size  Location     Type
 23639 ;;                  1    wreg      void 
 23640 ;; Registers used:
 23641 ;;		wreg, status,2
 23642 ;; Tracked objects:
 23643 ;;		On entry : 0/0
 23644 ;;		On exit  : 0/0
 23645 ;;		Unchanged: 0/0
 23646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23651 ;;Total ram usage:        1 bytes
 23652 ;; Hardware stack levels used: 1
 23653 ;; Hardware stack levels required when called: 4
 23654 ;; This function calls:
 23655 ;;		Nothing
 23656 ;; This function is called by:
 23657 ;;		_main
 23658 ;; This function uses a non-reentrant model
 23659 ;;
 23660                           
 23661                           	psect	text86
 23662  0091AC                     __ptext86:
 23663                           	callstack 0
 23664  0091AC                     _WWDT_TimerClear:
 23665                           	callstack 26
 23666                           
 23667                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 23668                           
 23669                           ;incstack = 0
 23670  0091AC  0E00               	movlw	0
 23671  0091AE  BEF2               	btfsc	4082,7,c	;volatile
 23672  0091B0  0E01               	movlw	1
 23673  0091B2  6E10               	movwf	WWDT_TimerClear@state^0,c
 23674                           
 23675                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 23676  0091B4  9EF2               	bcf	4082,7,c	;volatile
 23677  0091B6  010E               	movlb	14	; () banked
 23678  0091B8  51D2               	movf	210,w,b	;volatile
 23679  0091BA  0004               	clrwdt		;# 
 23680                           
 23681                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 23682  0091BC  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 23683  0091BE  D002               	bra	u18735
 23684  0091C0  9EF2               	bcf	4082,7,c	;volatile
 23685  0091C2  D001               	bra	u18736
 23686  0091C4                     u18735:
 23687  0091C4  8EF2               	bsf	4082,7,c	;volatile
 23688  0091C6                     u18736:
 23689  0091C6  0012               	return		;funcret
 23690  0091C8                     __end_of_WWDT_TimerClear:
 23691                           	callstack 0
 23692                           
 23693 ;; *************** function _WWDT_SoftEnable *****************
 23694 ;; Defined at:
 23695 ;;		line 104 in file "mcc_generated_files/mcc.c"
 23696 ;; Parameters:    Size  Location     Type
 23697 ;;		None
 23698 ;; Auto vars:     Size  Location     Type
 23699 ;;		None
 23700 ;; Return value:  Size  Location     Type
 23701 ;;                  1    wreg      void 
 23702 ;; Registers used:
 23703 ;;		None
 23704 ;; Tracked objects:
 23705 ;;		On entry : 3F/E
 23706 ;;		On exit  : 3F/E
 23707 ;;		Unchanged: 0/0
 23708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23713 ;;Total ram usage:        0 bytes
 23714 ;; Hardware stack levels used: 1
 23715 ;; Hardware stack levels required when called: 4
 23716 ;; This function calls:
 23717 ;;		Nothing
 23718 ;; This function is called by:
 23719 ;;		_main
 23720 ;; This function uses a non-reentrant model
 23721 ;;
 23722                           
 23723                           	psect	text87
 23724  0094EC                     __ptext87:
 23725                           	callstack 0
 23726  0094EC                     _WWDT_SoftEnable:
 23727                           	callstack 26
 23728                           
 23729                           ; BSR set to: 14
 23730                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 23731                           
 23732                           ;incstack = 0
 23733  0094EC  81D2               	bsf	210,0,b	;volatile
 23734                           
 23735                           ; BSR set to: 14
 23736  0094EE  0012               	return		;funcret
 23737  0094F0                     __end_of_WWDT_SoftEnable:
 23738                           	callstack 0
 23739                           
 23740 ;; *************** function _ShowVersion *****************
 23741 ;; Defined at:
 23742 ;;		line 254 in file "main_MC50.c"
 23743 ;; Parameters:    Size  Location     Type
 23744 ;;		None
 23745 ;; Auto vars:     Size  Location     Type
 23746 ;;		None
 23747 ;; Return value:  Size  Location     Type
 23748 ;;                  1    wreg      void 
 23749 ;; Registers used:
 23750 ;;		wreg, status,2, status,0, cstack
 23751 ;; Tracked objects:
 23752 ;;		On entry : 3F/1
 23753 ;;		On exit  : 3F/1
 23754 ;;		Unchanged: 0/0
 23755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23760 ;;Total ram usage:        0 bytes
 23761 ;; Hardware stack levels used: 1
 23762 ;; Hardware stack levels required when called: 5
 23763 ;; This function calls:
 23764 ;;		_SetSegmentValue
 23765 ;; This function is called by:
 23766 ;;		_main
 23767 ;; This function uses a non-reentrant model
 23768 ;;
 23769                           
 23770                           	psect	text88
 23771  00830A                     __ptext88:
 23772                           	callstack 0
 23773  00830A                     _ShowVersion:
 23774                           	callstack 25
 23775                           
 23776                           ; BSR set to: 1
 23777                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 23778                           
 23779                           ; BSR set to: 14
 23780                           ;incstack = 0
 23781  00830A  BFD7               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 23782  00830C  D005               	goto	u19920
 23783  00830E  51D7               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 23784  008310  E12E               	bnz	l2039
 23785  008312  05D6               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 23786  008314  B0D8               	btfsc	status,0,c
 23787  008316  0012               	return	
 23788  008318                     u19920:
 23789                           
 23790                           ; BSR set to: 1
 23791                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 23792  008318  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 23793  00831A  A4D8               	btfss	status,2,c
 23794  00831C  D006               	goto	l17028
 23795                           
 23796                           ; BSR set to: 1
 23797                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 23798  00831E  0E01               	movlw	1
 23799  008320  6E1C               	movwf	SetSegmentValue@d2^0,c
 23800  008322  0E00               	movlw	0
 23801  008324  EC27  F049         	call	_SetSegmentValue
 23802                           
 23803                           ;main_MC50.c: 262:             }
 23804  008328  D01C               	goto	l2034
 23805  00832A                     l17028:
 23806                           
 23807                           ; BSR set to: 1
 23808  00832A  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 23809  00832C  A4D8               	btfss	status,2,c
 23810  00832E  D006               	goto	l17032
 23811                           
 23812                           ; BSR set to: 1
 23813                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 23814  008330  0E01               	movlw	1
 23815  008332  6E1C               	movwf	SetSegmentValue@d2^0,c
 23816  008334  0E14               	movlw	20
 23817  008336  EC27  F049         	call	_SetSegmentValue
 23818                           
 23819                           ;main_MC50.c: 266:             }
 23820  00833A  D013               	goto	l2034
 23821  00833C                     l17032:
 23822                           
 23823                           ; BSR set to: 1
 23824  00833C  0E02               	movlw	2
 23825  00833E  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23826  008340  A4D8               	btfss	status,2,c
 23827  008342  D006               	goto	l17036
 23828                           
 23829                           ; BSR set to: 1
 23830                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 23831  008344  0E00               	movlw	0
 23832  008346  6E1C               	movwf	SetSegmentValue@d2^0,c
 23833  008348  0E08               	movlw	8
 23834  00834A  EC27  F049         	call	_SetSegmentValue
 23835                           
 23836                           ;main_MC50.c: 270:             }
 23837  00834E  D009               	goto	l2034
 23838  008350                     l17036:
 23839                           
 23840                           ; BSR set to: 1
 23841  008350  0E03               	movlw	3
 23842  008352  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 23843  008354  A4D8               	btfss	status,2,c
 23844  008356  D005               	goto	l2034
 23845                           
 23846                           ; BSR set to: 1
 23847                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 23848  008358  0E02               	movlw	2
 23849  00835A  6E1C               	movwf	SetSegmentValue@d2^0,c
 23850  00835C  0E14               	movlw	20
 23851  00835E  EC27  F049         	call	_SetSegmentValue
 23852  008362                     l2034:
 23853                           
 23854                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 23855                           
 23856                           ; BSR set to: 1
 23857  008362  0101               	movlb	1	; () banked
 23858  008364  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 23859                           
 23860                           ; BSR set to: 1
 23861                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 23862  008366  0E00               	movlw	0
 23863  008368  6FD7               	movwf	(_ts_system+61)& (0+255),b	;volatile
 23864  00836A  0E14               	movlw	20
 23865  00836C  6FD6               	movwf	(_ts_system+60)& (0+255),b	;volatile
 23866  00836E                     l2039:
 23867                           
 23868                           ; BSR set to: 1
 23869  00836E  0012               	return		;funcret
 23870  008370                     __end_of_ShowVersion:
 23871                           	callstack 0
 23872                           
 23873 ;; *************** function _SetSegmentValue *****************
 23874 ;; Defined at:
 23875 ;;		line 112 in file "outputs_MC50.c"
 23876 ;; Parameters:    Size  Location     Type
 23877 ;;  d1              1    wreg     unsigned char 
 23878 ;;  d2              1   27[COMRAM] unsigned char 
 23879 ;; Auto vars:     Size  Location     Type
 23880 ;;  d1              1   28[COMRAM] unsigned char 
 23881 ;; Return value:  Size  Location     Type
 23882 ;;                  1    wreg      void 
 23883 ;; Registers used:
 23884 ;;		wreg, status,2
 23885 ;; Tracked objects:
 23886 ;;		On entry : 0/0
 23887 ;;		On exit  : 3F/0
 23888 ;;		Unchanged: 0/0
 23889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23890 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23894 ;;Total ram usage:        2 bytes
 23895 ;; Hardware stack levels used: 1
 23896 ;; Hardware stack levels required when called: 4
 23897 ;; This function calls:
 23898 ;;		Nothing
 23899 ;; This function is called by:
 23900 ;;		_main
 23901 ;;		_ShowVersion
 23902 ;;		_controlSelectRemote
 23903 ;; This function uses a non-reentrant model
 23904 ;;
 23905                           
 23906                           	psect	text89
 23907  00924E                     __ptext89:
 23908                           	callstack 0
 23909  00924E                     _SetSegmentValue:
 23910                           	callstack 23
 23911                           
 23912                           ; BSR set to: 1
 23913                           ;incstack = 0
 23914                           ;SetSegmentValue@d1 stored from wreg
 23915  00924E  6E1D               	movwf	SetSegmentValue@d1^0,c
 23916                           
 23917                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 23918  009250  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 23919                           
 23920                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 23921  009254  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 23922                           
 23923                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 23924  009258  0E00               	movlw	0
 23925  00925A  0100               	movlb	0	; () banked
 23926  00925C  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 23927  00925E  0E00               	movlw	0
 23928  009260  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 23929                           
 23930                           ; BSR set to: 0
 23931                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 23932  009262  0E00               	movlw	0
 23933  009264  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 23934                           
 23935                           ; BSR set to: 0
 23936  009266  0012               	return		;funcret
 23937  009268                     __end_of_SetSegmentValue:
 23938                           	callstack 0
 23939                           
 23940 ;; *************** function _SYSTEM_Initialize *****************
 23941 ;; Defined at:
 23942 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23943 ;; Parameters:    Size  Location     Type
 23944 ;;		None
 23945 ;; Auto vars:     Size  Location     Type
 23946 ;;		None
 23947 ;; Return value:  Size  Location     Type
 23948 ;;                  1    wreg      void 
 23949 ;; Registers used:
 23950 ;;		wreg, status,2, status,0, cstack
 23951 ;; Tracked objects:
 23952 ;;		On entry : 3F/0
 23953 ;;		On exit  : 3F/E
 23954 ;;		Unchanged: 0/0
 23955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23960 ;;Total ram usage:        0 bytes
 23961 ;; Hardware stack levels used: 1
 23962 ;; Hardware stack levels required when called: 6
 23963 ;; This function calls:
 23964 ;;		_ADCC_Initialize
 23965 ;;		_EUSART1_Initialize
 23966 ;;		_I2C1_Initialize
 23967 ;;		_INTERRUPT_Initialize
 23968 ;;		_OSCILLATOR_Initialize
 23969 ;;		_PIN_MANAGER_Initialize
 23970 ;;		_PMD_Initialize
 23971 ;;		_TMR0_Initialize
 23972 ;;		_TMR1_Initialize
 23973 ;;		_TMR2_Initialize
 23974 ;;		_WWDT_Initialize
 23975 ;; This function is called by:
 23976 ;;		_main
 23977 ;; This function uses a non-reentrant model
 23978 ;;
 23979                           
 23980                           	psect	text90
 23981  008D40                     __ptext90:
 23982                           	callstack 0
 23983  008D40                     _SYSTEM_Initialize:
 23984                           	callstack 24
 23985                           
 23986                           ; BSR set to: 0
 23987                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23988                           
 23989                           ; BSR set to: 0
 23990                           ;incstack = 0
 23991  008D40  EC78  F04A         	call	_INTERRUPT_Initialize	;wreg free
 23992                           
 23993                           ; BSR set to: 0
 23994                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23995  008D44  ECE4  F048         	call	_PMD_Initialize	;wreg free
 23996                           
 23997                           ; BSR set to: 14
 23998                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 23999  008D48  ECB3  F049         	call	_I2C1_Initialize	;wreg free
 24000                           
 24001                           ; BSR set to: 14
 24002                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 24003  008D4C  EC5A  F03B         	call	_PIN_MANAGER_Initialize	;wreg free
 24004                           
 24005                           ; BSR set to: 14
 24006                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 24007  008D50  EC89  F049         	call	_OSCILLATOR_Initialize	;wreg free
 24008                           
 24009                           ; BSR set to: 14
 24010                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 24011  008D54  ECF7  F049         	call	_WWDT_Initialize	;wreg free
 24012                           
 24013                           ; BSR set to: 14
 24014                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 24015  008D58  ECF7  F043         	call	_ADCC_Initialize	;wreg free
 24016                           
 24017                           ; BSR set to: 15
 24018                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 24019  008D5C  ECF9  F046         	call	_TMR2_Initialize	;wreg free
 24020                           
 24021                           ; BSR set to: 14
 24022                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 24023  008D60  EC44  F045         	call	_TMR1_Initialize	;wreg free
 24024                           
 24025                           ; BSR set to: 14
 24026                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 24027  008D64  EC95  F048         	call	_TMR0_Initialize	;wreg free
 24028                           
 24029                           ; BSR set to: 14
 24030                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 24031  008D68  EC96  F03E         	call	_EUSART1_Initialize	;wreg free
 24032                           
 24033                           ; BSR set to: 14
 24034  008D6C  0012               	return		;funcret
 24035  008D6E                     __end_of_SYSTEM_Initialize:
 24036                           	callstack 0
 24037                           
 24038 ;; *************** function _WWDT_Initialize *****************
 24039 ;; Defined at:
 24040 ;;		line 96 in file "mcc_generated_files/mcc.c"
 24041 ;; Parameters:    Size  Location     Type
 24042 ;;		None
 24043 ;; Auto vars:     Size  Location     Type
 24044 ;;		None
 24045 ;; Return value:  Size  Location     Type
 24046 ;;                  1    wreg      void 
 24047 ;; Registers used:
 24048 ;;		wreg, status,2
 24049 ;; Tracked objects:
 24050 ;;		On entry : 3F/E
 24051 ;;		On exit  : 3F/E
 24052 ;;		Unchanged: 0/0
 24053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24058 ;;Total ram usage:        0 bytes
 24059 ;; Hardware stack levels used: 1
 24060 ;; Hardware stack levels required when called: 4
 24061 ;; This function calls:
 24062 ;;		Nothing
 24063 ;; This function is called by:
 24064 ;;		_SYSTEM_Initialize
 24065 ;; This function uses a non-reentrant model
 24066 ;;
 24067                           
 24068                           	psect	text91
 24069  0093EE                     __ptext91:
 24070                           	callstack 0
 24071  0093EE                     _WWDT_Initialize:
 24072                           	callstack 25
 24073                           
 24074                           ; BSR set to: 14
 24075                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 24076                           
 24077                           ; BSR set to: 14
 24078                           ;incstack = 0
 24079  0093EE  0E16               	movlw	22
 24080  0093F0  6FD2               	movwf	210,b	;volatile
 24081                           
 24082                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 24083  0093F2  0E27               	movlw	39
 24084  0093F4  6FD3               	movwf	211,b	;volatile
 24085                           
 24086                           ; BSR set to: 14
 24087  0093F6  0012               	return		;funcret
 24088  0093F8                     __end_of_WWDT_Initialize:
 24089                           	callstack 0
 24090                           
 24091 ;; *************** function _TMR2_Initialize *****************
 24092 ;; Defined at:
 24093 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 24094 ;; Parameters:    Size  Location     Type
 24095 ;;		None
 24096 ;; Auto vars:     Size  Location     Type
 24097 ;;		None
 24098 ;; Return value:  Size  Location     Type
 24099 ;;                  1    wreg      void 
 24100 ;; Registers used:
 24101 ;;		wreg, status,2, status,0, cstack
 24102 ;; Tracked objects:
 24103 ;;		On entry : 3F/F
 24104 ;;		On exit  : 3F/E
 24105 ;;		Unchanged: 0/0
 24106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24111 ;;Total ram usage:        0 bytes
 24112 ;; Hardware stack levels used: 1
 24113 ;; Hardware stack levels required when called: 5
 24114 ;; This function calls:
 24115 ;;		_TMR2_SetInterruptHandler
 24116 ;; This function is called by:
 24117 ;;		_SYSTEM_Initialize
 24118 ;; This function uses a non-reentrant model
 24119 ;;
 24120                           
 24121                           	psect	text92
 24122  008DF2                     __ptext92:
 24123                           	callstack 0
 24124  008DF2                     _TMR2_Initialize:
 24125                           	callstack 24
 24126                           
 24127                           ; BSR set to: 15
 24128                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 24129                           
 24130                           ; BSR set to: 14
 24131                           ;incstack = 0
 24132  008DF2  0E02               	movlw	2
 24133  008DF4  6EBF               	movwf	191,c	;volatile
 24134                           
 24135                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 24136  008DF6  0E40               	movlw	64
 24137  008DF8  6EBE               	movwf	190,c	;volatile
 24138                           
 24139                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 24140  008DFA  0E00               	movlw	0
 24141  008DFC  6EC0               	movwf	192,c	;volatile
 24142                           
 24143                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 24144  008DFE  0EC7               	movlw	199
 24145  008E00  6EBC               	movwf	188,c	;volatile
 24146                           
 24147                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 24148  008E02  0E00               	movlw	0
 24149  008E04  6EBB               	movwf	187,c	;volatile
 24150                           
 24151                           ; BSR set to: 15
 24152                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 24153  008E06  010E               	movlb	14	; () banked
 24154  008E08  93CE               	bcf	206,1,b	;volatile
 24155                           
 24156                           ; BSR set to: 14
 24157                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 24158  008E0A  83C6               	bsf	198,1,b	;volatile
 24159                           
 24160                           ; BSR set to: 14
 24161                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 24162  008E0C  0E1C               	movlw	low _TMR2_DefaultInterruptHandler
 24163  008E0E  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 24164  008E10  0E95               	movlw	high _TMR2_DefaultInterruptHandler
 24165  008E12  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 24166  008E14  ECFC  F049         	call	_TMR2_SetInterruptHandler	;wreg free
 24167                           
 24168                           ; BSR set to: 14
 24169                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 24170  008E18  0ED9               	movlw	217
 24171  008E1A  6EBD               	movwf	189,c	;volatile
 24172                           
 24173                           ; BSR set to: 14
 24174  008E1C  0012               	return		;funcret
 24175  008E1E                     __end_of_TMR2_Initialize:
 24176                           	callstack 0
 24177                           
 24178 ;; *************** function _TMR2_SetInterruptHandler *****************
 24179 ;; Defined at:
 24180 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 24181 ;; Parameters:    Size  Location     Type
 24182 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24183 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 24184 ;; Auto vars:     Size  Location     Type
 24185 ;;		None
 24186 ;; Return value:  Size  Location     Type
 24187 ;;                  1    wreg      void 
 24188 ;; Registers used:
 24189 ;;		wreg, status,2, status,0
 24190 ;; Tracked objects:
 24191 ;;		On entry : 3F/E
 24192 ;;		On exit  : 3F/E
 24193 ;;		Unchanged: 3F/0
 24194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24199 ;;Total ram usage:        2 bytes
 24200 ;; Hardware stack levels used: 1
 24201 ;; Hardware stack levels required when called: 4
 24202 ;; This function calls:
 24203 ;;		Nothing
 24204 ;; This function is called by:
 24205 ;;		_TMR2_Initialize
 24206 ;; This function uses a non-reentrant model
 24207 ;;
 24208                           
 24209                           	psect	text93
 24210  0093F8                     __ptext93:
 24211                           	callstack 0
 24212  0093F8                     _TMR2_SetInterruptHandler:
 24213                           	callstack 24
 24214                           
 24215                           ; BSR set to: 14
 24216                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 24217                           
 24218                           ; BSR set to: 14
 24219                           ;incstack = 0
 24220  0093F8  C010  F2DD         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 24221  0093FC  C011  F2DE         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 24222                           
 24223                           ; BSR set to: 14
 24224  009400  0012               	return		;funcret
 24225  009402                     __end_of_TMR2_SetInterruptHandler:
 24226                           	callstack 0
 24227                           
 24228 ;; *************** function _TMR1_Initialize *****************
 24229 ;; Defined at:
 24230 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 24231 ;; Parameters:    Size  Location     Type
 24232 ;;		None
 24233 ;; Auto vars:     Size  Location     Type
 24234 ;;		None
 24235 ;; Return value:  Size  Location     Type
 24236 ;;                  1    wreg      void 
 24237 ;; Registers used:
 24238 ;;		wreg, status,2, status,0, cstack
 24239 ;; Tracked objects:
 24240 ;;		On entry : 3F/E
 24241 ;;		On exit  : 3F/E
 24242 ;;		Unchanged: 0/0
 24243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24248 ;;Total ram usage:        2 bytes
 24249 ;; Hardware stack levels used: 1
 24250 ;; Hardware stack levels required when called: 5
 24251 ;; This function calls:
 24252 ;;		_TMR1_SetInterruptHandler
 24253 ;; This function is called by:
 24254 ;;		_SYSTEM_Initialize
 24255 ;; This function uses a non-reentrant model
 24256 ;;
 24257                           
 24258                           	psect	text94
 24259  008A88                     __ptext94:
 24260                           	callstack 0
 24261  008A88                     _TMR1_Initialize:
 24262                           	callstack 24
 24263                           
 24264                           ; BSR set to: 14
 24265                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 24266                           
 24267                           ; BSR set to: 14
 24268                           ;incstack = 0
 24269  008A88  0E00               	movlw	0
 24270  008A8A  6ED0               	movwf	208,c	;volatile
 24271                           
 24272                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 24273  008A8C  0E00               	movlw	0
 24274  008A8E  6ED1               	movwf	209,c	;volatile
 24275                           
 24276                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 24277  008A90  0E01               	movlw	1
 24278  008A92  6ED2               	movwf	210,c	;volatile
 24279                           
 24280                           ; BSR set to: 14
 24281                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 24282  008A94  68CE               	setf	206,c	;volatile
 24283                           
 24284                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 24285  008A96  0E38               	movlw	56
 24286  008A98  6ECD               	movwf	205,c	;volatile
 24287                           
 24288                           ; BSR set to: 14
 24289                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 24290  008A9A  91CE               	bcf	206,0,b	;volatile
 24291                           
 24292                           ; BSR set to: 14
 24293                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 24294  008A9C  50CD               	movf	205,w,c	;volatile
 24295  008A9E  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 24296  008AA2  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 24297  008AA4  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 24298  008AA8  6A12               	clrf	??_TMR1_Initialize^0,c
 24299  008AAA  1012               	iorwf	??_TMR1_Initialize^0,w,c
 24300  008AAC  0102               	movlb	2	; () banked
 24301  008AAE  6FE1               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 24302  008AB0  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 24303  008AB2  6FE2               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 24304                           
 24305                           ; BSR set to: 2
 24306                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 24307  008AB4  010E               	movlb	14	; () banked
 24308  008AB6  81C6               	bsf	198,0,b	;volatile
 24309                           
 24310                           ; BSR set to: 14
 24311                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 24312  008AB8  0E1E               	movlw	low _TMR1_DefaultInterruptHandler
 24313  008ABA  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 24314  008ABC  0E95               	movlw	high _TMR1_DefaultInterruptHandler
 24315  008ABE  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 24316  008AC0  EC01  F04A         	call	_TMR1_SetInterruptHandler	;wreg free
 24317                           
 24318                           ; BSR set to: 14
 24319                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 24320  008AC4  0E31               	movlw	49
 24321  008AC6  6ECF               	movwf	207,c	;volatile
 24322                           
 24323                           ; BSR set to: 14
 24324  008AC8  0012               	return		;funcret
 24325  008ACA                     __end_of_TMR1_Initialize:
 24326                           	callstack 0
 24327                           
 24328 ;; *************** function _TMR1_SetInterruptHandler *****************
 24329 ;; Defined at:
 24330 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 24331 ;; Parameters:    Size  Location     Type
 24332 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24333 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 24334 ;; Auto vars:     Size  Location     Type
 24335 ;;		None
 24336 ;; Return value:  Size  Location     Type
 24337 ;;                  1    wreg      void 
 24338 ;; Registers used:
 24339 ;;		wreg, status,2, status,0
 24340 ;; Tracked objects:
 24341 ;;		On entry : 3F/E
 24342 ;;		On exit  : 3F/E
 24343 ;;		Unchanged: 3F/0
 24344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24349 ;;Total ram usage:        2 bytes
 24350 ;; Hardware stack levels used: 1
 24351 ;; Hardware stack levels required when called: 4
 24352 ;; This function calls:
 24353 ;;		Nothing
 24354 ;; This function is called by:
 24355 ;;		_TMR1_Initialize
 24356 ;; This function uses a non-reentrant model
 24357 ;;
 24358                           
 24359                           	psect	text95
 24360  009402                     __ptext95:
 24361                           	callstack 0
 24362  009402                     _TMR1_SetInterruptHandler:
 24363                           	callstack 24
 24364                           
 24365                           ; BSR set to: 14
 24366                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 24367                           
 24368                           ; BSR set to: 14
 24369                           ;incstack = 0
 24370  009402  C010  F2DF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 24371  009406  C011  F2E0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 24372                           
 24373                           ; BSR set to: 14
 24374  00940A  0012               	return		;funcret
 24375  00940C                     __end_of_TMR1_SetInterruptHandler:
 24376                           	callstack 0
 24377                           
 24378 ;; *************** function _TMR0_Initialize *****************
 24379 ;; Defined at:
 24380 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 24381 ;; Parameters:    Size  Location     Type
 24382 ;;		None
 24383 ;; Auto vars:     Size  Location     Type
 24384 ;;		None
 24385 ;; Return value:  Size  Location     Type
 24386 ;;                  1    wreg      void 
 24387 ;; Registers used:
 24388 ;;		wreg, status,2, status,0, cstack
 24389 ;; Tracked objects:
 24390 ;;		On entry : 3F/E
 24391 ;;		On exit  : 3F/E
 24392 ;;		Unchanged: 0/0
 24393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24398 ;;Total ram usage:        0 bytes
 24399 ;; Hardware stack levels used: 1
 24400 ;; Hardware stack levels required when called: 5
 24401 ;; This function calls:
 24402 ;;		_TMR0_SetInterruptHandler
 24403 ;; This function is called by:
 24404 ;;		_SYSTEM_Initialize
 24405 ;; This function uses a non-reentrant model
 24406 ;;
 24407                           
 24408                           	psect	text96
 24409  00912A                     __ptext96:
 24410                           	callstack 0
 24411  00912A                     _TMR0_Initialize:
 24412                           	callstack 24
 24413                           
 24414                           ; BSR set to: 14
 24415                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 24416                           
 24417                           ; BSR set to: 14
 24418                           ;incstack = 0
 24419  00912A  0E41               	movlw	65
 24420  00912C  6ED6               	movwf	214,c	;volatile
 24421                           
 24422                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 24423  00912E  0E84               	movlw	132
 24424  009130  6ED4               	movwf	212,c	;volatile
 24425                           
 24426                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 24427  009132  0E00               	movlw	0
 24428  009134  6ED3               	movwf	211,c	;volatile
 24429                           
 24430                           ; BSR set to: 14
 24431                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 24432  009136  9BCA               	bcf	202,5,b	;volatile
 24433                           
 24434                           ; BSR set to: 14
 24435                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 24436  009138  8BC2               	bsf	194,5,b	;volatile
 24437                           
 24438                           ; BSR set to: 14
 24439                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 24440  00913A  0E20               	movlw	low _TMR0_DefaultInterruptHandler
 24441  00913C  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 24442  00913E  0E95               	movlw	high _TMR0_DefaultInterruptHandler
 24443  009140  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 24444  009142  EC06  F04A         	call	_TMR0_SetInterruptHandler	;wreg free
 24445                           
 24446                           ; BSR set to: 14
 24447                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 24448  009146  0E87               	movlw	135
 24449  009148  6ED5               	movwf	213,c	;volatile
 24450                           
 24451                           ; BSR set to: 14
 24452  00914A  0012               	return		;funcret
 24453  00914C                     __end_of_TMR0_Initialize:
 24454                           	callstack 0
 24455                           
 24456 ;; *************** function _TMR0_SetInterruptHandler *****************
 24457 ;; Defined at:
 24458 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 24459 ;; Parameters:    Size  Location     Type
 24460 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24461 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 24462 ;; Auto vars:     Size  Location     Type
 24463 ;;		None
 24464 ;; Return value:  Size  Location     Type
 24465 ;;                  1    wreg      void 
 24466 ;; Registers used:
 24467 ;;		wreg, status,2, status,0
 24468 ;; Tracked objects:
 24469 ;;		On entry : 3F/E
 24470 ;;		On exit  : 3F/E
 24471 ;;		Unchanged: 3F/0
 24472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24477 ;;Total ram usage:        2 bytes
 24478 ;; Hardware stack levels used: 1
 24479 ;; Hardware stack levels required when called: 4
 24480 ;; This function calls:
 24481 ;;		Nothing
 24482 ;; This function is called by:
 24483 ;;		_TMR0_Initialize
 24484 ;; This function uses a non-reentrant model
 24485 ;;
 24486                           
 24487                           	psect	text97
 24488  00940C                     __ptext97:
 24489                           	callstack 0
 24490  00940C                     _TMR0_SetInterruptHandler:
 24491                           	callstack 24
 24492                           
 24493                           ; BSR set to: 14
 24494                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 24495                           
 24496                           ; BSR set to: 14
 24497                           ;incstack = 0
 24498  00940C  C010  F2E3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 24499  009410  C011  F2E4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 24500                           
 24501                           ; BSR set to: 14
 24502  009414  0012               	return		;funcret
 24503  009416                     __end_of_TMR0_SetInterruptHandler:
 24504                           	callstack 0
 24505                           
 24506 ;; *************** function _PMD_Initialize *****************
 24507 ;; Defined at:
 24508 ;;		line 79 in file "mcc_generated_files/mcc.c"
 24509 ;; Parameters:    Size  Location     Type
 24510 ;;		None
 24511 ;; Auto vars:     Size  Location     Type
 24512 ;;		None
 24513 ;; Return value:  Size  Location     Type
 24514 ;;                  1    wreg      void 
 24515 ;; Registers used:
 24516 ;;		wreg, status,2
 24517 ;; Tracked objects:
 24518 ;;		On entry : 3F/0
 24519 ;;		On exit  : 3F/E
 24520 ;;		Unchanged: 0/0
 24521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24526 ;;Total ram usage:        0 bytes
 24527 ;; Hardware stack levels used: 1
 24528 ;; Hardware stack levels required when called: 4
 24529 ;; This function calls:
 24530 ;;		Nothing
 24531 ;; This function is called by:
 24532 ;;		_SYSTEM_Initialize
 24533 ;; This function uses a non-reentrant model
 24534 ;;
 24535                           
 24536                           	psect	text98
 24537  0091C8                     __ptext98:
 24538                           	callstack 0
 24539  0091C8                     _PMD_Initialize:
 24540                           	callstack 25
 24541                           
 24542                           ; BSR set to: 0
 24543                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 24544                           
 24545                           ; BSR set to: 14
 24546                           ;incstack = 0
 24547  0091C8  0E00               	movlw	0
 24548  0091CA  010E               	movlb	14	; () banked
 24549  0091CC  6FE1               	movwf	225,b	;volatile
 24550                           
 24551                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 24552  0091CE  0E00               	movlw	0
 24553  0091D0  6FE2               	movwf	226,b	;volatile
 24554                           
 24555                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 24556  0091D2  0E00               	movlw	0
 24557  0091D4  6FE3               	movwf	227,b	;volatile
 24558                           
 24559                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 24560  0091D6  0E00               	movlw	0
 24561  0091D8  6FE4               	movwf	228,b	;volatile
 24562                           
 24563                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 24564  0091DA  0E00               	movlw	0
 24565  0091DC  6FE5               	movwf	229,b	;volatile
 24566                           
 24567                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 24568  0091DE  0E00               	movlw	0
 24569  0091E0  6FE6               	movwf	230,b	;volatile
 24570                           
 24571                           ; BSR set to: 14
 24572  0091E2  0012               	return		;funcret
 24573  0091E4                     __end_of_PMD_Initialize:
 24574                           	callstack 0
 24575                           
 24576 ;; *************** function _PIN_MANAGER_Initialize *****************
 24577 ;; Defined at:
 24578 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 24579 ;; Parameters:    Size  Location     Type
 24580 ;;		None
 24581 ;; Auto vars:     Size  Location     Type
 24582 ;;		None
 24583 ;; Return value:  Size  Location     Type
 24584 ;;                  1    wreg      void 
 24585 ;; Registers used:
 24586 ;;		wreg, status,2
 24587 ;; Tracked objects:
 24588 ;;		On entry : 3F/E
 24589 ;;		On exit  : 3F/E
 24590 ;;		Unchanged: 0/0
 24591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24596 ;;Total ram usage:        0 bytes
 24597 ;; Hardware stack levels used: 1
 24598 ;; Hardware stack levels required when called: 4
 24599 ;; This function calls:
 24600 ;;		Nothing
 24601 ;; This function is called by:
 24602 ;;		_SYSTEM_Initialize
 24603 ;; This function uses a non-reentrant model
 24604 ;;
 24605                           
 24606                           	psect	text99
 24607  0076B4                     __ptext99:
 24608                           	callstack 0
 24609  0076B4                     _PIN_MANAGER_Initialize:
 24610                           	callstack 25
 24611                           
 24612                           ; BSR set to: 14
 24613                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 24614                           
 24615                           ; BSR set to: 14
 24616                           ;incstack = 0
 24617  0076B4  0E00               	movlw	0
 24618  0076B6  6E87               	movwf	135,c	;volatile
 24619                           
 24620                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 24621  0076B8  0E00               	movlw	0
 24622  0076BA  6E86               	movwf	134,c	;volatile
 24623                           
 24624                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 24625  0076BC  0E00               	movlw	0
 24626  0076BE  6E83               	movwf	131,c	;volatile
 24627                           
 24628                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 24629  0076C0  0E00               	movlw	0
 24630  0076C2  6E84               	movwf	132,c	;volatile
 24631                           
 24632                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 24633  0076C4  0E00               	movlw	0
 24634  0076C6  6E85               	movwf	133,c	;volatile
 24635                           
 24636                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 24637  0076C8  0E00               	movlw	0
 24638  0076CA  6E8C               	movwf	140,c	;volatile
 24639                           
 24640                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 24641  0076CC  0E7F               	movlw	127
 24642  0076CE  6E88               	movwf	136,c	;volatile
 24643                           
 24644                           ; BSR set to: 14
 24645                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 24646  0076D0  6889               	setf	137,c	;volatile
 24647                           
 24648                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 24649  0076D2  0E58               	movlw	88
 24650  0076D4  6E8A               	movwf	138,c	;volatile
 24651                           
 24652                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 24653  0076D6  0E00               	movlw	0
 24654  0076D8  6E8B               	movwf	139,c	;volatile
 24655                           
 24656                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 24657  0076DA  0E00               	movlw	0
 24658  0076DC  010F               	movlb	15	; () banked
 24659  0076DE  6F26               	movwf	38,b	;volatile
 24660                           
 24661                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 24662  0076E0  0E00               	movlw	0
 24663  0076E2  6F21               	movwf	33,b	;volatile
 24664                           
 24665                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 24666  0076E4  0E00               	movlw	0
 24667  0076E6  6F19               	movwf	25,b	;volatile
 24668                           
 24669                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 24670  0076E8  0E00               	movlw	0
 24671  0076EA  6F2E               	movwf	46,b	;volatile
 24672                           
 24673                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 24674  0076EC  0E01               	movlw	1
 24675  0076EE  6F11               	movwf	17,b	;volatile
 24676                           
 24677                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 24678  0076F0  0E00               	movlw	0
 24679  0076F2  6F25               	movwf	37,b	;volatile
 24680                           
 24681                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 24682  0076F4  0E00               	movlw	0
 24683  0076F6  6F2D               	movwf	45,b	;volatile
 24684                           
 24685                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 24686  0076F8  0EF7               	movlw	247
 24687  0076FA  6F18               	movwf	24,b	;volatile
 24688                           
 24689                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 24690  0076FC  0E00               	movlw	0
 24691  0076FE  6F10               	movwf	16,b	;volatile
 24692                           
 24693                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 24694  007700  0E00               	movlw	0
 24695  007702  6F20               	movwf	32,b	;volatile
 24696                           
 24697                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 24698  007704  0E00               	movlw	0
 24699  007706  6F2C               	movwf	44,b	;volatile
 24700                           
 24701                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 24702  007708  0E00               	movlw	0
 24703  00770A  6F0F               	movwf	15,b	;volatile
 24704                           
 24705                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 24706  00770C  0E00               	movlw	0
 24707  00770E  6F17               	movwf	23,b	;volatile
 24708                           
 24709                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 24710  007710  0E00               	movlw	0
 24711  007712  6F1F               	movwf	31,b	;volatile
 24712                           
 24713                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 24714  007714  0E00               	movlw	0
 24715  007716  6F24               	movwf	36,b	;volatile
 24716                           
 24717                           ; BSR set to: 15
 24718                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 24719  007718  690E               	setf	14,b	;volatile
 24720                           
 24721                           ; BSR set to: 15
 24722                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 24723  00771A  6916               	setf	22,b	;volatile
 24724                           
 24725                           ; BSR set to: 15
 24726                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 24727  00771C  691E               	setf	30,b	;volatile
 24728                           
 24729                           ; BSR set to: 15
 24730                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 24731  00771E  6923               	setf	35,b	;volatile
 24732                           
 24733                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 24734  007720  0E07               	movlw	7
 24735  007722  6F2B               	movwf	43,b	;volatile
 24736                           
 24737                           ; BSR set to: 15
 24738                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 24739  007724  690D               	setf	13,b	;volatile
 24740                           
 24741                           ; BSR set to: 15
 24742                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 24743  007726  6915               	setf	21,b	;volatile
 24744                           
 24745                           ; BSR set to: 15
 24746                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 24747  007728  691D               	setf	29,b	;volatile
 24748                           
 24749                           ; BSR set to: 15
 24750                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 24751  00772A  6922               	setf	34,b	;volatile
 24752                           
 24753                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 24754  00772C  0E0F               	movlw	15
 24755  00772E  6F2A               	movwf	42,b	;volatile
 24756                           
 24757                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 24758  007730  0E13               	movlw	19
 24759  007732  010E               	movlb	14	; () banked
 24760  007734  6FB7               	movwf	183,b	;volatile
 24761                           
 24762                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 24763  007736  0E16               	movlw	22
 24764  007738  6FB5               	movwf	181,b	;volatile
 24765                           
 24766                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 24767  00773A  0E0F               	movlw	15
 24768  00773C  6FFA               	movwf	250,b	;volatile
 24769                           
 24770                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 24771  00773E  0E10               	movlw	16
 24772  007740  6FFB               	movwf	251,b	;volatile
 24773                           
 24774                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 24775  007742  0E09               	movlw	9
 24776  007744  6FFE               	movwf	254,b	;volatile
 24777                           
 24778                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 24779  007746  0E14               	movlw	20
 24780  007748  6FB8               	movwf	184,b	;volatile
 24781                           
 24782                           ; BSR set to: 14
 24783  00774A  0012               	return		;funcret
 24784  00774C                     __end_of_PIN_MANAGER_Initialize:
 24785                           	callstack 0
 24786                           
 24787 ;; *************** function _OSCILLATOR_Initialize *****************
 24788 ;; Defined at:
 24789 ;;		line 65 in file "mcc_generated_files/mcc.c"
 24790 ;; Parameters:    Size  Location     Type
 24791 ;;		None
 24792 ;; Auto vars:     Size  Location     Type
 24793 ;;		None
 24794 ;; Return value:  Size  Location     Type
 24795 ;;                  1    wreg      void 
 24796 ;; Registers used:
 24797 ;;		wreg, status,2
 24798 ;; Tracked objects:
 24799 ;;		On entry : 3F/E
 24800 ;;		On exit  : 3F/E
 24801 ;;		Unchanged: 0/0
 24802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24807 ;;Total ram usage:        0 bytes
 24808 ;; Hardware stack levels used: 1
 24809 ;; Hardware stack levels required when called: 4
 24810 ;; This function calls:
 24811 ;;		Nothing
 24812 ;; This function is called by:
 24813 ;;		_SYSTEM_Initialize
 24814 ;; This function uses a non-reentrant model
 24815 ;;
 24816                           
 24817                           	psect	text100
 24818  009312                     __ptext100:
 24819                           	callstack 0
 24820  009312                     _OSCILLATOR_Initialize:
 24821                           	callstack 25
 24822                           
 24823                           ; BSR set to: 14
 24824                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 24825                           
 24826                           ; BSR set to: 14
 24827                           ;incstack = 0
 24828  009312  0E60               	movlw	96
 24829  009314  6FD8               	movwf	216,b	;volatile
 24830                           
 24831                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 24832  009316  0E00               	movlw	0
 24833  009318  6FDA               	movwf	218,b	;volatile
 24834                           
 24835                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 24836  00931A  0E00               	movlw	0
 24837  00931C  6FDC               	movwf	220,b	;volatile
 24838                           
 24839                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 24840  00931E  0E08               	movlw	8
 24841  009320  6FDE               	movwf	222,b	;volatile
 24842                           
 24843                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 24844  009322  0E00               	movlw	0
 24845  009324  6FDD               	movwf	221,b	;volatile
 24846                           
 24847                           ; BSR set to: 14
 24848  009326  0012               	return		;funcret
 24849  009328                     __end_of_OSCILLATOR_Initialize:
 24850                           	callstack 0
 24851                           
 24852 ;; *************** function _INTERRUPT_Initialize *****************
 24853 ;; Defined at:
 24854 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24855 ;; Parameters:    Size  Location     Type
 24856 ;;		None
 24857 ;; Auto vars:     Size  Location     Type
 24858 ;;		None
 24859 ;; Return value:  Size  Location     Type
 24860 ;;                  1    wreg      void 
 24861 ;; Registers used:
 24862 ;;		None
 24863 ;; Tracked objects:
 24864 ;;		On entry : 3F/0
 24865 ;;		On exit  : 3F/0
 24866 ;;		Unchanged: 3F/0
 24867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24872 ;;Total ram usage:        0 bytes
 24873 ;; Hardware stack levels used: 1
 24874 ;; Hardware stack levels required when called: 4
 24875 ;; This function calls:
 24876 ;;		Nothing
 24877 ;; This function is called by:
 24878 ;;		_SYSTEM_Initialize
 24879 ;; This function uses a non-reentrant model
 24880 ;;
 24881                           
 24882                           	psect	text101
 24883  0094F0                     __ptext101:
 24884                           	callstack 0
 24885  0094F0                     _INTERRUPT_Initialize:
 24886                           	callstack 25
 24887                           
 24888                           ; BSR set to: 0
 24889                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 24890                           
 24891                           ; BSR set to: 14
 24892                           ;incstack = 0
 24893  0094F0  9AF2               	bcf	242,5,c	;volatile
 24894                           
 24895                           ; BSR set to: 0
 24896  0094F2  0012               	return		;funcret
 24897  0094F4                     __end_of_INTERRUPT_Initialize:
 24898                           	callstack 0
 24899                           
 24900 ;; *************** function _I2C1_Initialize *****************
 24901 ;; Defined at:
 24902 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 24903 ;; Parameters:    Size  Location     Type
 24904 ;;		None
 24905 ;; Auto vars:     Size  Location     Type
 24906 ;;		None
 24907 ;; Return value:  Size  Location     Type
 24908 ;;                  1    wreg      void 
 24909 ;; Registers used:
 24910 ;;		wreg, status,2
 24911 ;; Tracked objects:
 24912 ;;		On entry : 3F/E
 24913 ;;		On exit  : 3F/E
 24914 ;;		Unchanged: 3F/0
 24915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24920 ;;Total ram usage:        0 bytes
 24921 ;; Hardware stack levels used: 1
 24922 ;; Hardware stack levels required when called: 4
 24923 ;; This function calls:
 24924 ;;		Nothing
 24925 ;; This function is called by:
 24926 ;;		_SYSTEM_Initialize
 24927 ;; This function uses a non-reentrant model
 24928 ;;
 24929                           
 24930                           	psect	text102
 24931  009366                     __ptext102:
 24932                           	callstack 0
 24933  009366                     _I2C1_Initialize:
 24934                           	callstack 25
 24935                           
 24936                           ; BSR set to: 14
 24937                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 24938                           
 24939                           ; BSR set to: 0
 24940                           ;incstack = 0
 24941  009366  0E80               	movlw	128
 24942  009368  6E95               	movwf	149,c	;volatile
 24943                           
 24944                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 24945  00936A  0E08               	movlw	8
 24946  00936C  6E96               	movwf	150,c	;volatile
 24947                           
 24948                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 24949  00936E  0E00               	movlw	0
 24950  009370  6E97               	movwf	151,c	;volatile
 24951                           
 24952                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 24953  009372  0E9F               	movlw	159
 24954  009374  6E93               	movwf	147,c	;volatile
 24955                           
 24956                           ; BSR set to: 14
 24957                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 24958  009376  9A96               	bcf	150,5,c	;volatile
 24959                           
 24960                           ; BSR set to: 14
 24961  009378  0012               	return		;funcret
 24962  00937A                     __end_of_I2C1_Initialize:
 24963                           	callstack 0
 24964                           
 24965 ;; *************** function _EUSART1_Initialize *****************
 24966 ;; Defined at:
 24967 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 24968 ;; Parameters:    Size  Location     Type
 24969 ;;		None
 24970 ;; Auto vars:     Size  Location     Type
 24971 ;;		None
 24972 ;; Return value:  Size  Location     Type
 24973 ;;                  1    wreg      void 
 24974 ;; Registers used:
 24975 ;;		wreg, status,2, status,0, cstack
 24976 ;; Tracked objects:
 24977 ;;		On entry : 3F/E
 24978 ;;		On exit  : 3F/E
 24979 ;;		Unchanged: 0/0
 24980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24985 ;;Total ram usage:        0 bytes
 24986 ;; Hardware stack levels used: 1
 24987 ;; Hardware stack levels required when called: 5
 24988 ;; This function calls:
 24989 ;;		_EUSART1_SetErrorHandler
 24990 ;;		_EUSART1_SetFramingErrorHandler
 24991 ;;		_EUSART1_SetOverrunErrorHandler
 24992 ;;		_EUSART1_SetRxInterruptHandler
 24993 ;;		_EUSART1_SetTxInterruptHandler
 24994 ;; This function is called by:
 24995 ;;		_SYSTEM_Initialize
 24996 ;; This function uses a non-reentrant model
 24997 ;;
 24998                           
 24999                           	psect	text103
 25000  007D2C                     __ptext103:
 25001                           	callstack 0
 25002  007D2C                     _EUSART1_Initialize:
 25003                           	callstack 24
 25004                           
 25005                           ; BSR set to: 14
 25006                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 25007                           
 25008                           ; BSR set to: 14
 25009                           ;incstack = 0
 25010  007D2C  9BC5               	bcf	197,5,b	;volatile
 25011                           
 25012                           ; BSR set to: 14
 25013                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 25014  007D2E  0E1A               	movlw	low _EUSART1_Receive_ISR
 25015  007D30  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 25016  007D32  0E76               	movlw	high _EUSART1_Receive_ISR
 25017  007D34  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 25018  007D36  EC10  F04A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 25019                           
 25020                           ; BSR set to: 14
 25021                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 25022  007D3A  99C5               	bcf	197,4,b	;volatile
 25023                           
 25024                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 25025  007D3C  0EDE               	movlw	low _EUSART1_Transmit_ISR
 25026  007D3E  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 25027  007D40  0E8C               	movlw	high _EUSART1_Transmit_ISR
 25028  007D42  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 25029  007D44  EC0B  F04A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 25030                           
 25031                           ; BSR set to: 14
 25032                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 25033  007D48  0E08               	movlw	8
 25034  007D4A  6E9F               	movwf	159,c	;volatile
 25035                           
 25036                           ; BSR set to: 14
 25037                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 25038  007D4C  0E90               	movlw	144
 25039  007D4E  6E9D               	movwf	157,c	;volatile
 25040                           
 25041                           ; BSR set to: 14
 25042                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 25043  007D50  0E24               	movlw	36
 25044  007D52  6E9E               	movwf	158,c	;volatile
 25045                           
 25046                           ; BSR set to: 14
 25047                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 25048  007D54  0E82               	movlw	130
 25049  007D56  6E9B               	movwf	155,c	;volatile
 25050                           
 25051                           ; BSR set to: 14
 25052                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 25053  007D58  0E06               	movlw	6
 25054  007D5A  6E9C               	movwf	156,c	;volatile
 25055                           
 25056                           ; BSR set to: 14
 25057                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 25058  007D5C  0E22               	movlw	low _EUSART1_DefaultFramingErrorHandler
 25059  007D5E  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 25060  007D60  0E95               	movlw	high _EUSART1_DefaultFramingErrorHandler
 25061  007D62  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 25062  007D64  EC1A  F04A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 25063                           
 25064                           ; BSR set to: 14
 25065                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 25066  007D68  0EDA               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 25067  007D6A  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 25068  007D6C  0E94               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 25069  007D6E  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 25070  007D70  EC15  F04A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 25071                           
 25072                           ; BSR set to: 14
 25073                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 25074  007D74  0EE0               	movlw	low _EUSART1_DefaultErrorHandler
 25075  007D76  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 25076  007D78  0E94               	movlw	high _EUSART1_DefaultErrorHandler
 25077  007D7A  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 25078  007D7C  EC1F  F04A         	call	_EUSART1_SetErrorHandler	;wreg free
 25079                           
 25080                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 25081  007D80  0E00               	movlw	0
 25082  007D82  0101               	movlb	1	; () banked
 25083  007D84  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 25084                           
 25085                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 25086  007D86  0E00               	movlw	0
 25087  007D88  0100               	movlb	0	; () banked
 25088  007D8A  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 25089                           
 25090                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 25091  007D8C  0E00               	movlw	0
 25092  007D8E  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 25093                           
 25094                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 25095  007D90  0E08               	movlw	8
 25096  007D92  0101               	movlb	1	; () banked
 25097  007D94  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 25098                           
 25099                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 25100  007D96  0E00               	movlw	0
 25101  007D98  0100               	movlb	0	; () banked
 25102  007D9A  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 25103                           
 25104                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 25105  007D9C  0E00               	movlw	0
 25106  007D9E  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 25107                           
 25108                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 25109  007DA0  0E00               	movlw	0
 25110  007DA2  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 25111                           
 25112                           ; BSR set to: 0
 25113                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 25114  007DA4  010E               	movlb	14	; () banked
 25115  007DA6  8BC5               	bsf	197,5,b	;volatile
 25116                           
 25117                           ; BSR set to: 14
 25118  007DA8  0012               	return		;funcret
 25119  007DAA                     __end_of_EUSART1_Initialize:
 25120                           	callstack 0
 25121                           
 25122 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 25123 ;; Defined at:
 25124 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 25125 ;; Parameters:    Size  Location     Type
 25126 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25127 ;;		 -> EUSART1_Transmit_ISR(1), 
 25128 ;; Auto vars:     Size  Location     Type
 25129 ;;		None
 25130 ;; Return value:  Size  Location     Type
 25131 ;;                  1    wreg      void 
 25132 ;; Registers used:
 25133 ;;		wreg, status,2, status,0
 25134 ;; Tracked objects:
 25135 ;;		On entry : 3F/E
 25136 ;;		On exit  : 3F/E
 25137 ;;		Unchanged: 3F/0
 25138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25143 ;;Total ram usage:        2 bytes
 25144 ;; Hardware stack levels used: 1
 25145 ;; Hardware stack levels required when called: 4
 25146 ;; This function calls:
 25147 ;;		Nothing
 25148 ;; This function is called by:
 25149 ;;		_EUSART1_Initialize
 25150 ;; This function uses a non-reentrant model
 25151 ;;
 25152                           
 25153                           	psect	text104
 25154  009416                     __ptext104:
 25155                           	callstack 0
 25156  009416                     _EUSART1_SetTxInterruptHandler:
 25157                           	callstack 24
 25158                           
 25159                           ; BSR set to: 14
 25160                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 25161                           
 25162                           ; BSR set to: 14
 25163                           ;incstack = 0
 25164  009416  C010  F2ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 25165  00941A  C011  F2EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 25166                           
 25167                           ; BSR set to: 14
 25168  00941E  0012               	return		;funcret
 25169  009420                     __end_of_EUSART1_SetTxInterruptHandler:
 25170                           	callstack 0
 25171                           
 25172 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 25173 ;; Defined at:
 25174 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 25175 ;; Parameters:    Size  Location     Type
 25176 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25177 ;;		 -> EUSART1_Receive_ISR(1), 
 25178 ;; Auto vars:     Size  Location     Type
 25179 ;;		None
 25180 ;; Return value:  Size  Location     Type
 25181 ;;                  1    wreg      void 
 25182 ;; Registers used:
 25183 ;;		wreg, status,2, status,0
 25184 ;; Tracked objects:
 25185 ;;		On entry : 3F/E
 25186 ;;		On exit  : 3F/E
 25187 ;;		Unchanged: 3F/0
 25188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25193 ;;Total ram usage:        2 bytes
 25194 ;; Hardware stack levels used: 1
 25195 ;; Hardware stack levels required when called: 4
 25196 ;; This function calls:
 25197 ;;		Nothing
 25198 ;; This function is called by:
 25199 ;;		_EUSART1_Initialize
 25200 ;; This function uses a non-reentrant model
 25201 ;;
 25202                           
 25203                           	psect	text105
 25204  009420                     __ptext105:
 25205                           	callstack 0
 25206  009420                     _EUSART1_SetRxInterruptHandler:
 25207                           	callstack 24
 25208                           
 25209                           ; BSR set to: 14
 25210                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 25211                           
 25212                           ; BSR set to: 14
 25213                           ;incstack = 0
 25214  009420  C010  F2EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 25215  009424  C011  F2EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 25216                           
 25217                           ; BSR set to: 14
 25218  009428  0012               	return		;funcret
 25219  00942A                     __end_of_EUSART1_SetRxInterruptHandler:
 25220                           	callstack 0
 25221                           
 25222 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 25223 ;; Defined at:
 25224 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 25225 ;; Parameters:    Size  Location     Type
 25226 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25227 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 25228 ;; Auto vars:     Size  Location     Type
 25229 ;;		None
 25230 ;; Return value:  Size  Location     Type
 25231 ;;                  1    wreg      void 
 25232 ;; Registers used:
 25233 ;;		wreg, status,2, status,0
 25234 ;; Tracked objects:
 25235 ;;		On entry : 3F/E
 25236 ;;		On exit  : 3F/E
 25237 ;;		Unchanged: 3F/0
 25238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25243 ;;Total ram usage:        2 bytes
 25244 ;; Hardware stack levels used: 1
 25245 ;; Hardware stack levels required when called: 4
 25246 ;; This function calls:
 25247 ;;		Nothing
 25248 ;; This function is called by:
 25249 ;;		_EUSART1_Initialize
 25250 ;; This function uses a non-reentrant model
 25251 ;;
 25252                           
 25253                           	psect	text106
 25254  00942A                     __ptext106:
 25255                           	callstack 0
 25256  00942A                     _EUSART1_SetOverrunErrorHandler:
 25257                           	callstack 24
 25258                           
 25259                           ; BSR set to: 14
 25260                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 25261                           
 25262                           ; BSR set to: 14
 25263                           ;incstack = 0
 25264  00942A  C010  F2E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 25265  00942E  C011  F2E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 25266                           
 25267                           ; BSR set to: 14
 25268  009432  0012               	return		;funcret
 25269  009434                     __end_of_EUSART1_SetOverrunErrorHandler:
 25270                           	callstack 0
 25271                           
 25272 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 25273 ;; Defined at:
 25274 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 25275 ;; Parameters:    Size  Location     Type
 25276 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25277 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 25278 ;; Auto vars:     Size  Location     Type
 25279 ;;		None
 25280 ;; Return value:  Size  Location     Type
 25281 ;;                  1    wreg      void 
 25282 ;; Registers used:
 25283 ;;		wreg, status,2, status,0
 25284 ;; Tracked objects:
 25285 ;;		On entry : 3F/E
 25286 ;;		On exit  : 3F/E
 25287 ;;		Unchanged: 3F/0
 25288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25293 ;;Total ram usage:        2 bytes
 25294 ;; Hardware stack levels used: 1
 25295 ;; Hardware stack levels required when called: 4
 25296 ;; This function calls:
 25297 ;;		Nothing
 25298 ;; This function is called by:
 25299 ;;		_EUSART1_Initialize
 25300 ;; This function uses a non-reentrant model
 25301 ;;
 25302                           
 25303                           	psect	text107
 25304  009434                     __ptext107:
 25305                           	callstack 0
 25306  009434                     _EUSART1_SetFramingErrorHandler:
 25307                           	callstack 24
 25308                           
 25309                           ; BSR set to: 14
 25310                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 25311                           
 25312                           ; BSR set to: 14
 25313                           ;incstack = 0
 25314  009434  C010  F2E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 25315  009438  C011  F2EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 25316                           
 25317                           ; BSR set to: 14
 25318  00943C  0012               	return		;funcret
 25319  00943E                     __end_of_EUSART1_SetFramingErrorHandler:
 25320                           	callstack 0
 25321                           
 25322 ;; *************** function _EUSART1_SetErrorHandler *****************
 25323 ;; Defined at:
 25324 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 25325 ;; Parameters:    Size  Location     Type
 25326 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25327 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 25328 ;; Auto vars:     Size  Location     Type
 25329 ;;		None
 25330 ;; Return value:  Size  Location     Type
 25331 ;;                  1    wreg      void 
 25332 ;; Registers used:
 25333 ;;		wreg, status,2, status,0
 25334 ;; Tracked objects:
 25335 ;;		On entry : 3F/E
 25336 ;;		On exit  : 3F/E
 25337 ;;		Unchanged: 3F/0
 25338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25343 ;;Total ram usage:        2 bytes
 25344 ;; Hardware stack levels used: 1
 25345 ;; Hardware stack levels required when called: 4
 25346 ;; This function calls:
 25347 ;;		Nothing
 25348 ;; This function is called by:
 25349 ;;		_EUSART1_Initialize
 25350 ;; This function uses a non-reentrant model
 25351 ;;
 25352                           
 25353                           	psect	text108
 25354  00943E                     __ptext108:
 25355                           	callstack 0
 25356  00943E                     _EUSART1_SetErrorHandler:
 25357                           	callstack 24
 25358                           
 25359                           ; BSR set to: 14
 25360                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 25361                           
 25362                           ; BSR set to: 14
 25363                           ;incstack = 0
 25364  00943E  C010  F2E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 25365  009442  C011  F2E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 25366                           
 25367                           ; BSR set to: 14
 25368  009446  0012               	return		;funcret
 25369  009448                     __end_of_EUSART1_SetErrorHandler:
 25370                           	callstack 0
 25371                           
 25372 ;; *************** function _ADCC_Initialize *****************
 25373 ;; Defined at:
 25374 ;;		line 62 in file "mcc_generated_files/adcc.c"
 25375 ;; Parameters:    Size  Location     Type
 25376 ;;		None
 25377 ;; Auto vars:     Size  Location     Type
 25378 ;;		None
 25379 ;; Return value:  Size  Location     Type
 25380 ;;                  1    wreg      void 
 25381 ;; Registers used:
 25382 ;;		wreg, status,2
 25383 ;; Tracked objects:
 25384 ;;		On entry : 3F/E
 25385 ;;		On exit  : 3F/F
 25386 ;;		Unchanged: 0/0
 25387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25392 ;;Total ram usage:        0 bytes
 25393 ;; Hardware stack levels used: 1
 25394 ;; Hardware stack levels required when called: 4
 25395 ;; This function calls:
 25396 ;;		Nothing
 25397 ;; This function is called by:
 25398 ;;		_SYSTEM_Initialize
 25399 ;; This function uses a non-reentrant model
 25400 ;;
 25401                           
 25402                           	psect	text109
 25403  0087EE                     __ptext109:
 25404                           	callstack 0
 25405  0087EE                     _ADCC_Initialize:
 25406                           	callstack 25
 25407                           
 25408                           ; BSR set to: 14
 25409                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 25410                           
 25411                           ; BSR set to: 14
 25412                           ;incstack = 0
 25413  0087EE  0E00               	movlw	0
 25414  0087F0  6E6A               	movwf	106,c	;volatile
 25415                           
 25416                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 25417  0087F2  0E00               	movlw	0
 25418  0087F4  6E6B               	movwf	107,c	;volatile
 25419                           
 25420                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 25421  0087F6  0E00               	movlw	0
 25422  0087F8  6E6C               	movwf	108,c	;volatile
 25423                           
 25424                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 25425  0087FA  0E00               	movlw	0
 25426  0087FC  6E6D               	movwf	109,c	;volatile
 25427                           
 25428                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 25429  0087FE  0E00               	movlw	0
 25430  008800  6E68               	movwf	104,c	;volatile
 25431                           
 25432                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 25433  008802  0E00               	movlw	0
 25434  008804  6E69               	movwf	105,c	;volatile
 25435                           
 25436                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 25437  008806  0E00               	movlw	0
 25438  008808  6E66               	movwf	102,c	;volatile
 25439                           
 25440                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 25441  00880A  0E00               	movlw	0
 25442  00880C  010F               	movlb	15	; () banked
 25443  00880E  6F5F               	movwf	95,b	;volatile
 25444                           
 25445                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 25446  008810  0E00               	movlw	0
 25447  008812  6F5D               	movwf	93,b	;volatile
 25448                           
 25449                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 25450  008814  0E00               	movlw	0
 25451  008816  6F5E               	movwf	94,b	;volatile
 25452                           
 25453                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 25454  008818  0E00               	movlw	0
 25455  00881A  6F59               	movwf	89,b	;volatile
 25456                           
 25457                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 25458  00881C  0E00               	movlw	0
 25459  00881E  6F5A               	movwf	90,b	;volatile
 25460                           
 25461                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 25462  008820  0E00               	movlw	0
 25463  008822  6F5B               	movwf	91,b	;volatile
 25464                           
 25465                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 25466  008824  0E00               	movlw	0
 25467  008826  6E65               	movwf	101,c	;volatile
 25468                           
 25469                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 25470  008828  0E00               	movlw	0
 25471  00882A  6F58               	movwf	88,b	;volatile
 25472                           
 25473                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 25474  00882C  0E00               	movlw	0
 25475  00882E  6F56               	movwf	86,b	;volatile
 25476                           
 25477                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 25478  008830  0E3F               	movlw	63
 25479  008832  6F57               	movwf	87,b	;volatile
 25480                           
 25481                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 25482  008834  0E80               	movlw	128
 25483  008836  6E60               	movwf	96,c	;volatile
 25484                           
 25485                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 25486  008838  0E00               	movlw	0
 25487  00883A  6F5C               	movwf	92,b	;volatile
 25488                           
 25489                           ; BSR set to: 15
 25490  00883C  0012               	return		;funcret
 25491  00883E                     __end_of_ADCC_Initialize:
 25492                           	callstack 0
 25493                           
 25494 ;; *************** function _EUSART1_is_rx_ready *****************
 25495 ;; Defined at:
 25496 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 25497 ;; Parameters:    Size  Location     Type
 25498 ;;		None
 25499 ;; Auto vars:     Size  Location     Type
 25500 ;;		None
 25501 ;; Return value:  Size  Location     Type
 25502 ;;                  1    wreg      _Bool 
 25503 ;; Registers used:
 25504 ;;		wreg, status,2
 25505 ;; Tracked objects:
 25506 ;;		On entry : 0/1
 25507 ;;		On exit  : 3F/0
 25508 ;;		Unchanged: 0/0
 25509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25514 ;;Total ram usage:        0 bytes
 25515 ;; Hardware stack levels used: 1
 25516 ;; Hardware stack levels required when called: 4
 25517 ;; This function calls:
 25518 ;;		Nothing
 25519 ;; This function is called by:
 25520 ;;		_main
 25521 ;; This function uses a non-reentrant model
 25522 ;;
 25523                           
 25524                           	psect	text110
 25525  00938C                     __ptext110:
 25526                           	callstack 0
 25527  00938C                     _EUSART1_is_rx_ready:
 25528                           	callstack 26
 25529                           
 25530                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 25531                           
 25532                           ; BSR set to: 15
 25533                           ;incstack = 0
 25534  00938C  0100               	movlb	0	; () banked
 25535  00938E  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 25536  009390  B4D8               	btfsc	status,2,c
 25537  009392  D002               	goto	u18330
 25538  009394  0E01               	movlw	1
 25539  009396  0012               	return	
 25540  009398                     u18330:
 25541  009398  0E00               	movlw	0
 25542                           
 25543                           ; BSR set to: 0
 25544  00939A  0012               	return		;funcret
 25545  00939C                     __end_of_EUSART1_is_rx_ready:
 25546                           	callstack 0
 25547                           
 25548 ;; *************** function _ControlMotor *****************
 25549 ;; Defined at:
 25550 ;;		line 703 in file "outputs_MC50.c"
 25551 ;; Parameters:    Size  Location     Type
 25552 ;;		None
 25553 ;; Auto vars:     Size  Location     Type
 25554 ;;  stateMotor      1   23[COMRAM] enum E10381
 25555 ;; Return value:  Size  Location     Type
 25556 ;;                  1    wreg      void 
 25557 ;; Registers used:
 25558 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25559 ;; Tracked objects:
 25560 ;;		On entry : 3E/1
 25561 ;;		On exit  : 3E/0
 25562 ;;		Unchanged: 0/0
 25563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25566 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25567 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25568 ;;Total ram usage:        7 bytes
 25569 ;; Hardware stack levels used: 1
 25570 ;; Hardware stack levels required when called: 5
 25571 ;; This function calls:
 25572 ;;		_VerifyElectricalBrake
 25573 ;; This function is called by:
 25574 ;;		_main
 25575 ;; This function uses a non-reentrant model
 25576 ;;
 25577                           
 25578                           	psect	text111
 25579  0049F6                     __ptext111:
 25580                           	callstack 0
 25581  0049F6                     _ControlMotor:
 25582                           	callstack 25
 25583                           
 25584                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 25585                           
 25586                           ; BSR set to: 0
 25587                           ;incstack = 0
 25588  0049F6  0101               	movlb	1	; () banked
 25589  0049F8  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 25590  0049FA  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 25591  0049FC  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 25592  0049FE  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 25593  004A00  A4D8               	btfss	status,2,c
 25594  004A02  D00D               	goto	l17054
 25595                           
 25596                           ; BSR set to: 1
 25597  004A04  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 25598  004A06  B4D8               	btfsc	status,2,c
 25599  004A08  D00A               	goto	l17054
 25600                           
 25601                           ; BSR set to: 1
 25602  004A0A  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 25603  004A0C  A4D8               	btfss	status,2,c
 25604  004A0E  D007               	goto	l17054
 25605                           
 25606                           ; BSR set to: 1
 25607  004A10  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 25608  004A12  A4D8               	btfss	status,2,c
 25609  004A14  D004               	goto	l17054
 25610                           
 25611                           ; BSR set to: 1
 25612                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 25613  004A16  0E00               	movlw	0
 25614  004A18  6F00               	movwf	_var_sys& (0+255),b	;volatile
 25615                           
 25616                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 25617  004A1A  0E02               	movlw	2
 25618  004A1C  D007               	goto	L101
 25619  004A1E                     l17054:
 25620                           
 25621                           ; BSR set to: 1
 25622  004A1E  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 25623  004A20  A4D8               	btfss	status,2,c
 25624  004A22  D005               	goto	l17060
 25625                           
 25626                           ; BSR set to: 1
 25627  004A24  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25628  004A26  A4D8               	btfss	status,2,c
 25629  004A28  D002               	goto	l17060
 25630                           
 25631                           ; BSR set to: 1
 25632                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 25633  004A2A  0E00               	movlw	0
 25634  004A2C                     L101:
 25635  004A2C  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 25636  004A2E                     l17060:
 25637                           
 25638                           ; BSR set to: 1
 25639                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 25640  004A2E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25641  004A30  EC50  F03F         	call	_VerifyElectricalBrake
 25642  004A34  6E18               	movwf	ControlMotor@stateMotor^0,c
 25643                           
 25644                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 25645  004A36  5018               	movf	ControlMotor@stateMotor^0,w,c
 25646  004A38  A4D8               	btfss	status,2,c
 25647  004A3A  D00A               	goto	l17070
 25648                           
 25649                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 25650  004A3C  0E01               	movlw	1
 25651  004A3E  0101               	movlb	1	; () banked
 25652  004A40  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25653                           
 25654                           ; BSR set to: 1
 25655                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 25656  004A42  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 25657  004A44  0012               	return	
 25658                           
 25659                           ; BSR set to: 1
 25660                           
 25661                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 25662  004A46  9287               	bcf	135,1,c	;volatile
 25663                           
 25664                           ; BSR set to: 1
 25665                           
 25666                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 25667  004A48  9087               	bcf	135,0,c	;volatile
 25668  004A4A                     l17068:
 25669                           
 25670                           ; BSR set to: 1
 25671                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 25672  004A4A  0E00               	movlw	0
 25673  004A4C  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25674  004A4E  0012               	return	
 25675  004A50                     l17070:
 25676  004A50  0100               	movlb	0	; () banked
 25677  004A52  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25678  004A54  A4D8               	btfss	status,2,c
 25679  004A56  D022               	goto	l17086
 25680                           
 25681                           ; BSR set to: 0
 25682  004A58  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 25683  004A5A  A4D8               	btfss	status,2,c
 25684  004A5C  D01F               	goto	l17086
 25685                           
 25686                           ; BSR set to: 0
 25687  004A5E  0101               	movlb	1	; () banked
 25688  004A60  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25689  004A62  A4D8               	btfss	status,2,c
 25690  004A64  D01B               	goto	l17086
 25691                           
 25692                           ; BSR set to: 1
 25693  004A66  5018               	movf	ControlMotor@stateMotor^0,w,c
 25694  004A68  A4D8               	btfss	status,2,c
 25695                           
 25696                           ; BSR set to: 1
 25697  004A6A  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25698  004A6C  D017               	goto	l17086
 25699  004A6E  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25700  004A70  E103               	bnz	u20090
 25701  004A72  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 25702  004A74  A0D8               	btfss	status,0,c
 25703  004A76  D012               	goto	l17086
 25704  004A78                     u20090:
 25705                           
 25706                           ; BSR set to: 1
 25707  004A78  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 25708  004A7A  D005               	goto	u20100
 25709  004A7C  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 25710  004A7E  E10E               	bnz	l17086
 25711  004A80  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 25712  004A82  B0D8               	btfsc	status,0,c
 25713  004A84  D00B               	goto	l17086
 25714  004A86                     u20100:
 25715                           
 25716                           ; BSR set to: 1
 25717                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 25718  004A86  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 25719  004A88  D006               	goto	u20110
 25720  004A8A  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 25721  004A8C  E103               	bnz	u20111
 25722  004A8E  0E12               	movlw	18
 25723  004A90  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 25724  004A92  B0D8               	btfsc	status,0,c
 25725  004A94                     u20111:
 25726  004A94  0012               	return	
 25727  004A96                     u20110:
 25728                           
 25729                           ; BSR set to: 1
 25730                           
 25731                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 25732  004A96  8287               	bsf	135,1,c	;volatile
 25733                           
 25734                           ; BSR set to: 1
 25735                           
 25736                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 25737  004A98  8087               	bsf	135,0,c	;volatile
 25738  004A9A  D7D7               	goto	l17068
 25739  004A9C                     l17086:
 25740  004A9C  0418               	decf	ControlMotor@stateMotor^0,w,c
 25741  004A9E  B4D8               	btfsc	status,2,c
 25742  004AA0  D004               	goto	u20130
 25743  004AA2  0E02               	movlw	2
 25744  004AA4  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25745  004AA6  A4D8               	btfss	status,2,c
 25746  004AA8  D063               	goto	l17116
 25747  004AAA                     u20130:
 25748  004AAA  0101               	movlb	1	; () banked
 25749  004AAC  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 25750  004AAE  A4D8               	btfss	status,2,c
 25751  004AB0  D05F               	goto	l17116
 25752                           
 25753                           ; BSR set to: 1
 25754                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 25755  004AB2  B291               	btfsc	145,1,c	;volatile
 25756  004AB4  D004               	goto	u20160
 25757                           
 25758                           ; BSR set to: 1
 25759  004AB6  0100               	movlb	0	; () banked
 25760  004AB8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25761  004ABA  B4D8               	btfsc	status,2,c
 25762  004ABC  D006               	goto	u20180
 25763  004ABE                     u20160:
 25764  004ABE  B091               	btfsc	145,0,c	;volatile
 25765  004AC0  D04F               	goto	l2348
 25766  004AC2  0100               	movlb	0	; () banked
 25767  004AC4  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25768  004AC6  A4D8               	btfss	status,2,c
 25769  004AC8  D04B               	goto	l2348
 25770  004ACA                     u20180:
 25771                           
 25772                           ; BSR set to: 0
 25773                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25774  004ACA  B091               	btfsc	145,0,c	;volatile
 25775  004ACC  D003               	goto	u20200
 25776                           
 25777                           ; BSR set to: 0
 25778  004ACE  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25779  004AD0  B4D8               	btfsc	status,2,c
 25780  004AD2  D005               	goto	u20220
 25781  004AD4                     u20200:
 25782                           
 25783                           ; BSR set to: 0
 25784  004AD4  B291               	btfsc	145,1,c	;volatile
 25785  004AD6  D03A               	goto	l17112
 25786                           
 25787                           ; BSR set to: 0
 25788  004AD8  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25789  004ADA  A4D8               	btfss	status,2,c
 25790  004ADC  D037               	goto	l17112
 25791  004ADE                     u20220:
 25792                           
 25793                           ; BSR set to: 0
 25794                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 25795  004ADE  0E00               	movlw	0
 25796  004AE0  0101               	movlb	1	; () banked
 25797  004AE2  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25798                           
 25799                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 25800  004AE4  0E00               	movlw	0
 25801  004AE6  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25802  004AE8  0EC8               	movlw	200
 25803  004AEA  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25804                           
 25805                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 25806  004AEC  0E00               	movlw	0
 25807  004AEE  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25808  004AF0  0E14               	movlw	20
 25809  004AF2  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25810                           
 25811                           ; BSR set to: 1
 25812                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 25813  004AF4  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 25814  004AF6  B4D8               	btfsc	status,2,c
 25815  004AF8  D003               	goto	u20240
 25816                           
 25817                           ; BSR set to: 1
 25818  004AFA  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 25819  004AFC  A4D8               	btfss	status,2,c
 25820  004AFE  D024               	goto	l17110
 25821  004B00                     u20240:
 25822                           
 25823                           ; BSR set to: 1
 25824                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 25825  004B00  0100               	movlb	0	; () banked
 25826  004B02  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 25827  004B04  0D0A               	mullw	10
 25828  004B06  CFF3 F012          	movff	prodl,??_ControlMotor
 25829  004B0A  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25830  004B0E  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25831  004B10  2612               	addwf	??_ControlMotor^0,f,c
 25832  004B12  0E00               	movlw	0
 25833  004B14  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25834  004B16  5012               	movf	??_ControlMotor^0,w,c
 25835  004B18  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 25836  004B1A  6E14               	movwf	(??_ControlMotor+2)^0,c
 25837  004B1C  5013               	movf	(??_ControlMotor+1)^0,w,c
 25838  004B1E  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 25839  004B20  6E15               	movwf	(??_ControlMotor+3)^0,c
 25840  004B22  0E00               	movlw	0
 25841  004B24  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 25842  004B26  6E16               	movwf	(??_ControlMotor+4)^0,c
 25843  004B28  0E00               	movlw	0
 25844  004B2A  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 25845  004B2C  6E17               	movwf	(??_ControlMotor+5)^0,c
 25846  004B2E  0E50               	movlw	80
 25847  004B30  2414               	addwf	(??_ControlMotor+2)^0,w,c
 25848  004B32  0101               	movlb	1	; () banked
 25849  004B34  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 25850  004B36  0E00               	movlw	0
 25851  004B38  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 25852  004B3A  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 25853  004B3C  0E00               	movlw	0
 25854  004B3E  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 25855  004B40  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 25856  004B42  0E00               	movlw	0
 25857  004B44  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 25858  004B46  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 25859  004B48                     l17110:
 25860                           
 25861                           ; BSR set to: 1
 25862                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 25863  004B48  0E02               	movlw	2
 25864  004B4A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 25865  004B4C                     l17112:
 25866                           
 25867                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 25868  004B4C  0100               	movlb	0	; () banked
 25869  004B4E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25870  004B50  A4D8               	btfss	status,2,c
 25871  004B52  D002               	goto	l2365
 25872                           
 25873                           ; BSR set to: 0
 25874  004B54  8087               	bsf	135,0,c	;volatile
 25875  004B56  D001               	goto	l17114
 25876  004B58                     l2365:
 25877                           
 25878                           ; BSR set to: 0
 25879  004B58  8287               	bsf	135,1,c	;volatile
 25880  004B5A                     l17114:
 25881                           
 25882                           ; BSR set to: 0
 25883                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 25884  004B5A  0E01               	movlw	1
 25885  004B5C  0101               	movlb	1	; () banked
 25886  004B5E  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25887  004B60                     l2348:
 25888                           
 25889                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 25890  004B60  0100               	movlb	0	; () banked
 25891  004B62  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25892  004B64  A4D8               	btfss	status,2,c
 25893  004B66  D002               	goto	l2371
 25894                           
 25895                           ; BSR set to: 0
 25896  004B68  9287               	bcf	135,1,c	;volatile
 25897  004B6A  0012               	return	
 25898  004B6C                     l2371:
 25899                           
 25900                           ; BSR set to: 0
 25901  004B6C  9087               	bcf	135,0,c	;volatile
 25902  004B6E  0012               	return	
 25903  004B70                     l17116:
 25904  004B70  0E03               	movlw	3
 25905  004B72  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 25906  004B74  A4D8               	btfss	status,2,c
 25907  004B76  0012               	return	
 25908  004B78  0101               	movlb	1	; () banked
 25909  004B7A  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 25910  004B7C  A4D8               	btfss	status,2,c
 25911  004B7E  0012               	return	
 25912                           
 25913                           ; BSR set to: 1
 25914                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 25915  004B80  B091               	btfsc	145,0,c	;volatile
 25916  004B82  D004               	goto	u20300
 25917                           
 25918                           ; BSR set to: 1
 25919  004B84  0100               	movlb	0	; () banked
 25920  004B86  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25921  004B88  B4D8               	btfsc	status,2,c
 25922  004B8A  D006               	goto	u20320
 25923  004B8C                     u20300:
 25924  004B8C  B291               	btfsc	145,1,c	;volatile
 25925  004B8E  D050               	goto	l2375
 25926  004B90  0100               	movlb	0	; () banked
 25927  004B92  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25928  004B94  A4D8               	btfss	status,2,c
 25929  004B96  D04C               	goto	l2375
 25930  004B98                     u20320:
 25931                           
 25932                           ; BSR set to: 0
 25933                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 25934  004B98  B291               	btfsc	145,1,c	;volatile
 25935  004B9A  D003               	goto	u20340
 25936                           
 25937                           ; BSR set to: 0
 25938  004B9C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25939  004B9E  B4D8               	btfsc	status,2,c
 25940  004BA0  D005               	goto	u20360
 25941  004BA2                     u20340:
 25942                           
 25943                           ; BSR set to: 0
 25944  004BA2  B091               	btfsc	145,0,c	;volatile
 25945  004BA4  D03B               	goto	l17140
 25946                           
 25947                           ; BSR set to: 0
 25948  004BA6  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 25949  004BA8  A4D8               	btfss	status,2,c
 25950  004BAA  D038               	goto	l17140
 25951  004BAC                     u20360:
 25952                           
 25953                           ; BSR set to: 0
 25954                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 25955  004BAC  0E00               	movlw	0
 25956  004BAE  0101               	movlb	1	; () banked
 25957  004BB0  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25958                           
 25959                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 25960  004BB2  0E00               	movlw	0
 25961  004BB4  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 25962  004BB6  0EC8               	movlw	200
 25963  004BB8  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 25964                           
 25965                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 25966  004BBA  0E00               	movlw	0
 25967  004BBC  6FB5               	movwf	(_ts_system+27)& (0+255),b	;volatile
 25968  004BBE  0E14               	movlw	20
 25969  004BC0  6FB4               	movwf	(_ts_system+26)& (0+255),b	;volatile
 25970                           
 25971                           ; BSR set to: 1
 25972                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 25973  004BC2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 25974  004BC4  B4D8               	btfsc	status,2,c
 25975  004BC6  D004               	goto	u20380
 25976                           
 25977                           ; BSR set to: 1
 25978  004BC8  0E04               	movlw	4
 25979  004BCA  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 25980  004BCC  A4D8               	btfss	status,2,c
 25981  004BCE  D024               	goto	l17138
 25982  004BD0                     u20380:
 25983                           
 25984                           ; BSR set to: 1
 25985                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 25986  004BD0  0100               	movlb	0	; () banked
 25987  004BD2  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 25988  004BD4  0D0A               	mullw	10
 25989  004BD6  CFF3 F012          	movff	prodl,??_ControlMotor
 25990  004BDA  CFF4 F013          	movff	prodh,??_ControlMotor+1
 25991  004BDE  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 25992  004BE0  2612               	addwf	??_ControlMotor^0,f,c
 25993  004BE2  0E00               	movlw	0
 25994  004BE4  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 25995  004BE6  5012               	movf	??_ControlMotor^0,w,c
 25996  004BE8  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 25997  004BEA  6E14               	movwf	(??_ControlMotor+2)^0,c
 25998  004BEC  5013               	movf	(??_ControlMotor+1)^0,w,c
 25999  004BEE  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 26000  004BF0  6E15               	movwf	(??_ControlMotor+3)^0,c
 26001  004BF2  0E00               	movlw	0
 26002  004BF4  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 26003  004BF6  6E16               	movwf	(??_ControlMotor+4)^0,c
 26004  004BF8  0E00               	movlw	0
 26005  004BFA  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 26006  004BFC  6E17               	movwf	(??_ControlMotor+5)^0,c
 26007  004BFE  0E50               	movlw	80
 26008  004C00  2414               	addwf	(??_ControlMotor+2)^0,w,c
 26009  004C02  0101               	movlb	1	; () banked
 26010  004C04  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 26011  004C06  0E00               	movlw	0
 26012  004C08  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 26013  004C0A  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 26014  004C0C  0E00               	movlw	0
 26015  004C0E  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 26016  004C10  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 26017  004C12  0E00               	movlw	0
 26018  004C14  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 26019  004C16  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 26020  004C18                     l17138:
 26021                           
 26022                           ; BSR set to: 1
 26023                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 26024  004C18  0E03               	movlw	3
 26025  004C1A  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 26026  004C1C                     l17140:
 26027                           
 26028                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 26029  004C1C  0100               	movlb	0	; () banked
 26030  004C1E  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26031  004C20  A4D8               	btfss	status,2,c
 26032  004C22  D002               	goto	l2392
 26033                           
 26034                           ; BSR set to: 0
 26035  004C24  8287               	bsf	135,1,c	;volatile
 26036  004C26  D001               	goto	l17142
 26037  004C28                     l2392:
 26038                           
 26039                           ; BSR set to: 0
 26040  004C28  8087               	bsf	135,0,c	;volatile
 26041  004C2A                     l17142:
 26042                           
 26043                           ; BSR set to: 0
 26044                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 26045  004C2A  0E02               	movlw	2
 26046  004C2C  0101               	movlb	1	; () banked
 26047  004C2E  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26048  004C30                     l2375:
 26049                           
 26050                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 26051  004C30  0100               	movlb	0	; () banked
 26052  004C32  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26053  004C34  A4D8               	btfss	status,2,c
 26054  004C36  D002               	goto	l2398
 26055                           
 26056                           ; BSR set to: 0
 26057  004C38  9087               	bcf	135,0,c	;volatile
 26058  004C3A  0012               	return	
 26059  004C3C                     l2398:
 26060                           
 26061                           ; BSR set to: 0
 26062  004C3C  9287               	bcf	135,1,c	;volatile
 26063  004C3E  0012               	return		;funcret
 26064  004C40                     __end_of_ControlMotor:
 26065                           	callstack 0
 26066                           
 26067 ;; *************** function _VerifyElectricalBrake *****************
 26068 ;; Defined at:
 26069 ;;		line 658 in file "outputs_MC50.c"
 26070 ;; Parameters:    Size  Location     Type
 26071 ;;  actualState     1    wreg     enum E10381
 26072 ;; Auto vars:     Size  Location     Type
 26073 ;;  actualState     1   16[COMRAM] enum E10381
 26074 ;;  tempState       1   15[COMRAM] enum E10381
 26075 ;; Return value:  Size  Location     Type
 26076 ;;                  1    wreg      enum E10381
 26077 ;; Registers used:
 26078 ;;		wreg, status,2, status,0
 26079 ;; Tracked objects:
 26080 ;;		On entry : 3F/1
 26081 ;;		On exit  : 3E/0
 26082 ;;		Unchanged: 0/0
 26083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26088 ;;Total ram usage:        2 bytes
 26089 ;; Hardware stack levels used: 1
 26090 ;; Hardware stack levels required when called: 4
 26091 ;; This function calls:
 26092 ;;		Nothing
 26093 ;; This function is called by:
 26094 ;;		_ControlMotor
 26095 ;; This function uses a non-reentrant model
 26096 ;;
 26097                           
 26098                           	psect	text112
 26099  007EA0                     __ptext112:
 26100                           	callstack 0
 26101  007EA0                     _VerifyElectricalBrake:
 26102                           	callstack 25
 26103                           
 26104                           ;incstack = 0
 26105                           ;VerifyElectricalBrake@actualState stored from wreg
 26106  007EA0  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 26107                           
 26108                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 26109  007EA2  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 26110                           
 26111                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 26112  007EA6  0100               	movlb	0	; () banked
 26113  007EA8  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 26114  007EAA  A4D8               	btfss	status,2,c
 26115  007EAC  D02E               	goto	l2318
 26116                           
 26117                           ; BSR set to: 0
 26118  007EAE  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 26119  007EB0  A4D8               	btfss	status,2,c
 26120  007EB2  D02B               	goto	l2318
 26121                           
 26122                           ; BSR set to: 0
 26123  007EB4  0101               	movlb	1	; () banked
 26124  007EB6  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 26125  007EB8  D005               	goto	u15400
 26126  007EBA  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 26127  007EBC  E126               	bnz	l2318
 26128  007EBE  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 26129  007EC0  B0D8               	btfsc	status,0,c
 26130  007EC2  D023               	goto	l2318
 26131  007EC4                     u15400:
 26132                           
 26133                           ; BSR set to: 1
 26134                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 26135  007EC4  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 26136  007EC6  0100               	movlb	0	; () banked
 26137  007EC8  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 26138  007ECA  B4D8               	btfsc	status,2,c
 26139  007ECC  D00B               	goto	l14820
 26140                           
 26141                           ; BSR set to: 0
 26142  007ECE  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 26143  007ED0  A4D8               	btfss	status,2,c
 26144  007ED2  D008               	goto	l14820
 26145                           
 26146                           ; BSR set to: 0
 26147                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 26148  007ED4  0E01               	movlw	1
 26149  007ED6  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 26150                           
 26151                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 26152  007ED8  0E00               	movlw	0
 26153  007EDA  0101               	movlb	1	; () banked
 26154  007EDC  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 26155  007EDE  0E16               	movlw	22
 26156  007EE0  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 26157                           
 26158                           ;outputs_MC50.c: 670:         }
 26159  007EE2  D018               	goto	l2323
 26160  007EE4                     l14820:
 26161                           
 26162                           ; BSR set to: 0
 26163  007EE4  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 26164  007EE6  A4D8               	btfss	status,2,c
 26165  007EE8  D00B               	goto	l14826
 26166                           
 26167                           ; BSR set to: 0
 26168  007EEA  0101               	movlb	1	; () banked
 26169  007EEC  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26170  007EEE  D008               	goto	l14826
 26171  007EF0  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26172  007EF2  E103               	bnz	u15440
 26173  007EF4  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 26174  007EF6  A0D8               	btfss	status,0,c
 26175  007EF8  D003               	goto	l14826
 26176  007EFA                     u15440:
 26177                           
 26178                           ; BSR set to: 1
 26179                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 26180  007EFA  0E01               	movlw	1
 26181  007EFC  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 26182                           
 26183                           ;outputs_MC50.c: 686:         }
 26184  007EFE  D00A               	goto	l2323
 26185  007F00                     l14826:
 26186                           
 26187                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 26188  007F00  0E00               	movlw	0
 26189  007F02  0100               	movlb	0	; () banked
 26190  007F04  6F78               	movwf	_brakeElectric_st& (0+255),b
 26191                           
 26192                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 26193  007F06  0E00               	movlw	0
 26194  007F08  D004               	goto	L102
 26195  007F0A                     l2318:
 26196                           
 26197                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 26198  007F0A  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 26199                           
 26200                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 26201  007F0E  0E00               	movlw	0
 26202  007F10  0100               	movlb	0	; () banked
 26203  007F12                     L102:
 26204  007F12  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 26205  007F14                     l2323:
 26206                           
 26207                           ;outputs_MC50.c: 700:     return tempState;
 26208  007F14  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 26209  007F16  0012               	return		;funcret
 26210  007F18                     __end_of_VerifyElectricalBrake:
 26211                           	callstack 0
 26212                           
 26213 ;; *************** function _ControlLights *****************
 26214 ;; Defined at:
 26215 ;;		line 816 in file "outputs_MC50.c"
 26216 ;; Parameters:    Size  Location     Type
 26217 ;;		None
 26218 ;; Auto vars:     Size  Location     Type
 26219 ;;		None
 26220 ;; Return value:  Size  Location     Type
 26221 ;;                  1    wreg      void 
 26222 ;; Registers used:
 26223 ;;		wreg, status,2, status,0, cstack
 26224 ;; Tracked objects:
 26225 ;;		On entry : 3E/1
 26226 ;;		On exit  : 3E/0
 26227 ;;		Unchanged: 0/0
 26228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26233 ;;Total ram usage:        0 bytes
 26234 ;; Hardware stack levels used: 1
 26235 ;; Hardware stack levels required when called: 6
 26236 ;; This function calls:
 26237 ;;		_setFlashLigth_ON
 26238 ;;		_setRGB_ON
 26239 ;; This function is called by:
 26240 ;;		_main
 26241 ;; This function uses a non-reentrant model
 26242 ;;
 26243                           
 26244                           	psect	text113
 26245  0039DE                     __ptext113:
 26246                           	callstack 0
 26247  0039DE                     _ControlLights:
 26248                           	callstack 24
 26249                           
 26250                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 26251                           
 26252                           ;incstack = 0
 26253  0039DE  0101               	movlb	1	; () banked
 26254  0039E0  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 26255  0039E2  A4D8               	btfss	status,2,c
 26256  0039E4  D007               	goto	l17148
 26257                           
 26258                           ; BSR set to: 1
 26259                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 26260  0039E6  0E00               	movlw	0
 26261  0039E8  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26262  0039EA  0E14               	movlw	20
 26263  0039EC  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26264  0039EE  ECE5  F045         	call	_setFlashLigth_ON	;wreg free
 26265                           
 26266                           ;outputs_MC50.c: 821:     }
 26267  0039F2  D010               	goto	l17154
 26268  0039F4                     l17148:
 26269                           
 26270                           ; BSR set to: 1
 26271  0039F4  51E2               	movf	_controlGate_stateMachine& (0+255),w,b
 26272  0039F6  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26273  0039F8  A4D8               	btfss	status,2,c
 26274  0039FA  D00C               	goto	l17154
 26275                           
 26276                           ; BSR set to: 1
 26277                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 26278  0039FC  0E00               	movlw	0
 26279  0039FE  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26280                           
 26281                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 26282  003A00  0E00               	movlw	0
 26283  003A02  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26284                           
 26285                           ; BSR set to: 1
 26286                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 26287  003A04  0E03               	movlw	3
 26288  003A06  0100               	movlb	0	; () banked
 26289  003A08  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26290  003A0A  B4D8               	btfsc	status,2,c
 26291  003A0C  D002               	goto	l2410
 26292                           
 26293                           ; BSR set to: 0
 26294                           
 26295                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 26296  003A0E  9487               	bcf	135,2,c	;volatile
 26297  003A10  D001               	goto	l17154
 26298  003A12                     l2410:
 26299                           
 26300                           ; BSR set to: 0
 26301  003A12  8487               	bsf	135,2,c	;volatile
 26302  003A14                     l17154:
 26303                           
 26304                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 26305  003A14  0101               	movlb	1	; () banked
 26306  003A16  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 26307  003A18  B4D8               	btfsc	status,2,c
 26308  003A1A  D005               	goto	u20450
 26309                           
 26310                           ; BSR set to: 1
 26311  003A1C  0E04               	movlw	4
 26312  003A1E  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26313  003A20  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26314  003A22  A4D8               	btfss	status,2,c
 26315  003A24  D01C               	goto	l17166
 26316  003A26                     u20450:
 26317                           
 26318                           ; BSR set to: 1
 26319  003A26  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 26320  003A28  D01A               	goto	l17166
 26321  003A2A  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 26322  003A2C  E103               	bnz	u20460
 26323  003A2E  05AC               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 26324  003A30  A0D8               	btfss	status,0,c
 26325  003A32  D015               	goto	l17166
 26326  003A34                     u20460:
 26327                           
 26328                           ; BSR set to: 1
 26329  003A34  BFAD               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 26330  003A36  D006               	goto	u20470
 26331  003A38  51AD               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 26332  003A3A  E111               	bnz	l17166
 26333  003A3C  0E3D               	movlw	61
 26334  003A3E  5DAC               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 26335  003A40  B0D8               	btfsc	status,0,c
 26336  003A42  D00D               	goto	l17166
 26337  003A44                     u20470:
 26338                           
 26339                           ; BSR set to: 1
 26340  003A44  0E02               	movlw	2
 26341  003A46  0100               	movlb	0	; () banked
 26342  003A48  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26343  003A4A  A4D8               	btfss	status,2,c
 26344  003A4C  D008               	goto	l17166
 26345                           
 26346                           ; BSR set to: 0
 26347                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 26348  003A4E  0E00               	movlw	0
 26349  003A50  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26350  003A52  0E04               	movlw	4
 26351  003A54  6E11               	movwf	setRGB_ON@Freq^0,c
 26352  003A56  0E01               	movlw	1
 26353  003A58  ECEF  F03B         	call	_setRGB_ON
 26354                           
 26355                           ;outputs_MC50.c: 838:     }
 26356  003A5C  0012               	return	
 26357  003A5E                     l17166:
 26358  003A5E  0E03               	movlw	3
 26359  003A60  0101               	movlb	1	; () banked
 26360  003A62  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26361  003A64  A4D8               	btfss	status,2,c
 26362  003A66  D04F               	goto	l17196
 26363                           
 26364                           ; BSR set to: 1
 26365                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 26366  003A68  0E00               	movlw	0
 26367  003A6A  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26368                           
 26369                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 26370  003A6C  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 26371  003A6E  A4D8               	btfss	status,2,c
 26372  003A70  D013               	goto	l17178
 26373                           
 26374                           ; BSR set to: 1
 26375  003A72  0E03               	movlw	3
 26376  003A74  0100               	movlb	0	; () banked
 26377  003A76  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26378  003A78  A4D8               	btfss	status,2,c
 26379  003A7A  D00E               	goto	l17178
 26380                           
 26381                           ; BSR set to: 0
 26382                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26383  003A7C  0E00               	movlw	0
 26384  003A7E  0101               	movlb	1	; () banked
 26385  003A80  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26386  003A82  0E28               	movlw	40
 26387  003A84  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26388                           
 26389                           ; BSR set to: 1
 26390                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 26391  003A86  0E00               	movlw	0
 26392  003A88  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26393  003A8A  0E00               	movlw	0
 26394  003A8C  6E11               	movwf	setRGB_ON@Freq^0,c
 26395  003A8E  0E04               	movlw	4
 26396  003A90  ECEF  F03B         	call	_setRGB_ON
 26397                           
 26398                           ; BSR set to: 1
 26399                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 26400  003A94  0E01               	movlw	1
 26401  003A96  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26402  003A98                     l17178:
 26403                           
 26404                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 26405  003A98  0101               	movlb	1	; () banked
 26406  003A9A  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26407  003A9C  D005               	goto	u20520
 26408  003A9E  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26409  003AA0  E105               	bnz	l17182
 26410  003AA2  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26411  003AA4  B0D8               	btfsc	status,0,c
 26412  003AA6  D002               	goto	l17182
 26413  003AA8                     u20520:
 26414                           
 26415                           ; BSR set to: 1
 26416  003AA8  0100               	movlb	0	; () banked
 26417  003AAA  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26418  003AAC                     l17182:
 26419                           
 26420                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 26421  003AAC  0100               	movlb	0	; () banked
 26422  003AAE  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26423  003AB0  A4D8               	btfss	status,2,c
 26424  003AB2  D010               	goto	l17188
 26425                           
 26426                           ; BSR set to: 0
 26427  003AB4  0101               	movlb	1	; () banked
 26428  003AB6  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26429  003AB8  D005               	goto	u20540
 26430  003ABA  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26431  003ABC  E10B               	bnz	l17188
 26432  003ABE  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26433  003AC0  B0D8               	btfsc	status,0,c
 26434  003AC2  D008               	goto	l17188
 26435  003AC4                     u20540:
 26436                           
 26437                           ; BSR set to: 1
 26438                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 26439  003AC4  0E00               	movlw	0
 26440  003AC6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26441  003AC8  0E05               	movlw	5
 26442  003ACA  6E11               	movwf	setRGB_ON@Freq^0,c
 26443  003ACC  0E03               	movlw	3
 26444  003ACE  ECEF  F03B         	call	_setRGB_ON
 26445                           
 26446                           ;outputs_MC50.c: 862:         }
 26447  003AD2  D007               	goto	l17190
 26448  003AD4                     l17188:
 26449                           
 26450                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 26451  003AD4  0E00               	movlw	0
 26452  003AD6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26453  003AD8  0E00               	movlw	0
 26454  003ADA  6E11               	movwf	setRGB_ON@Freq^0,c
 26455  003ADC  0E03               	movlw	3
 26456  003ADE  ECEF  F03B         	call	_setRGB_ON
 26457  003AE2                     l17190:
 26458                           
 26459                           ; BSR set to: 1
 26460                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 26461  003AE2  0100               	movlb	0	; () banked
 26462  003AE4  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26463  003AE6  A4D8               	btfss	status,2,c
 26464  003AE8  D007               	goto	l17194
 26465                           
 26466                           ; BSR set to: 0
 26467                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 26468  003AEA  0E00               	movlw	0
 26469  003AEC  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26470  003AEE  0E0A               	movlw	10
 26471  003AF0  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26472  003AF2  ECE5  F045         	call	_setFlashLigth_ON	;wreg free
 26473                           
 26474                           ;outputs_MC50.c: 873:         }
 26475  003AF6  0012               	return	
 26476  003AF8                     l17194:
 26477                           
 26478                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 26479  003AF8  0E00               	movlw	0
 26480  003AFA  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26481  003AFC  0E00               	movlw	0
 26482  003AFE  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26483  003B00  ECE5  F045         	call	_setFlashLigth_ON	;wreg free
 26484  003B04  0012               	return	
 26485  003B06                     l17196:
 26486                           
 26487                           ; BSR set to: 1
 26488  003B06  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26489  003B08  A4D8               	btfss	status,2,c
 26490  003B0A  D042               	goto	l17224
 26491                           
 26492                           ; BSR set to: 1
 26493  003B0C  05E2               	decf	_controlGate_stateMachine& (0+255),w,b
 26494  003B0E  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26495  003B10  A4D8               	btfss	status,2,c
 26496  003B12  D03E               	goto	l17224
 26497                           
 26498                           ; BSR set to: 1
 26499                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 26500  003B14  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 26501  003B16  A4D8               	btfss	status,2,c
 26502                           
 26503                           ; BSR set to: 1
 26504                           
 26505                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 26506  003B18  8E83               	bsf	131,7,c	;volatile
 26507                           
 26508                           ; BSR set to: 1
 26509                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 26510  003B1A  0100               	movlb	0	; () banked
 26511  003B1C  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26512  003B1E  A4D8               	btfss	status,2,c
 26513  003B20  D017               	goto	l17212
 26514                           
 26515                           ; BSR set to: 0
 26516                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 26517  003B22  0E02               	movlw	2
 26518  003B24  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26519  003B26  B4D8               	btfsc	status,2,c
 26520  003B28  D003               	goto	u20610
 26521                           
 26522                           ; BSR set to: 0
 26523  003B2A  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26524  003B2C  A4D8               	btfss	status,2,c
 26525  003B2E  D008               	goto	l17210
 26526  003B30                     u20610:
 26527                           
 26528                           ; BSR set to: 0
 26529  003B30  0E00               	movlw	0
 26530  003B32  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26531  003B34  0E00               	movlw	0
 26532  003B36  6E11               	movwf	setRGB_ON@Freq^0,c
 26533  003B38  0E04               	movlw	4
 26534  003B3A  ECEF  F03B         	call	_setRGB_ON
 26535  003B3E  D013               	goto	l17216
 26536  003B40                     l17210:
 26537                           
 26538                           ; BSR set to: 0
 26539  003B40  0E00               	movlw	0
 26540  003B42  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26541  003B44  0E28               	movlw	40
 26542  003B46  6E11               	movwf	setRGB_ON@Freq^0,c
 26543  003B48  0E04               	movlw	4
 26544  003B4A  ECEF  F03B         	call	_setRGB_ON
 26545  003B4E  D00B               	goto	l17216
 26546  003B50                     l17212:
 26547                           
 26548                           ; BSR set to: 0
 26549  003B50  0E03               	movlw	3
 26550  003B52  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26551  003B54  B4D8               	btfsc	status,2,c
 26552  003B56  D007               	goto	l17216
 26553                           
 26554                           ; BSR set to: 0
 26555  003B58  0E00               	movlw	0
 26556  003B5A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26557  003B5C  0E00               	movlw	0
 26558  003B5E  6E11               	movwf	setRGB_ON@Freq^0,c
 26559  003B60  0E04               	movlw	4
 26560  003B62  ECEF  F03B         	call	_setRGB_ON
 26561  003B66                     l17216:
 26562                           
 26563                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 26564  003B66  0E03               	movlw	3
 26565  003B68  0100               	movlb	0	; () banked
 26566  003B6A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26567  003B6C  B4D8               	btfsc	status,2,c
 26568  003B6E  0012               	return	
 26569                           
 26570                           ; BSR set to: 0
 26571                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 26572  003B70  0101               	movlb	1	; () banked
 26573  003B72  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 26574  003B74  D007               	goto	l2438
 26575  003B76  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 26576  003B78  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 26577  003B7A  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 26578  003B7C  E1BD               	bnz	l17194
 26579  003B7E  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 26580  003B80  B0D8               	btfsc	status,0,c
 26581  003B82  D7BA               	goto	l17194
 26582  003B84                     l2438:
 26583                           
 26584                           ; BSR set to: 1
 26585  003B84  9487               	bcf	135,2,c	;volatile
 26586                           
 26587                           ; BSR set to: 1
 26588                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 26589  003B86  0E00               	movlw	0
 26590  003B88  6FB9               	movwf	(_ts_system+31)& (0+255),b	;volatile
 26591  003B8A  0E00               	movlw	0
 26592  003B8C  6FB8               	movwf	(_ts_system+30)& (0+255),b	;volatile
 26593                           
 26594                           ; BSR set to: 0
 26595                           ;outputs_MC50.c: 907:     }
 26596                           
 26597                           ;outputs_MC50.c: 906:         }
 26598  003B8E  0012               	return	
 26599  003B90                     l17224:
 26600                           
 26601                           ; BSR set to: 1
 26602  003B90  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26603  003B92  A4D8               	btfss	status,2,c
 26604  003B94  D048               	goto	l17258
 26605                           
 26606                           ; BSR set to: 1
 26607                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 26608  003B96  0100               	movlb	0	; () banked
 26609  003B98  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26610  003B9A  A4D8               	btfss	status,2,c
 26611  003B9C  D004               	goto	u20670
 26612                           
 26613                           ; BSR set to: 0
 26614  003B9E  0101               	movlb	1	; () banked
 26615  003BA0  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26616  003BA2  B4D8               	btfsc	status,2,c
 26617  003BA4  D00C               	goto	u20700
 26618  003BA6                     u20670:
 26619  003BA6  0100               	movlb	0	; () banked
 26620  003BA8  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26621  003BAA  A4D8               	btfss	status,2,c
 26622  003BAC  D017               	goto	l17242
 26623                           
 26624                           ; BSR set to: 0
 26625  003BAE  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26626  003BB0  B4D8               	btfsc	status,2,c
 26627  003BB2  D014               	goto	l17242
 26628                           
 26629                           ; BSR set to: 0
 26630  003BB4  0E02               	movlw	2
 26631  003BB6  0101               	movlb	1	; () banked
 26632  003BB8  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26633  003BBA  A4D8               	btfss	status,2,c
 26634  003BBC  D00F               	goto	l17242
 26635  003BBE                     u20700:
 26636                           
 26637                           ; BSR set to: 1
 26638                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26639  003BBE  0E00               	movlw	0
 26640  003BC0  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26641                           
 26642                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 26643  003BC2  0E00               	movlw	0
 26644  003BC4  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26645                           
 26646                           ; BSR set to: 1
 26647                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 26648  003BC6  0E03               	movlw	3
 26649  003BC8  0100               	movlb	0	; () banked
 26650  003BCA  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26651  003BCC  B4D8               	btfsc	status,2,c
 26652  003BCE  0012               	return	
 26653                           
 26654                           ; BSR set to: 0
 26655  003BD0  0E02               	movlw	2
 26656  003BD2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26657  003BD4  B4D8               	btfsc	status,2,c
 26658  003BD6  0012               	return	
 26659                           
 26660                           ; BSR set to: 0
 26661                           
 26662                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 26663  003BD8  9487               	bcf	135,2,c	;volatile
 26664  003BDA  0012               	return	
 26665  003BDC                     l17242:
 26666                           
 26667                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26668  003BDC  0100               	movlb	0	; () banked
 26669  003BDE  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26670  003BE0  A4D8               	btfss	status,2,c
 26671  003BE2  D008               	goto	l17246
 26672                           
 26673                           ; BSR set to: 0
 26674                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 26675  003BE4  0E00               	movlw	0
 26676  003BE6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26677  003BE8  0E14               	movlw	20
 26678  003BEA  6E11               	movwf	setRGB_ON@Freq^0,c
 26679  003BEC  0E01               	movlw	1
 26680  003BEE  ECEF  F03B         	call	_setRGB_ON
 26681                           
 26682                           ;outputs_MC50.c: 932:             }
 26683  003BF2  D007               	goto	l17248
 26684  003BF4                     l17246:
 26685                           
 26686                           ; BSR set to: 0
 26687                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 26688  003BF4  0E00               	movlw	0
 26689  003BF6  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26690  003BF8  0E00               	movlw	0
 26691  003BFA  6E11               	movwf	setRGB_ON@Freq^0,c
 26692  003BFC  0E01               	movlw	1
 26693  003BFE  ECEF  F03B         	call	_setRGB_ON
 26694  003C02                     l17248:
 26695                           
 26696                           ; BSR set to: 1
 26697                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 26698  003C02  0100               	movlb	0	; () banked
 26699  003C04  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26700  003C06  B4D8               	btfsc	status,2,c
 26701  003C08  D004               	goto	u20750
 26702                           
 26703                           ; BSR set to: 0
 26704  003C0A  0E03               	movlw	3
 26705  003C0C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26706  003C0E  A4D8               	btfss	status,2,c
 26707  003C10  D002               	goto	l17252
 26708  003C12                     u20750:
 26709                           
 26710                           ; BSR set to: 0
 26711                           
 26712                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 26713  003C12  9487               	bcf	135,2,c	;volatile
 26714  003C14  0012               	return	
 26715  003C16                     l17252:
 26716                           
 26717                           ; BSR set to: 0
 26718  003C16  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26719  003C18  B4D8               	btfsc	status,2,c
 26720  003C1A  D76E               	goto	l17194
 26721                           
 26722                           ; BSR set to: 0
 26723  003C1C  0E02               	movlw	2
 26724  003C1E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26725  003C20  A4D8               	btfss	status,2,c
 26726  003C22  0012               	return	
 26727  003C24  D769               	goto	l17194
 26728  003C26                     l17258:
 26729                           
 26730                           ; BSR set to: 1
 26731                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 26732  003C26  0E00               	movlw	0
 26733  003C28  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26734                           
 26735                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 26736  003C2A  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 26737  003C2C  A4D8               	btfss	status,2,c
 26738  003C2E  D00C               	goto	l17264
 26739                           
 26740                           ; BSR set to: 1
 26741  003C30  0E03               	movlw	3
 26742  003C32  0100               	movlb	0	; () banked
 26743  003C34  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26744  003C36  A4D8               	btfss	status,2,c
 26745  003C38  D007               	goto	l17264
 26746                           
 26747                           ; BSR set to: 0
 26748                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26749  003C3A  0E00               	movlw	0
 26750  003C3C  0101               	movlb	1	; () banked
 26751  003C3E  6FDD               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26752  003C40  0E28               	movlw	40
 26753  003C42  6FDC               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26754                           
 26755                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 26756  003C44  0E01               	movlw	1
 26757  003C46  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26758  003C48                     l17264:
 26759                           
 26760                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 26761  003C48  0101               	movlb	1	; () banked
 26762  003C4A  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26763  003C4C  D005               	goto	u20800
 26764  003C4E  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26765  003C50  E105               	bnz	l17268
 26766  003C52  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26767  003C54  B0D8               	btfsc	status,0,c
 26768  003C56  D002               	goto	l17268
 26769  003C58                     u20800:
 26770                           
 26771                           ; BSR set to: 1
 26772  003C58  0100               	movlb	0	; () banked
 26773  003C5A  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26774  003C5C                     l17268:
 26775                           
 26776                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 26777  003C5C  0E04               	movlw	4
 26778  003C5E  0101               	movlb	1	; () banked
 26779  003C60  19E2               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26780  003C62  11E3               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26781  003C64  A4D8               	btfss	status,2,c
 26782  003C66  D01B               	goto	l17280
 26783                           
 26784                           ; BSR set to: 1
 26785                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26786  003C68  0E00               	movlw	0
 26787  003C6A  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26788                           
 26789                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 26790  003C6C  0E00               	movlw	0
 26791  003C6E  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26792                           
 26793                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 26794  003C70  0100               	movlb	0	; () banked
 26795  003C72  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26796  003C74  A4D8               	btfss	status,2,c
 26797  003C76  D00A               	goto	u20850
 26798                           
 26799                           ; BSR set to: 0
 26800  003C78  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26801  003C7A  B4D8               	btfsc	status,2,c
 26802  003C7C  D003               	goto	u20840
 26803                           
 26804                           ; BSR set to: 0
 26805  003C7E  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26806  003C80  A4D8               	btfss	status,2,c
 26807  003C82  D004               	goto	u20850
 26808  003C84                     u20840:
 26809                           
 26810                           ; BSR set to: 0
 26811  003C84  0E02               	movlw	2
 26812  003C86  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 26813  003C88  A4D8               	btfss	status,2,c
 26814  003C8A  D007               	goto	l2472
 26815  003C8C                     u20850:
 26816                           
 26817                           ; BSR set to: 0
 26818                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 26819  003C8C  0E00               	movlw	0
 26820  003C8E  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26821  003C90  0E00               	movlw	0
 26822  003C92  6E11               	movwf	setRGB_ON@Freq^0,c
 26823  003C94  0E01               	movlw	1
 26824  003C96  ECEF  F03B         	call	_setRGB_ON
 26825  003C9A                     l2472:
 26826  003C9A  9487               	bcf	135,2,c	;volatile
 26827  003C9C  0012               	return	
 26828  003C9E                     l17280:
 26829                           
 26830                           ; BSR set to: 1
 26831                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26832  003C9E  0100               	movlb	0	; () banked
 26833  003CA0  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26834  003CA2  A4D8               	btfss	status,2,c
 26835  003CA4  D008               	goto	l17284
 26836                           
 26837                           ; BSR set to: 0
 26838                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 26839  003CA6  0E00               	movlw	0
 26840  003CA8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26841  003CAA  0E0A               	movlw	10
 26842  003CAC  6E11               	movwf	setRGB_ON@Freq^0,c
 26843  003CAE  0E02               	movlw	2
 26844  003CB0  ECEF  F03B         	call	_setRGB_ON
 26845                           
 26846                           ;outputs_MC50.c: 999:             }
 26847  003CB4  D007               	goto	l17286
 26848  003CB6                     l17284:
 26849                           
 26850                           ; BSR set to: 0
 26851                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 26852  003CB6  0E00               	movlw	0
 26853  003CB8  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26854  003CBA  0E00               	movlw	0
 26855  003CBC  6E11               	movwf	setRGB_ON@Freq^0,c
 26856  003CBE  0E02               	movlw	2
 26857  003CC0  ECEF  F03B         	call	_setRGB_ON
 26858  003CC4                     l17286:
 26859                           
 26860                           ; BSR set to: 1
 26861                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 26862  003CC4  0100               	movlb	0	; () banked
 26863  003CC6  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26864  003CC8  A4D8               	btfss	status,2,c
 26865  003CCA  D007               	goto	l17290
 26866                           
 26867                           ; BSR set to: 0
 26868                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 26869  003CCC  0E00               	movlw	0
 26870  003CCE  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26871  003CD0  0E14               	movlw	20
 26872  003CD2  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26873  003CD4  ECE5  F045         	call	_setFlashLigth_ON	;wreg free
 26874                           
 26875                           ;outputs_MC50.c: 1011:             }
 26876  003CD8  D00D               	goto	l17296
 26877  003CDA                     l17290:
 26878                           
 26879                           ; BSR set to: 0
 26880  003CDA  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26881  003CDC  B4D8               	btfsc	status,2,c
 26882  003CDE  D004               	goto	u20890
 26883                           
 26884                           ; BSR set to: 0
 26885  003CE0  0E02               	movlw	2
 26886  003CE2  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26887  003CE4  A4D8               	btfss	status,2,c
 26888  003CE6  D006               	goto	l17296
 26889  003CE8                     u20890:
 26890                           
 26891                           ; BSR set to: 0
 26892                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 26893  003CE8  0E00               	movlw	0
 26894  003CEA  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26895  003CEC  0E00               	movlw	0
 26896  003CEE  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26897  003CF0  ECE5  F045         	call	_setFlashLigth_ON	;wreg free
 26898  003CF4                     l17296:
 26899                           
 26900                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 26901  003CF4  0E03               	movlw	3
 26902  003CF6  0100               	movlb	0	; () banked
 26903  003CF8  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26904  003CFA  A4D8               	btfss	status,2,c
 26905  003CFC  0012               	return	
 26906                           
 26907                           ; BSR set to: 0
 26908                           
 26909                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 26910  003CFE  9487               	bcf	135,2,c	;volatile
 26911  003D00  0012               	return		;funcret
 26912  003D02                     __end_of_ControlLights:
 26913                           	callstack 0
 26914                           
 26915 ;; *************** function _setRGB_ON *****************
 26916 ;; Defined at:
 26917 ;;		line 1028 in file "outputs_MC50.c"
 26918 ;; Parameters:    Size  Location     Type
 26919 ;;  RGBLigth        1    wreg     enum E10611
 26920 ;;  Freq            2   16[COMRAM] int 
 26921 ;; Auto vars:     Size  Location     Type
 26922 ;;  RGBLigth        1   20[COMRAM] enum E10611
 26923 ;; Return value:  Size  Location     Type
 26924 ;;                  1    wreg      void 
 26925 ;; Registers used:
 26926 ;;		wreg, status,2, status,0, cstack
 26927 ;; Tracked objects:
 26928 ;;		On entry : 3E/0
 26929 ;;		On exit  : 3F/1
 26930 ;;		Unchanged: 0/0
 26931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26935 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26936 ;;Total ram usage:        5 bytes
 26937 ;; Hardware stack levels used: 1
 26938 ;; Hardware stack levels required when called: 5
 26939 ;; This function calls:
 26940 ;;		_RGB_Set
 26941 ;; This function is called by:
 26942 ;;		_ControlLights
 26943 ;; This function uses a non-reentrant model
 26944 ;;
 26945                           
 26946                           	psect	text114
 26947  0077DE                     __ptext114:
 26948                           	callstack 0
 26949  0077DE                     _setRGB_ON:
 26950                           	callstack 24
 26951                           
 26952                           ;incstack = 0
 26953                           ;setRGB_ON@RGBLigth stored from wreg
 26954  0077DE  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 26955                           
 26956                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 26957  0077E0  8E83               	bsf	131,7,c	;volatile
 26958                           
 26959                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 26960  0077E2  5011               	movf	setRGB_ON@Freq^0,w,c
 26961  0077E4  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 26962  0077E6  B4D8               	btfsc	status,2,c
 26963  0077E8  D015               	goto	l14858
 26964  0077EA  0101               	movlb	1	; () banked
 26965  0077EC  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 26966  0077EE  B4D8               	btfsc	status,2,c
 26967  0077F0  D011               	goto	l14858
 26968  0077F2  D024               	goto	l14860
 26969  0077F4                     l14848:
 26970                           
 26971                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 26972  0077F4  0E20               	movlw	32
 26973  0077F6  ECD6  F049         	call	_RGB_Set
 26974                           
 26975                           ;outputs_MC50.c: 1044:             break;
 26976  0077FA  D020               	goto	l14860
 26977  0077FC                     l14850:
 26978                           
 26979                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 26980  0077FC  0E04               	movlw	4
 26981  0077FE  ECD6  F049         	call	_RGB_Set
 26982                           
 26983                           ;outputs_MC50.c: 1048:             break;
 26984  007802  D01C               	goto	l14860
 26985  007804                     l14852:
 26986                           
 26987                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 26988  007804  0E00               	movlw	0
 26989  007806  ECD6  F049         	call	_RGB_Set
 26990                           
 26991                           ;outputs_MC50.c: 1052:             break;
 26992  00780A  D018               	goto	l14860
 26993  00780C                     l14854:
 26994                           
 26995                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 26996  00780C  0E24               	movlw	36
 26997  00780E  ECD6  F049         	call	_RGB_Set
 26998                           
 26999                           ;outputs_MC50.c: 1056:             break;
 27000  007812  D014               	goto	l14860
 27001  007814                     l14858:
 27002  007814  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 27003  007816  6E13               	movwf	??_setRGB_ON^0,c
 27004  007818  6A14               	clrf	(??_setRGB_ON+1)^0,c
 27005                           
 27006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27007                           ; Switch size 1, requested type "simple"
 27008                           ; Number of cases is 1, Range of values is 0 to 0
 27009                           ; switch strategies available:
 27010                           ; Name         Instructions Cycles
 27011                           ; simple_byte            4     3 (average)
 27012                           ;	Chosen strategy is simple_byte
 27013  00781A  5014               	movf	(??_setRGB_ON+1)^0,w,c
 27014  00781C  0A00               	xorlw	0	; case 0
 27015  00781E  A4D8               	btfss	status,2,c
 27016  007820  D00D               	goto	l14860
 27017                           
 27018                           ; Switch size 1, requested type "simple"
 27019                           ; Number of cases is 4, Range of values is 1 to 4
 27020                           ; switch strategies available:
 27021                           ; Name         Instructions Cycles
 27022                           ; simple_byte           13     7 (average)
 27023                           ;	Chosen strategy is simple_byte
 27024  007822  5013               	movf	??_setRGB_ON^0,w,c
 27025  007824  0A01               	xorlw	1	; case 1
 27026  007826  B4D8               	btfsc	status,2,c
 27027  007828  D7ED               	goto	l14852
 27028  00782A  0A03               	xorlw	3	; case 2
 27029  00782C  B4D8               	btfsc	status,2,c
 27030  00782E  D7E6               	goto	l14850
 27031  007830  0A01               	xorlw	1	; case 3
 27032  007832  B4D8               	btfsc	status,2,c
 27033  007834  D7DF               	goto	l14848
 27034  007836  0A07               	xorlw	7	; case 4
 27035  007838  B4D8               	btfsc	status,2,c
 27036  00783A  D7E8               	goto	l14854
 27037  00783C                     l14860:
 27038                           
 27039                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 27040  00783C  0101               	movlb	1	; () banked
 27041  00783E  BFB7               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 27042  007840  D005               	goto	u15510
 27043  007842  51B7               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 27044  007844  E113               	bnz	l2502
 27045  007846  05B6               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 27046  007848  B0D8               	btfsc	status,0,c
 27047  00784A  0012               	return	
 27048  00784C                     u15510:
 27049                           
 27050                           ; BSR set to: 1
 27051  00784C  5011               	movf	setRGB_ON@Freq^0,w,c
 27052  00784E  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 27053  007850  B4D8               	btfsc	status,2,c
 27054  007852  0012               	return	
 27055                           
 27056                           ; BSR set to: 1
 27057                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 27058  007854  C011  F1B6         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 27059  007858  C012  F1B7         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 27060                           
 27061                           ; BSR set to: 1
 27062                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 27063  00785C  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 27064  00785E  A4D8               	btfss	status,2,c
 27065  007860  D003               	goto	l14870
 27066                           
 27067                           ; BSR set to: 1
 27068                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 27069  007862  0E00               	movlw	0
 27070  007864  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 27071                           
 27072                           ;outputs_MC50.c: 1067:         }
 27073  007866  0012               	return	
 27074  007868                     l14870:
 27075                           
 27076                           ; BSR set to: 1
 27077                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 27078  007868  0E01               	movlw	1
 27079  00786A  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 27080  00786C                     l2502:
 27081                           
 27082                           ; BSR set to: 1
 27083  00786C  0012               	return		;funcret
 27084  00786E                     __end_of_setRGB_ON:
 27085                           	callstack 0
 27086                           
 27087 ;; *************** function _RGB_Set *****************
 27088 ;; Defined at:
 27089 ;;		line 98 in file "outputs_MC50.c"
 27090 ;; Parameters:    Size  Location     Type
 27091 ;;  value           1    wreg     unsigned char 
 27092 ;; Auto vars:     Size  Location     Type
 27093 ;;  value           1   15[COMRAM] unsigned char 
 27094 ;; Return value:  Size  Location     Type
 27095 ;;                  1    wreg      void 
 27096 ;; Registers used:
 27097 ;;		wreg, status,2, status,0
 27098 ;; Tracked objects:
 27099 ;;		On entry : 0/0
 27100 ;;		On exit  : 0/0
 27101 ;;		Unchanged: 0/0
 27102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27107 ;;Total ram usage:        1 bytes
 27108 ;; Hardware stack levels used: 1
 27109 ;; Hardware stack levels required when called: 4
 27110 ;; This function calls:
 27111 ;;		Nothing
 27112 ;; This function is called by:
 27113 ;;		_setRGB_ON
 27114 ;; This function uses a non-reentrant model
 27115 ;;
 27116                           
 27117                           	psect	text115
 27118  0093AC                     __ptext115:
 27119                           	callstack 0
 27120  0093AC                     _RGB_Set:
 27121                           	callstack 24
 27122                           
 27123                           ; BSR set to: 1
 27124                           ;incstack = 0
 27125                           ;RGB_Set@value stored from wreg
 27126  0093AC  6E10               	movwf	RGB_Set@value^0,c
 27127                           
 27128                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 27129  0093AE  0EDB               	movlw	219
 27130  0093B0  1685               	andwf	133,f,c	;volatile
 27131                           
 27132                           ;outputs_MC50.c: 101:    LATC |= value;
 27133  0093B2  5010               	movf	RGB_Set@value^0,w,c	;volatile
 27134  0093B4  1285               	iorwf	133,f,c	;volatile
 27135  0093B6  9E83               	bcf	131,7,c	;volatile
 27136  0093B8  0012               	return		;funcret
 27137  0093BA                     __end_of_RGB_Set:
 27138                           	callstack 0
 27139                           
 27140 ;; *************** function _setFlashLigth_ON *****************
 27141 ;; Defined at:
 27142 ;;		line 1077 in file "outputs_MC50.c"
 27143 ;; Parameters:    Size  Location     Type
 27144 ;;  Freq            2   15[COMRAM] int 
 27145 ;; Auto vars:     Size  Location     Type
 27146 ;;		None
 27147 ;; Return value:  Size  Location     Type
 27148 ;;                  1    wreg      void 
 27149 ;; Registers used:
 27150 ;;		wreg, status,2, status,0
 27151 ;; Tracked objects:
 27152 ;;		On entry : 3E/1
 27153 ;;		On exit  : 3F/1
 27154 ;;		Unchanged: 0/0
 27155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27160 ;;Total ram usage:        2 bytes
 27161 ;; Hardware stack levels used: 1
 27162 ;; Hardware stack levels required when called: 4
 27163 ;; This function calls:
 27164 ;;		Nothing
 27165 ;; This function is called by:
 27166 ;;		_ControlLights
 27167 ;; This function uses a non-reentrant model
 27168 ;;
 27169                           
 27170                           	psect	text116
 27171  008BCA                     __ptext116:
 27172                           	callstack 0
 27173  008BCA                     _setFlashLigth_ON:
 27174                           	callstack 25
 27175                           
 27176                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 27177                           
 27178                           ;incstack = 0
 27179  008BCA  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 27180  008BCC  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 27181  008BCE  B4D8               	btfsc	status,2,c
 27182  008BD0  D004               	goto	u15460
 27183  008BD2  0101               	movlb	1	; () banked
 27184  008BD4  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 27185  008BD6  A4D8               	btfss	status,2,c
 27186  008BD8  D002               	goto	l2511
 27187  008BDA                     u15460:
 27188                           
 27189                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 27190  008BDA  8487               	bsf	135,2,c	;volatile
 27191  008BDC  D001               	goto	l14836
 27192  008BDE                     l2511:
 27193                           
 27194                           ; BSR set to: 1
 27195  008BDE  9487               	bcf	135,2,c	;volatile
 27196  008BE0                     l14836:
 27197                           
 27198                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 27199  008BE0  0101               	movlb	1	; () banked
 27200  008BE2  BFB9               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 27201  008BE4  D005               	goto	u15470
 27202  008BE6  51B9               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 27203  008BE8  E10D               	bnz	l2514
 27204  008BEA  05B8               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 27205  008BEC  B0D8               	btfsc	status,0,c
 27206  008BEE  0012               	return	
 27207  008BF0                     u15470:
 27208                           
 27209                           ; BSR set to: 1
 27210  008BF0  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 27211  008BF2  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 27212  008BF4  B4D8               	btfsc	status,2,c
 27213  008BF6  0012               	return	
 27214                           
 27215                           ; BSR set to: 1
 27216                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 27217  008BF8  C010  F1B8         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 27218  008BFC  C011  F1B9         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 27219                           
 27220                           ; BSR set to: 1
 27221                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 27222  008C00  0E01               	movlw	1
 27223  008C02  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 27224  008C04                     l2514:
 27225                           
 27226                           ; BSR set to: 1
 27227  008C04  0012               	return		;funcret
 27228  008C06                     __end_of_setFlashLigth_ON:
 27229                           	callstack 0
 27230                           
 27231 ;; *************** function _ControlInputs *****************
 27232 ;; Defined at:
 27233 ;;		line 674 in file "inputs_MC50.c"
 27234 ;; Parameters:    Size  Location     Type
 27235 ;;		None
 27236 ;; Auto vars:     Size  Location     Type
 27237 ;;		None
 27238 ;; Return value:  Size  Location     Type
 27239 ;;                  1    wreg      void 
 27240 ;; Registers used:
 27241 ;;		wreg, status,2, status,0
 27242 ;; Tracked objects:
 27243 ;;		On entry : 3E/1
 27244 ;;		On exit  : 3E/0
 27245 ;;		Unchanged: 0/0
 27246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27251 ;;Total ram usage:        0 bytes
 27252 ;; Hardware stack levels used: 1
 27253 ;; Hardware stack levels required when called: 4
 27254 ;; This function calls:
 27255 ;;		Nothing
 27256 ;; This function is called by:
 27257 ;;		_main
 27258 ;; This function uses a non-reentrant model
 27259 ;;
 27260                           
 27261                           	psect	text117
 27262  006760                     __ptext117:
 27263                           	callstack 0
 27264  006760                     _ControlInputs:
 27265                           	callstack 26
 27266                           
 27267                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 27268                           
 27269                           ; BSR set to: 1
 27270                           ;incstack = 0
 27271  006760  0E03               	movlw	3
 27272  006762  0101               	movlb	1	; () banked
 27273  006764  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27274  006766  B4D8               	btfsc	status,2,c
 27275  006768  D00C               	goto	u19430
 27276                           
 27277                           ; BSR set to: 1
 27278  00676A  A291               	btfss	145,1,c	;volatile
 27279  00676C  D004               	goto	u19410
 27280                           
 27281                           ; BSR set to: 1
 27282  00676E  0100               	movlb	0	; () banked
 27283  006770  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27284  006772  B4D8               	btfsc	status,2,c
 27285  006774  D006               	goto	u19430
 27286  006776                     u19410:
 27287  006776  A091               	btfss	145,0,c	;volatile
 27288  006778  D00A               	goto	l16816
 27289  00677A  0100               	movlb	0	; () banked
 27290  00677C  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27291  00677E  A4D8               	btfss	status,2,c
 27292  006780  D006               	goto	l16816
 27293  006782                     u19430:
 27294  006782  0101               	movlb	1	; () banked
 27295  006784  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27296  006786  A4D8               	btfss	status,2,c
 27297  006788  D002               	goto	l16816
 27298                           
 27299                           ; BSR set to: 1
 27300                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 27301  00678A  0E00               	movlw	0
 27302  00678C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27303  00678E                     l16816:
 27304                           
 27305                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 27306  00678E  0101               	movlb	1	; () banked
 27307  006790  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27308  006792  B4D8               	btfsc	status,2,c
 27309  006794  D010               	goto	u19500
 27310                           
 27311                           ; BSR set to: 1
 27312  006796  0E02               	movlw	2
 27313  006798  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27314  00679A  B4D8               	btfsc	status,2,c
 27315  00679C  D00C               	goto	u19500
 27316                           
 27317                           ; BSR set to: 1
 27318  00679E  A091               	btfss	145,0,c	;volatile
 27319  0067A0  D004               	goto	u19480
 27320                           
 27321                           ; BSR set to: 1
 27322  0067A2  0100               	movlb	0	; () banked
 27323  0067A4  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27324  0067A6  B4D8               	btfsc	status,2,c
 27325  0067A8  D006               	goto	u19500
 27326  0067AA                     u19480:
 27327  0067AA  A291               	btfss	145,1,c	;volatile
 27328  0067AC  D00A               	goto	l16830
 27329  0067AE  0100               	movlb	0	; () banked
 27330  0067B0  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27331  0067B2  A4D8               	btfss	status,2,c
 27332  0067B4  D006               	goto	l16830
 27333  0067B6                     u19500:
 27334  0067B6  0101               	movlb	1	; () banked
 27335  0067B8  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27336  0067BA  A4D8               	btfss	status,2,c
 27337  0067BC  D002               	goto	l16830
 27338                           
 27339                           ; BSR set to: 1
 27340                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 27341  0067BE  0E00               	movlw	0
 27342  0067C0  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27343  0067C2                     l16830:
 27344                           
 27345                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 27346  0067C2  0101               	movlb	1	; () banked
 27347  0067C4  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 27348  0067C6  B4D8               	btfsc	status,2,c
 27349  0067C8  0012               	return	
 27350                           
 27351                           ; BSR set to: 1
 27352                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 27353  0067CA  0100               	movlb	0	; () banked
 27354  0067CC  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 27355  0067CE  A4D8               	btfss	status,2,c
 27356  0067D0  D02B               	goto	l16856
 27357                           
 27358                           ; BSR set to: 0
 27359  0067D2  0101               	movlb	1	; () banked
 27360  0067D4  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 27361  0067D6  A4D8               	btfss	status,2,c
 27362  0067D8  D027               	goto	l16856
 27363                           
 27364                           ; BSR set to: 1
 27365  0067DA  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 27366  0067DC  A4D8               	btfss	status,2,c
 27367  0067DE  D024               	goto	l16856
 27368                           
 27369                           ; BSR set to: 1
 27370                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 27371  0067E0  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27372  0067E2  B4D8               	btfsc	status,2,c
 27373  0067E4  D004               	goto	u19570
 27374                           
 27375                           ; BSR set to: 1
 27376  0067E6  0E02               	movlw	2
 27377  0067E8  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27378  0067EA  A4D8               	btfss	status,2,c
 27379  0067EC  D007               	goto	l16846
 27380  0067EE                     u19570:
 27381                           
 27382                           ; BSR set to: 1
 27383  0067EE  0100               	movlb	0	; () banked
 27384  0067F0  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 27385  0067F2  A4D8               	btfss	status,2,c
 27386  0067F4  D003               	goto	l16846
 27387                           
 27388                           ; BSR set to: 0
 27389                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 27390  0067F6  0E00               	movlw	0
 27391  0067F8  0101               	movlb	1	; () banked
 27392  0067FA  D015               	goto	L103
 27393  0067FC                     l16846:
 27394  0067FC  0E03               	movlw	3
 27395  0067FE  0101               	movlb	1	; () banked
 27396  006800  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27397  006802  A4D8               	btfss	status,2,c
 27398  006804  D011               	goto	l16856
 27399                           
 27400                           ; BSR set to: 1
 27401  006806  0100               	movlb	0	; () banked
 27402  006808  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 27403  00680A  A4D8               	btfss	status,2,c
 27404  00680C  D00D               	goto	l16856
 27405                           
 27406                           ; BSR set to: 0
 27407  00680E  0101               	movlb	1	; () banked
 27408  006810  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 27409  006812  D005               	goto	u19610
 27410  006814  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 27411  006816  E108               	bnz	l16856
 27412  006818  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 27413  00681A  B0D8               	btfsc	status,0,c
 27414  00681C  D005               	goto	l16856
 27415  00681E                     u19610:
 27416                           
 27417                           ; BSR set to: 1
 27418  00681E  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 27419  006820  A4D8               	btfss	status,2,c
 27420  006822  D002               	goto	l16856
 27421                           
 27422                           ; BSR set to: 1
 27423                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 27424  006824  0E00               	movlw	0
 27425  006826                     L103:
 27426  006826  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27427  006828                     l16856:
 27428                           
 27429                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 27430  006828  0100               	movlb	0	; () banked
 27431  00682A  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 27432  00682C  B4D8               	btfsc	status,2,c
 27433  00682E  D003               	goto	u19640
 27434                           
 27435                           ; BSR set to: 0
 27436  006830  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 27437  006832  A4D8               	btfss	status,2,c
 27438  006834  0012               	return	
 27439  006836                     u19640:
 27440                           
 27441                           ; BSR set to: 0
 27442  006836  0101               	movlb	1	; () banked
 27443  006838  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 27444  00683A  A4D8               	btfss	status,2,c
 27445  00683C  0012               	return	
 27446                           
 27447                           ; BSR set to: 1
 27448  00683E  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 27449  006840  A4D8               	btfss	status,2,c
 27450  006842  0012               	return	
 27451                           
 27452                           ; BSR set to: 1
 27453                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 27454  006844  0E03               	movlw	3
 27455  006846  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27456  006848  A4D8               	btfss	status,2,c
 27457  00684A  D008               	goto	l16870
 27458                           
 27459                           ; BSR set to: 1
 27460  00684C  0100               	movlb	0	; () banked
 27461  00684E  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 27462  006850  A4D8               	btfss	status,2,c
 27463  006852  D004               	goto	l16870
 27464                           
 27465                           ; BSR set to: 0
 27466                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 27467  006854  0E00               	movlw	0
 27468  006856  0101               	movlb	1	; () banked
 27469  006858  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27470                           
 27471                           ;inputs_MC50.c: 727:             }
 27472  00685A  0012               	return	
 27473  00685C                     l16870:
 27474  00685C  0101               	movlb	1	; () banked
 27475  00685E  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27476  006860  B4D8               	btfsc	status,2,c
 27477  006862  D004               	goto	u19700
 27478                           
 27479                           ; BSR set to: 1
 27480  006864  0E02               	movlw	2
 27481  006866  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27482  006868  A4D8               	btfss	status,2,c
 27483  00686A  D004               	goto	u19710
 27484  00686C                     u19700:
 27485                           
 27486                           ; BSR set to: 1
 27487  00686C  0100               	movlb	0	; () banked
 27488  00686E  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 27489  006870  B4D8               	btfsc	status,2,c
 27490  006872  D004               	goto	u19720
 27491  006874                     u19710:
 27492  006874  0100               	movlb	0	; () banked
 27493  006876  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 27494  006878  A4D8               	btfss	status,2,c
 27495  00687A  0012               	return	
 27496  00687C                     u19720:
 27497                           
 27498                           ; BSR set to: 0
 27499                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 27500  00687C  0E00               	movlw	0
 27501  00687E  0101               	movlb	1	; () banked
 27502  006880  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27503  006882  0012               	return	
 27504  006884                     __end_of_ControlInputs:
 27505                           	callstack 0
 27506                           
 27507 ;; *************** function _ControlCurrent *****************
 27508 ;; Defined at:
 27509 ;;		line 342 in file "controlCurrent_MC50.c"
 27510 ;; Parameters:    Size  Location     Type
 27511 ;;		None
 27512 ;; Auto vars:     Size  Location     Type
 27513 ;;		None
 27514 ;; Return value:  Size  Location     Type
 27515 ;;                  1    wreg      void 
 27516 ;; Registers used:
 27517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27518 ;; Tracked objects:
 27519 ;;		On entry : 3E/1
 27520 ;;		On exit  : 3E/0
 27521 ;;		Unchanged: 0/0
 27522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27527 ;;Total ram usage:        4 bytes
 27528 ;; Hardware stack levels used: 1
 27529 ;; Hardware stack levels required when called: 6
 27530 ;; This function calls:
 27531 ;;		_GetMotorPower
 27532 ;;		_getCurrentComparator
 27533 ;;		_refreshADCZeroOffset
 27534 ;;		_refreshCurrent
 27535 ;; This function is called by:
 27536 ;;		_main
 27537 ;; This function uses a non-reentrant model
 27538 ;;
 27539                           
 27540                           	psect	text118
 27541  00611A                     __ptext118:
 27542                           	callstack 0
 27543  00611A                     _ControlCurrent:
 27544                           	callstack 24
 27545                           
 27546                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 27547                           
 27548                           ;incstack = 0
 27549  00611A  ECDD  F044         	call	_refreshCurrent	;wreg free
 27550                           
 27551                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 27552  00611E  ECD5  F035         	call	_refreshADCZeroOffset	;wreg free
 27553                           
 27554                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 27555  006122  EC97  F038         	call	_GetMotorPower	;wreg free
 27556  006126  6E23               	movwf	??_ControlCurrent^0,c
 27557  006128  5023               	movf	??_ControlCurrent^0,w,c
 27558  00612A  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 27559  00612C  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 27560                           
 27561                           ; BSR set to: 1
 27562                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 27563  00612E  ECA2  F02C         	call	_getCurrentComparator	;wreg free
 27564  006132  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 27565  006136  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 27566  00613A  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 27567  00613E  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 27568                           
 27569                           ; BSR set to: 1
 27570                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 27571  006142  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27572  006144  A4D8               	btfss	status,2,c
 27573  006146  D00F               	goto	l22790
 27574                           
 27575                           ; BSR set to: 1
 27576                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 27577  006148  0E00               	movlw	0
 27578  00614A  0100               	movlb	0	; () banked
 27579  00614C  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27580                           
 27581                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 27582  00614E  0E00               	movlw	0
 27583  006150  0101               	movlb	1	; () banked
 27584  006152  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27585                           
 27586                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 27587  006154  0E00               	movlw	0
 27588  006156  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27589                           
 27590                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 27591  006158  0E00               	movlw	0
 27592  00615A  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27593                           
 27594                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 27595  00615C  0E00               	movlw	0
 27596  00615E  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27597  006160  0E14               	movlw	20
 27598  006162  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27599                           
 27600                           ;controlCurrent_MC50.c: 365:     }
 27601  006164  0012               	return	
 27602  006166                     l22790:
 27603                           
 27604                           ; BSR set to: 1
 27605  006166  517B               	movf	_powerControl_st& (0+255),w,b
 27606  006168  A4D8               	btfss	status,2,c
 27607  00616A  D05D               	goto	l22824
 27608                           
 27609                           ; BSR set to: 1
 27610                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 27611  00616C  0E00               	movlw	0
 27612  00616E  6FD3               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27613  006170  0E14               	movlw	20
 27614  006172  6FD2               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27615                           
 27616                           ; BSR set to: 1
 27617                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 27618  006174  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 27619  006176  6E23               	movwf	??_ControlCurrent^0,c
 27620  006178  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 27621  00617A  6E24               	movwf	(??_ControlCurrent+1)^0,c
 27622  00617C  6A25               	clrf	(??_ControlCurrent+2)^0,c
 27623  00617E  6A26               	clrf	(??_ControlCurrent+3)^0,c
 27624  006180  5023               	movf	??_ControlCurrent^0,w,c
 27625  006182  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 27626  006184  5024               	movf	(??_ControlCurrent+1)^0,w,c
 27627  006186  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 27628  006188  5025               	movf	(??_ControlCurrent+2)^0,w,c
 27629  00618A  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 27630  00618C  5026               	movf	(??_ControlCurrent+3)^0,w,c
 27631  00618E  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 27632  006190  B0D8               	btfsc	status,0,c
 27633  006192  D03E               	goto	l22822
 27634                           
 27635                           ; BSR set to: 1
 27636  006194  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27637  006196  D005               	goto	u27610
 27638  006198  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27639  00619A  E13A               	bnz	l22822
 27640  00619C  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27641  00619E  B0D8               	btfsc	status,0,c
 27642  0061A0  D037               	goto	l22822
 27643  0061A2                     u27610:
 27644                           
 27645                           ; BSR set to: 1
 27646  0061A2  0100               	movlb	0	; () banked
 27647  0061A4  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 27648  0061A6  B4D8               	btfsc	status,2,c
 27649  0061A8  D033               	goto	l22822
 27650                           
 27651                           ; BSR set to: 0
 27652  0061AA  0101               	movlb	1	; () banked
 27653  0061AC  BFDD               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27654  0061AE  D005               	goto	u27630
 27655  0061B0  51DD               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27656  0061B2  E12E               	bnz	l22822
 27657  0061B4  05DC               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27658  0061B6  B0D8               	btfsc	status,0,c
 27659  0061B8  D02B               	goto	l22822
 27660  0061BA                     u27630:
 27661                           
 27662                           ; BSR set to: 1
 27663                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 27664  0061BA  0100               	movlb	0	; () banked
 27665  0061BC  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 27666  0061BE  B4D8               	btfsc	status,2,c
 27667  0061C0  D00B               	goto	l22808
 27668                           
 27669                           ; BSR set to: 0
 27670                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 27671  0061C2  0101               	movlb	1	; () banked
 27672  0061C4  5189               	movf	_erroranterior& (0+255),w,b	;volatile
 27673  0061C6  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 27674  0061C8  518A               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 27675  0061CA  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 27676  0061CC  B0D8               	btfsc	status,0,c
 27677  0061CE  D004               	goto	l22808
 27678                           
 27679                           ; BSR set to: 1
 27680                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 27681  0061D0  0E00               	movlw	0
 27682  0061D2  0100               	movlb	0	; () banked
 27683  0061D4  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27684                           
 27685                           ;controlCurrent_MC50.c: 384:                  }
 27686  0061D6  D002               	goto	l22810
 27687  0061D8                     l22808:
 27688                           
 27689                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 27690  0061D8  0100               	movlb	0	; () banked
 27691  0061DA  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27692  0061DC                     l22810:
 27693                           
 27694                           ; BSR set to: 0
 27695                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 27696  0061DC  C12E  F189         	movff	_var_sys+46,_erroranterior	;volatile
 27697  0061E0  C12F  F18A         	movff	_var_sys+47,_erroranterior+1	;volatile
 27698                           
 27699                           ; BSR set to: 0
 27700                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 27701                           
 27702                           ;controlCurrent_MC50.c: 390:              }
 27703  0061E4  0101               	movlb	1	; () banked
 27704  0061E6  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27705  0061E8  D005               	goto	u27660
 27706  0061EA  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27707  0061EC  E14F               	bnz	l1405
 27708  0061EE  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27709  0061F0  B0D8               	btfsc	status,0,c
 27710  0061F2  0012               	return	
 27711  0061F4                     u27660:
 27712                           
 27713                           ; BSR set to: 1
 27714  0061F4  0E01               	movlw	1
 27715  0061F6  0100               	movlb	0	; () banked
 27716  0061F8  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27717  0061FA  0012               	return	
 27718                           
 27719                           ; BSR set to: 0
 27720                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 27721  0061FC  0E00               	movlw	0
 27722  0061FE  0101               	movlb	1	; () banked
 27723  006200  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27724                           
 27725                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27726  006202  0E00               	movlw	0
 27727  006204  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27728  006206  0EC8               	movlw	200
 27729  006208  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27730                           
 27731                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 27732  00620A  0E01               	movlw	1
 27733  00620C  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27734  00620E  0012               	return	
 27735  006210                     l22822:
 27736                           
 27737                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 27738  006210  0E00               	movlw	0
 27739  006212  0100               	movlb	0	; () banked
 27740  006214  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27741                           
 27742                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 27743  006216  0E00               	movlw	0
 27744  006218  0101               	movlb	1	; () banked
 27745  00621A  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27746                           
 27747                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 27748  00621C  0E00               	movlw	0
 27749  00621E  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27750                           
 27751                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 27752  006220  0E00               	movlw	0
 27753  006222  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27754  006224  0012               	return	
 27755  006226                     l22824:
 27756                           
 27757                           ; BSR set to: 1
 27758                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 27759  006226  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 27760  006228  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 27761  00622A  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 27762  00622C  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 27763  00622E  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 27764  006230  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 27765  006232  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 27766  006234  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 27767  006236  B0D8               	btfsc	status,0,c
 27768  006238  D7EB               	goto	l22822
 27769                           
 27770                           ; BSR set to: 1
 27771  00623A  BFB5               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27772  00623C  D005               	goto	u27690
 27773  00623E  51B5               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27774  006240  E1E7               	bnz	l22822
 27775  006242  05B4               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27776  006244  B0D8               	btfsc	status,0,c
 27777  006246  D7E4               	goto	l22822
 27778  006248                     u27690:
 27779                           
 27780                           ; BSR set to: 1
 27781  006248  BFD3               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 27782  00624A  D005               	goto	u27700
 27783  00624C  51D3               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 27784  00624E  E1E0               	bnz	l22822
 27785  006250  05D2               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 27786  006252  B0D8               	btfsc	status,0,c
 27787  006254  D7DD               	goto	l22822
 27788  006256                     u27700:
 27789                           
 27790                           ; BSR set to: 1
 27791  006256  0100               	movlb	0	; () banked
 27792  006258  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 27793  00625A  B4D8               	btfsc	status,2,c
 27794  00625C  D7D9               	goto	l22822
 27795                           
 27796                           ; BSR set to: 0
 27797                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 27798  00625E  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 27799                           
 27800                           ; BSR set to: 0
 27801                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 27802  006260  0101               	movlb	1	; () banked
 27803  006262  BFC9               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 27804  006264  D005               	goto	u27720
 27805  006266  51C9               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 27806  006268  E111               	bnz	l1405
 27807  00626A  05C8               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 27808  00626C  B0D8               	btfsc	status,0,c
 27809  00626E  0012               	return	
 27810  006270                     u27720:
 27811                           
 27812                           ; BSR set to: 1
 27813  006270  0E02               	movlw	2
 27814  006272  0100               	movlb	0	; () banked
 27815  006274  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 27816  006276  0012               	return	
 27817                           
 27818                           ; BSR set to: 0
 27819                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 27820  006278  0E00               	movlw	0
 27821  00627A  0101               	movlb	1	; () banked
 27822  00627C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27823                           
 27824                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 27825  00627E  0E00               	movlw	0
 27826  006280  6FC5               	movwf	(_ts_system+43)& (0+255),b	;volatile
 27827  006282  0EC8               	movlw	200
 27828  006284  6FC4               	movwf	(_ts_system+42)& (0+255),b	;volatile
 27829                           
 27830                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 27831  006286  0E01               	movlw	1
 27832  006288  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27833  00628A  0012               	return	
 27834  00628C                     l1405:
 27835  00628C  0012               	return		;funcret
 27836  00628E                     __end_of_ControlCurrent:
 27837                           	callstack 0
 27838                           
 27839 ;; *************** function _refreshCurrent *****************
 27840 ;; Defined at:
 27841 ;;		line 233 in file "controlCurrent_MC50.c"
 27842 ;; Parameters:    Size  Location     Type
 27843 ;;		None
 27844 ;; Auto vars:     Size  Location     Type
 27845 ;;		None
 27846 ;; Return value:  Size  Location     Type
 27847 ;;                  1    wreg      void 
 27848 ;; Registers used:
 27849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27850 ;; Tracked objects:
 27851 ;;		On entry : 3E/1
 27852 ;;		On exit  : 3F/0
 27853 ;;		Unchanged: 0/0
 27854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27859 ;;Total ram usage:        0 bytes
 27860 ;; Hardware stack levels used: 1
 27861 ;; Hardware stack levels required when called: 5
 27862 ;; This function calls:
 27863 ;;		_saveEnergyADCHist
 27864 ;;		_sumEnergyADC
 27865 ;;		_sumHIST
 27866 ;; This function is called by:
 27867 ;;		_ControlCurrent
 27868 ;; This function uses a non-reentrant model
 27869 ;;
 27870                           
 27871                           	psect	text119
 27872  0089BA                     __ptext119:
 27873                           	callstack 0
 27874  0089BA                     _refreshCurrent:
 27875                           	callstack 24
 27876                           
 27877                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 27878                           
 27879                           ;incstack = 0
 27880  0089BA  0100               	movlb	0	; () banked
 27881  0089BC  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 27882  0089BE  A4D8               	btfss	status,2,c
 27883  0089C0  D008               	goto	l14566
 27884                           
 27885                           ; BSR set to: 0
 27886  0089C2  0101               	movlb	1	; () banked
 27887  0089C4  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 27888  0089C6  D005               	goto	l14566
 27889  0089C8  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 27890  0089CA  E109               	bnz	l1372
 27891  0089CC  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 27892  0089CE  B0D8               	btfsc	status,0,c
 27893  0089D0  D006               	goto	l1372
 27894  0089D2                     l14566:
 27895                           
 27896                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 27897  0089D2  EC7D  F03C         	call	_sumEnergyADC	;wreg free
 27898  0089D6  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 27899  0089DA  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 27900  0089DE                     l1372:
 27901                           
 27902                           ; BSR set to: 1
 27903                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 27904  0089DE  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 27905  0089E2  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 27906  0089E6  ECFF  F047         	call	_saveEnergyADCHist	;wreg free
 27907                           
 27908                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 27909  0089EA  ECD2  F036         	call	_sumHIST	;wreg free
 27910  0089EE  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 27911  0089F2  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 27912  0089F6  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 27913  0089FA  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 27914                           
 27915                           ; BSR set to: 0
 27916  0089FE  0012               	return		;funcret
 27917  008A00                     __end_of_refreshCurrent:
 27918                           	callstack 0
 27919                           
 27920 ;; *************** function _sumHIST *****************
 27921 ;; Defined at:
 27922 ;;		line 199 in file "controlCurrent_MC50.c"
 27923 ;; Parameters:    Size  Location     Type
 27924 ;;		None
 27925 ;; Auto vars:     Size  Location     Type
 27926 ;;  sumH            4   27[COMRAM] unsigned long 
 27927 ;;  min             2   25[COMRAM] unsigned int 
 27928 ;;  max             2   23[COMRAM] unsigned int 
 27929 ;;  i               1   31[COMRAM] unsigned char 
 27930 ;; Return value:  Size  Location     Type
 27931 ;;                  4   15[COMRAM] unsigned long 
 27932 ;; Registers used:
 27933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27934 ;; Tracked objects:
 27935 ;;		On entry : 3F/0
 27936 ;;		On exit  : 3F/0
 27937 ;;		Unchanged: 3F/0
 27938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27940 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27941 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27942 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27943 ;;Total ram usage:       17 bytes
 27944 ;; Hardware stack levels used: 1
 27945 ;; Hardware stack levels required when called: 4
 27946 ;; This function calls:
 27947 ;;		Nothing
 27948 ;; This function is called by:
 27949 ;;		_refreshCurrent
 27950 ;; This function uses a non-reentrant model
 27951 ;;
 27952                           
 27953                           	psect	text120
 27954  006DA4                     __ptext120:
 27955                           	callstack 0
 27956  006DA4                     _sumHIST:
 27957                           	callstack 24
 27958                           
 27959                           ; BSR set to: 0
 27960                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 27961                           
 27962                           ; BSR set to: 0
 27963                           ;incstack = 0
 27964  006DA4  0E00               	movlw	0
 27965  006DA6  6E1C               	movwf	sumHIST@sumH^0,c
 27966  006DA8  0E00               	movlw	0
 27967  006DAA  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 27968  006DAC  0E00               	movlw	0
 27969  006DAE  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 27970  006DB0  0E00               	movlw	0
 27971  006DB2  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 27972                           
 27973                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 27974  006DB4  0E00               	movlw	0
 27975  006DB6  6E19               	movwf	(sumHIST@max+1)^0,c
 27976  006DB8  0E00               	movlw	0
 27977  006DBA  6E18               	movwf	sumHIST@max^0,c
 27978                           
 27979                           ; BSR set to: 0
 27980                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 27981  006DBC  681A               	setf	sumHIST@min^0,c
 27982  006DBE  681B               	setf	(sumHIST@min+1)^0,c
 27983                           
 27984                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 27985  006DC0  0E00               	movlw	0
 27986  006DC2  6E20               	movwf	sumHIST@i^0,c
 27987  006DC4                     l12718:
 27988                           
 27989                           ; BSR set to: 0
 27990                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 27991  006DC4  5020               	movf	sumHIST@i^0,w,c
 27992  006DC6  0D02               	mullw	2
 27993  006DC8  0E60               	movlw	low _SumEnergyADCHist_array
 27994  006DCA  24F3               	addwf	243,w,c
 27995  006DCC  6ED9               	movwf	fsr2l,c
 27996  006DCE  0E02               	movlw	high _SumEnergyADCHist_array
 27997  006DD0  20F4               	addwfc	prodh,w,c
 27998  006DD2  6EDA               	movwf	fsr2h,c
 27999  006DD4  CFDE F014          	movff	postinc2,??_sumHIST
 28000  006DD8  CFDD F015          	movff	postdec2,??_sumHIST+1
 28001  006DDC  5014               	movf	??_sumHIST^0,w,c
 28002  006DDE  241C               	addwf	sumHIST@sumH^0,w,c
 28003  006DE0  6E1C               	movwf	sumHIST@sumH^0,c
 28004  006DE2  5015               	movf	(??_sumHIST+1)^0,w,c
 28005  006DE4  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 28006  006DE6  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28007  006DE8  0E00               	movlw	0
 28008  006DEA  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 28009  006DEC  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28010  006DEE  0E00               	movlw	0
 28011  006DF0  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 28012  006DF2  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28013                           
 28014                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 28015  006DF4  5020               	movf	sumHIST@i^0,w,c
 28016  006DF6  0D02               	mullw	2
 28017  006DF8  0E60               	movlw	low _SumEnergyADCHist_array
 28018  006DFA  24F3               	addwf	243,w,c
 28019  006DFC  6ED9               	movwf	fsr2l,c
 28020  006DFE  0E02               	movlw	high _SumEnergyADCHist_array
 28021  006E00  20F4               	addwfc	prodh,w,c
 28022  006E02  6EDA               	movwf	fsr2h,c
 28023  006E04  50DE               	movf	postinc2,w,c
 28024  006E06  5C18               	subwf	sumHIST@max^0,w,c
 28025  006E08  50DE               	movf	postinc2,w,c
 28026  006E0A  5819               	subwfb	(sumHIST@max+1)^0,w,c
 28027  006E0C  B0D8               	btfsc	status,0,c
 28028  006E0E  D00C               	goto	l1366
 28029                           
 28030                           ; BSR set to: 0
 28031                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 28032  006E10  5020               	movf	sumHIST@i^0,w,c
 28033  006E12  0D02               	mullw	2
 28034  006E14  0E60               	movlw	low _SumEnergyADCHist_array
 28035  006E16  24F3               	addwf	243,w,c
 28036  006E18  6ED9               	movwf	fsr2l,c
 28037  006E1A  0E02               	movlw	high _SumEnergyADCHist_array
 28038  006E1C  20F4               	addwfc	prodh,w,c
 28039  006E1E  6EDA               	movwf	fsr2h,c
 28040  006E20  CFDE F018          	movff	postinc2,sumHIST@max
 28041  006E24  CFDD F019          	movff	postdec2,sumHIST@max+1
 28042  006E28                     l1366:
 28043                           
 28044                           ; BSR set to: 0
 28045                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 28046  006E28  5020               	movf	sumHIST@i^0,w,c
 28047  006E2A  0D02               	mullw	2
 28048  006E2C  0E60               	movlw	low _SumEnergyADCHist_array
 28049  006E2E  24F3               	addwf	243,w,c
 28050  006E30  6ED9               	movwf	fsr2l,c
 28051  006E32  0E02               	movlw	high _SumEnergyADCHist_array
 28052  006E34  20F4               	addwfc	prodh,w,c
 28053  006E36  6EDA               	movwf	fsr2h,c
 28054  006E38  501A               	movf	sumHIST@min^0,w,c
 28055  006E3A  5CDE               	subwf	postinc2,w,c
 28056  006E3C  501B               	movf	(sumHIST@min+1)^0,w,c
 28057  006E3E  58DE               	subwfb	postinc2,w,c
 28058  006E40  B0D8               	btfsc	status,0,c
 28059  006E42  D00C               	goto	l12724
 28060                           
 28061                           ; BSR set to: 0
 28062                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 28063  006E44  5020               	movf	sumHIST@i^0,w,c
 28064  006E46  0D02               	mullw	2
 28065  006E48  0E60               	movlw	low _SumEnergyADCHist_array
 28066  006E4A  24F3               	addwf	243,w,c
 28067  006E4C  6ED9               	movwf	fsr2l,c
 28068  006E4E  0E02               	movlw	high _SumEnergyADCHist_array
 28069  006E50  20F4               	addwfc	prodh,w,c
 28070  006E52  6EDA               	movwf	fsr2h,c
 28071  006E54  CFDE F01A          	movff	postinc2,sumHIST@min
 28072  006E58  CFDD F01B          	movff	postdec2,sumHIST@min+1
 28073  006E5C                     l12724:
 28074                           
 28075                           ; BSR set to: 0
 28076                           ;controlCurrent_MC50.c: 222:     }
 28077  006E5C  2A20               	incf	sumHIST@i^0,f,c
 28078                           
 28079                           ; BSR set to: 0
 28080  006E5E  0E09               	movlw	9
 28081  006E60  6420               	cpfsgt	sumHIST@i^0,c
 28082  006E62  D7B0               	goto	l12718
 28083                           
 28084                           ; BSR set to: 0
 28085                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 28086  006E64  501A               	movf	sumHIST@min^0,w,c
 28087  006E66  2418               	addwf	sumHIST@max^0,w,c
 28088  006E68  6E14               	movwf	??_sumHIST^0,c
 28089  006E6A  501B               	movf	(sumHIST@min+1)^0,w,c
 28090  006E6C  2019               	addwfc	(sumHIST@max+1)^0,w,c
 28091  006E6E  6E15               	movwf	(??_sumHIST+1)^0,c
 28092  006E70  6A16               	clrf	(??_sumHIST+2)^0,c
 28093  006E72  6A17               	clrf	(??_sumHIST+3)^0,c
 28094  006E74  5014               	movf	??_sumHIST^0,w,c
 28095  006E76  5C1C               	subwf	sumHIST@sumH^0,w,c
 28096  006E78  6E1C               	movwf	sumHIST@sumH^0,c
 28097  006E7A  5015               	movf	(??_sumHIST+1)^0,w,c
 28098  006E7C  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 28099  006E7E  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28100  006E80  5016               	movf	(??_sumHIST+2)^0,w,c
 28101  006E82  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 28102  006E84  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28103  006E86  5017               	movf	(??_sumHIST+3)^0,w,c
 28104  006E88  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 28105  006E8A  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28106                           
 28107                           ; BSR set to: 0
 28108                           ;controlCurrent_MC50.c: 226:     return sumH;
 28109  006E8C  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 28110  006E90  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 28111  006E94  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 28112  006E98  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 28113                           
 28114                           ; BSR set to: 0
 28115  006E9C  0012               	return		;funcret
 28116  006E9E                     __end_of_sumHIST:
 28117                           	callstack 0
 28118                           
 28119 ;; *************** function _sumEnergyADC *****************
 28120 ;; Defined at:
 28121 ;;		line 59 in file "controlCurrent_MC50.c"
 28122 ;; Parameters:    Size  Location     Type
 28123 ;;		None
 28124 ;; Auto vars:     Size  Location     Type
 28125 ;;  auxValue        2   21[COMRAM] unsigned int 
 28126 ;;  sumE            2   19[COMRAM] unsigned int 
 28127 ;;  i               1   23[COMRAM] unsigned char 
 28128 ;; Return value:  Size  Location     Type
 28129 ;;                  2   15[COMRAM] unsigned int 
 28130 ;; Registers used:
 28131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28132 ;; Tracked objects:
 28133 ;;		On entry : 3E/0
 28134 ;;		On exit  : 3F/1
 28135 ;;		Unchanged: 0/0
 28136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28138 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28139 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28140 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28141 ;;Total ram usage:        9 bytes
 28142 ;; Hardware stack levels used: 1
 28143 ;; Hardware stack levels required when called: 4
 28144 ;; This function calls:
 28145 ;;		Nothing
 28146 ;; This function is called by:
 28147 ;;		_refreshCurrent
 28148 ;; This function uses a non-reentrant model
 28149 ;;
 28150                           
 28151                           	psect	text121
 28152  0078FA                     __ptext121:
 28153                           	callstack 0
 28154  0078FA                     _sumEnergyADC:
 28155                           	callstack 24
 28156                           
 28157                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 28158                           
 28159                           ; BSR set to: 0
 28160                           ;incstack = 0
 28161  0078FA  0E00               	movlw	0
 28162  0078FC  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 28163  0078FE  0E00               	movlw	0
 28164  007900  6E14               	movwf	sumEnergyADC@sumE^0,c
 28165                           
 28166                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 28167  007902  0E00               	movlw	0
 28168  007904  6E18               	movwf	sumEnergyADC@i^0,c
 28169  007906                     l12690:
 28170                           
 28171                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 28172  007906  5018               	movf	sumEnergyADC@i^0,w,c
 28173  007908  0D02               	mullw	2
 28174  00790A  0E00               	movlw	low _ADC_array
 28175  00790C  24F3               	addwf	243,w,c
 28176  00790E  6ED9               	movwf	fsr2l,c
 28177  007910  0E02               	movlw	high _ADC_array
 28178  007912  20F4               	addwfc	prodh,w,c
 28179  007914  6EDA               	movwf	fsr2h,c
 28180  007916  50DE               	movf	postinc2,w,c
 28181  007918  0101               	movlb	1	; () banked
 28182  00791A  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 28183  00791C  50DE               	movf	postinc2,w,c
 28184  00791E  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 28185  007920  B0D8               	btfsc	status,0,c
 28186  007922  D012               	goto	l12694
 28187                           
 28188                           ; BSR set to: 1
 28189                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 28190  007924  5018               	movf	sumEnergyADC@i^0,w,c
 28191  007926  0D02               	mullw	2
 28192  007928  0E00               	movlw	low _ADC_array
 28193  00792A  24F3               	addwf	243,w,c
 28194  00792C  6ED9               	movwf	fsr2l,c
 28195  00792E  0E02               	movlw	high _ADC_array
 28196  007930  20F4               	addwfc	prodh,w,c
 28197  007932  6EDA               	movwf	fsr2h,c
 28198  007934  CFDE F012          	movff	postinc2,??_sumEnergyADC
 28199  007938  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 28200  00793C  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 28201  00793E  5C12               	subwf	??_sumEnergyADC^0,w,c
 28202  007940  6E16               	movwf	sumEnergyADC@auxValue^0,c
 28203  007942  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 28204  007944  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 28205  007946  D011               	goto	L104
 28206  007948                     l12694:
 28207                           
 28208                           ; BSR set to: 1
 28209                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 28210  007948  5018               	movf	sumEnergyADC@i^0,w,c
 28211  00794A  0D02               	mullw	2
 28212  00794C  0E00               	movlw	low _ADC_array
 28213  00794E  24F3               	addwf	243,w,c
 28214  007950  6ED9               	movwf	fsr2l,c
 28215  007952  0E02               	movlw	high _ADC_array
 28216  007954  20F4               	addwfc	prodh,w,c
 28217  007956  6EDA               	movwf	fsr2h,c
 28218  007958  CFDE F012          	movff	postinc2,??_sumEnergyADC
 28219  00795C  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 28220  007960  5012               	movf	??_sumEnergyADC^0,w,c
 28221  007962  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 28222  007964  6E16               	movwf	sumEnergyADC@auxValue^0,c
 28223  007966  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 28224  007968  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 28225  00796A                     L104:
 28226  00796A  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 28227                           
 28228                           ; BSR set to: 1
 28229                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 28230  00796C  5016               	movf	sumEnergyADC@auxValue^0,w,c
 28231  00796E  2614               	addwf	sumEnergyADC@sumE^0,f,c
 28232  007970  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 28233  007972  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 28234                           
 28235                           ; BSR set to: 1
 28236                           ;controlCurrent_MC50.c: 94:     }
 28237  007974  2A18               	incf	sumEnergyADC@i^0,f,c
 28238                           
 28239                           ; BSR set to: 1
 28240  007976  0E1D               	movlw	29
 28241  007978  6418               	cpfsgt	sumEnergyADC@i^0,c
 28242  00797A  D7C5               	goto	l12690
 28243                           
 28244                           ; BSR set to: 1
 28245                           ;controlCurrent_MC50.c: 96:     return sumE;
 28246  00797C  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 28247  007980  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 28248                           
 28249                           ; BSR set to: 1
 28250  007984  0012               	return		;funcret
 28251  007986                     __end_of_sumEnergyADC:
 28252                           	callstack 0
 28253                           
 28254 ;; *************** function _saveEnergyADCHist *****************
 28255 ;; Defined at:
 28256 ;;		line 182 in file "controlCurrent_MC50.c"
 28257 ;; Parameters:    Size  Location     Type
 28258 ;;  valueToSave     2   15[COMRAM] unsigned int 
 28259 ;; Auto vars:     Size  Location     Type
 28260 ;;		None
 28261 ;; Return value:  Size  Location     Type
 28262 ;;                  1    wreg      void 
 28263 ;; Registers used:
 28264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28265 ;; Tracked objects:
 28266 ;;		On entry : 3F/1
 28267 ;;		On exit  : 3F/0
 28268 ;;		Unchanged: 0/0
 28269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28274 ;;Total ram usage:        2 bytes
 28275 ;; Hardware stack levels used: 1
 28276 ;; Hardware stack levels required when called: 4
 28277 ;; This function calls:
 28278 ;;		Nothing
 28279 ;; This function is called by:
 28280 ;;		_refreshCurrent
 28281 ;; This function uses a non-reentrant model
 28282 ;;
 28283                           
 28284                           	psect	text122
 28285  008FFE                     __ptext122:
 28286                           	callstack 0
 28287  008FFE                     _saveEnergyADCHist:
 28288                           	callstack 24
 28289                           
 28290                           ; BSR set to: 1
 28291                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 28292                           
 28293                           ; BSR set to: 1
 28294                           ;incstack = 0
 28295  008FFE  0E09               	movlw	9
 28296  009000  0100               	movlb	0	; () banked
 28297  009002  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 28298  009004  D002               	goto	l12706
 28299                           
 28300                           ; BSR set to: 0
 28301                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 28302  009006  0E00               	movlw	0
 28303  009008  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 28304  00900A                     l12706:
 28305                           
 28306                           ; BSR set to: 0
 28307                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 28308  00900A  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 28309  00900C  0D02               	mullw	2
 28310  00900E  0E60               	movlw	low _SumEnergyADCHist_array
 28311  009010  24F3               	addwf	243,w,c
 28312  009012  6ED9               	movwf	fsr2l,c
 28313  009014  0E02               	movlw	high _SumEnergyADCHist_array
 28314  009016  20F4               	addwfc	prodh,w,c
 28315  009018  6EDA               	movwf	fsr2h,c
 28316  00901A  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 28317  00901E  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 28318                           
 28319                           ; BSR set to: 0
 28320                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 28321  009022  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 28322                           
 28323                           ; BSR set to: 0
 28324  009024  0012               	return		;funcret
 28325  009026                     __end_of_saveEnergyADCHist:
 28326                           	callstack 0
 28327                           
 28328 ;; *************** function _refreshADCZeroOffset *****************
 28329 ;; Defined at:
 28330 ;;		line 103 in file "controlCurrent_MC50.c"
 28331 ;; Parameters:    Size  Location     Type
 28332 ;;		None
 28333 ;; Auto vars:     Size  Location     Type
 28334 ;;  media           2   23[COMRAM] unsigned int 
 28335 ;;  i               1   22[COMRAM] unsigned char 
 28336 ;; Return value:  Size  Location     Type
 28337 ;;                  1    wreg      void 
 28338 ;; Registers used:
 28339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28340 ;; Tracked objects:
 28341 ;;		On entry : 3F/0
 28342 ;;		On exit  : 3E/0
 28343 ;;		Unchanged: 0/0
 28344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28346 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28348 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28349 ;;Total ram usage:        3 bytes
 28350 ;; Hardware stack levels used: 1
 28351 ;; Hardware stack levels required when called: 5
 28352 ;; This function calls:
 28353 ;;		___lwdiv
 28354 ;; This function is called by:
 28355 ;;		_ControlCurrent
 28356 ;; This function uses a non-reentrant model
 28357 ;;
 28358                           
 28359                           	psect	text123
 28360  006BAA                     __ptext123:
 28361                           	callstack 0
 28362  006BAA                     _refreshADCZeroOffset:
 28363                           	callstack 24
 28364                           
 28365                           ; BSR set to: 0
 28366                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 28367                           
 28368                           ; BSR set to: 0
 28369                           ;incstack = 0
 28370  006BAA  0E00               	movlw	0
 28371  006BAC  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28372  006BAE  0E00               	movlw	0
 28373  006BB0  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28374                           
 28375                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 28376  006BB2  0101               	movlb	1	; () banked
 28377  006BB4  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28378  006BB6  A4D8               	btfss	status,2,c
 28379  006BB8  0012               	return	
 28380                           
 28381                           ; BSR set to: 1
 28382                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 28383  006BBA  BFD9               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 28384  006BBC  D005               	goto	u14820
 28385  006BBE  51D9               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 28386  006BC0  E172               	bnz	l1357
 28387  006BC2  05D8               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 28388  006BC4  B0D8               	btfsc	status,0,c
 28389  006BC6  0012               	return	
 28390  006BC8                     u14820:
 28391                           
 28392                           ; BSR set to: 1
 28393                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 28394  006BC8  0E00               	movlw	0
 28395  006BCA  6FD9               	movwf	(_ts_system+63)& (0+255),b	;volatile
 28396  006BCC  0E14               	movlw	20
 28397  006BCE  6FD8               	movwf	(_ts_system+62)& (0+255),b	;volatile
 28398                           
 28399                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 28400  006BD0  0E00               	movlw	0
 28401  006BD2  6E17               	movwf	refreshADCZeroOffset@i^0,c
 28402  006BD4                     l14518:
 28403                           
 28404                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 28405  006BD4  5017               	movf	refreshADCZeroOffset@i^0,w,c
 28406  006BD6  0D02               	mullw	2
 28407  006BD8  0E00               	movlw	low _ADC_array
 28408  006BDA  24F3               	addwf	243,w,c
 28409  006BDC  6ED9               	movwf	fsr2l,c
 28410  006BDE  0E02               	movlw	high _ADC_array
 28411  006BE0  20F4               	addwfc	prodh,w,c
 28412  006BE2  6EDA               	movwf	fsr2h,c
 28413  006BE4  50DE               	movf	postinc2,w,c
 28414  006BE6  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 28415  006BE8  50DD               	movf	postdec2,w,c
 28416  006BEA  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 28417                           
 28418                           ;controlCurrent_MC50.c: 128:             }
 28419  006BEC  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28420  006BEE  0E1D               	movlw	29
 28421  006BF0  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28422  006BF2  D7F0               	goto	l14518
 28423                           
 28424                           ;controlCurrent_MC50.c: 130:             media = media/30;
 28425  006BF4  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28426  006BF8  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28427  006BFC  0E00               	movlw	0
 28428  006BFE  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28429  006C00  0E1E               	movlw	30
 28430  006C02  6E12               	movwf	___lwdiv@divisor^0,c
 28431  006C04  ECA6  F043         	call	___lwdiv	;wreg free
 28432  006C08  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28433  006C0C  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28434                           
 28435                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 28436  006C10  0EEB               	movlw	235
 28437  006C12  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28438  006C14  0E01               	movlw	1
 28439  006C16  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28440  006C18  A0D8               	btfss	status,0,c
 28441  006C1A  D006               	goto	l14532
 28442  006C1C  0E12               	movlw	18
 28443  006C1E  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28444  006C20  0E02               	movlw	2
 28445  006C22  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28446  006C24  A0D8               	btfss	status,0,c
 28447  006C26  D004               	goto	l14534
 28448  006C28                     l14532:
 28449                           
 28450                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 28451  006C28  0E01               	movlw	1
 28452  006C2A  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28453  006C2C  0EFE               	movlw	254
 28454  006C2E  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28455  006C30                     l14534:
 28456                           
 28457                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 28458  006C30  0E1D               	movlw	29
 28459  006C32  0100               	movlb	0	; () banked
 28460  006C34  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 28461  006C36  D002               	goto	l14538
 28462                           
 28463                           ; BSR set to: 0
 28464                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 28465  006C38  0E00               	movlw	0
 28466  006C3A  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 28467  006C3C                     l14538:
 28468                           
 28469                           ; BSR set to: 0
 28470                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 28471  006C3C  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 28472  006C3E  0D02               	mullw	2
 28473  006C40  0E96               	movlw	low _ADC_zero_array
 28474  006C42  24F3               	addwf	243,w,c
 28475  006C44  6ED9               	movwf	fsr2l,c
 28476  006C46  0E03               	movlw	high _ADC_zero_array
 28477  006C48  20F4               	addwfc	prodh,w,c
 28478  006C4A  6EDA               	movwf	fsr2h,c
 28479  006C4C  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 28480  006C50  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 28481                           
 28482                           ; BSR set to: 0
 28483                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 28484  006C54  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 28485                           
 28486                           ; BSR set to: 0
 28487                           ;controlCurrent_MC50.c: 150:             media = 0;
 28488  006C56  0E00               	movlw	0
 28489  006C58  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28490  006C5A  0E00               	movlw	0
 28491  006C5C  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28492                           
 28493                           ; BSR set to: 0
 28494                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 28495  006C5E  0E00               	movlw	0
 28496  006C60  6E17               	movwf	refreshADCZeroOffset@i^0,c
 28497  006C62                     l14550:
 28498                           
 28499                           ; BSR set to: 0
 28500                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 28501  006C62  5017               	movf	refreshADCZeroOffset@i^0,w,c
 28502  006C64  0D02               	mullw	2
 28503  006C66  0E96               	movlw	low _ADC_zero_array
 28504  006C68  24F3               	addwf	243,w,c
 28505  006C6A  6ED9               	movwf	fsr2l,c
 28506  006C6C  0E03               	movlw	high _ADC_zero_array
 28507  006C6E  20F4               	addwfc	prodh,w,c
 28508  006C70  6EDA               	movwf	fsr2h,c
 28509  006C72  50DE               	movf	postinc2,w,c
 28510  006C74  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 28511  006C76  50DD               	movf	postdec2,w,c
 28512  006C78  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 28513                           
 28514                           ; BSR set to: 0
 28515                           ;controlCurrent_MC50.c: 159:             }
 28516  006C7A  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28517                           
 28518                           ; BSR set to: 0
 28519  006C7C  0E1D               	movlw	29
 28520  006C7E  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28521  006C80  D7F0               	goto	l14550
 28522                           
 28523                           ; BSR set to: 0
 28524                           ;controlCurrent_MC50.c: 160:             media = media/30;
 28525  006C82  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28526  006C86  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28527  006C8A  0E00               	movlw	0
 28528  006C8C  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28529  006C8E  0E1E               	movlw	30
 28530  006C90  6E12               	movwf	___lwdiv@divisor^0,c
 28531  006C92  ECA6  F043         	call	___lwdiv	;wreg free
 28532  006C96  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28533  006C9A  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28534                           
 28535                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 28536  006C9E  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 28537  006CA2  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 28538  006CA6                     l1357:
 28539  006CA6  0012               	return		;funcret
 28540  006CA8                     __end_of_refreshADCZeroOffset:
 28541                           	callstack 0
 28542                           
 28543 ;; *************** function ___lwdiv *****************
 28544 ;; Defined at:
 28545 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 28546 ;; Parameters:    Size  Location     Type
 28547 ;;  dividend        2   15[COMRAM] unsigned int 
 28548 ;;  divisor         2   17[COMRAM] unsigned int 
 28549 ;; Auto vars:     Size  Location     Type
 28550 ;;  quotient        2   19[COMRAM] unsigned int 
 28551 ;;  counter         1   21[COMRAM] unsigned char 
 28552 ;; Return value:  Size  Location     Type
 28553 ;;                  2   15[COMRAM] unsigned int 
 28554 ;; Registers used:
 28555 ;;		wreg, status,2, status,0
 28556 ;; Tracked objects:
 28557 ;;		On entry : 3E/1
 28558 ;;		On exit  : 3E/0
 28559 ;;		Unchanged: 3E/0
 28560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28562 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28564 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28565 ;;Total ram usage:        7 bytes
 28566 ;; Hardware stack levels used: 1
 28567 ;; Hardware stack levels required when called: 4
 28568 ;; This function calls:
 28569 ;;		Nothing
 28570 ;; This function is called by:
 28571 ;;		_refreshADCZeroOffset
 28572 ;;		_sm_execute_menuConfiguration
 28573 ;; This function uses a non-reentrant model
 28574 ;;
 28575                           
 28576                           	psect	text124
 28577  00874C                     __ptext124:
 28578                           	callstack 0
 28579  00874C                     ___lwdiv:
 28580                           	callstack 24
 28581                           
 28582                           ;incstack = 0
 28583  00874C  0E00               	movlw	0
 28584  00874E  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 28585  008750  0E00               	movlw	0
 28586  008752  6E14               	movwf	___lwdiv@quotient^0,c
 28587  008754  5012               	movf	___lwdiv@divisor^0,w,c
 28588  008756  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 28589  008758  B4D8               	btfsc	status,2,c
 28590  00875A  D01C               	goto	l4170
 28591  00875C  0E01               	movlw	1
 28592  00875E  6E16               	movwf	___lwdiv@counter^0,c
 28593  008760  D004               	goto	l13998
 28594  008762                     l13996:
 28595  008762  90D8               	bcf	status,0,c
 28596  008764  3612               	rlcf	___lwdiv@divisor^0,f,c
 28597  008766  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 28598  008768  2A16               	incf	___lwdiv@counter^0,f,c
 28599  00876A                     l13998:
 28600  00876A  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 28601  00876C  D7FA               	goto	l13996
 28602  00876E                     u13840:
 28603  00876E  90D8               	bcf	status,0,c
 28604  008770  3614               	rlcf	___lwdiv@quotient^0,f,c
 28605  008772  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 28606  008774  5012               	movf	___lwdiv@divisor^0,w,c
 28607  008776  5C10               	subwf	___lwdiv@dividend^0,w,c
 28608  008778  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28609  00877A  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 28610  00877C  A0D8               	btfss	status,0,c
 28611  00877E  D005               	goto	l14008
 28612  008780  5012               	movf	___lwdiv@divisor^0,w,c
 28613  008782  5E10               	subwf	___lwdiv@dividend^0,f,c
 28614  008784  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28615  008786  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 28616  008788  8014               	bsf	___lwdiv@quotient^0,0,c
 28617  00878A                     l14008:
 28618  00878A  90D8               	bcf	status,0,c
 28619  00878C  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 28620  00878E  3212               	rrcf	___lwdiv@divisor^0,f,c
 28621  008790  2E16               	decfsz	___lwdiv@counter^0,f,c
 28622  008792  D7ED               	goto	u13840
 28623  008794                     l4170:
 28624  008794  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 28625  008798  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28626  00879C  0012               	return		;funcret
 28627  00879E                     __end_of___lwdiv:
 28628                           	callstack 0
 28629                           
 28630 ;; *************** function _getCurrentComparator *****************
 28631 ;; Defined at:
 28632 ;;		line 264 in file "controlCurrent_MC50.c"
 28633 ;; Parameters:    Size  Location     Type
 28634 ;;		None
 28635 ;; Auto vars:     Size  Location     Type
 28636 ;;  x               1   33[COMRAM] unsigned char 
 28637 ;;  tempOffset      2   31[COMRAM] unsigned int 
 28638 ;; Return value:  Size  Location     Type
 28639 ;;                  4   21[COMRAM] unsigned long 
 28640 ;; Registers used:
 28641 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28642 ;; Tracked objects:
 28643 ;;		On entry : 3F/1
 28644 ;;		On exit  : 3F/1
 28645 ;;		Unchanged: 0/0
 28646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28648 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28649 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28650 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28651 ;;Total ram usage:       13 bytes
 28652 ;; Hardware stack levels used: 1
 28653 ;; Hardware stack levels required when called: 5
 28654 ;; This function calls:
 28655 ;;		___wmul
 28656 ;; This function is called by:
 28657 ;;		_ControlCurrent
 28658 ;; This function uses a non-reentrant model
 28659 ;;
 28660                           
 28661                           	psect	text125
 28662  005944                     __ptext125:
 28663                           	callstack 0
 28664  005944                     _getCurrentComparator:
 28665                           	callstack 24
 28666                           
 28667                           ; BSR set to: 1
 28668                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 28669                           
 28670                           ; BSR set to: 1
 28671                           
 28672                           ;incstack = 0
 28673  005944  BFB1               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 28674  005946  D00A               	goto	l14574
 28675  005948  51B1               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 28676  00594A  E103               	bnz	u14900
 28677  00594C  05B0               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 28678  00594E  A0D8               	btfss	status,0,c
 28679  005950  D005               	goto	l14574
 28680  005952                     u14900:
 28681                           
 28682                           ; BSR set to: 1
 28683                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 28684  005952  0E00               	movlw	0
 28685  005954  6FD5               	movwf	(_ts_system+59)& (0+255),b	;volatile
 28686  005956  0E14               	movlw	20
 28687  005958  6FD4               	movwf	(_ts_system+58)& (0+255),b	;volatile
 28688  00595A  D007               	goto	u14910
 28689  00595C                     l14574:
 28690                           
 28691                           ; BSR set to: 1
 28692  00595C  BFD5               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 28693  00595E  D009               	goto	l14578
 28694  005960  51D5               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 28695  005962  E103               	bnz	u14910
 28696  005964  05D4               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 28697  005966  A0D8               	btfss	status,0,c
 28698  005968  D004               	goto	l14578
 28699  00596A                     u14910:
 28700                           
 28701                           ; BSR set to: 1
 28702                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 28703  00596A  0E04               	movlw	4
 28704  00596C  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28705  00596E  0EB0               	movlw	176
 28706  005970  D003               	goto	L105
 28707  005972                     l14578:
 28708                           
 28709                           ; BSR set to: 1
 28710                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 28711  005972  0E00               	movlw	0
 28712  005974  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 28713  005976  0E00               	movlw	0
 28714  005978                     L105:
 28715  005978  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 28716                           
 28717                           ; BSR set to: 1
 28718                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 28719  00597A  517B               	movf	_powerControl_st& (0+255),w,b
 28720  00597C  A4D8               	btfss	status,2,c
 28721  00597E  D05B               	goto	l14594
 28722                           
 28723                           ; BSR set to: 1
 28724                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 28725  005980  0E03               	movlw	3
 28726  005982  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28727  005984  A4D8               	btfss	status,2,c
 28728  005986  D005               	goto	l14584
 28729                           
 28730                           ; BSR set to: 1
 28731                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 28732  005988  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 28733  00598C  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 28734  005990  D004               	goto	L106
 28735  005992                     l14584:
 28736                           
 28737                           ; BSR set to: 1
 28738                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 28739  005992  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 28740  005996  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 28741  00599A                     L106:
 28742  00599A  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 28743  00599C  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 28744                           
 28745                           ; BSR set to: 1
 28746                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 28747  00599E  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28748  0059A0  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28749  0059A2  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 28750  0059A4  E104               	bnz	u14940
 28751  0059A6  0E65               	movlw	101
 28752  0059A8  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28753  0059AA  A0D8               	btfss	status,0,c
 28754  0059AC  D009               	goto	u14950
 28755  0059AE                     u14940:
 28756                           
 28757                           ; BSR set to: 1
 28758  0059AE  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28759  0059B0  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28760  0059B2  E106               	bnz	u14950
 28761  0059B4  0EC5               	movlw	197
 28762  0059B6  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28763  0059B8  0E3B               	movlw	59
 28764  0059BA  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28765  0059BC  A0D8               	btfss	status,0,c
 28766  0059BE  D004               	goto	l1383
 28767  0059C0                     u14950:
 28768                           
 28769                           ; BSR set to: 1
 28770                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 28771  0059C0  0EC4               	movlw	196
 28772  0059C2  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28773  0059C4  0E3B               	movlw	59
 28774  0059C6  D058               	goto	L108
 28775  0059C8                     l1383:
 28776                           
 28777                           ; BSR set to: 1
 28778                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 28779  0059C8  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 28780                           
 28781                           ; BSR set to: 1
 28782                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 28783  0059CC  5022               	movf	getCurrentComparator@x^0,w,c
 28784  0059CE  0222               	mulwf	getCurrentComparator@x^0,c
 28785  0059D0  CFF3 F010          	movff	prodl,___wmul@multiplier
 28786  0059D4  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 28787  0059D8  0E00               	movlw	0
 28788  0059DA  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28789  0059DC  0E0A               	movlw	10
 28790  0059DE  6E12               	movwf	___wmul@multiplicand^0,c
 28791  0059E0  EC39  F048         	call	___wmul	;wreg free
 28792  0059E4  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 28793  0059E8  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 28794  0059EC  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 28795  0059F0  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28796  0059F2  0EFF               	movlw	255
 28797  0059F4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28798  0059F6  0E38               	movlw	56
 28799  0059F8  6E12               	movwf	___wmul@multiplicand^0,c
 28800  0059FA  EC39  F048         	call	___wmul	;wreg free
 28801  0059FE  5010               	movf	?___wmul^0,w,c
 28802  005A00  261A               	addwf	??_getCurrentComparator^0,f,c
 28803  005A02  5011               	movf	(?___wmul+1)^0,w,c
 28804  005A04  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 28805  005A06  0E14               	movlw	20
 28806  005A08  241A               	addwf	??_getCurrentComparator^0,w,c
 28807  005A0A  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 28808  005A0C  0E05               	movlw	5
 28809  005A0E  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 28810  005A10  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28811  005A12  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 28812  005A14  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 28813  005A16  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 28814  005A18  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 28815  005A1A  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 28816  005A1C  0101               	movlb	1	; () banked
 28817  005A1E  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28818  005A20  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 28819  005A22  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28820  005A24  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28821  005A26  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 28822  005A28  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28823  005A2A  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28824  005A2C  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 28825  005A2E  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28826  005A30  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28827  005A32  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 28828  005A34  D046               	goto	L107
 28829  005A36                     l14594:
 28830                           
 28831                           ; BSR set to: 1
 28832                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 28833  005A36  0E03               	movlw	3
 28834  005A38  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 28835  005A3A  A4D8               	btfss	status,2,c
 28836  005A3C  D009               	goto	l1388
 28837                           
 28838                           ; BSR set to: 1
 28839                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 28840  005A3E  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 28841  005A42  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 28842  005A46  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 28843  005A4A  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 28844                           
 28845                           ;controlCurrent_MC50.c: 315:         }
 28846  005A4E  D008               	goto	l14598
 28847  005A50                     l1388:
 28848                           
 28849                           ; BSR set to: 1
 28850                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 28851  005A50  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 28852  005A54  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 28853  005A58  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 28854  005A5C  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 28855  005A60                     l14598:
 28856                           
 28857                           ; BSR set to: 1
 28858                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 28859  005A60  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28860  005A62  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 28861  005A64  E10E               	bnz	l14602
 28862  005A66  0E89               	movlw	137
 28863  005A68  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28864  005A6A  0E13               	movlw	19
 28865  005A6C  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28866  005A6E  B0D8               	btfsc	status,0,c
 28867  005A70  D008               	goto	l14602
 28868                           
 28869                           ; BSR set to: 1
 28870                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 28871  005A72  0E88               	movlw	136
 28872  005A74  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28873  005A76  0E13               	movlw	19
 28874  005A78                     L108:
 28875  005A78  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28876  005A7A  0E00               	movlw	0
 28877  005A7C  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28878  005A7E  0E00               	movlw	0
 28879  005A80  D020               	goto	L107
 28880  005A82                     l14602:
 28881                           
 28882                           ; BSR set to: 1
 28883                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 28884  005A82  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 28885  005A86  6A11               	clrf	(___wmul@multiplier+1)^0,c
 28886  005A88  0EFE               	movlw	254
 28887  005A8A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 28888  005A8C  0E0C               	movlw	12
 28889  005A8E  6E12               	movwf	___wmul@multiplicand^0,c
 28890  005A90  EC39  F048         	call	___wmul	;wreg free
 28891  005A94  0E38               	movlw	56
 28892  005A96  2410               	addwf	?___wmul^0,w,c
 28893  005A98  6E1A               	movwf	??_getCurrentComparator^0,c
 28894  005A9A  0E18               	movlw	24
 28895  005A9C  2011               	addwfc	(?___wmul+1)^0,w,c
 28896  005A9E  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 28897  005AA0  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 28898  005AA2  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 28899  005AA4  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 28900  005AA6  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28901  005AA8  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 28902  005AAA  501A               	movf	??_getCurrentComparator^0,w,c
 28903  005AAC  0101               	movlb	1	; () banked
 28904  005AAE  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 28905  005AB0  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 28906  005AB2  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 28907  005AB4  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 28908  005AB6  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 28909  005AB8  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 28910  005ABA  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 28911  005ABC  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 28912  005ABE  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 28913  005AC0  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 28914  005AC2                     L107:
 28915  005AC2  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 28916                           
 28917                           ; BSR set to: 1
 28918                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 28919  005AC4  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 28920  005AC6  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 28921  005AC8  6E16               	movwf	?_getCurrentComparator^0,c
 28922  005ACA  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 28923  005ACC  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 28924  005ACE  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 28925  005AD0  0E00               	movlw	0
 28926  005AD2  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 28927  005AD4  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 28928  005AD6  0E00               	movlw	0
 28929  005AD8  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 28930  005ADA  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 28931                           
 28932                           ; BSR set to: 1
 28933  005ADC  0012               	return		;funcret
 28934  005ADE                     __end_of_getCurrentComparator:
 28935                           	callstack 0
 28936                           
 28937 ;; *************** function ___wmul *****************
 28938 ;; Defined at:
 28939 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 28940 ;; Parameters:    Size  Location     Type
 28941 ;;  multiplier      2   15[COMRAM] unsigned int 
 28942 ;;  multiplicand    2   17[COMRAM] unsigned int 
 28943 ;; Auto vars:     Size  Location     Type
 28944 ;;  product         2   19[COMRAM] unsigned int 
 28945 ;; Return value:  Size  Location     Type
 28946 ;;                  2   15[COMRAM] unsigned int 
 28947 ;; Registers used:
 28948 ;;		wreg, status,2, status,0, prodl, prodh
 28949 ;; Tracked objects:
 28950 ;;		On entry : 0/0
 28951 ;;		On exit  : 0/0
 28952 ;;		Unchanged: 0/0
 28953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28958 ;;Total ram usage:        6 bytes
 28959 ;; Hardware stack levels used: 1
 28960 ;; Hardware stack levels required when called: 4
 28961 ;; This function calls:
 28962 ;;		Nothing
 28963 ;; This function is called by:
 28964 ;;		_getCurrentComparator
 28965 ;;		_getHopCode
 28966 ;; This function uses a non-reentrant model
 28967 ;;
 28968                           
 28969                           	psect	text126
 28970  009072                     __ptext126:
 28971                           	callstack 0
 28972  009072                     ___wmul:
 28973                           	callstack 22
 28974                           
 28975                           ; BSR set to: 1
 28976                           ;incstack = 0
 28977  009072  5010               	movf	___wmul@multiplier^0,w,c
 28978  009074  0212               	mulwf	___wmul@multiplicand^0,c
 28979  009076  CFF3 F014          	movff	prodl,___wmul@product
 28980  00907A  CFF4 F015          	movff	prodh,___wmul@product+1
 28981  00907E  5010               	movf	___wmul@multiplier^0,w,c
 28982  009080  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 28983  009082  50F3               	movf	243,w,c
 28984  009084  2615               	addwf	(___wmul@product+1)^0,f,c
 28985  009086  5011               	movf	(___wmul@multiplier+1)^0,w,c
 28986  009088  0212               	mulwf	___wmul@multiplicand^0,c
 28987  00908A  50F3               	movf	243,w,c
 28988  00908C  2615               	addwf	(___wmul@product+1)^0,f,c
 28989  00908E  C014  F010         	movff	___wmul@product,?___wmul
 28990  009092  C015  F011         	movff	___wmul@product+1,?___wmul+1
 28991  009096  0012               	return		;funcret
 28992  009098                     __end_of___wmul:
 28993                           	callstack 0
 28994                           
 28995 ;; *************** function _GetMotorPower *****************
 28996 ;; Defined at:
 28997 ;;		line 405 in file "outputs_MC50.c"
 28998 ;; Parameters:    Size  Location     Type
 28999 ;;		None
 29000 ;; Auto vars:     Size  Location     Type
 29001 ;;  defineatraso    1   18[COMRAM] unsigned char 
 29002 ;; Return value:  Size  Location     Type
 29003 ;;                  1    wreg      unsigned char 
 29004 ;; Registers used:
 29005 ;;		wreg, status,2, status,0, prodl, prodh
 29006 ;; Tracked objects:
 29007 ;;		On entry : 3E/1
 29008 ;;		On exit  : 3F/1
 29009 ;;		Unchanged: 0/0
 29010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29013 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29014 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29015 ;;Total ram usage:        4 bytes
 29016 ;; Hardware stack levels used: 1
 29017 ;; Hardware stack levels required when called: 4
 29018 ;; This function calls:
 29019 ;;		Nothing
 29020 ;; This function is called by:
 29021 ;;		_ControlCurrent
 29022 ;;		_InitSoftStart
 29023 ;;		_InitSoftStop
 29024 ;; This function uses a non-reentrant model
 29025 ;;
 29026                           
 29027                           	psect	text127
 29028  00712E                     __ptext127:
 29029                           	callstack 0
 29030  00712E                     _GetMotorPower:
 29031                           	callstack 22
 29032                           
 29033                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 29034                           
 29035                           ;incstack = 0
 29036  00712E  0101               	movlb	1	; () banked
 29037  007130  057B               	decf	_powerControl_st& (0+255),w,b
 29038  007132  A4D8               	btfss	status,2,c
 29039  007134  D006               	goto	l19556
 29040                           
 29041                           ; BSR set to: 1
 29042                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 29043  007136  0100               	movlb	0	; () banked
 29044  007138  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 29045  00713A  0D06               	mullw	6
 29046  00713C  CFF3 F18E          	movff	prodl,_temppower
 29047                           
 29048                           ;outputs_MC50.c: 416:     }
 29049  007140  D043               	goto	l2235
 29050  007142                     l19556:
 29051                           
 29052                           ; BSR set to: 1
 29053                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 29054  007142  0100               	movlb	0	; () banked
 29055  007144  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 29056  007146  0D06               	mullw	6
 29057  007148  CFF3 F082          	movff	prodl,_fullmotorPower
 29058                           
 29059                           ; BSR set to: 0
 29060                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 29061  00714C  0101               	movlb	1	; () banked
 29062  00714E  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29063  007150  D01C               	goto	l19566
 29064  007152  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29065  007154  E103               	bnz	u22310
 29066  007156  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29067  007158  A0D8               	btfss	status,0,c
 29068  00715A  D017               	goto	l19566
 29069  00715C                     u22310:
 29070                           
 29071                           ; BSR set to: 1
 29072                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 29073  00715C  0100               	movlb	0	; () banked
 29074  00715E  5182               	movf	_fullmotorPower& (0+255),w,b
 29075  007160  6E10               	movwf	??_GetMotorPower^0,c
 29076  007162  6A11               	clrf	(??_GetMotorPower+1)^0,c
 29077  007164  0101               	movlb	1	; () banked
 29078  007166  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 29079  007168  5C10               	subwf	??_GetMotorPower^0,w,c
 29080  00716A  5011               	movf	(??_GetMotorPower+1)^0,w,c
 29081  00716C  0A80               	xorlw	128
 29082  00716E  6E12               	movwf	(??_GetMotorPower+2)^0,c
 29083  007170  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29084  007172  0A80               	xorlw	128
 29085  007174  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 29086  007176  B0D8               	btfsc	status,0,c
 29087  007178  D002               	goto	l19564
 29088                           
 29089                           ; BSR set to: 1
 29090                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 29091  00717A  0E01               	movlw	1
 29092  00717C  D004               	goto	L110
 29093  00717E                     l19564:
 29094                           
 29095                           ; BSR set to: 1
 29096                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 29097  00717E  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 29098  007180  0100               	movlb	0	; () banked
 29099  007182  5D82               	subwf	_fullmotorPower& (0+255),w,b
 29100  007184  D017               	goto	L111
 29101  007186                     L110:
 29102  007186  6F8E               	movwf	_temppower& (0+255),b
 29103  007188  D01F               	goto	l2235
 29104  00718A                     l19566:
 29105                           
 29106                           ; BSR set to: 1
 29107  00718A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29108  00718C  D005               	goto	u22330
 29109  00718E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29110  007190  E113               	bnz	l19576
 29111  007192  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29112  007194  B0D8               	btfsc	status,0,c
 29113  007196  D010               	goto	l19576
 29114  007198                     u22330:
 29115                           
 29116                           ; BSR set to: 1
 29117  007198  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29118  00719A  D005               	goto	u22340
 29119  00719C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29120  00719E  E10C               	bnz	l19576
 29121  0071A0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29122  0071A2  B0D8               	btfsc	status,0,c
 29123  0071A4  D009               	goto	l19576
 29124  0071A6                     u22340:
 29125                           
 29126                           ; BSR set to: 1
 29127                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 29128  0071A6  C082  F18E         	movff	_fullmotorPower,_temppower
 29129                           
 29130                           ; BSR set to: 1
 29131                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 29132  0071AA  0E08               	movlw	8
 29133  0071AC  0100               	movlb	0	; () banked
 29134  0071AE  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 29135  0071B0  D00B               	goto	l2235
 29136                           
 29137                           ; BSR set to: 0
 29138                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 29139  0071B2  0E3A               	movlw	58
 29140  0071B4                     L111:
 29141  0071B4  0101               	movlb	1	; () banked
 29142  0071B6  D7E7               	goto	L110
 29143  0071B8                     l19576:
 29144                           
 29145                           ; BSR set to: 1
 29146  0071B8  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29147  0071BA  D006               	goto	l2235
 29148  0071BC  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29149  0071BE  E102               	bnz	u22360
 29150  0071C0  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29151  0071C2  B0D8               	btfsc	status,0,c
 29152  0071C4                     u22360:
 29153                           
 29154                           ; BSR set to: 1
 29155                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 29156  0071C4  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 29157  0071C8                     l2235:
 29158                           
 29159                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 29160  0071C8  0101               	movlb	1	; () banked
 29161  0071CA  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29162  0071CC  D00E               	goto	l19586
 29163  0071CE  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29164  0071D0  E103               	bnz	u22370
 29165  0071D2  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29166  0071D4  A0D8               	btfss	status,0,c
 29167  0071D6  D009               	goto	l19586
 29168  0071D8                     u22370:
 29169                           
 29170                           ; BSR set to: 1
 29171  0071D8  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29172  0071DA  D005               	goto	u22380
 29173  0071DC  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29174  0071DE  E105               	bnz	l19586
 29175  0071E0  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29176  0071E2  B0D8               	btfsc	status,0,c
 29177  0071E4  D002               	goto	l19586
 29178  0071E6                     u22380:
 29179                           
 29180                           ; BSR set to: 1
 29181                           ;outputs_MC50.c: 452:     defineatraso = 5;
 29182  0071E6  0E05               	movlw	5
 29183  0071E8  D001               	goto	L109
 29184  0071EA                     l19586:
 29185                           
 29186                           ; BSR set to: 1
 29187                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 29188  0071EA  0E17               	movlw	23
 29189  0071EC                     L109:
 29190  0071EC  6E13               	movwf	GetMotorPower@defineatraso^0,c
 29191                           
 29192                           ; BSR set to: 1
 29193                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 29194  0071EE  518E               	movf	_temppower& (0+255),w,b
 29195  0071F0  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 29196                           
 29197                           ; BSR set to: 1
 29198  0071F2  0012               	return		;funcret
 29199  0071F4                     __end_of_GetMotorPower:
 29200                           	callstack 0
 29201                           
 29202 ;; *************** function _ControlCounterMoves *****************
 29203 ;; Defined at:
 29204 ;;		line 293 in file "controlMemory_MC50.c"
 29205 ;; Parameters:    Size  Location     Type
 29206 ;;		None
 29207 ;; Auto vars:     Size  Location     Type
 29208 ;;		None
 29209 ;; Return value:  Size  Location     Type
 29210 ;;                  1    wreg      void 
 29211 ;; Registers used:
 29212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29213 ;; Tracked objects:
 29214 ;;		On entry : 3E/1
 29215 ;;		On exit  : 0/0
 29216 ;;		Unchanged: 0/0
 29217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29222 ;;Total ram usage:        0 bytes
 29223 ;; Hardware stack levels used: 1
 29224 ;; Hardware stack levels required when called: 14
 29225 ;; This function calls:
 29226 ;;		_SaveNVM_VarSystem
 29227 ;; This function is called by:
 29228 ;;		_main
 29229 ;; This function uses a non-reentrant model
 29230 ;;
 29231                           
 29232                           	psect	text128
 29233  008544                     __ptext128:
 29234                           	callstack 0
 29235  008544                     _ControlCounterMoves:
 29236                           	callstack 16
 29237                           
 29238                           ;controlMemory_MC50.c: 296:     if(ts_system.timeBetweenSaveCounters<=0)
 29239                           
 29240                           ; BSR set to: 1
 29241                           ;incstack = 0
 29242  008544  0101               	movlb	1	; () banked
 29243  008546  BFC1               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 29244  008548  D005               	goto	u27760
 29245  00854A  51C1               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 29246  00854C  E127               	bnz	l1486
 29247  00854E  05C0               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 29248  008550  B0D8               	btfsc	status,0,c
 29249  008552  0012               	return	
 29250  008554                     u27760:
 29251                           
 29252                           ; BSR set to: 1
 29253                           ;controlMemory_MC50.c: 297:     {;controlMemory_MC50.c: 298:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 29254  008554  0E17               	movlw	23
 29255  008556  6FC1               	movwf	(_ts_system+39)& (0+255),b	;volatile
 29256  008558  0E70               	movlw	112
 29257  00855A  6FC0               	movwf	(_ts_system+38)& (0+255),b	;volatile
 29258                           
 29259                           ; BSR set to: 1
 29260                           ;controlMemory_MC50.c: 300:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 29261  00855C  0100               	movlb	0	; () banked
 29262  00855E  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 29263  008560  0101               	movlb	1	; () banked
 29264  008562  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 29265  008564  E110               	bnz	u27770
 29266  008566  0100               	movlb	0	; () banked
 29267  008568  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 29268  00856A  0101               	movlb	1	; () banked
 29269  00856C  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 29270  00856E  E10B               	bnz	u27770
 29271  008570  0100               	movlb	0	; () banked
 29272  008572  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 29273  008574  0101               	movlb	1	; () banked
 29274  008576  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 29275  008578  E106               	bnz	u27770
 29276  00857A  0100               	movlb	0	; () banked
 29277  00857C  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 29278  00857E  0101               	movlb	1	; () banked
 29279  008580  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 29280  008582  B4D8               	btfsc	status,2,c
 29281  008584  0012               	return	
 29282  008586                     u27770:
 29283                           
 29284                           ; BSR set to: 1
 29285                           ;controlMemory_MC50.c: 301:        {;controlMemory_MC50.c: 302:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 29286  008586  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 29287  00858A  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 29288  00858E  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 29289  008592  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 29290                           
 29291                           ; BSR set to: 1
 29292                           ;controlMemory_MC50.c: 303:            SaveNVM_VarSystem(pageMemoryCounters);
 29293  008596  0E02               	movlw	2
 29294  008598  EC20  F046         	call	_SaveNVM_VarSystem
 29295  00859C                     l1486:
 29296  00859C  0012               	return		;funcret
 29297  00859E                     __end_of_ControlCounterMoves:
 29298                           	callstack 0
 29299                           
 29300 ;; *************** function _SaveNVM_VarSystem *****************
 29301 ;; Defined at:
 29302 ;;		line 175 in file "controlMemory_MC50.c"
 29303 ;; Parameters:    Size  Location     Type
 29304 ;;  page            1    wreg     unsigned char 
 29305 ;; Auto vars:     Size  Location     Type
 29306 ;;  page            1    0[BANK0 ] unsigned char 
 29307 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 29308 ;;  point           1    3[BANK0 ] PTR unsigned char 
 29309 ;;		 -> var_sys_NVM(64), 
 29310 ;; Return value:  Size  Location     Type
 29311 ;;                  1    wreg      void 
 29312 ;; Registers used:
 29313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29314 ;; Tracked objects:
 29315 ;;		On entry : 0/0
 29316 ;;		On exit  : 0/0
 29317 ;;		Unchanged: 0/0
 29318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29320 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29322 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29323 ;;Total ram usage:        4 bytes
 29324 ;; Hardware stack levels used: 1
 29325 ;; Hardware stack levels required when called: 13
 29326 ;; This function calls:
 29327 ;;		_i2c_writeNBytes
 29328 ;; This function is called by:
 29329 ;;		_loadNVM_VarSystem
 29330 ;;		_ResetDefaultMemory
 29331 ;;		_ControlCounterMoves
 29332 ;;		_checkNVM_VarSystem
 29333 ;;		_sm_execute_ControlLearning
 29334 ;;		_sm_execute_menuConfiguration
 29335 ;;		_setValueToEdit
 29336 ;;		_controlSelectRemote
 29337 ;;		_eusartparser
 29338 ;; This function uses a non-reentrant model
 29339 ;;
 29340                           
 29341                           	psect	text129
 29342  008C40                     __ptext129:
 29343                           	callstack 0
 29344  008C40                     _SaveNVM_VarSystem:
 29345                           	callstack 14
 29346                           
 29347                           ;incstack = 0
 29348                           ;SaveNVM_VarSystem@page stored from wreg
 29349  008C40  0100               	movlb	0	; () banked
 29350  008C42  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 29351                           
 29352                           ;controlMemory_MC50.c: 175: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 176: {;controlMemory_MC50.c: 177:     unsigned int tempAdd=page*16;
 29353  008C44  0100               	movlb	0	; () banked
 29354  008C46  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 29355  008C48  0D10               	mullw	16
 29356  008C4A  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 29357  008C4E  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 29358                           
 29359                           ; BSR set to: 0
 29360                           ;controlMemory_MC50.c: 178:     char* point=(char*)&var_sys_NVM;
 29361  008C52  0E98               	movlw	low _var_sys_NVM
 29362  008C54  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 29363                           
 29364                           ; BSR set to: 0
 29365                           ;controlMemory_MC50.c: 179:     point=point+tempAdd;
 29366  008C56  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 29367  008C58  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 29368  008C5A  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 29369                           
 29370                           ; BSR set to: 0
 29371                           ;controlMemory_MC50.c: 180:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 29372  008C5C  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 29373  008C60  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 29374  008C64  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 29375  008C68  0E00               	movlw	0
 29376  008C6A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 29377  008C6C  0E10               	movlw	16
 29378  008C6E  6E25               	movwf	i2c_writeNBytes@len^0,c
 29379  008C70  0E50               	movlw	80
 29380  008C72  EC03  F040         	call	_i2c_writeNBytes
 29381  008C76  0012               	return		;funcret
 29382  008C78                     __end_of_SaveNVM_VarSystem:
 29383                           	callstack 0
 29384                           
 29385 ;; *************** function _i2c_writeNBytes *****************
 29386 ;; Defined at:
 29387 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 29388 ;; Parameters:    Size  Location     Type
 29389 ;;  address         1    wreg     unsigned char 
 29390 ;;  reg             2   33[COMRAM] unsigned short 
 29391 ;;  data            1   35[COMRAM] PTR void 
 29392 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29393 ;;  len             2   36[COMRAM] unsigned int 
 29394 ;; Auto vars:     Size  Location     Type
 29395 ;;  address         1   56[COMRAM] unsigned char 
 29396 ;;  dat            17   39[COMRAM] unsigned char [17]
 29397 ;; Return value:  Size  Location     Type
 29398 ;;                  1    wreg      void 
 29399 ;; Registers used:
 29400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29401 ;; Tracked objects:
 29402 ;;		On entry : 3F/0
 29403 ;;		On exit  : 0/0
 29404 ;;		Unchanged: 0/0
 29405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29406 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29407 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29408 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29409 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29410 ;;Total ram usage:       24 bytes
 29411 ;; Hardware stack levels used: 1
 29412 ;; Hardware stack levels required when called: 12
 29413 ;; This function calls:
 29414 ;;		_I2C1_Close
 29415 ;;		_I2C1_MasterWrite
 29416 ;;		_I2C1_Open
 29417 ;;		_I2C1_SetAddressNackCallback
 29418 ;;		_I2C1_SetBuffer
 29419 ;;		_memcpy
 29420 ;; This function is called by:
 29421 ;;		_saveNewSerial
 29422 ;;		_RemoveSerial
 29423 ;;		_SaveNVM_VarSystem
 29424 ;; This function uses a non-reentrant model
 29425 ;;
 29426                           
 29427                           	psect	text130
 29428  008006                     __ptext130:
 29429                           	callstack 0
 29430  008006                     _i2c_writeNBytes:
 29431                           	callstack 14
 29432                           
 29433                           ;incstack = 0
 29434                           ;i2c_writeNBytes@address stored from wreg
 29435  008006  6E39               	movwf	i2c_writeNBytes@address^0,c
 29436                           
 29437                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 29438  008008  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 29439                           
 29440                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 29441  00800C  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 29442  00800E  6E10               	movwf	memcpy@d1^0,c
 29443  008010  6A11               	clrf	(memcpy@d1+1)^0,c
 29444  008012  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 29445  008016  6A13               	clrf	(memcpy@s1+1)^0,c
 29446  008018  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 29447  00801C  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 29448  008020  EC22  F045         	call	_memcpy	;wreg free
 29449  008024                     l19610:
 29450  008024  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 29451  008026  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 29452  008028  ECD3  F03D         	call	_I2C1_Open
 29453  00802C  0900               	iorlw	0
 29454  00802E  B4D8               	btfsc	status,2,c
 29455  008030  D7F9               	goto	l19610
 29456                           
 29457                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 29458  008032  0E28               	movlw	low i2c_writeNBytes@dat
 29459  008034  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 29460  008036  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 29461  008038  0E01               	movlw	1
 29462  00803A  2425               	addwf	i2c_writeNBytes@len^0,w,c
 29463  00803C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 29464  00803E  0E00               	movlw	0
 29465  008040  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 29466  008042  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 29467  008044  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 29468                           
 29469                           ; BSR set to: 2
 29470                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 29471  008048  0E00               	movlw	0
 29472  00804A  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 29473  00804C  0E00               	movlw	0
 29474  00804E  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 29475  008050  0E00               	movlw	0
 29476  008052  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 29477  008054  0E00               	movlw	0
 29478  008056  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 29479  008058  EC65  F049         	call	_I2C1_SetAddressNackCallback	;wreg free
 29480                           
 29481                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 29482  00805C  EC33  F04A         	call	_I2C1_MasterWrite	;wreg free
 29483  008060                     l19618:
 29484  008060  ECA6  F048         	call	_I2C1_Close	;wreg free
 29485  008064  06E8               	decf	wreg,f,c
 29486  008066  B4D8               	btfsc	status,2,c
 29487  008068  D7FB               	goto	l19618
 29488                           
 29489                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 29490  00806A  0ED0               	movlw	208
 29491  00806C  6E27               	movwf	??_i2c_writeNBytes^0,c
 29492  00806E  0ECA               	movlw	202
 29493  008070                     u29227:
 29494  008070  2EE8               	decfsz	wreg,f,c
 29495  008072  D7FE               	bra	u29227
 29496  008074  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 29497  008076  D7FC               	bra	u29227
 29498  008078  0012               	return		;funcret
 29499  00807A                     __end_of_i2c_writeNBytes:
 29500                           	callstack 0
 29501                           
 29502 ;; *************** function _memcpy *****************
 29503 ;; Defined at:
 29504 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 29505 ;; Parameters:    Size  Location     Type
 29506 ;;  d1              2   15[COMRAM] PTR void 
 29507 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29508 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29509 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 29510 ;;		 -> i2c_writeNBytes@dat(17), 
 29511 ;;  s1              2   17[COMRAM] PTR const void 
 29512 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29513 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29514 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 29515 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29516 ;;  n               2   19[COMRAM] unsigned int 
 29517 ;; Auto vars:     Size  Location     Type
 29518 ;;  s               2   24[COMRAM] PTR const unsigned char 
 29519 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29520 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29521 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 29522 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29523 ;;  d               2   22[COMRAM] PTR unsigned char 
 29524 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29525 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29526 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 29527 ;;		 -> i2c_writeNBytes@dat(17), 
 29528 ;;  tmp             1   21[COMRAM] unsigned char 
 29529 ;; Return value:  Size  Location     Type
 29530 ;;                  2   15[COMRAM] PTR void 
 29531 ;; Registers used:
 29532 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29533 ;; Tracked objects:
 29534 ;;		On entry : 0/0
 29535 ;;		On exit  : 0/0
 29536 ;;		Unchanged: 0/0
 29537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29538 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29539 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29541 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29542 ;;Total ram usage:       11 bytes
 29543 ;; Hardware stack levels used: 1
 29544 ;; Hardware stack levels required when called: 4
 29545 ;; This function calls:
 29546 ;;		Nothing
 29547 ;; This function is called by:
 29548 ;;		_i2c_writeNBytes
 29549 ;;		_getSerialCmd
 29550 ;;		_NormalKeyGen
 29551 ;;		_Decrypt
 29552 ;;		_keeloqDecryptPacket
 29553 ;;		_DecryptPacket_12BIT
 29554 ;; This function uses a non-reentrant model
 29555 ;;
 29556                           
 29557                           	psect	text131
 29558  008A44                     __ptext131:
 29559                           	callstack 0
 29560  008A44                     _memcpy:
 29561                           	callstack 21
 29562                           
 29563                           ;incstack = 0
 29564  008A44  C012  F019         	movff	memcpy@s1,memcpy@s
 29565  008A48  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 29566  008A4C  C010  F017         	movff	memcpy@d1,memcpy@d
 29567  008A50  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 29568  008A54  D010               	goto	l19550
 29569  008A56                     l19542:
 29570  008A56  C019  FFD9         	movff	memcpy@s,fsr2l
 29571  008A5A  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 29572  008A5E  50DF               	movf	indf2,w,c
 29573  008A60  6E16               	movwf	memcpy@tmp^0,c
 29574  008A62  4A19               	infsnz	memcpy@s^0,f,c
 29575  008A64  2A1A               	incf	(memcpy@s+1)^0,f,c
 29576  008A66  C017  FFD9         	movff	memcpy@d,fsr2l
 29577  008A6A  C018  FFDA         	movff	memcpy@d+1,fsr2h
 29578  008A6E  C016  FFDF         	movff	memcpy@tmp,indf2
 29579  008A72  4A17               	infsnz	memcpy@d^0,f,c
 29580  008A74  2A18               	incf	(memcpy@d+1)^0,f,c
 29581  008A76                     l19550:
 29582  008A76  0614               	decf	memcpy@n^0,f,c
 29583  008A78  A0D8               	btfss	status,0,c
 29584  008A7A  0615               	decf	(memcpy@n+1)^0,f,c
 29585  008A7C  2814               	incf	memcpy@n^0,w,c
 29586  008A7E  E1EB               	bnz	l19542
 29587  008A80  2815               	incf	(memcpy@n+1)^0,w,c
 29588  008A82  B4D8               	btfsc	status,2,c
 29589  008A84  0012               	return	
 29590  008A86  D7E7               	goto	l19542
 29591  008A88                     __end_of_memcpy:
 29592                           	callstack 0
 29593                           
 29594 ;; *************** function _I2C1_SetAddressNackCallback *****************
 29595 ;; Defined at:
 29596 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 29597 ;; Parameters:    Size  Location     Type
 29598 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 29599 ;;		 -> Absolute function(1), 
 29600 ;;  ptr             2   22[COMRAM] PTR void 
 29601 ;;		 -> NULL(0), 
 29602 ;; Auto vars:     Size  Location     Type
 29603 ;;		None
 29604 ;; Return value:  Size  Location     Type
 29605 ;;                  1    wreg      void 
 29606 ;; Registers used:
 29607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29608 ;; Tracked objects:
 29609 ;;		On entry : 3F/2
 29610 ;;		On exit  : 0/0
 29611 ;;		Unchanged: 0/0
 29612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29617 ;;Total ram usage:        4 bytes
 29618 ;; Hardware stack levels used: 1
 29619 ;; Hardware stack levels required when called: 5
 29620 ;; This function calls:
 29621 ;;		_I2C1_SetCallback
 29622 ;; This function is called by:
 29623 ;;		_i2c_writeNBytes
 29624 ;;		_i2c_readDataBlock
 29625 ;;		_I2C1_Read1ByteRegister
 29626 ;; This function uses a non-reentrant model
 29627 ;;
 29628                           
 29629                           	psect	text132
 29630  0092CA                     __ptext132:
 29631                           	callstack 0
 29632  0092CA                     _I2C1_SetAddressNackCallback:
 29633                           	callstack 20
 29634                           
 29635                           ; BSR set to: 2
 29636                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 29637                           
 29638                           ;incstack = 0
 29639  0092CA  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 29640  0092CE  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 29641  0092D2  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 29642  0092D6  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 29643  0092DA  0E02               	movlw	2
 29644  0092DC  ECE4  F040         	call	_I2C1_SetCallback
 29645  0092E0  0012               	return		;funcret
 29646  0092E2                     __end_of_I2C1_SetAddressNackCallback:
 29647                           	callstack 0
 29648                           
 29649 ;; *************** function _I2C1_Open *****************
 29650 ;; Defined at:
 29651 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 29652 ;; Parameters:    Size  Location     Type
 29653 ;;  address         1    wreg     unsigned char 
 29654 ;; Auto vars:     Size  Location     Type
 29655 ;;  address         1   15[COMRAM] unsigned char 
 29656 ;;  returnValue     1   16[COMRAM] enum E355
 29657 ;; Return value:  Size  Location     Type
 29658 ;;                  1    wreg      enum E355
 29659 ;; Registers used:
 29660 ;;		wreg, status,2, status,0, cstack
 29661 ;; Tracked objects:
 29662 ;;		On entry : 0/0
 29663 ;;		On exit  : 33/2
 29664 ;;		Unchanged: 0/0
 29665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29667 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29670 ;;Total ram usage:        2 bytes
 29671 ;; Hardware stack levels used: 1
 29672 ;; Hardware stack levels required when called: 5
 29673 ;; This function calls:
 29674 ;;		_I2C1_MasterClearIrq
 29675 ;;		_I2C1_MasterOpen
 29676 ;; This function is called by:
 29677 ;;		_i2c_writeNBytes
 29678 ;;		_i2c_readDataBlock
 29679 ;;		_I2C1_Read1ByteRegister
 29680 ;; This function uses a non-reentrant model
 29681 ;;
 29682                           
 29683                           	psect	text133
 29684  007BA6                     __ptext133:
 29685                           	callstack 0
 29686  007BA6                     _I2C1_Open:
 29687                           	callstack 20
 29688                           
 29689                           ;incstack = 0
 29690                           ;I2C1_Open@address stored from wreg
 29691  007BA6  6E10               	movwf	I2C1_Open@address^0,c
 29692                           
 29693                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 29694  007BA8  0E01               	movlw	1
 29695  007BAA  6E11               	movwf	I2C1_Open@returnValue^0,c
 29696                           
 29697                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 29698  007BAC  0102               	movlb	2	; () banked
 29699  007BAE  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 29700  007BB0  D03A               	goto	l19516
 29701                           
 29702                           ; BSR set to: 2
 29703                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 29704  007BB2  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 29705                           
 29706                           ; BSR set to: 2
 29707                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 29708  007BB6  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 29709                           
 29710                           ; BSR set to: 2
 29711                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 29712  007BB8  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 29713                           
 29714                           ; BSR set to: 2
 29715                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 29716  007BBA  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 29717                           
 29718                           ; BSR set to: 2
 29719                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 29720  007BBC  0E0E               	movlw	14
 29721  007BBE  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 29722                           
 29723                           ; BSR set to: 2
 29724                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 29725  007BC0  0E01               	movlw	1
 29726  007BC2  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 29727  007BC4  0EF4               	movlw	244
 29728  007BC6  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 29729                           
 29730                           ; BSR set to: 2
 29731                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 29732  007BC8  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 29733                           
 29734                           ; BSR set to: 2
 29735                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 29736  007BCA  0E00               	movlw	low _I2C1_CallbackReturnStop
 29737  007BCC  6F3C               	movwf	_I2C1_Status& (0+255),b
 29738  007BCE  0E95               	movlw	high _I2C1_CallbackReturnStop
 29739  007BD0  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 29740                           
 29741                           ; BSR set to: 2
 29742                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 29743  007BD2  0E00               	movlw	0
 29744  007BD4  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 29745  007BD6  0E00               	movlw	0
 29746  007BD8  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 29747                           
 29748                           ; BSR set to: 2
 29749                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 29750  007BDA  0E00               	movlw	low _I2C1_CallbackReturnStop
 29751  007BDC  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 29752  007BDE  0E95               	movlw	high _I2C1_CallbackReturnStop
 29753  007BE0  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 29754                           
 29755                           ; BSR set to: 2
 29756                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 29757  007BE2  0E00               	movlw	0
 29758  007BE4  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 29759  007BE6  0E00               	movlw	0
 29760  007BE8  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 29761                           
 29762                           ; BSR set to: 2
 29763                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29764  007BEA  0E00               	movlw	low _I2C1_CallbackReturnStop
 29765  007BEC  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 29766  007BEE  0E95               	movlw	high _I2C1_CallbackReturnStop
 29767  007BF0  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 29768                           
 29769                           ; BSR set to: 2
 29770                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 29771  007BF2  0E00               	movlw	0
 29772  007BF4  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 29773  007BF6  0E00               	movlw	0
 29774  007BF8  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 29775                           
 29776                           ; BSR set to: 2
 29777                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 29778  007BFA  0E00               	movlw	low _I2C1_CallbackReturnStop
 29779  007BFC  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 29780  007BFE  0E95               	movlw	high _I2C1_CallbackReturnStop
 29781  007C00  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 29782                           
 29783                           ; BSR set to: 2
 29784                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 29785  007C02  0E00               	movlw	0
 29786  007C04  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 29787  007C06  0E00               	movlw	0
 29788  007C08  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 29789                           
 29790                           ; BSR set to: 2
 29791                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 29792  007C0A  0EFC               	movlw	low _I2C1_CallbackReturnReset
 29793  007C0C  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 29794  007C0E  0E94               	movlw	high _I2C1_CallbackReturnReset
 29795  007C10  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 29796                           
 29797                           ; BSR set to: 2
 29798                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 29799  007C12  0E00               	movlw	0
 29800  007C14  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 29801  007C16  0E00               	movlw	0
 29802  007C18  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 29803                           
 29804                           ; BSR set to: 2
 29805                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 29806  007C1A  EC6A  F04A         	call	_I2C1_MasterClearIrq	;wreg free
 29807                           
 29808                           ; BSR set to: 14
 29809                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 29810  007C1E  EC71  F049         	call	_I2C1_MasterOpen	;wreg free
 29811                           
 29812                           ; BSR set to: 14
 29813                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 29814  007C22  0E00               	movlw	0
 29815  007C24  6E11               	movwf	I2C1_Open@returnValue^0,c
 29816  007C26                     l19516:
 29817                           
 29818                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 29819  007C26  5011               	movf	I2C1_Open@returnValue^0,w,c
 29820  007C28  0012               	return		;funcret
 29821  007C2A                     __end_of_I2C1_Open:
 29822                           	callstack 0
 29823                           
 29824 ;; *************** function _I2C1_MasterOpen *****************
 29825 ;; Defined at:
 29826 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 29827 ;; Parameters:    Size  Location     Type
 29828 ;;		None
 29829 ;; Auto vars:     Size  Location     Type
 29830 ;;		None
 29831 ;; Return value:  Size  Location     Type
 29832 ;;                  1    wreg      _Bool 
 29833 ;; Registers used:
 29834 ;;		wreg, status,2
 29835 ;; Tracked objects:
 29836 ;;		On entry : 3F/E
 29837 ;;		On exit  : 3F/E
 29838 ;;		Unchanged: 3F/0
 29839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29844 ;;Total ram usage:        0 bytes
 29845 ;; Hardware stack levels used: 1
 29846 ;; Hardware stack levels required when called: 4
 29847 ;; This function calls:
 29848 ;;		Nothing
 29849 ;; This function is called by:
 29850 ;;		_I2C1_Open
 29851 ;; This function uses a non-reentrant model
 29852 ;;
 29853                           
 29854                           	psect	text134
 29855  0092E2                     __ptext134:
 29856                           	callstack 0
 29857  0092E2                     _I2C1_MasterOpen:
 29858                           	callstack 20
 29859                           
 29860                           ; BSR set to: 14
 29861                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 29862                           
 29863                           ;incstack = 0
 29864  0092E2  BA96               	btfsc	150,5,c	;volatile
 29865  0092E4  0012               	return	
 29866                           
 29867                           ; BSR set to: 14
 29868                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 29869  0092E6  0E80               	movlw	128
 29870  0092E8  6E95               	movwf	149,c	;volatile
 29871                           
 29872                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 29873  0092EA  0E08               	movlw	8
 29874  0092EC  6E96               	movwf	150,c	;volatile
 29875                           
 29876                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 29877  0092EE  0E00               	movlw	0
 29878  0092F0  6E97               	movwf	151,c	;volatile
 29879                           
 29880                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 29881  0092F2  0E9F               	movlw	159
 29882  0092F4  6E93               	movwf	147,c	;volatile
 29883                           
 29884                           ; BSR set to: 14
 29885                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 29886  0092F6  8A96               	bsf	150,5,c	;volatile
 29887                           
 29888                           ; BSR set to: 14
 29889  0092F8  0012               	return		;funcret
 29890  0092FA                     __end_of_I2C1_MasterOpen:
 29891                           	callstack 0
 29892                           
 29893 ;; *************** function _I2C1_MasterWrite *****************
 29894 ;; Defined at:
 29895 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 29896 ;; Parameters:    Size  Location     Type
 29897 ;;		None
 29898 ;; Auto vars:     Size  Location     Type
 29899 ;;		None
 29900 ;; Return value:  Size  Location     Type
 29901 ;;                  1    wreg      enum E355
 29902 ;; Registers used:
 29903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29904 ;; Tracked objects:
 29905 ;;		On entry : 0/2
 29906 ;;		On exit  : 3F/2
 29907 ;;		Unchanged: 0/0
 29908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29913 ;;Total ram usage:        0 bytes
 29914 ;; Hardware stack levels used: 1
 29915 ;; Hardware stack levels required when called: 11
 29916 ;; This function calls:
 29917 ;;		_I2C1_MasterOperation
 29918 ;; This function is called by:
 29919 ;;		_i2c_writeNBytes
 29920 ;;		_i2c_readDataBlock
 29921 ;;		_I2C1_Read1ByteRegister
 29922 ;; This function uses a non-reentrant model
 29923 ;;
 29924                           
 29925                           	psect	text135
 29926  009466                     __ptext135:
 29927                           	callstack 0
 29928  009466                     _I2C1_MasterWrite:
 29929                           	callstack 14
 29930                           
 29931                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 29932                           
 29933                           ; BSR set to: 14
 29934                           ;incstack = 0
 29935  009466  0E00               	movlw	0
 29936  009468  EC0F  F047         	call	_I2C1_MasterOperation
 29937                           
 29938                           ; BSR set to: 2
 29939  00946C  0012               	return		;funcret
 29940  00946E                     __end_of_I2C1_MasterWrite:
 29941                           	callstack 0
 29942                           
 29943 ;; *************** function _I2C1_MasterOperation *****************
 29944 ;; Defined at:
 29945 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 29946 ;; Parameters:    Size  Location     Type
 29947 ;;  read            1    wreg     _Bool 
 29948 ;; Auto vars:     Size  Location     Type
 29949 ;;  read            1   31[COMRAM] _Bool 
 29950 ;;  returnValue     1   32[COMRAM] enum E355
 29951 ;; Return value:  Size  Location     Type
 29952 ;;                  1    wreg      enum E355
 29953 ;; Registers used:
 29954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29955 ;; Tracked objects:
 29956 ;;		On entry : 0/2
 29957 ;;		On exit  : 3F/2
 29958 ;;		Unchanged: 0/0
 29959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29964 ;;Total ram usage:        2 bytes
 29965 ;; Hardware stack levels used: 1
 29966 ;; Hardware stack levels required when called: 10
 29967 ;; This function calls:
 29968 ;;		_I2C1_MasterStart
 29969 ;;		_I2C1_Poller
 29970 ;; This function is called by:
 29971 ;;		_I2C1_MasterWrite
 29972 ;; This function uses a non-reentrant model
 29973 ;;
 29974                           
 29975                           	psect	text136
 29976  008E1E                     __ptext136:
 29977                           	callstack 0
 29978  008E1E                     _I2C1_MasterOperation:
 29979                           	callstack 14
 29980                           
 29981                           ; BSR set to: 2
 29982                           ;incstack = 0
 29983                           ;I2C1_MasterOperation@read stored from wreg
 29984  008E1E  6E20               	movwf	I2C1_MasterOperation@read^0,c
 29985                           
 29986                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 29987  008E20  0E01               	movlw	1
 29988  008E22  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 29989                           
 29990                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 29991  008E24  0102               	movlb	2	; () banked
 29992  008E26  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 29993  008E28  D00E               	goto	l19468
 29994                           
 29995                           ; BSR set to: 2
 29996                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 29997  008E2A  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 29998                           
 29999                           ; BSR set to: 2
 30000                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 30001  008E2C  0E00               	movlw	0
 30002  008E2E  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 30003                           
 30004                           ; BSR set to: 2
 30005                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 30006  008E30  5020               	movf	I2C1_MasterOperation@read^0,w,c
 30007  008E32  B4D8               	btfsc	status,2,c
 30008  008E34  D002               	goto	l19462
 30009                           
 30010                           ; BSR set to: 2
 30011                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 30012  008E36  0E01               	movlw	1
 30013  008E38  D001               	goto	L112
 30014  008E3A                     l19462:
 30015                           
 30016                           ; BSR set to: 2
 30017                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 30018  008E3A  0E02               	movlw	2
 30019  008E3C                     L112:
 30020  008E3C  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30021                           
 30022                           ; BSR set to: 2
 30023                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 30024  008E3E  EC86  F04A         	call	_I2C1_MasterStart	;wreg free
 30025                           
 30026                           ; BSR set to: 2
 30027                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 30028  008E42  ECCE  F049         	call	_I2C1_Poller	;wreg free
 30029  008E46                     l19468:
 30030                           
 30031                           ; BSR set to: 2
 30032                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 30033  008E46  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 30034                           
 30035                           ; BSR set to: 2
 30036  008E48  0012               	return		;funcret
 30037  008E4A                     __end_of_I2C1_MasterOperation:
 30038                           	callstack 0
 30039                           
 30040 ;; *************** function _I2C1_Poller *****************
 30041 ;; Defined at:
 30042 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 30043 ;; Parameters:    Size  Location     Type
 30044 ;;		None
 30045 ;; Auto vars:     Size  Location     Type
 30046 ;;		None
 30047 ;; Return value:  Size  Location     Type
 30048 ;;                  1    wreg      void 
 30049 ;; Registers used:
 30050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30051 ;; Tracked objects:
 30052 ;;		On entry : 3F/2
 30053 ;;		On exit  : 3F/2
 30054 ;;		Unchanged: 0/0
 30055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30060 ;;Total ram usage:        0 bytes
 30061 ;; Hardware stack levels used: 1
 30062 ;; Hardware stack levels required when called: 9
 30063 ;; This function calls:
 30064 ;;		_I2C1_MasterFsm
 30065 ;;		_I2C1_MasterWaitForEvent
 30066 ;; This function is called by:
 30067 ;;		_I2C1_MasterOperation
 30068 ;; This function uses a non-reentrant model
 30069 ;;
 30070                           
 30071                           	psect	text137
 30072  00939C                     __ptext137:
 30073                           	callstack 0
 30074  00939C                     _I2C1_Poller:
 30075                           	callstack 14
 30076                           
 30077                           ; BSR set to: 2
 30078                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 30079                           
 30080                           ; BSR set to: 2
 30081                           ;incstack = 0
 30082  00939C  D004               	goto	l19436
 30083  00939E                     l19432:
 30084                           
 30085                           ; BSR set to: 2
 30086                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 30087  00939E  EC37  F04A         	call	_I2C1_MasterWaitForEvent	;wreg free
 30088                           
 30089                           ; BSR set to: 14
 30090                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 30091  0093A2  EC7C  F043         	call	_I2C1_MasterFsm	;wreg free
 30092  0093A6                     l19436:
 30093                           
 30094                           ; BSR set to: 2
 30095                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 30096  0093A6  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 30097  0093A8  0012               	return	
 30098  0093AA  D7F9               	goto	l19432
 30099  0093AC                     __end_of_I2C1_Poller:
 30100                           	callstack 0
 30101                           
 30102 ;; *************** function _I2C1_MasterWaitForEvent *****************
 30103 ;; Defined at:
 30104 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 30105 ;; Parameters:    Size  Location     Type
 30106 ;;		None
 30107 ;; Auto vars:     Size  Location     Type
 30108 ;;		None
 30109 ;; Return value:  Size  Location     Type
 30110 ;;                  1    wreg      void 
 30111 ;; Registers used:
 30112 ;;		None
 30113 ;; Tracked objects:
 30114 ;;		On entry : 3F/2
 30115 ;;		On exit  : 3F/E
 30116 ;;		Unchanged: 0/0
 30117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30122 ;;Total ram usage:        0 bytes
 30123 ;; Hardware stack levels used: 1
 30124 ;; Hardware stack levels required when called: 4
 30125 ;; This function calls:
 30126 ;;		Nothing
 30127 ;; This function is called by:
 30128 ;;		_I2C1_Poller
 30129 ;; This function uses a non-reentrant model
 30130 ;;
 30131                           
 30132                           	psect	text138
 30133  00946E                     __ptext138:
 30134                           	callstack 0
 30135  00946E                     _I2C1_MasterWaitForEvent:
 30136                           	callstack 18
 30137                           
 30138                           ; BSR set to: 2
 30139                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 30140                           
 30141                           ; BSR set to: 2
 30142                           ;incstack = 0
 30143                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 30144  00946E  010E               	movlb	14	; () banked
 30145  009470  B1CD               	btfsc	205,0,b	;volatile
 30146  009472  0012               	return	
 30147  009474  D7FC               	goto	__ptext138
 30148  009476                     __end_of_I2C1_MasterWaitForEvent:
 30149                           	callstack 0
 30150                           
 30151 ;; *************** function _I2C1_MasterFsm *****************
 30152 ;; Defined at:
 30153 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 30154 ;; Parameters:    Size  Location     Type
 30155 ;;		None
 30156 ;; Auto vars:     Size  Location     Type
 30157 ;;		None
 30158 ;; Return value:  Size  Location     Type
 30159 ;;                  1    wreg      void 
 30160 ;; Registers used:
 30161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30162 ;; Tracked objects:
 30163 ;;		On entry : 3F/E
 30164 ;;		On exit  : 3F/2
 30165 ;;		Unchanged: 0/0
 30166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30169 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30171 ;;Total ram usage:        3 bytes
 30172 ;; Hardware stack levels used: 1
 30173 ;; Hardware stack levels required when called: 8
 30174 ;; This function calls:
 30175 ;;		_I2C1_DO_ADDRESS_NACK
 30176 ;;		_I2C1_DO_IDLE
 30177 ;;		_I2C1_DO_RCEN
 30178 ;;		_I2C1_DO_RESET
 30179 ;;		_I2C1_DO_RX
 30180 ;;		_I2C1_DO_RX_ACK
 30181 ;;		_I2C1_DO_RX_NACK_RESTART
 30182 ;;		_I2C1_DO_RX_NACK_STOP
 30183 ;;		_I2C1_DO_SEND_ADR_READ
 30184 ;;		_I2C1_DO_SEND_ADR_WRITE
 30185 ;;		_I2C1_DO_SEND_RESTART
 30186 ;;		_I2C1_DO_SEND_RESTART_READ
 30187 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30188 ;;		_I2C1_DO_SEND_STOP
 30189 ;;		_I2C1_DO_TX
 30190 ;;		_I2C1_DO_TX_EMPTY
 30191 ;;		_I2C1_MasterClearIrq
 30192 ;;		_I2C1_MasterIsNack
 30193 ;; This function is called by:
 30194 ;;		_I2C1_Poller
 30195 ;; This function uses a non-reentrant model
 30196 ;;
 30197                           
 30198                           	psect	text139
 30199  0086F8                     __ptext139:
 30200                           	callstack 0
 30201  0086F8                     _I2C1_MasterFsm:
 30202                           	callstack 14
 30203                           
 30204                           ; BSR set to: 14
 30205                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 30206                           
 30207                           ; BSR set to: 14
 30208                           ;incstack = 0
 30209  0086F8  EC6A  F04A         	call	_I2C1_MasterClearIrq	;wreg free
 30210                           
 30211                           ; BSR set to: 14
 30212                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 30213  0086FC  0102               	movlb	2	; () banked
 30214  0086FE  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 30215  008700  D007               	goto	l19426
 30216                           
 30217                           ; BSR set to: 2
 30218  008702  ECEB  F049         	call	_I2C1_MasterIsNack	;wreg free
 30219  008706  0900               	iorlw	0
 30220  008708  B4D8               	btfsc	status,2,c
 30221  00870A  D002               	goto	l19426
 30222                           
 30223                           ; BSR set to: 2
 30224                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 30225  00870C  0E0F               	movlw	15
 30226  00870E  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30227  008710                     l19426:
 30228                           
 30229                           ; BSR set to: 2
 30230                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 30231  008710  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 30232  008712  0D02               	mullw	2
 30233  008714  50F3               	movf	243,w,c
 30234  008716  0F01               	addlw	low _i2c1_fsmStateTable
 30235  008718  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 30236  00871A  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 30237  00871E                     	if	1	;There is more than 1 active tblptr byte
 30238  00871E  0E0F               	movlw	high __smallconst
 30239  008720  6EF7               	movwf	tblptrh,c
 30240  008722                     	endif
 30241  008722                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30242  008722  6AF8               	clrf	tblptru,c
 30243  008724                     	endif
 30244  008724                     	if	0	;tblptru may be non-zero
 30245  008724                     	endif
 30246  008724  0009               	tblrd		*+
 30247  008726  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 30248  00872A  0009               	tblrd		*+
 30249  00872C  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 30250  008730  D801               	call	u22228
 30251  008732  D009               	goto	u22229
 30252  008734                     u22228:
 30253  008734  0005               	push	
 30254  008736  6EFA               	movwf	pclath,c
 30255  008738  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 30256  00873A  6EFD               	movwf	tosl,c
 30257  00873C  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 30258  00873E  6EFE               	movwf	tosh,c
 30259  008740  6AFF               	clrf	tosu,c
 30260  008742  50FA               	movf	pclath,w,c
 30261  008744  0012               	return		;indir
 30262  008746                     u22229:
 30263  008746  0102               	movlb	2	; () banked
 30264  008748  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30265                           
 30266                           ; BSR set to: 2
 30267  00874A  0012               	return		;funcret
 30268  00874C                     __end_of_I2C1_MasterFsm:
 30269                           	callstack 0
 30270                           
 30271 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 30272 ;; Defined at:
 30273 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 30274 ;; Parameters:    Size  Location     Type
 30275 ;;		None
 30276 ;; Auto vars:     Size  Location     Type
 30277 ;;		None
 30278 ;; Return value:  Size  Location     Type
 30279 ;;                  1    wreg      enum E10442
 30280 ;; Registers used:
 30281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30282 ;; Tracked objects:
 30283 ;;		On entry : 3F/2
 30284 ;;		On exit  : 0/0
 30285 ;;		Unchanged: 0/0
 30286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30291 ;;Total ram usage:        2 bytes
 30292 ;; Hardware stack levels used: 1
 30293 ;; Hardware stack levels required when called: 7
 30294 ;; This function calls:
 30295 ;;		Absolute function
 30296 ;;		_I2C1_CallbackReturnReset
 30297 ;;		_I2C1_CallbackReturnStop
 30298 ;;		_I2C1_DO_SEND_RESTART
 30299 ;;		_I2C1_DO_SEND_STOP
 30300 ;;		_rd1RegCompleteHandler
 30301 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30302 ;;		_rd2RegCompleteHandler
 30303 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30304 ;;		_rdBlkRegCompleteHandler
 30305 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30306 ;;		_wr1RegCompleteHandler
 30307 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30308 ;;		_wr2RegCompleteHandler
 30309 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30310 ;; This function is called by:
 30311 ;;		_I2C1_MasterFsm
 30312 ;; This function uses a non-reentrant model
 30313 ;;
 30314                           
 30315                           	psect	text140
 30316  0088DA                     __ptext140:
 30317                           	callstack 0
 30318  0088DA                     _I2C1_DO_ADDRESS_NACK:
 30319                           	callstack 14
 30320                           
 30321                           ; BSR set to: 2
 30322                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 30323                           
 30324                           ; BSR set to: 2
 30325                           ;incstack = 0
 30326  0088DA  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30327                           
 30328                           ; BSR set to: 2
 30329                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 30330  0088DC  0E02               	movlw	2
 30331  0088DE  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30332                           
 30333                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 30334  0088E0  D006               	goto	l19410
 30335  0088E2                     l19400:
 30336                           
 30337                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 30338  0088E2  EC4B  F04A         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30339  0088E6  0012               	return	
 30340  0088E8                     l19404:
 30341                           
 30342                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 30343  0088E8  EC47  F04A         	call	_I2C1_DO_SEND_STOP	;wreg free
 30344  0088EC  0012               	return	
 30345  0088EE                     l19410:
 30346                           
 30347                           ; BSR set to: 2
 30348  0088EE  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 30349  0088F2  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 30350  0088F6  D801               	call	u22188
 30351  0088F8  D009               	goto	u22189
 30352  0088FA                     u22188:
 30353  0088FA  0005               	push	
 30354  0088FC  6EFA               	movwf	pclath,c
 30355  0088FE  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 30356  008900  6EFD               	movwf	tosl,c
 30357  008902  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 30358  008904  6EFE               	movwf	tosh,c
 30359  008906  6AFF               	clrf	tosu,c
 30360  008908  50FA               	movf	pclath,w,c
 30361  00890A  0012               	return		;indir
 30362  00890C                     u22189:
 30363  00890C  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 30364  00890E  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 30365                           
 30366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30367                           ; Switch size 1, requested type "simple"
 30368                           ; Number of cases is 1, Range of values is 0 to 0
 30369                           ; switch strategies available:
 30370                           ; Name         Instructions Cycles
 30371                           ; simple_byte            4     3 (average)
 30372                           ;	Chosen strategy is simple_byte
 30373  008910  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 30374  008912  0A00               	xorlw	0	; case 0
 30375  008914  A4D8               	btfss	status,2,c
 30376  008916  D7E8               	goto	l19404
 30377                           
 30378                           ; Switch size 1, requested type "simple"
 30379                           ; Number of cases is 2, Range of values is 2 to 3
 30380                           ; switch strategies available:
 30381                           ; Name         Instructions Cycles
 30382                           ; simple_byte            7     4 (average)
 30383                           ;	Chosen strategy is simple_byte
 30384  008918  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 30385  00891A  0A02               	xorlw	2	; case 2
 30386  00891C  B4D8               	btfsc	status,2,c
 30387  00891E  D7E1               	goto	l19400
 30388  008920  0A01               	xorlw	1	; case 3
 30389  008922  B4D8               	btfsc	status,2,c
 30390  008924  D7DE               	goto	l19400
 30391  008926  D7E0               	goto	l19404
 30392  008928                     __end_of_I2C1_DO_ADDRESS_NACK:
 30393                           	callstack 0
 30394                           
 30395 ;; *************** function _I2C1_DO_RESET *****************
 30396 ;; Defined at:
 30397 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 30398 ;; Parameters:    Size  Location     Type
 30399 ;;		None
 30400 ;; Auto vars:     Size  Location     Type
 30401 ;;		None
 30402 ;; Return value:  Size  Location     Type
 30403 ;;                  1    wreg      enum E10442
 30404 ;; Registers used:
 30405 ;;		wreg, status,2
 30406 ;; Tracked objects:
 30407 ;;		On entry : 3F/2
 30408 ;;		On exit  : 3F/2
 30409 ;;		Unchanged: 0/0
 30410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30415 ;;Total ram usage:        0 bytes
 30416 ;; Hardware stack levels used: 1
 30417 ;; Hardware stack levels required when called: 4
 30418 ;; This function calls:
 30419 ;;		Nothing
 30420 ;; This function is called by:
 30421 ;;		_I2C1_MasterFsm
 30422 ;; This function uses a non-reentrant model
 30423 ;;
 30424                           
 30425                           	psect	text141
 30426  009448                     __ptext141:
 30427                           	callstack 0
 30428  009448                     _I2C1_DO_RESET:
 30429                           	callstack 17
 30430                           
 30431                           ; BSR set to: 2
 30432                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 30433                           
 30434                           ;incstack = 0
 30435  009448  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30436                           
 30437                           ; BSR set to: 2
 30438                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 30439  00944A  0E00               	movlw	0
 30440  00944C  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30441                           
 30442                           ; BSR set to: 2
 30443                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 30444  00944E  0E0E               	movlw	14
 30445                           
 30446                           ; BSR set to: 2
 30447  009450  0012               	return		;funcret
 30448  009452                     __end_of_I2C1_DO_RESET:
 30449                           	callstack 0
 30450                           
 30451 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 30452 ;; Defined at:
 30453 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 30454 ;; Parameters:    Size  Location     Type
 30455 ;;		None
 30456 ;; Auto vars:     Size  Location     Type
 30457 ;;		None
 30458 ;; Return value:  Size  Location     Type
 30459 ;;                  1    wreg      enum E10442
 30460 ;; Registers used:
 30461 ;;		wreg, cstack
 30462 ;; Tracked objects:
 30463 ;;		On entry : 0/2
 30464 ;;		On exit  : 0/0
 30465 ;;		Unchanged: 0/0
 30466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30471 ;;Total ram usage:        0 bytes
 30472 ;; Hardware stack levels used: 1
 30473 ;; Hardware stack levels required when called: 5
 30474 ;; This function calls:
 30475 ;;		_I2C1_MasterSendNack
 30476 ;; This function is called by:
 30477 ;;		_I2C1_DO_RX
 30478 ;;		_I2C1_MasterFsm
 30479 ;; This function uses a non-reentrant model
 30480 ;;
 30481                           
 30482                           	psect	text142
 30483  009476                     __ptext142:
 30484                           	callstack 0
 30485  009476                     _I2C1_DO_RX_NACK_RESTART:
 30486                           	callstack 16
 30487                           
 30488                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 30489                           
 30490                           ; BSR set to: 2
 30491                           ;incstack = 0
 30492  009476  EC67  F04A         	call	_I2C1_MasterSendNack	;wreg free
 30493                           
 30494                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 30495  00947A  0E09               	movlw	9
 30496  00947C  0012               	return		;funcret
 30497  00947E                     __end_of_I2C1_DO_RX_NACK_RESTART:
 30498                           	callstack 0
 30499                           
 30500 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 30501 ;; Defined at:
 30502 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 30503 ;; Parameters:    Size  Location     Type
 30504 ;;		None
 30505 ;; Auto vars:     Size  Location     Type
 30506 ;;		None
 30507 ;; Return value:  Size  Location     Type
 30508 ;;                  1    wreg      enum E10442
 30509 ;; Registers used:
 30510 ;;		wreg, cstack
 30511 ;; Tracked objects:
 30512 ;;		On entry : 0/2
 30513 ;;		On exit  : 0/0
 30514 ;;		Unchanged: 0/0
 30515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30520 ;;Total ram usage:        0 bytes
 30521 ;; Hardware stack levels used: 1
 30522 ;; Hardware stack levels required when called: 5
 30523 ;; This function calls:
 30524 ;;		_I2C1_MasterSendNack
 30525 ;; This function is called by:
 30526 ;;		_I2C1_DO_RX
 30527 ;;		_I2C1_MasterFsm
 30528 ;; This function uses a non-reentrant model
 30529 ;;
 30530                           
 30531                           	psect	text143
 30532  00947E                     __ptext143:
 30533                           	callstack 0
 30534  00947E                     _I2C1_DO_RX_NACK_STOP:
 30535                           	callstack 16
 30536                           
 30537                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 30538                           
 30539                           ;incstack = 0
 30540  00947E  EC67  F04A         	call	_I2C1_MasterSendNack	;wreg free
 30541                           
 30542                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 30543  009482  0E0A               	movlw	10
 30544  009484  0012               	return		;funcret
 30545  009486                     __end_of_I2C1_DO_RX_NACK_STOP:
 30546                           	callstack 0
 30547                           
 30548 ;; *************** function _I2C1_DO_RX_ACK *****************
 30549 ;; Defined at:
 30550 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 30551 ;; Parameters:    Size  Location     Type
 30552 ;;		None
 30553 ;; Auto vars:     Size  Location     Type
 30554 ;;		None
 30555 ;; Return value:  Size  Location     Type
 30556 ;;                  1    wreg      enum E10442
 30557 ;; Registers used:
 30558 ;;		wreg, cstack
 30559 ;; Tracked objects:
 30560 ;;		On entry : 3F/2
 30561 ;;		On exit  : 3F/2
 30562 ;;		Unchanged: 3F/0
 30563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30568 ;;Total ram usage:        0 bytes
 30569 ;; Hardware stack levels used: 1
 30570 ;; Hardware stack levels required when called: 5
 30571 ;; This function calls:
 30572 ;;		_I2C1_MasterSendAck
 30573 ;; This function is called by:
 30574 ;;		_I2C1_MasterFsm
 30575 ;; This function uses a non-reentrant model
 30576 ;;
 30577                           
 30578                           	psect	text144
 30579  009486                     __ptext144:
 30580                           	callstack 0
 30581  009486                     _I2C1_DO_RX_ACK:
 30582                           	callstack 16
 30583                           
 30584                           ; BSR set to: 2
 30585                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 30586                           
 30587                           ;incstack = 0
 30588  009486  EC64  F04A         	call	_I2C1_MasterSendAck	;wreg free
 30589                           
 30590                           ; BSR set to: 2
 30591                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 30592  00948A  0E05               	movlw	5
 30593                           
 30594                           ; BSR set to: 2
 30595  00948C  0012               	return		;funcret
 30596  00948E                     __end_of_I2C1_DO_RX_ACK:
 30597                           	callstack 0
 30598                           
 30599 ;; *************** function _I2C1_DO_SEND_STOP *****************
 30600 ;; Defined at:
 30601 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 30602 ;; Parameters:    Size  Location     Type
 30603 ;;		None
 30604 ;; Auto vars:     Size  Location     Type
 30605 ;;		None
 30606 ;; Return value:  Size  Location     Type
 30607 ;;                  1    wreg      enum E10442
 30608 ;; Registers used:
 30609 ;;		wreg, cstack
 30610 ;; Tracked objects:
 30611 ;;		On entry : 0/2
 30612 ;;		On exit  : 0/0
 30613 ;;		Unchanged: 0/0
 30614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30619 ;;Total ram usage:        0 bytes
 30620 ;; Hardware stack levels used: 1
 30621 ;; Hardware stack levels required when called: 5
 30622 ;; This function calls:
 30623 ;;		_I2C1_MasterStop
 30624 ;; This function is called by:
 30625 ;;		_I2C1_DO_TX
 30626 ;;		_I2C1_DO_TX_EMPTY
 30627 ;;		_I2C1_DO_ADDRESS_NACK
 30628 ;;		_I2C1_MasterFsm
 30629 ;; This function uses a non-reentrant model
 30630 ;;
 30631                           
 30632                           	psect	text145
 30633  00948E                     __ptext145:
 30634                           	callstack 0
 30635  00948E                     _I2C1_DO_SEND_STOP:
 30636                           	callstack 15
 30637                           
 30638                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 30639                           
 30640                           ; BSR set to: 2
 30641                           ;incstack = 0
 30642  00948E  EC82  F04A         	call	_I2C1_MasterStop	;wreg free
 30643                           
 30644                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 30645  009492  0E00               	movlw	0
 30646  009494  0012               	return		;funcret
 30647  009496                     __end_of_I2C1_DO_SEND_STOP:
 30648                           	callstack 0
 30649                           
 30650 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 30651 ;; Defined at:
 30652 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 30653 ;; Parameters:    Size  Location     Type
 30654 ;;		None
 30655 ;; Auto vars:     Size  Location     Type
 30656 ;;		None
 30657 ;; Return value:  Size  Location     Type
 30658 ;;                  1    wreg      enum E10442
 30659 ;; Registers used:
 30660 ;;		wreg, cstack
 30661 ;; Tracked objects:
 30662 ;;		On entry : 0/2
 30663 ;;		On exit  : 0/0
 30664 ;;		Unchanged: 0/0
 30665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30670 ;;Total ram usage:        0 bytes
 30671 ;; Hardware stack levels used: 1
 30672 ;; Hardware stack levels required when called: 5
 30673 ;; This function calls:
 30674 ;;		_I2C1_MasterEnableRestart
 30675 ;; This function is called by:
 30676 ;;		_I2C1_DO_TX_EMPTY
 30677 ;;		_I2C1_DO_ADDRESS_NACK
 30678 ;;		_I2C1_MasterFsm
 30679 ;; This function uses a non-reentrant model
 30680 ;;
 30681                           
 30682                           	psect	text146
 30683  009496                     __ptext146:
 30684                           	callstack 0
 30685  009496                     _I2C1_DO_SEND_RESTART:
 30686                           	callstack 15
 30687                           
 30688                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 30689                           
 30690                           ;incstack = 0
 30691  009496  EC84  F04A         	call	_I2C1_MasterEnableRestart	;wreg free
 30692                           
 30693                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 30694  00949A  0E01               	movlw	1
 30695  00949C  0012               	return		;funcret
 30696  00949E                     __end_of_I2C1_DO_SEND_RESTART:
 30697                           	callstack 0
 30698                           
 30699 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 30700 ;; Defined at:
 30701 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 30702 ;; Parameters:    Size  Location     Type
 30703 ;;		None
 30704 ;; Auto vars:     Size  Location     Type
 30705 ;;		None
 30706 ;; Return value:  Size  Location     Type
 30707 ;;                  1    wreg      enum E10442
 30708 ;; Registers used:
 30709 ;;		wreg, cstack
 30710 ;; Tracked objects:
 30711 ;;		On entry : 0/2
 30712 ;;		On exit  : 0/0
 30713 ;;		Unchanged: 0/0
 30714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30719 ;;Total ram usage:        0 bytes
 30720 ;; Hardware stack levels used: 1
 30721 ;; Hardware stack levels required when called: 5
 30722 ;; This function calls:
 30723 ;;		_I2C1_MasterEnableRestart
 30724 ;; This function is called by:
 30725 ;;		_I2C1_DO_TX
 30726 ;;		_I2C1_MasterFsm
 30727 ;; This function uses a non-reentrant model
 30728 ;;
 30729                           
 30730                           	psect	text147
 30731  00949E                     __ptext147:
 30732                           	callstack 0
 30733  00949E                     _I2C1_DO_SEND_RESTART_WRITE:
 30734                           	callstack 15
 30735                           
 30736                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 30737                           
 30738                           ;incstack = 0
 30739  00949E  EC84  F04A         	call	_I2C1_MasterEnableRestart	;wreg free
 30740                           
 30741                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 30742  0094A2  0E02               	movlw	2
 30743  0094A4  0012               	return		;funcret
 30744  0094A6                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 30745                           	callstack 0
 30746                           
 30747 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 30748 ;; Defined at:
 30749 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 30750 ;; Parameters:    Size  Location     Type
 30751 ;;		None
 30752 ;; Auto vars:     Size  Location     Type
 30753 ;;		None
 30754 ;; Return value:  Size  Location     Type
 30755 ;;                  1    wreg      enum E10442
 30756 ;; Registers used:
 30757 ;;		wreg, cstack
 30758 ;; Tracked objects:
 30759 ;;		On entry : 0/2
 30760 ;;		On exit  : 0/0
 30761 ;;		Unchanged: 0/0
 30762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30767 ;;Total ram usage:        0 bytes
 30768 ;; Hardware stack levels used: 1
 30769 ;; Hardware stack levels required when called: 5
 30770 ;; This function calls:
 30771 ;;		_I2C1_MasterEnableRestart
 30772 ;; This function is called by:
 30773 ;;		_I2C1_DO_TX
 30774 ;;		_I2C1_MasterFsm
 30775 ;; This function uses a non-reentrant model
 30776 ;;
 30777                           
 30778                           	psect	text148
 30779  0094A6                     __ptext148:
 30780                           	callstack 0
 30781  0094A6                     _I2C1_DO_SEND_RESTART_READ:
 30782                           	callstack 15
 30783                           
 30784                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 30785                           
 30786                           ;incstack = 0
 30787  0094A6  EC84  F04A         	call	_I2C1_MasterEnableRestart	;wreg free
 30788                           
 30789                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 30790  0094AA  0E01               	movlw	1
 30791  0094AC  0012               	return		;funcret
 30792  0094AE                     __end_of_I2C1_DO_SEND_RESTART_READ:
 30793                           	callstack 0
 30794                           
 30795 ;; *************** function _I2C1_DO_RCEN *****************
 30796 ;; Defined at:
 30797 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 30798 ;; Parameters:    Size  Location     Type
 30799 ;;		None
 30800 ;; Auto vars:     Size  Location     Type
 30801 ;;		None
 30802 ;; Return value:  Size  Location     Type
 30803 ;;                  1    wreg      enum E10442
 30804 ;; Registers used:
 30805 ;;		wreg, cstack
 30806 ;; Tracked objects:
 30807 ;;		On entry : 3F/2
 30808 ;;		On exit  : 3F/2
 30809 ;;		Unchanged: 0/0
 30810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30815 ;;Total ram usage:        0 bytes
 30816 ;; Hardware stack levels used: 1
 30817 ;; Hardware stack levels required when called: 5
 30818 ;; This function calls:
 30819 ;;		_I2C1_MasterStartRx
 30820 ;; This function is called by:
 30821 ;;		_I2C1_MasterFsm
 30822 ;; This function uses a non-reentrant model
 30823 ;;
 30824                           
 30825                           	psect	text149
 30826  009452                     __ptext149:
 30827                           	callstack 0
 30828  009452                     _I2C1_DO_RCEN:
 30829                           	callstack 16
 30830                           
 30831                           ; BSR set to: 2
 30832                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 30833                           
 30834                           ;incstack = 0
 30835  009452  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30836                           
 30837                           ; BSR set to: 2
 30838                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 30839  009454  EC7C  F04A         	call	_I2C1_MasterStartRx	;wreg free
 30840                           
 30841                           ; BSR set to: 2
 30842                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 30843  009458  0E04               	movlw	4
 30844                           
 30845                           ; BSR set to: 2
 30846  00945A  0012               	return		;funcret
 30847  00945C                     __end_of_I2C1_DO_RCEN:
 30848                           	callstack 0
 30849                           
 30850 ;; *************** function _I2C1_DO_RX *****************
 30851 ;; Defined at:
 30852 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 30853 ;; Parameters:    Size  Location     Type
 30854 ;;		None
 30855 ;; Auto vars:     Size  Location     Type
 30856 ;;		None
 30857 ;; Return value:  Size  Location     Type
 30858 ;;                  1    wreg      enum E10442
 30859 ;; Registers used:
 30860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30861 ;; Tracked objects:
 30862 ;;		On entry : 3F/2
 30863 ;;		On exit  : 0/0
 30864 ;;		Unchanged: 0/0
 30865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30870 ;;Total ram usage:        2 bytes
 30871 ;; Hardware stack levels used: 1
 30872 ;; Hardware stack levels required when called: 7
 30873 ;; This function calls:
 30874 ;;		Absolute function
 30875 ;;		_I2C1_CallbackReturnReset
 30876 ;;		_I2C1_CallbackReturnStop
 30877 ;;		_I2C1_DO_RX_NACK_RESTART
 30878 ;;		_I2C1_DO_RX_NACK_STOP
 30879 ;;		_I2C1_MasterGetRxData
 30880 ;;		_I2C1_MasterSendAck
 30881 ;;		_rd1RegCompleteHandler
 30882 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30883 ;;		_rd2RegCompleteHandler
 30884 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30885 ;;		_rdBlkRegCompleteHandler
 30886 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30887 ;;		_wr1RegCompleteHandler
 30888 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30889 ;;		_wr2RegCompleteHandler
 30890 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30891 ;; This function is called by:
 30892 ;;		_I2C1_MasterFsm
 30893 ;; This function uses a non-reentrant model
 30894 ;;
 30895                           
 30896                           	psect	text150
 30897  007E26                     __ptext150:
 30898                           	callstack 0
 30899  007E26                     _I2C1_DO_RX:
 30900                           	callstack 14
 30901                           
 30902                           ; BSR set to: 2
 30903                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 30904                           
 30905                           ; BSR set to: 2
 30906                           ;incstack = 0
 30907  007E26  EC7A  F04A         	call	_I2C1_MasterGetRxData	;wreg free
 30908  007E2A  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 30909  007E2E  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 30910  007E32  6EDF               	movwf	indf2,c
 30911                           
 30912                           ; BSR set to: 2
 30913  007E34  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 30914  007E36  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 30915                           
 30916                           ; BSR set to: 2
 30917                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 30918  007E38  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 30919  007E3A  A0D8               	btfss	status,0,c
 30920  007E3C  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 30921  007E3E  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 30922  007E40  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 30923  007E42  B4D8               	btfsc	status,2,c
 30924  007E44  D004               	goto	l690
 30925                           
 30926                           ; BSR set to: 2
 30927                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 30928  007E46  EC64  F04A         	call	_I2C1_MasterSendAck	;wreg free
 30929                           
 30930                           ; BSR set to: 2
 30931                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 30932  007E4A  0E05               	movlw	5
 30933  007E4C  0012               	return	
 30934  007E4E                     l690:
 30935                           
 30936                           ; BSR set to: 2
 30937                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 30938  007E4E  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30939                           
 30940                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 30941  007E50  D006               	goto	l19344
 30942  007E52                     l19334:
 30943                           
 30944                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 30945  007E52  EC3B  F04A         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 30946  007E56  0012               	return	
 30947  007E58                     l19338:
 30948                           
 30949                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 30950  007E58  EC3F  F04A         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 30951  007E5C  0012               	return	
 30952  007E5E                     l19344:
 30953                           
 30954                           ; BSR set to: 2
 30955  007E5E  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 30956  007E62  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 30957  007E66  D801               	call	u22168
 30958  007E68  D009               	goto	u22169
 30959  007E6A                     u22168:
 30960  007E6A  0005               	push	
 30961  007E6C  6EFA               	movwf	pclath,c
 30962  007E6E  513C               	movf	_I2C1_Status& (0+255),w,b
 30963  007E70  6EFD               	movwf	tosl,c
 30964  007E72  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 30965  007E74  6EFE               	movwf	tosh,c
 30966  007E76  6AFF               	clrf	tosu,c
 30967  007E78  50FA               	movf	pclath,w,c
 30968  007E7A  0012               	return		;indir
 30969  007E7C                     u22169:
 30970  007E7C  6E1B               	movwf	??_I2C1_DO_RX^0,c
 30971  007E7E  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 30972                           
 30973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30974                           ; Switch size 1, requested type "simple"
 30975                           ; Number of cases is 1, Range of values is 0 to 0
 30976                           ; switch strategies available:
 30977                           ; Name         Instructions Cycles
 30978                           ; simple_byte            4     3 (average)
 30979                           ;	Chosen strategy is simple_byte
 30980  007E80  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 30981  007E82  0A00               	xorlw	0	; case 0
 30982  007E84  A4D8               	btfss	status,2,c
 30983  007E86  D7E8               	goto	l19338
 30984                           
 30985                           ; Switch size 1, requested type "simple"
 30986                           ; Number of cases is 4, Range of values is 1 to 4
 30987                           ; switch strategies available:
 30988                           ; Name         Instructions Cycles
 30989                           ; simple_byte           13     7 (average)
 30990                           ;	Chosen strategy is simple_byte
 30991  007E88  501B               	movf	??_I2C1_DO_RX^0,w,c
 30992  007E8A  0A01               	xorlw	1	; case 1
 30993  007E8C  B4D8               	btfsc	status,2,c
 30994  007E8E  D7E4               	goto	l19338
 30995  007E90  0A03               	xorlw	3	; case 2
 30996  007E92  B4D8               	btfsc	status,2,c
 30997  007E94  D7DE               	goto	l19334
 30998  007E96  0A01               	xorlw	1	; case 3
 30999  007E98  B4D8               	btfsc	status,2,c
 31000  007E9A  D7DB               	goto	l19334
 31001  007E9C  0A07               	xorlw	7	; case 4
 31002  007E9E  D7DC               	goto	l19338
 31003  007EA0                     __end_of_I2C1_DO_RX:
 31004                           	callstack 0
 31005                           
 31006 ;; *************** function _I2C1_DO_TX *****************
 31007 ;; Defined at:
 31008 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 31009 ;; Parameters:    Size  Location     Type
 31010 ;;		None
 31011 ;; Auto vars:     Size  Location     Type
 31012 ;;		None
 31013 ;; Return value:  Size  Location     Type
 31014 ;;                  1    wreg      enum E10442
 31015 ;; Registers used:
 31016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31017 ;; Tracked objects:
 31018 ;;		On entry : 3F/2
 31019 ;;		On exit  : 0/0
 31020 ;;		Unchanged: 0/0
 31021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31026 ;;Total ram usage:        2 bytes
 31027 ;; Hardware stack levels used: 1
 31028 ;; Hardware stack levels required when called: 7
 31029 ;; This function calls:
 31030 ;;		Absolute function
 31031 ;;		_I2C1_CallbackReturnReset
 31032 ;;		_I2C1_CallbackReturnStop
 31033 ;;		_I2C1_DO_SEND_RESTART_READ
 31034 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31035 ;;		_I2C1_DO_SEND_STOP
 31036 ;;		_I2C1_MasterIsNack
 31037 ;;		_I2C1_MasterSendTxData
 31038 ;;		_rd1RegCompleteHandler
 31039 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31040 ;;		_rd2RegCompleteHandler
 31041 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31042 ;;		_rdBlkRegCompleteHandler
 31043 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31044 ;;		_wr1RegCompleteHandler
 31045 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31046 ;;		_wr2RegCompleteHandler
 31047 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31048 ;; This function is called by:
 31049 ;;		_I2C1_MasterFsm
 31050 ;; This function uses a non-reentrant model
 31051 ;;
 31052                           
 31053                           	psect	text151
 31054  007986                     __ptext151:
 31055                           	callstack 0
 31056  007986                     _I2C1_DO_TX:
 31057                           	callstack 14
 31058                           
 31059                           ; BSR set to: 2
 31060                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 31061                           
 31062                           ;incstack = 0
 31063  007986  ECEB  F049         	call	_I2C1_MasterIsNack	;wreg free
 31064  00798A  0900               	iorlw	0
 31065  00798C  A4D8               	btfss	status,2,c
 31066  00798E  D00A               	goto	l19304
 31067  007990  D02A               	goto	l674
 31068  007992                     l19290:
 31069                           
 31070                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 31071  007992  EC53  F04A         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 31072  007996  0012               	return	
 31073  007998                     l19294:
 31074                           
 31075                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 31076  007998  EC4F  F04A         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 31077  00799C  0012               	return	
 31078  00799E                     l19298:
 31079                           
 31080                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 31081  00799E  EC47  F04A         	call	_I2C1_DO_SEND_STOP	;wreg free
 31082  0079A2  0012               	return	
 31083  0079A4                     l19304:
 31084                           
 31085                           ; BSR set to: 2
 31086  0079A4  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 31087  0079A8  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 31088  0079AC  D801               	call	u22138
 31089  0079AE  D009               	goto	u22139
 31090  0079B0                     u22138:
 31091  0079B0  0005               	push	
 31092  0079B2  6EFA               	movwf	pclath,c
 31093  0079B4  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 31094  0079B6  6EFD               	movwf	tosl,c
 31095  0079B8  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 31096  0079BA  6EFE               	movwf	tosh,c
 31097  0079BC  6AFF               	clrf	tosu,c
 31098  0079BE  50FA               	movf	pclath,w,c
 31099  0079C0  0012               	return		;indir
 31100  0079C2                     u22139:
 31101  0079C2  6E1B               	movwf	??_I2C1_DO_TX^0,c
 31102  0079C4  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 31103                           
 31104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31105                           ; Switch size 1, requested type "simple"
 31106                           ; Number of cases is 1, Range of values is 0 to 0
 31107                           ; switch strategies available:
 31108                           ; Name         Instructions Cycles
 31109                           ; simple_byte            4     3 (average)
 31110                           ;	Chosen strategy is simple_byte
 31111  0079C6  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 31112  0079C8  0A00               	xorlw	0	; case 0
 31113  0079CA  A4D8               	btfss	status,2,c
 31114  0079CC  D7E8               	goto	l19298
 31115                           
 31116                           ; Switch size 1, requested type "simple"
 31117                           ; Number of cases is 4, Range of values is 1 to 4
 31118                           ; switch strategies available:
 31119                           ; Name         Instructions Cycles
 31120                           ; simple_byte           13     7 (average)
 31121                           ;	Chosen strategy is simple_byte
 31122  0079CE  501B               	movf	??_I2C1_DO_TX^0,w,c
 31123  0079D0  0A01               	xorlw	1	; case 1
 31124  0079D2  B4D8               	btfsc	status,2,c
 31125  0079D4  D7E4               	goto	l19298
 31126  0079D6  0A03               	xorlw	3	; case 2
 31127  0079D8  B4D8               	btfsc	status,2,c
 31128  0079DA  D7DB               	goto	l19290
 31129  0079DC  0A01               	xorlw	1	; case 3
 31130  0079DE  B4D8               	btfsc	status,2,c
 31131  0079E0  D7DB               	goto	l19294
 31132  0079E2  0A07               	xorlw	7	; case 4
 31133  0079E4  D7DC               	goto	l19298
 31134  0079E6                     l674:
 31135                           
 31136                           ; BSR set to: 2
 31137                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 31138  0079E6  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31139                           
 31140                           ; BSR set to: 2
 31141                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 31142  0079E8  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 31143  0079EC  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 31144  0079F0  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 31145  0079F2  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 31146  0079F4  50DF               	movf	indf2,w,c
 31147  0079F6  EC57  F04A         	call	_I2C1_MasterSendTxData
 31148                           
 31149                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 31150  0079FA  0102               	movlb	2	; () banked
 31151  0079FC  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 31152  0079FE  A0D8               	btfss	status,0,c
 31153  007A00  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 31154  007A02  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 31155  007A04  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 31156  007A06  A4D8               	btfss	status,2,c
 31157  007A08  D002               	goto	l19312
 31158                           
 31159                           ; BSR set to: 2
 31160  007A0A  0E06               	movlw	6
 31161  007A0C  0012               	return	
 31162  007A0E                     l19312:
 31163                           
 31164                           ; BSR set to: 2
 31165  007A0E  0E03               	movlw	3
 31166  007A10  0012               	return		;funcret
 31167  007A12                     __end_of_I2C1_DO_TX:
 31168                           	callstack 0
 31169                           
 31170 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 31171 ;; Defined at:
 31172 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 31173 ;; Parameters:    Size  Location     Type
 31174 ;;		None
 31175 ;; Auto vars:     Size  Location     Type
 31176 ;;		None
 31177 ;; Return value:  Size  Location     Type
 31178 ;;                  1    wreg      enum E10442
 31179 ;; Registers used:
 31180 ;;		wreg, status,2, status,0, cstack
 31181 ;; Tracked objects:
 31182 ;;		On entry : 3F/2
 31183 ;;		On exit  : 0/0
 31184 ;;		Unchanged: 0/0
 31185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31190 ;;Total ram usage:        0 bytes
 31191 ;; Hardware stack levels used: 1
 31192 ;; Hardware stack levels required when called: 5
 31193 ;; This function calls:
 31194 ;;		_I2C1_MasterSendTxData
 31195 ;; This function is called by:
 31196 ;;		_I2C1_MasterFsm
 31197 ;; This function uses a non-reentrant model
 31198 ;;
 31199                           
 31200                           	psect	text152
 31201  0093BA                     __ptext152:
 31202                           	callstack 0
 31203  0093BA                     _I2C1_DO_SEND_ADR_WRITE:
 31204                           	callstack 16
 31205                           
 31206                           ; BSR set to: 2
 31207                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 31208                           
 31209                           ;incstack = 0
 31210  0093BA  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 31211                           
 31212                           ; BSR set to: 2
 31213                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 31214  0093BC  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 31215  0093BE  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 31216  0093C0  EC57  F04A         	call	_I2C1_MasterSendTxData
 31217                           
 31218                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 31219  0093C4  0E03               	movlw	3
 31220  0093C6  0012               	return		;funcret
 31221  0093C8                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 31222                           	callstack 0
 31223                           
 31224 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 31225 ;; Defined at:
 31226 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 31227 ;; Parameters:    Size  Location     Type
 31228 ;;		None
 31229 ;; Auto vars:     Size  Location     Type
 31230 ;;		None
 31231 ;; Return value:  Size  Location     Type
 31232 ;;                  1    wreg      enum E10442
 31233 ;; Registers used:
 31234 ;;		wreg, status,0, cstack
 31235 ;; Tracked objects:
 31236 ;;		On entry : 3F/2
 31237 ;;		On exit  : 0/0
 31238 ;;		Unchanged: 0/0
 31239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31244 ;;Total ram usage:        0 bytes
 31245 ;; Hardware stack levels used: 1
 31246 ;; Hardware stack levels required when called: 5
 31247 ;; This function calls:
 31248 ;;		_I2C1_MasterSendTxData
 31249 ;; This function is called by:
 31250 ;;		_I2C1_MasterFsm
 31251 ;; This function uses a non-reentrant model
 31252 ;;
 31253                           
 31254                           	psect	text153
 31255  0093C8                     __ptext153:
 31256                           	callstack 0
 31257  0093C8                     _I2C1_DO_SEND_ADR_READ:
 31258                           	callstack 16
 31259                           
 31260                           ; BSR set to: 2
 31261                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 31262                           
 31263                           ;incstack = 0
 31264  0093C8  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 31265                           
 31266                           ; BSR set to: 2
 31267                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 31268  0093CA  80D8               	bsf	status,0,c
 31269  0093CC  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 31270  0093CE  EC57  F04A         	call	_I2C1_MasterSendTxData
 31271                           
 31272                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 31273  0093D2  0E05               	movlw	5
 31274  0093D4  0012               	return		;funcret
 31275  0093D6                     __end_of_I2C1_DO_SEND_ADR_READ:
 31276                           	callstack 0
 31277                           
 31278 ;; *************** function _I2C1_DO_IDLE *****************
 31279 ;; Defined at:
 31280 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 31281 ;; Parameters:    Size  Location     Type
 31282 ;;		None
 31283 ;; Auto vars:     Size  Location     Type
 31284 ;;		None
 31285 ;; Return value:  Size  Location     Type
 31286 ;;                  1    wreg      enum E10442
 31287 ;; Registers used:
 31288 ;;		wreg, status,2
 31289 ;; Tracked objects:
 31290 ;;		On entry : 3F/2
 31291 ;;		On exit  : 3F/2
 31292 ;;		Unchanged: 0/0
 31293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31298 ;;Total ram usage:        0 bytes
 31299 ;; Hardware stack levels used: 1
 31300 ;; Hardware stack levels required when called: 4
 31301 ;; This function calls:
 31302 ;;		Nothing
 31303 ;; This function is called by:
 31304 ;;		_I2C1_MasterFsm
 31305 ;; This function uses a non-reentrant model
 31306 ;;
 31307                           
 31308                           	psect	text154
 31309  00945C                     __ptext154:
 31310                           	callstack 0
 31311  00945C                     _I2C1_DO_IDLE:
 31312                           	callstack 17
 31313                           
 31314                           ; BSR set to: 2
 31315                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 31316                           
 31317                           ;incstack = 0
 31318  00945C  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31319                           
 31320                           ; BSR set to: 2
 31321                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 31322  00945E  0E00               	movlw	0
 31323  009460  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31324                           
 31325                           ; BSR set to: 2
 31326                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 31327  009462  0E0E               	movlw	14
 31328                           
 31329                           ; BSR set to: 2
 31330  009464  0012               	return		;funcret
 31331  009466                     __end_of_I2C1_DO_IDLE:
 31332                           	callstack 0
 31333                           
 31334 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 31335 ;; Defined at:
 31336 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 31337 ;; Parameters:    Size  Location     Type
 31338 ;;		None
 31339 ;; Auto vars:     Size  Location     Type
 31340 ;;		None
 31341 ;; Return value:  Size  Location     Type
 31342 ;;                  1    wreg      enum E10442
 31343 ;; Registers used:
 31344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31345 ;; Tracked objects:
 31346 ;;		On entry : 3F/2
 31347 ;;		On exit  : 0/0
 31348 ;;		Unchanged: 0/0
 31349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31354 ;;Total ram usage:        2 bytes
 31355 ;; Hardware stack levels used: 1
 31356 ;; Hardware stack levels required when called: 7
 31357 ;; This function calls:
 31358 ;;		Absolute function
 31359 ;;		_I2C1_CallbackReturnReset
 31360 ;;		_I2C1_CallbackReturnStop
 31361 ;;		_I2C1_DO_SEND_RESTART
 31362 ;;		_I2C1_DO_SEND_STOP
 31363 ;;		_I2C1_MasterSetIrq
 31364 ;;		_rd1RegCompleteHandler
 31365 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31366 ;;		_rd2RegCompleteHandler
 31367 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31368 ;;		_rdBlkRegCompleteHandler
 31369 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31370 ;;		_wr1RegCompleteHandler
 31371 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31372 ;;		_wr2RegCompleteHandler
 31373 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31374 ;; This function is called by:
 31375 ;;		_I2C1_MasterFsm
 31376 ;; This function uses a non-reentrant model
 31377 ;;
 31378                           
 31379                           	psect	text155
 31380  0083D2                     __ptext155:
 31381                           	callstack 0
 31382  0083D2                     _I2C1_DO_TX_EMPTY:
 31383                           	callstack 14
 31384                           
 31385                           ; BSR set to: 2
 31386                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 31387                           
 31388                           ; BSR set to: 2
 31389                           ;incstack = 0
 31390  0083D2  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31391                           
 31392                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 31393  0083D4  D00A               	goto	l19376
 31394  0083D6                     l19360:
 31395                           
 31396                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 31397  0083D6  EC4B  F04A         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31398  0083DA  0012               	return	
 31399  0083DC                     l19364:
 31400                           
 31401                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 31402  0083DC  EC61  F04A         	call	_I2C1_MasterSetIrq	;wreg free
 31403                           
 31404                           ; BSR set to: 14
 31405                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 31406  0083E0  0E03               	movlw	3
 31407  0083E2  0012               	return	
 31408  0083E4                     l19370:
 31409                           
 31410                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 31411  0083E4  EC47  F04A         	call	_I2C1_DO_SEND_STOP	;wreg free
 31412  0083E8  0012               	return	
 31413  0083EA                     l19376:
 31414                           
 31415                           ; BSR set to: 2
 31416  0083EA  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 31417  0083EE  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 31418  0083F2  D801               	call	u22178
 31419  0083F4  D009               	goto	u22179
 31420  0083F6                     u22178:
 31421  0083F6  0005               	push	
 31422  0083F8  6EFA               	movwf	pclath,c
 31423  0083FA  513C               	movf	_I2C1_Status& (0+255),w,b
 31424  0083FC  6EFD               	movwf	tosl,c
 31425  0083FE  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 31426  008400  6EFE               	movwf	tosh,c
 31427  008402  6AFF               	clrf	tosu,c
 31428  008404  50FA               	movf	pclath,w,c
 31429  008406  0012               	return		;indir
 31430  008408                     u22179:
 31431  008408  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 31432  00840A  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 31433                           
 31434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31435                           ; Switch size 1, requested type "simple"
 31436                           ; Number of cases is 1, Range of values is 0 to 0
 31437                           ; switch strategies available:
 31438                           ; Name         Instructions Cycles
 31439                           ; simple_byte            4     3 (average)
 31440                           ;	Chosen strategy is simple_byte
 31441  00840C  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 31442  00840E  0A00               	xorlw	0	; case 0
 31443  008410  A4D8               	btfss	status,2,c
 31444  008412  D7E8               	goto	l19370
 31445                           
 31446                           ; Switch size 1, requested type "simple"
 31447                           ; Number of cases is 4, Range of values is 1 to 4
 31448                           ; switch strategies available:
 31449                           ; Name         Instructions Cycles
 31450                           ; simple_byte           13     7 (average)
 31451                           ;	Chosen strategy is simple_byte
 31452  008414  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 31453  008416  0A01               	xorlw	1	; case 1
 31454  008418  B4D8               	btfsc	status,2,c
 31455  00841A  D7E4               	goto	l19370
 31456  00841C  0A03               	xorlw	3	; case 2
 31457  00841E  B4D8               	btfsc	status,2,c
 31458  008420  D7DA               	goto	l19360
 31459  008422  0A01               	xorlw	1	; case 3
 31460  008424  B4D8               	btfsc	status,2,c
 31461  008426  D7D7               	goto	l19360
 31462  008428  0A07               	xorlw	7	; case 4
 31463  00842A  B4D8               	btfsc	status,2,c
 31464  00842C  D7D7               	goto	l19364
 31465  00842E  D7DA               	goto	l19370
 31466  008430                     __end_of_I2C1_DO_TX_EMPTY:
 31467                           	callstack 0
 31468                           
 31469 ;; *************** function _I2C1_MasterSetIrq *****************
 31470 ;; Defined at:
 31471 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 31472 ;; Parameters:    Size  Location     Type
 31473 ;;		None
 31474 ;; Auto vars:     Size  Location     Type
 31475 ;;		None
 31476 ;; Return value:  Size  Location     Type
 31477 ;;                  1    wreg      void 
 31478 ;; Registers used:
 31479 ;;		None
 31480 ;; Tracked objects:
 31481 ;;		On entry : 0/2
 31482 ;;		On exit  : 3F/E
 31483 ;;		Unchanged: 0/0
 31484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31489 ;;Total ram usage:        0 bytes
 31490 ;; Hardware stack levels used: 1
 31491 ;; Hardware stack levels required when called: 4
 31492 ;; This function calls:
 31493 ;;		Nothing
 31494 ;; This function is called by:
 31495 ;;		_I2C1_DO_TX_EMPTY
 31496 ;; This function uses a non-reentrant model
 31497 ;;
 31498                           
 31499                           	psect	text156
 31500  0094C2                     __ptext156:
 31501                           	callstack 0
 31502  0094C2                     _I2C1_MasterSetIrq:
 31503                           	callstack 16
 31504                           
 31505                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 31506                           
 31507                           ;incstack = 0
 31508  0094C2  010E               	movlb	14	; () banked
 31509  0094C4  81CD               	bsf	205,0,b	;volatile
 31510                           
 31511                           ; BSR set to: 14
 31512  0094C6  0012               	return		;funcret
 31513  0094C8                     __end_of_I2C1_MasterSetIrq:
 31514                           	callstack 0
 31515                           
 31516 ;; *************** function _I2C1_MasterIsNack *****************
 31517 ;; Defined at:
 31518 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 31519 ;; Parameters:    Size  Location     Type
 31520 ;;		None
 31521 ;; Auto vars:     Size  Location     Type
 31522 ;;		None
 31523 ;; Return value:  Size  Location     Type
 31524 ;;                  1    wreg      _Bool 
 31525 ;; Registers used:
 31526 ;;		wreg
 31527 ;; Tracked objects:
 31528 ;;		On entry : 3F/2
 31529 ;;		On exit  : 3F/2
 31530 ;;		Unchanged: 3F/0
 31531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31536 ;;Total ram usage:        0 bytes
 31537 ;; Hardware stack levels used: 1
 31538 ;; Hardware stack levels required when called: 4
 31539 ;; This function calls:
 31540 ;;		Nothing
 31541 ;; This function is called by:
 31542 ;;		_I2C1_MasterFsm
 31543 ;;		_I2C1_DO_TX
 31544 ;; This function uses a non-reentrant model
 31545 ;;
 31546                           
 31547                           	psect	text157
 31548  0093D6                     __ptext157:
 31549                           	callstack 0
 31550  0093D6                     _I2C1_MasterIsNack:
 31551                           	callstack 17
 31552                           
 31553                           ; BSR set to: 2
 31554                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 31555                           
 31556                           ; BSR set to: 14
 31557                           ;incstack = 0
 31558  0093D6  AC97               	btfss	151,6,c	;volatile
 31559  0093D8  D002               	goto	u22110
 31560  0093DA  0E01               	movlw	1
 31561  0093DC  0012               	return	
 31562  0093DE                     u22110:
 31563  0093DE  0E00               	movlw	0
 31564                           
 31565                           ; BSR set to: 2
 31566  0093E0  0012               	return		;funcret
 31567  0093E2                     __end_of_I2C1_MasterIsNack:
 31568                           	callstack 0
 31569                           
 31570 ;; *************** function _I2C1_MasterSendTxData *****************
 31571 ;; Defined at:
 31572 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 31573 ;; Parameters:    Size  Location     Type
 31574 ;;  data            1    wreg     unsigned char 
 31575 ;; Auto vars:     Size  Location     Type
 31576 ;;  data            1   15[COMRAM] unsigned char 
 31577 ;; Return value:  Size  Location     Type
 31578 ;;                  1    wreg      void 
 31579 ;; Registers used:
 31580 ;;		wreg
 31581 ;; Tracked objects:
 31582 ;;		On entry : 3F/2
 31583 ;;		On exit  : 0/0
 31584 ;;		Unchanged: 0/0
 31585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31590 ;;Total ram usage:        1 bytes
 31591 ;; Hardware stack levels used: 1
 31592 ;; Hardware stack levels required when called: 4
 31593 ;; This function calls:
 31594 ;;		Nothing
 31595 ;; This function is called by:
 31596 ;;		_I2C1_DO_SEND_ADR_READ
 31597 ;;		_I2C1_DO_SEND_ADR_WRITE
 31598 ;;		_I2C1_DO_TX
 31599 ;; This function uses a non-reentrant model
 31600 ;;
 31601                           
 31602                           	psect	text158
 31603  0094AE                     __ptext158:
 31604                           	callstack 0
 31605  0094AE                     _I2C1_MasterSendTxData:
 31606                           	callstack 16
 31607                           
 31608                           ; BSR set to: 2
 31609                           ;incstack = 0
 31610                           ;I2C1_MasterSendTxData@data stored from wreg
 31611  0094AE  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 31612                           
 31613                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 31614  0094B0  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 31615  0094B4  0012               	return		;funcret
 31616  0094B6                     __end_of_I2C1_MasterSendTxData:
 31617                           	callstack 0
 31618                           
 31619 ;; *************** function _I2C1_MasterSendAck *****************
 31620 ;; Defined at:
 31621 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 31622 ;; Parameters:    Size  Location     Type
 31623 ;;		None
 31624 ;; Auto vars:     Size  Location     Type
 31625 ;;		None
 31626 ;; Return value:  Size  Location     Type
 31627 ;;                  1    wreg      void 
 31628 ;; Registers used:
 31629 ;;		None
 31630 ;; Tracked objects:
 31631 ;;		On entry : 3F/2
 31632 ;;		On exit  : 3F/2
 31633 ;;		Unchanged: 3F/0
 31634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31639 ;;Total ram usage:        0 bytes
 31640 ;; Hardware stack levels used: 1
 31641 ;; Hardware stack levels required when called: 4
 31642 ;; This function calls:
 31643 ;;		Nothing
 31644 ;; This function is called by:
 31645 ;;		_I2C1_DO_RX
 31646 ;;		_I2C1_DO_RX_ACK
 31647 ;; This function uses a non-reentrant model
 31648 ;;
 31649                           
 31650                           	psect	text159
 31651  0094C8                     __ptext159:
 31652                           	callstack 0
 31653  0094C8                     _I2C1_MasterSendAck:
 31654                           	callstack 16
 31655                           
 31656                           ; BSR set to: 2
 31657                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 31658                           
 31659                           ;incstack = 0
 31660  0094C8  9A97               	bcf	151,5,c	;volatile
 31661                           
 31662                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 31663  0094CA  8897               	bsf	151,4,c	;volatile
 31664                           
 31665                           ; BSR set to: 2
 31666  0094CC  0012               	return		;funcret
 31667  0094CE                     __end_of_I2C1_MasterSendAck:
 31668                           	callstack 0
 31669                           
 31670 ;; *************** function _I2C1_MasterGetRxData *****************
 31671 ;; Defined at:
 31672 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 31673 ;; Parameters:    Size  Location     Type
 31674 ;;		None
 31675 ;; Auto vars:     Size  Location     Type
 31676 ;;		None
 31677 ;; Return value:  Size  Location     Type
 31678 ;;                  1    wreg      unsigned char 
 31679 ;; Registers used:
 31680 ;;		wreg, status,2
 31681 ;; Tracked objects:
 31682 ;;		On entry : 3F/2
 31683 ;;		On exit  : 3F/2
 31684 ;;		Unchanged: 3F/0
 31685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31690 ;;Total ram usage:        0 bytes
 31691 ;; Hardware stack levels used: 1
 31692 ;; Hardware stack levels required when called: 4
 31693 ;; This function calls:
 31694 ;;		Nothing
 31695 ;; This function is called by:
 31696 ;;		_I2C1_DO_RX
 31697 ;; This function uses a non-reentrant model
 31698 ;;
 31699                           
 31700                           	psect	text160
 31701  0094F4                     __ptext160:
 31702                           	callstack 0
 31703  0094F4                     _I2C1_MasterGetRxData:
 31704                           	callstack 16
 31705                           
 31706                           ; BSR set to: 2
 31707                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 31708                           
 31709                           ; BSR set to: 2
 31710                           ;incstack = 0
 31711  0094F4  5092               	movf	146,w,c	;volatile
 31712                           
 31713                           ; BSR set to: 2
 31714  0094F6  0012               	return		;funcret
 31715  0094F8                     __end_of_I2C1_MasterGetRxData:
 31716                           	callstack 0
 31717                           
 31718 ;; *************** function _I2C1_MasterSendNack *****************
 31719 ;; Defined at:
 31720 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 31721 ;; Parameters:    Size  Location     Type
 31722 ;;		None
 31723 ;; Auto vars:     Size  Location     Type
 31724 ;;		None
 31725 ;; Return value:  Size  Location     Type
 31726 ;;                  1    wreg      void 
 31727 ;; Registers used:
 31728 ;;		None
 31729 ;; Tracked objects:
 31730 ;;		On entry : 0/2
 31731 ;;		On exit  : 0/0
 31732 ;;		Unchanged: 0/0
 31733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31738 ;;Total ram usage:        0 bytes
 31739 ;; Hardware stack levels used: 1
 31740 ;; Hardware stack levels required when called: 4
 31741 ;; This function calls:
 31742 ;;		Nothing
 31743 ;; This function is called by:
 31744 ;;		_I2C1_DO_RX_NACK_STOP
 31745 ;;		_I2C1_DO_RX_NACK_RESTART
 31746 ;; This function uses a non-reentrant model
 31747 ;;
 31748                           
 31749                           	psect	text161
 31750  0094CE                     __ptext161:
 31751                           	callstack 0
 31752  0094CE                     _I2C1_MasterSendNack:
 31753                           	callstack 16
 31754                           
 31755                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 31756                           
 31757                           ; BSR set to: 2
 31758                           ;incstack = 0
 31759  0094CE  8A97               	bsf	151,5,c	;volatile
 31760                           
 31761                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 31762  0094D0  8897               	bsf	151,4,c	;volatile
 31763  0094D2  0012               	return		;funcret
 31764  0094D4                     __end_of_I2C1_MasterSendNack:
 31765                           	callstack 0
 31766                           
 31767 ;; *************** function _I2C1_MasterStartRx *****************
 31768 ;; Defined at:
 31769 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 31770 ;; Parameters:    Size  Location     Type
 31771 ;;		None
 31772 ;; Auto vars:     Size  Location     Type
 31773 ;;		None
 31774 ;; Return value:  Size  Location     Type
 31775 ;;                  1    wreg      void 
 31776 ;; Registers used:
 31777 ;;		None
 31778 ;; Tracked objects:
 31779 ;;		On entry : 3F/2
 31780 ;;		On exit  : 3F/2
 31781 ;;		Unchanged: 3F/0
 31782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31787 ;;Total ram usage:        0 bytes
 31788 ;; Hardware stack levels used: 1
 31789 ;; Hardware stack levels required when called: 4
 31790 ;; This function calls:
 31791 ;;		Nothing
 31792 ;; This function is called by:
 31793 ;;		_I2C1_DO_RCEN
 31794 ;; This function uses a non-reentrant model
 31795 ;;
 31796                           
 31797                           	psect	text162
 31798  0094F8                     __ptext162:
 31799                           	callstack 0
 31800  0094F8                     _I2C1_MasterStartRx:
 31801                           	callstack 16
 31802                           
 31803                           ; BSR set to: 2
 31804                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 31805                           
 31806                           ;incstack = 0
 31807  0094F8  8697               	bsf	151,3,c	;volatile
 31808                           
 31809                           ; BSR set to: 2
 31810  0094FA  0012               	return		;funcret
 31811  0094FC                     __end_of_I2C1_MasterStartRx:
 31812                           	callstack 0
 31813                           
 31814 ;; *************** function _I2C1_CallbackReturnReset *****************
 31815 ;; Defined at:
 31816 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 31817 ;; Parameters:    Size  Location     Type
 31818 ;;  funPtr          2   24[COMRAM] PTR void 
 31819 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31820 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31821 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31822 ;; Auto vars:     Size  Location     Type
 31823 ;;		None
 31824 ;; Return value:  Size  Location     Type
 31825 ;;                  1    wreg      enum E360
 31826 ;; Registers used:
 31827 ;;		wreg
 31828 ;; Tracked objects:
 31829 ;;		On entry : 3F/2
 31830 ;;		On exit  : 3F/2
 31831 ;;		Unchanged: 3F/0
 31832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31837 ;;Total ram usage:        2 bytes
 31838 ;; Hardware stack levels used: 1
 31839 ;; Hardware stack levels required when called: 4
 31840 ;; This function calls:
 31841 ;;		Nothing
 31842 ;; This function is called by:
 31843 ;;		_I2C1_Open
 31844 ;;		_I2C1_DO_TX
 31845 ;;		_I2C1_DO_RX
 31846 ;;		_I2C1_DO_TX_EMPTY
 31847 ;;		_I2C1_DO_ADDRESS_NACK
 31848 ;; This function uses a non-reentrant model
 31849 ;;
 31850                           
 31851                           	psect	text163
 31852  0094FC                     __ptext163:
 31853                           	callstack 0
 31854  0094FC                     _I2C1_CallbackReturnReset:
 31855                           	callstack 16
 31856                           
 31857                           ; BSR set to: 2
 31858                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 31859                           
 31860                           ; BSR set to: 2
 31861                           ;incstack = 0
 31862  0094FC  0E05               	movlw	5
 31863                           
 31864                           ; BSR set to: 2
 31865  0094FE  0012               	return		;funcret
 31866  009500                     __end_of_I2C1_CallbackReturnReset:
 31867                           	callstack 0
 31868                           
 31869 ;; *************** function _I2C1_CallbackReturnStop *****************
 31870 ;; Defined at:
 31871 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 31872 ;; Parameters:    Size  Location     Type
 31873 ;;  funPtr          2   24[COMRAM] PTR void 
 31874 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31875 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31876 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31877 ;; Auto vars:     Size  Location     Type
 31878 ;;		None
 31879 ;; Return value:  Size  Location     Type
 31880 ;;                  1    wreg      enum E360
 31881 ;; Registers used:
 31882 ;;		wreg
 31883 ;; Tracked objects:
 31884 ;;		On entry : 3F/2
 31885 ;;		On exit  : 3F/2
 31886 ;;		Unchanged: 3F/0
 31887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31892 ;;Total ram usage:        2 bytes
 31893 ;; Hardware stack levels used: 1
 31894 ;; Hardware stack levels required when called: 4
 31895 ;; This function calls:
 31896 ;;		Nothing
 31897 ;; This function is called by:
 31898 ;;		_I2C1_Open
 31899 ;;		_I2C1_SetCallback
 31900 ;;		_I2C1_DO_TX
 31901 ;;		_I2C1_DO_RX
 31902 ;;		_I2C1_DO_TX_EMPTY
 31903 ;;		_I2C1_DO_ADDRESS_NACK
 31904 ;; This function uses a non-reentrant model
 31905 ;;
 31906                           
 31907                           	psect	text164
 31908  009500                     __ptext164:
 31909                           	callstack 0
 31910  009500                     _I2C1_CallbackReturnStop:
 31911                           	callstack 16
 31912                           
 31913                           ; BSR set to: 2
 31914                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 31915                           
 31916                           ; BSR set to: 2
 31917                           ;incstack = 0
 31918  009500  0E01               	movlw	1
 31919                           
 31920                           ; BSR set to: 2
 31921  009502  0012               	return		;funcret
 31922  009504                     __end_of_I2C1_CallbackReturnStop:
 31923                           	callstack 0
 31924                           
 31925 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 31926 ;; Defined at:
 31927 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 31928 ;; Parameters:    Size  Location     Type
 31929 ;;  ptr             2   24[COMRAM] PTR void 
 31930 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 31931 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 31932 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 31933 ;; Auto vars:     Size  Location     Type
 31934 ;;		None
 31935 ;; Return value:  Size  Location     Type
 31936 ;;                  1    wreg      enum E527
 31937 ;; Registers used:
 31938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31939 ;; Tracked objects:
 31940 ;;		On entry : 3F/2
 31941 ;;		On exit  : 0/0
 31942 ;;		Unchanged: 0/0
 31943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31948 ;;Total ram usage:        2 bytes
 31949 ;; Hardware stack levels used: 1
 31950 ;; Hardware stack levels required when called: 6
 31951 ;; This function calls:
 31952 ;;		_I2C1_SetBuffer
 31953 ;;		_I2C1_SetDataCompleteCallback
 31954 ;; This function is called by:
 31955 ;;		_I2C1_DO_TX
 31956 ;;		_I2C1_DO_RX
 31957 ;;		_I2C1_DO_TX_EMPTY
 31958 ;;		_I2C1_DO_ADDRESS_NACK
 31959 ;; This function uses a non-reentrant model
 31960 ;;
 31961                           
 31962                           	psect	text165
 31963  008B0A                     __ptext165:
 31964                           	callstack 0
 31965  008B0A                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 31966                           	callstack 14
 31967                           
 31968                           ; BSR set to: 2
 31969                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 31970                           
 31971                           ; BSR set to: 2
 31972                           ;incstack = 0
 31973  008B0A  EE20 F002          	lfsr	2,2
 31974  008B0E  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 31975  008B10  26D9               	addwf	fsr2l,f,c
 31976  008B12  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 31977  008B14  22DA               	addwfc	fsr2h,f,c
 31978  008B16  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 31979  008B1A  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 31980  008B1E  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 31981  008B22  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 31982  008B26  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 31983  008B2A  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 31984  008B2E  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 31985                           
 31986                           ; BSR set to: 2
 31987                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 31988  008B32  0E00               	movlw	0
 31989  008B34  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 31990  008B36  0E00               	movlw	0
 31991  008B38  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 31992  008B3A  0E00               	movlw	0
 31993  008B3C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 31994  008B3E  0E00               	movlw	0
 31995  008B40  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 31996  008B42  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 31997                           
 31998                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 31999  008B46  0E02               	movlw	2
 32000  008B48  0012               	return		;funcret
 32001  008B4A                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 32002                           	callstack 0
 32003                           
 32004 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 32005 ;; Defined at:
 32006 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32007 ;; Parameters:    Size  Location     Type
 32008 ;;  ptr             2   24[COMRAM] PTR void 
 32009 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32010 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32011 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32012 ;; Auto vars:     Size  Location     Type
 32013 ;;		None
 32014 ;; Return value:  Size  Location     Type
 32015 ;;                  1    wreg      enum E527
 32016 ;; Registers used:
 32017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32018 ;; Tracked objects:
 32019 ;;		On entry : 3F/2
 32020 ;;		On exit  : 0/0
 32021 ;;		Unchanged: 0/0
 32022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32027 ;;Total ram usage:        2 bytes
 32028 ;; Hardware stack levels used: 1
 32029 ;; Hardware stack levels required when called: 6
 32030 ;; This function calls:
 32031 ;;		_I2C1_SetBuffer
 32032 ;;		_I2C1_SetDataCompleteCallback
 32033 ;; This function is called by:
 32034 ;;		_I2C1_DO_TX
 32035 ;;		_I2C1_DO_RX
 32036 ;;		_I2C1_DO_TX_EMPTY
 32037 ;;		_I2C1_DO_ADDRESS_NACK
 32038 ;; This function uses a non-reentrant model
 32039 ;;
 32040                           
 32041                           	psect	text166
 32042  008E4A                     __ptext166:
 32043                           	callstack 0
 32044  008E4A                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 32045                           	callstack 14
 32046                           
 32047                           ; BSR set to: 2
 32048                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 32049                           
 32050                           ;incstack = 0
 32051  008E4A  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 32052  008E4E  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 32053  008E52  0E00               	movlw	0
 32054  008E54  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32055  008E56  0E01               	movlw	1
 32056  008E58  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32057  008E5A  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 32058                           
 32059                           ; BSR set to: 2
 32060                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32061  008E5E  0E00               	movlw	0
 32062  008E60  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32063  008E62  0E00               	movlw	0
 32064  008E64  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32065  008E66  0E00               	movlw	0
 32066  008E68  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32067  008E6A  0E00               	movlw	0
 32068  008E6C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32069  008E6E  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32070                           
 32071                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 32072  008E72  0E04               	movlw	4
 32073  008E74  0012               	return		;funcret
 32074  008E76                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 32075                           	callstack 0
 32076                           
 32077 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 32078 ;; Defined at:
 32079 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32080 ;; Parameters:    Size  Location     Type
 32081 ;;  ptr             2   24[COMRAM] PTR void 
 32082 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32083 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32084 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32085 ;; Auto vars:     Size  Location     Type
 32086 ;;		None
 32087 ;; Return value:  Size  Location     Type
 32088 ;;                  1    wreg      enum E527
 32089 ;; Registers used:
 32090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32091 ;; Tracked objects:
 32092 ;;		On entry : 3F/2
 32093 ;;		On exit  : 0/0
 32094 ;;		Unchanged: 0/0
 32095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32099 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32100 ;;Total ram usage:        2 bytes
 32101 ;; Hardware stack levels used: 1
 32102 ;; Hardware stack levels required when called: 6
 32103 ;; This function calls:
 32104 ;;		_I2C1_SetBuffer
 32105 ;;		_I2C1_SetDataCompleteCallback
 32106 ;; This function is called by:
 32107 ;;		_I2C1_DO_TX
 32108 ;;		_I2C1_DO_RX
 32109 ;;		_I2C1_DO_TX_EMPTY
 32110 ;;		_I2C1_DO_ADDRESS_NACK
 32111 ;; This function uses a non-reentrant model
 32112 ;;
 32113                           
 32114                           	psect	text167
 32115  008E76                     __ptext167:
 32116                           	callstack 0
 32117  008E76                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 32118                           	callstack 14
 32119                           
 32120                           ; BSR set to: 2
 32121                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 32122                           
 32123                           ;incstack = 0
 32124  008E76  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 32125  008E7A  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 32126  008E7E  0E00               	movlw	0
 32127  008E80  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32128  008E82  0E02               	movlw	2
 32129  008E84  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32130  008E86  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 32131                           
 32132                           ; BSR set to: 2
 32133                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32134  008E8A  0E00               	movlw	0
 32135  008E8C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32136  008E8E  0E00               	movlw	0
 32137  008E90  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32138  008E92  0E00               	movlw	0
 32139  008E94  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32140  008E96  0E00               	movlw	0
 32141  008E98  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32142  008E9A  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32143                           
 32144                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 32145  008E9E  0E02               	movlw	2
 32146  008EA0  0012               	return		;funcret
 32147  008EA2                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 32148                           	callstack 0
 32149                           
 32150 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 32151 ;; Defined at:
 32152 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32153 ;; Parameters:    Size  Location     Type
 32154 ;;  ptr             2   24[COMRAM] PTR void 
 32155 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32156 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32157 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32158 ;; Auto vars:     Size  Location     Type
 32159 ;;		None
 32160 ;; Return value:  Size  Location     Type
 32161 ;;                  1    wreg      enum E527
 32162 ;; Registers used:
 32163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32164 ;; Tracked objects:
 32165 ;;		On entry : 3F/2
 32166 ;;		On exit  : 0/0
 32167 ;;		Unchanged: 0/0
 32168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32173 ;;Total ram usage:        2 bytes
 32174 ;; Hardware stack levels used: 1
 32175 ;; Hardware stack levels required when called: 6
 32176 ;; This function calls:
 32177 ;;		_I2C1_SetBuffer
 32178 ;;		_I2C1_SetDataCompleteCallback
 32179 ;; This function is called by:
 32180 ;;		_I2C1_Read1ByteRegister
 32181 ;;		_I2C1_DO_TX
 32182 ;;		_I2C1_DO_RX
 32183 ;;		_I2C1_DO_TX_EMPTY
 32184 ;;		_I2C1_DO_ADDRESS_NACK
 32185 ;; This function uses a non-reentrant model
 32186 ;;
 32187                           
 32188                           	psect	text168
 32189  008EA2                     __ptext168:
 32190                           	callstack 0
 32191  008EA2                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 32192                           	callstack 14
 32193                           
 32194                           ; BSR set to: 2
 32195                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 32196                           
 32197                           ;incstack = 0
 32198  008EA2  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 32199  008EA6  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 32200  008EAA  0E00               	movlw	0
 32201  008EAC  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32202  008EAE  0E01               	movlw	1
 32203  008EB0  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32204  008EB2  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 32205                           
 32206                           ; BSR set to: 2
 32207                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32208  008EB6  0E00               	movlw	0
 32209  008EB8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32210  008EBA  0E00               	movlw	0
 32211  008EBC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32212  008EBE  0E00               	movlw	0
 32213  008EC0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32214  008EC2  0E00               	movlw	0
 32215  008EC4  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32216  008EC6  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32217                           
 32218                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 32219  008ECA  0E02               	movlw	2
 32220  008ECC  0012               	return		;funcret
 32221  008ECE                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 32222                           	callstack 0
 32223                           
 32224 ;; *************** function _rdBlkRegCompleteHandler *****************
 32225 ;; Defined at:
 32226 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32227 ;; Parameters:    Size  Location     Type
 32228 ;;  p               2   24[COMRAM] PTR void 
 32229 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32230 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32231 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32232 ;; Auto vars:     Size  Location     Type
 32233 ;;		None
 32234 ;; Return value:  Size  Location     Type
 32235 ;;                  1    wreg      enum E360
 32236 ;; Registers used:
 32237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32238 ;; Tracked objects:
 32239 ;;		On entry : 3F/2
 32240 ;;		On exit  : 0/0
 32241 ;;		Unchanged: 0/0
 32242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32247 ;;Total ram usage:        2 bytes
 32248 ;; Hardware stack levels used: 1
 32249 ;; Hardware stack levels required when called: 6
 32250 ;; This function calls:
 32251 ;;		_I2C1_SetBuffer
 32252 ;;		_I2C1_SetDataCompleteCallback
 32253 ;; This function is called by:
 32254 ;;		_i2c_readDataBlock
 32255 ;;		_I2C1_DO_TX
 32256 ;;		_I2C1_DO_RX
 32257 ;;		_I2C1_DO_TX_EMPTY
 32258 ;;		_I2C1_DO_ADDRESS_NACK
 32259 ;; This function uses a non-reentrant model
 32260 ;;
 32261                           
 32262                           	psect	text169
 32263  008B4A                     __ptext169:
 32264                           	callstack 0
 32265  008B4A                     _rdBlkRegCompleteHandler:
 32266                           	callstack 14
 32267                           
 32268                           ; BSR set to: 2
 32269                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 32270                           
 32271                           ;incstack = 0
 32272  008B4A  EE20 F002          	lfsr	2,2
 32273  008B4E  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 32274  008B50  26D9               	addwf	fsr2l,f,c
 32275  008B52  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 32276  008B54  22DA               	addwfc	fsr2h,f,c
 32277  008B56  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 32278  008B5A  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 32279  008B5E  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 32280  008B62  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 32281  008B66  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 32282  008B6A  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 32283  008B6E  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 32284                           
 32285                           ; BSR set to: 2
 32286                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 32287  008B72  0E00               	movlw	0
 32288  008B74  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32289  008B76  0E00               	movlw	0
 32290  008B78  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32291  008B7A  0E00               	movlw	0
 32292  008B7C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32293  008B7E  0E00               	movlw	0
 32294  008B80  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32295  008B82  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32296                           
 32297                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 32298  008B86  0E02               	movlw	2
 32299  008B88  0012               	return		;funcret
 32300  008B8A                     __end_of_rdBlkRegCompleteHandler:
 32301                           	callstack 0
 32302                           
 32303 ;; *************** function _wr2RegCompleteHandler *****************
 32304 ;; Defined at:
 32305 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32306 ;; Parameters:    Size  Location     Type
 32307 ;;  p               2   24[COMRAM] PTR void 
 32308 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32309 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32310 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32311 ;; Auto vars:     Size  Location     Type
 32312 ;;		None
 32313 ;; Return value:  Size  Location     Type
 32314 ;;                  1    wreg      enum E360
 32315 ;; Registers used:
 32316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32317 ;; Tracked objects:
 32318 ;;		On entry : 3F/2
 32319 ;;		On exit  : 0/0
 32320 ;;		Unchanged: 0/0
 32321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32326 ;;Total ram usage:        2 bytes
 32327 ;; Hardware stack levels used: 1
 32328 ;; Hardware stack levels required when called: 6
 32329 ;; This function calls:
 32330 ;;		_I2C1_SetBuffer
 32331 ;;		_I2C1_SetDataCompleteCallback
 32332 ;; This function is called by:
 32333 ;;		_I2C1_DO_TX
 32334 ;;		_I2C1_DO_RX
 32335 ;;		_I2C1_DO_TX_EMPTY
 32336 ;;		_I2C1_DO_ADDRESS_NACK
 32337 ;; This function uses a non-reentrant model
 32338 ;;
 32339                           
 32340                           	psect	text170
 32341  008ECE                     __ptext170:
 32342                           	callstack 0
 32343  008ECE                     _wr2RegCompleteHandler:
 32344                           	callstack 14
 32345                           
 32346                           ; BSR set to: 2
 32347                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 32348                           
 32349                           ;incstack = 0
 32350  008ECE  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32351  008ED2  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32352  008ED6  0E00               	movlw	0
 32353  008ED8  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32354  008EDA  0E02               	movlw	2
 32355  008EDC  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32356  008EDE  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 32357                           
 32358                           ; BSR set to: 2
 32359                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 32360  008EE2  0E00               	movlw	0
 32361  008EE4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32362  008EE6  0E00               	movlw	0
 32363  008EE8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32364  008EEA  0E00               	movlw	0
 32365  008EEC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32366  008EEE  0E00               	movlw	0
 32367  008EF0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32368  008EF2  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32369                           
 32370                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 32371  008EF6  0E04               	movlw	4
 32372  008EF8  0012               	return		;funcret
 32373  008EFA                     __end_of_wr2RegCompleteHandler:
 32374                           	callstack 0
 32375                           
 32376 ;; *************** function _rd2RegCompleteHandler *****************
 32377 ;; Defined at:
 32378 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32379 ;; Parameters:    Size  Location     Type
 32380 ;;  p               2   24[COMRAM] PTR void 
 32381 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32382 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32383 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32384 ;; Auto vars:     Size  Location     Type
 32385 ;;		None
 32386 ;; Return value:  Size  Location     Type
 32387 ;;                  1    wreg      enum E360
 32388 ;; Registers used:
 32389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32390 ;; Tracked objects:
 32391 ;;		On entry : 3F/2
 32392 ;;		On exit  : 0/0
 32393 ;;		Unchanged: 0/0
 32394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32399 ;;Total ram usage:        2 bytes
 32400 ;; Hardware stack levels used: 1
 32401 ;; Hardware stack levels required when called: 6
 32402 ;; This function calls:
 32403 ;;		_I2C1_SetBuffer
 32404 ;;		_I2C1_SetDataCompleteCallback
 32405 ;; This function is called by:
 32406 ;;		_I2C1_DO_TX
 32407 ;;		_I2C1_DO_RX
 32408 ;;		_I2C1_DO_TX_EMPTY
 32409 ;;		_I2C1_DO_ADDRESS_NACK
 32410 ;; This function uses a non-reentrant model
 32411 ;;
 32412                           
 32413                           	psect	text171
 32414  008EFA                     __ptext171:
 32415                           	callstack 0
 32416  008EFA                     _rd2RegCompleteHandler:
 32417                           	callstack 14
 32418                           
 32419                           ; BSR set to: 2
 32420                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 32421                           
 32422                           ;incstack = 0
 32423  008EFA  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32424  008EFE  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32425  008F02  0E00               	movlw	0
 32426  008F04  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32427  008F06  0E02               	movlw	2
 32428  008F08  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32429  008F0A  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 32430                           
 32431                           ; BSR set to: 2
 32432                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32433  008F0E  0E00               	movlw	0
 32434  008F10  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32435  008F12  0E00               	movlw	0
 32436  008F14  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32437  008F16  0E00               	movlw	0
 32438  008F18  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32439  008F1A  0E00               	movlw	0
 32440  008F1C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32441  008F1E  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32442                           
 32443                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 32444  008F22  0E02               	movlw	2
 32445  008F24  0012               	return		;funcret
 32446  008F26                     __end_of_rd2RegCompleteHandler:
 32447                           	callstack 0
 32448                           
 32449 ;; *************** function _rd1RegCompleteHandler *****************
 32450 ;; Defined at:
 32451 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32452 ;; Parameters:    Size  Location     Type
 32453 ;;  p               2   24[COMRAM] PTR void 
 32454 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32455 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32456 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32457 ;; Auto vars:     Size  Location     Type
 32458 ;;		None
 32459 ;; Return value:  Size  Location     Type
 32460 ;;                  1    wreg      enum E360
 32461 ;; Registers used:
 32462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32463 ;; Tracked objects:
 32464 ;;		On entry : 3F/2
 32465 ;;		On exit  : 0/0
 32466 ;;		Unchanged: 0/0
 32467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32472 ;;Total ram usage:        2 bytes
 32473 ;; Hardware stack levels used: 1
 32474 ;; Hardware stack levels required when called: 6
 32475 ;; This function calls:
 32476 ;;		_I2C1_SetBuffer
 32477 ;;		_I2C1_SetDataCompleteCallback
 32478 ;; This function is called by:
 32479 ;;		_I2C1_DO_TX
 32480 ;;		_I2C1_DO_RX
 32481 ;;		_I2C1_DO_TX_EMPTY
 32482 ;;		_I2C1_DO_ADDRESS_NACK
 32483 ;; This function uses a non-reentrant model
 32484 ;;
 32485                           
 32486                           	psect	text172
 32487  008F26                     __ptext172:
 32488                           	callstack 0
 32489  008F26                     _rd1RegCompleteHandler:
 32490                           	callstack 14
 32491                           
 32492                           ; BSR set to: 2
 32493                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 32494                           
 32495                           ;incstack = 0
 32496  008F26  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32497  008F2A  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32498  008F2E  0E00               	movlw	0
 32499  008F30  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32500  008F32  0E01               	movlw	1
 32501  008F34  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32502  008F36  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 32503                           
 32504                           ; BSR set to: 2
 32505                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32506  008F3A  0E00               	movlw	0
 32507  008F3C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32508  008F3E  0E00               	movlw	0
 32509  008F40  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32510  008F42  0E00               	movlw	0
 32511  008F44  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32512  008F46  0E00               	movlw	0
 32513  008F48  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32514  008F4A  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32515                           
 32516                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 32517  008F4E  0E02               	movlw	2
 32518  008F50  0012               	return		;funcret
 32519  008F52                     __end_of_rd1RegCompleteHandler:
 32520                           	callstack 0
 32521                           
 32522 ;; *************** function _wr1RegCompleteHandler *****************
 32523 ;; Defined at:
 32524 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32525 ;; Parameters:    Size  Location     Type
 32526 ;;  p               2   24[COMRAM] PTR void 
 32527 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32528 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32529 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32530 ;; Auto vars:     Size  Location     Type
 32531 ;;		None
 32532 ;; Return value:  Size  Location     Type
 32533 ;;                  1    wreg      enum E360
 32534 ;; Registers used:
 32535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32536 ;; Tracked objects:
 32537 ;;		On entry : 3F/2
 32538 ;;		On exit  : 0/0
 32539 ;;		Unchanged: 0/0
 32540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32545 ;;Total ram usage:        2 bytes
 32546 ;; Hardware stack levels used: 1
 32547 ;; Hardware stack levels required when called: 6
 32548 ;; This function calls:
 32549 ;;		_I2C1_SetBuffer
 32550 ;;		_I2C1_SetDataCompleteCallback
 32551 ;; This function is called by:
 32552 ;;		_I2C1_DO_TX
 32553 ;;		_I2C1_DO_RX
 32554 ;;		_I2C1_DO_TX_EMPTY
 32555 ;;		_I2C1_DO_ADDRESS_NACK
 32556 ;; This function uses a non-reentrant model
 32557 ;;
 32558                           
 32559                           	psect	text173
 32560  008F52                     __ptext173:
 32561                           	callstack 0
 32562  008F52                     _wr1RegCompleteHandler:
 32563                           	callstack 14
 32564                           
 32565                           ; BSR set to: 2
 32566                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 32567                           
 32568                           ;incstack = 0
 32569  008F52  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32570  008F56  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32571  008F5A  0E00               	movlw	0
 32572  008F5C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32573  008F5E  0E01               	movlw	1
 32574  008F60  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32575  008F62  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 32576                           
 32577                           ; BSR set to: 2
 32578                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32579  008F66  0E00               	movlw	0
 32580  008F68  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32581  008F6A  0E00               	movlw	0
 32582  008F6C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32583  008F6E  0E00               	movlw	0
 32584  008F70  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32585  008F72  0E00               	movlw	0
 32586  008F74  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32587  008F76  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32588                           
 32589                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 32590  008F7A  0E04               	movlw	4
 32591  008F7C  0012               	return		;funcret
 32592  008F7E                     __end_of_wr1RegCompleteHandler:
 32593                           	callstack 0
 32594                           
 32595 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 32596 ;; Defined at:
 32597 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32598 ;; Parameters:    Size  Location     Type
 32599 ;;  ptr             2   24[COMRAM] PTR void 
 32600 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32601 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32602 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32603 ;; Auto vars:     Size  Location     Type
 32604 ;;		None
 32605 ;; Return value:  Size  Location     Type
 32606 ;;                  1    wreg      enum E527
 32607 ;; Registers used:
 32608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32609 ;; Tracked objects:
 32610 ;;		On entry : 3F/2
 32611 ;;		On exit  : 0/0
 32612 ;;		Unchanged: 0/0
 32613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32618 ;;Total ram usage:        2 bytes
 32619 ;; Hardware stack levels used: 1
 32620 ;; Hardware stack levels required when called: 6
 32621 ;; This function calls:
 32622 ;;		_I2C1_SetBuffer
 32623 ;;		_I2C1_SetDataCompleteCallback
 32624 ;; This function is called by:
 32625 ;;		_I2C1_DO_TX
 32626 ;;		_I2C1_DO_RX
 32627 ;;		_I2C1_DO_TX_EMPTY
 32628 ;;		_I2C1_DO_ADDRESS_NACK
 32629 ;; This function uses a non-reentrant model
 32630 ;;
 32631                           
 32632                           	psect	text174
 32633  008F7E                     __ptext174:
 32634                           	callstack 0
 32635  008F7E                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 32636                           	callstack 14
 32637                           
 32638                           ; BSR set to: 2
 32639                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 32640                           
 32641                           ;incstack = 0
 32642  008F7E  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 32643  008F82  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 32644  008F86  0E00               	movlw	0
 32645  008F88  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32646  008F8A  0E02               	movlw	2
 32647  008F8C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32648  008F8E  EC34  F049         	call	_I2C1_SetBuffer	;wreg free
 32649                           
 32650                           ; BSR set to: 2
 32651                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32652  008F92  0E00               	movlw	0
 32653  008F94  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32654  008F96  0E00               	movlw	0
 32655  008F98  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32656  008F9A  0E00               	movlw	0
 32657  008F9C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32658  008F9E  0E00               	movlw	0
 32659  008FA0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32660  008FA2  EC7D  F049         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32661                           
 32662                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 32663  008FA6  0E04               	movlw	4
 32664  008FA8  0012               	return		;funcret
 32665  008FAA                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 32666                           	callstack 0
 32667                           
 32668 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 32669 ;; Defined at:
 32670 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 32671 ;; Parameters:    Size  Location     Type
 32672 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 32673 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32674 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32675 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32676 ;;  ptr             2   22[COMRAM] PTR void 
 32677 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32678 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32679 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32680 ;; Auto vars:     Size  Location     Type
 32681 ;;		None
 32682 ;; Return value:  Size  Location     Type
 32683 ;;                  1    wreg      void 
 32684 ;; Registers used:
 32685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32686 ;; Tracked objects:
 32687 ;;		On entry : 33/2
 32688 ;;		On exit  : 0/0
 32689 ;;		Unchanged: 0/0
 32690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32695 ;;Total ram usage:        4 bytes
 32696 ;; Hardware stack levels used: 1
 32697 ;; Hardware stack levels required when called: 5
 32698 ;; This function calls:
 32699 ;;		_I2C1_SetCallback
 32700 ;; This function is called by:
 32701 ;;		_wr1RegCompleteHandler
 32702 ;;		_rd1RegCompleteHandler
 32703 ;;		_rd2RegCompleteHandler
 32704 ;;		_wr2RegCompleteHandler
 32705 ;;		_rdBlkRegCompleteHandler
 32706 ;;		_i2c_readDataBlock
 32707 ;;		_I2C1_Read1ByteRegister
 32708 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32709 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32710 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32711 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32712 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32713 ;; This function uses a non-reentrant model
 32714 ;;
 32715                           
 32716                           	psect	text175
 32717  0092FA                     __ptext175:
 32718                           	callstack 0
 32719  0092FA                     _I2C1_SetDataCompleteCallback:
 32720                           	callstack 20
 32721                           
 32722                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 32723                           
 32724                           ;incstack = 0
 32725  0092FA  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 32726  0092FE  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 32727  009302  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 32728  009306  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 32729  00930A  0E00               	movlw	0
 32730  00930C  ECE4  F040         	call	_I2C1_SetCallback
 32731  009310  0012               	return		;funcret
 32732  009312                     __end_of_I2C1_SetDataCompleteCallback:
 32733                           	callstack 0
 32734                           
 32735 ;; *************** function _I2C1_SetCallback *****************
 32736 ;; Defined at:
 32737 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 32738 ;; Parameters:    Size  Location     Type
 32739 ;;  idx             1    wreg     enum E10460
 32740 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 32741 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32742 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32743 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32744 ;;  ptr             2   17[COMRAM] PTR void 
 32745 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32746 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32747 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32748 ;; Auto vars:     Size  Location     Type
 32749 ;;  idx             1   19[COMRAM] enum E10460
 32750 ;; Return value:  Size  Location     Type
 32751 ;;                  1    wreg      void 
 32752 ;; Registers used:
 32753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32754 ;; Tracked objects:
 32755 ;;		On entry : 33/2
 32756 ;;		On exit  : 0/0
 32757 ;;		Unchanged: 0/0
 32758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32762 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32763 ;;Total ram usage:        5 bytes
 32764 ;; Hardware stack levels used: 1
 32765 ;; Hardware stack levels required when called: 4
 32766 ;; This function calls:
 32767 ;;		Nothing
 32768 ;; This function is called by:
 32769 ;;		_I2C1_SetDataCompleteCallback
 32770 ;;		_I2C1_SetAddressNackCallback
 32771 ;; This function uses a non-reentrant model
 32772 ;;
 32773                           
 32774                           	psect	text176
 32775  0081C8                     __ptext176:
 32776                           	callstack 0
 32777  0081C8                     _I2C1_SetCallback:
 32778                           	callstack 20
 32779                           
 32780                           ;incstack = 0
 32781                           ;I2C1_SetCallback@idx stored from wreg
 32782  0081C8  6E14               	movwf	I2C1_SetCallback@idx^0,c
 32783                           
 32784                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 32785  0081CA  5010               	movf	I2C1_SetCallback@cb^0,w,c
 32786  0081CC  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 32787  0081CE  B4D8               	btfsc	status,2,c
 32788  0081D0  D019               	goto	l19102
 32789                           
 32790                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 32791  0081D2  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32792  0081D4  0D02               	mullw	2
 32793  0081D6  0E3C               	movlw	low _I2C1_Status
 32794  0081D8  24F3               	addwf	243,w,c
 32795  0081DA  6ED9               	movwf	fsr2l,c
 32796  0081DC  0E02               	movlw	high _I2C1_Status
 32797  0081DE  20F4               	addwfc	prodh,w,c
 32798  0081E0  6EDA               	movwf	fsr2h,c
 32799  0081E2  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 32800  0081E6  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 32801                           
 32802                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 32803  0081EA  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32804  0081EC  0D02               	mullw	2
 32805  0081EE  0E48               	movlw	low (_I2C1_Status+12)
 32806  0081F0  24F3               	addwf	243,w,c
 32807  0081F2  6ED9               	movwf	fsr2l,c
 32808  0081F4  0E02               	movlw	high (_I2C1_Status+12)
 32809  0081F6  20F4               	addwfc	prodh,w,c
 32810  0081F8  6EDA               	movwf	fsr2h,c
 32811  0081FA  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 32812  0081FE  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 32813                           
 32814                           ;mcc_generated_files/i2c1_master.c: 304:     }
 32815  008202  0012               	return	
 32816  008204                     l19102:
 32817                           
 32818                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 32819  008204  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32820  008206  0D02               	mullw	2
 32821  008208  0E3C               	movlw	low _I2C1_Status
 32822  00820A  24F3               	addwf	243,w,c
 32823  00820C  6ED9               	movwf	fsr2l,c
 32824  00820E  0E02               	movlw	high _I2C1_Status
 32825  008210  20F4               	addwfc	prodh,w,c
 32826  008212  6EDA               	movwf	fsr2h,c
 32827  008214  0E00               	movlw	low _I2C1_CallbackReturnStop
 32828  008216  6EDE               	movwf	postinc2,c
 32829  008218  0E95               	movlw	high _I2C1_CallbackReturnStop
 32830  00821A  6EDD               	movwf	postdec2,c
 32831                           
 32832                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 32833  00821C  5014               	movf	I2C1_SetCallback@idx^0,w,c
 32834  00821E  0D02               	mullw	2
 32835  008220  0E48               	movlw	low (_I2C1_Status+12)
 32836  008222  24F3               	addwf	243,w,c
 32837  008224  6ED9               	movwf	fsr2l,c
 32838  008226  0E02               	movlw	high (_I2C1_Status+12)
 32839  008228  20F4               	addwfc	prodh,w,c
 32840  00822A  6EDA               	movwf	fsr2h,c
 32841  00822C  0E00               	movlw	0
 32842  00822E  6EDE               	movwf	postinc2,c
 32843  008230  0E00               	movlw	0
 32844  008232  6EDD               	movwf	postdec2,c
 32845  008234  0012               	return		;funcret
 32846  008236                     __end_of_I2C1_SetCallback:
 32847                           	callstack 0
 32848                           
 32849 ;; *************** function _I2C1_SetBuffer *****************
 32850 ;; Defined at:
 32851 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 32852 ;; Parameters:    Size  Location     Type
 32853 ;;  buffer          2   15[COMRAM] PTR void 
 32854 ;;		 -> cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), I2C1_ReadDataBlock@reg(1), 
 32855 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegi
      +ster@data(2), 
 32856 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 32857 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(2), i2c_readDataBloc
      +k@d(4), 
 32858 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 32859 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(17), i2c_write1ByteRegister@reg(1
      +), 
 32860 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 32861 ;;  bufferSize      2   17[COMRAM] unsigned int 
 32862 ;; Auto vars:     Size  Location     Type
 32863 ;;		None
 32864 ;; Return value:  Size  Location     Type
 32865 ;;                  1    wreg      void 
 32866 ;; Registers used:
 32867 ;;		wreg, status,2, status,0
 32868 ;; Tracked objects:
 32869 ;;		On entry : 0/2
 32870 ;;		On exit  : 3F/2
 32871 ;;		Unchanged: 0/0
 32872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32877 ;;Total ram usage:        4 bytes
 32878 ;; Hardware stack levels used: 1
 32879 ;; Hardware stack levels required when called: 4
 32880 ;; This function calls:
 32881 ;;		Nothing
 32882 ;; This function is called by:
 32883 ;;		_wr1RegCompleteHandler
 32884 ;;		_i2c_writeNBytes
 32885 ;;		_rd1RegCompleteHandler
 32886 ;;		_rd2RegCompleteHandler
 32887 ;;		_wr2RegCompleteHandler
 32888 ;;		_rdBlkRegCompleteHandler
 32889 ;;		_i2c_readDataBlock
 32890 ;;		_I2C1_Read1ByteRegister
 32891 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 32892 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 32893 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 32894 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 32895 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 32896 ;; This function uses a non-reentrant model
 32897 ;;
 32898                           
 32899                           	psect	text177
 32900  009268                     __ptext177:
 32901                           	callstack 0
 32902  009268                     _I2C1_SetBuffer:
 32903                           	callstack 21
 32904                           
 32905                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 32906                           
 32907                           ;incstack = 0
 32908  009268  0102               	movlb	2	; () banked
 32909  00926A  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 32910  00926C  0012               	return	
 32911                           
 32912                           ; BSR set to: 2
 32913                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 32914  00926E  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 32915  009272  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 32916                           
 32917                           ; BSR set to: 2
 32918                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 32919  009276  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 32920  00927A  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 32921                           
 32922                           ; BSR set to: 2
 32923                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 32924  00927E  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 32925                           
 32926                           ; BSR set to: 2
 32927  009280  0012               	return		;funcret
 32928  009282                     __end_of_I2C1_SetBuffer:
 32929                           	callstack 0
 32930                           
 32931 ;; *************** function _I2C1_MasterStop *****************
 32932 ;; Defined at:
 32933 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 32934 ;; Parameters:    Size  Location     Type
 32935 ;;		None
 32936 ;; Auto vars:     Size  Location     Type
 32937 ;;		None
 32938 ;; Return value:  Size  Location     Type
 32939 ;;                  1    wreg      void 
 32940 ;; Registers used:
 32941 ;;		None
 32942 ;; Tracked objects:
 32943 ;;		On entry : 0/2
 32944 ;;		On exit  : 0/0
 32945 ;;		Unchanged: 0/0
 32946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32951 ;;Total ram usage:        0 bytes
 32952 ;; Hardware stack levels used: 1
 32953 ;; Hardware stack levels required when called: 4
 32954 ;; This function calls:
 32955 ;;		Nothing
 32956 ;; This function is called by:
 32957 ;;		_I2C1_DO_SEND_STOP
 32958 ;; This function uses a non-reentrant model
 32959 ;;
 32960                           
 32961                           	psect	text178
 32962  009504                     __ptext178:
 32963                           	callstack 0
 32964  009504                     _I2C1_MasterStop:
 32965                           	callstack 15
 32966                           
 32967                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 32968                           
 32969                           ; BSR set to: 2
 32970                           ;incstack = 0
 32971  009504  8497               	bsf	151,2,c	;volatile
 32972  009506  0012               	return		;funcret
 32973  009508                     __end_of_I2C1_MasterStop:
 32974                           	callstack 0
 32975                           
 32976 ;; *************** function _I2C1_MasterEnableRestart *****************
 32977 ;; Defined at:
 32978 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 32979 ;; Parameters:    Size  Location     Type
 32980 ;;		None
 32981 ;; Auto vars:     Size  Location     Type
 32982 ;;		None
 32983 ;; Return value:  Size  Location     Type
 32984 ;;                  1    wreg      void 
 32985 ;; Registers used:
 32986 ;;		None
 32987 ;; Tracked objects:
 32988 ;;		On entry : 0/2
 32989 ;;		On exit  : 0/0
 32990 ;;		Unchanged: 0/0
 32991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32996 ;;Total ram usage:        0 bytes
 32997 ;; Hardware stack levels used: 1
 32998 ;; Hardware stack levels required when called: 4
 32999 ;; This function calls:
 33000 ;;		Nothing
 33001 ;; This function is called by:
 33002 ;;		_I2C1_DO_SEND_RESTART_READ
 33003 ;;		_I2C1_DO_SEND_RESTART_WRITE
 33004 ;;		_I2C1_DO_SEND_RESTART
 33005 ;; This function uses a non-reentrant model
 33006 ;;
 33007                           
 33008                           	psect	text179
 33009  009508                     __ptext179:
 33010                           	callstack 0
 33011  009508                     _I2C1_MasterEnableRestart:
 33012                           	callstack 15
 33013                           
 33014                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 33015                           
 33016                           ;incstack = 0
 33017  009508  8297               	bsf	151,1,c	;volatile
 33018  00950A  0012               	return		;funcret
 33019  00950C                     __end_of_I2C1_MasterEnableRestart:
 33020                           	callstack 0
 33021                           
 33022 ;; *************** function _I2C1_MasterStart *****************
 33023 ;; Defined at:
 33024 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 33025 ;; Parameters:    Size  Location     Type
 33026 ;;		None
 33027 ;; Auto vars:     Size  Location     Type
 33028 ;;		None
 33029 ;; Return value:  Size  Location     Type
 33030 ;;                  1    wreg      void 
 33031 ;; Registers used:
 33032 ;;		None
 33033 ;; Tracked objects:
 33034 ;;		On entry : 3F/2
 33035 ;;		On exit  : 3F/2
 33036 ;;		Unchanged: 3F/0
 33037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33042 ;;Total ram usage:        0 bytes
 33043 ;; Hardware stack levels used: 1
 33044 ;; Hardware stack levels required when called: 4
 33045 ;; This function calls:
 33046 ;;		Nothing
 33047 ;; This function is called by:
 33048 ;;		_I2C1_MasterOperation
 33049 ;; This function uses a non-reentrant model
 33050 ;;
 33051                           
 33052                           	psect	text180
 33053  00950C                     __ptext180:
 33054                           	callstack 0
 33055  00950C                     _I2C1_MasterStart:
 33056                           	callstack 19
 33057                           
 33058                           ; BSR set to: 2
 33059                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 33060                           
 33061                           ;incstack = 0
 33062  00950C  8097               	bsf	151,0,c	;volatile
 33063                           
 33064                           ; BSR set to: 2
 33065  00950E  0012               	return		;funcret
 33066  009510                     __end_of_I2C1_MasterStart:
 33067                           	callstack 0
 33068                           
 33069 ;; *************** function _I2C1_Close *****************
 33070 ;; Defined at:
 33071 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 33072 ;; Parameters:    Size  Location     Type
 33073 ;;		None
 33074 ;; Auto vars:     Size  Location     Type
 33075 ;;  returnValue     1   15[COMRAM] enum E355
 33076 ;; Return value:  Size  Location     Type
 33077 ;;                  1    wreg      enum E355
 33078 ;; Registers used:
 33079 ;;		wreg, status,2, cstack
 33080 ;; Tracked objects:
 33081 ;;		On entry : 0/2
 33082 ;;		On exit  : 33/2
 33083 ;;		Unchanged: 0/0
 33084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33089 ;;Total ram usage:        1 bytes
 33090 ;; Hardware stack levels used: 1
 33091 ;; Hardware stack levels required when called: 5
 33092 ;; This function calls:
 33093 ;;		_I2C1_MasterClearIrq
 33094 ;;		_I2C1_MasterClose
 33095 ;;		_I2C1_MasterDisableIrq
 33096 ;; This function is called by:
 33097 ;;		_i2c_writeNBytes
 33098 ;;		_i2c_readDataBlock
 33099 ;;		_I2C1_Read1ByteRegister
 33100 ;; This function uses a non-reentrant model
 33101 ;;
 33102                           
 33103                           	psect	text181
 33104  00914C                     __ptext181:
 33105                           	callstack 0
 33106  00914C                     _I2C1_Close:
 33107                           	callstack 20
 33108                           
 33109                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 33110                           
 33111                           ; BSR set to: 2
 33112                           ;incstack = 0
 33113  00914C  0E01               	movlw	1
 33114  00914E  6E10               	movwf	I2C1_Close@returnValue^0,c
 33115                           
 33116                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 33117  009150  0102               	movlb	2	; () banked
 33118  009152  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 33119  009154  D00A               	goto	l19536
 33120                           
 33121                           ; BSR set to: 2
 33122                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 33123  009156  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 33124                           
 33125                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 33126  009158  6958               	setf	(_I2C1_Status+28)& (0+255),b
 33127                           
 33128                           ; BSR set to: 2
 33129                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 33130  00915A  EC6A  F04A         	call	_I2C1_MasterClearIrq	;wreg free
 33131                           
 33132                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 33133  00915E  EC88  F04A         	call	_I2C1_MasterDisableIrq	;wreg free
 33134                           
 33135                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 33136  009162  EC8A  F04A         	call	_I2C1_MasterClose	;wreg free
 33137                           
 33138                           ; BSR set to: 14
 33139                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 33140  009166  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 33141  00916A                     l19536:
 33142                           
 33143                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 33144  00916A  5010               	movf	I2C1_Close@returnValue^0,w,c
 33145  00916C  0012               	return		;funcret
 33146  00916E                     __end_of_I2C1_Close:
 33147                           	callstack 0
 33148                           
 33149 ;; *************** function _I2C1_MasterDisableIrq *****************
 33150 ;; Defined at:
 33151 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 33152 ;; Parameters:    Size  Location     Type
 33153 ;;		None
 33154 ;; Auto vars:     Size  Location     Type
 33155 ;;		None
 33156 ;; Return value:  Size  Location     Type
 33157 ;;                  1    wreg      void 
 33158 ;; Registers used:
 33159 ;;		None
 33160 ;; Tracked objects:
 33161 ;;		On entry : 3F/E
 33162 ;;		On exit  : 3F/E
 33163 ;;		Unchanged: 0/0
 33164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33169 ;;Total ram usage:        0 bytes
 33170 ;; Hardware stack levels used: 1
 33171 ;; Hardware stack levels required when called: 4
 33172 ;; This function calls:
 33173 ;;		Nothing
 33174 ;; This function is called by:
 33175 ;;		_I2C1_Close
 33176 ;; This function uses a non-reentrant model
 33177 ;;
 33178                           
 33179                           	psect	text182
 33180  009510                     __ptext182:
 33181                           	callstack 0
 33182  009510                     _I2C1_MasterDisableIrq:
 33183                           	callstack 20
 33184                           
 33185                           ; BSR set to: 14
 33186                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 33187                           
 33188                           ;incstack = 0
 33189  009510  91C5               	bcf	197,0,b	;volatile
 33190                           
 33191                           ; BSR set to: 14
 33192  009512  0012               	return		;funcret
 33193  009514                     __end_of_I2C1_MasterDisableIrq:
 33194                           	callstack 0
 33195                           
 33196 ;; *************** function _I2C1_MasterClose *****************
 33197 ;; Defined at:
 33198 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 33199 ;; Parameters:    Size  Location     Type
 33200 ;;		None
 33201 ;; Auto vars:     Size  Location     Type
 33202 ;;		None
 33203 ;; Return value:  Size  Location     Type
 33204 ;;                  1    wreg      void 
 33205 ;; Registers used:
 33206 ;;		None
 33207 ;; Tracked objects:
 33208 ;;		On entry : 3F/E
 33209 ;;		On exit  : 3F/E
 33210 ;;		Unchanged: 3F/0
 33211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33216 ;;Total ram usage:        0 bytes
 33217 ;; Hardware stack levels used: 1
 33218 ;; Hardware stack levels required when called: 4
 33219 ;; This function calls:
 33220 ;;		Nothing
 33221 ;; This function is called by:
 33222 ;;		_I2C1_Close
 33223 ;; This function uses a non-reentrant model
 33224 ;;
 33225                           
 33226                           	psect	text183
 33227  009514                     __ptext183:
 33228                           	callstack 0
 33229  009514                     _I2C1_MasterClose:
 33230                           	callstack 20
 33231                           
 33232                           ; BSR set to: 14
 33233                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 33234                           
 33235                           ; BSR set to: 14
 33236                           ;incstack = 0
 33237  009514  9A96               	bcf	150,5,c	;volatile
 33238                           
 33239                           ; BSR set to: 14
 33240  009516  0012               	return		;funcret
 33241  009518                     __end_of_I2C1_MasterClose:
 33242                           	callstack 0
 33243                           
 33244 ;; *************** function _I2C1_MasterClearIrq *****************
 33245 ;; Defined at:
 33246 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 33247 ;; Parameters:    Size  Location     Type
 33248 ;;		None
 33249 ;; Auto vars:     Size  Location     Type
 33250 ;;		None
 33251 ;; Return value:  Size  Location     Type
 33252 ;;                  1    wreg      void 
 33253 ;; Registers used:
 33254 ;;		None
 33255 ;; Tracked objects:
 33256 ;;		On entry : 33/2
 33257 ;;		On exit  : 3F/E
 33258 ;;		Unchanged: 0/0
 33259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33264 ;;Total ram usage:        0 bytes
 33265 ;; Hardware stack levels used: 1
 33266 ;; Hardware stack levels required when called: 4
 33267 ;; This function calls:
 33268 ;;		Nothing
 33269 ;; This function is called by:
 33270 ;;		_I2C1_Open
 33271 ;;		_I2C1_Close
 33272 ;;		_I2C1_MasterFsm
 33273 ;; This function uses a non-reentrant model
 33274 ;;
 33275                           
 33276                           	psect	text184
 33277  0094D4                     __ptext184:
 33278                           	callstack 0
 33279  0094D4                     _I2C1_MasterClearIrq:
 33280                           	callstack 20
 33281                           
 33282                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 33283                           
 33284                           ; BSR set to: 14
 33285                           ;incstack = 0
 33286  0094D4  010E               	movlb	14	; () banked
 33287  0094D6  91CD               	bcf	205,0,b	;volatile
 33288                           
 33289                           ; BSR set to: 14
 33290  0094D8  0012               	return		;funcret
 33291  0094DA                     __end_of_I2C1_MasterClearIrq:
 33292                           	callstack 0
 33293                           
 33294 ;; *************** function _INTERRUPT_InterruptManager *****************
 33295 ;; Defined at:
 33296 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 33297 ;; Parameters:    Size  Location     Type
 33298 ;;		None
 33299 ;; Auto vars:     Size  Location     Type
 33300 ;;		None
 33301 ;; Return value:  Size  Location     Type
 33302 ;;                  1    wreg      void 
 33303 ;; Registers used:
 33304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33305 ;; Tracked objects:
 33306 ;;		On entry : 0/0
 33307 ;;		On exit  : 0/0
 33308 ;;		Unchanged: 0/0
 33309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33312 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33313 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33314 ;;Total ram usage:        6 bytes
 33315 ;; Hardware stack levels used: 1
 33316 ;; Hardware stack levels required when called: 3
 33317 ;; This function calls:
 33318 ;;		Absolute function
 33319 ;;		_EUSART1_Receive_ISR
 33320 ;;		_EUSART1_Transmit_ISR
 33321 ;;		_TMR0_ISR
 33322 ;;		_TMR1_ISR
 33323 ;;		_TMR2_ISR
 33324 ;; This function is called by:
 33325 ;;		Interrupt level 2
 33326 ;; This function uses a non-reentrant model
 33327 ;;
 33328                           
 33329                           	psect	intcode
 33330  000008                     __pintcode:
 33331                           	callstack 0
 33332  000008                     _INTERRUPT_InterruptManager:
 33333                           	callstack 14
 33334                           
 33335                           ; BSR set to: 14
 33336                           ;incstack = 0
 33337  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33338  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 33339  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 33340  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 33341  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 33342  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 33343  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 33344                           
 33345                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 33346  000022  010E               	movlb	14	; () banked
 33347  000024  BBC2               	btfsc	194,5,b	;volatile
 33348                           
 33349                           ; BSR set to: 14
 33350  000026  ABCA               	btfss	202,5,b	;volatile
 33351  000028  D003               	goto	i2l867
 33352                           
 33353                           ; BSR set to: 14
 33354                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 33355  00002A  EC4C  F048         	call	_TMR0_ISR	;wreg free
 33356                           
 33357                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 33358  00002E  D028               	goto	i2l873
 33359  000030                     i2l867:
 33360                           
 33361                           ; BSR set to: 14
 33362  000030  ACF2               	btfss	242,6,c	;volatile
 33363  000032  D026               	goto	i2l873
 33364                           
 33365                           ; BSR set to: 14
 33366                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 33367  000034  B9C5               	btfsc	197,4,b	;volatile
 33368                           
 33369                           ; BSR set to: 14
 33370  000036  A9CD               	btfss	205,4,b	;volatile
 33371  000038  D009               	goto	i2l870
 33372                           
 33373                           ; BSR set to: 14
 33374                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 33375  00003A  D801               	call	i2u2194_48
 33376  00003C  D021               	goto	i2l873
 33377  00003E                     i2u2194_48:
 33378  00003E  0005               	push	
 33379  000040  6EFA               	movwf	pclath,c
 33380  000042  0102               	movlb	2	; () banked
 33381  000044  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 33382  000046  6EFD               	movwf	tosl,c
 33383  000048  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 33384  00004A  D00B               	goto	L113
 33385  00004C                     i2l870:
 33386                           
 33387                           ; BSR set to: 14
 33388  00004C  BBC5               	btfsc	197,5,b	;volatile
 33389                           
 33390                           ; BSR set to: 14
 33391  00004E  ABCD               	btfss	205,5,b	;volatile
 33392  000050  D00C               	goto	i2l872
 33393                           
 33394                           ; BSR set to: 14
 33395                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 33396  000052  D801               	call	i2u2197_48
 33397  000054  D015               	goto	i2l873
 33398  000056                     i2u2197_48:
 33399  000056  0005               	push	
 33400  000058  6EFA               	movwf	pclath,c
 33401  00005A  0102               	movlb	2	; () banked
 33402  00005C  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 33403  00005E  6EFD               	movwf	tosl,c
 33404  000060  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 33405  000062                     L113:
 33406  000062  6EFE               	movwf	tosh,c
 33407  000064  6AFF               	clrf	tosu,c
 33408  000066  50FA               	movf	pclath,w,c
 33409  000068  0012               	return		;indir
 33410  00006A                     i2l872:
 33411                           
 33412                           ; BSR set to: 14
 33413  00006A  B1C6               	btfsc	198,0,b	;volatile
 33414                           
 33415                           ; BSR set to: 14
 33416  00006C  A1CE               	btfss	206,0,b	;volatile
 33417  00006E  D003               	goto	i2l874
 33418                           
 33419                           ; BSR set to: 14
 33420                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 33421  000070  ECC5  F045         	call	_TMR1_ISR	;wreg free
 33422                           
 33423                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 33424  000074  D005               	goto	i2l873
 33425  000076                     i2l874:
 33426                           
 33427                           ; BSR set to: 14
 33428  000076  B3C6               	btfsc	198,1,b	;volatile
 33429                           
 33430                           ; BSR set to: 14
 33431  000078  A3CE               	btfss	206,1,b	;volatile
 33432  00007A  D002               	goto	i2l873
 33433                           
 33434                           ; BSR set to: 14
 33435                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 33436  00007C  EC47  F031         	call	_TMR2_ISR	;wreg free
 33437  000080                     i2l873:
 33438                           
 33439                           ; BSR set to: 14
 33440  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 33441  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 33442  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 33443  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 33444  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 33445  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 33446  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33447  00009A  0011               	retfie		f
 33448  00009C                     __end_of_INTERRUPT_InterruptManager:
 33449                           	callstack 0
 33450                           
 33451 ;; *************** function _TMR2_ISR *****************
 33452 ;; Defined at:
 33453 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 33454 ;; Parameters:    Size  Location     Type
 33455 ;;		None
 33456 ;; Auto vars:     Size  Location     Type
 33457 ;;		None
 33458 ;; Return value:  Size  Location     Type
 33459 ;;                  1    wreg      void 
 33460 ;; Registers used:
 33461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33462 ;; Tracked objects:
 33463 ;;		On entry : 3F/E
 33464 ;;		On exit  : 0/0
 33465 ;;		Unchanged: 0/0
 33466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33471 ;;Total ram usage:        0 bytes
 33472 ;; Hardware stack levels used: 1
 33473 ;; Hardware stack levels required when called: 2
 33474 ;; This function calls:
 33475 ;;		Absolute function
 33476 ;;		_ReadADC
 33477 ;;		_TMR2_DefaultInterruptHandler
 33478 ;;		_controlTimeslots
 33479 ;;		_refreshSegment
 33480 ;; This function is called by:
 33481 ;;		_INTERRUPT_InterruptManager
 33482 ;; This function uses a non-reentrant model
 33483 ;;
 33484                           
 33485                           	psect	text186
 33486  00628E                     __ptext186:
 33487                           	callstack 0
 33488  00628E                     _TMR2_ISR:
 33489                           	callstack 14
 33490                           
 33491                           ; BSR set to: 14
 33492                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 33493                           
 33494                           ;incstack = 0
 33495  00628E  93CE               	bcf	206,1,b	;volatile
 33496                           
 33497                           ; BSR set to: 14
 33498                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 33499  006290  EC51  F043         	call	_ReadADC	;wreg free
 33500                           
 33501                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 33502  006294  EC4E  F03D         	call	_refreshSegment	;wreg free
 33503                           
 33504                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 33505  006298  0101               	movlb	1	; () banked
 33506  00629A  519D               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 33507  00629C  A4D8               	btfss	status,2,c
 33508                           
 33509                           ; BSR set to: 1
 33510                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 33511  00629E  079D               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 33512                           
 33513                           ; BSR set to: 1
 33514                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 33515  0062A0  519B               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 33516  0062A2  B4D8               	btfsc	status,2,c
 33517  0062A4  D002               	goto	i2l16408
 33518                           
 33519                           ; BSR set to: 1
 33520                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 33521  0062A6  079B               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 33522                           
 33523                           ;mcc_generated_files/tmr2.c: 201:                 }
 33524  0062A8  D089               	goto	i2l16480
 33525  0062AA                     i2l16408:
 33526                           
 33527                           ; BSR set to: 1
 33528                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 33529  0062AA  0E32               	movlw	50
 33530  0062AC  6F9B               	movwf	(_ts_system+1)& (0+255),b	;volatile
 33531                           
 33532                           ; BSR set to: 1
 33533                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 33534  0062AE  EC6F  F02D         	call	_controlTimeslots	;wreg free
 33535                           
 33536                           ; BSR set to: 1
 33537                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 33538  0062B2  0100               	movlb	0	; () banked
 33539  0062B4  5192               	movf	_Counterchoose& (0+255),w,b
 33540  0062B6  A4D8               	btfss	status,2,c
 33541  0062B8  D002               	goto	i2l16416
 33542                           
 33543                           ; BSR set to: 0
 33544                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 33545  0062BA  0E01               	movlw	1
 33546  0062BC  D001               	goto	L114
 33547  0062BE                     i2l16416:
 33548                           
 33549                           ; BSR set to: 0
 33550                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 33551  0062BE  0E00               	movlw	0
 33552  0062C0                     L114:
 33553  0062C0  6F92               	movwf	_Counterchoose& (0+255),b
 33554                           
 33555                           ; BSR set to: 0
 33556                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 33557                           
 33558                           ;mcc_generated_files/tmr2.c: 217:                                }
 33559  0062C2  0101               	movlb	1	; () banked
 33560  0062C4  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 33561  0062C6  A4D8               	btfss	status,2,c
 33562  0062C8  D034               	goto	i2l16442
 33563                           
 33564                           ; BSR set to: 1
 33565                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 33566  0062CA  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 33567  0062CC  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 33568  0062CE  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 33569  0062D0  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 33570  0062D2  B4D8               	btfsc	status,2,c
 33571  0062D4  D008               	goto	i2l1266
 33572                           
 33573                           ; BSR set to: 1
 33574  0062D6  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 33575  0062D8  B4D8               	btfsc	status,2,c
 33576  0062DA  D005               	goto	i2l1266
 33577                           
 33578                           ; BSR set to: 1
 33579                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 33580  0062DC  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 33581  0062DE  0E00               	movlw	0
 33582  0062E0  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 33583  0062E2  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 33584  0062E4  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 33585  0062E6                     i2l1266:
 33586                           
 33587                           ; BSR set to: 1
 33588                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 33589  0062E6  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33590  0062E8  A4D8               	btfss	status,2,c
 33591  0062EA  D00E               	goto	i2l16432
 33592                           
 33593                           ; BSR set to: 1
 33594                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 33595  0062EC  057B               	decf	_powerControl_st& (0+255),w,b
 33596  0062EE  A4D8               	btfss	status,2,c
 33597  0062F0  D004               	goto	i2u1857_40
 33598                           
 33599                           ; BSR set to: 1
 33600                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 33601  0062F2  0100               	movlb	0	; () banked
 33602  0062F4  0592               	decf	_Counterchoose& (0+255),w,b
 33603  0062F6  A4D8               	btfss	status,2,c
 33604  0062F8  D061               	goto	i2l16480
 33605  0062FA                     i2u1857_40:
 33606                           
 33607                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 33608  0062FA  0E01               	movlw	1
 33609  0062FC  0101               	movlb	1	; () banked
 33610  0062FE  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33611  006300  0E00               	movlw	0
 33612  006302  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33613  006304  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33614  006306  D013               	goto	L115
 33615  006308                     i2l16432:
 33616                           
 33617                           ; BSR set to: 1
 33618  006308  0E02               	movlw	2
 33619  00630A  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33620  00630C  A4D8               	btfss	status,2,c
 33621  00630E  D056               	goto	i2l16480
 33622                           
 33623                           ; BSR set to: 1
 33624                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 33625  006310  057B               	decf	_powerControl_st& (0+255),w,b
 33626  006312  A4D8               	btfss	status,2,c
 33627  006314  D004               	goto	i2u1860_40
 33628                           
 33629                           ; BSR set to: 1
 33630                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 33631  006316  0100               	movlb	0	; () banked
 33632  006318  0592               	decf	_Counterchoose& (0+255),w,b
 33633  00631A  A4D8               	btfss	status,2,c
 33634  00631C  D04F               	goto	i2l16480
 33635  00631E                     i2u1860_40:
 33636                           
 33637                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 33638  00631E  0EFF               	movlw	255
 33639  006320  0101               	movlb	1	; () banked
 33640  006322  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33641  006324  0EFF               	movlw	255
 33642  006326  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33643  006328  0EFF               	movlw	255
 33644  00632A  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33645  00632C  0EFF               	movlw	255
 33646  00632E                     L115:
 33647  00632E  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 33648                           
 33649                           ;mcc_generated_files/tmr2.c: 263:                            }
 33650  006330  D045               	goto	i2l16480
 33651  006332                     i2l16442:
 33652                           
 33653                           ; BSR set to: 1
 33654                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 33655  006332  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 33656  006334  A4D8               	btfss	status,2,c
 33657  006336  D01C               	goto	i2l1277
 33658                           
 33659                           ; BSR set to: 1
 33660                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 33661  006338  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33662  00633A  A4D8               	btfss	status,2,c
 33663  00633C  D00B               	goto	i2l16452
 33664                           
 33665                           ; BSR set to: 1
 33666                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33667  00633E  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33668  006340  B4D8               	btfsc	status,2,c
 33669  006342  D016               	goto	i2l1277
 33670                           
 33671                           ; BSR set to: 1
 33672                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 33673  006344  0E01               	movlw	1
 33674  006346  0100               	movlb	0	; () banked
 33675  006348  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33676  00634A  0E00               	movlw	0
 33677  00634C  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33678  00634E  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33679  006350  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33680  006352  D00E               	goto	i2l1277
 33681  006354                     i2l16452:
 33682                           
 33683                           ; BSR set to: 1
 33684  006354  0E02               	movlw	2
 33685  006356  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33686  006358  A4D8               	btfss	status,2,c
 33687  00635A  D00A               	goto	i2l1277
 33688                           
 33689                           ; BSR set to: 1
 33690                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33691  00635C  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33692  00635E  B4D8               	btfsc	status,2,c
 33693  006360  D007               	goto	i2l1277
 33694                           
 33695                           ; BSR set to: 1
 33696                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 33697  006362  0E01               	movlw	1
 33698  006364  0100               	movlb	0	; () banked
 33699  006366  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33700  006368  0E00               	movlw	0
 33701  00636A  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33702  00636C  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33703  00636E  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33704  006370                     i2l1277:
 33705                           
 33706                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 33707  006370  0101               	movlb	1	; () banked
 33708  006372  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33709  006374  A4D8               	btfss	status,2,c
 33710  006376  D022               	goto	i2l16480
 33711                           
 33712                           ; BSR set to: 1
 33713  006378  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 33714  00637A  A4D8               	btfss	status,2,c
 33715  00637C  D01F               	goto	i2l16480
 33716                           
 33717                           ; BSR set to: 1
 33718                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 33719  00637E  519A               	movf	_ts_system& (0+255),w,b	;volatile
 33720  006380  B4D8               	btfsc	status,2,c
 33721  006382  D002               	goto	i2l16466
 33722                           
 33723                           ; BSR set to: 1
 33724                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 33725  006384  079A               	decf	_ts_system& (0+255),f,b	;volatile
 33726                           
 33727                           ;mcc_generated_files/tmr2.c: 311:                                            }
 33728  006386  D01A               	goto	i2l16480
 33729  006388                     i2l16466:
 33730                           
 33731                           ; BSR set to: 1
 33732                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 33733  006388  0E0A               	movlw	10
 33734  00638A  6F9A               	movwf	_ts_system& (0+255),b	;volatile
 33735                           
 33736                           ; BSR set to: 1
 33737                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 33738  00638C  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33739  00638E  A4D8               	btfss	status,2,c
 33740  006390  D009               	goto	i2l16474
 33741                           
 33742                           ; BSR set to: 1
 33743                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 33744  006392  0100               	movlb	0	; () banked
 33745  006394  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 33746                           
 33747                           ; BSR set to: 0
 33748                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 33749  006396  0E01               	movlw	1
 33750  006398  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33751  00639A  0E00               	movlw	0
 33752  00639C  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33753  00639E  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33754  0063A0  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 33755                           
 33756                           ;mcc_generated_files/tmr2.c: 322:                                                }
 33757  0063A2  D00C               	goto	i2l16480
 33758  0063A4                     i2l16474:
 33759                           
 33760                           ; BSR set to: 1
 33761  0063A4  0E02               	movlw	2
 33762  0063A6  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33763  0063A8  A4D8               	btfss	status,2,c
 33764  0063AA  D008               	goto	i2l16480
 33765                           
 33766                           ; BSR set to: 1
 33767                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 33768  0063AC  0100               	movlb	0	; () banked
 33769  0063AE  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 33770                           
 33771                           ; BSR set to: 0
 33772                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 33773  0063B0  0E01               	movlw	1
 33774  0063B2  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 33775  0063B4  0E00               	movlw	0
 33776  0063B6  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 33777  0063B8  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 33778  0063BA  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 33779  0063BC                     i2l16480:
 33780                           
 33781                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 33782  0063BC  0102               	movlb	2	; () banked
 33783  0063BE  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33784  0063C0  11DE               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33785  0063C2  B4D8               	btfsc	status,2,c
 33786  0063C4  0012               	return	
 33787                           
 33788                           ; BSR set to: 2
 33789                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 33790  0063C6  D801               	call	i2u1872_48
 33791  0063C8  0012               	return	
 33792  0063CA                     i2u1872_48:
 33793  0063CA  0005               	push	
 33794  0063CC  6EFA               	movwf	pclath,c
 33795  0063CE  51DD               	movf	_TMR2_InterruptHandler& (0+255),w,b
 33796  0063D0  6EFD               	movwf	tosl,c
 33797  0063D2  51DE               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 33798  0063D4  6EFE               	movwf	tosh,c
 33799  0063D6  6AFF               	clrf	tosu,c
 33800  0063D8  50FA               	movf	pclath,w,c
 33801  0063DA  0012               	return		;indir
 33802  0063DC                     __end_of_TMR2_ISR:
 33803                           	callstack 0
 33804                           
 33805 ;; *************** function _refreshSegment *****************
 33806 ;; Defined at:
 33807 ;;		line 50 in file "outputs_MC50.c"
 33808 ;; Parameters:    Size  Location     Type
 33809 ;;		None
 33810 ;; Auto vars:     Size  Location     Type
 33811 ;;		None
 33812 ;; Return value:  Size  Location     Type
 33813 ;;                  1    wreg      void 
 33814 ;; Registers used:
 33815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33816 ;; Tracked objects:
 33817 ;;		On entry : 31/E
 33818 ;;		On exit  : 3E/0
 33819 ;;		Unchanged: 0/0
 33820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33825 ;;Total ram usage:        0 bytes
 33826 ;; Hardware stack levels used: 1
 33827 ;; Hardware stack levels required when called: 1
 33828 ;; This function calls:
 33829 ;;		_Segments_Set
 33830 ;; This function is called by:
 33831 ;;		_TMR2_ISR
 33832 ;; This function uses a non-reentrant model
 33833 ;;
 33834                           
 33835                           	psect	text187
 33836  007A9C                     __ptext187:
 33837                           	callstack 0
 33838  007A9C                     _refreshSegment:
 33839                           	callstack 14
 33840                           
 33841                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 33842                           
 33843                           ;incstack = 0
 33844  007A9C  0100               	movlb	0	; () banked
 33845  007A9E  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33846  007AA0  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33847  007AA2  B4D8               	btfsc	status,2,c
 33848  007AA4  D003               	goto	i2u1473_40
 33849                           
 33850                           ; BSR set to: 0
 33851  007AA6  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33852  007AA8  A4D8               	btfss	status,2,c
 33853  007AAA  D01F               	goto	i2l2128
 33854  007AAC                     i2u1473_40:
 33855                           
 33856                           ; BSR set to: 0
 33857                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 33858  007AAC  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 33859  007AAE  A4D8               	btfss	status,2,c
 33860  007AB0  D00D               	goto	i2l2123
 33861                           
 33862                           ; BSR set to: 0
 33863                           
 33864                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 33865  007AB2  9085               	bcf	133,0,c	;volatile
 33866                           
 33867                           ; BSR set to: 0
 33868                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 33869  007AB4  0ED2               	movlw	low _DispTable
 33870  007AB6  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 33871  007AB8  6ED9               	movwf	fsr2l,c
 33872  007ABA  6ADA               	clrf	fsr2h,c
 33873  007ABC  0E03               	movlw	high _DispTable
 33874  007ABE  22DA               	addwfc	fsr2h,f,c
 33875  007AC0  50DF               	movf	indf2,w,c
 33876  007AC2  ECF1  F049         	call	_Segments_Set
 33877  007AC6  8285               	bsf	133,1,c	;volatile
 33878                           
 33879                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 33880  007AC8  0E00               	movlw	0
 33881  007ACA  D00C               	goto	L116
 33882  007ACC                     i2l2123:
 33883                           
 33884                           ; BSR set to: 0
 33885  007ACC  9285               	bcf	133,1,c	;volatile
 33886                           
 33887                           ; BSR set to: 0
 33888                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 33889  007ACE  0ED2               	movlw	low _DispTable
 33890  007AD0  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 33891  007AD2  6ED9               	movwf	fsr2l,c
 33892  007AD4  6ADA               	clrf	fsr2h,c
 33893  007AD6  0E03               	movlw	high _DispTable
 33894  007AD8  22DA               	addwfc	fsr2h,f,c
 33895  007ADA  50DF               	movf	indf2,w,c
 33896  007ADC  ECF1  F049         	call	_Segments_Set
 33897  007AE0  8085               	bsf	133,0,c	;volatile
 33898                           
 33899                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 33900  007AE2  0E01               	movlw	1
 33901  007AE4                     L116:
 33902  007AE4  0100               	movlb	0	; () banked
 33903  007AE6  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 33904  007AE8  D002               	goto	i2l14484
 33905  007AEA                     i2l2128:
 33906                           
 33907                           ; BSR set to: 0
 33908  007AEA  9085               	bcf	133,0,c	;volatile
 33909                           
 33910                           ; BSR set to: 0
 33911                           
 33912                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 33913  007AEC  9285               	bcf	133,1,c	;volatile
 33914  007AEE                     i2l14484:
 33915                           
 33916                           ; BSR set to: 0
 33917                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 33918  007AEE  0101               	movlb	1	; () banked
 33919  007AF0  BFA5               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 33920  007AF2  D005               	goto	i2u1475_40
 33921  007AF4  51A5               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 33922  007AF6  E114               	bnz	i2l2135
 33923  007AF8  05A4               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 33924  007AFA  B0D8               	btfsc	status,0,c
 33925  007AFC  0012               	return	
 33926  007AFE                     i2u1475_40:
 33927                           
 33928                           ; BSR set to: 1
 33929  007AFE  0100               	movlb	0	; () banked
 33930  007B00  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 33931  007B02  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 33932  007B04  B4D8               	btfsc	status,2,c
 33933  007B06  0012               	return	
 33934                           
 33935                           ; BSR set to: 0
 33936                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 33937  007B08  C075  F1A4         	movff	_dispStruct+3,_ts_system+10	;volatile
 33938  007B0C  C076  F1A5         	movff	_dispStruct+4,_ts_system+11	;volatile
 33939                           
 33940                           ; BSR set to: 0
 33941                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 33942  007B10  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 33943  007B12  A4D8               	btfss	status,2,c
 33944  007B14  D003               	goto	i2l14494
 33945                           
 33946                           ; BSR set to: 0
 33947                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 33948  007B16  0E00               	movlw	0
 33949  007B18  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33950                           
 33951                           ;outputs_MC50.c: 85:         }
 33952  007B1A  0012               	return	
 33953  007B1C                     i2l14494:
 33954                           
 33955                           ; BSR set to: 0
 33956                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 33957  007B1C  0E01               	movlw	1
 33958  007B1E  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 33959  007B20                     i2l2135:
 33960  007B20  0012               	return		;funcret
 33961  007B22                     __end_of_refreshSegment:
 33962                           	callstack 0
 33963                           
 33964 ;; *************** function _Segments_Set *****************
 33965 ;; Defined at:
 33966 ;;		line 93 in file "outputs_MC50.c"
 33967 ;; Parameters:    Size  Location     Type
 33968 ;;  value           1    wreg     unsigned char 
 33969 ;; Auto vars:     Size  Location     Type
 33970 ;;  value           1    0[COMRAM] unsigned char 
 33971 ;; Return value:  Size  Location     Type
 33972 ;;                  1    wreg      void 
 33973 ;; Registers used:
 33974 ;;		wreg, status,2, status,0
 33975 ;; Tracked objects:
 33976 ;;		On entry : 3F/0
 33977 ;;		On exit  : 0/0
 33978 ;;		Unchanged: 0/0
 33979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33984 ;;Total ram usage:        1 bytes
 33985 ;; Hardware stack levels used: 1
 33986 ;; This function calls:
 33987 ;;		Nothing
 33988 ;; This function is called by:
 33989 ;;		_refreshSegment
 33990 ;; This function uses a non-reentrant model
 33991 ;;
 33992                           
 33993                           	psect	text188
 33994  0093E2                     __ptext188:
 33995                           	callstack 0
 33996  0093E2                     _Segments_Set:
 33997                           	callstack 14
 33998                           
 33999                           ;incstack = 0
 34000                           ;Segments_Set@value stored from wreg
 34001  0093E2  6E01               	movwf	Segments_Set@value^0,c
 34002                           
 34003                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 34004  0093E4  0E80               	movlw	128
 34005  0093E6  1686               	andwf	134,f,c	;volatile
 34006                           
 34007                           ;outputs_MC50.c: 96:    LATD |= value;
 34008  0093E8  5001               	movf	Segments_Set@value^0,w,c	;volatile
 34009  0093EA  1286               	iorwf	134,f,c	;volatile
 34010  0093EC  0012               	return		;funcret
 34011  0093EE                     __end_of_Segments_Set:
 34012                           	callstack 0
 34013                           
 34014 ;; *************** function _controlTimeslots *****************
 34015 ;; Defined at:
 34016 ;;		line 190 in file "main_MC50.c"
 34017 ;; Parameters:    Size  Location     Type
 34018 ;;		None
 34019 ;; Auto vars:     Size  Location     Type
 34020 ;;		None
 34021 ;; Return value:  Size  Location     Type
 34022 ;;                  1    wreg      void 
 34023 ;; Registers used:
 34024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34025 ;; Tracked objects:
 34026 ;;		On entry : 3F/1
 34027 ;;		On exit  : 3F/1
 34028 ;;		Unchanged: 0/0
 34029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34034 ;;Total ram usage:        0 bytes
 34035 ;; Hardware stack levels used: 1
 34036 ;; Hardware stack levels required when called: 1
 34037 ;; This function calls:
 34038 ;;		_decrementTimeslot
 34039 ;; This function is called by:
 34040 ;;		_TMR2_ISR
 34041 ;; This function uses a non-reentrant model
 34042 ;;
 34043                           
 34044                           	psect	text189
 34045  005ADE                     __ptext189:
 34046                           	callstack 0
 34047  005ADE                     _controlTimeslots:
 34048                           	callstack 14
 34049                           
 34050                           ; BSR set to: 1
 34051                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 34052                           
 34053                           ;incstack = 0
 34054  005ADE  0EA2               	movlw	low (_ts_system+8)
 34055  005AE0  6E01               	movwf	decrementTimeslot@ts^0,c
 34056  005AE2  0E01               	movlw	high (_ts_system+8)
 34057  005AE4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34058  005AE6  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34059                           
 34060                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 34061  005AEA  0EE0               	movlw	low (_ts_system+70)
 34062  005AEC  6E01               	movwf	decrementTimeslot@ts^0,c
 34063  005AEE  0E01               	movlw	high (_ts_system+70)
 34064  005AF0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34065  005AF2  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34066                           
 34067                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 34068  005AF6  0EA4               	movlw	low (_ts_system+10)
 34069  005AF8  6E01               	movwf	decrementTimeslot@ts^0,c
 34070  005AFA  0E01               	movlw	high (_ts_system+10)
 34071  005AFC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34072  005AFE  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34073                           
 34074                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 34075  005B02  0EA6               	movlw	low (_ts_system+12)
 34076  005B04  6E01               	movwf	decrementTimeslot@ts^0,c
 34077  005B06  0E01               	movlw	high (_ts_system+12)
 34078  005B08  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34079  005B0A  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34080                           
 34081                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 34082  005B0E  0EA8               	movlw	low (_ts_system+14)
 34083  005B10  6E01               	movwf	decrementTimeslot@ts^0,c
 34084  005B12  0E01               	movlw	high (_ts_system+14)
 34085  005B14  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34086  005B16  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34087                           
 34088                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 34089  005B1A  0EAA               	movlw	low (_ts_system+16)
 34090  005B1C  6E01               	movwf	decrementTimeslot@ts^0,c
 34091  005B1E  0E01               	movlw	high (_ts_system+16)
 34092  005B20  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34093  005B22  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34094                           
 34095                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 34096  005B26  0EAC               	movlw	low (_ts_system+18)
 34097  005B28  6E01               	movwf	decrementTimeslot@ts^0,c
 34098  005B2A  0E01               	movlw	high (_ts_system+18)
 34099  005B2C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34100  005B2E  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34101                           
 34102                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 34103  005B32  0EAE               	movlw	low (_ts_system+20)
 34104  005B34  6E01               	movwf	decrementTimeslot@ts^0,c
 34105  005B36  0E01               	movlw	high (_ts_system+20)
 34106  005B38  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34107  005B3A  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34108                           
 34109                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 34110  005B3E  0EB0               	movlw	low (_ts_system+22)
 34111  005B40  6E01               	movwf	decrementTimeslot@ts^0,c
 34112  005B42  0E01               	movlw	high (_ts_system+22)
 34113  005B44  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34114  005B46  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34115                           
 34116                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 34117  005B4A  0EB4               	movlw	low (_ts_system+26)
 34118  005B4C  6E01               	movwf	decrementTimeslot@ts^0,c
 34119  005B4E  0E01               	movlw	high (_ts_system+26)
 34120  005B50  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34121  005B52  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34122                           
 34123                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 34124  005B56  0EB6               	movlw	low (_ts_system+28)
 34125  005B58  6E01               	movwf	decrementTimeslot@ts^0,c
 34126  005B5A  0E01               	movlw	high (_ts_system+28)
 34127  005B5C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34128  005B5E  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34129                           
 34130                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 34131  005B62  0EB8               	movlw	low (_ts_system+30)
 34132  005B64  6E01               	movwf	decrementTimeslot@ts^0,c
 34133  005B66  0E01               	movlw	high (_ts_system+30)
 34134  005B68  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34135  005B6A  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34136                           
 34137                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 34138  005B6E  0EBE               	movlw	low (_ts_system+36)
 34139  005B70  6E01               	movwf	decrementTimeslot@ts^0,c
 34140  005B72  0E01               	movlw	high (_ts_system+36)
 34141  005B74  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34142  005B76  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34143                           
 34144                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 34145  005B7A  0EC0               	movlw	low (_ts_system+38)
 34146  005B7C  6E01               	movwf	decrementTimeslot@ts^0,c
 34147  005B7E  0E01               	movlw	high (_ts_system+38)
 34148  005B80  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34149  005B82  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34150                           
 34151                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 34152  005B86  0EC2               	movlw	low (_ts_system+40)
 34153  005B88  6E01               	movwf	decrementTimeslot@ts^0,c
 34154  005B8A  0E01               	movlw	high (_ts_system+40)
 34155  005B8C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34156  005B8E  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34157                           
 34158                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 34159  005B92  0EC4               	movlw	low (_ts_system+42)
 34160  005B94  6E01               	movwf	decrementTimeslot@ts^0,c
 34161  005B96  0E01               	movlw	high (_ts_system+42)
 34162  005B98  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34163  005B9A  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34164                           
 34165                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 34166  005B9E  0EC6               	movlw	low (_ts_system+44)
 34167  005BA0  6E01               	movwf	decrementTimeslot@ts^0,c
 34168  005BA2  0E01               	movlw	high (_ts_system+44)
 34169  005BA4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34170  005BA6  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34171                           
 34172                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 34173  005BAA  0EC8               	movlw	low (_ts_system+46)
 34174  005BAC  6E01               	movwf	decrementTimeslot@ts^0,c
 34175  005BAE  0E01               	movlw	high (_ts_system+46)
 34176  005BB0  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34177  005BB2  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34178                           
 34179                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 34180  005BB6  0ECA               	movlw	low (_ts_system+48)
 34181  005BB8  6E01               	movwf	decrementTimeslot@ts^0,c
 34182  005BBA  0E01               	movlw	high (_ts_system+48)
 34183  005BBC  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34184  005BBE  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34185                           
 34186                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 34187  005BC2  0EDC               	movlw	low (_ts_system+66)
 34188  005BC4  6E01               	movwf	decrementTimeslot@ts^0,c
 34189  005BC6  0E01               	movlw	high (_ts_system+66)
 34190  005BC8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34191  005BCA  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34192                           
 34193                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 34194  005BCE  0EDE               	movlw	low (_ts_system+68)
 34195  005BD0  6E01               	movwf	decrementTimeslot@ts^0,c
 34196  005BD2  0E01               	movlw	high (_ts_system+68)
 34197  005BD4  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34198  005BD6  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34199                           
 34200                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 34201  005BDA  0100               	movlb	0	; () banked
 34202  005BDC  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34203  005BDE  B4D8               	btfsc	status,2,c
 34204  005BE0  D008               	goto	i2u1479_40
 34205                           
 34206                           ; BSR set to: 0
 34207  005BE2  0101               	movlb	1	; () banked
 34208  005BE4  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34209  005BE6  D005               	goto	i2u1479_40
 34210  005BE8  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34211  005BEA  E109               	bnz	i2l2019
 34212  005BEC  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34213  005BEE  B0D8               	btfsc	status,0,c
 34214  005BF0  D006               	goto	i2l2019
 34215  005BF2                     i2u1479_40:
 34216                           
 34217                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 34218  005BF2  0ECC               	movlw	low (_ts_system+50)
 34219  005BF4  6E01               	movwf	decrementTimeslot@ts^0,c
 34220  005BF6  0E01               	movlw	high (_ts_system+50)
 34221  005BF8  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34222  005BFA  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34223  005BFE                     i2l2019:
 34224                           
 34225                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 34226  005BFE  0ECE               	movlw	low (_ts_system+52)
 34227  005C00  6E01               	movwf	decrementTimeslot@ts^0,c
 34228  005C02  0E01               	movlw	high (_ts_system+52)
 34229  005C04  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34230  005C06  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34231                           
 34232                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 34233  005C0A  0ED0               	movlw	low (_ts_system+54)
 34234  005C0C  6E01               	movwf	decrementTimeslot@ts^0,c
 34235  005C0E  0E01               	movlw	high (_ts_system+54)
 34236  005C10  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34237  005C12  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34238                           
 34239                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 34240  005C16  0ED2               	movlw	low (_ts_system+56)
 34241  005C18  6E01               	movwf	decrementTimeslot@ts^0,c
 34242  005C1A  0E01               	movlw	high (_ts_system+56)
 34243  005C1C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34244  005C1E  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34245                           
 34246                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 34247  005C22  0ED4               	movlw	low (_ts_system+58)
 34248  005C24  6E01               	movwf	decrementTimeslot@ts^0,c
 34249  005C26  0E01               	movlw	high (_ts_system+58)
 34250  005C28  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34251  005C2A  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34252                           
 34253                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 34254  005C2E  0ED6               	movlw	low (_ts_system+60)
 34255  005C30  6E01               	movwf	decrementTimeslot@ts^0,c
 34256  005C32  0E01               	movlw	high (_ts_system+60)
 34257  005C34  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34258  005C36  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34259                           
 34260                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 34261  005C3A  0ED8               	movlw	low (_ts_system+62)
 34262  005C3C  6E01               	movwf	decrementTimeslot@ts^0,c
 34263  005C3E  0E01               	movlw	high (_ts_system+62)
 34264  005C40  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34265  005C42  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34266                           
 34267                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 34268  005C46  0EDA               	movlw	low (_ts_system+64)
 34269  005C48  6E01               	movwf	decrementTimeslot@ts^0,c
 34270  005C4A  0E01               	movlw	high (_ts_system+64)
 34271  005C4C  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34272  005C4E  ECEA  F047         	call	_decrementTimeslot	;wreg free
 34273                           
 34274                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 34275  005C52  0101               	movlb	1	; () banked
 34276  005C54  BFBD               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 34277  005C56  0012               	return	
 34278  005C58  51BD               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 34279  005C5A  11BC               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 34280  005C5C  11BB               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 34281  005C5E  E103               	bnz	i2u1480_40
 34282  005C60  05BA               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 34283  005C62  A0D8               	btfss	status,0,c
 34284  005C64  0012               	return	
 34285  005C66                     i2u1480_40:
 34286                           
 34287                           ; BSR set to: 1
 34288                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 34289  005C66  0EFF               	movlw	255
 34290  005C68  27BA               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 34291  005C6A  0EFF               	movlw	255
 34292  005C6C  23BB               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 34293  005C6E  0EFF               	movlw	255
 34294  005C70  23BC               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 34295  005C72  0EFF               	movlw	255
 34296  005C74  23BD               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 34297                           
 34298                           ; BSR set to: 1
 34299  005C76  0012               	return		;funcret
 34300  005C78                     __end_of_controlTimeslots:
 34301                           	callstack 0
 34302                           
 34303 ;; *************** function _decrementTimeslot *****************
 34304 ;; Defined at:
 34305 ;;		line 246 in file "main_MC50.c"
 34306 ;; Parameters:    Size  Location     Type
 34307 ;;  ts              2    0[COMRAM] PTR int 
 34308 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 34309 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 34310 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 34311 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 34312 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 34313 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 34314 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 34315 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 34316 ;; Auto vars:     Size  Location     Type
 34317 ;;		None
 34318 ;; Return value:  Size  Location     Type
 34319 ;;                  1    wreg      void 
 34320 ;; Registers used:
 34321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34322 ;; Tracked objects:
 34323 ;;		On entry : 0/1
 34324 ;;		On exit  : 0/0
 34325 ;;		Unchanged: 0/0
 34326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34330 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34331 ;;Total ram usage:        4 bytes
 34332 ;; Hardware stack levels used: 1
 34333 ;; This function calls:
 34334 ;;		Nothing
 34335 ;; This function is called by:
 34336 ;;		_controlTimeslots
 34337 ;; This function uses a non-reentrant model
 34338 ;;
 34339                           
 34340                           	psect	text190
 34341  008FD4                     __ptext190:
 34342                           	callstack 0
 34343  008FD4                     _decrementTimeslot:
 34344                           	callstack 14
 34345                           
 34346                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 34347                           
 34348                           ; BSR set to: 1
 34349                           ;incstack = 0
 34350  008FD4  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 34351  008FD8  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 34352  008FDC  0E01               	movlw	1
 34353  008FDE  BEDB               	btfsc	plusw2,7,c
 34354  008FE0  0012               	return	
 34355  008FE2  0E01               	movlw	1
 34356  008FE4  50DB               	movf	plusw2,w,c
 34357  008FE6  E103               	bnz	i2u1316_40
 34358  008FE8  04DE               	decf	postinc2,w,c
 34359  008FEA  A0D8               	btfss	status,0,c
 34360  008FEC  0012               	return	
 34361  008FEE                     i2u1316_40:
 34362                           
 34363                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 34364  008FEE  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 34365  008FF2  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 34366  008FF6  06DE               	decf	postinc2,f,c
 34367  008FF8  0E00               	movlw	0
 34368  008FFA  5ADD               	subwfb	postdec2,f,c
 34369  008FFC  0012               	return		;funcret
 34370  008FFE                     __end_of_decrementTimeslot:
 34371                           	callstack 0
 34372                           
 34373 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 34374 ;; Defined at:
 34375 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 34376 ;; Parameters:    Size  Location     Type
 34377 ;;		None
 34378 ;; Auto vars:     Size  Location     Type
 34379 ;;		None
 34380 ;; Return value:  Size  Location     Type
 34381 ;;                  1    wreg      void 
 34382 ;; Registers used:
 34383 ;;		None
 34384 ;; Tracked objects:
 34385 ;;		On entry : 3F/2
 34386 ;;		On exit  : 3F/2
 34387 ;;		Unchanged: 3F/0
 34388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34393 ;;Total ram usage:        0 bytes
 34394 ;; Hardware stack levels used: 1
 34395 ;; This function calls:
 34396 ;;		Nothing
 34397 ;; This function is called by:
 34398 ;;		_TMR2_Initialize
 34399 ;;		_TMR2_ISR
 34400 ;; This function uses a non-reentrant model
 34401 ;;
 34402                           
 34403                           	psect	text191
 34404  00951C                     __ptext191:
 34405                           	callstack 0
 34406  00951C                     _TMR2_DefaultInterruptHandler:
 34407                           	callstack 15
 34408                           
 34409                           ; BSR set to: 2
 34410                           
 34411                           ;incstack = 0
 34412  00951C  0012               	return		;funcret
 34413  00951E                     __end_of_TMR2_DefaultInterruptHandler:
 34414                           	callstack 0
 34415                           
 34416 ;; *************** function _ReadADC *****************
 34417 ;; Defined at:
 34418 ;;		line 38 in file "controlCurrent_MC50.c"
 34419 ;; Parameters:    Size  Location     Type
 34420 ;;		None
 34421 ;; Auto vars:     Size  Location     Type
 34422 ;;		None
 34423 ;; Return value:  Size  Location     Type
 34424 ;;                  1    wreg      void 
 34425 ;; Registers used:
 34426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34427 ;; Tracked objects:
 34428 ;;		On entry : 3F/E
 34429 ;;		On exit  : 31/0
 34430 ;;		Unchanged: 0/0
 34431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34434 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34435 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34436 ;;Total ram usage:        3 bytes
 34437 ;; Hardware stack levels used: 1
 34438 ;; Hardware stack levels required when called: 1
 34439 ;; This function calls:
 34440 ;;		_ADCC_GetSingleConversion
 34441 ;; This function is called by:
 34442 ;;		_TMR2_ISR
 34443 ;; This function uses a non-reentrant model
 34444 ;;
 34445                           
 34446                           	psect	text192
 34447  0086A2                     __ptext192:
 34448                           	callstack 0
 34449  0086A2                     _ReadADC:
 34450                           	callstack 14
 34451                           
 34452                           ; BSR set to: 14
 34453                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 34454                           
 34455                           ; BSR set to: 2
 34456                           ;incstack = 0
 34457  0086A2  B060               	btfsc	96,0,c	;volatile
 34458  0086A4  0012               	return	
 34459                           
 34460                           ; BSR set to: 14
 34461                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 34462  0086A6  0E1D               	movlw	29
 34463  0086A8  0100               	movlb	0	; () banked
 34464  0086AA  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 34465  0086AC  D002               	goto	i2l14460
 34466                           
 34467                           ; BSR set to: 0
 34468                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 34469  0086AE  0E00               	movlw	0
 34470  0086B0  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 34471  0086B2                     i2l14460:
 34472                           
 34473                           ; BSR set to: 0
 34474                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 34475  0086B2  5063               	movf	99,w,c	;volatile
 34476  0086B4  CF64 F002          	movff	3940,??_ReadADC	;volatile
 34477  0086B8  6A03               	clrf	(??_ReadADC+1)^0,c
 34478  0086BA  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 34479  0086BE  6A02               	clrf	??_ReadADC^0,c
 34480  0086C0  2602               	addwf	??_ReadADC^0,f,c
 34481  0086C2  0E00               	movlw	0
 34482  0086C4  2203               	addwfc	(??_ReadADC+1)^0,f,c
 34483  0086C6  0E06               	movlw	6
 34484  0086C8  6E04               	movwf	(??_ReadADC+2)^0,c
 34485  0086CA                     i2u1471_45:
 34486  0086CA  90D8               	bcf	status,0,c
 34487  0086CC  3203               	rrcf	(??_ReadADC+1)^0,f,c
 34488  0086CE  3202               	rrcf	??_ReadADC^0,f,c
 34489  0086D0  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 34490  0086D2  D7FB               	goto	i2u1471_45
 34491  0086D4  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 34492  0086D6  0D02               	mullw	2
 34493  0086D8  0E00               	movlw	low _ADC_array
 34494  0086DA  24F3               	addwf	243,w,c
 34495  0086DC  6ED9               	movwf	fsr2l,c
 34496  0086DE  0E02               	movlw	high _ADC_array
 34497  0086E0  20F4               	addwfc	prodh,w,c
 34498  0086E2  6EDA               	movwf	fsr2h,c
 34499  0086E4  C002  FFDE         	movff	??_ReadADC,postinc2
 34500  0086E8  C003  FFDD         	movff	??_ReadADC+1,postdec2
 34501                           
 34502                           ; BSR set to: 0
 34503                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 34504  0086EC  0E00               	movlw	0
 34505  0086EE  EC94  F049         	call	_ADCC_GetSingleConversion
 34506                           
 34507                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 34508  0086F2  0100               	movlb	0	; () banked
 34509  0086F4  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 34510  0086F6  0012               	return		;funcret
 34511  0086F8                     __end_of_ReadADC:
 34512                           	callstack 0
 34513                           
 34514 ;; *************** function _ADCC_GetSingleConversion *****************
 34515 ;; Defined at:
 34516 ;;		line 131 in file "mcc_generated_files/adcc.c"
 34517 ;; Parameters:    Size  Location     Type
 34518 ;;  channel         1    wreg     enum E10053
 34519 ;; Auto vars:     Size  Location     Type
 34520 ;;  channel         1    0[COMRAM] enum E10053
 34521 ;; Return value:  Size  Location     Type
 34522 ;;                  2  433[None  ] int 
 34523 ;; Registers used:
 34524 ;;		wreg, status,2, cstack
 34525 ;; Tracked objects:
 34526 ;;		On entry : 3F/0
 34527 ;;		On exit  : 0/0
 34528 ;;		Unchanged: 0/0
 34529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34534 ;;Total ram usage:        1 bytes
 34535 ;; Hardware stack levels used: 1
 34536 ;; This function calls:
 34537 ;;		Nothing
 34538 ;; This function is called by:
 34539 ;;		_ReadADC
 34540 ;; This function uses a non-reentrant model
 34541 ;;
 34542                           
 34543                           	psect	text193
 34544  009328                     __ptext193:
 34545                           	callstack 0
 34546  009328                     _ADCC_GetSingleConversion:
 34547                           	callstack 14
 34548                           
 34549                           ;incstack = 0
 34550                           ;ADCC_GetSingleConversion@channel stored from wreg
 34551  009328  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 34552                           
 34553                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 34554  00932A  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 34555                           
 34556                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 34557  00932E  8E60               	bsf	96,7,c	;volatile
 34558                           
 34559                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 34560  009330  0E1A               	movlw	26
 34561  009332                     i2u2923_47:
 34562  009332  2EE8               	decfsz	wreg,f,c
 34563  009334  D7FE               	bra	i2u2923_47
 34564  009336  D000               	nop2	
 34565                           
 34566                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 34567  009338  9C60               	bcf	96,6,c	;volatile
 34568                           
 34569                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 34570  00933A  8060               	bsf	96,0,c	;volatile
 34571  00933C  0012               	return		;funcret
 34572  00933E                     __end_of_ADCC_GetSingleConversion:
 34573                           	callstack 0
 34574                           
 34575 ;; *************** function _TMR1_ISR *****************
 34576 ;; Defined at:
 34577 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 34578 ;; Parameters:    Size  Location     Type
 34579 ;;		None
 34580 ;; Auto vars:     Size  Location     Type
 34581 ;;		None
 34582 ;; Return value:  Size  Location     Type
 34583 ;;                  1    wreg      void 
 34584 ;; Registers used:
 34585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34586 ;; Tracked objects:
 34587 ;;		On entry : 3F/E
 34588 ;;		On exit  : 0/0
 34589 ;;		Unchanged: 0/0
 34590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34595 ;;Total ram usage:        0 bytes
 34596 ;; Hardware stack levels used: 1
 34597 ;; Hardware stack levels required when called: 2
 34598 ;; This function calls:
 34599 ;;		Absolute function
 34600 ;;		_TMR1_DefaultInterruptHandler
 34601 ;;		_TMR1_WriteTimer
 34602 ;;		_controlMotorForce
 34603 ;; This function is called by:
 34604 ;;		_INTERRUPT_InterruptManager
 34605 ;; This function uses a non-reentrant model
 34606 ;;
 34607                           
 34608                           	psect	text194
 34609  008B8A                     __ptext194:
 34610                           	callstack 0
 34611  008B8A                     _TMR1_ISR:
 34612                           	callstack 14
 34613                           
 34614                           ; BSR set to: 14
 34615                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 34616                           
 34617                           ;incstack = 0
 34618  008B8A  91CE               	bcf	206,0,b	;volatile
 34619                           
 34620                           ; BSR set to: 14
 34621                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 34622  008B8C  EC20  F026         	call	_controlMotorForce	;wreg free
 34623                           
 34624                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 34625  008B90  0101               	movlb	1	; () banked
 34626  008B92  519F               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 34627  008B94  A4D8               	btfss	status,2,c
 34628                           
 34629                           ; BSR set to: 1
 34630                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 34631  008B96  079F               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 34632                           
 34633                           ; BSR set to: 1
 34634                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 34635  008B98  519C               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 34636  008B9A  A4D8               	btfss	status,2,c
 34637                           
 34638                           ; BSR set to: 1
 34639                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 34640  008B9C  079C               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 34641                           
 34642                           ; BSR set to: 1
 34643                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 34644  008B9E  C2E1  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 34645  008BA2  C2E2  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 34646  008BA6  ECF2  F048         	call	_TMR1_WriteTimer	;wreg free
 34647                           
 34648                           ; BSR set to: 1
 34649                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 34650  008BAA  0102               	movlb	2	; () banked
 34651  008BAC  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34652  008BAE  11E0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34653  008BB0  B4D8               	btfsc	status,2,c
 34654  008BB2  0012               	return	
 34655                           
 34656                           ; BSR set to: 2
 34657                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 34658  008BB4  D801               	call	i2u1848_48
 34659  008BB6  0012               	return	
 34660  008BB8                     i2u1848_48:
 34661  008BB8  0005               	push	
 34662  008BBA  6EFA               	movwf	pclath,c
 34663  008BBC  51DF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34664  008BBE  6EFD               	movwf	tosl,c
 34665  008BC0  51E0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34666  008BC2  6EFE               	movwf	tosh,c
 34667  008BC4  6AFF               	clrf	tosu,c
 34668  008BC6  50FA               	movf	pclath,w,c
 34669  008BC8  0012               	return		;indir
 34670  008BCA                     __end_of_TMR1_ISR:
 34671                           	callstack 0
 34672                           
 34673 ;; *************** function _controlMotorForce *****************
 34674 ;; Defined at:
 34675 ;;		line 213 in file "outputs_MC50.c"
 34676 ;; Parameters:    Size  Location     Type
 34677 ;;		None
 34678 ;; Auto vars:     Size  Location     Type
 34679 ;;		None
 34680 ;; Return value:  Size  Location     Type
 34681 ;;                  1    wreg      void 
 34682 ;; Registers used:
 34683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34684 ;; Tracked objects:
 34685 ;;		On entry : 3F/E
 34686 ;;		On exit  : 3E/0
 34687 ;;		Unchanged: 0/0
 34688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34691 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34692 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34693 ;;Total ram usage:        5 bytes
 34694 ;; Hardware stack levels used: 1
 34695 ;; Hardware stack levels required when called: 1
 34696 ;; This function calls:
 34697 ;;		i2_GetMotorPower
 34698 ;;		i2_VerifyElectricalBrake
 34699 ;; This function is called by:
 34700 ;;		_TMR1_ISR
 34701 ;; This function uses a non-reentrant model
 34702 ;;
 34703                           
 34704                           	psect	text195
 34705  004C40                     __ptext195:
 34706                           	callstack 0
 34707  004C40                     _controlMotorForce:
 34708                           	callstack 14
 34709                           
 34710                           ; BSR set to: 14
 34711                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 34712                           
 34713                           ;incstack = 0
 34714  004C40  ECFA  F038         	call	i2_GetMotorPower	;wreg free
 34715  004C44  6F8F               	movwf	_difTime& (0+255),b
 34716                           
 34717                           ; BSR set to: 1
 34718                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 34719  004C46  057B               	decf	_powerControl_st& (0+255),w,b
 34720  004C48  A4D8               	btfss	status,2,c
 34721  004C4A  D00F               	goto	i2l2186
 34722                           
 34723                           ; BSR set to: 1
 34724                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 34725  004C4C  BFC7               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 34726  004C4E  D008               	goto	i2l14348
 34727  004C50  51C7               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 34728  004C52  E103               	bnz	i2u1431_40
 34729  004C54  05C6               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 34730  004C56  A0D8               	btfss	status,0,c
 34731  004C58  D003               	goto	i2l14348
 34732  004C5A                     i2u1431_40:
 34733                           
 34734                           ; BSR set to: 1
 34735                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 34736  004C5A  0E00               	movlw	0
 34737  004C5C  6F90               	movwf	_StateTRIAC& (0+255),b
 34738                           
 34739                           ;outputs_MC50.c: 223:         }
 34740  004C5E  D005               	goto	i2l2186
 34741  004C60                     i2l14348:
 34742                           
 34743                           ; BSR set to: 1
 34744  004C60  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 34745  004C62  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 34746  004C64  A0D8               	btfss	status,0,c
 34747                           
 34748                           ; BSR set to: 1
 34749                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 34750  004C66  C17E  F18F         	movff	_powerControl_st+3,_difTime
 34751  004C6A                     i2l2186:
 34752                           
 34753                           ; BSR set to: 1
 34754                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 34755  004C6A  A68D               	btfss	141,3,c	;volatile
 34756  004C6C  D071               	goto	i2l2190
 34757                           
 34758                           ; BSR set to: 1
 34759  004C6E  5192               	movf	_zeroCrossing& (0+255),w,b
 34760  004C70  A4D8               	btfss	status,2,c
 34761  004C72  D06E               	goto	i2l2190
 34762                           
 34763                           ; BSR set to: 1
 34764                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 34765  004C74  5191               	movf	_waitZeroPeak& (0+255),w,b
 34766  004C76  A4D8               	btfss	status,2,c
 34767  004C78  D016               	goto	i2l14364
 34768                           
 34769                           ; BSR set to: 1
 34770                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 34771  004C7A  0EEF               	movlw	low _zeroCrossingWaitTime
 34772  004C7C  0100               	movlb	0	; () banked
 34773  004C7E  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34774  004C80  6ED9               	movwf	fsr2l,c
 34775  004C82  6ADA               	clrf	fsr2h,c
 34776  004C84  0E02               	movlw	high _zeroCrossingWaitTime
 34777  004C86  22DA               	addwfc	fsr2h,f,c
 34778  004C88  0101               	movlb	1	; () banked
 34779  004C8A  90D8               	bcf	status,0,c
 34780  004C8C  3193               	rrcf	_zeroCrossingLength& (0+255),w,b
 34781  004C8E  6EDF               	movwf	indf2,c
 34782                           
 34783                           ; BSR set to: 1
 34784                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 34785  004C90  0100               	movlb	0	; () banked
 34786  004C92  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34787  004C94  A4D8               	btfss	status,2,c
 34788  004C96  D002               	goto	i2l14362
 34789                           
 34790                           ; BSR set to: 0
 34791                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 34792  004C98  0E01               	movlw	1
 34793  004C9A  D001               	goto	L117
 34794  004C9C                     i2l14362:
 34795                           
 34796                           ; BSR set to: 0
 34797                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 34798  004C9C  0E00               	movlw	0
 34799  004C9E                     L117:
 34800  004C9E  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 34801                           
 34802                           ; BSR set to: 0
 34803                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 34804                           
 34805                           ;outputs_MC50.c: 268:             }
 34806  004CA0  0E00               	movlw	0
 34807  004CA2  0101               	movlb	1	; () banked
 34808  004CA4  6F93               	movwf	_zeroCrossingLength& (0+255),b
 34809  004CA6                     i2l14364:
 34810                           
 34811                           ; BSR set to: 1
 34812                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 34813  004CA6  0E50               	movlw	80
 34814  004CA8  658F               	cpfsgt	_difTime& (0+255),b
 34815  004CAA  D007               	goto	i2u1438_40
 34816                           
 34817                           ; BSR set to: 1
 34818  004CAC  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34819  004CAE  D008               	goto	i2l14370
 34820  004CB0  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34821  004CB2  E103               	bnz	i2u1438_40
 34822  004CB4  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34823  004CB6  A0D8               	btfss	status,0,c
 34824  004CB8  D003               	goto	i2l14370
 34825  004CBA                     i2u1438_40:
 34826                           
 34827                           ; BSR set to: 1
 34828                           
 34829                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 34830  004CBA  9E86               	bcf	134,7,c	;volatile
 34831                           
 34832                           ; BSR set to: 1
 34833                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 34834  004CBC  0E00               	movlw	0
 34835  004CBE  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 34836  004CC0                     i2l14370:
 34837                           
 34838                           ; BSR set to: 1
 34839                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 34840  004CC0  2B91               	incf	_waitZeroPeak& (0+255),f,b
 34841                           
 34842                           ; BSR set to: 1
 34843                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 34844  004CC2  0EEF               	movlw	low _zeroCrossingWaitTime
 34845  004CC4  0100               	movlb	0	; () banked
 34846  004CC6  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 34847  004CC8  6ED9               	movwf	fsr2l,c
 34848  004CCA  6ADA               	clrf	fsr2h,c
 34849  004CCC  0E02               	movlw	high _zeroCrossingWaitTime
 34850  004CCE  22DA               	addwfc	fsr2h,f,c
 34851  004CD0  0101               	movlb	1	; () banked
 34852  004CD2  5191               	movf	_waitZeroPeak& (0+255),w,b
 34853  004CD4  5CDE               	subwf	postinc2,w,c
 34854  004CD6  B0D8               	btfsc	status,0,c
 34855  004CD8  D044               	goto	i2l14400
 34856                           
 34857                           ; BSR set to: 1
 34858                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 34859  004CDA  0E59               	movlw	89
 34860  004CDC  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 34861  004CDE  D005               	goto	i2l14380
 34862                           
 34863                           ; BSR set to: 1
 34864  004CE0  0E6A               	movlw	106
 34865  004CE2  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 34866  004CE4  D002               	goto	i2l14380
 34867                           
 34868                           ; BSR set to: 1
 34869                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 34870  004CE6  0E01               	movlw	1
 34871  004CE8  D001               	goto	L118
 34872  004CEA                     i2l14380:
 34873                           
 34874                           ; BSR set to: 1
 34875                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 34876  004CEA  0E00               	movlw	0
 34877  004CEC                     L118:
 34878  004CEC  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 34879                           
 34880                           ; BSR set to: 1
 34881                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 34882                           
 34883                           ;outputs_MC50.c: 292:             }
 34884  004CEE  0E50               	movlw	80
 34885  004CF0  6F9F               	movwf	(_ts_system+5)& (0+255),b	;volatile
 34886                           
 34887                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 34888  004CF2  0E00               	movlw	0
 34889  004CF4  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 34890                           
 34891                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 34892  004CF6  0E01               	movlw	1
 34893  004CF8  6F90               	movwf	_StateTRIAC& (0+255),b
 34894                           
 34895                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 34896  004CFA  0E01               	movlw	1
 34897  004CFC  6F92               	movwf	_zeroCrossing& (0+255),b
 34898                           
 34899                           ; BSR set to: 1
 34900                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 34901  004CFE  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 34902                           
 34903                           ; BSR set to: 1
 34904                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 34905  004D00  0100               	movlb	0	; () banked
 34906  004D02  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34907  004D04  A4D8               	btfss	status,2,c
 34908  004D06  D00E               	goto	i2l14392
 34909                           
 34910                           ; BSR set to: 0
 34911  004D08  0101               	movlb	1	; () banked
 34912  004D0A  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34913  004D0C  D00B               	goto	i2l14392
 34914  004D0E  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34915  004D10  E103               	bnz	i2u1443_40
 34916  004D12  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34917  004D14  A0D8               	btfss	status,0,c
 34918  004D16  D006               	goto	i2l14392
 34919  004D18                     i2u1443_40:
 34920                           
 34921                           ; BSR set to: 1
 34922                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 34923  004D18  0E01               	movlw	1
 34924  004D1A  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 34925  004D1C  D022               	goto	i2l14400
 34926  004D1E                     i2u1444_40:
 34927                           
 34928                           ; BSR set to: 1
 34929                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 34930  004D1E  0E00               	movlw	0
 34931  004D20  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 34932  004D22  D01F               	goto	i2l14400
 34933  004D24                     i2l14392:
 34934                           
 34935                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 34936  004D24  0101               	movlb	1	; () banked
 34937  004D26  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 34938  004D28  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 34939  004D2C  6A06               	clrf	(??_controlMotorForce+1)^0,c
 34940  004D2E  2605               	addwf	??_controlMotorForce^0,f,c
 34941  004D30  0E00               	movlw	0
 34942  004D32  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 34943  004D34  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 34944  004D36  6E07               	movwf	(??_controlMotorForce+2)^0,c
 34945  004D38  6A08               	clrf	(??_controlMotorForce+3)^0,c
 34946  004D3A  5005               	movf	??_controlMotorForce^0,w,c
 34947  004D3C  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 34948  004D3E  5008               	movf	(??_controlMotorForce+3)^0,w,c
 34949  004D40  0A80               	xorlw	128
 34950  004D42  6E09               	movwf	(??_controlMotorForce+4)^0,c
 34951  004D44  5006               	movf	(??_controlMotorForce+1)^0,w,c
 34952  004D46  0A80               	xorlw	128
 34953  004D48  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 34954  004D4A  B0D8               	btfsc	status,0,c
 34955  004D4C  D7E8               	goto	i2u1444_40
 34956  004D4E  D009               	goto	i2l14400
 34957  004D50                     i2l2190:
 34958                           
 34959                           ; BSR set to: 1
 34960  004D50  B68D               	btfsc	141,3,c	;volatile
 34961  004D52  D007               	goto	i2l14400
 34962                           
 34963                           ; BSR set to: 1
 34964  004D54  5192               	movf	_zeroCrossing& (0+255),w,b
 34965  004D56  B4D8               	btfsc	status,2,c
 34966  004D58  D004               	goto	i2l14400
 34967                           
 34968                           ; BSR set to: 1
 34969                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 34970  004D5A  0E00               	movlw	0
 34971  004D5C  6F92               	movwf	_zeroCrossing& (0+255),b
 34972                           
 34973                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 34974  004D5E  0E00               	movlw	0
 34975  004D60  6F91               	movwf	_waitZeroPeak& (0+255),b
 34976  004D62                     i2l14400:
 34977                           
 34978                           ; BSR set to: 1
 34979                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 34980  004D62  B68D               	btfsc	141,3,c	;volatile
 34981                           
 34982                           ; BSR set to: 1
 34983                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 34984  004D64  2B93               	incf	_zeroCrossingLength& (0+255),f,b
 34985                           
 34986                           ; BSR set to: 1
 34987                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 34988                           
 34989                           ;outputs_MC50.c: 340:     }
 34990  004D66  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 34991                           
 34992                           ; BSR set to: 1
 34993                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 34994  004D68  5100               	movf	_var_sys& (0+255),w,b	;volatile
 34995  004D6A  EC8C  F03F         	call	i2_VerifyElectricalBrake
 34996  004D6E  0100               	movlb	0	; () banked
 34997  004D70  6F83               	movwf	_stateMotor& (0+255),b
 34998                           
 34999                           ; BSR set to: 0
 35000                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 35001  004D72  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35002  004D74  A4D8               	btfss	status,2,c
 35003  004D76  D02E               	goto	i2l14424
 35004                           
 35005                           ; BSR set to: 0
 35006  004D78  0101               	movlb	1	; () banked
 35007  004D7A  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35008  004D7C  D02B               	goto	i2l14424
 35009  004D7E  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35010  004D80  E103               	bnz	i2u1450_40
 35011  004D82  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35012  004D84  A0D8               	btfss	status,0,c
 35013  004D86  D026               	goto	i2l14424
 35014  004D88                     i2u1450_40:
 35015                           
 35016                           ; BSR set to: 1
 35017  004D88  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 35018  004D8A  D005               	goto	i2u1451_40
 35019  004D8C  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 35020  004D8E  E122               	bnz	i2l14424
 35021  004D90  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 35022  004D92  B0D8               	btfsc	status,0,c
 35023  004D94  D01F               	goto	i2l14424
 35024  004D96                     i2u1451_40:
 35025                           
 35026                           ; BSR set to: 1
 35027                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 35028  004D96  0100               	movlb	0	; () banked
 35029  004D98  5183               	movf	_stateMotor& (0+255),w,b
 35030  004D9A  B4D8               	btfsc	status,2,c
 35031  004D9C  D03A               	goto	i2l14436
 35032                           
 35033                           ; BSR set to: 0
 35034  004D9E  0101               	movlb	1	; () banked
 35035  004DA0  0590               	decf	_StateTRIAC& (0+255),w,b
 35036  004DA2  A4D8               	btfss	status,2,c
 35037  004DA4  D036               	goto	i2l14436
 35038                           
 35039                           ; BSR set to: 1
 35040  004DA6  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35041  004DA8  D005               	goto	i2u1454_40
 35042  004DAA  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35043  004DAC  E132               	bnz	i2l14436
 35044  004DAE  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35045  004DB0  B0D8               	btfsc	status,0,c
 35046  004DB2  D02F               	goto	i2l14436
 35047  004DB4                     i2u1454_40:
 35048                           
 35049                           ; BSR set to: 1
 35050  004DB4  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 35051  004DB6  A4D8               	btfss	status,2,c
 35052  004DB8  D02C               	goto	i2l14436
 35053                           
 35054                           ; BSR set to: 1
 35055  004DBA  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35056  004DBC  D006               	goto	i2u1456_40
 35057  004DBE  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35058  004DC0  E128               	bnz	i2l14436
 35059  004DC2  0E0C               	movlw	12
 35060  004DC4  5DC2               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 35061  004DC6  B0D8               	btfsc	status,0,c
 35062  004DC8  D024               	goto	i2l14436
 35063  004DCA                     i2u1456_40:
 35064                           
 35065                           ; BSR set to: 1
 35066                           
 35067                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 35068  004DCA  8E86               	bsf	134,7,c	;volatile
 35069                           
 35070                           ; BSR set to: 1
 35071                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 35072  004DCC  0EEC               	movlw	236
 35073  004DCE  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 35074  004DD0  0E78               	movlw	120
 35075  004DD2  D01A               	goto	L119
 35076  004DD4                     i2l14424:
 35077                           
 35078                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 35079  004DD4  0100               	movlb	0	; () banked
 35080  004DD6  5183               	movf	_stateMotor& (0+255),w,b
 35081  004DD8  B4D8               	btfsc	status,2,c
 35082  004DDA  D01B               	goto	i2l14436
 35083                           
 35084                           ; BSR set to: 0
 35085  004DDC  0101               	movlb	1	; () banked
 35086  004DDE  518F               	movf	_difTime& (0+255),w,b
 35087  004DE0  5D9F               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 35088  004DE2  B0D8               	btfsc	status,0,c
 35089  004DE4  D016               	goto	i2l14436
 35090                           
 35091                           ; BSR set to: 1
 35092  004DE6  0590               	decf	_StateTRIAC& (0+255),w,b
 35093  004DE8  A4D8               	btfss	status,2,c
 35094  004DEA  D013               	goto	i2l14436
 35095                           
 35096                           ; BSR set to: 1
 35097  004DEC  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35098  004DEE  D005               	goto	i2u1460_40
 35099  004DF0  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35100  004DF2  E10F               	bnz	i2l14436
 35101  004DF4  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35102  004DF6  B0D8               	btfsc	status,0,c
 35103  004DF8  D00C               	goto	i2l14436
 35104  004DFA                     i2u1460_40:
 35105                           
 35106                           ; BSR set to: 1
 35107  004DFA  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 35108  004DFC  A4D8               	btfss	status,2,c
 35109  004DFE  D009               	goto	i2l14436
 35110                           
 35111                           ; BSR set to: 1
 35112                           
 35113                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 35114  004E00  8E86               	bsf	134,7,c	;volatile
 35115                           
 35116                           ; BSR set to: 1
 35117                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 35118  004E02  0EFF               	movlw	255
 35119  004E04  6FA1               	movwf	(_ts_system+7)& (0+255),b	;volatile
 35120  004E06  0E38               	movlw	56
 35121  004E08                     L119:
 35122  004E08  6FA0               	movwf	(_ts_system+6)& (0+255),b	;volatile
 35123                           
 35124                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 35125  004E0A  0E01               	movlw	1
 35126  004E0C  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35127                           
 35128                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 35129  004E0E  0E00               	movlw	0
 35130  004E10  6F90               	movwf	_StateTRIAC& (0+255),b
 35131  004E12                     i2l14436:
 35132                           
 35133                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 35134  004E12  0E15               	movlw	21
 35135  004E14  0101               	movlb	1	; () banked
 35136  004E16  619F               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 35137  004E18  D002               	goto	i2u1463_40
 35138                           
 35139                           ; BSR set to: 1
 35140  004E1A  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35141  004E1C  D004               	goto	i2u1464_40
 35142  004E1E                     i2u1463_40:
 35143                           
 35144                           ; BSR set to: 1
 35145  004E1E  0100               	movlb	0	; () banked
 35146  004E20  5183               	movf	_stateMotor& (0+255),w,b
 35147  004E22  A4D8               	btfss	status,2,c
 35148  004E24  D004               	goto	i2l2217
 35149  004E26                     i2u1464_40:
 35150                           
 35151                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 35152  004E26  9E86               	bcf	134,7,c	;volatile
 35153                           
 35154                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 35155  004E28  0E00               	movlw	0
 35156  004E2A  0101               	movlb	1	; () banked
 35157  004E2C  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35158  004E2E                     i2l2217:
 35159                           
 35160                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 35161  004E2E  0100               	movlb	0	; () banked
 35162  004E30  5183               	movf	_stateMotor& (0+255),w,b
 35163  004E32  B4D8               	btfsc	status,2,c
 35164  004E34  D00C               	goto	i2l14448
 35165                           
 35166                           ; BSR set to: 0
 35167  004E36  0101               	movlb	1	; () banked
 35168  004E38  BFA1               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35169  004E3A  D009               	goto	i2l14448
 35170  004E3C  51A1               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35171  004E3E  E103               	bnz	i2u1466_40
 35172  004E40  05A0               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35173  004E42  A0D8               	btfss	status,0,c
 35174  004E44  D004               	goto	i2l14448
 35175  004E46                     i2u1466_40:
 35176                           
 35177                           ; BSR set to: 1
 35178                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 35179  004E46  07A0               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 35180  004E48  A0D8               	btfss	status,0,c
 35181  004E4A  07A1               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 35182                           
 35183                           ;outputs_MC50.c: 399:     }
 35184  004E4C  0012               	return	
 35185  004E4E                     i2l14448:
 35186  004E4E  0100               	movlb	0	; () banked
 35187  004E50  5183               	movf	_stateMotor& (0+255),w,b
 35188  004E52  A4D8               	btfss	status,2,c
 35189  004E54  0012               	return	
 35190                           
 35191                           ; BSR set to: 0
 35192  004E56  0101               	movlb	1	; () banked
 35193  004E58  AFA1               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 35194  004E5A  0012               	return	
 35195                           
 35196                           ; BSR set to: 1
 35197                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 35198  004E5C  4BA0               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 35199  004E5E  2BA1               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 35200  004E60  0012               	return		;funcret
 35201  004E62                     __end_of_controlMotorForce:
 35202                           	callstack 0
 35203                           
 35204 ;; *************** function i2_VerifyElectricalBrake *****************
 35205 ;; Defined at:
 35206 ;;		line 658 in file "outputs_MC50.c"
 35207 ;; Parameters:    Size  Location     Type
 35208 ;;  actualState     1    wreg     enum E10381
 35209 ;; Auto vars:     Size  Location     Type
 35210 ;;  actualState     1    1[COMRAM] enum E10381
 35211 ;;  tempState       1    0[COMRAM] enum E10381
 35212 ;; Return value:  Size  Location     Type
 35213 ;;                  1    wreg      enum E10381
 35214 ;; Registers used:
 35215 ;;		wreg, status,2, status,0
 35216 ;; Tracked objects:
 35217 ;;		On entry : 3F/1
 35218 ;;		On exit  : 3E/0
 35219 ;;		Unchanged: 0/0
 35220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35225 ;;Total ram usage:        2 bytes
 35226 ;; Hardware stack levels used: 1
 35227 ;; This function calls:
 35228 ;;		Nothing
 35229 ;; This function is called by:
 35230 ;;		_controlMotorForce
 35231 ;; This function uses a non-reentrant model
 35232 ;;
 35233                           
 35234                           	psect	text196
 35235  007F18                     __ptext196:
 35236                           	callstack 0
 35237  007F18                     i2_VerifyElectricalBrake:
 35238                           	callstack 14
 35239                           
 35240                           ;incstack = 0
 35241                           ;i2VerifyElectricalBrake@actualState stored from wreg
 35242  007F18  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 35243                           
 35244                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 35245  007F1A  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 35246                           
 35247                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 35248  007F1E  0100               	movlb	0	; () banked
 35249  007F20  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35250  007F22  A4D8               	btfss	status,2,c
 35251  007F24  D02E               	goto	i2l2318
 35252                           
 35253                           ; BSR set to: 0
 35254  007F26  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 35255  007F28  A4D8               	btfss	status,2,c
 35256  007F2A  D02B               	goto	i2l2318
 35257                           
 35258                           ; BSR set to: 0
 35259  007F2C  0101               	movlb	1	; () banked
 35260  007F2E  BFDB               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 35261  007F30  D005               	goto	i2u1397_40
 35262  007F32  51DB               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 35263  007F34  E126               	bnz	i2l2318
 35264  007F36  05DA               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 35265  007F38  B0D8               	btfsc	status,0,c
 35266  007F3A  D023               	goto	i2l2318
 35267  007F3C                     i2u1397_40:
 35268                           
 35269                           ; BSR set to: 1
 35270                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 35271  007F3C  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 35272  007F3E  0100               	movlb	0	; () banked
 35273  007F40  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 35274  007F42  B4D8               	btfsc	status,2,c
 35275  007F44  D00B               	goto	i2l14066
 35276                           
 35277                           ; BSR set to: 0
 35278  007F46  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 35279  007F48  A4D8               	btfss	status,2,c
 35280  007F4A  D008               	goto	i2l14066
 35281                           
 35282                           ; BSR set to: 0
 35283                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 35284  007F4C  0E01               	movlw	1
 35285  007F4E  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 35286                           
 35287                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 35288  007F50  0E00               	movlw	0
 35289  007F52  0101               	movlb	1	; () banked
 35290  007F54  6FC3               	movwf	(_ts_system+41)& (0+255),b	;volatile
 35291  007F56  0E16               	movlw	22
 35292  007F58  6FC2               	movwf	(_ts_system+40)& (0+255),b	;volatile
 35293                           
 35294                           ;outputs_MC50.c: 670:         }
 35295  007F5A  D018               	goto	i2l2323
 35296  007F5C                     i2l14066:
 35297                           
 35298                           ; BSR set to: 0
 35299  007F5C  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 35300  007F5E  A4D8               	btfss	status,2,c
 35301  007F60  D00B               	goto	i2l14072
 35302                           
 35303                           ; BSR set to: 0
 35304  007F62  0101               	movlb	1	; () banked
 35305  007F64  BFC3               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35306  007F66  D008               	goto	i2l14072
 35307  007F68  51C3               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35308  007F6A  E103               	bnz	i2u1401_40
 35309  007F6C  05C2               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35310  007F6E  A0D8               	btfss	status,0,c
 35311  007F70  D003               	goto	i2l14072
 35312  007F72                     i2u1401_40:
 35313                           
 35314                           ; BSR set to: 1
 35315                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 35316  007F72  0E01               	movlw	1
 35317  007F74  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 35318                           
 35319                           ;outputs_MC50.c: 686:         }
 35320  007F76  D00A               	goto	i2l2323
 35321  007F78                     i2l14072:
 35322                           
 35323                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 35324  007F78  0E00               	movlw	0
 35325  007F7A  0100               	movlb	0	; () banked
 35326  007F7C  6F78               	movwf	_brakeElectric_st& (0+255),b
 35327                           
 35328                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 35329  007F7E  0E00               	movlw	0
 35330  007F80  D004               	goto	L120
 35331  007F82                     i2l2318:
 35332                           
 35333                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 35334  007F82  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 35335                           
 35336                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 35337  007F86  0E00               	movlw	0
 35338  007F88  0100               	movlb	0	; () banked
 35339  007F8A                     L120:
 35340  007F8A  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 35341  007F8C                     i2l2323:
 35342                           
 35343                           ;outputs_MC50.c: 700:     return tempState;
 35344  007F8C  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 35345  007F8E  0012               	return		;funcret
 35346  007F90                     __end_ofi2_VerifyElectricalBrake:
 35347                           	callstack 0
 35348                           
 35349 ;; *************** function i2_GetMotorPower *****************
 35350 ;; Defined at:
 35351 ;;		line 405 in file "outputs_MC50.c"
 35352 ;; Parameters:    Size  Location     Type
 35353 ;;		None
 35354 ;; Auto vars:     Size  Location     Type
 35355 ;;  defineatraso    1    3[COMRAM] unsigned char 
 35356 ;; Return value:  Size  Location     Type
 35357 ;;                  1    wreg      unsigned char 
 35358 ;; Registers used:
 35359 ;;		wreg, status,2, status,0, prodl, prodh
 35360 ;; Tracked objects:
 35361 ;;		On entry : 3F/E
 35362 ;;		On exit  : 3F/1
 35363 ;;		Unchanged: 0/0
 35364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35367 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35369 ;;Total ram usage:        4 bytes
 35370 ;; Hardware stack levels used: 1
 35371 ;; This function calls:
 35372 ;;		Nothing
 35373 ;; This function is called by:
 35374 ;;		_controlMotorForce
 35375 ;; This function uses a non-reentrant model
 35376 ;;
 35377                           
 35378                           	psect	text197
 35379  0071F4                     __ptext197:
 35380                           	callstack 0
 35381  0071F4                     i2_GetMotorPower:
 35382                           	callstack 14
 35383                           
 35384                           ; BSR set to: 14
 35385                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 35386                           
 35387                           ;incstack = 0
 35388  0071F4  0101               	movlb	1	; () banked
 35389  0071F6  057B               	decf	_powerControl_st& (0+255),w,b
 35390  0071F8  A4D8               	btfss	status,2,c
 35391  0071FA  D006               	goto	i2l14016
 35392                           
 35393                           ; BSR set to: 1
 35394                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 35395  0071FC  0100               	movlb	0	; () banked
 35396  0071FE  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 35397  007200  0D06               	mullw	6
 35398  007202  CFF3 F18E          	movff	prodl,_temppower
 35399                           
 35400                           ;outputs_MC50.c: 416:     }
 35401  007206  D043               	goto	i2l2235
 35402  007208                     i2l14016:
 35403                           
 35404                           ; BSR set to: 1
 35405                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 35406  007208  0100               	movlb	0	; () banked
 35407  00720A  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 35408  00720C  0D06               	mullw	6
 35409  00720E  CFF3 F082          	movff	prodl,_fullmotorPower
 35410                           
 35411                           ; BSR set to: 0
 35412                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 35413  007212  0101               	movlb	1	; () banked
 35414  007214  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35415  007216  D01C               	goto	i2l14026
 35416  007218  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35417  00721A  E103               	bnz	i2u1387_40
 35418  00721C  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35419  00721E  A0D8               	btfss	status,0,c
 35420  007220  D017               	goto	i2l14026
 35421  007222                     i2u1387_40:
 35422                           
 35423                           ; BSR set to: 1
 35424                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 35425  007222  0100               	movlb	0	; () banked
 35426  007224  5182               	movf	_fullmotorPower& (0+255),w,b
 35427  007226  6E01               	movwf	??i2_GetMotorPower^0,c
 35428  007228  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 35429  00722A  0101               	movlb	1	; () banked
 35430  00722C  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35431  00722E  5C01               	subwf	??i2_GetMotorPower^0,w,c
 35432  007230  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 35433  007232  0A80               	xorlw	128
 35434  007234  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 35435  007236  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35436  007238  0A80               	xorlw	128
 35437  00723A  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 35438  00723C  B0D8               	btfsc	status,0,c
 35439  00723E  D002               	goto	i2l14024
 35440                           
 35441                           ; BSR set to: 1
 35442                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 35443  007240  0E01               	movlw	1
 35444  007242  D004               	goto	L122
 35445  007244                     i2l14024:
 35446                           
 35447                           ; BSR set to: 1
 35448                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 35449  007244  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35450  007246  0100               	movlb	0	; () banked
 35451  007248  5D82               	subwf	_fullmotorPower& (0+255),w,b
 35452  00724A  D017               	goto	L123
 35453  00724C                     L122:
 35454  00724C  6F8E               	movwf	_temppower& (0+255),b
 35455  00724E  D01F               	goto	i2l2235
 35456  007250                     i2l14026:
 35457                           
 35458                           ; BSR set to: 1
 35459  007250  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35460  007252  D005               	goto	i2u1389_40
 35461  007254  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35462  007256  E113               	bnz	i2l14036
 35463  007258  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35464  00725A  B0D8               	btfsc	status,0,c
 35465  00725C  D010               	goto	i2l14036
 35466  00725E                     i2u1389_40:
 35467                           
 35468                           ; BSR set to: 1
 35469  00725E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35470  007260  D005               	goto	i2u1390_40
 35471  007262  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35472  007264  E10C               	bnz	i2l14036
 35473  007266  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35474  007268  B0D8               	btfsc	status,0,c
 35475  00726A  D009               	goto	i2l14036
 35476  00726C                     i2u1390_40:
 35477                           
 35478                           ; BSR set to: 1
 35479                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 35480  00726C  C082  F18E         	movff	_fullmotorPower,_temppower
 35481                           
 35482                           ; BSR set to: 1
 35483                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 35484  007270  0E08               	movlw	8
 35485  007272  0100               	movlb	0	; () banked
 35486  007274  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 35487  007276  D00B               	goto	i2l2235
 35488                           
 35489                           ; BSR set to: 0
 35490                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 35491  007278  0E3A               	movlw	58
 35492  00727A                     L123:
 35493  00727A  0101               	movlb	1	; () banked
 35494  00727C  D7E7               	goto	L122
 35495  00727E                     i2l14036:
 35496                           
 35497                           ; BSR set to: 1
 35498  00727E  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35499  007280  D006               	goto	i2l2235
 35500  007282  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35501  007284  E102               	bnz	i2u1392_40
 35502  007286  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35503  007288  B0D8               	btfsc	status,0,c
 35504  00728A                     i2u1392_40:
 35505                           
 35506                           ; BSR set to: 1
 35507                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 35508  00728A  C110  F18E         	movff	_var_sys+16,_temppower	;volatile
 35509  00728E                     i2l2235:
 35510                           
 35511                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 35512  00728E  0101               	movlb	1	; () banked
 35513  007290  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35514  007292  D00E               	goto	i2l14046
 35515  007294  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35516  007296  E103               	bnz	i2u1393_40
 35517  007298  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35518  00729A  A0D8               	btfss	status,0,c
 35519  00729C  D009               	goto	i2l14046
 35520  00729E                     i2u1393_40:
 35521                           
 35522                           ; BSR set to: 1
 35523  00729E  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35524  0072A0  D005               	goto	i2u1394_40
 35525  0072A2  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35526  0072A4  E105               	bnz	i2l14046
 35527  0072A6  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35528  0072A8  B0D8               	btfsc	status,0,c
 35529  0072AA  D002               	goto	i2l14046
 35530  0072AC                     i2u1394_40:
 35531                           
 35532                           ; BSR set to: 1
 35533                           ;outputs_MC50.c: 452:     defineatraso = 5;
 35534  0072AC  0E05               	movlw	5
 35535  0072AE  D001               	goto	L121
 35536  0072B0                     i2l14046:
 35537                           
 35538                           ; BSR set to: 1
 35539                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 35540  0072B0  0E17               	movlw	23
 35541  0072B2                     L121:
 35542  0072B2  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 35543                           
 35544                           ; BSR set to: 1
 35545                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 35546  0072B4  518E               	movf	_temppower& (0+255),w,b
 35547  0072B6  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 35548                           
 35549                           ; BSR set to: 1
 35550  0072B8  0012               	return		;funcret
 35551  0072BA                     __end_ofi2_GetMotorPower:
 35552                           	callstack 0
 35553                           
 35554 ;; *************** function _TMR1_WriteTimer *****************
 35555 ;; Defined at:
 35556 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 35557 ;; Parameters:    Size  Location     Type
 35558 ;;  timerVal        2    0[COMRAM] unsigned short 
 35559 ;; Auto vars:     Size  Location     Type
 35560 ;;		None
 35561 ;; Return value:  Size  Location     Type
 35562 ;;                  1    wreg      void 
 35563 ;; Registers used:
 35564 ;;		None
 35565 ;; Tracked objects:
 35566 ;;		On entry : 3F/1
 35567 ;;		On exit  : 3F/1
 35568 ;;		Unchanged: 3F/0
 35569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35574 ;;Total ram usage:        2 bytes
 35575 ;; Hardware stack levels used: 1
 35576 ;; This function calls:
 35577 ;;		Nothing
 35578 ;; This function is called by:
 35579 ;;		_TMR1_ISR
 35580 ;; This function uses a non-reentrant model
 35581 ;;
 35582                           
 35583                           	psect	text198
 35584  0091E4                     __ptext198:
 35585                           	callstack 0
 35586  0091E4                     _TMR1_WriteTimer:
 35587                           	callstack 15
 35588                           
 35589                           ; BSR set to: 1
 35590                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 35591                           
 35592                           ; BSR set to: 1
 35593                           ;incstack = 0
 35594  0091E4  A4CF               	btfss	207,2,c	;volatile
 35595  0091E6  D007               	goto	i2l1147
 35596                           
 35597                           ; BSR set to: 1
 35598                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 35599  0091E8  90CF               	bcf	207,0,c	;volatile
 35600                           
 35601                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 35602  0091EA  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35603                           
 35604                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 35605  0091EE  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35606                           
 35607                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 35608  0091F2  80CF               	bsf	207,0,c	;volatile
 35609                           
 35610                           ;mcc_generated_files/tmr1.c: 142:     }
 35611  0091F4  0012               	return	
 35612  0091F6                     i2l1147:
 35613                           
 35614                           ; BSR set to: 1
 35615                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 35616  0091F6  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35617                           
 35618                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 35619  0091FA  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35620                           
 35621                           ; BSR set to: 1
 35622  0091FE  0012               	return		;funcret
 35623  009200                     __end_of_TMR1_WriteTimer:
 35624                           	callstack 0
 35625                           
 35626 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 35627 ;; Defined at:
 35628 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 35629 ;; Parameters:    Size  Location     Type
 35630 ;;		None
 35631 ;; Auto vars:     Size  Location     Type
 35632 ;;		None
 35633 ;; Return value:  Size  Location     Type
 35634 ;;                  1    wreg      void 
 35635 ;; Registers used:
 35636 ;;		None
 35637 ;; Tracked objects:
 35638 ;;		On entry : 3F/2
 35639 ;;		On exit  : 3F/2
 35640 ;;		Unchanged: 3F/0
 35641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35646 ;;Total ram usage:        0 bytes
 35647 ;; Hardware stack levels used: 1
 35648 ;; This function calls:
 35649 ;;		Nothing
 35650 ;; This function is called by:
 35651 ;;		_TMR1_Initialize
 35652 ;;		_TMR1_ISR
 35653 ;; This function uses a non-reentrant model
 35654 ;;
 35655                           
 35656                           	psect	text199
 35657  00951E                     __ptext199:
 35658                           	callstack 0
 35659  00951E                     _TMR1_DefaultInterruptHandler:
 35660                           	callstack 15
 35661                           
 35662                           ; BSR set to: 2
 35663                           
 35664                           ; BSR set to: 1
 35665                           ;incstack = 0
 35666  00951E  0012               	return		;funcret
 35667  009520                     __end_of_TMR1_DefaultInterruptHandler:
 35668                           	callstack 0
 35669                           
 35670 ;; *************** function _TMR0_ISR *****************
 35671 ;; Defined at:
 35672 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 35673 ;; Parameters:    Size  Location     Type
 35674 ;;		None
 35675 ;; Auto vars:     Size  Location     Type
 35676 ;;		None
 35677 ;; Return value:  Size  Location     Type
 35678 ;;                  1    wreg      void 
 35679 ;; Registers used:
 35680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 35681 ;; Tracked objects:
 35682 ;;		On entry : 3F/E
 35683 ;;		On exit  : 0/0
 35684 ;;		Unchanged: 0/0
 35685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35690 ;;Total ram usage:        0 bytes
 35691 ;; Hardware stack levels used: 1
 35692 ;; Hardware stack levels required when called: 1
 35693 ;; This function calls:
 35694 ;;		Absolute function
 35695 ;;		_TMR0_DefaultInterruptHandler
 35696 ;;		_rxi
 35697 ;; This function is called by:
 35698 ;;		_INTERRUPT_InterruptManager
 35699 ;; This function uses a non-reentrant model
 35700 ;;
 35701                           
 35702                           	psect	text200
 35703  009098                     __ptext200:
 35704                           	callstack 0
 35705  009098                     _TMR0_ISR:
 35706                           	callstack 15
 35707                           
 35708                           ; BSR set to: 14
 35709                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 35710                           
 35711                           ; BSR set to: 2
 35712                           ;incstack = 0
 35713  009098  9BCA               	bcf	202,5,b	;volatile
 35714                           
 35715                           ; BSR set to: 14
 35716                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 35717  00909A  EC96  F022         	call	_rxi	;wreg free
 35718                           
 35719                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 35720  00909E  0102               	movlb	2	; () banked
 35721  0090A0  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35722  0090A2  11E4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35723  0090A4  B4D8               	btfsc	status,2,c
 35724  0090A6  0012               	return	
 35725                           
 35726                           ; BSR set to: 2
 35727                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 35728  0090A8  D801               	call	i2u1844_48
 35729  0090AA  0012               	return	
 35730  0090AC                     i2u1844_48:
 35731  0090AC  0005               	push	
 35732  0090AE  6EFA               	movwf	pclath,c
 35733  0090B0  51E3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 35734  0090B2  6EFD               	movwf	tosl,c
 35735  0090B4  51E4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 35736  0090B6  6EFE               	movwf	tosh,c
 35737  0090B8  6AFF               	clrf	tosu,c
 35738  0090BA  50FA               	movf	pclath,w,c
 35739  0090BC  0012               	return		;indir
 35740  0090BE                     __end_of_TMR0_ISR:
 35741                           	callstack 0
 35742                           
 35743 ;; *************** function _rxi *****************
 35744 ;; Defined at:
 35745 ;;		line 41 in file "inputs_MC50.c"
 35746 ;; Parameters:    Size  Location     Type
 35747 ;;		None
 35748 ;; Auto vars:     Size  Location     Type
 35749 ;;		None
 35750 ;; Return value:  Size  Location     Type
 35751 ;;                  1    wreg      void 
 35752 ;; Registers used:
 35753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35754 ;; Tracked objects:
 35755 ;;		On entry : 3F/E
 35756 ;;		On exit  : 3C/0
 35757 ;;		Unchanged: 0/0
 35758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35763 ;;Total ram usage:        2 bytes
 35764 ;; Hardware stack levels used: 1
 35765 ;; This function calls:
 35766 ;;		Nothing
 35767 ;; This function is called by:
 35768 ;;		_TMR0_ISR
 35769 ;; This function uses a non-reentrant model
 35770 ;;
 35771                           
 35772                           	psect	text201
 35773  00452C                     __ptext201:
 35774                           	callstack 0
 35775  00452C                     _rxi:
 35776                           	callstack 15
 35777                           
 35778                           ; BSR set to: 14
 35779                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 35780                           
 35781                           ;incstack = 0
 35782  00452C  0E00               	movlw	0
 35783  00452E  B68E               	btfsc	142,3,c	;volatile
 35784  004530  0E01               	movlw	1
 35785  004532  0100               	movlb	0	; () banked
 35786  004534  6F89               	movwf	_RFBit& (0+255),b	;volatile
 35787                           
 35788                           ; BSR set to: 0
 35789                           ;inputs_MC50.c: 47:     if (RFFull)
 35790  004536  518B               	movf	_RFFull& (0+255),w,b	;volatile
 35791  004538  A4D8               	btfss	status,2,c
 35792  00453A  0012               	return	
 35793  00453C  D116               	goto	i2l14330
 35794  00453E                     i2l14220:
 35795                           
 35796                           ; BSR set to: 1
 35797                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 35798  00453E  0100               	movlb	0	; () banked
 35799  004540  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35800  004542  A4D8               	btfss	status,2,c
 35801  004544  D004               	goto	i2l14224
 35802                           
 35803                           ; BSR set to: 0
 35804                           ;inputs_MC50.c: 56:                 RFstate = 3;
 35805  004546  0E03               	movlw	3
 35806  004548  0101               	movlb	1	; () banked
 35807  00454A  6F98               	movwf	_RFstate& (0+255),b
 35808                           
 35809                           ;inputs_MC50.c: 57:             } else {
 35810  00454C  0012               	return	
 35811  00454E                     i2l14224:
 35812                           
 35813                           ; BSR set to: 0
 35814                           ;inputs_MC50.c: 58:                 RFcount--;
 35815  00454E  077E               	decf	_RFcount& (0+255),f,b
 35816  004550  A0D8               	btfss	status,0,c
 35817  004552  077F               	decf	(_RFcount+1)& (0+255),f,b
 35818                           
 35819                           ; BSR set to: 0
 35820                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 35821  004554  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 35822  004556  0012               	return	
 35823  004558  0EF6               	movlw	246
 35824  00455A  5D7E               	subwf	_RFcount& (0+255),w,b
 35825  00455C  0EFF               	movlw	255
 35826  00455E  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 35827  004560  B0D8               	btfsc	status,0,c
 35828  004562  0012               	return	
 35829  004564                     i2u1408_40:
 35830  004564                     i2l14228:
 35831                           
 35832                           ; BSR set to: 0
 35833                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 35834  004564  0E00               	movlw	0
 35835  004566  0101               	movlb	1	; () banked
 35836  004568  6F98               	movwf	_RFstate& (0+255),b
 35837  00456A  0012               	return	
 35838  00456C                     i2l14230:
 35839                           
 35840                           ; BSR set to: 1
 35841                           ;inputs_MC50.c: 67:             if (RFBit) {
 35842  00456C  0100               	movlb	0	; () banked
 35843  00456E  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35844  004570  B4D8               	btfsc	status,2,c
 35845  004572  D02C               	goto	i2l14250
 35846                           
 35847                           ; BSR set to: 0
 35848                           ;inputs_MC50.c: 71:                 RFstate = 2;
 35849  004574  0E02               	movlw	2
 35850  004576  0101               	movlb	1	; () banked
 35851  004578  6F98               	movwf	_RFstate& (0+255),b
 35852                           
 35853                           ; BSR set to: 1
 35854                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 35855  00457A  0EC8               	movlw	low _BufferRF
 35856  00457C  0100               	movlb	0	; () banked
 35857  00457E  258D               	addwf	_Bptr& (0+255),w,b
 35858  004580  6ED9               	movwf	fsr2l,c
 35859  004582  6ADA               	clrf	fsr2h,c
 35860  004584  0E02               	movlw	high _BufferRF
 35861  004586  22DA               	addwfc	fsr2h,f,c
 35862  004588  90D8               	bcf	status,0,c
 35863  00458A  32DF               	rrcf	indf2,f,c
 35864                           
 35865                           ; BSR set to: 0
 35866                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 35867  00458C  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35868  00458E  D008               	goto	i2l14240
 35869                           
 35870                           ; BSR set to: 0
 35871                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 35872  004590  0EC8               	movlw	low _BufferRF
 35873  004592  258D               	addwf	_Bptr& (0+255),w,b
 35874  004594  6ED9               	movwf	fsr2l,c
 35875  004596  6ADA               	clrf	fsr2h,c
 35876  004598  0E02               	movlw	high _BufferRF
 35877  00459A  22DA               	addwfc	fsr2h,f,c
 35878  00459C  0E80               	movlw	128
 35879  00459E  26DF               	addwf	indf2,f,c
 35880  0045A0                     i2l14240:
 35881                           
 35882                           ; BSR set to: 0
 35883                           ;inputs_MC50.c: 81:                 RFcount = 0;
 35884  0045A0  0E00               	movlw	0
 35885  0045A2  6F7F               	movwf	(_RFcount+1)& (0+255),b
 35886  0045A4  0E00               	movlw	0
 35887  0045A6  6F7E               	movwf	_RFcount& (0+255),b
 35888                           
 35889                           ; BSR set to: 0
 35890                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 35891  0045A8  2B8C               	incf	_BitCount& (0+255),f,b
 35892  0045AA  C08C  F001         	movff	_BitCount,??_rxi
 35893  0045AE  0E07               	movlw	7
 35894  0045B0  1601               	andwf	??_rxi^0,f,c
 35895  0045B2  B4D8               	btfsc	status,2,c
 35896                           
 35897                           ; BSR set to: 0
 35898                           ;inputs_MC50.c: 84:                     Bptr++;
 35899  0045B4  2B8D               	incf	_Bptr& (0+255),f,b
 35900                           
 35901                           ; BSR set to: 0
 35902                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 35903  0045B6  0E41               	movlw	65
 35904  0045B8  198C               	xorwf	_BitCount& (0+255),w,b
 35905  0045BA  A4D8               	btfss	status,2,c
 35906  0045BC  0012               	return	
 35907                           
 35908                           ; BSR set to: 0
 35909                           ;inputs_MC50.c: 86:                     RFstate = 0;
 35910  0045BE  0E00               	movlw	0
 35911  0045C0  0101               	movlb	1	; () banked
 35912  0045C2  6F98               	movwf	_RFstate& (0+255),b
 35913                           
 35914                           ;inputs_MC50.c: 87:                     RFFull = 1;
 35915  0045C4  0E01               	movlw	1
 35916  0045C6  0100               	movlb	0	; () banked
 35917  0045C8  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 35918  0045CA  0012               	return	
 35919  0045CC                     i2l14250:
 35920                           
 35921                           ; BSR set to: 0
 35922                           ;inputs_MC50.c: 92:                 RFcount++;
 35923  0045CC  4B7E               	infsnz	_RFcount& (0+255),f,b
 35924  0045CE  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 35925                           
 35926                           ; BSR set to: 0
 35927                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 35928  0045D0  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35929  0045D2  0012               	return	
 35930  0045D4  517F               	movf	(_RFcount+1)& (0+255),w,b
 35931  0045D6  E104               	bnz	i2u1413_40
 35932  0045D8  0E0A               	movlw	10
 35933  0045DA  5D7E               	subwf	_RFcount& (0+255),w,b
 35934  0045DC  A0D8               	btfss	status,0,c
 35935  0045DE  0012               	return	
 35936  0045E0                     i2u1413_40:
 35937                           
 35938                           ; BSR set to: 0
 35939                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 35940  0045E0  0E01               	movlw	1
 35941  0045E2  0101               	movlb	1	; () banked
 35942  0045E4  6F98               	movwf	_RFstate& (0+255),b
 35943                           
 35944                           ;inputs_MC50.c: 97:                     Bptr = 0;
 35945  0045E6  0E00               	movlw	0
 35946  0045E8  0100               	movlb	0	; () banked
 35947  0045EA  6F8D               	movwf	_Bptr& (0+255),b
 35948                           
 35949                           ;inputs_MC50.c: 98:                     BitCount = 0;
 35950  0045EC  0E00               	movlw	0
 35951  0045EE  6F8C               	movwf	_BitCount& (0+255),b
 35952  0045F0  0012               	return	
 35953  0045F2                     i2l14256:
 35954                           
 35955                           ; BSR set to: 1
 35956                           ;inputs_MC50.c: 103:             if (RFBit) {
 35957  0045F2  0100               	movlb	0	; () banked
 35958  0045F4  5189               	movf	_RFBit& (0+255),w,b	;volatile
 35959  0045F6  B4D8               	btfsc	status,2,c
 35960  0045F8  D030               	goto	i2l14272
 35961                           
 35962                           ; BSR set to: 0
 35963                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 35964  0045FA  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35965  0045FC  D00E               	goto	i2u1416_40
 35966  0045FE  517F               	movf	(_RFcount+1)& (0+255),w,b
 35967  004600  E104               	bnz	i2u1415_40
 35968  004602  0E14               	movlw	20
 35969  004604  5D7E               	subwf	_RFcount& (0+255),w,b
 35970  004606  A0D8               	btfss	status,0,c
 35971  004608  D008               	goto	i2u1416_40
 35972  00460A                     i2u1415_40:
 35973                           
 35974                           ; BSR set to: 0
 35975  00460A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35976  00460C  D01E               	goto	i2l14270
 35977  00460E  517F               	movf	(_RFcount+1)& (0+255),w,b
 35978  004610  E104               	bnz	i2u1416_40
 35979  004612  0E2D               	movlw	45
 35980  004614  5D7E               	subwf	_RFcount& (0+255),w,b
 35981  004616  A0D8               	btfss	status,0,c
 35982  004618  D018               	goto	i2l14270
 35983  00461A                     i2u1416_40:
 35984                           
 35985                           ; BSR set to: 0
 35986                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 35987  00461A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35988  00461C  D7A3               	goto	i2u1408_40
 35989  00461E  517F               	movf	(_RFcount+1)& (0+255),w,b
 35990  004620  E104               	bnz	i2u1417_40
 35991  004622  0E50               	movlw	80
 35992  004624  5D7E               	subwf	_RFcount& (0+255),w,b
 35993  004626  A0D8               	btfss	status,0,c
 35994  004628  D79D               	goto	i2u1408_40
 35995  00462A                     i2u1417_40:
 35996                           
 35997                           ; BSR set to: 0
 35998  00462A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 35999  00462C  D006               	goto	i2l14268
 36000  00462E  517F               	movf	(_RFcount+1)& (0+255),w,b
 36001  004630  E199               	bnz	i2l14228
 36002  004632  0E64               	movlw	100
 36003  004634  5D7E               	subwf	_RFcount& (0+255),w,b
 36004  004636  B0D8               	btfsc	status,0,c
 36005  004638  D795               	goto	i2u1408_40
 36006  00463A                     i2l14268:
 36007                           
 36008                           ; BSR set to: 0
 36009                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 36010  00463A  0EFF               	movlw	255
 36011  00463C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36012  00463E  0EF6               	movlw	246
 36013  004640  6F7E               	movwf	_RFcount& (0+255),b
 36014                           
 36015                           ;inputs_MC50.c: 114:                         RFstate = 4;
 36016  004642  0E04               	movlw	4
 36017  004644  0101               	movlb	1	; () banked
 36018  004646  6F98               	movwf	_RFstate& (0+255),b
 36019  004648  0012               	return	
 36020  00464A                     i2l14270:
 36021                           
 36022                           ; BSR set to: 0
 36023                           ;inputs_MC50.c: 118:                     RFcount = 0;
 36024  00464A  0E00               	movlw	0
 36025  00464C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36026  00464E  0E00               	movlw	0
 36027  004650  6F7E               	movwf	_RFcount& (0+255),b
 36028                           
 36029                           ;inputs_MC50.c: 119:                     RFstate = 2;
 36030  004652  0E02               	movlw	2
 36031  004654  0101               	movlb	1	; () banked
 36032  004656  6F98               	movwf	_RFstate& (0+255),b
 36033  004658  0012               	return	
 36034  00465A                     i2l14272:
 36035                           
 36036                           ; BSR set to: 0
 36037                           ;inputs_MC50.c: 122:                 RFcount++;
 36038  00465A  4B7E               	infsnz	_RFcount& (0+255),f,b
 36039  00465C  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36040  00465E  0012               	return	
 36041  004660                     i2l14274:
 36042                           
 36043                           ; BSR set to: 1
 36044                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 36045  004660  0100               	movlb	0	; () banked
 36046  004662  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36047  004664  A4D8               	btfss	status,2,c
 36048  004666  D056               	goto	i2l14310
 36049                           
 36050                           ; BSR set to: 0
 36051                           ;inputs_MC50.c: 130:                 RFstate = 5;
 36052  004668  0E05               	movlw	5
 36053  00466A  0101               	movlb	1	; () banked
 36054  00466C  6F98               	movwf	_RFstate& (0+255),b
 36055                           
 36056                           ; BSR set to: 1
 36057                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 36058  00466E  0EC8               	movlw	low _BufferRF
 36059  004670  0100               	movlb	0	; () banked
 36060  004672  258D               	addwf	_Bptr& (0+255),w,b
 36061  004674  6ED9               	movwf	fsr2l,c
 36062  004676  6ADA               	clrf	fsr2h,c
 36063  004678  0E02               	movlw	high _BufferRF
 36064  00467A  22DA               	addwfc	fsr2h,f,c
 36065  00467C  90D8               	bcf	status,0,c
 36066  00467E  32DF               	rrcf	indf2,f,c
 36067                           
 36068                           ; BSR set to: 0
 36069                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 36070  004680  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36071  004682  D008               	goto	i2l14284
 36072                           
 36073                           ; BSR set to: 0
 36074                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 36075  004684  0EC8               	movlw	low _BufferRF
 36076  004686  258D               	addwf	_Bptr& (0+255),w,b
 36077  004688  6ED9               	movwf	fsr2l,c
 36078  00468A  6ADA               	clrf	fsr2h,c
 36079  00468C  0E02               	movlw	high _BufferRF
 36080  00468E  22DA               	addwfc	fsr2h,f,c
 36081  004690  0E80               	movlw	128
 36082  004692  26DF               	addwf	indf2,f,c
 36083  004694                     i2l14284:
 36084                           
 36085                           ; BSR set to: 0
 36086                           ;inputs_MC50.c: 136:                 RFcount = 0;
 36087  004694  0E00               	movlw	0
 36088  004696  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36089  004698  0E00               	movlw	0
 36090  00469A  6F7E               	movwf	_RFcount& (0+255),b
 36091                           
 36092                           ; BSR set to: 0
 36093                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 36094  00469C  2B8C               	incf	_BitCount& (0+255),f,b
 36095  00469E  C08C  F001         	movff	_BitCount,??_rxi
 36096  0046A2  0E07               	movlw	7
 36097  0046A4  1601               	andwf	??_rxi^0,f,c
 36098  0046A6  A4D8               	btfss	status,2,c
 36099  0046A8  D009               	goto	i2l14292
 36100                           
 36101                           ; BSR set to: 0
 36102                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 36103  0046AA  2B8D               	incf	_Bptr& (0+255),f,b
 36104                           
 36105                           ; BSR set to: 0
 36106                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 36107  0046AC  0EC8               	movlw	low _BufferRF
 36108  0046AE  258D               	addwf	_Bptr& (0+255),w,b
 36109  0046B0  6ED9               	movwf	fsr2l,c
 36110  0046B2  6ADA               	clrf	fsr2h,c
 36111  0046B4  0E02               	movlw	high _BufferRF
 36112  0046B6  22DA               	addwfc	fsr2h,f,c
 36113  0046B8  0E00               	movlw	0
 36114  0046BA  6EDF               	movwf	indf2,c
 36115  0046BC                     i2l14292:
 36116                           
 36117                           ; BSR set to: 0
 36118                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 36119  0046BC  0E0D               	movlw	13
 36120  0046BE  198C               	xorwf	_BitCount& (0+255),w,b
 36121  0046C0  A4D8               	btfss	status,2,c
 36122  0046C2  0012               	return	
 36123                           
 36124                           ; BSR set to: 0
 36125                           ;inputs_MC50.c: 144:                     RFstate = 0;
 36126  0046C4  0E00               	movlw	0
 36127  0046C6  0101               	movlb	1	; () banked
 36128  0046C8  6F98               	movwf	_RFstate& (0+255),b
 36129                           
 36130                           ; BSR set to: 1
 36131                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 36132  0046CA  0100               	movlb	0	; () banked
 36133  0046CC  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 36134  0046CE  A4D8               	btfss	status,2,c
 36135  0046D0  D01A               	goto	i2l14304
 36136                           
 36137                           ; BSR set to: 0
 36138                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 36139  0046D2  0102               	movlb	2	; () banked
 36140  0046D4  51C8               	movf	_BufferRF& (0+255),w,b
 36141  0046D6  0101               	movlb	1	; () banked
 36142  0046D8  1987               	xorwf	_BufferRF_12BIT& (0+255),w,b
 36143  0046DA  A4D8               	btfss	status,2,c
 36144  0046DC  D00F               	goto	i2l1615
 36145                           
 36146                           ; BSR set to: 1
 36147  0046DE  0102               	movlb	2	; () banked
 36148  0046E0  51C9               	movf	(_BufferRF+1)& (0+255),w,b
 36149  0046E2  0101               	movlb	1	; () banked
 36150  0046E4  1988               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 36151  0046E6  A4D8               	btfss	status,2,c
 36152  0046E8  D009               	goto	i2l1615
 36153                           
 36154                           ; BSR set to: 1
 36155                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 36156  0046EA  0E01               	movlw	1
 36157  0046EC  0100               	movlb	0	; () banked
 36158  0046EE  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 36159                           
 36160                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 36161  0046F0  0E00               	movlw	0
 36162  0046F2  0102               	movlb	2	; () banked
 36163  0046F4  6FCA               	movwf	(_BufferRF+2)& (0+255),b
 36164                           
 36165                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 36166  0046F6  0E00               	movlw	0
 36167  0046F8  6FCB               	movwf	(_BufferRF+3)& (0+255),b
 36168                           
 36169                           ;inputs_MC50.c: 152:                         }
 36170  0046FA  0012               	return	
 36171  0046FC                     i2l1615:
 36172                           
 36173                           ; BSR set to: 1
 36174                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 36175  0046FC  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 36176                           
 36177                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 36178  004700  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 36179  004704  0012               	return	
 36180  004706                     i2l14304:
 36181                           
 36182                           ; BSR set to: 0
 36183                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 36184  004706  0E01               	movlw	1
 36185  004708  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 36186                           
 36187                           ; BSR set to: 0
 36188                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 36189  00470A  C2C8  F187         	movff	_BufferRF,_BufferRF_12BIT
 36190                           
 36191                           ; BSR set to: 0
 36192                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 36193  00470E  C2C9  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 36194  004712  0012               	return	
 36195  004714                     i2l14310:
 36196                           
 36197                           ; BSR set to: 0
 36198                           ;inputs_MC50.c: 168:                 RFcount++;
 36199  004714  4B7E               	infsnz	_RFcount& (0+255),f,b
 36200  004716  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36201                           
 36202                           ; BSR set to: 0
 36203                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 36204  004718  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36205  00471A  0012               	return	
 36206  00471C  517F               	movf	(_RFcount+1)& (0+255),w,b
 36207  00471E  E104               	bnz	i2u1426_40
 36208  004720  0E0A               	movlw	10
 36209  004722  5D7E               	subwf	_RFcount& (0+255),w,b
 36210  004724  A0D8               	btfss	status,0,c
 36211  004726  0012               	return	
 36212  004728                     i2u1426_40:
 36213  004728  D71D               	goto	i2u1408_40
 36214  00472A                     i2l14316:
 36215                           
 36216                           ; BSR set to: 1
 36217                           ;inputs_MC50.c: 177:             if (RFBit) {
 36218  00472A  0100               	movlb	0	; () banked
 36219  00472C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36220  00472E  B4D8               	btfsc	status,2,c
 36221  004730  D004               	goto	i2l14320
 36222                           
 36223                           ; BSR set to: 0
 36224                           ;inputs_MC50.c: 181:                 RFstate = 4;
 36225  004732  0E04               	movlw	4
 36226  004734  0101               	movlb	1	; () banked
 36227  004736  6F98               	movwf	_RFstate& (0+255),b
 36228                           
 36229                           ;inputs_MC50.c: 183:             } else {
 36230  004738  0012               	return	
 36231  00473A                     i2l14320:
 36232                           
 36233                           ; BSR set to: 0
 36234                           ;inputs_MC50.c: 184:                 RFcount--;
 36235  00473A  077E               	decf	_RFcount& (0+255),f,b
 36236  00473C  A0D8               	btfss	status,0,c
 36237  00473E  077F               	decf	(_RFcount+1)& (0+255),f,b
 36238                           
 36239                           ; BSR set to: 0
 36240                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 36241  004740  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 36242  004742  0012               	return	
 36243  004744  0EF6               	movlw	246
 36244  004746  5D7E               	subwf	_RFcount& (0+255),w,b
 36245  004748  0EFF               	movlw	255
 36246  00474A  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 36247  00474C  B0D8               	btfsc	status,0,c
 36248  00474E  0012               	return	
 36249  004750  D747               	goto	i2u1413_40
 36250  004752                     i2l14326:
 36251                           
 36252                           ; BSR set to: 1
 36253                           ;inputs_MC50.c: 197:             RFstate = 1;
 36254  004752  0E01               	movlw	1
 36255  004754  6F98               	movwf	_RFstate& (0+255),b
 36256                           
 36257                           ;inputs_MC50.c: 198:             RFcount = 0;
 36258  004756  0E00               	movlw	0
 36259  004758  0100               	movlb	0	; () banked
 36260  00475A  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36261  00475C  0E00               	movlw	0
 36262  00475E  6F7E               	movwf	_RFcount& (0+255),b
 36263                           
 36264                           ;inputs_MC50.c: 199:             Bptr = 0;
 36265  004760  0E00               	movlw	0
 36266  004762  6F8D               	movwf	_Bptr& (0+255),b
 36267                           
 36268                           ;inputs_MC50.c: 200:             BitCount = 0;
 36269  004764  0E00               	movlw	0
 36270  004766  6F8C               	movwf	_BitCount& (0+255),b
 36271                           
 36272                           ;inputs_MC50.c: 201:             break;
 36273  004768  0012               	return	
 36274  00476A                     i2l14330:
 36275                           
 36276                           ; BSR set to: 0
 36277  00476A  0101               	movlb	1	; () banked
 36278  00476C  5198               	movf	_RFstate& (0+255),w,b
 36279  00476E  6E01               	movwf	??_rxi^0,c
 36280  004770  6A02               	clrf	(??_rxi+1)^0,c
 36281                           
 36282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36283                           ; Switch size 1, requested type "simple"
 36284                           ; Number of cases is 1, Range of values is 0 to 0
 36285                           ; switch strategies available:
 36286                           ; Name         Instructions Cycles
 36287                           ; simple_byte            4     3 (average)
 36288                           ;	Chosen strategy is simple_byte
 36289  004772  5002               	movf	(??_rxi+1)^0,w,c
 36290  004774  0A00               	xorlw	0	; case 0
 36291  004776  A4D8               	btfss	status,2,c
 36292  004778  D7EC               	goto	i2l14326
 36293                           
 36294                           ; BSR set to: 1
 36295                           ; Switch size 1, requested type "simple"
 36296                           ; Number of cases is 6, Range of values is 0 to 5
 36297                           ; switch strategies available:
 36298                           ; Name         Instructions Cycles
 36299                           ; simple_byte           19    10 (average)
 36300                           ;	Chosen strategy is simple_byte
 36301  00477A  5001               	movf	??_rxi^0,w,c
 36302  00477C  0A00               	xorlw	0	; case 0
 36303  00477E  B4D8               	btfsc	status,2,c
 36304  004780  D7E8               	goto	i2l14326
 36305  004782  0A01               	xorlw	1	; case 1
 36306  004784  B4D8               	btfsc	status,2,c
 36307  004786  D735               	goto	i2l14256
 36308  004788  0A03               	xorlw	3	; case 2
 36309  00478A  B4D8               	btfsc	status,2,c
 36310  00478C  D6D8               	goto	i2l14220
 36311  00478E  0A01               	xorlw	1	; case 3
 36312  004790  B4D8               	btfsc	status,2,c
 36313  004792  D6EC               	goto	i2l14230
 36314  004794  0A07               	xorlw	7	; case 4
 36315  004796  B4D8               	btfsc	status,2,c
 36316  004798  D763               	goto	i2l14274
 36317  00479A  0A01               	xorlw	1	; case 5
 36318  00479C  B4D8               	btfsc	status,2,c
 36319  00479E  D7C5               	goto	i2l14316
 36320  0047A0  D7D8               	goto	i2l14326
 36321  0047A2                     __end_of_rxi:
 36322                           	callstack 0
 36323                           
 36324 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 36325 ;; Defined at:
 36326 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 36327 ;; Parameters:    Size  Location     Type
 36328 ;;		None
 36329 ;; Auto vars:     Size  Location     Type
 36330 ;;		None
 36331 ;; Return value:  Size  Location     Type
 36332 ;;                  1    wreg      void 
 36333 ;; Registers used:
 36334 ;;		None
 36335 ;; Tracked objects:
 36336 ;;		On entry : 3F/2
 36337 ;;		On exit  : 3F/2
 36338 ;;		Unchanged: 3F/0
 36339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36344 ;;Total ram usage:        0 bytes
 36345 ;; Hardware stack levels used: 1
 36346 ;; This function calls:
 36347 ;;		Nothing
 36348 ;; This function is called by:
 36349 ;;		_TMR0_Initialize
 36350 ;;		_TMR0_ISR
 36351 ;; This function uses a non-reentrant model
 36352 ;;
 36353                           
 36354                           	psect	text202
 36355  009520                     __ptext202:
 36356                           	callstack 0
 36357  009520                     _TMR0_DefaultInterruptHandler:
 36358                           	callstack 15
 36359                           
 36360                           ; BSR set to: 2
 36361                           
 36362                           ;incstack = 0
 36363  009520  0012               	return		;funcret
 36364  009522                     __end_of_TMR0_DefaultInterruptHandler:
 36365                           	callstack 0
 36366                           
 36367 ;; *************** function _EUSART1_Transmit_ISR *****************
 36368 ;; Defined at:
 36369 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 36370 ;; Parameters:    Size  Location     Type
 36371 ;;		None
 36372 ;; Auto vars:     Size  Location     Type
 36373 ;;		None
 36374 ;; Return value:  Size  Location     Type
 36375 ;;                  1    wreg      void 
 36376 ;; Registers used:
 36377 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36378 ;; Tracked objects:
 36379 ;;		On entry : 3F/2
 36380 ;;		On exit  : 30/0
 36381 ;;		Unchanged: 0/0
 36382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36387 ;;Total ram usage:        0 bytes
 36388 ;; Hardware stack levels used: 1
 36389 ;; This function calls:
 36390 ;;		Nothing
 36391 ;; This function is called by:
 36392 ;;		_EUSART1_Initialize
 36393 ;;		_INTERRUPT_InterruptManager
 36394 ;; This function uses a non-reentrant model
 36395 ;;
 36396                           
 36397                           	psect	text203
 36398  008CDE                     __ptext203:
 36399                           	callstack 0
 36400  008CDE                     _EUSART1_Transmit_ISR:
 36401                           	callstack 16
 36402                           
 36403                           ; BSR set to: 2
 36404                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 36405                           
 36406                           ; BSR set to: 2
 36407                           ;incstack = 0
 36408  008CDE  0E08               	movlw	8
 36409  008CE0  0101               	movlb	1	; () banked
 36410  008CE2  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 36411  008CE4  D012               	goto	i2l106
 36412                           
 36413                           ; BSR set to: 1
 36414                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 36415  008CE6  0E84               	movlw	low _eusart1TxBuffer
 36416  008CE8  0100               	movlb	0	; () banked
 36417  008CEA  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 36418  008CEC  6ED9               	movwf	fsr2l,c
 36419  008CEE  6ADA               	clrf	fsr2h,c
 36420  008CF0  0E02               	movlw	high _eusart1TxBuffer
 36421  008CF2  22DA               	addwfc	fsr2h,f,c
 36422  008CF4  50DF               	movf	indf2,w,c
 36423  008CF6  6E9A               	movwf	154,c	;volatile
 36424                           
 36425                           ; BSR set to: 0
 36426  008CF8  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 36427                           
 36428                           ; BSR set to: 0
 36429                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 36430  008CFA  0E07               	movlw	7
 36431  008CFC  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 36432  008CFE  D002               	goto	i2l16346
 36433                           
 36434                           ; BSR set to: 0
 36435                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 36436  008D00  0E00               	movlw	0
 36437  008D02  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 36438  008D04                     i2l16346:
 36439                           
 36440                           ; BSR set to: 0
 36441                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 36442  008D04  0101               	movlb	1	; () banked
 36443  008D06  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 36444                           
 36445                           ;mcc_generated_files/eusart1.c: 209:     }
 36446  008D08  0012               	return	
 36447  008D0A                     i2l106:
 36448                           
 36449                           ; BSR set to: 1
 36450                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 36451  008D0A  010E               	movlb	14	; () banked
 36452  008D0C  99C5               	bcf	197,4,b	;volatile
 36453  008D0E  0012               	return		;funcret
 36454  008D10                     __end_of_EUSART1_Transmit_ISR:
 36455                           	callstack 0
 36456                           
 36457 ;; *************** function _EUSART1_Receive_ISR *****************
 36458 ;; Defined at:
 36459 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 36460 ;; Parameters:    Size  Location     Type
 36461 ;;		None
 36462 ;; Auto vars:     Size  Location     Type
 36463 ;;		None
 36464 ;; Return value:  Size  Location     Type
 36465 ;;                  1    wreg      void 
 36466 ;; Registers used:
 36467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36468 ;; Tracked objects:
 36469 ;;		On entry : 3F/2
 36470 ;;		On exit  : 0/0
 36471 ;;		Unchanged: 0/0
 36472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36477 ;;Total ram usage:        0 bytes
 36478 ;; Hardware stack levels used: 1
 36479 ;; Hardware stack levels required when called: 2
 36480 ;; This function calls:
 36481 ;;		Absolute function
 36482 ;;		_EUSART1_DefaultErrorHandler
 36483 ;;		_EUSART1_DefaultFramingErrorHandler
 36484 ;;		_EUSART1_DefaultOverrunErrorHandler
 36485 ;;		_EUSART1_RxDataHandler
 36486 ;; This function is called by:
 36487 ;;		_EUSART1_Initialize
 36488 ;;		_INTERRUPT_InterruptManager
 36489 ;; This function uses a non-reentrant model
 36490 ;;
 36491                           
 36492                           	psect	text204
 36493  00761A                     __ptext204:
 36494                           	callstack 0
 36495  00761A                     _EUSART1_Receive_ISR:
 36496                           	callstack 14
 36497                           
 36498                           ; BSR set to: 2
 36499                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 36500                           
 36501                           ;incstack = 0
 36502  00761A  0E74               	movlw	low _eusart1RxStatusBuffer
 36503  00761C  0100               	movlb	0	; () banked
 36504  00761E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36505  007620  6ED9               	movwf	fsr2l,c
 36506  007622  6ADA               	clrf	fsr2h,c
 36507  007624  0E02               	movlw	high _eusart1RxStatusBuffer
 36508  007626  22DA               	addwfc	fsr2h,f,c
 36509  007628  0E00               	movlw	0
 36510  00762A  6EDF               	movwf	indf2,c
 36511                           
 36512                           ; BSR set to: 0
 36513                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 36514  00762C  A49D               	btfss	157,2,c	;volatile
 36515  00762E  D013               	goto	i2u1838_49
 36516                           
 36517                           ; BSR set to: 0
 36518                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 36519  007630  0E74               	movlw	low _eusart1RxStatusBuffer
 36520  007632  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36521  007634  6ED9               	movwf	fsr2l,c
 36522  007636  6ADA               	clrf	fsr2h,c
 36523  007638  0E02               	movlw	high _eusart1RxStatusBuffer
 36524  00763A  22DA               	addwfc	fsr2h,f,c
 36525  00763C  0102               	movlb	2	; () banked
 36526  00763E  82DF               	bsf	indf2,1,c
 36527                           
 36528                           ; BSR set to: 2
 36529                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 36530  007640  D801               	call	i2u1838_48
 36531  007642  D009               	goto	i2u1838_49
 36532  007644                     i2u1838_48:
 36533  007644  0005               	push	
 36534  007646  6EFA               	movwf	pclath,c
 36535  007648  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 36536  00764A  6EFD               	movwf	tosl,c
 36537  00764C  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 36538  00764E  6EFE               	movwf	tosh,c
 36539  007650  6AFF               	clrf	tosu,c
 36540  007652  50FA               	movf	pclath,w,c
 36541  007654  0012               	return		;indir
 36542  007656                     i2u1838_49:
 36543                           
 36544                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 36545  007656  A29D               	btfss	157,1,c	;volatile
 36546  007658  D014               	goto	i2u1840_49
 36547                           
 36548                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 36549  00765A  0E74               	movlw	low _eusart1RxStatusBuffer
 36550  00765C  0100               	movlb	0	; () banked
 36551  00765E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36552  007660  6ED9               	movwf	fsr2l,c
 36553  007662  6ADA               	clrf	fsr2h,c
 36554  007664  0E02               	movlw	high _eusart1RxStatusBuffer
 36555  007666  22DA               	addwfc	fsr2h,f,c
 36556  007668  0102               	movlb	2	; () banked
 36557  00766A  84DF               	bsf	indf2,2,c
 36558                           
 36559                           ; BSR set to: 2
 36560                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 36561  00766C  D801               	call	i2u1840_48
 36562  00766E  D009               	goto	i2u1840_49
 36563  007670                     i2u1840_48:
 36564  007670  0005               	push	
 36565  007672  6EFA               	movwf	pclath,c
 36566  007674  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 36567  007676  6EFD               	movwf	tosl,c
 36568  007678  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 36569  00767A  6EFE               	movwf	tosh,c
 36570  00767C  6AFF               	clrf	tosu,c
 36571  00767E  50FA               	movf	pclath,w,c
 36572  007680  0012               	return		;indir
 36573  007682                     i2u1840_49:
 36574                           
 36575                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 36576  007682  0E74               	movlw	low _eusart1RxStatusBuffer
 36577  007684  0100               	movlb	0	; () banked
 36578  007686  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36579  007688  6ED9               	movwf	fsr2l,c
 36580  00768A  6ADA               	clrf	fsr2h,c
 36581  00768C  0E02               	movlw	high _eusart1RxStatusBuffer
 36582  00768E  22DA               	addwfc	fsr2h,f,c
 36583  007690  50DF               	movf	indf2,w,c
 36584  007692  B4D8               	btfsc	status,2,c
 36585  007694  D00C               	goto	i2l16366
 36586                           
 36587                           ; BSR set to: 0
 36588                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 36589  007696  D801               	call	i2u1842_48
 36590  007698  0012               	return	
 36591  00769A                     i2u1842_48:
 36592  00769A  0005               	push	
 36593  00769C  6EFA               	movwf	pclath,c
 36594  00769E  0102               	movlb	2	; () banked
 36595  0076A0  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 36596  0076A2  6EFD               	movwf	tosl,c
 36597  0076A4  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 36598  0076A6  6EFE               	movwf	tosh,c
 36599  0076A8  6AFF               	clrf	tosu,c
 36600  0076AA  50FA               	movf	pclath,w,c
 36601  0076AC  0012               	return		;indir
 36602  0076AE                     i2l16366:
 36603                           
 36604                           ; BSR set to: 0
 36605                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 36606  0076AE  ECB7  F048         	call	_EUSART1_RxDataHandler	;wreg free
 36607  0076B2  0012               	return		;funcret
 36608  0076B4                     __end_of_EUSART1_Receive_ISR:
 36609                           	callstack 0
 36610                           
 36611 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 36612 ;; Defined at:
 36613 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 36614 ;; Parameters:    Size  Location     Type
 36615 ;;		None
 36616 ;; Auto vars:     Size  Location     Type
 36617 ;;		None
 36618 ;; Return value:  Size  Location     Type
 36619 ;;                  1    wreg      void 
 36620 ;; Registers used:
 36621 ;;		None
 36622 ;; Tracked objects:
 36623 ;;		On entry : 3F/2
 36624 ;;		On exit  : 3F/2
 36625 ;;		Unchanged: 3F/0
 36626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36631 ;;Total ram usage:        0 bytes
 36632 ;; Hardware stack levels used: 1
 36633 ;; This function calls:
 36634 ;;		Nothing
 36635 ;; This function is called by:
 36636 ;;		_EUSART1_Initialize
 36637 ;;		_EUSART1_Receive_ISR
 36638 ;; This function uses a non-reentrant model
 36639 ;;
 36640                           
 36641                           	psect	text205
 36642  0094DA                     __ptext205:
 36643                           	callstack 0
 36644  0094DA                     _EUSART1_DefaultOverrunErrorHandler:
 36645                           	callstack 15
 36646                           
 36647                           ; BSR set to: 2
 36648                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 36649                           
 36650                           ;incstack = 0
 36651  0094DA  989D               	bcf	157,4,c	;volatile
 36652                           
 36653                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 36654  0094DC  889D               	bsf	157,4,c	;volatile
 36655                           
 36656                           ; BSR set to: 2
 36657  0094DE  0012               	return		;funcret
 36658  0094E0                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 36659                           	callstack 0
 36660                           
 36661 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 36662 ;; Defined at:
 36663 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 36664 ;; Parameters:    Size  Location     Type
 36665 ;;		None
 36666 ;; Auto vars:     Size  Location     Type
 36667 ;;		None
 36668 ;; Return value:  Size  Location     Type
 36669 ;;                  1    wreg      void 
 36670 ;; Registers used:
 36671 ;;		None
 36672 ;; Tracked objects:
 36673 ;;		On entry : 3F/2
 36674 ;;		On exit  : 3F/2
 36675 ;;		Unchanged: 3F/0
 36676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36681 ;;Total ram usage:        0 bytes
 36682 ;; Hardware stack levels used: 1
 36683 ;; This function calls:
 36684 ;;		Nothing
 36685 ;; This function is called by:
 36686 ;;		_EUSART1_Initialize
 36687 ;;		_EUSART1_Receive_ISR
 36688 ;; This function uses a non-reentrant model
 36689 ;;
 36690                           
 36691                           	psect	text206
 36692  009522                     __ptext206:
 36693                           	callstack 0
 36694  009522                     _EUSART1_DefaultFramingErrorHandler:
 36695                           	callstack 15
 36696                           
 36697                           ; BSR set to: 2
 36698                           
 36699                           ; BSR set to: 2
 36700                           ;incstack = 0
 36701  009522  0012               	return		;funcret
 36702  009524                     __end_of_EUSART1_DefaultFramingErrorHandler:
 36703                           	callstack 0
 36704                           
 36705 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 36706 ;; Defined at:
 36707 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 36708 ;; Parameters:    Size  Location     Type
 36709 ;;		None
 36710 ;; Auto vars:     Size  Location     Type
 36711 ;;		None
 36712 ;; Return value:  Size  Location     Type
 36713 ;;                  1    wreg      void 
 36714 ;; Registers used:
 36715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36716 ;; Tracked objects:
 36717 ;;		On entry : 3F/2
 36718 ;;		On exit  : 3F/0
 36719 ;;		Unchanged: 0/0
 36720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36725 ;;Total ram usage:        0 bytes
 36726 ;; Hardware stack levels used: 1
 36727 ;; Hardware stack levels required when called: 1
 36728 ;; This function calls:
 36729 ;;		_EUSART1_RxDataHandler
 36730 ;; This function is called by:
 36731 ;;		_EUSART1_Initialize
 36732 ;;		_EUSART1_Receive_ISR
 36733 ;; This function uses a non-reentrant model
 36734 ;;
 36735                           
 36736                           	psect	text207
 36737  0094E0                     __ptext207:
 36738                           	callstack 0
 36739  0094E0                     _EUSART1_DefaultErrorHandler:
 36740                           	callstack 14
 36741                           
 36742                           ; BSR set to: 2
 36743                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 36744                           
 36745                           ; BSR set to: 2
 36746                           ;incstack = 0
 36747  0094E0  ECB7  F048         	call	_EUSART1_RxDataHandler	;wreg free
 36748                           
 36749                           ; BSR set to: 0
 36750  0094E4  0012               	return		;funcret
 36751  0094E6                     __end_of_EUSART1_DefaultErrorHandler:
 36752                           	callstack 0
 36753                           
 36754 ;; *************** function _EUSART1_RxDataHandler *****************
 36755 ;; Defined at:
 36756 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 36757 ;; Parameters:    Size  Location     Type
 36758 ;;		None
 36759 ;; Auto vars:     Size  Location     Type
 36760 ;;		None
 36761 ;; Return value:  Size  Location     Type
 36762 ;;                  1    wreg      void 
 36763 ;; Registers used:
 36764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36765 ;; Tracked objects:
 36766 ;;		On entry : 3D/0
 36767 ;;		On exit  : 3F/0
 36768 ;;		Unchanged: 0/0
 36769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36774 ;;Total ram usage:        0 bytes
 36775 ;; Hardware stack levels used: 1
 36776 ;; This function calls:
 36777 ;;		Nothing
 36778 ;; This function is called by:
 36779 ;;		_EUSART1_Receive_ISR
 36780 ;;		_EUSART1_DefaultErrorHandler
 36781 ;; This function uses a non-reentrant model
 36782 ;;
 36783                           
 36784                           	psect	text208
 36785  00916E                     __ptext208:
 36786                           	callstack 0
 36787  00916E                     _EUSART1_RxDataHandler:
 36788                           	callstack 15
 36789                           
 36790                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 36791                           
 36792                           ; BSR set to: 0
 36793                           ;incstack = 0
 36794  00916E  0E7C               	movlw	low _eusart1RxBuffer
 36795  009170  0100               	movlb	0	; () banked
 36796  009172  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36797  009174  6ED9               	movwf	fsr2l,c
 36798  009176  6ADA               	clrf	fsr2h,c
 36799  009178  0E02               	movlw	high _eusart1RxBuffer
 36800  00917A  22DA               	addwfc	fsr2h,f,c
 36801  00917C  CF99 FFDF          	movff	3993,indf2	;volatile
 36802                           
 36803                           ; BSR set to: 0
 36804  009180  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 36805                           
 36806                           ; BSR set to: 0
 36807                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 36808  009182  0E07               	movlw	7
 36809  009184  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 36810  009186  D002               	goto	i2l12666
 36811                           
 36812                           ; BSR set to: 0
 36813                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 36814  009188  0E00               	movlw	0
 36815  00918A  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 36816  00918C                     i2l12666:
 36817                           
 36818                           ; BSR set to: 0
 36819                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 36820  00918C  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 36821                           
 36822                           ; BSR set to: 0
 36823  00918E  0012               	return		;funcret
 36824  009190                     __end_of_EUSART1_RxDataHandler:
 36825                           	callstack 0
 36826                           
 36827                           	psect	text209
 36828  000000                     __ptext209:
 36829                           	callstack 0
 36830                           
 36831                           	psect	rparam
 36832  0000                     
 36833                           	psect	temp
 36834  000050                     btemp:
 36835                           	callstack 0
 36836  000050                     	ds	1
 36837  0000                     int$flags	set	btemp
 36838  0000                     wtemp8	set	btemp+1
 36839  0000                     ttemp5	set	btemp+1
 36840  0000                     ttemp6	set	btemp+4
 36841  0000                     ttemp7	set	btemp+8
 36842                           
 36843                           	psect	idloc
 36844                           
 36845                           ;Config register IDLOC0 @ 0x200000
 36846                           ;	unspecified, using default values
 36847  200000                     	org	2097152
 36848  200000  0FFF               	dw	4095
 36849                           
 36850                           ;Config register IDLOC1 @ 0x200002
 36851                           ;	unspecified, using default values
 36852  200002                     	org	2097154
 36853  200002  0FFF               	dw	4095
 36854                           
 36855                           ;Config register IDLOC2 @ 0x200004
 36856                           ;	unspecified, using default values
 36857  200004                     	org	2097156
 36858  200004  0FFF               	dw	4095
 36859                           
 36860                           ;Config register IDLOC3 @ 0x200006
 36861                           ;	unspecified, using default values
 36862  200006                     	org	2097158
 36863  200006  0FFF               	dw	4095
 36864                           
 36865                           ;Config register IDLOC4 @ 0x200008
 36866                           ;	unspecified, using default values
 36867  200008                     	org	2097160
 36868  200008  0FFF               	dw	4095
 36869                           
 36870                           ;Config register IDLOC5 @ 0x20000A
 36871                           ;	unspecified, using default values
 36872  20000A                     	org	2097162
 36873  20000A  0FFF               	dw	4095
 36874                           
 36875                           ;Config register IDLOC6 @ 0x20000C
 36876                           ;	unspecified, using default values
 36877  20000C                     	org	2097164
 36878  20000C  0FFF               	dw	4095
 36879                           
 36880                           ;Config register IDLOC7 @ 0x20000E
 36881                           ;	unspecified, using default values
 36882  20000E                     	org	2097166
 36883  20000E  0FFF               	dw	4095
 36884                           
 36885                           	psect	config
 36886                           
 36887                           ;Config register CONFIG1L @ 0x300000
 36888                           ;	External Oscillator mode Selection bits
 36889                           ;	FEXTOSC = OFF, Oscillator not enabled
 36890                           ;	Power-up default value for COSC bits
 36891                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 36892  300000                     	org	3145728
 36893  300000  8C                 	db	140
 36894                           
 36895                           ;Config register CONFIG1H @ 0x300001
 36896                           ;	Clock Out Enable bit
 36897                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 36898                           ;	Clock Switch Enable bit
 36899                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 36900                           ;	Fail-Safe Clock Monitor Enable bit
 36901                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 36902  300001                     	org	3145729
 36903  300001  FF                 	db	255
 36904                           
 36905                           ;Config register CONFIG2L @ 0x300002
 36906                           ;	Master Clear Enable bit
 36907                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 36908                           ;	Power-up Timer Enable bit
 36909                           ;	PWRTE = ON, Power up timer enabled
 36910                           ;	Low-power BOR enable bit
 36911                           ;	LPBOREN = OFF, ULPBOR disabled
 36912                           ;	Brown-out Reset Enable bits
 36913                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 36914  300002                     	org	3145730
 36915  300002  FD                 	db	253
 36916                           
 36917                           ;Config register CONFIG2H @ 0x300003
 36918                           ;	Brown Out Reset Voltage selection bits
 36919                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 36920                           ;	ZCD Disable bit
 36921                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 36922                           ;	PPSLOCK bit One-Way Set Enable bit
 36923                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 36924                           ;	Stack Full/Underflow Reset Enable bit
 36925                           ;	STVREN = ON, Stack full/underflow will cause Reset
 36926                           ;	Debugger Enable bit
 36927                           ;	DEBUG = OFF, Background debugger disabled
 36928                           ;	Extended Instruction Set Enable bit
 36929                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 36930  300003                     	org	3145731
 36931  300003  FF                 	db	255
 36932                           
 36933                           ;Config register CONFIG3L @ 0x300004
 36934                           ;	WDT Period Select bits
 36935                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 36936                           ;	WDT operating mode
 36937                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 36938  300004                     	org	3145732
 36939  300004  BF                 	db	191
 36940                           
 36941                           ;Config register CONFIG3H @ 0x300005
 36942                           ;	WDT Window Select bits
 36943                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 36944                           ;	WDT input clock selector
 36945                           ;	WDTCCS = SC, Software Control
 36946  300005                     	org	3145733
 36947  300005  FF                 	db	255
 36948                           
 36949                           ;Config register CONFIG4L @ 0x300006
 36950                           ;	Write Protection Block 0
 36951                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 36952                           ;	Write Protection Block 1
 36953                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 36954                           ;	Write Protection Block 2
 36955                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 36956                           ;	Write Protection Block 3
 36957                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 36958  300006                     	org	3145734
 36959  300006  FF                 	db	255
 36960                           
 36961                           ;Config register CONFIG4H @ 0x300007
 36962                           ;	Configuration Register Write Protection bit
 36963                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 36964                           ;	Boot Block Write Protection bit
 36965                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 36966                           ;	Data EEPROM Write Protection bit
 36967                           ;	WRTD = OFF, Data EEPROM not write-protected
 36968                           ;	Scanner Enable bit
 36969                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 36970                           ;	Low Voltage Programming Enable bit
 36971                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 36972  300007                     	org	3145735
 36973  300007  DF                 	db	223
 36974                           
 36975                           ;Config register CONFIG5L @ 0x300008
 36976                           ;	UserNVM Program Memory Code Protection bit
 36977                           ;	CP = ON, UserNVM code protection enabled
 36978                           ;	DataNVM Memory Code Protection bit
 36979                           ;	CPD = ON, DataNVM code protection enabled
 36980  300008                     	org	3145736
 36981  300008  FC                 	db	252
 36982                           
 36983                           ;Config register CONFIG5H @ 0x300009
 36984                           ;	unspecified, using default values
 36985  300009                     	org	3145737
 36986  300009  FF                 	db	255
 36987                           
 36988                           ;Config register CONFIG6L @ 0x30000A
 36989                           ;	Table Read Protection Block 0
 36990                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 36991                           ;	Table Read Protection Block 1
 36992                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 36993                           ;	Table Read Protection Block 2
 36994                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 36995                           ;	Table Read Protection Block 3
 36996                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 36997  30000A                     	org	3145738
 36998  30000A  FF                 	db	255
 36999                           
 37000                           ;Config register CONFIG6H @ 0x30000B
 37001                           ;	Boot Block Table Read Protection bit
 37002                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 37003  30000B                     	org	3145739
 37004  30000B  FF                 	db	255
 37005                           tosu	equ	0xFFF
 37006                           tosh	equ	0xFFE
 37007                           tosl	equ	0xFFD
 37008                           stkptr	equ	0xFFC
 37009                           pclatu	equ	0xFFB
 37010                           pclath	equ	0xFFA
 37011                           pcl	equ	0xFF9
 37012                           tblptru	equ	0xFF8
 37013                           tblptrh	equ	0xFF7
 37014                           tblptrl	equ	0xFF6
 37015                           tablat	equ	0xFF5
 37016                           prodh	equ	0xFF4
 37017                           prodl	equ	0xFF3
 37018                           indf0	equ	0xFEF
 37019                           postinc0	equ	0xFEE
 37020                           postdec0	equ	0xFED
 37021                           preinc0	equ	0xFEC
 37022                           plusw0	equ	0xFEB
 37023                           fsr0h	equ	0xFEA
 37024                           fsr0l	equ	0xFE9
 37025                           wreg	equ	0xFE8
 37026                           indf1	equ	0xFE7
 37027                           postinc1	equ	0xFE6
 37028                           postdec1	equ	0xFE5
 37029                           preinc1	equ	0xFE4
 37030                           plusw1	equ	0xFE3
 37031                           fsr1h	equ	0xFE2
 37032                           fsr1l	equ	0xFE1
 37033                           bsr	equ	0xFE0
 37034                           indf2	equ	0xFDF
 37035                           postinc2	equ	0xFDE
 37036                           postdec2	equ	0xFDD
 37037                           preinc2	equ	0xFDC
 37038                           plusw2	equ	0xFDB
 37039                           fsr2h	equ	0xFDA
 37040                           fsr2l	equ	0xFD9
 37041                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         821
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     32     154
    BANK1           256      0     255
    BANK2           256      0     241
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8256$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8262$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8268$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8274$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8273	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8268	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8267	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8262	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8261	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8256	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8255	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    confirmpackage@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    init_package@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6612$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4643$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_eusartparser
    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _saveNewSerial->_i2c_writeNBytes
    _getSerialCmd->_memcpy
    _RemoveSerial->_i2c_writeNBytes
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_sm_execute_main
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_SaveNVM_VarSystem
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 7456448
                                             25 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3265960
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3240536
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       6     5      1  717151
                                             57 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1774159
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349450
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349363
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   20456
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1223
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  740427
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384102
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  356325
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  349416
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1741500
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        15    14      1  710318
                                             57 COMRAM     1     0      1
                                              4 BANK0      7     7      0
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    5758
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    3548
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _confirmpackage                                       2     0      2     426
                                             16 COMRAM     2     0      2
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         1     0      1     142
                                             15 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  348601
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  347773
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
         _i2c_readDataBlock
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
           _i2c_writeNBytes
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
           _i2c_writeNBytes
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F1       9       94.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     20      9A       5       96.2%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D0      60        0.0%
DATA                 0      0     3D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 12:27:19 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 9402  
                                _eusart1TxBufferRemaining 01FE  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 7F18  
                                           _LoadManufCode 9108  
                                        ?_SetSegmentValue 001C  
                                                     l100 8AE0  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 79E6  
                                                     l690 7E4E  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E1  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 452C  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 8DF2  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 947E  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 8C40  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 003A  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2034 8362  
                                                    l1405 628C  
                                       readRFButtons@key1 0088  
                                                    l2039 836E  
                                                    l1512 5748  
                                                    l2410 3A12  
                                                    l2306 507E  
                                                    l2235 71C8  
                                                    l2323 7F14  
                                                    l1372 89DE  
                                                    l1436 57C4  
                                                    l3060 26D2  
                                                    l1357 6CA6  
                                                    l1366 6E28  
                                                    l2502 786C  
                                                    l2318 7F0A  
                                                    l1383 59C8  
                                                    l2511 8BDE  
                                                    l1519 5794  
                                                    l3048 2546  
                                                    l2249 6990  
                                                    l2514 8C04  
                                                    l1490 562A  
                                                    l2371 4B6C  
                                                    l1731 6B06  
                                                    l3083 2718  
                                                    l1388 5A50  
                                                    l2348 4B60  
                                                    l1740 6B72  
                                                    l1732 6B0E  
                                                    l1652 5D86  
                                                    l3228 1066  
                                                    l2365 4B58  
                                                    l1741 6B7A  
                                                    l1486 859C  
                                                    l2438 3B84  
                                                    l1734 6B2A  
                                                    l1726 6ACC  
                                                    l1662 5DCE  
                                                    l2375 4C30  
                                                    l1743 6BA4  
                                                    l1735 6B32  
                                                    l1727 6AD4  
                                                    l2472 3C9A  
                                                    l2392 4C28  
                                                    l3600 2EF8  
                                                    l3601 2EFE  
                                                    l1737 6B4E  
                                                    l1649 5D10  
                                                    l3433 23C8  
                                                    l3353 1FA0  
                                                    l3097 27F2  
                                                    l4170 8794  
                                                    l3610 2F2C  
                                                    l3602 2F04  
                                                    l1738 6B56  
                                                    l2722 50AA  
                                                    l3603 2F0A  
                                                    l3507 848A  
                                                    l3620 2F5C  
                                                    l3612 2F32  
                                                    l3604 2F10  
                                                    l2580 8158  
                                                    l2724 50E0  
                                                    l3613 2F38  
                                                    l3605 2F16  
                                                    l2805 452A  
                                                    l2725 51A0  
                                                    l2398 4C3C  
                                                    l3614 2F3E  
                                                    l1854 70A2  
                                                    l2718 49F4  
                                                    l3623 3026  
                                                    l3615 2F44  
                                                    l3607 2F1C  
                                                    l3375 209A  
                                                    l3367 2060  
                                                    l3608 2F22  
                                                    l1864 70D6  
                                                    l1856 70B2  
                                                    l2648 384C  
                                                    l3617 2F4A  
                                                    l3385 21DE  
                                                    l3618 2F50  
                                                    l3706 7C9A  
                                                    l3386 21FE  
                                                    l3619 2F56  
                                                    l2907 19FC  
                                                    l3483 7422  
                                                    l3628 31AC  
                                                    l3629 31B6  
                                                    l3591 2EC0  
                                                    l2768 4346  
                                                    l3593 2ECA  
                                                    l3489 8D3E  
                                                    l3594 2ED4  
                                                    l3596 2EDA  
                                                    l3598 2EE4  
                                                    l3599 2EEE  
                                                    ?_rxi 0001  
                                                    _DKEY 02D1  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F1  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028C  
                                           eusartparser@i 00DE  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 93BA  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 8ACA  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 5C78  
                                                    _main 5F98  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0011  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                         __end_of_Decrypt 712E  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 71F4  
                                         __end_of_ReadADC 86F8  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 5608  
                                 __end_of_TMR0_Initialize 914C  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9328  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20100 8C1E  
                                                   l20030 3D42  
                                                   l20022 3D2C  
                                                   l20112 8C3C  
                                                   l20200 54E4  
                                                   l20024 3D32  
                                                   l20130 5EFC  
                                                   l20122 5E88  
                                                   l20050 3DE2  
                                                   l20042 3D84  
                                                   l20018 3D22  
                                                   l21010 249A  
                                                   l12140 8B04  
                                                   l12124 8ACC  
                                                   l20108 8C34  
                                                   l20060 3E88  
                                                   l20052 3DFE  
                                                   l20036 3D74  
                                                   l20126 5EC4  
                                                   l20222 5518  
                                                   l20070 3F0C  
                                                   l20062 3EA4  
                                                   l20054 3E22  
                                                   l20144 5F8A  
                                                   l20216 5510  
                                                   l20160 547A  
                                                   l20304 75B2  
                                                   l22000 449E  
                                                   l12400 6D70  
                                                   l20080 3F90  
                                                   l20064 3EC0  
                                                   l20056 3E3E  
                                                   l20048 3DB6  
                                                   l21008 2448  
                                                   l12138 8B00  
                                                   l20410 7A5E  
                                                   l22002 44A2  
                                                   l20066 3ED8  
                                                   l20058 3E5A  
                                                   l20074 3F1E  
                                                   l20244 5552  
                                                   l22004 44A8  
                                                   l12404 6D7C  
                                                   l20084 3FCC  
                                                   l20068 3EF2  
                                                   l20076 3F82  
                                                   l20422 7A7E  
                                                   l20414 7A62  
                                                   l20270 55C4  
                                                   l20238 554A  
                                                   l20190 54E0  
                                                   l20166 547E  
                                                   l20334 7616  
                                                   l20318 75E0  
                                                   l20350 7508  
                                                   l22022 44E0  
                                                   l22014 44C6  
                                                   l20502 4F3E  
                                                   l22110 19DA  
                                                   l22102 19B2  
                                                   l21206 34DE  
                                                   l14008 878A  
                                                   l23000 40DA  
                                                   l21400 573A  
                                                   l21320 561C  
                                                   l20096 8C18  
                                                   l20184 54BC  
                                                   l20512 4F5C  
                                                   l22120 19FE  
                                                   l12360 6CD4  
                                                   l12408 6D86  
                                                   l21208 34F2  
                                                   l23010 4108  
                                                   l20450 8CA8  
                                                   l20442 8C90  
                                                   l14114 89AA  
                                                   l20282 5604  
                                                   l20258 5578  
                                                   l20178 54B8  
                                                   l20274 55C8  
                                                   l20370 753A  
                                                   l22122 1A3E  
                                                   l12370 6D00  
                                                   l12354 6CBA  
                                                   l12602 7B9C  
                                                   l21154 3346  
                                                   l23020 4152  
                                                   l23004 40FA  
                                                   l21308 8536  
                                                   l21420 5786  
                                                   l21412 576A  
                                                   l21340 5668  
                                                   l21332 564C  
                                                   l20356 750C  
                                                   l22204 1BE4  
                                                   l22140 1AB2  
                                                   l22124 1A54  
                                                   l12380 6D22  
                                                   l21260 3612  
                                                   l21172 33C4  
                                                   l21164 3368  
                                                   l23014 412E  
                                                   l23006 40FE  
                                                   l20630 81B6  
                                                   l22038 4512  
                                                   l20526 4F8A  
                                                   l20710 83C0  
                                                   l22142 1AD0  
                                                   l22062 18F0  
                                                   l22054 18BE  
                                                   l22046 188E  
                                                   l12374 6D0C  
                                                   l12366 6CEE  
                                                   l21238 3586  
                                                   l21174 33FC  
                                                   l21166 336A  
                                                   l23110 25BC  
                                                   l23040 41D0  
                                                   l23024 415C  
                                                   l21416 5778  
                                                   l21408 575C  
                                                   l21360 56AE  
                                                   l21352 5692  
                                                   l21344 5676  
                                                   l21336 565A  
                                                   l21328 563E  
                                                   l21440 5320  
                                                   l20472 4E98  
                                                   l22304 1DEC  
                                                   l22216 1C3A  
                                                   l12392 6D56  
                                                   l21176 3402  
                                                   l20800 20B2  
                                                   l20720 1FB2  
                                                   l23104 259C  
                                                   l12706 900A  
                                                   l23050 4226  
                                                   l23034 41B8  
                                                   l23026 4166  
                                                   l23018 414E  
                                                   l21450 5394  
                                                   l20298 75AE  
                                                   l20634 81BE  
                                                   l21530 7472  
                                                   l20386 7570  
                                                   l20546 4FEC  
                                                   l20554 500A  
                                                   l20466 4E86  
                                                   l22330 1E80  
                                                   l22082 195E  
                                                   l22074 1938  
                                                   l22066 1914  
                                                   l12386 6D3C  
                                                   l12378 6D18  
                                                   l12570 7B36  
                                                   l12642 8FCC  
                                                   l12634 8FB4  
                                                   l21266 3628  
                                                   l21194 347E  
                                                   l20810 210C  
                                                   l20722 1FBA  
                                                   l22410 0FAA  
                                                   l22402 0F66  
                                                   l12724 6E5C  
                                                   l23052 4230  
                                                   l23036 41BC  
                                                   l23060 4256  
                                                   l21380 56F4  
                                                   l21372 56D8  
                                                   l21364 56BC  
                                                   l21356 56A0  
                                                   l21348 5684  
                                                   l20396 8CDA  
                                                   l21452 53A4  
                                                   l21436 5316  
                                                   l20628 81AA  
                                                   l20660 6FA2  
                                                   l21700 4990  
                                                   l20708 838E  
                                                   l22236 1C8A  
                                                   l22180 1B6A  
                                                   l22148 1AF0  
                                                   l12396 6D64  
                                                   l20820 211C  
                                                   l20732 1FD6  
                                                   l20724 1FC2  
                                                   l23300 282A  
                                                   l23140 25FC  
                                                   l12718 6DC4  
                                                   l23038 41C6  
                                                   l21550 74AE  
                                                   l20574 5040  
                                                   l20478 4EB2  
                                                   l20670 7016  
                                                   l21702 4996  
                                                   l21614 4890  
                                                   l22350 1ED8  
                                                   l22182 1B74  
                                                   l22094 199A  
                                                   l22086 1978  
                                                   l12582 7B5C  
                                                   l21198 34B8  
                                                   l20910 2300  
                                                   l20902 22DC  
                                                   l20830 21A4  
                                                   l20822 216A  
                                                   l20806 20FA  
                                                   l20734 1FDE  
                                                   l20718 1FAA  
                                                   l22502 1226  
                                                   l22430 0FFC  
                                                   l22422 0FE4  
                                                   l22414 0FCC  
                                                   l22406 0F88  
                                                   l23230 2752  
                                                   l23118 25D8  
                                                   l23070 24A2  
                                                   l23048 4222  
                                                   l21392 571E  
                                                   l21384 5702  
                                                   l21376 56E6  
                                                   l21368 56CA  
                                                   l21544 74A4  
                                                   l21528 745C  
                                                   l20584 506A  
                                                   l20576 5046  
                                                   l20568 501C  
                                                   l21720 49D2  
                                                   l22328 1E76  
                                                   l22248 1CE0  
                                                   l22176 1B5C  
                                                   l12584 7B64  
                                                   l12576 7B46  
                                                   l21288 73E2  
                                                   l20920 2322  
                                                   l20904 22F8  
                                                   l20736 1FE6  
                                                   l22520 12B6  
                                                   l23320 2880  
                                                   l23304 283A  
                                                   l23208 2708  
                                                   l23128 25E6  
                                                   l23080 24EC  
                                                   l14602 5A82  
                                                   l12690 7906  
                                                   l16210 2B16  
                                                   l16202 2AF6  
                                                   l21298 84EE  
                                                   l21458 53A8  
                                                   l20690 66E0  
                                                   l21802 5174  
                                                   l20666 6FDC  
                                                   l21634 48E8  
                                                   l22362 1EF0  
                                                   l22274 1D50  
                                                   l23410 3714  
                                                   l23402 36F2  
                                                   l12594 7B84  
                                                   l20930 2332  
                                                   l20922 2326  
                                                   l20914 2304  
                                                   l20770 2076  
                                                   l20754 2006  
                                                   l20746 1FFA  
                                                   l20738 1FEE  
                                                   l23314 285C  
                                                   l23170 265C  
                                                   l14532 6C28  
                                                   l16300 30EC  
                                                   l21396 572C  
                                                   l21388 5710  
                                                   l21484 541A  
                                                   l21468 53EE  
                                                   l20596 811C  
                                                   l20684 669C  
                                                   l20676 6650  
                                                   l21812 5186  
                                                   l21740 509A  
                                                   l21708 49A8  
                                                   l21628 48D0  
                                                   l21580 47F2  
                                                   l20924 232A  
                                                   l20908 22FC  
                                                   l20860 2218  
                                                   l20780 208A  
                                                   l20772 207E  
                                                   l20764 2012  
                                                   l22700 1688  
                                                   l22524 12D8  
                                                   l22452 1068  
                                                   l23244 278A  
                                                   l23236 2770  
                                                   l23164 2642  
                                                   l23148 261A  
                                                   l23084 250C  
                                                   l23076 24CA  
                                                   l14550 6C62  
                                                   l14534 6C30  
                                                   l14518 6BD4  
                                                   l12694 7948  
                                                   l17110 4B48  
                                                   l16230 2B66  
                                                   l16222 2B46  
                                                   l16214 2B26  
                                                   l16206 2B06  
                                                   l16150 29E0  
                                                   l16302 315E  
                                                   l21902 4334  
                                                   l21662 4940  
                                                   l21646 490C  
                                                   l23510 396E  
                                                   l23422 374C  
                                                   l12598 7B8E  
                                                   l20950 2370  
                                                   l20942 2366  
                                                   l20926 232E  
                                                   l20870 226A  
                                                   l20862 2242  
                                                   l22622 14D0  
                                                   l22614 147C  
                                                   l22606 145E  
                                                   l22550 1344  
                                                   l22542 1328  
                                                   l22446 1044  
                                                   l22438 101E  
                                                   l22454 10AC  
                                                   l23270 27C4  
                                                   l23174 266E  
                                                   l23158 262A  
                                                   l23094 2548  
                                                   l17112 4B4C  
                                                   l17032 833C  
                                                   l21664 4946  
                                                   l22368 1F06  
                                                   l22296 1D9E  
                                                   l22288 1D80  
                                                   l23520 398A  
                                                   l23512 3974  
                                                   l20936 235C  
                                                   l20880 2298  
                                                   l20864 2246  
                                                   l20792 20A2  
                                                   l20768 206E  
                                                   l22720 16CE  
                                                   l22704 1694  
                                                   l22616 147E  
                                                   l22456 10C2  
                                                   l23088 252E  
                                                   l23096 2574  
                                                   l14538 6C3C  
                                                   l22810 61DC  
                                                   l17210 3B40  
                                                   l17114 4B5A  
                                                   l16330 88C6  
                                                   l16234 2B76  
                                                   l16226 2B56  
                                                   l16218 2B36  
                                                   l16170 2A68  
                                                   l16162 2A2C  
                                                   l16154 29FE  
                                                   l16146 29AA  
                                                   l16314 31C0  
                                                   l21922 43AC  
                                                   l21826 51BA  
                                                   l21818 519C  
                                                   l21594 4820  
                                                   l21578 47DC  
                                                   l22378 1F54  
                                                   l23514 3978  
                                                   l23530 399E  
                                                   l23450 37EC  
                                                   l23426 376E  
                                                   l20970 239C  
                                                   l20962 2398  
                                                   l20890 22AC  
                                                   l20874 2284  
                                                   l22722 16D6  
                                                   l22714 16BC  
                                                   l22642 1562  
                                                   l22626 14F2  
                                                   l22482 11AA  
                                                   l22466 112A  
                                                   l22394 0F24  
                                                   l23346 28EE  
                                                   l23370 296E  
                                                   l23258 27AE  
                                                   l23194 26C8  
                                                   l23098 258A  
                                                   l17212 3B50  
                                                   l14820 7EE4  
                                                   l17140 4C1C  
                                                   l17116 4B70  
                                                   l17060 4A2E  
                                                   l17036 8350  
                                                   l17028 832A  
                                                   l16260 2CCC  
                                                   l16244 2BF2  
                                                   l16148 29C6  
                                                   l21836 51E0  
                                                   l21772 5114  
                                                   l21684 4960  
                                                   l23524 3990  
                                                   l23516 3984  
                                                   l20956 238E  
                                                   l20884 22A0  
                                                   l20876 228E  
                                                   l20868 224E  
                                                   l22732 1710  
                                                   l22484 11AC  
                                                   l22476 1190  
                                                   l23364 294E  
                                                   l23348 2902  
                                                   l23196 26D4  
                                                   l23188 26A8  
                                                   l14574 595C  
                                                   l14566 89D2  
                                                   l22822 6210  
                                                   l17142 4C2A  
                                                   l17070 4A50  
                                                   l17054 4A1E  
                                                   l16254 2C6E  
                                                   l16238 2B94  
                                                   l16190 2AB8  
                                                   l16182 2A98  
                                                   l16174 2A78  
                                                   l16166 2A4A  
                                                   l16158 2A0E  
                                                   l21942 43F8  
                                                   l21862 523E  
                                                   l21782 5138  
                                                   l23454 380E  
                                                   l23438 37AA  
                                                   l23390 36AA  
                                                   l20990 23F4  
                                                   l20886 22A4  
                                                   l22750 17FA  
                                                   l22742 17DE  
                                                   l22662 15D0  
                                                   l22646 1584  
                                                   l22590 1416  
                                                   l22574 13CC  
                                                   l22558 1360  
                                                   l22486 11D6  
                                                   l22398 0F44  
                                                   l23278 27E2  
                                                   l23198 26E2  
                                                   l23374 297A  
                                                   l14584 5992  
                                                   l22808 61D8  
                                                   l22824 6226  
                                                   l17216 3B66  
                                                   l17224 3B90  
                                                   l16264 2CE0  
                                                   l16248 2C10  
                                                   l22920 5D16  
                                                   l21960 4436  
                                                   l21848 520E  
                                                   l21792 5156  
                                                   l23464 384E  
                                                   l20976 23BA  
                                                   l20896 22D0  
                                                   l22592 1422  
                                                   l22488 11DC  
                                                   l23368 2962  
                                                   l23608 60C4  
                                                   l14594 5A36  
                                                   l14578 5972  
                                                   l14850 77FC  
                                                   l17242 3BDC  
                                                   l17154 3A14  
                                                   l14826 7F00  
                                                   l17138 4C18  
                                                   l16274 2D52  
                                                   l16194 2AC8  
                                                   l16186 2AA8  
                                                   l16178 2A88  
                                                   l16282 2DB0  
                                                   l21970 4452  
                                                   l21954 441C  
                                                   l21890 42DC  
                                                   l21866 524A  
                                                   l21794 515E  
                                                   l21786 5142  
                                                   l21698 498C  
                                                   l23490 390E  
                                                   l23466 388E  
                                                   l23394 36B8  
                                                   l20986 23E2  
                                                   l20898 22D4  
                                                   l22746 17EE  
                                                   l22674 160A  
                                                   l22498 11FA  
                                                   l14836 8BE0  
                                                   l14852 7804  
                                                   l14860 783C  
                                                   l17252 3C16  
                                                   l17148 39F4  
                                                   l17068 4A4A  
                                                   l16268 2CF4  
                                                   l16292 2F66  
                                                   l22932 5D6A  
                                                   l21964 443E  
                                                   l21972 4458  
                                                   l23468 38A4  
                                                   l13956 8D38  
                                                   l20996 2404  
                                                   l22748 17F4  
                                                   l22692 1666  
                                                   l22588 1412  
                                                   l19102 8204  
                                                   l14598 5A60  
                                                   l22790 6166  
                                                   l14870 7868  
                                                   l14854 780C  
                                                   l17246 3BF4  
                                                   l17190 3AE2  
                                                   l17182 3AAC  
                                                   l17166 3A5E  
                                                   l17086 4A9C  
                                                   l16198 2AD8  
                                                   l16294 2FD8  
                                                   l22870 65B2  
                                                   l22950 5DEA  
                                                   l22934 5D70  
                                                   l21982 447C  
                                                   l23398 36DA  
                                                   l13974 7C4C  
                                                   l20998 2420  
                                                   l22686 164E  
                                                   l22766 1840  
                                                   l14848 77F4  
                                                   l17280 3C9E  
                                                   l17264 3C48  
                                                   l17248 3C02  
                                                   l16296 302C  
                                                   l22928 5D44  
                                                   l22952 5DF2  
                                                   l16712 825A  
                                                   l21888 42C6  
                                                   l13976 7C58  
                                                   l23592 6082  
                                                   l23568 5FDE  
                                                   l14858 7814  
                                                   l17290 3CDA  
                                                   l17258 3C26  
                                                   l17194 3AF8  
                                                   l17178 3A98  
                                                   l16298 309E  
                                                   l22970 4014  
                                                   l16634 92C6  
                                                   l16802 6B9E  
                                                   l16730 8292  
                                                   l16722 827C  
                                                   l16714 825E  
                                                   l21986 4484  
                                                   l13986 7C8C  
                                                   l23578 5FF4  
                                                   l13996 8762  
                                                   l17284 3CB6  
                                                   l17268 3C5C  
                                                   l17188 3AD4  
                                                   l17196 3B06  
                                                   l22980 404A  
                                                   l22964 3FFA  
                                                   l16740 6AB6  
                                                   l22956 5DFE  
                                                   l16732 8296  
                                                   l21988 448C  
                                                   l13998 876A  
                                                   l16830 67C2  
                                                   l17286 3CC4  
                                                   l22974 4034  
                                                   l16742 6AC0  
                                                   l23598 60A6  
                                                   l19312 7A0E  
                                                   l19304 79A4  
                                                   l19400 88E2  
                                                   l16816 678E  
                                                   l17296 3CF4  
                                                   l22992 40A0  
                                                   l22984 405A  
                                                   l22968 400A  
                                                   l19410 88EE  
                                                   l22986 406C  
                                                   l16754 6AF0  
                                                   l22898 5C9C  
                                                   l19404 88E8  
                                                   l22996 40AE  
                                                   l22988 4086  
                                                   l16756 6AFA  
                                                   l19334 7E52  
                                                   l16870 685C  
                                                   l16846 67FC  
                                                   l19360 83D6  
                                                   l19344 7E5E  
                                                   l19432 939E  
                                                   l16856 6828  
                                                   l19370 83E4  
                                                   l19290 7992  
                                                   l19338 7E58  
                                                   l19426 8710  
                                                   l19610 8024  
                                                   l16890 87C0  
                                                   l19602 8670  
                                                   l19364 83DC  
                                                   l19436 93A6  
                                                   l19516 7C26  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l19294 7998  
                                                   l19462 8E3A  
                                                   l19542 8A56  
                                                   l19550 8A76  
                                                   l19536 916A  
                                                   l19376 83EA  
                                                   l19624 7FA2  
                                                   l19720 6F52  
                                                   l19712 6F0E  
                                                   l19298 799E  
                                                   l19618 8060  
                                                   l19634 7FEC  
                                                   l19468 8E46  
                                                   l19564 717E  
                                                   l19556 7142  
                                                   l19820 7798  
                                                   l19708 6EE2  
                                                   l19812 7CFA  
                                                   l19804 80B6  
                                                   l19566 718A  
                                                   l19830 77DA  
                                                   l19822 77CA  
                                                   l19902 63EA  
                                                   l19662 709E  
                                                   l19654 7084  
                                                   l19742 84D0  
                                                   l19576 71B8  
                                                   l19672 70AE  
                                                   l19586 71EA  
                                                   l19922 64D2  
                                                   l19850 886A  
                                                   l19772 587A  
                                                   l19764 5816  
                                                   l19756 57CC  
                                                   l19908 643C  
                                                   l19684 70CE  
                                                   l19676 70BA  
                                                   l19748 8A2E  
                                                   l19852 8884  
                                                   l19758 57D2  
                                                   l19774 587E  
                                                   l19598 865C  
                                                   l19854 8888  
                                                   l19792 5934  
                                                   l19784 58D0  
                                                   l19928 64E8  
                                                   l19960 68D8  
                                                   l19952 689A  
                                                   l19778 588C  
                                                   l19794 5938  
                                                   l19966 692C  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 7C2A  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 80EA  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 7BA6  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 8C40  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 8FD4  
                                            _zeroCrossing 0192  
                                         __end_of___lldiv 7CAC  
                                                   u20100 4A86  
                                                   u20110 4A96  
                                                   u20111 4A94  
                                                   _T1CLK 000FD2  
                                                   u20200 4AD4  
                                                   u20130 4AAA  
                                                   u12210 7B68  
                                                   u20300 4B8C  
                                                   u20220 4ADE  
                                         ___awdiv@divisor 0016  
                                                   u20320 4B98  
                                                   u20240 4B00  
                                                   u20160 4ABE  
                                                   _T1CON 000FCF  
                                                   u20090 4A78  
                                                   u20340 4BA2  
                                                   u20180 4ACA  
                                                   u22110 93DE  
                                                   u20520 3AA8  
                                                   u20360 4BAC  
                                                   _T2CON 000FBD  
                                                   u20610 3B30  
                                                   u20450 3A26  
                                                   u20700 3BBE  
                                                   u20540 3AC4  
                                                   u20460 3A34  
                                                   u20380 4BD0  
                                                   u22310 715C  
                                                   u20470 3A44  
                                                   u20800 3C58  
                                                   u22138 79B0  
                                                   u22330 7198  
                                                   u22139 79C2  
                                                   u22228 8734  
                                                   u22340 71A6  
                                                   u23060 8C22  
                                                   u22229 8746  
                                                   u20750 3C12  
                                                   u20670 3BA6  
                                                   u22168 7E6A  
                                                   u22360 71C4  
                                                   u20840 3C84  
                                                   u15400 7EC4  
                                                   u23160 5456  
                                                   u22600 8476  
                                                   u24120 23EE  
                                                   u22169 7E7C  
                                                   u22178 83F6  
                                                   u22370 71D8  
                                                   u20850 3C8C  
                                                   u13810 7C5C  
                                                   u24130 32F0  
                                                   u22179 8408  
                                                   u22188 88FA  
                                                   u22380 71E6  
                                                   u24140 32F6  
                                                   _T2HLT 000FBE  
                                                   u22189 890C  
                                                   u15510 784C  
                                                   u23190 54B4  
                                                   u22630 84C8  
                                                   u25110 4846  
                                                   u13840 876E  
                                                   u15440 7EFA  
                                                   u23520 7A8E  
                                                   u23600 4EA4  
                                                   u24400 35FA  
                                                   u24240 343C  
                                                   u20890 3CE8  
                                                   u26010 44B6  
                                                   u25210 491A  
                                                   u25130 48A8  
                                                   u13770 8D20  
                                                   u24330 351E  
                                                   u14900 5952  
                                                   u14820 6BC8  
                                                   u15460 8BDA  
                                                   u25060 4808  
                                                   u22565 6EEE  
                                                   u14910 596A  
                                                   u15470 8BF0  
                                                   u22910 693A  
                                                   u23710 4F6C  
                                                   u23630 4EE8  
                                                   u25150 48BC  
                                                   u24190 3382  
                                                   u23711 4F6A  
                                                   u22840 64CA  
                                                   u26040 44D6  
                                                   u24360 3558  
                                                   u22585 6F5E  
                                                   u22850 6896  
                                                   u23650 4EF8  
                                                   u25250 4974  
                                                   u26130 18B2  
                                                   u27010 105A  
                                                   u18211 29D2  
                                                   u23555 85E4  
                                                   u14940 59AE  
                                                   u24540 5636  
                                                   u23660 4F08  
                                                   u25340 49EA  
                                                   u25180 48F6  
                                                   u18301 2D74  
                                                   u18221 2BB6  
                                                   u14950 59C0  
                                                   u23910 810A  
                                                   u22950 8934  
                                                   u23670 4F10  
                                                   u24470 7380  
                                                   u18311 2DA2  
                                                   u18231 2BE4  
                                                   u19200 8274  
                                                   u23760 4FA6  
                                                   u26400 1B14  
                                                   u26160 18E4  
                                                   u27200 133C  
                                                   u18241 2C32  
                                                   u18330 9398  
                                                   u23930 812C  
                                                   u25530 5132  
                                                   u23850 502C  
                                                   u23770 4FB6  
                                                   u26410 1B2E  
                                                   u27210 1352  
                                                   u18251 2C60  
                                                   u26411 1B2C  
                                                   u27211 1350  
                                                   u23780 4FBE  
                                                   u26500 1C02  
                                                   u27300 1436  
                                                   u18261 2C90  
                                                   u28021 4026  
                                                   u26501 1C00  
                                                   u24750 5754  
                                                   u23950 8184  
                                                   u23870 5054  
                                                   u26510 1C10  
                                                   u26350 1A8E  
                                                   u27150 128A  
                                                   u18271 2CBE  
                                                   u28111 41AC  
                                                   u25720 521E  
                                                   u25560 5152  
                                                   u26440 1B64  
                                                   u27160 12E6  
                                                   u28200 2522  
                                                   u18281 2D16  
                                                   u27145 1274  
                                                   u19410 6776  
                                                   u25490 510E  
                                                   u26530 1C4A  
                                                   u27410 15E0  
                                                   u27170 12EC  
                                         __end_of___lwdiv 879E  
                                                   u18291 2D44  
                                                   u28051 4078  
                                                   u27155 1286  
                                                   u19500 67B6  
                                                   u24860 53B8  
                                                   u26620 1D04  
                                                   u26540 1C64  
                                                   u26460 1B88  
                                                   u27420 15E6  
                                                   u27340 14A4  
                                                   u28141 4216  
                                                   u26541 1C62  
                                                   u19430 6782  
                                                   u25910 4406  
                                                   u25830 42FA  
                                                   u26710 1D9C  
                                                   u26630 1D0A  
                                                   u26470 1B90  
                                                   u26390 1B0C  
                                                   u27430 161A  
                                                   u27190 1336  
                                                   u27431 1618  
                                                   u27335 148E  
                                                   u25680 51EE  
                                                   u26720 1DB8  
                                                   u26640 1D2E  
                                                   u26560 1CA8  
                                                   u26480 1BAA  
                                                   u28400 26B6  
                                                   u26721 1DB6  
                                                   u26641 1D2C  
                                                   u26561 1CA6  
                                                   u26481 1BA8  
                                                   u27345 14A0  
                                                   u27610 61A2  
                                                   u19610 681E  
                                                   u24970 7480  
                                                   u25930 4412  
                                                   u26730 1DC6  
                                                   u26570 1CB6  
                                                   u29130 38FE  
                                                   u27450 1630  
                                                   u27290 1430  
                                                   u28170 24BE  
                                                   u27700 6256  
                                                   u19700 686C  
                                                   u25940 442A  
                                                   u25860 43C0  
                                                   u25780 5268  
                                                   u26820 1EEA  
                                                   u27540 16E6  
                                                   u27460 1644  
                                                   u27380 1536  
                                                   u25781 5266  
                                                   u27541 16E4  
                                                   u27630 61BA  
                                                   u19710 6874  
                                                   u26670 1D62  
                                                   u28510 2740  
                                                   u18735 91C4  
                                                   u27375 1520  
                                                   u27720 6270  
                                                   u19720 687C  
                                                   u19640 6836  
                                                   u19480 67AA  
                                                   u18736 91C6  
                                                   u25880 43D4  
                                                   u27480 165E  
                                                   u28440 2702  
                                                   u29217 7FFC  
                                                   u27465 1640  
                                                   u27385 1532  
                                                   u19570 67EE  
                                                   u19730 87A8  
                                                   u25970 4470  
                                                   u26850 1F04  
                                                   u26770 1E06  
                                                   u26690 1D6E  
                                                   u29090 38C0  
                                                   u29227 8070  
                                                   u29171 6096  
                                                   u27660 61F4  
                                                   u27900 5D6A  
                                                   u26860 1F20  
                                                   u26780 1E0C  
                                                   u28620 2802  
                                                   u28380 267E  
                                                   _T2TMR 000FBB  
                                                   u19741 87B6  
                                                   u26861 1F1E  
                                                   u28621 2800  
                                                   u27910 5D7E  
                                                   u26870 1F2E  
                                                   u27760 8554  
                                                   u19920 8318  
                                                   u27770 8586  
                                                   u27690 6248  
                                                   u28490 2730  
                                                   _T2RST 000FC0  
                                                   u27870 5D36  
                                                   u28910 36CE  
                                                   u28830 291A  
                                                   u28750 28AE  
                                                   u28670 2848  
                                                   u27960 5DCE  
                                                   u27880 5D44  
                                                   i2l106 8D0A  
                                                   u28930 3708  
                                                   u28860 2932  
                                                   u28790 28CC  
                                                   u28960 3740  
                                                   u28980 3762  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 9026  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 8C78  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 848C  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8CDE  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 90BE  
                                        __end_of_TMR1_ISR 8BCA  
                                        __end_of_TMR2_ISR 63DC  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018C  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 8BCA  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0196  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 8ACA  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 6E9E  
                                         __end_of_sm_init 864C  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 29A8  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9524  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 9522  
                                         _TMR1_WriteTimer 91E4  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 6994  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 72BA  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 7DAA  
                                            __end_of_main 611A  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 78FA  
                                          _refreshCurrent 89BA  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 8E1E  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 7A9C  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 93F8  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 5944  
                              _validateRemoteSerialNumber 57A8  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 7EA0  
                                      __end_of_I2C1_DO_TX 7A12  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 888C  
                  __end_of_SetSegmentValueIntermitentMain 9366  
                          _SetSegmentValueIntermitentMain 9352  
                                      __end_of_I2C1_Close 916E  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 5C78  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 71F4  
                                                  i2l1147 91F6  
                                                  i2l2019 5BFE  
                                                  i2l2123 7ACC  
                                                  i2l2135 7B20  
                                                  i2l2128 7AEA  
                                                  i2l2217 4E2E  
                                                  i2l1266 62E6  
                                                  i2l2235 728E  
                                                  i2l2323 7F8C  
                                                  i2l1277 6370  
                                                  i2l2318 7F82  
                                                  i2l2190 4D50  
                                                  i2l1615 46FC  
                                                  i2l2186 4C6A  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 7F90  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 6CA8  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 77DE  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 8CAC  
                                 __end_ofi2_GetMotorPower 72BA  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 7A12  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 83D2  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 8FD4  
                    __end_of_TMR1_DefaultInterruptHandler 9520  
                            _TMR1_DefaultInterruptHandler 951E  
                                  __end_of_refreshCurrent 8A00  
                                           ?_read_package 0011  
                                                  ___lmul 864C  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 9072  
                                  __end_of_refreshSegment 7B22  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 3D02  
                             __end_of_keeloqDecryptPacket 5440  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 8A44  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 7330  
                                                  clear_1 733C  
                                                  clear_2 7348  
                                                  clear_3 7354  
                                                  clear_4 7360  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F94  
                              _sm_execute_ControlLearning 1886  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 87EE  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 93C8  
                                          _PMD_Initialize 91C8  
                                              _StateTRIAC 0190  
                                           ?_eusartparser 003A  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8544  
                                    __end_of_ControlMotor 4C40  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 452C  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 929A  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 9200  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9476  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 921A  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0011  
                                       _SYSTEM_Initialize 8D40  
                              __end_of_actionZone_Opening 49F6  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7366  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E0  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 1F94  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 8FFE  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 9190  
                                 _rdBlkRegCompleteHandler 8B4A  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 92CA  
                                            __pidataBANK0 9518  
                                            __pidataBANK1 94E6  
                                            __pidataBANK2 951A  
                                            __pidataBANK3 90BE  
                                     ??_SYSTEM_Initialize 0014  
                        __end_of_I2C1_MasterEnableRestart 950C  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 91E4  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 89BA  
                                          ??_eusartparser 00DC  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 6884  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 921A  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 76B4  
                                   __end_of_I2C1_DO_RESET 9452  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 92B2  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0013  
                               __end_of_SYSTEM_Initialize 8D6E  
                                     __end_of_ShowVersion 8370  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 24A0  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9476  
                       _EUSART1_TxDefaultInterruptHandler 02ED  
                                            _GetOpenOrder 5440  
                                    __end_of_InitSoftStop 8972  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 8F26  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 6DA4  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 8EFA  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 848C  
                                   _rd1RegCompleteHandler 8F26  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 948E  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 8F52  
                         __end_of_EUSART1_SetErrorHandler 9448  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9416  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 63DC  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 883E  
                                         _I2C1_MasterOpen 92E2  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 9504  
                                         _I2C1_Initialize 9366  
                                     __end_of_I2C1_Poller 93AC  
                                __end_of_setFlashLigth_ON 8C06  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 91AC  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 5F98  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BD  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 0189  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 943E  
                          _EUSART1_SetFramingErrorHandler 9434  
                                    _refreshADCZeroOffset 6BAA  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 7EA0  
                                                 i2l14024 7244  
                                                 i2l14016 7208  
                                                 i2l14026 7250  
                                                 i2l14220 453E  
                                                 i2l14036 727E  
                                                 i2l14310 4714  
                                                 i2l14230 456C  
                                                 i2l14046 72B0  
                                                 i2l14320 473A  
                                                 i2l14304 4706  
                                                 i2l14240 45A0  
                                                 i2l14224 454E  
                                                 i2l14072 7F78  
                                                 i2l14400 4D62  
                                                 i2l14250 45CC  
                                                 i2l14330 476A  
                                                 i2l14066 7F5C  
                                                 i2l14316 472A  
                                                 i2l14228 4564  
                                                 i2l14326 4752  
                                                 i2l14270 464A  
                                                 i2l14272 465A  
                                                 i2l14256 45F2  
                                                 i2l14424 4DD4  
                                                 i2l12666 918C  
                                                 i2l14274 4660  
                                                 i2l14370 4CC0  
                                                 i2l14362 4C9C  
                                                 i2l14292 46BC  
                                                 i2l14284 4694  
                                                 i2l14268 463A  
                                                 i2l14436 4E12  
                                                 i2l14380 4CEA  
                                                 i2l14364 4CA6  
                                                 i2l14348 4C60  
                                                 i2l14460 86B2  
                                                 i2l14448 4E4E  
                                                 i2l14392 4D24  
                                                 i2l14484 7AEE  
                                                 i2l14494 7B1C  
                                                 i2l16432 6308  
                                                 i2l16416 62BE  
                                                 i2l16408 62AA  
                                                 i2l16346 8D04  
                                                 i2l16442 6332  
                                                 i2l16452 6354  
                                                 i2l16366 76AE  
                                                 i2l16480 63BC  
                                                 i2l16474 63A4  
                                                 i2l16466 6388  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 93D6  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 7BA6  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 93AC  
                                              _auxCounter 00F8  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 94C2  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 830A  
                                            _classic_data 0292  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 7062  
                                  eusartparser@relcounter 00E0  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 0198  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 8ECE  
          _rd1RegCompleteHandler@i2c1_master_example$F500 8EA2  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 8EA2  
          _rd2RegCompleteHandler@i2c1_master_example$F511 8E76  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 8FAA  
          _wr2RegCompleteHandler@i2c1_master_example$F523 8F7E  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 8E76  
                               __end_of_I2C1_DO_SEND_STOP 9496  
          _wr1RegCompleteHandler@i2c1_master_example$F517 8E4A  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 8B4A  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 8B0A  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 86A2  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 8D9A  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 32D4  
                              __end_of_clearLearningValue 7E26  
                                                 _NextHop 028E  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 32D4  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 93EE  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 883E  
                                                 ___awdiv 7B22  
                                                 ___lbdiv 8C06  
                                                 ___lbmod 8FAA  
                                                 ___lldiv 7C2A  
                                              _readInputs 6AA2  
                                         _controlVelocity 4E62  
                                                 ___lwdiv 874C  
                                           _OpenFullOrder 904C  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 6760  
                           _setPositionInvertionInClosing 6638  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 938C  
                                          getHopCode@data 0016  
                                                 _difTime 018F  
                                                 __pcinit 72BA  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 94BC  
                                    __end_of_init_package 8DF2  
                                                 __ptext0 5F98  
                                                 __ptext1 24A0  
                                                 __ptext2 0F22  
                                                 __ptext3 1F94  
                                                 __ptext4 3D02  
                                                 __ptext5 9200  
                                                 __ptext6 32D4  
                                                 __ptext7 807A  
                                                 __ptext8 94B6  
                                                 __ptext9 883E  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A2  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 9508  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 93E2  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 7062  
                           _setPositionInvertionInOpening 6F86  
                                                 _lastKey 0194  
                                              _readbutton 8236  
                                   _OSCILLATOR_Initialize 9312  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 830A  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9234  
                               __end_of_I2C1_MasterSetIrq 94C8  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 8430  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 786E  
                                      _EUSART1_Initialize 7D2C  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 6DA4  
                                                 _sm_init 85F6  
                                          _BufferRF_12BIT 0187  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 87EE  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 815A  
                                    _zeroCrossingWaitTime 02EF  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 94AE  
                                    end_of_initialization 7366  
                              __end_of_I2C1_MasterSendAck 94CE  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 94D4  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 94FC  
                             _EUSART1_OverrunErrorHandler 02E7  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 8006  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 93BA  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 8370  
                            __end_of_sm_get_current_state 938C  
                                               i2u1401_40 7F72  
                                               i2u1316_40 8FEE  
                                               i2u1413_40 45E0  
                                               i2u1415_40 460A  
                                               i2u1431_40 4C5A  
                                               i2u1416_40 461A  
                                               i2u1408_40 4564  
                                               i2u1417_40 462A  
                                               i2u1426_40 4728  
                                               i2u1450_40 4D88  
                                               i2u1451_40 4D96  
                                               i2u1443_40 4D18  
                                               i2u1460_40 4DFA  
                                               i2u1444_40 4D1E  
                                               i2u1390_40 726C  
                                               i2u1454_40 4DB4  
                                               i2u1438_40 4CBA  
                                               i2u1463_40 4E1E  
                            __end_of_I2C1_DO_SEND_RESTART 949E  
                                               i2u1471_45 86CA  
                                               i2u1392_40 728A  
                                               i2u1464_40 4E26  
                                               i2u1456_40 4DCA  
                                               i2u1480_40 5C66  
                                               i2u1393_40 729E  
                                               i2u1473_40 7AAC  
                                               i2u1394_40 72AC  
                                               i2u1466_40 4E46  
                                               i2u1387_40 7222  
                                               i2u1475_40 7AFE  
                                               i2u2194_48 003E  
                                    __end_of_eusartparser 42A0  
                                         _WWDT_TimerClear 91AC  
                                               i2u1389_40 725E  
                                               i2u1397_40 7F3C  
                                 __end_of_I2C1_MasterOpen 92FA  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u2197_48 0056  
                                               i2u1479_40 5BF2  
                                               i2u1840_48 7670  
                                   __end_of_ControlLights 3D02  
                                               i2u1840_49 7682  
                                               i2u1842_48 769A  
                                               i2u1860_40 631E  
                                               i2u1844_48 90AC  
                                 __end_of_I2C1_MasterStop 9508  
                                               i2u1838_48 7644  
                                               i2u1838_49 7656  
                                 __end_of_I2C1_Initialize 937A  
                                               i2u1848_48 8BB8  
                                               i2u1872_48 63CA  
                                               i2u1857_40 62FA  
                                         ___lldiv@divisor 0014  
                                               i2u2923_47 9332  
                                   __end_of_ControlInputs 6884  
                   __end_of_EUSART1_SetRxInterruptHandler 942A  
                           _EUSART1_SetRxInterruptHandler 9420  
                                             _I2C1_Poller 939C  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 94EC  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9514  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 49F6  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 94CE  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 92E2  
                             _I2C1_SetAddressNackCallback 92CA  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 6E9E  
                                              _sm_restart 8A00  
                        __end_of_ADCC_GetSingleConversion 933E  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02D9  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 94A6  
                              _I2C1_DO_SEND_RESTART_WRITE 949E  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 940C  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 8B8A  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 6CA8  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 93EE  
                                     _ControlCounterMoves 8544  
                            _controlLearning_stateMachine 02B2  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7252 00DF  
                                      eusartparser@i_7253 00E1  
                                      eusartparser@i_7254 00E2  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 8FFE  
                                 __end_of_WWDT_Initialize 93F8  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 8972  
                                      ?_saveEnergyADCHist 0010  
                       __end_of_GetSecurityStateInClosing 7574  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8CDE  
                                       _controlLearnDigit 8D10  
                                 __end_of_controlVelocity 5080  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01F8  
                                      _actionZone_Closing 42A0  
                                    __end_of_RemoveSerial 7D2C  
                                          __end_of_HopCHK 7A9C  
                                      __end_of_CloseOrder 904C  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 9200  
                               _ControlDecelarationFactor 9282  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0290  
                       __end_of_GetSecurityStateInOpening 761A  
                                       setRGB_ON@RGBLigth 0015  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 94F4  
                                      _actionZone_Opening 47A2  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 951E  
                            _TMR2_DefaultInterruptHandler 951C  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 86A2  
                                   __end_of_LoadManufCode 912A  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9098  
                                          _I2C1_DO_RX_ACK 9486  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 82A2  
                                            _InitSoftStop 8928  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 7F18  
                                          __end_of_memcpy 8A88  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 815A  
                            __end_of_getCurrentComparator 5ADE  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 6AA2  
                                           _saveNewSerial 807A  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 9504  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 94B6  
                                       _read_eusartparser 29A8  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 72BA  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 47A2  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 807A  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 9026  
                                 __end_of_WWDT_TimerClear 91C8  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 8B0A  
                                 __end_of_WWDT_SoftEnable 94F0  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 8CAC  
                                               _ReqResync 929A  
                               __end_of_controlLearnDigit 8D40  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 3694  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 7370  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 948E  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0193  
                                          _VerifyFollowMe 90E4  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 916E  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00F8  
                                             __pdataBANK1 01F9  
                                             __pdataBANK2 02EF  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 4C40  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2EB0  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9328  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 84E8  
                                               _StopOrder 9190  
                                    _sm_get_current_state 937A  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9496  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02EB  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 5E0E  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9466  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 945C  
                                           _GetMotorPower 712E  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7424  
                                            _init_package 8DC6  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E3  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FE  
                                               __pnvBANK2 02DD  
                                   _rd2RegCompleteHandler 8EFA  
                                        _InitWalkAutoTime 933E  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 924E  
                             __end_of_SetSegmentValueMain 9234  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 76B4  
                                  __end_of_VerifyFollowMe 9108  
                                   _wr2RegCompleteHandler 8ECE  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 879E  
                                          _I2C1_MasterFsm 86F8  
                              __end_of_checkNVM_VarSystem 57A8  
                        __end_of_TMR1_SetInterruptHandler 940C  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 9312  
                                               __ptext101 94F0  
                                                ?___lbdiv 0010  
                                               __ptext110 938C  
                                               __ptext102 9366  
                                               __ptext111 49F6  
                                               __ptext103 7D2C  
                                               __ptext200 9098  
                                               __ptext120 6DA4  
                                               __ptext112 7EA0  
                                               __ptext104 9416  
                                               __ptext201 452C  
                                               __ptext121 78FA  
                                               __ptext113 39DE  
                                               __ptext105 9420  
                                               __ptext202 9520  
                                               __ptext130 8006  
                                               __ptext122 8FFE  
                                               __ptext114 77DE  
                                               __ptext106 942A  
                                               __ptext203 8CDE  
                                               __ptext131 8A44  
                                               __ptext123 6BAA  
                                               __ptext115 93AC  
                                               __ptext107 9434  
                                               __ptext204 761A  
                                               __ptext140 88DA  
                                               __ptext132 92CA  
                                               __ptext124 874C  
                                               __ptext116 8BCA  
                                               __ptext108 943E  
                                               __ptext205 94DA  
                                               __ptext141 9448  
                                               __ptext133 7BA6  
                                               __ptext125 5944  
                                               __ptext117 6760  
                                               __ptext109 87EE  
                                               __ptext206 9522  
                                               __ptext150 7E26  
                                               __ptext142 9476  
                                               __ptext134 92E2  
                                               __ptext126 9072  
                                               __ptext118 611A  
                                               __ptext207 94E0  
                                               __ptext151 7986  
                                               __ptext143 947E  
                                               __ptext135 9466  
                                               __ptext127 712E  
                                               __ptext119 89BA  
                                               __ptext208 916E  
                                               __ptext160 94F4  
                                               __ptext152 93BA  
                                               __ptext144 9486  
                                               __ptext136 8E1E  
                                               __ptext128 8544  
                                               __ptext209 0000  
                                               __ptext161 94CE  
                                               __ptext153 93C8  
                                               __ptext145 948E  
                                               __ptext137 939C  
                                               __ptext129 8C40  
                                               __ptext170 8ECE  
                                               __ptext162 94F8  
                                               __ptext154 945C  
                                               __ptext146 9496  
                                               __ptext138 946E  
                                               __ptext171 8EFA  
                                               __ptext163 94FC  
                                               __ptext155 83D2  
                                               __ptext147 949E  
                                               __ptext139 86F8  
                                               __ptext180 950C  
                                               __ptext172 8F26  
                                               __ptext164 9500  
                                               __ptext156 94C2  
                                               __ptext148 94A6  
                                               __ptext181 914C  
                                               __ptext173 8F52  
                                               __ptext165 8B0A  
                                               __ptext157 93D6  
                                               __ptext149 9452  
                                               __ptext190 8FD4  
                                               __ptext182 9510  
                                               __ptext174 8F7E  
                                               __ptext166 8E4A  
                                               __ptext158 94AE  
                                               __ptext191 951C  
                                               __ptext183 9514  
                                               __ptext175 92FA  
                                               __ptext167 8E76  
                                               __ptext159 94C8  
                                               __ptext192 86A2  
                                               __ptext184 94D4  
                                               __ptext176 81C8  
                                               __ptext168 8EA2  
                                               __ptext193 9328  
                                               __ptext177 9268  
                                               __ptext169 8B4A  
                                               __ptext194 8B8A  
                                               __ptext186 628E  
                                               __ptext178 9504  
                                               __ptext195 4C40  
                                               __ptext187 7A9C  
                                               __ptext179 9508  
                                               __ptext196 7F18  
                                               __ptext188 93E2  
                                               __ptext197 71F4  
                                               __ptext189 5ADE  
                                               __ptext198 91E4  
                                               __ptext199 951E  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 4E62  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0012  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0011  
                                 _I2C1_MasterWaitForEvent 946E  
                                        _I2C1_MasterClose 9514  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9268  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 950C  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9466  
                                      _clearLearningValue 7DAA  
                                      _write_eusartparser 2EB0  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0195  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 94E0  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 94DA  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 7F90  
                                            _eusartparser 3FF8  
                                    _EUSART1_ErrorHandler 02E5  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 943E  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 9500  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 5E0E  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 77DE  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 94F0  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 81C8  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 7E26  
                                              _I2C1_DO_TX 7986  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 5944  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FD  
                                     _DecryptPacket_12BIT 786E  
                                              _I2C1_Close 914C  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 874C  
                            __end_of_I2C1_MasterGetRxData 94F8  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 93E2  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0185  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 94C8  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 7986  
                               _I2C1_DO_SEND_RESTART_READ 94A6  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 3FF8  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9098  
                                                _TMR1_ISR 8B8A  
                                                _TMR2_ISR 628E  
                                           _getKeyPressed 92B2  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 9282  
                                               _temppower 018E  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 9312  
                            _I2C1_SetDataCompleteCallback 92FA  
                                      _I2C1_MasterStartRx 94F8  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 94BC  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 8006  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 8C78  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019A  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 8928  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7424  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 924E  
                                            _RemoveSerial 7CAC  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 93C8  
                                       _actionZone_Opened 5080  
                                           _I2C1_DO_RESET 9448  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02C8  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 72CE  
                                               copy_data1 7306  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018D  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 650A  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 80EA  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 8E4A  
                                            _NormalKeyGen 6994  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 9420  
                           _EUSART1_SetTxInterruptHandler 9416  
                                           _sm_send_event 8430  
                                     _keeloqDecryptPacket 526E  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01ED  
                                   _I2C1_MasterDisableIrq 9510  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 3694  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 5ADE  
                                _TMR1_SetInterruptHandler 9402  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 74CE  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 74CE  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02DF  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 94E6  
                             _EUSART1_DefaultErrorHandler 94E0  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 939C  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 526E  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7574  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 7CAC  
                                                __ptext11 7370  
                                                __ptext20 1886  
                                                __ptext12 8FAA  
                                                __ptext21 82A2  
                                                __ptext13 7B22  
                                                __ptext30 8928  
                                                __ptext22 85F6  
                                                __ptext14 921A  
                                                __ptext31 9282  
                                                __ptext23 8A00  
                                                __ptext15 94BC  
                                                __ptext40 74CE  
                                                __ptext32 5080  
                                                __ptext24 7DAA  
                                                __ptext16 8D10  
                                                __ptext41 7424  
                                                __ptext33 90E4  
                                                __ptext25 8370  
                                                __ptext17 6CA8  
                                                __ptext50 7574  
                                                __ptext42 80EA  
                                                __ptext34 9026  
                                                __ptext26 47A2  
                                                __ptext18 7C2A  
                                                __ptext51 8D6E  
                                                __ptext43 904C  
                                                __ptext35 42A0  
                                                __ptext27 6F86  
                                                __ptext19 3694  
                                                __ptext60 8C78  
                                                __ptext52 5440  
                                                __ptext44 9234  
                                                __ptext36 6638  
                                                __ptext28 4E62  
                                                __ptext61 859E  
                                                __ptext53 8C06  
                                                __ptext45 815A  
                                                __ptext37 6E9E  
                                                __ptext29 6884  
                                                __ptext70 57A8  
                                                __ptext62 6994  
                                                __ptext54 9352  
                                                __ptext46 8430  
                                                __ptext38 864C  
                                                __ptext71 6AA2  
                                                __ptext63 9108  
                                                __ptext55 8236  
                                                __ptext47 937A  
                                                __ptext39 9190  
                                                __ptext80 8D9A  
                                                __ptext72 650A  
                                                __ptext64 7062  
                                                __ptext56 879E  
                                                __ptext48 848C  
                                                __ptext81 8ACA  
                                                __ptext73 5608  
                                                __ptext65 7A12  
                                                __ptext57 8972  
                                                __ptext49 933E  
                                                __ptext90 8D40  
                                                __ptext82 888C  
                                                __ptext74 5E0E  
                                                __ptext66 63DC  
                                                __ptext58 5C78  
                                                __ptext91 93EE  
                                                __ptext83 8DC6  
                                                __ptext75 84E8  
                                                __ptext67 929A  
                                                __ptext59 526E  
                                                __ptext92 8DF2  
                                                __ptext84 774C  
                                                __ptext76 92B2  
                                                __ptext68 8CAC  
                                                __ptext93 93F8  
                                                __ptext85 7F90  
                                                __ptext77 3FF8  
                                                __ptext69 786E  
                                                __ptext94 8A88  
                                                __ptext86 91AC  
                                                __ptext78 2EB0  
                                                __ptext95 9402  
                                                __ptext87 94EC  
                                                __ptext79 29A8  
                                                __ptext96 912A  
                                                __ptext88 830A  
                                                __ptext97 940C  
                                                __ptext89 924E  
                                                __ptext98 91C8  
                                                __ptext99 76B4  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E2  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
                ?_rd2RegCompleteHandler@pic18f46k40$F7730 0019  
               ??_rd2RegCompleteHandler@pic18f46k40$F7732 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7724 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7716 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7726 001B  
               ??_wr1RegCompleteHandler@pic18f46k40$F7718 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7742 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7744 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7736 0019  
                                                _learn_st 0060  
               ??_wr2RegCompleteHandler@pic18f46k40$F7738 001B  
                                      __end_of_readInputs 6BAA  
                                _I2C1_CallbackReturnReset 94FC  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 9522  
                            _TMR0_DefaultInterruptHandler 9520  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 94DA  
                            __end_of_I2C1_DO_RX_NACK_STOP 9486  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 611A  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 82A2  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 94C2  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 8D9A  
                              _SetSegmentValueIntermitent 8D6E  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 947E  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 650A  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9268  
                           __end_of_I2C1_DO_SEND_ADR_READ 93D6  
                             _EUSART1_FramingErrorHandler 02E9  
                                            _I2C1_DO_IDLE 945C  
                                     _EUSART1_Receive_ISR 761A  
                                            _I2C1_DO_RCEN 9452  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 94B6  
                             __end_of_I2C1_MasterSendNack 94D4  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 6F86  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0191  
                                __end_of_InitWalkAutoTime 9352  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018B  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 94F4  
                                   _I2C1_MasterSendTxData 94AE  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 39DE  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 859E  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9518  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 84E8  
                                 readRFButtons@typeRemote 0197  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 8A44  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 628E  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 9510  
                                __end_of_I2C1_MasterWrite 946E  
                                   __end_of_write_package 8DC6  
                                             _tempCounter 01F9  
                  __end_of_EUSART1_SetOverrunErrorHandler 9434  
                          _EUSART1_SetOverrunErrorHandler 942A  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 9500  
                            __end_of_EUSART1_Transmit_ISR 8D10  
                                          _confirmpackage 888C  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 39DE  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 6760  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 88DA  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6638  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 85F6  
                           _keeloq_classic_decrypt_packet 859E  
                                   __end_of_OpenFullOrder 9072  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 0199  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 774C  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8236  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 8E1E  
                                         _TMR0_Initialize 912A  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 5608  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 81C8  
                                            _sumEnergyADC 78FA  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 774C  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 8F52  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 83D2  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 88DA  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 8F7E  
                                   _TMR2_InterruptHandler 02DD  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 8A88  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 24A0  
