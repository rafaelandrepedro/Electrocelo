

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 15:29:52 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1,group=2
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1,inline
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,inline
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,inline
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,inline
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1,inline
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1,inline
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1,inline
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1,inline
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1,inline
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1,inline
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1,inline
   209                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   236                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   237                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   238                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   239  0000                     
   240                           ; Version 2.36
   241                           ; Generated 28/01/2022 GMT
   242                           ; 
   243                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   244                           ; All rights reserved.
   245                           ; 
   246                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   247                           ; 
   248                           ; Redistribution and use in source and binary forms, with or without modification, are
   249                           ; permitted provided that the following conditions are met:
   250                           ; 
   251                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   252                           ;        conditions and the following disclaimer.
   253                           ; 
   254                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   255                           ;        of conditions and the following disclaimer in the documentation and/or other
   256                           ;        materials provided with the distribution. Publication is not required when
   257                           ;        this file is used in an embedded application.
   258                           ; 
   259                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   260                           ;        software without specific prior written permission.
   261                           ; 
   262                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   263                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   264                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   265                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   266                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   267                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   268                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   269                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   270                           ; 
   271                           ; 
   272                           ; Code-generator required, PIC18F46K40 Definitions
   273                           ; 
   274                           ; SFR Addresses
   275  0000                     
   276                           	psect	idataBANK0
   277  009704                     __pidataBANK0:
   278                           	callstack 0
   279                           
   280                           ;initializer for _auxCounter
   281  009704  03E8               	dw	1000
   282                           
   283                           	psect	idataBANK1
   284  0096D2                     __pidataBANK1:
   285                           	callstack 0
   286                           
   287                           ;initializer for _tempCounter
   288  0096D2  3DDD               	dw	15837
   289  0096D4  000F               	dw	15
   290                           
   291                           ;initializer for _firstselectflag
   292  0096D6  01                 	db	1
   293                           
   294                           	psect	idataBANK2
   295  009706                     __pidataBANK2:
   296                           	callstack 0
   297                           
   298                           ;initializer for _zeroCrossingWaitTime
   299  009706  19                 	db	25
   300  009707  19                 	db	25
   301                           
   302                           	psect	idataBANK3
   303  0092AA                     __pidataBANK3:
   304                           	callstack 0
   305                           
   306                           ;initializer for _DispTable
   307  0092AA  6F                 	db	111
   308  0092AB  21                 	db	33
   309  0092AC  76                 	db	118
   310  0092AD  73                 	db	115
   311  0092AE  39                 	db	57
   312  0092AF  5B                 	db	91
   313  0092B0  5F                 	db	95
   314  0092B1  61                 	db	97
   315  0092B2  7F                 	db	127
   316  0092B3  7B                 	db	123
   317  0092B4  7D                 	db	125
   318  0092B5  7F                 	db	127
   319  0092B6  4E                 	db	78
   320  0092B7  37                 	db	55
   321  0092B8  5E                 	db	94
   322  0092B9  5C                 	db	92
   323  0092BA  7C                 	db	124
   324  0092BB  3D                 	db	61
   325  0092BC  0E                 	db	14
   326  0092BD  2F                 	db	47
   327  0092BE  14                 	db	20
   328  0092BF  1E                 	db	30
   329  0092C0  07                 	db	7
   330  0092C1  45                 	db	69
   331  0092C2  10                 	db	16
   332  0092C3  0C                 	db	12
   333  0092C4  40                 	db	64
   334  0092C5  20                 	db	32
   335  0092C6  01                 	db	1
   336  0092C7  02                 	db	2
   337  0092C8  04                 	db	4
   338  0092C9  08                 	db	8
   339  0092CA  00                 	db	0
   340  0092CB  3B                 	db	59
   341  0092CC  1F                 	db	31
   342  0092CD  16                 	db	22
   343  0092CE  17                 	db	23
   344                           
   345                           	psect	smallconst
   346  000F00                     __psmallconst:
   347                           	callstack 0
   348  000F00  00                 	db	0
   349  000F01                     _i2c1_fsmStateTable:
   350                           	callstack 0
   351  000F01  48                 	db	low _I2C1_DO_IDLE
   352  000F02  96                 	db	high _I2C1_DO_IDLE
   353  000F03  B4                 	db	low _I2C1_DO_SEND_ADR_READ
   354  000F04  95                 	db	high _I2C1_DO_SEND_ADR_READ
   355  000F05  A6                 	db	low _I2C1_DO_SEND_ADR_WRITE
   356  000F06  95                 	db	high _I2C1_DO_SEND_ADR_WRITE
   357  000F07  72                 	db	low _I2C1_DO_TX
   358  000F08  7B                 	db	high _I2C1_DO_TX
   359  000F09  12                 	db	low _I2C1_DO_RX
   360  000F0A  80                 	db	high _I2C1_DO_RX
   361  000F0B  3E                 	db	low _I2C1_DO_RCEN
   362  000F0C  96                 	db	high _I2C1_DO_RCEN
   363  000F0D  BE                 	db	low _I2C1_DO_TX_EMPTY
   364  000F0E  85                 	db	high _I2C1_DO_TX_EMPTY
   365  000F0F  92                 	db	low _I2C1_DO_SEND_RESTART_READ
   366  000F10  96                 	db	high _I2C1_DO_SEND_RESTART_READ
   367  000F11  8A                 	db	low _I2C1_DO_SEND_RESTART_WRITE
   368  000F12  96                 	db	high _I2C1_DO_SEND_RESTART_WRITE
   369  000F13  82                 	db	low _I2C1_DO_SEND_RESTART
   370  000F14  96                 	db	high _I2C1_DO_SEND_RESTART
   371  000F15  7A                 	db	low _I2C1_DO_SEND_STOP
   372  000F16  96                 	db	high _I2C1_DO_SEND_STOP
   373  000F17  72                 	db	low _I2C1_DO_RX_ACK
   374  000F18  96                 	db	high _I2C1_DO_RX_ACK
   375  000F19  6A                 	db	low _I2C1_DO_RX_NACK_STOP
   376  000F1A  96                 	db	high _I2C1_DO_RX_NACK_STOP
   377  000F1B  62                 	db	low _I2C1_DO_RX_NACK_RESTART
   378  000F1C  96                 	db	high _I2C1_DO_RX_NACK_RESTART
   379  000F1D  34                 	db	low _I2C1_DO_RESET
   380  000F1E  96                 	db	high _I2C1_DO_RESET
   381  000F1F  C6                 	db	low _I2C1_DO_ADDRESS_NACK
   382  000F20  8A                 	db	high _I2C1_DO_ADDRESS_NACK
   383  000F21                     __end_of_i2c1_fsmStateTable:
   384                           	callstack 0
   385  0000                     _T2CON	set	4029
   386  0000                     _T1CON	set	4047
   387  0000                     _T1CLK	set	4050
   388  0000                     _T1GATE	set	4049
   389  0000                     _T0CON0	set	4053
   390  0000                     _INLVLD	set	3874
   391  0000                     _SLRCOND	set	3875
   392  0000                     _ODCOND	set	3876
   393  0000                     _WPUD	set	3877
   394  0000                     _TRISD	set	3979
   395  0000                     _TRISC	set	3978
   396  0000                     _TRISB	set	3977
   397  0000                     _TRISA	set	3976
   398  0000                     _TRISE	set	3980
   399  0000                     _LATC	set	3973
   400  0000                     _LATB	set	3972
   401  0000                     _OSCTUNE	set	3805
   402  0000                     _OSCFRQ	set	3806
   403  0000                     _ADERRL	set	3950
   404  0000                     _ADERRH	set	3951
   405  0000                     _ADPREVL	set	3937
   406  0000                     _ADPREVH	set	3938
   407  0000                     _ADFLTRL	set	3954
   408  0000                     _ADFLTRH	set	3955
   409  0000                     _ADACCL	set	3952
   410  0000                     _ADACCH	set	3953
   411  0000                     _ADCNT	set	3943
   412  0000                     _ADRESL	set	3939
   413  0000                     _ADRESH	set	3940
   414  0000                     _ADACQ	set	3932
   415  0000                     _ADCON0	set	3936
   416  0000                     _ADCLK	set	3927
   417  0000                     _ADSTAT	set	3941
   418  0000                     _ADCON3	set	3931
   419  0000                     _ADCON2	set	3930
   420  0000                     _ADPRE	set	3934
   421  0000                     _ADSTPTH	set	3945
   422  0000                     _ADUTHH	set	3949
   423  0000                     _ADUTHL	set	3948
   424  0000                     _ADLTHH	set	3947
   425  0000                     _SP1BRGH	set	3996
   426  0000                     _TX1STA	set	3998
   427  000F21  00                 	db	0	; dummy byte at the end
   428  0000                     
   429                           	psect	nvBANK1
   430  0001FF                     __pnvBANK1:
   431                           	callstack 0
   432  0001FF                     _eusart1TxBufferRemaining:
   433                           	callstack 0
   434  0001FF                     	ds	1
   435                           
   436                           	psect	nvBANK2
   437  0002DF                     __pnvBANK2:
   438                           	callstack 0
   439  0002DF                     _TMR2_InterruptHandler:
   440                           	callstack 0
   441  0002DF                     	ds	2
   442  0002E1                     _TMR1_InterruptHandler:
   443                           	callstack 0
   444  0002E1                     	ds	2
   445  0002E3                     _timer1ReloadVal:
   446                           	callstack 0
   447  0002E3                     	ds	2
   448  0002E5                     _TMR0_InterruptHandler:
   449                           	callstack 0
   450  0002E5                     	ds	2
   451  0002E7                     _EUSART1_ErrorHandler:
   452                           	callstack 0
   453  0002E7                     	ds	2
   454  0002E9                     _EUSART1_OverrunErrorHandler:
   455                           	callstack 0
   456  0002E9                     	ds	2
   457  0002EB                     _EUSART1_FramingErrorHandler:
   458                           	callstack 0
   459  0002EB                     	ds	2
   460  0002ED                     _EUSART1_RxDefaultInterruptHandler:
   461                           	callstack 0
   462  0002ED                     	ds	2
   463  0002EF                     _EUSART1_TxDefaultInterruptHandler:
   464                           	callstack 0
   465  0002EF                     	ds	2
   466  0000                     _WDTCON0bits	set	3794
   467  0000                     _TMR0IE	set	30229
   468  0000                     _TMR0IF	set	30293
   469  0000                     _LATEbits	set	3975
   470  0000                     _LATDbits	set	3974
   471  0000                     _LATAbits	set	3971
   472  0000                     _LATCbits	set	3973
   473  0000                     _PORTB	set	3982
   474  0000                     _T1CONbits	set	4047
   475  0000                     _SSP1CON2bits	set	3991
   476  0000                     _SSP1CON1bits	set	3990
   477  0000                     _ADCON0bits	set	3936
   478  0000                     _RC1STAbits	set	3997
   479  0000                     _GIE	set	32663
   480  0000                     _RX1PPS	set	3765
   481  0000                     _SSP1CLKPPS	set	3767
   482  0000                     _PIE0bits	set	3778
   483  0000                     _PIE3bits	set	3781
   484  0000                     _PIE4bits	set	3782
   485  0000                     _PIR0bits	set	3786
   486  0000                     _PIR3bits	set	3789
   487  0000                     _ADACT	set	3926
   488  0000                     _ADREF	set	3928
   489  0000                     _ADCON1	set	3929
   490  0000                     _ADCAP	set	3933
   491  0000                     _ADPCH	set	3935
   492  0000                     _ADRPT	set	3942
   493  0000                     _ADSTPTL	set	3944
   494  0000                     _ADLTHL	set	3946
   495  0000                     _RC1REG	set	3993
   496  0000                     _TX1REG	set	3994
   497  0000                     _SP1BRGL	set	3995
   498  0000                     _RC1STA	set	3997
   499  0000                     _BAUD1CON	set	3999
   500  0000                     _T2TMR	set	4027
   501  0000                     _T2PR	set	4028
   502  0000                     _T2HLT	set	4030
   503  0000                     _T2CLKCON	set	4031
   504  0000                     _TMR1L	set	4045
   505  0000                     _TMR1H	set	4046
   506  0000                     _T1GCON	set	4048
   507  0000                     _TMR0L	set	4051
   508  0000                     _TMR0H	set	4052
   509  0000                     _T0CON1	set	4054
   510  0000                     _PCON0bits	set	4055
   511  0000                     _INTCONbits	set	4082
   512  0000                     _LATA	set	3971
   513  0000                     _LATD	set	3974
   514  0000                     _LATE	set	3975
   515  0000                     _SSP1BUF	set	3986
   516  0000                     _SSP1ADD	set	3987
   517  0000                     _SSP1STAT	set	3989
   518  0000                     _SSP1CON2	set	3991
   519  0000                     _SSP1CON1	set	3990
   520  0000                     _WDTCON0	set	3794
   521  0000                     _OSCCON1	set	3800
   522  0000                     _PIR4bits	set	3790
   523  0000                     _OSCCON3	set	3802
   524  0000                     _OSCEN	set	3804
   525  0000                     _PMD0	set	3809
   526  0000                     _RC3PPS	set	3834
   527  0000                     _INLVLA	set	3853
   528  0000                     _SLRCONA	set	3854
   529  0000                     _ODCONA	set	3855
   530  0000                     _WPUA	set	3856
   531  0000                     _ANSELA	set	3857
   532  0000                     _ANSELB	set	3865
   533  0000                     _ANSELC	set	3873
   534  0000                     _ANSELD	set	3878
   535  0000                     _PMD5	set	3814
   536  0000                     _PMD4	set	3813
   537  0000                     _PMD3	set	3812
   538  0000                     _PMD2	set	3811
   539  0000                     _PMD1	set	3810
   540  0000                     _WDTCON1	set	3795
   541  0000                     _PORTEbits	set	3985
   542  0000                     _PORTBbits	set	3982
   543  0000                     _PORTAbits	set	3981
   544  0000                     _INLVLE	set	3882
   545  0000                     _SLRCONE	set	3883
   546  0000                     _ODCONE	set	3884
   547  0000                     _WPUE	set	3885
   548  0000                     _ANSELE	set	3886
   549  0000                     _INLVLC	set	3869
   550  0000                     _SLRCONC	set	3870
   551  0000                     _ODCONC	set	3871
   552  0000                     _WPUC	set	3872
   553  0000                     _INLVLB	set	3861
   554  0000                     _SLRCONB	set	3862
   555  0000                     _ODCONB	set	3863
   556  0000                     _WPUB	set	3864
   557  0000                     _IOCBN3	set	30875
   558  0000                     _IOCBP3	set	30883
   559  0000                     _SSP1DATPPS	set	3768
   560  0000                     _RC7PPS	set	3838
   561  0000                     _RC4PPS	set	3835
   562  0000                     _T2RST	set	4032
   563                           
   564                           ; #config settings
   565                           
   566                           	psect	cinit
   567  0074A6                     __pcinit:
   568                           	callstack 0
   569  0074A6                     start_initialization:
   570                           	callstack 0
   571  0074A6                     __initialization:
   572                           	callstack 0
   573                           
   574                           ; Initialize objects allocated to BANK3 (37 bytes)
   575                           ; load TBLPTR registers with __pidataBANK3
   576  0074A6  0EAA               	movlw	low __pidataBANK3
   577  0074A8  6EF6               	movwf	tblptrl,c
   578  0074AA  0E92               	movlw	high __pidataBANK3
   579  0074AC  6EF7               	movwf	tblptrh,c
   580  0074AE  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   581  0074B0  6EF8               	movwf	tblptru,c
   582  0074B2  EE03  F0D2         	lfsr	0,__pdataBANK3
   583  0074B6  EE10 F025          	lfsr	1,37
   584  0074BA                     copy_data0:
   585  0074BA  0009               	tblrd		*+
   586  0074BC  CFF5 FFEE          	movff	tablat,postinc0
   587  0074C0  50E5               	movf	postdec1,w,c
   588  0074C2  50E1               	movf	fsr1l,w,c
   589  0074C4  E1FA               	bnz	copy_data0
   590                           
   591                           ; Initialize objects allocated to BANK2 (2 bytes)
   592                           ; load TBLPTR registers with __pidataBANK2
   593  0074C6  0E06               	movlw	low __pidataBANK2
   594  0074C8  6EF6               	movwf	tblptrl,c
   595  0074CA  0E97               	movlw	high __pidataBANK2
   596  0074CC  6EF7               	movwf	tblptrh,c
   597  0074CE  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   598  0074D0  6EF8               	movwf	tblptru,c
   599  0074D2  0009               	tblrd		*+	;fetch initializer
   600  0074D4  CFF5 F2F1          	movff	tablat,__pdataBANK2
   601  0074D8  0009               	tblrd		*+	;fetch initializer
   602  0074DA  CFF5 F2F2          	movff	tablat,__pdataBANK2+1
   603                           
   604                           ; Initialize objects allocated to BANK1 (5 bytes)
   605                           ; load TBLPTR registers with __pidataBANK1
   606  0074DE  0ED2               	movlw	low __pidataBANK1
   607  0074E0  6EF6               	movwf	tblptrl,c
   608  0074E2  0E96               	movlw	high __pidataBANK1
   609  0074E4  6EF7               	movwf	tblptrh,c
   610  0074E6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   611  0074E8  6EF8               	movwf	tblptru,c
   612  0074EA  EE01  F0FA         	lfsr	0,__pdataBANK1
   613  0074EE  EE10 F005          	lfsr	1,5
   614  0074F2                     copy_data1:
   615  0074F2  0009               	tblrd		*+
   616  0074F4  CFF5 FFEE          	movff	tablat,postinc0
   617  0074F8  50E5               	movf	postdec1,w,c
   618  0074FA  50E1               	movf	fsr1l,w,c
   619  0074FC  E1FA               	bnz	copy_data1
   620                           
   621                           ; Initialize objects allocated to BANK0 (2 bytes)
   622                           ; load TBLPTR registers with __pidataBANK0
   623  0074FE  0E04               	movlw	low __pidataBANK0
   624  007500  6EF6               	movwf	tblptrl,c
   625  007502  0E97               	movlw	high __pidataBANK0
   626  007504  6EF7               	movwf	tblptrh,c
   627  007506  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   628  007508  6EF8               	movwf	tblptru,c
   629  00750A  0009               	tblrd		*+	;fetch initializer
   630  00750C  CFF5 F0FA          	movff	tablat,__pdataBANK0
   631  007510  0009               	tblrd		*+	;fetch initializer
   632  007512  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   633                           
   634                           ; Clear objects allocated to BANK3 (210 bytes)
   635  007516  EE03  F000         	lfsr	0,__pbssBANK3
   636  00751A  0ED2               	movlw	210
   637  00751C                     clear_0:
   638  00751C  6AEE               	clrf	postinc0,c
   639  00751E  06E8               	decf	wreg,f,c
   640  007520  E1FD               	bnz	clear_0
   641                           
   642                           ; Clear objects allocated to BANK2 (223 bytes)
   643  007522  EE02  F000         	lfsr	0,__pbssBANK2
   644  007526  0EDF               	movlw	223
   645  007528                     clear_1:
   646  007528  6AEE               	clrf	postinc0,c
   647  00752A  06E8               	decf	wreg,f,c
   648  00752C  E1FD               	bnz	clear_1
   649                           
   650                           ; Clear objects allocated to BANK1 (250 bytes)
   651  00752E  EE01  F000         	lfsr	0,__pbssBANK1
   652  007532  0EFA               	movlw	250
   653  007534                     clear_2:
   654  007534  6AEE               	clrf	postinc0,c
   655  007536  06E8               	decf	wreg,f,c
   656  007538  E1FD               	bnz	clear_2
   657                           
   658                           ; Clear objects allocated to BANK0 (120 bytes)
   659  00753A  EE00  F060         	lfsr	0,__pbssBANK0
   660  00753E  0E78               	movlw	120
   661  007540                     clear_3:
   662  007540  6AEE               	clrf	postinc0,c
   663  007542  06E8               	decf	wreg,f,c
   664  007544  E1FD               	bnz	clear_3
   665                           
   666                           ; Clear objects allocated to COMRAM (21 bytes)
   667  007546  EE00  F03B         	lfsr	0,__pbssCOMRAM
   668  00754A  0E15               	movlw	21
   669  00754C                     clear_4:
   670  00754C  6AEE               	clrf	postinc0,c
   671  00754E  06E8               	decf	wreg,f,c
   672  007550  E1FD               	bnz	clear_4
   673  007552                     end_of_initialization:
   674                           	callstack 0
   675  007552                     __end_of__initialization:
   676                           	callstack 0
   677  007552  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   678  007554  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   679  007556  0100               	movlb	0
   680  007558  EFC1  F030         	goto	_main	;jump to C main() function
   681                           
   682                           	psect	bssCOMRAM
   683  00003B                     __pbssCOMRAM:
   684                           	callstack 0
   685  00003B                     _rfCMD:
   686                           	callstack 0
   687  00003B                     	ds	11
   688  000046                     _edit_Param:
   689                           	callstack 0
   690  000046                     	ds	6
   691  00004C                     _button_struct:
   692                           	callstack 0
   693  00004C                     	ds	4
   694                           
   695                           	psect	bssBANK0
   696  000060                     __pbssBANK0:
   697                           	callstack 0
   698  000060                     _learn_st:
   699                           	callstack 0
   700  000060                     	ds	18
   701  000072                     _dispStruct:
   702                           	callstack 0
   703  000072                     	ds	6
   704  000078                     _brakeElectric_st:
   705                           	callstack 0
   706  000078                     	ds	2
   707  00007A                     _pointSync:
   708                           	callstack 0
   709  00007A                     	ds	2
   710  00007C                     _Hop:
   711                           	callstack 0
   712  00007C                     	ds	2
   713  00007E                     _RFcount:
   714                           	callstack 0
   715  00007E                     	ds	2
   716  000080                     _temp:
   717                           	callstack 0
   718  000080                     	ds	1
   719  000081                     _control_limit_switch:
   720                           	callstack 0
   721  000081                     	ds	1
   722  000082                     _fullmotorPower:
   723                           	callstack 0
   724  000082                     	ds	1
   725  000083                     _stateMotor:
   726                           	callstack 0
   727  000083                     	ds	1
   728  000084                     _zeroCrossingWaitTimeIdx:
   729                           	callstack 0
   730  000084                     	ds	1
   731  000085                     _programmer_enable:
   732                           	callstack 0
   733  000085                     	ds	1
   734  000086                     readbutton@key1:
   735                           	callstack 0
   736  000086                     	ds	1
   737  000087                     readRFButtons@keyType:
   738                           	callstack 0
   739  000087                     	ds	1
   740  000088                     readRFButtons@key1:
   741                           	callstack 0
   742  000088                     	ds	1
   743  000089                     _RFBit:
   744                           	callstack 0
   745  000089                     	ds	1
   746  00008A                     _RFFull_12BIT:
   747                           	callstack 0
   748  00008A                     	ds	1
   749  00008B                     _RFFull:
   750                           	callstack 0
   751  00008B                     	ds	1
   752  00008C                     _BitCount:
   753                           	callstack 0
   754  00008C                     	ds	1
   755  00008D                     _Bptr:
   756                           	callstack 0
   757  00008D                     	ds	1
   758  00008E                     _numberOfErrorCurrent:
   759                           	callstack 0
   760  00008E                     	ds	1
   761  00008F                     _idxAdcZeroAquisition:
   762                           	callstack 0
   763  00008F                     	ds	1
   764  000090                     _idxSaveEnergyADCHist:
   765                           	callstack 0
   766  000090                     	ds	1
   767  000091                     _idxAdcAquisition:
   768                           	callstack 0
   769  000091                     	ds	1
   770  000092                     _Counterchoose:
   771                           	callstack 0
   772  000092                     	ds	1
   773  000093                     _eusart1RxCount:
   774                           	callstack 0
   775  000093                     	ds	1
   776  000094                     _eusart1RxTail:
   777                           	callstack 0
   778  000094                     	ds	1
   779  000095                     _eusart1RxHead:
   780                           	callstack 0
   781  000095                     	ds	1
   782  000096                     _eusart1TxTail:
   783                           	callstack 0
   784  000096                     	ds	1
   785  000097                     _eusart1TxHead:
   786                           	callstack 0
   787  000097                     	ds	1
   788  000098                     _var_sys_NVM:
   789                           	callstack 0
   790  000098                     	ds	64
   791                           
   792                           	psect	dataBANK0
   793  0000FA                     __pdataBANK0:
   794                           	callstack 0
   795  0000FA                     _auxCounter:
   796                           	callstack 0
   797  0000FA                     	ds	2
   798                           
   799                           	psect	bssBANK1
   800  000100                     __pbssBANK1:
   801                           	callstack 0
   802  000100                     _var_sys:
   803                           	callstack 0
   804  000100                     	ds	81
   805  000151                     _menu_st:
   806                           	callstack 0
   807  000151                     	ds	25
   808  00016A                     _security:
   809                           	callstack 0
   810  00016A                     	ds	11
   811  000175                     _fimdecurso:
   812                           	callstack 0
   813  000175                     	ds	6
   814  00017B                     _powerControl_st:
   815                           	callstack 0
   816  00017B                     	ds	6
   817  000181                     readRFButtons@serial:
   818                           	callstack 0
   819  000181                     	ds	4
   820  000185                     readRFButtons@rollingCode:
   821                           	callstack 0
   822  000185                     	ds	2
   823  000187                     _BufferRF_12BIT:
   824                           	callstack 0
   825  000187                     	ds	2
   826  000189                     _erroranterior:
   827                           	callstack 0
   828  000189                     	ds	2
   829  00018B                     eusartparser@save_f:
   830                           	callstack 0
   831  00018B                     	ds	1
   832  00018C                     _aux_in_auto_close:
   833                           	callstack 0
   834  00018C                     	ds	1
   835  00018D                     _aux_i:
   836                           	callstack 0
   837  00018D                     	ds	1
   838  00018E                     _Abertura_pedonal:
   839                           	callstack 0
   840  00018E                     	ds	1
   841  00018F                     _temppower:
   842                           	callstack 0
   843  00018F                     	ds	1
   844  000190                     _difTime:
   845                           	callstack 0
   846  000190                     	ds	1
   847  000191                     _StateTRIAC:
   848                           	callstack 0
   849  000191                     	ds	1
   850  000192                     _waitZeroPeak:
   851                           	callstack 0
   852  000192                     	ds	1
   853  000193                     _zeroCrossing:
   854                           	callstack 0
   855  000193                     	ds	1
   856  000194                     _zeroCrossingLength:
   857                           	callstack 0
   858  000194                     	ds	1
   859  000195                     _lastKey:
   860                           	callstack 0
   861  000195                     	ds	1
   862  000196                     _F2Chance:
   863                           	callstack 0
   864  000196                     	ds	1
   865  000197                     readbutton@key2:
   866                           	callstack 0
   867  000197                     	ds	1
   868  000198                     readRFButtons@typeRemote:
   869                           	callstack 0
   870  000198                     	ds	1
   871  000199                     _RFstate:
   872                           	callstack 0
   873  000199                     	ds	1
   874  00019A                     _eusart1RxLastError:
   875                           	callstack 0
   876  00019A                     	ds	1
   877  00019B                     _ts_system:
   878                           	callstack 0
   879  00019B                     	ds	72
   880  0001E3                     _controlGate_stateMachine:
   881                           	callstack 0
   882  0001E3                     	ds	11
   883  0001EE                     _main_stateMachine:
   884                           	callstack 0
   885  0001EE                     	ds	11
   886  0001F9                     setValueToEdit@value:
   887                           	callstack 0
   888  0001F9                     	ds	1
   889                           
   890                           	psect	dataBANK1
   891  0001FA                     __pdataBANK1:
   892                           	callstack 0
   893  0001FA                     _tempCounter:
   894                           	callstack 0
   895  0001FA                     	ds	4
   896  0001FE                     _firstselectflag:
   897                           	callstack 0
   898  0001FE                     	ds	1
   899                           
   900                           	psect	bssBANK2
   901  000200                     __pbssBANK2:
   902                           	callstack 0
   903  000200                     _ADC_array:
   904                           	callstack 0
   905  000200                     	ds	60
   906  00023C                     _I2C1_Status:
   907                           	callstack 0
   908  00023C                     	ds	36
   909  000260                     _SumEnergyADCHist_array:
   910                           	callstack 0
   911  000260                     	ds	20
   912  000274                     _eusart1RxStatusBuffer:
   913                           	callstack 0
   914  000274                     	ds	8
   915  00027C                     _eusart1RxBuffer:
   916                           	callstack 0
   917  00027C                     	ds	8
   918  000284                     _eusart1TxBuffer:
   919                           	callstack 0
   920  000284                     	ds	8
   921  00028C                     eusartparser@buffer:
   922                           	callstack 0
   923  00028C                     	ds	2
   924  00028E                     _EHop:
   925                           	callstack 0
   926  00028E                     	ds	2
   927  000290                     _NextHop:
   928                           	callstack 0
   929  000290                     	ds	2
   930  000292                     _timer0ReloadVal16bit:
   931                           	callstack 0
   932  000292                     	ds	2
   933  000294                     _classic_data:
   934                           	callstack 0
   935  000294                     	ds	16
   936  0002A4                     _memoryTEMP:
   937                           	callstack 0
   938  0002A4                     	ds	16
   939  0002B4                     _controlLearning_stateMachine:
   940                           	callstack 0
   941  0002B4                     	ds	11
   942  0002BF                     _menuConfiguration_stateMachine:
   943                           	callstack 0
   944  0002BF                     	ds	11
   945  0002CA                     _BufferRF:
   946                           	callstack 0
   947  0002CA                     	ds	9
   948  0002D3                     _DKEY:
   949                           	callstack 0
   950  0002D3                     	ds	8
   951  0002DB                     NormalKeyGen@SEED:
   952                           	callstack 0
   953  0002DB                     	ds	4
   954                           
   955                           	psect	dataBANK2
   956  0002F1                     __pdataBANK2:
   957                           	callstack 0
   958  0002F1                     _zeroCrossingWaitTime:
   959                           	callstack 0
   960  0002F1                     	ds	2
   961                           
   962                           	psect	bssBANK3
   963  000300                     __pbssBANK3:
   964                           	callstack 0
   965  000300                     _listSyncValues:
   966                           	callstack 0
   967  000300                     	ds	150
   968  000396                     _ADC_zero_array:
   969                           	callstack 0
   970  000396                     	ds	60
   971                           
   972                           	psect	dataBANK3
   973  0003D2                     __pdataBANK3:
   974                           	callstack 0
   975  0003D2                     _DispTable:
   976                           	callstack 0
   977  0003D2                     	ds	37
   978                           
   979                           	psect	cstackBANK0
   980  0000D8                     __pcstackBANK0:
   981                           	callstack 0
   982  0000D8                     ??_keeloq_classic_decrypt_packet:
   983  0000D8                     ??_setPositionInvertionInClosing:
   984  0000D8                     ??_validateRemoteSerialNumber:
   985  0000D8                     ??_RemoveSerial:
   986  0000D8                     SaveNVM_VarSystem@page:
   987                           	callstack 0
   988  0000D8                     getStateOpenPosition@state:
   989                           	callstack 0
   990  0000D8                     saveNewSerial@tempSerial:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x0
   994  0000D8                     	ds	1
   995  0000D9                     getStateOpenPosition@stateMotor:
   996                           	callstack 0
   997  0000D9                     SaveNVM_VarSystem@tempAdd:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x1
  1001  0000D9                     	ds	1
  1002  0000DA                     ??_controlVelocity:
  1003  0000DA                     RemoveSerial@cmdType:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x2
  1007  0000DA                     	ds	1
  1008  0000DB                     SaveNVM_VarSystem@point:
  1009                           	callstack 0
  1010  0000DB                     RemoveSerial@tempSerial:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x3
  1014  0000DB                     	ds	1
  1015  0000DC                     ??_setValueToEdit:
  1016  0000DC                     saveNewSerial@position:
  1017                           	callstack 0
  1018  0000DC                     sm_execute_ControlLearning@psm:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x4
  1022  0000DC                     	ds	1
  1023  0000DD                     ??_saveNewSerial:
  1024                           
  1025                           ; 1 bytes @ 0x5
  1026  0000DD                     	ds	1
  1027  0000DE                     ??_sm_execute_ControlLearning:
  1028  0000DE                     setValueToEdit@menuType:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x6
  1032  0000DE                     	ds	1
  1033  0000DF                     setValueToEdit@posindex:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x7
  1037  0000DF                     	ds	1
  1038  0000E0                     ??_controlSelectRemote:
  1039  0000E0                     setValueToEdit@haveValueToEdit:
  1040                           	callstack 0
  1041  0000E0                     eusartparser@package:
  1042                           	callstack 0
  1043  0000E0                     keeloqDecryptPacket@data:
  1044                           	callstack 0
  1045  0000E0                     DecryptPacket_12BIT@data:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x8
  1049  0000E0                     	ds	1
  1050  0000E1                     ??_eusartparser:
  1051  0000E1                     controlSelectRemote@validSerial:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x9
  1055  0000E1                     	ds	1
  1056  0000E2                     controlSelectRemote@pos:
  1057                           	callstack 0
  1058  0000E2                     keeloqDecryptPacket@classic_data:
  1059                           	callstack 0
  1060  0000E2                     DecryptPacket_12BIT@classic_data:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0xA
  1064  0000E2                     	ds	1
  1065  0000E3                     controlSelectRemote@typeRemote:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0xB
  1069  0000E3                     	ds	1
  1070  0000E4                     ??_keeloqDecryptPacket:
  1071  0000E4                     DecryptPacket_12BIT@commandType:
  1072                           	callstack 0
  1073  0000E4                     actionZone_Opening@securityClosing:
  1074                           	callstack 0
  1075  0000E4                     controlSelectRemote@tempSerial:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0xC
  1079  0000E4                     	ds	1
  1080  0000E5                     actionZone_Opening@securityOpening:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0xD
  1084  0000E5                     	ds	1
  1085  0000E6                     actionZone_Opening@typeOpenOrder:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0xE
  1089  0000E6                     	ds	1
  1090  0000E7                     sm_execute_ControlGate@psm:
  1091                           	callstack 0
  1092  0000E7                     eusartparser@serial:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0xF
  1096  0000E7                     	ds	1
  1097  0000E8                     keeloqDecryptPacket@hop_error:
  1098                           	callstack 0
  1099  0000E8                     controlSelectRemote@temp:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x10
  1103  0000E8                     	ds	1
  1104  0000E9                     ??_sm_execute_ControlGate:
  1105  0000E9                     keeloqDecryptPacket@commandType:
  1106                           	callstack 0
  1107  0000E9                     sm_execute_menuConfiguration@psm:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x11
  1111  0000E9                     	ds	2
  1112  0000EB                     ??_sm_execute_menuConfiguration:
  1113  0000EB                     sm_execute_ControlGate@typeOpenOrder:
  1114                           	callstack 0
  1115  0000EB                     eusartparser@pos:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x13
  1119  0000EB                     	ds	1
  1120  0000EC                     eusartparser@i:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0x14
  1124  0000EC                     	ds	1
  1125  0000ED                     eusartparser@i_7272:
  1126                           	callstack 0
  1127  0000ED                     sm_execute_main@psm:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x15
  1131  0000ED                     	ds	1
  1132  0000EE                     eusartparser@relcounter:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x16
  1136  0000EE                     	ds	1
  1137  0000EF                     ??_sm_execute_main:
  1138  0000EF                     eusartparser@i_7273:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x17
  1142  0000EF                     	ds	1
  1143  0000F0                     eusartparser@i_7274:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x18
  1147  0000F0                     	ds	1
  1148  0000F1                     eusartparser@i_7275:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x19
  1152  0000F1                     	ds	1
  1153  0000F2                     eusartparser@i_7276:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x1A
  1157  0000F2                     	ds	1
  1158  0000F3                     main@package:
  1159                           	callstack 0
  1160                           
  1161                           ; 7 bytes @ 0x1B
  1162  0000F3                     	ds	7
  1163                           
  1164                           	psect	cstackCOMRAM
  1165  000001                     __pcstackCOMRAM:
  1166                           	callstack 0
  1167  000001                     ??_rxi:
  1168  000001                     ??i2_GetMotorPower:
  1169  000001                     ADCC_GetSingleConversion@channel:
  1170                           	callstack 0
  1171  000001                     Segments_Set@value:
  1172                           	callstack 0
  1173  000001                     i2VerifyElectricalBrake@tempState:
  1174                           	callstack 0
  1175  000001                     TMR1_WriteTimer@timerVal:
  1176                           	callstack 0
  1177  000001                     decrementTimeslot@ts:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x0
  1181  000001                     	ds	1
  1182  000002                     ??_ReadADC:
  1183  000002                     i2VerifyElectricalBrake@actualState:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x1
  1187  000002                     	ds	1
  1188  000003                     
  1189                           ; 1 bytes @ 0x2
  1190  000003                     	ds	1
  1191  000004                     i2GetMotorPower@defineatraso:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x3
  1195  000004                     	ds	1
  1196  000005                     ??_controlMotorForce:
  1197  000005                     
  1198                           ; 1 bytes @ 0x4
  1199  000005                     	ds	5
  1200  00000A                     ??_INTERRUPT_InterruptManager:
  1201                           
  1202                           ; 1 bytes @ 0x9
  1203  00000A                     	ds	6
  1204  000010                     ??_GetMotorPower:
  1205  000010                     ??_SetSegmentValueLearn:
  1206  000010                     ?_sumEnergyADC:
  1207                           	callstack 0
  1208  000010                     ?_sm_get_current_state:
  1209                           	callstack 0
  1210  000010                     ?___wmul:
  1211                           	callstack 0
  1212  000010                     ?___lwdiv:
  1213                           	callstack 0
  1214  000010                     ?_calculateMean:
  1215                           	callstack 0
  1216  000010                     ?_sumHIST:
  1217                           	callstack 0
  1218  000010                     ?___lldiv:
  1219                           	callstack 0
  1220  000010                     EUSART1_Read@readValue:
  1221                           	callstack 0
  1222  000010                     EUSART1_Write@txData:
  1223                           	callstack 0
  1224  000010                     I2C1_Open@address:
  1225                           	callstack 0
  1226  000010                     I2C1_Close@returnValue:
  1227                           	callstack 0
  1228  000010                     I2C1_MasterSendTxData@data:
  1229                           	callstack 0
  1230  000010                     WWDT_TimerClear@state:
  1231                           	callstack 0
  1232  000010                     getKeyPressed@temp:
  1233                           	callstack 0
  1234  000010                     RGB_Set@value:
  1235                           	callstack 0
  1236  000010                     SetSegmentValueIntermitent@d2:
  1237                           	callstack 0
  1238  000010                     VerifyElectricalBrake@tempState:
  1239                           	callstack 0
  1240  000010                     VerifyFollowMe@securityClose:
  1241                           	callstack 0
  1242  000010                     init_package@package:
  1243                           	callstack 0
  1244  000010                     ___lbdiv@divisor:
  1245                           	callstack 0
  1246  000010                     ___lbmod@divisor:
  1247                           	callstack 0
  1248  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1249                           	callstack 0
  1250  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1251                           	callstack 0
  1252  000010                     EUSART1_SetErrorHandler@interruptHandler:
  1253                           	callstack 0
  1254  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1255                           	callstack 0
  1256  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1257                           	callstack 0
  1258  000010                     I2C1_SetBuffer@buffer:
  1259                           	callstack 0
  1260  000010                     I2C1_SetCallback@cb:
  1261                           	callstack 0
  1262  000010                     TMR0_SetInterruptHandler@InterruptHandler:
  1263                           	callstack 0
  1264  000010                     TMR1_SetInterruptHandler@InterruptHandler:
  1265                           	callstack 0
  1266  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  1267                           	callstack 0
  1268  000010                     saveEnergyADCHist@valueToSave:
  1269                           	callstack 0
  1270  000010                     DecCHK@data:
  1271                           	callstack 0
  1272  000010                     ReqResync@CurrentHop:
  1273                           	callstack 0
  1274  000010                     verifyProgramingMode@classic_data:
  1275                           	callstack 0
  1276  000010                     setFlashLigth_ON@Freq:
  1277                           	callstack 0
  1278  000010                     sm_restart@psm:
  1279                           	callstack 0
  1280  000010                     sm_get_current_state@psm:
  1281                           	callstack 0
  1282  000010                     ___wmul@multiplier:
  1283                           	callstack 0
  1284  000010                     ___lwdiv@dividend:
  1285                           	callstack 0
  1286  000010                     memcpy@d1:
  1287                           	callstack 0
  1288  000010                     calculateMean@meanValue:
  1289                           	callstack 0
  1290  000010                     ___lldiv@dividend:
  1291                           	callstack 0
  1292  000010                     write_eusartparser@package:
  1293                           	callstack 0
  1294                           
  1295                           ; 7 bytes @ 0xF
  1296  000010                     	ds	1
  1297  000011                     ?_read_package:
  1298                           	callstack 0
  1299  000011                     I2C1_Open@returnValue:
  1300                           	callstack 0
  1301  000011                     VerifyElectricalBrake@actualState:
  1302                           	callstack 0
  1303  000011                     confirmpackage@package:
  1304                           	callstack 0
  1305  000011                     ___lbdiv@dividend:
  1306                           	callstack 0
  1307  000011                     ___lbmod@dividend:
  1308                           	callstack 0
  1309  000011                     SetSegmentValueIntermitent@time:
  1310                           	callstack 0
  1311  000011                     setRGB_ON@Freq:
  1312                           	callstack 0
  1313  000011                     write_package@package:
  1314                           	callstack 0
  1315                           
  1316                           ; 7 bytes @ 0x10
  1317  000011                     	ds	1
  1318  000012                     ??_TMR1_Initialize:
  1319  000012                     ??_ControlMotor:
  1320  000012                     ??_sumEnergyADC:
  1321  000012                     ??_DecCHK:
  1322  000012                     SetSegmentValueLearn@direction:
  1323                           	callstack 0
  1324  000012                     confirmpackage@confirm:
  1325                           	callstack 0
  1326  000012                     ___lbdiv@counter:
  1327                           	callstack 0
  1328  000012                     ___lbmod@counter:
  1329                           	callstack 0
  1330  000012                     I2C1_SetBuffer@bufferSize:
  1331                           	callstack 0
  1332  000012                     I2C1_SetCallback@ptr:
  1333                           	callstack 0
  1334  000012                     sm_init@psm:
  1335                           	callstack 0
  1336  000012                     sm_send_event@psm:
  1337                           	callstack 0
  1338  000012                     ___wmul@multiplicand:
  1339                           	callstack 0
  1340  000012                     ___lwdiv@divisor:
  1341                           	callstack 0
  1342  000012                     memcpy@s1:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x11
  1346  000012                     	ds	1
  1347  000013                     ??_setRGB_ON:
  1348  000013                     SetSegmentValueIntermitent@d1:
  1349                           	callstack 0
  1350  000013                     GetMotorPower@defineatraso:
  1351                           	callstack 0
  1352  000013                     ___lbdiv@quotient:
  1353                           	callstack 0
  1354  000013                     ___lbmod@rem:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x12
  1358  000013                     	ds	1
  1359  000014                     ??_InitSoftStop:
  1360  000014                     ??_InitSoftStart:
  1361  000014                     ??_sumHIST:
  1362  000014                     ?___awdiv:
  1363                           	callstack 0
  1364  000014                     I2C1_SetCallback@idx:
  1365                           	callstack 0
  1366  000014                     sumEnergyADC@sumE:
  1367                           	callstack 0
  1368  000014                     sm_init@initial_state:
  1369                           	callstack 0
  1370  000014                     sm_send_event@event:
  1371                           	callstack 0
  1372  000014                     ___wmul@product:
  1373                           	callstack 0
  1374  000014                     ___awdiv@dividend:
  1375                           	callstack 0
  1376  000014                     ___lwdiv@quotient:
  1377                           	callstack 0
  1378  000014                     memcpy@n:
  1379                           	callstack 0
  1380  000014                     calculateMean@newValue:
  1381                           	callstack 0
  1382  000014                     ___lldiv@divisor:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x13
  1386  000014                     	ds	1
  1387  000015                     setRGB_ON@RGBLigth:
  1388                           	callstack 0
  1389  000015                     I2C1_SetDataCompleteCallback@cb:
  1390                           	callstack 0
  1391  000015                     I2C1_SetAddressNackCallback@cb:
  1392                           	callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x14
  1395  000015                     	ds	1
  1396  000016                     ?_getHopCode:
  1397                           	callstack 0
  1398  000016                     ?_getCurrentComparator:
  1399                           	callstack 0
  1400  000016                     sm_init@hist_mode:
  1401                           	callstack 0
  1402  000016                     ___lwdiv@counter:
  1403                           	callstack 0
  1404  000016                     memcpy@tmp:
  1405                           	callstack 0
  1406  000016                     sumEnergyADC@auxValue:
  1407                           	callstack 0
  1408  000016                     getHopCode@data:
  1409                           	callstack 0
  1410  000016                     ___awdiv@divisor:
  1411                           	callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x15
  1414  000016                     	ds	1
  1415  000017                     ??_write_eusartparser:
  1416  000017                     refreshADCZeroOffset@i:
  1417                           	callstack 0
  1418  000017                     I2C1_SetDataCompleteCallback@ptr:
  1419                           	callstack 0
  1420  000017                     I2C1_SetAddressNackCallback@ptr:
  1421                           	callstack 0
  1422  000017                     memcpy@d:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x16
  1426  000017                     	ds	1
  1427  000018                     ??_getHopCode:
  1428  000018                     ??_calculateMean:
  1429  000018                     ??_OpenWalkOrder:
  1430  000018                     sumEnergyADC@i:
  1431                           	callstack 0
  1432  000018                     ControlMotor@stateMotor:
  1433                           	callstack 0
  1434  000018                     read_eusartparser@package:
  1435                           	callstack 0
  1436  000018                     ___awdiv@counter:
  1437                           	callstack 0
  1438  000018                     refreshADCZeroOffset@media:
  1439                           	callstack 0
  1440  000018                     sumHIST@max:
  1441                           	callstack 0
  1442  000018                     ___lldiv@quotient:
  1443                           	callstack 0
  1444  000018                     read_package@package:
  1445                           	callstack 0
  1446                           
  1447                           ; 7 bytes @ 0x17
  1448  000018                     	ds	1
  1449  000019                     ??_read_eusartparser:
  1450  000019                     ___awdiv@sign:
  1451                           	callstack 0
  1452  000019                     wr1RegCompleteHandler@p:
  1453                           	callstack 0
  1454  000019                     rd1RegCompleteHandler@p:
  1455                           	callstack 0
  1456  000019                     rd2RegCompleteHandler@p:
  1457                           	callstack 0
  1458  000019                     wr2RegCompleteHandler@p:
  1459                           	callstack 0
  1460  000019                     rdBlkRegCompleteHandler@p:
  1461                           	callstack 0
  1462  000019                     rd1RegCompleteHandler@i2c1_master_example$F500@ptr:
  1463                           	callstack 0
  1464  000019                     rd2RegCompleteHandler@i2c1_master_example$F511@ptr:
  1465                           	callstack 0
  1466  000019                     wr1RegCompleteHandler@i2c1_master_example$F517@ptr:
  1467                           	callstack 0
  1468  000019                     wr2RegCompleteHandler@i2c1_master_example$F523@ptr:
  1469                           	callstack 0
  1470  000019                     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr:
  1471                           	callstack 0
  1472  000019                     I2C1_CallbackReturnReset@funPtr:
  1473                           	callstack 0
  1474  000019                     memcpy@s:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x18
  1478  000019                     	ds	1
  1479  00001A                     ??_getCurrentComparator:
  1480  00001A                     sumHIST@min:
  1481                           	callstack 0
  1482  00001A                     OpenWalkOrder@diffTime:
  1483                           	callstack 0
  1484  00001A                     ___awdiv@quotient:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x19
  1488  00001A                     	ds	1
  1489  00001B                     ??_I2C1_DO_TX:
  1490  00001B                     ??_I2C1_DO_RX:
  1491  00001B                     ??_I2C1_DO_TX_EMPTY:
  1492  00001B                     ??_I2C1_DO_ADDRESS_NACK:
  1493  00001B                     getSerialCmd@serial:
  1494                           	callstack 0
  1495  00001B                     Decrypt@packet:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x1A
  1499  00001B                     	ds	1
  1500  00001C                     getSerialCmd@temp:
  1501                           	callstack 0
  1502  00001C                     SetSegmentValueMain@d2:
  1503                           	callstack 0
  1504  00001C                     SetSegmentValue@d2:
  1505                           	callstack 0
  1506  00001C                     SetSegmentValueIntermitentMain@d2:
  1507                           	callstack 0
  1508  00001C                     ___lldiv@counter:
  1509                           	callstack 0
  1510  00001C                     sumHIST@sumH:
  1511                           	callstack 0
  1512                           
  1513                           ; 4 bytes @ 0x1B
  1514  00001C                     	ds	1
  1515  00001D                     ??_I2C1_MasterFsm:
  1516  00001D                     ?___lmul:
  1517                           	callstack 0
  1518  00001D                     Decrypt@key:
  1519                           	callstack 0
  1520  00001D                     SetSegmentValueMain@d1:
  1521                           	callstack 0
  1522  00001D                     SetSegmentValue@d1:
  1523                           	callstack 0
  1524  00001D                     SetSegmentValueIntermitentMain@time:
  1525                           	callstack 0
  1526  00001D                     ___lmul@multiplier:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0x1C
  1530  00001D                     	ds	1
  1531  00001E                     Decrypt@i:
  1532                           	callstack 0
  1533                           
  1534                           ; 1 bytes @ 0x1D
  1535  00001E                     	ds	1
  1536  00001F                     Decrypt@j:
  1537                           	callstack 0
  1538  00001F                     SetSegmentValueIntermitentMain@d1:
  1539                           	callstack 0
  1540  00001F                     write_eusartparser@debug:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x1E
  1544  00001F                     	ds	1
  1545  000020                     ??_load_New_Menu:
  1546  000020                     ??_controlSaveRemote:
  1547  000020                     I2C1_MasterOperation@read:
  1548                           	callstack 0
  1549  000020                     sumHIST@i:
  1550                           	callstack 0
  1551  000020                     Decrypt@p:
  1552                           	callstack 0
  1553  000020                     actionZone_Closed@securityOpening:
  1554                           	callstack 0
  1555  000020                     actionZone_Opened@securityClosing:
  1556                           	callstack 0
  1557  000020                     getCurrentComparator@tempOffset:
  1558                           	callstack 0
  1559  000020                     getHopCode@tempHop:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x1F
  1563  000020                     	ds	1
  1564  000021                     I2C1_MasterOperation@returnValue:
  1565                           	callstack 0
  1566  000021                     Decrypt@aux:
  1567                           	callstack 0
  1568  000021                     actionZone_Closed@typeOpenOrder:
  1569                           	callstack 0
  1570  000021                     actionZone_Opened@typeOpenOrder:
  1571                           	callstack 0
  1572  000021                     write_eusartparser@debug2:
  1573                           	callstack 0
  1574  000021                     ___lmul@multiplicand:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x20
  1578  000021                     	ds	1
  1579  000022                     I2C1_Read1ByteRegister@reg:
  1580                           	callstack 0
  1581  000022                     getCurrentComparator@x:
  1582                           	callstack 0
  1583  000022                     getHopCode@tempPos:
  1584                           	callstack 0
  1585  000022                     load_New_Menu@Menu:
  1586                           	callstack 0
  1587  000022                     i2c_writeNBytes@reg:
  1588                           	callstack 0
  1589  000022                     i2c_readDataBlock@reg:
  1590                           	callstack 0
  1591  000022                     Decrypt@Buffer:
  1592                           	callstack 0
  1593                           
  1594                           ; 4 bytes @ 0x21
  1595  000022                     	ds	1
  1596  000023                     ??_ControlCurrent:
  1597  000023                     I2C1_Read1ByteRegister@address:
  1598                           	callstack 0
  1599  000023                     getHopCode@i:
  1600                           	callstack 0
  1601  000023                     load_New_Menu@i:
  1602                           	callstack 0
  1603                           
  1604                           ; 1 bytes @ 0x22
  1605  000023                     	ds	1
  1606  000024                     i2c_writeNBytes@data:
  1607                           	callstack 0
  1608  000024                     I2C1_Read1ByteRegister@returnValue:
  1609                           	callstack 0
  1610  000024                     i2c_readDataBlock@data:
  1611                           	callstack 0
  1612  000024                     HopCHK@data:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x23
  1616  000024                     	ds	1
  1617  000025                     i2c_writeNBytes@len:
  1618                           	callstack 0
  1619  000025                     ___lmul@product:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x24
  1623  000025                     	ds	1
  1624  000026                     i2c_readDataBlock@len:
  1625                           	callstack 0
  1626  000026                     NormalKeyGen@serial:
  1627                           	callstack 0
  1628  000026                     HopCHK@hopDiff:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x25
  1632  000026                     	ds	1
  1633  000027                     ??_i2c_writeNBytes:
  1634                           
  1635                           ; 1 bytes @ 0x26
  1636  000027                     	ds	1
  1637  000028                     ??_i2c_readDataBlock:
  1638  000028                     NormalKeyGen@HOPtemp:
  1639                           	callstack 0
  1640  000028                     i2c_writeNBytes@dat:
  1641                           	callstack 0
  1642                           
  1643                           ; 17 bytes @ 0x27
  1644  000028                     	ds	1
  1645  000029                     ?_getTimeDecelaration:
  1646                           	callstack 0
  1647  000029                     i2c_readDataBlock@address:
  1648                           	callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x28
  1651  000029                     	ds	1
  1652  00002A                     i2c_readDataBlock@d:
  1653                           	callstack 0
  1654                           
  1655                           ; 4 bytes @ 0x29
  1656  00002A                     	ds	2
  1657  00002C                     NormalKeyGen@SKEYtemp:
  1658                           	callstack 0
  1659                           
  1660                           ; 4 bytes @ 0x2B
  1661  00002C                     	ds	1
  1662  00002D                     ??_getTimeDecelaration:
  1663                           
  1664                           ; 1 bytes @ 0x2C
  1665  00002D                     	ds	1
  1666  00002E                     cmdMemoryIsEmpty@position:
  1667                           	callstack 0
  1668  00002E                     validateRemoteSerialNumber@serial:
  1669                           	callstack 0
  1670                           
  1671                           ; 4 bytes @ 0x2D
  1672  00002E                     	ds	1
  1673  00002F                     ??_cmdMemoryIsEmpty:
  1674                           
  1675                           ; 1 bytes @ 0x2E
  1676  00002F                     	ds	1
  1677  000030                     NormalKeyGen@Buffer:
  1678                           	callstack 0
  1679                           
  1680                           ; 8 bytes @ 0x2F
  1681  000030                     	ds	1
  1682  000031                     cmdMemoryIsEmpty@cmdType:
  1683                           	callstack 0
  1684  000031                     getTimeDecelaration@state:
  1685                           	callstack 0
  1686                           
  1687                           ; 1 bytes @ 0x30
  1688  000031                     	ds	1
  1689  000032                     ??_setPositionInvertionInOpening:
  1690  000032                     ??_getStateOpenPosition:
  1691  000032                     validateRemoteSerialNumber@VerifyOnlySerial:
  1692                           	callstack 0
  1693  000032                     actionZone_Closing@securityClosing:
  1694                           	callstack 0
  1695  000032                     cmdMemoryIsEmpty@tempSerial:
  1696                           	callstack 0
  1697                           
  1698                           ; 4 bytes @ 0x31
  1699  000032                     	ds	1
  1700  000033                     actionZone_Closing@typeOpenOrder:
  1701                           	callstack 0
  1702  000033                     validateRemoteSerialNumber@position:
  1703                           	callstack 0
  1704                           
  1705                           ; 2 bytes @ 0x32
  1706  000033                     	ds	2
  1707  000035                     validateRemoteSerialNumber@mask:
  1708                           	callstack 0
  1709                           
  1710                           ; 4 bytes @ 0x34
  1711  000035                     	ds	3
  1712  000038                     keeloq_classic_decrypt_packet@data:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x37
  1716  000038                     	ds	1
  1717  000039                     i2c_writeNBytes@address:
  1718                           	callstack 0
  1719  000039                     validateRemoteSerialNumber@j:
  1720                           	callstack 0
  1721                           
  1722                           ; 1 bytes @ 0x38
  1723  000039                     	ds	1
  1724  00003A                     validateRemoteSerialNumber@i:
  1725                           	callstack 0
  1726  00003A                     saveNewSerial@cmdType:
  1727                           	callstack 0
  1728  00003A                     RemoveSerial@position:
  1729                           	callstack 0
  1730  00003A                     ResetDefaultMemory@type:
  1731                           	callstack 0
  1732  00003A                     checkNVM_VarSystem@saveParam:
  1733                           	callstack 0
  1734  00003A                     sm_execute_ControlLearning@typeOpenOrder:
  1735                           	callstack 0
  1736  00003A                     setValueToEdit@ParameterSelected:
  1737                           	callstack 0
  1738                           
  1739                           ; 1 bytes @ 0x39
  1740  00003A                     	ds	1
  1741  00003B                     
  1742                           ; 1 bytes @ 0x3A
  1743 ;;
  1744 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1745 ;;
  1746 ;; *************** function _main *****************
  1747 ;; Defined at:
  1748 ;;		line 63 in file "main_MC50.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  package         7   27[BANK0 ] struct package_t
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 3F/1
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1763 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1765 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1766 ;;Total ram usage:        7 bytes
  1767 ;; Hardware stack levels required when called: 17
  1768 ;; This function calls:
  1769 ;;		_ControlCounterMoves
  1770 ;;		_ControlCurrent
  1771 ;;		_ControlInputs
  1772 ;;		_ControlLights
  1773 ;;		_ControlMotor
  1774 ;;		_EUSART1_is_rx_ready
  1775 ;;		_InitReceiver
  1776 ;;		_SYSTEM_Initialize
  1777 ;;		_SetSegmentValue
  1778 ;;		_ShowVersion
  1779 ;;		_WWDT_SoftEnable
  1780 ;;		_WWDT_TimerClear
  1781 ;;		_controlVelocity
  1782 ;;		_eusartparser
  1783 ;;		_getKeyPressed
  1784 ;;		_loadNVM_VarSystem
  1785 ;;		_readInputs
  1786 ;;		_readRFButtons
  1787 ;;		_read_package
  1788 ;;		_readbutton
  1789 ;;		_sm_execute_ControlGate
  1790 ;;		_sm_execute_main
  1791 ;;		_sm_init
  1792 ;; This function is called by:
  1793 ;;		Startup code after reset
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text0
  1798  006182                     __ptext0:
  1799                           	callstack 0
  1800  006182                     _main:
  1801                           	callstack 14
  1802                           
  1803                           ;main_MC50.c: 70:     dispStruct.display_grp.value_display1=dMinus;
  1804                           
  1805                           ;incstack = 0
  1806  006182  0E18               	movlw	24
  1807  006184  0100               	movlb	0	; () banked
  1808  006186  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1809                           
  1810                           ;main_MC50.c: 71:     dispStruct.display_grp.value_display1=dMinus;
  1811  006188  0E18               	movlw	24
  1812  00618A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  1813                           
  1814                           ;main_MC50.c: 72:     dispStruct.intermitentFreq=0;
  1815  00618C  0E00               	movlw	0
  1816  00618E  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  1817  006190  0E00               	movlw	0
  1818  006192  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  1819                           
  1820                           ;main_MC50.c: 73:     dispStruct.upFase=1;
  1821  006194  0E01               	movlw	1
  1822  006196  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main_MC50.c: 76:     SYSTEM_Initialize();
  1826  006198  EC96  F047         	call	_SYSTEM_Initialize	;wreg free
  1827                           
  1828                           ; BSR set to: 14
  1829                           ;main_MC50.c: 77:     WWDT_SoftEnable();
  1830  00619C  EC6C  F04B         	call	_WWDT_SoftEnable	;wreg free
  1831                           
  1832                           ; BSR set to: 14
  1833                           ;main_MC50.c: 80:       (INTCONbits.GIE = 1);
  1834  0061A0  8EF2               	bsf	242,7,c	;volatile
  1835                           
  1836                           ; BSR set to: 14
  1837                           ;main_MC50.c: 83:      (INTCONbits.PEIE = 1);
  1838  0061A2  8CF2               	bsf	242,6,c	;volatile
  1839                           
  1840                           ; BSR set to: 14
  1841                           ;main_MC50.c: 86:     IOCBP3=1;
  1842  0061A4  010F               	movlb	15	; () banked
  1843  0061A6  8714               	bsf	20,3,b	;volatile
  1844                           
  1845                           ; BSR set to: 15
  1846                           ;main_MC50.c: 87:     IOCBN3=1;
  1847  0061A8  8713               	bsf	19,3,b	;volatile
  1848                           
  1849                           ; BSR set to: 15
  1850                           ;main_MC50.c: 94:     InitReceiver();
  1851  0061AA  ECF6  F049         	call	_InitReceiver	;wreg free
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;main_MC50.c: 95:     loadNVM_VarSystem();
  1855  0061AE  EC7B  F033         	call	_loadNVM_VarSystem	;wreg free
  1856                           
  1857                           ;main_MC50.c: 97:     WWDT_TimerClear();
  1858  0061B2  ECCC  F049         	call	_WWDT_TimerClear	;wreg free
  1859                           
  1860                           ;main_MC50.c: 99:     SetSegmentValue(dMinus,dMinus);
  1861  0061B6  0E18               	movlw	24
  1862  0061B8  6E1C               	movwf	SetSegmentValue@d2^0,c
  1863  0061BA  0E18               	movlw	24
  1864  0061BC  EC1D  F04A         	call	_SetSegmentValue
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main_MC50.c: 100:     ts_system.ts_TimeSlot1ms = ( 100/50);
  1868  0061C0  0E02               	movlw	2
  1869  0061C2  0101               	movlb	1	; () banked
  1870  0061C4  6F9D               	movwf	(_ts_system+2)& (0+255),b	;volatile
  1871                           
  1872                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1873  0061C6  D00B               	goto	l23926
  1874  0061C8                     l23916:
  1875                           
  1876                           ; BSR set to: 1
  1877                           ;main_MC50.c: 102:     {;main_MC50.c: 103:         if ( ts_system.ts_TimeSlotMain<=0 )
  1878  0061C8  519E               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  1879  0061CA  A4D8               	btfss	status,2,c
  1880  0061CC  D008               	goto	l23926
  1881                           
  1882                           ; BSR set to: 1
  1883                           ;main_MC50.c: 104:         {;main_MC50.c: 105:             WWDT_TimerClear();
  1884  0061CE  ECCC  F049         	call	_WWDT_TimerClear	;wreg free
  1885                           
  1886                           ;main_MC50.c: 106:             ts_system.ts_TimeSlotMain = 50;
  1887  0061D2  0E32               	movlw	50
  1888  0061D4  0101               	movlb	1	; () banked
  1889  0061D6  6F9E               	movwf	(_ts_system+3)& (0+255),b	;volatile
  1890                           
  1891                           ; BSR set to: 1
  1892                           ;main_MC50.c: 108:             ts_system.ts_TimeSlot1ms--;
  1893  0061D8  079D               	decf	(_ts_system+2)& (0+255),f,b	;volatile
  1894                           
  1895                           ; BSR set to: 1
  1896                           ;main_MC50.c: 109:             readInputs();
  1897  0061DA  EC47  F036         	call	_readInputs	;wreg free
  1898  0061DE                     l23926:
  1899                           
  1900                           ;main_MC50.c: 101:     while ( ts_system.ts_TimeSlot1ms > 0 )
  1901  0061DE  0101               	movlb	1	; () banked
  1902  0061E0  519D               	movf	(_ts_system+2)& (0+255),w,b	;volatile
  1903  0061E2  A4D8               	btfss	status,2,c
  1904  0061E4  D7F1               	goto	l23916
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;main_MC50.c: 117:     sm_init(&menuConfiguration_stateMachine,st_MainMenu,HIST_NONE);
  1908  0061E6  0EBF               	movlw	low _menuConfiguration_stateMachine
  1909  0061E8  6E12               	movwf	sm_init@psm^0,c
  1910  0061EA  0E02               	movlw	high _menuConfiguration_stateMachine
  1911  0061EC  6E13               	movwf	(sm_init@psm+1)^0,c
  1912  0061EE  0E00               	movlw	0
  1913  0061F0  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1914  0061F2  0E00               	movlw	0
  1915  0061F4  6E14               	movwf	sm_init@initial_state^0,c
  1916  0061F6  0E00               	movlw	0
  1917  0061F8  6E16               	movwf	sm_init@hist_mode^0,c
  1918  0061FA  ECF1  F043         	call	_sm_init	;wreg free
  1919                           
  1920                           ;main_MC50.c: 118:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
  1921  0061FE  0EEE               	movlw	low _main_stateMachine
  1922  006200  6E12               	movwf	sm_init@psm^0,c
  1923  006202  0E01               	movlw	high _main_stateMachine
  1924  006204  6E13               	movwf	(sm_init@psm+1)^0,c
  1925  006206  0E00               	movlw	0
  1926  006208  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1927  00620A  0E00               	movlw	0
  1928  00620C  6E14               	movwf	sm_init@initial_state^0,c
  1929  00620E  0E00               	movlw	0
  1930  006210  6E16               	movwf	sm_init@hist_mode^0,c
  1931  006212  ECF1  F043         	call	_sm_init	;wreg free
  1932                           
  1933                           ;main_MC50.c: 119:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE);
  1934  006216  0EE3               	movlw	low _controlGate_stateMachine
  1935  006218  6E12               	movwf	sm_init@psm^0,c
  1936  00621A  0E01               	movlw	high _controlGate_stateMachine
  1937  00621C  6E13               	movwf	(sm_init@psm+1)^0,c
  1938  00621E  0E00               	movlw	0
  1939  006220  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1940  006222  0E00               	movlw	0
  1941  006224  6E14               	movwf	sm_init@initial_state^0,c
  1942  006226  0E00               	movlw	0
  1943  006228  6E16               	movwf	sm_init@hist_mode^0,c
  1944  00622A  ECF1  F043         	call	_sm_init	;wreg free
  1945                           
  1946                           ;main_MC50.c: 120:     sm_init(&controlLearning_stateMachine,st_InitLearning,HIST_NONE);
  1947  00622E  0EB4               	movlw	low _controlLearning_stateMachine
  1948  006230  6E12               	movwf	sm_init@psm^0,c
  1949  006232  0E02               	movlw	high _controlLearning_stateMachine
  1950  006234  6E13               	movwf	(sm_init@psm+1)^0,c
  1951  006236  0E00               	movlw	0
  1952  006238  6E15               	movwf	(sm_init@initial_state+1)^0,c
  1953  00623A  0E00               	movlw	0
  1954  00623C  6E14               	movwf	sm_init@initial_state^0,c
  1955  00623E  0E00               	movlw	0
  1956  006240  6E16               	movwf	sm_init@hist_mode^0,c
  1957  006242  ECF1  F043         	call	_sm_init	;wreg free
  1958                           
  1959                           ;main_MC50.c: 122:     ts_system.Debug_TS=(1000/50);
  1960  006246  0E00               	movlw	0
  1961  006248  0101               	movlb	1	; () banked
  1962  00624A  6FA4               	movwf	(_ts_system+9)& (0+255),b	;volatile
  1963  00624C  0E14               	movlw	20
  1964  00624E  6FA3               	movwf	(_ts_system+8)& (0+255),b	;volatile
  1965                           
  1966                           ; BSR set to: 1
  1967                           ;main_MC50.c: 124:     var_sys.ADCZeroOffset = 510;
  1968  006250  0E01               	movlw	1
  1969  006252  6F4C               	movwf	(_var_sys+76)& (0+255),b	;volatile
  1970  006254  0EFE               	movlw	254
  1971  006256  6F4B               	movwf	(_var_sys+75)& (0+255),b	;volatile
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;main_MC50.c: 125:     ts_system.TimeStopADCZeroOffsetCalc = (5*(1000/50));
  1975  006258  0E00               	movlw	0
  1976  00625A  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
  1977  00625C  0E64               	movlw	100
  1978  00625E  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main_MC50.c: 126:     ts_system.TimeStopElectricBrake = 0;
  1982  006260  0E00               	movlw	0
  1983  006262  6FDC               	movwf	(_ts_system+65)& (0+255),b	;volatile
  1984  006264  0E00               	movlw	0
  1985  006266  6FDB               	movwf	(_ts_system+64)& (0+255),b	;volatile
  1986                           
  1987                           ; BSR set to: 1
  1988                           ;main_MC50.c: 129:     var_sys.StateMotor = Stopped;
  1989  006268  0E00               	movlw	0
  1990  00626A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  1991  00626C                     l23940:
  1992                           
  1993                           ;main_MC50.c: 136:     {;main_MC50.c: 140:         struct package_t package;;main_MC50.c
      +                          : 141:         if(EUSART1_is_rx_ready()){
  1994  00626C  ECBC  F04A         	call	_EUSART1_is_rx_ready	;wreg free
  1995  006270  0900               	iorlw	0
  1996  006272  B4D8               	btfsc	status,2,c
  1997  006274  D00E               	goto	l23946
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;main_MC50.c: 142:             package=read_package();
  2001  006276  ECC5  F044         	call	_read_package	;wreg free
  2002  00627A  EE20  F0F3         	lfsr	2,main@package
  2003  00627E  0E06               	movlw	6
  2004  006280                     u29561:
  2005  006280  CFEB FFDB          	movff	plusw0,plusw2
  2006  006284  06E8               	decf	wreg,f,c
  2007  006286  E2FC               	bc	u29561
  2008                           
  2009                           ; BSR set to: 14
  2010                           ;main_MC50.c: 143:             eusartparser(&package);
  2011  006288  0EF3               	movlw	low main@package
  2012  00628A  0100               	movlb	0	; () banked
  2013  00628C  6FE0               	movwf	eusartparser@package& (0+255),b
  2014  00628E  EC58  F017         	call	_eusartparser	;wreg free
  2015  006292                     l23946:
  2016                           
  2017                           ;main_MC50.c: 147:         if ( ts_system.ts_TimeSlotMain<=0 )
  2018  006292  0101               	movlb	1	; () banked
  2019  006294  519E               	movf	(_ts_system+3)& (0+255),w,b	;volatile
  2020  006296  A4D8               	btfss	status,2,c
  2021  006298  D7E9               	goto	l23940
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;main_MC50.c: 148:         {;main_MC50.c: 149:              ts_system.ts_TimeSlotMain = 
      +                          50;
  2025  00629A  0E32               	movlw	50
  2026  00629C  6F9E               	movwf	(_ts_system+3)& (0+255),b	;volatile
  2027                           
  2028                           ; BSR set to: 1
  2029                           ;main_MC50.c: 150:             WWDT_TimerClear();
  2030  00629E  ECCC  F049         	call	_WWDT_TimerClear	;wreg free
  2031                           
  2032                           ;main_MC50.c: 152:             if(var_sys.StateVersion<4)
  2033  0062A2  0E04               	movlw	4
  2034  0062A4  0101               	movlb	1	; () banked
  2035  0062A6  6149               	cpfslt	(_var_sys+73)& (0+255),b	;volatile
  2036  0062A8  D003               	goto	l23956
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;main_MC50.c: 154:             {;main_MC50.c: 155:                 ShowVersion();
  2040  0062AA  EC7B  F042         	call	_ShowVersion	;wreg free
  2041                           
  2042                           ;main_MC50.c: 156:             }
  2043  0062AE  D7DE               	goto	l23940
  2044  0062B0                     l23956:
  2045                           
  2046                           ; BSR set to: 1
  2047                           ;main_MC50.c: 158:             {;main_MC50.c: 160:                 readbutton();
  2048  0062B0  EC11  F042         	call	_readbutton	;wreg free
  2049                           
  2050                           ; BSR set to: 1
  2051                           ;main_MC50.c: 162:                 readRFButtons();
  2052  0062B4  EC31  F02F         	call	_readRFButtons	;wreg free
  2053                           
  2054                           ;main_MC50.c: 163:                lastKey=getKeyPressed();
  2055  0062B8  EC4F  F04A         	call	_getKeyPressed	;wreg free
  2056  0062BC  0101               	movlb	1	; () banked
  2057  0062BE  6F95               	movwf	_lastKey& (0+255),b
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;main_MC50.c: 165:                 readInputs();
  2061  0062C0  EC47  F036         	call	_readInputs	;wreg free
  2062                           
  2063                           ;main_MC50.c: 166:                 ControlInputs();
  2064  0062C4  ECA6  F034         	call	_ControlInputs	;wreg free
  2065                           
  2066                           ;main_MC50.c: 167:                 ControlCurrent();
  2067  0062C8  EC83  F031         	call	_ControlCurrent	;wreg free
  2068                           
  2069                           ;main_MC50.c: 168:                 controlVelocity();
  2070  0062CC  EC26  F028         	call	_controlVelocity	;wreg free
  2071                           
  2072                           ;main_MC50.c: 169:                 ControlMotor();
  2073  0062D0  ECF0  F025         	call	_ControlMotor	;wreg free
  2074                           
  2075                           ;main_MC50.c: 170:                 ControlLights();
  2076  0062D4  EC38  F01F         	call	_ControlLights	;wreg free
  2077                           
  2078                           ;main_MC50.c: 171:                 ControlCounterMoves();
  2079  0062D8  EC98  F043         	call	_ControlCounterMoves	;wreg free
  2080                           
  2081                           ;main_MC50.c: 173:                 sm_execute_main(&main_stateMachine);
  2082  0062DC  0EEE               	movlw	low _main_stateMachine
  2083  0062DE  0100               	movlb	0	; () banked
  2084  0062E0  6FED               	movwf	sm_execute_main@psm& (0+255),b
  2085  0062E2  0E01               	movlw	high _main_stateMachine
  2086  0062E4  6FEE               	movwf	(sm_execute_main@psm+1)& (0+255),b
  2087  0062E6  EC50  F012         	call	_sm_execute_main	;wreg free
  2088                           
  2089                           ;main_MC50.c: 174:                 sm_execute_ControlGate(&controlGate_stateMachine);
  2090  0062EA  0EE3               	movlw	low _controlGate_stateMachine
  2091  0062EC  0100               	movlb	0	; () banked
  2092  0062EE  6FE7               	movwf	sm_execute_ControlGate@psm& (0+255),b
  2093  0062F0  0E01               	movlw	high _controlGate_stateMachine
  2094  0062F2  6FE8               	movwf	(sm_execute_ControlGate@psm+1)& (0+255),b
  2095  0062F4  EC93  F01D         	call	_sm_execute_ControlGate	;wreg free
  2096                           
  2097                           ;main_MC50.c: 177:                 if(lastKey!=0xff)
  2098  0062F8  0101               	movlb	1	; () banked
  2099  0062FA  2995               	incf	_lastKey& (0+255),w,b
  2100  0062FC  B4D8               	btfsc	status,2,c
  2101  0062FE  D7B6               	goto	l23940
  2102                           
  2103                           ; BSR set to: 1
  2104                           ;main_MC50.c: 178:                 {;main_MC50.c: 180:                       InitReceive
      +                          r();
  2105  006300  ECF6  F049         	call	_InitReceiver	;wreg free
  2106                           
  2107                           ; BSR set to: 1
  2108                           
  2109                           ;main_MC50.c: 185:         }
  2110  006304  D7B3               	goto	l23940
  2111  006306                     __end_of_main:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _sm_execute_main *****************
  2115 ;; Defined at:
  2116 ;;		line 26 in file "sm_Main_MC50.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  psm             2   21[BANK0 ] PTR struct .
  2119 ;;		 -> main_stateMachine(11), 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;		None
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 3F/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2133 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2134 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2135 ;;Total ram usage:        4 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 16
  2138 ;; This function calls:
  2139 ;;		_SetSegmentValueIntermitentMain
  2140 ;;		_SetSegmentValueMain
  2141 ;;		_load_New_Menu
  2142 ;;		_sm_execute_menuConfiguration
  2143 ;;		_sm_send_event
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text1
  2150  0024A0                     __ptext1:
  2151                           	callstack 0
  2152  0024A0                     _sm_execute_main:
  2153                           	callstack 14
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;sm_Main_MC50.c: 29:     switch((sm_state_Main_t) psm->current_state)
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;incstack = 0
  2160  0024A0  D053               	goto	l23442
  2161  0024A2                     l23418:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;sm_Main_MC50.c: 32:         {;sm_Main_MC50.c: 33:             if(programmer_enable==0)
  2165  0024A2  5185               	movf	_programmer_enable& (0+255),w,b
  2166  0024A4  A4D8               	btfss	status,2,c
  2167  0024A6  D066               	goto	l23444
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;sm_Main_MC50.c: 34:                 if(psm->last_event==ev_goto_MenuConfig)
  2171  0024A8  EE20 F004          	lfsr	2,4
  2172  0024AC  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2173  0024AE  26D9               	addwf	fsr2l,f,c
  2174  0024B0  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2175  0024B2  22DA               	addwfc	fsr2h,f,c
  2176  0024B4  0E06               	movlw	6
  2177  0024B6  18DE               	xorwf	postinc2,w,c
  2178  0024B8  10DE               	iorwf	postinc2,w,c
  2179  0024BA  A4D8               	btfss	status,2,c
  2180  0024BC  D006               	goto	l23424
  2181  0024BE                     u28560:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;sm_Main_MC50.c: 35:                 {;sm_Main_MC50.c: 37:                     psm->curr
      +                          ent_state = st_MenuConfiguration;
  2185  0024BE  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2186  0024C2  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2187  0024C6  0E01               	movlw	1
  2188  0024C8  D01D               	goto	L2
  2189  0024CA                     l23424:
  2190                           
  2191                           ; BSR set to: 0
  2192  0024CA  EE20 F004          	lfsr	2,4
  2193  0024CE  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2194  0024D0  26D9               	addwf	fsr2l,f,c
  2195  0024D2  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2196  0024D4  22DA               	addwfc	fsr2h,f,c
  2197  0024D6  0E11               	movlw	17
  2198  0024D8  18DE               	xorwf	postinc2,w,c
  2199  0024DA  10DE               	iorwf	postinc2,w,c
  2200  0024DC  A4D8               	btfss	status,2,c
  2201  0024DE  D04A               	goto	l23444
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;sm_Main_MC50.c: 40:                 {;sm_Main_MC50.c: 41:                     psm->curr
      +                          ent_state = st_MotorON;
  2205  0024E0  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2206  0024E4  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2207  0024E8  0E02               	movlw	2
  2208  0024EA  D00C               	goto	L2
  2209  0024EC                     l23428:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;sm_Main_MC50.c: 46:         {;sm_Main_MC50.c: 47:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2213  0024EC  EE20 F004          	lfsr	2,4
  2214  0024F0  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2215  0024F2  26D9               	addwf	fsr2l,f,c
  2216  0024F4  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2217  0024F6  22DA               	addwfc	fsr2h,f,c
  2218  0024F8  0E07               	movlw	7
  2219  0024FA  18DE               	xorwf	postinc2,w,c
  2220  0024FC  10DE               	iorwf	postinc2,w,c
  2221  0024FE  A4D8               	btfss	status,2,c
  2222  002500  D039               	goto	l23444
  2223  002502  D00F               	goto	u28590
  2224  002504                     L2:
  2225  002504  6EDE               	movwf	postinc2,c
  2226  002506  0E00               	movlw	0
  2227  002508  6EDD               	movwf	postdec2,c
  2228  00250A  D034               	goto	l23444
  2229  00250C                     l23432:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;sm_Main_MC50.c: 54:         {;sm_Main_MC50.c: 55:             if(psm->last_event==ev_go
      +                          to_StandBy)
  2233  00250C  EE20 F004          	lfsr	2,4
  2234  002510  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2235  002512  26D9               	addwf	fsr2l,f,c
  2236  002514  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2237  002516  22DA               	addwfc	fsr2h,f,c
  2238  002518  0E07               	movlw	7
  2239  00251A  18DE               	xorwf	postinc2,w,c
  2240  00251C  10DE               	iorwf	postinc2,w,c
  2241  00251E  A4D8               	btfss	status,2,c
  2242  002520  D006               	goto	l23436
  2243  002522                     u28590:
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;sm_Main_MC50.c: 56:             {;sm_Main_MC50.c: 57:                 psm->current_stat
      +                          e = st_standBy;
  2247  002522  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2248  002526  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2249  00252A  0E00               	movlw	0
  2250  00252C  D7EB               	goto	L2
  2251  00252E                     l23436:
  2252                           
  2253                           ; BSR set to: 0
  2254  00252E  EE20 F004          	lfsr	2,4
  2255  002532  51ED               	movf	sm_execute_main@psm& (0+255),w,b
  2256  002534  26D9               	addwf	fsr2l,f,c
  2257  002536  51EE               	movf	(sm_execute_main@psm+1)& (0+255),w,b
  2258  002538  22DA               	addwfc	fsr2h,f,c
  2259  00253A  0E06               	movlw	6
  2260  00253C  18DE               	xorwf	postinc2,w,c
  2261  00253E  10DE               	iorwf	postinc2,w,c
  2262  002540  A4D8               	btfss	status,2,c
  2263  002542  D018               	goto	l23444
  2264  002544  D7BC               	goto	u28560
  2265  002546                     l3048:
  2266                           
  2267                           ; BSR set to: 0
  2268  002546  D7FF               	goto	l3048
  2269  002548                     l23442:
  2270                           
  2271                           ; BSR set to: 0
  2272  002548  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  2273  00254C  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  2274  002550  50DF               	movf	indf2,w,c
  2275  002552  6FEF               	movwf	??_sm_execute_main& (0+255),b
  2276  002554  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  2277                           
  2278                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2279                           ; Switch size 1, requested type "simple"
  2280                           ; Number of cases is 1, Range of values is 0 to 0
  2281                           ; switch strategies available:
  2282                           ; Name         Instructions Cycles
  2283                           ; simple_byte            4     3 (average)
  2284                           ;	Chosen strategy is simple_byte
  2285  002556  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  2286  002558  0A00               	xorlw	0	; case 0
  2287  00255A  A4D8               	btfss	status,2,c
  2288  00255C  D7F4               	goto	l3048
  2289                           
  2290                           ; BSR set to: 0
  2291                           ; Switch size 1, requested type "simple"
  2292                           ; Number of cases is 3, Range of values is 0 to 2
  2293                           ; switch strategies available:
  2294                           ; Name         Instructions Cycles
  2295                           ; simple_byte           10     6 (average)
  2296                           ;	Chosen strategy is simple_byte
  2297  00255E  51EF               	movf	??_sm_execute_main& (0+255),w,b
  2298  002560  0A00               	xorlw	0	; case 0
  2299  002562  B4D8               	btfsc	status,2,c
  2300  002564  D79E               	goto	l23418
  2301  002566  0A01               	xorlw	1	; case 1
  2302  002568  B4D8               	btfsc	status,2,c
  2303  00256A  D7C0               	goto	l23428
  2304  00256C  0A03               	xorlw	3	; case 2
  2305  00256E  B4D8               	btfsc	status,2,c
  2306  002570  D7CD               	goto	l23432
  2307  002572  D7E9               	goto	l3048
  2308  002574                     l23444:
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;sm_Main_MC50.c: 77:     sm_send_event(&main_stateMachine, ev_NULL);
  2312  002574  0EEE               	movlw	low _main_stateMachine
  2313  002576  6E12               	movwf	sm_send_event@psm^0,c
  2314  002578  0E01               	movlw	high _main_stateMachine
  2315  00257A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2316  00257C  0E00               	movlw	0
  2317  00257E  6E15               	movwf	(sm_send_event@event+1)^0,c
  2318  002580  0E00               	movlw	0
  2319  002582  6E14               	movwf	sm_send_event@event^0,c
  2320  002584  EC0E  F043         	call	_sm_send_event	;wreg free
  2321                           
  2322                           ;sm_Main_MC50.c: 82:     switch((sm_state_Main_t) psm->current_state)
  2323  002588  D1F8               	goto	l23722
  2324  00258A                     l23446:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;sm_Main_MC50.c: 85:         {;sm_Main_MC50.c: 86:             if (button_struct.current
      +                          ==0 && button_struct.timer>((1000/50)*5))
  2328  00258A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2329  00258C  A4D8               	btfss	status,2,c
  2330  00258E  D016               	goto	l23458
  2331                           
  2332                           ; BSR set to: 0
  2333  002590  0E64               	movlw	100
  2334  002592  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2335  002594  D013               	goto	l23458
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;sm_Main_MC50.c: 87:             {;sm_Main_MC50.c: 88:                 load_New_Menu(E_M
      +                          enu);
  2339  002596  0E01               	movlw	1
  2340  002598  ECCA  F020         	call	_load_New_Menu
  2341  00259C                     l23452:
  2342                           
  2343                           ;sm_Main_MC50.c: 89:                 sm_send_event(&main_stateMachine, ev_goto_MenuConfi
      +                          g);
  2344  00259C  0EEE               	movlw	low _main_stateMachine
  2345  00259E  6E12               	movwf	sm_send_event@psm^0,c
  2346  0025A0  0E01               	movlw	high _main_stateMachine
  2347  0025A2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2348  0025A4  0E00               	movlw	0
  2349  0025A6  6E15               	movwf	(sm_send_event@event+1)^0,c
  2350  0025A8  0E06               	movlw	6
  2351  0025AA  6E14               	movwf	sm_send_event@event^0,c
  2352  0025AC  EC0E  F043         	call	_sm_send_event	;wreg free
  2353                           
  2354                           ;sm_Main_MC50.c: 90:                 button_struct.processed=1;
  2355  0025B0  0E01               	movlw	1
  2356  0025B2  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2357                           
  2358                           ;sm_Main_MC50.c: 91:                 temp=0;
  2359  0025B4  0E00               	movlw	0
  2360  0025B6  0100               	movlb	0	; () banked
  2361  0025B8  6F80               	movwf	_temp& (0+255),b
  2362                           
  2363                           ;sm_Main_MC50.c: 92:             }
  2364  0025BA  0012               	return	
  2365  0025BC                     l23458:
  2366                           
  2367                           ; BSR set to: 0
  2368  0025BC  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2369  0025BE  A4D8               	btfss	status,2,c
  2370  0025C0  D00B               	goto	l23466
  2371                           
  2372                           ; BSR set to: 0
  2373  0025C2  0E14               	movlw	20
  2374  0025C4  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2375  0025C6  D008               	goto	l23466
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;sm_Main_MC50.c: 94:             {;sm_Main_MC50.c: 97:                 SetSegmentValueMa
      +                          in(dP,d0);
  2379  0025C8  0E00               	movlw	0
  2380  0025CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2381  0025CC  0E10               	movlw	16
  2382  0025CE  EC03  F04A         	call	_SetSegmentValueMain
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;sm_Main_MC50.c: 98:                 temp=1;
  2386  0025D2  0E01               	movlw	1
  2387  0025D4  6F80               	movwf	_temp& (0+255),b
  2388                           
  2389                           ;sm_Main_MC50.c: 99:             }
  2390  0025D6  0012               	return	
  2391  0025D8                     l23466:
  2392                           
  2393                           ; BSR set to: 0
  2394  0025D8  0580               	decf	_temp& (0+255),w,b
  2395  0025DA  A4D8               	btfss	status,2,c
  2396  0025DC  D004               	goto	l23476
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;sm_Main_MC50.c: 101:             {;sm_Main_MC50.c: 102:                 load_New_Menu(P
      +                          _Menu);
  2400  0025DE  0E00               	movlw	0
  2401  0025E0  ECCA  F020         	call	_load_New_Menu
  2402  0025E4  D7DB               	goto	l23452
  2403  0025E6                     l23476:
  2404                           
  2405                           ; BSR set to: 0
  2406  0025E6  0E27               	movlw	39
  2407  0025E8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2408  0025EA  A4D8               	btfss	status,2,c
  2409  0025EC  D007               	goto	l23488
  2410                           
  2411                           ; BSR set to: 0
  2412  0025EE  0E78               	movlw	120
  2413  0025F0  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2414  0025F2  D004               	goto	l23488
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;sm_Main_MC50.c: 108:             {;sm_Main_MC50.c: 110:                 load_New_Menu(D
      +                          el_Menu);
  2418  0025F4  0E0D               	movlw	13
  2419  0025F6  ECCA  F020         	call	_load_New_Menu
  2420  0025FA  D7D0               	goto	l23452
  2421  0025FC                     l23488:
  2422                           
  2423                           ; BSR set to: 0
  2424  0025FC  0E27               	movlw	39
  2425  0025FE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2426  002600  A4D8               	btfss	status,2,c
  2427  002602  D00B               	goto	l23496
  2428                           
  2429                           ; BSR set to: 0
  2430  002604  0E14               	movlw	20
  2431  002606  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2432  002608  D008               	goto	l23496
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;sm_Main_MC50.c: 116:             {;sm_Main_MC50.c: 118:                 SetSegmentValue
      +                          Main(d5,dU);
  2436  00260A  0E13               	movlw	19
  2437  00260C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2438  00260E  0E05               	movlw	5
  2439  002610  EC03  F04A         	call	_SetSegmentValueMain
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;sm_Main_MC50.c: 119:                 temp=2;
  2443  002614  0E02               	movlw	2
  2444  002616  6F80               	movwf	_temp& (0+255),b
  2445                           
  2446                           ;sm_Main_MC50.c: 120:             }
  2447  002618  0012               	return	
  2448  00261A                     l23496:
  2449                           
  2450                           ; BSR set to: 0
  2451  00261A  0E02               	movlw	2
  2452  00261C  1980               	xorwf	_temp& (0+255),w,b
  2453  00261E  A4D8               	btfss	status,2,c
  2454  002620  D004               	goto	l23506
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;sm_Main_MC50.c: 122:             {;sm_Main_MC50.c: 123:                 load_New_Menu(S
      +                          _Menu);
  2458  002622  0E0C               	movlw	12
  2459  002624  ECCA  F020         	call	_load_New_Menu
  2460  002628  D7B9               	goto	l23452
  2461  00262A                     l23506:
  2462                           
  2463                           ; BSR set to: 0
  2464  00262A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2465  00262C  A4D8               	btfss	status,2,c
  2466  00262E  D009               	goto	l23512
  2467                           
  2468                           ; BSR set to: 0
  2469  002630  0101               	movlb	1	; () banked
  2470  002632  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
  2471  002634  A4D8               	btfss	status,2,c
  2472  002636  D005               	goto	l23512
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;sm_Main_MC50.c: 129:             {;sm_Main_MC50.c: 130:                 var_sys.StartFr
      +                          omButton=YES;
  2476  002638  0E01               	movlw	1
  2477  00263A  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2478                           
  2479                           ;sm_Main_MC50.c: 131:                 var_sys.StateMotor=InClose;
  2480  00263C  0E03               	movlw	3
  2481  00263E  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2482                           
  2483                           ;sm_Main_MC50.c: 132:             }
  2484  002640  0012               	return	
  2485  002642                     l23512:
  2486  002642  0E17               	movlw	23
  2487  002644  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2488  002646  A4D8               	btfss	status,2,c
  2489  002648  D009               	goto	l23518
  2490  00264A  0101               	movlb	1	; () banked
  2491  00264C  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
  2492  00264E  A4D8               	btfss	status,2,c
  2493  002650  D005               	goto	l23518
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;sm_Main_MC50.c: 134:             {;sm_Main_MC50.c: 135:                 var_sys.StartFr
      +                          omButton=YES;
  2497  002652  0E01               	movlw	1
  2498  002654  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2499                           
  2500                           ;sm_Main_MC50.c: 136:                 var_sys.StateMotor=InOpenFull;
  2501  002656  0E01               	movlw	1
  2502  002658  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2503                           
  2504                           ;sm_Main_MC50.c: 137:             }
  2505  00265A  0012               	return	
  2506  00265C                     l23518:
  2507  00265C  0101               	movlb	1	; () banked
  2508  00265E  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
  2509  002660  A4D8               	btfss	status,2,c
  2510  002662  D005               	goto	l23522
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;sm_Main_MC50.c: 139:             {;sm_Main_MC50.c: 140:                 var_sys.StartFr
      +                          omButton=NO;
  2514  002664  0E00               	movlw	0
  2515  002666  6F09               	movwf	(_var_sys+9)& (0+255),b	;volatile
  2516                           
  2517                           ;sm_Main_MC50.c: 141:                 var_sys.StateMotor = Stopped;
  2518  002668  0E00               	movlw	0
  2519  00266A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  2520                           
  2521                           ;sm_Main_MC50.c: 142:             }
  2522  00266C  0012               	return	
  2523  00266E                     l23522:
  2524                           
  2525                           ; BSR set to: 1
  2526  00266E  0E06               	movlw	6
  2527  002670  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2528  002672  B4D8               	btfsc	status,2,c
  2529  002674  D004               	goto	u28770
  2530                           
  2531                           ; BSR set to: 1
  2532  002676  0E05               	movlw	5
  2533  002678  183B               	xorwf	_rfCMD^0,w,c	;volatile
  2534  00267A  A4D8               	btfss	status,2,c
  2535  00267C  D015               	goto	l23536
  2536  00267E                     u28770:
  2537                           
  2538                           ; BSR set to: 1
  2539  00267E  0E63               	movlw	99
  2540  002680  6444               	cpfsgt	(_rfCMD+9)^0,c	;volatile
  2541  002682  D012               	goto	l23536
  2542                           
  2543                           ; BSR set to: 1
  2544                           ;sm_Main_MC50.c: 144:             {;sm_Main_MC50.c: 145:                 load_New_Menu(S
      +                          _Menu);
  2545  002684  0E0C               	movlw	12
  2546  002686  ECCA  F020         	call	_load_New_Menu
  2547                           
  2548                           ;sm_Main_MC50.c: 146:                 sm_send_event(&main_stateMachine, ev_goto_MenuConf
      +                          ig);
  2549  00268A  0EEE               	movlw	low _main_stateMachine
  2550  00268C  6E12               	movwf	sm_send_event@psm^0,c
  2551  00268E  0E01               	movlw	high _main_stateMachine
  2552  002690  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2553  002692  0E00               	movlw	0
  2554  002694  6E15               	movwf	(sm_send_event@event+1)^0,c
  2555  002696  0E06               	movlw	6
  2556  002698  6E14               	movwf	sm_send_event@event^0,c
  2557  00269A  EC0E  F043         	call	_sm_send_event	;wreg free
  2558                           
  2559                           ;sm_Main_MC50.c: 147:                 var_sys.ProgrammingDistanceIs=rfCMD.currentType;
  2560  00269E  C03B  F13B         	movff	_rfCMD,_var_sys+59	;volatile
  2561                           
  2562                           ;sm_Main_MC50.c: 148:                 rfCMD.processed=1;
  2563  0026A2  0E01               	movlw	1
  2564  0026A4  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  2565                           
  2566                           ;sm_Main_MC50.c: 149:             }
  2567  0026A6  0012               	return	
  2568  0026A8                     l23536:
  2569                           
  2570                           ; BSR set to: 1
  2571  0026A8  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2572  0026AA  D005               	goto	u28790
  2573  0026AC  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2574  0026AE  E111               	bnz	l3060
  2575  0026B0  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2576  0026B2  B0D8               	btfsc	status,0,c
  2577  0026B4  0012               	return	
  2578  0026B6                     u28790:
  2579                           
  2580                           ; BSR set to: 1
  2581                           ;sm_Main_MC50.c: 151:             {;sm_Main_MC50.c: 152:                 if(var_sys.FimC
      +                          urso_CloseIsEnabled == YES)
  2582  0026B6  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  2583  0026B8  A4D8               	btfss	status,2,c
  2584  0026BA  D006               	goto	l23542
  2585                           
  2586                           ; BSR set to: 1
  2587                           ;sm_Main_MC50.c: 154:                     {;sm_Main_MC50.c: 156:                        
      +                           SetSegmentValueMain(dF,dC);
  2588  0026BC  0E0C               	movlw	12
  2589  0026BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2590  0026C0  0E0F               	movlw	15
  2591  0026C2  EC03  F04A         	call	_SetSegmentValueMain
  2592                           
  2593                           ;sm_Main_MC50.c: 157:                     }
  2594  0026C6  0012               	return	
  2595  0026C8                     l23542:
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;sm_Main_MC50.c: 160:                 SetSegmentValueMain(dMinus,dMinus);
  2599  0026C8  0E18               	movlw	24
  2600  0026CA  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2601  0026CC  0E18               	movlw	24
  2602  0026CE  EC03  F04A         	call	_SetSegmentValueMain
  2603  0026D2                     l3060:
  2604                           
  2605                           ; BSR set to: 1
  2606  0026D2  0012               	return	
  2607  0026D4                     l23544:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;sm_Main_MC50.c: 167:         {;sm_Main_MC50.c: 168:             sm_execute_menuConfigur
      +                          ation(&menuConfiguration_stateMachine);
  2611  0026D4  0EBF               	movlw	low _menuConfiguration_stateMachine
  2612  0026D6  6FE9               	movwf	sm_execute_menuConfiguration@psm& (0+255),b
  2613  0026D8  0E02               	movlw	high _menuConfiguration_stateMachine
  2614  0026DA  6FEA               	movwf	(sm_execute_menuConfiguration@psm+1)& (0+255),b
  2615  0026DC  EC91  F007         	call	_sm_execute_menuConfiguration	;wreg free
  2616                           
  2617                           ;sm_Main_MC50.c: 169:         };sm_Main_MC50.c: 170:         break;
  2618  0026E0  0012               	return	
  2619  0026E2                     l23546:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;sm_Main_MC50.c: 172:         {;sm_Main_MC50.c: 175:             aux_in_auto_close = NO;
  2623  0026E2  0E00               	movlw	0
  2624  0026E4  0101               	movlb	1	; () banked
  2625  0026E6  6F8C               	movwf	_aux_in_auto_close& (0+255),b
  2626                           
  2627                           ; BSR set to: 1
  2628                           ;sm_Main_MC50.c: 176:             if ( controlGate_stateMachine.current_state == st_Open
      +                          ed )
  2629  0026E8  0E04               	movlw	4
  2630  0026EA  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2631  0026EC  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2632  0026EE  A4D8               	btfss	status,2,c
  2633  0026F0  D013               	goto	l3083
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;sm_Main_MC50.c: 177:             {;sm_Main_MC50.c: 179:                 if ( var_sys_NV
      +                          M.operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES )
  2637  0026F2  0100               	movlb	0	; () banked
  2638  0026F4  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2639  0026F6  A4D8               	btfss	status,2,c
  2640  0026F8  D007               	goto	l23556
  2641                           
  2642                           ; BSR set to: 0
  2643  0026FA  0101               	movlb	1	; () banked
  2644  0026FC  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  2645  0026FE  A4D8               	btfss	status,2,c
  2646  002700  D003               	goto	l23556
  2647  002702                     u28830:
  2648                           
  2649                           ; BSR set to: 1
  2650                           ;sm_Main_MC50.c: 180:                 {;sm_Main_MC50.c: 181:                     aux_in_
      +                          auto_close = YES;
  2651  002702  0E01               	movlw	1
  2652  002704  6F8C               	movwf	_aux_in_auto_close& (0+255),b
  2653                           
  2654                           ;sm_Main_MC50.c: 182:                 }
  2655  002706  D008               	goto	l3083
  2656  002708                     l23556:
  2657  002708  0100               	movlb	0	; () banked
  2658  00270A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2659  00270C  B4D8               	btfsc	status,2,c
  2660  00270E  D004               	goto	l3083
  2661                           
  2662                           ; BSR set to: 0
  2663  002710  0101               	movlb	1	; () banked
  2664  002712  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2665  002714  A4D8               	btfss	status,2,c
  2666  002716  D7F5               	goto	u28830
  2667  002718                     l3083:
  2668                           
  2669                           ;sm_Main_MC50.c: 193:             if(var_sys.StateMotor==Stopped && ( (controlGate_state
      +                          Machine.current_state==st_Opened && aux_in_auto_close==NO) || controlGate_stateMachine.c
      +                          urrent_state==st_Closed || controlGate_stateMachine.current_state==st_Idle ) )
  2670  002718  0101               	movlb	1	; () banked
  2671  00271A  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2672  00271C  A4D8               	btfss	status,2,c
  2673  00271E  D069               	goto	l3097
  2674                           
  2675                           ; BSR set to: 1
  2676  002720  0E04               	movlw	4
  2677  002722  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2678  002724  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2679  002726  A4D8               	btfss	status,2,c
  2680  002728  D003               	goto	u28880
  2681                           
  2682                           ; BSR set to: 1
  2683  00272A  518C               	movf	_aux_in_auto_close& (0+255),w,b
  2684  00272C  B4D8               	btfsc	status,2,c
  2685  00272E  D008               	goto	u28900
  2686  002730                     u28880:
  2687                           
  2688                           ; BSR set to: 1
  2689  002730  05E3               	decf	_controlGate_stateMachine& (0+255),w,b
  2690  002732  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2691  002734  B4D8               	btfsc	status,2,c
  2692  002736  D004               	goto	u28900
  2693                           
  2694                           ; BSR set to: 1
  2695  002738  51E3               	movf	_controlGate_stateMachine& (0+255),w,b
  2696  00273A  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2697  00273C  A4D8               	btfss	status,2,c
  2698  00273E  D059               	goto	l3097
  2699  002740                     u28900:
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;sm_Main_MC50.c: 194:             {;sm_Main_MC50.c: 195:                 if (button_stru
      +                          ct.current==0 && button_struct.timer>((1000/50)*5))
  2703  002740  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2704  002742  A4D8               	btfss	status,2,c
  2705  002744  D015               	goto	l23584
  2706                           
  2707                           ; BSR set to: 1
  2708  002746  0E64               	movlw	100
  2709  002748  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2710  00274A  D012               	goto	l23584
  2711                           
  2712                           ; BSR set to: 1
  2713                           ;sm_Main_MC50.c: 196:                 {;sm_Main_MC50.c: 197:                     load_Ne
      +                          w_Menu(E_Menu);
  2714  00274C  0E01               	movlw	1
  2715  00274E  ECCA  F020         	call	_load_New_Menu
  2716  002752                     l23578:
  2717                           
  2718                           ;sm_Main_MC50.c: 198:                     sm_send_event(&main_stateMachine, ev_goto_Menu
      +                          Config);
  2719  002752  0EEE               	movlw	low _main_stateMachine
  2720  002754  6E12               	movwf	sm_send_event@psm^0,c
  2721  002756  0E01               	movlw	high _main_stateMachine
  2722  002758  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2723  00275A  0E00               	movlw	0
  2724  00275C  6E15               	movwf	(sm_send_event@event+1)^0,c
  2725  00275E  0E06               	movlw	6
  2726  002760  6E14               	movwf	sm_send_event@event^0,c
  2727  002762  EC0E  F043         	call	_sm_send_event	;wreg free
  2728                           
  2729                           ;sm_Main_MC50.c: 199:                     button_struct.processed=1;
  2730  002766  0E01               	movlw	1
  2731  002768  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2732                           
  2733                           ;sm_Main_MC50.c: 200:                     temp=0;
  2734  00276A  0E00               	movlw	0
  2735  00276C  0100               	movlb	0	; () banked
  2736  00276E  D037               	goto	L4
  2737  002770                     l23584:
  2738                           
  2739                           ; BSR set to: 1
  2740  002770  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2741  002772  A4D8               	btfss	status,2,c
  2742  002774  D00A               	goto	l23592
  2743                           
  2744                           ; BSR set to: 1
  2745  002776  0E14               	movlw	20
  2746  002778  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2747  00277A  D007               	goto	l23592
  2748                           
  2749                           ; BSR set to: 1
  2750                           ;sm_Main_MC50.c: 203:                 {;sm_Main_MC50.c: 205:                     SetSegm
      +                          entValueMain(dP,d0);
  2751  00277C  0E00               	movlw	0
  2752  00277E  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2753  002780  0E10               	movlw	16
  2754  002782  EC03  F04A         	call	_SetSegmentValueMain
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;sm_Main_MC50.c: 206:                     temp=1;
  2758  002786  0E01               	movlw	1
  2759  002788  D02A               	goto	L4
  2760  00278A                     l23592:
  2761                           
  2762                           ; BSR set to: 1
  2763  00278A  0100               	movlb	0	; () banked
  2764  00278C  0580               	decf	_temp& (0+255),w,b
  2765  00278E  A4D8               	btfss	status,2,c
  2766  002790  D00E               	goto	l23606
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;sm_Main_MC50.c: 209:                 {;sm_Main_MC50.c: 210:                     load_Ne
      +                          w_Menu(P_Menu);
  2770  002792  0E00               	movlw	0
  2771  002794  ECCA  F020         	call	_load_New_Menu
  2772                           
  2773                           ;sm_Main_MC50.c: 212:                     button_struct.processed=1;
  2774  002798  0E01               	movlw	1
  2775  00279A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  2776                           
  2777                           ;sm_Main_MC50.c: 213:                     temp=0;
  2778  00279C  0E00               	movlw	0
  2779  00279E  0100               	movlb	0	; () banked
  2780  0027A0  6F80               	movwf	_temp& (0+255),b
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;sm_Main_MC50.c: 214:                     main_stateMachine.current_state = st_MenuConfi
      +                          guration;
  2784  0027A2  0E00               	movlw	0
  2785  0027A4  0101               	movlb	1	; () banked
  2786  0027A6  6FEF               	movwf	(_main_stateMachine+1)& (0+255),b
  2787  0027A8  0E01               	movlw	1
  2788  0027AA  6FEE               	movwf	_main_stateMachine& (0+255),b
  2789  0027AC  0012               	return	
  2790  0027AE                     l23606:
  2791                           
  2792                           ; BSR set to: 0
  2793  0027AE  0E27               	movlw	39
  2794  0027B0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2795  0027B2  A4D8               	btfss	status,2,c
  2796  0027B4  D007               	goto	l23618
  2797                           
  2798                           ; BSR set to: 0
  2799  0027B6  0E78               	movlw	120
  2800  0027B8  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2801  0027BA  D004               	goto	l23618
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;sm_Main_MC50.c: 218:             {;sm_Main_MC50.c: 220:                 load_New_Menu(D
      +                          el_Menu);
  2805  0027BC  0E0D               	movlw	13
  2806  0027BE  ECCA  F020         	call	_load_New_Menu
  2807  0027C2  D7C7               	goto	l23578
  2808  0027C4                     l23618:
  2809                           
  2810                           ; BSR set to: 0
  2811  0027C4  0E27               	movlw	39
  2812  0027C6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2813  0027C8  A4D8               	btfss	status,2,c
  2814  0027CA  D00B               	goto	l23626
  2815                           
  2816                           ; BSR set to: 0
  2817  0027CC  0E14               	movlw	20
  2818  0027CE  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  2819  0027D0  D008               	goto	l23626
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;sm_Main_MC50.c: 226:             {;sm_Main_MC50.c: 228:                 SetSegmentValue
      +                          Main(d5,dU);
  2823  0027D2  0E13               	movlw	19
  2824  0027D4  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  2825  0027D6  0E05               	movlw	5
  2826  0027D8  EC03  F04A         	call	_SetSegmentValueMain
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;sm_Main_MC50.c: 229:                 temp=2;
  2830  0027DC  0E02               	movlw	2
  2831  0027DE                     L4:
  2832  0027DE  6F80               	movwf	_temp& (0+255),b
  2833                           
  2834                           ;sm_Main_MC50.c: 230:             }
  2835  0027E0  D008               	goto	l3097
  2836  0027E2                     l23626:
  2837                           
  2838                           ; BSR set to: 0
  2839  0027E2  0E02               	movlw	2
  2840  0027E4  1980               	xorwf	_temp& (0+255),w,b
  2841  0027E6  A4D8               	btfss	status,2,c
  2842  0027E8  D004               	goto	l3097
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;sm_Main_MC50.c: 232:             {;sm_Main_MC50.c: 233:                 load_New_Menu(S
      +                          _Menu);
  2846  0027EA  0E0C               	movlw	12
  2847  0027EC  ECCA  F020         	call	_load_New_Menu
  2848  0027F0  D6D5               	goto	l23452
  2849  0027F2                     l3097:
  2850                           
  2851                           ;sm_Main_MC50.c: 243:             if( ts_system.timeSinalizationDigit<=0 && (button_stru
      +                          ct.current!=0 && button_struct.current!=0x27) )
  2852                           
  2853                           ; BSR set to: 0
  2854  0027F2  0101               	movlb	1	; () banked
  2855  0027F4  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  2856  0027F6  D005               	goto	u29010
  2857  0027F8  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  2858  0027FA  E102               	bnz	u29011
  2859  0027FC  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  2860  0027FE  B0D8               	btfsc	status,0,c
  2861  002800                     u29011:
  2862  002800  0012               	return	
  2863  002802                     u29010:
  2864                           
  2865                           ; BSR set to: 1
  2866  002802  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  2867  002804  B4D8               	btfsc	status,2,c
  2868  002806  0012               	return	
  2869                           
  2870                           ; BSR set to: 1
  2871  002808  0E27               	movlw	39
  2872  00280A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  2873  00280C  B4D8               	btfsc	status,2,c
  2874  00280E  0012               	return	
  2875                           
  2876                           ; BSR set to: 1
  2877                           ;sm_Main_MC50.c: 244:             {;sm_Main_MC50.c: 245:                 if(var_sys.Stat
      +                          eMotor==InClose )
  2878  002810  0E03               	movlw	3
  2879  002812  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2880  002814  A4D8               	btfss	status,2,c
  2881  002816  D011               	goto	l23652
  2882                           
  2883                           ; BSR set to: 1
  2884                           ;sm_Main_MC50.c: 246:                 {;sm_Main_MC50.c: 248:                    SetSegme
      +                          ntValueIntermitentMain(dC,dL,( 500/50));
  2885  002818  0E12               	movlw	18
  2886  00281A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2887  00281C  0E00               	movlw	0
  2888  00281E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2889  002820  0E0A               	movlw	10
  2890  002822  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2891  002824  0E0C               	movlw	12
  2892  002826  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  2893  00282A                     l23648:
  2894                           
  2895                           ;sm_Main_MC50.c: 249:                    ts_system.timeSinalizationDigit=( 200/50);
  2896  00282A  0E00               	movlw	0
  2897  00282C  0101               	movlb	1	; () banked
  2898  00282E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  2899  002830  0E04               	movlw	4
  2900  002832  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  2901                           
  2902                           ; BSR set to: 1
  2903                           ;sm_Main_MC50.c: 251:                     var_sys.showAP = NO;
  2904  002834  0E00               	movlw	0
  2905  002836  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
  2906                           
  2907                           ;sm_Main_MC50.c: 252:                 }
  2908  002838  0012               	return	
  2909  00283A                     l23652:
  2910                           
  2911                           ; BSR set to: 1
  2912  00283A  0E02               	movlw	2
  2913  00283C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  2914  00283E  B4D8               	btfsc	status,2,c
  2915  002840  D003               	goto	u29060
  2916                           
  2917                           ; BSR set to: 1
  2918  002842  0500               	decf	_var_sys& (0+255),w,b	;volatile
  2919  002844  A4D8               	btfss	status,2,c
  2920  002846  D00A               	goto	l23662
  2921  002848                     u29060:
  2922                           
  2923                           ; BSR set to: 1
  2924                           ;sm_Main_MC50.c: 254:                 {;sm_Main_MC50.c: 256:                     SetSegm
      +                          entValueIntermitentMain(d0,dP,( 500/50));
  2925  002848  0E10               	movlw	16
  2926  00284A  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  2927  00284C  0E00               	movlw	0
  2928  00284E  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  2929  002850  0E0A               	movlw	10
  2930  002852  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  2931  002854  0E00               	movlw	0
  2932  002856  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  2933  00285A  D7E7               	goto	l23648
  2934  00285C                     l23662:
  2935                           
  2936                           ; BSR set to: 1
  2937  00285C  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2938  00285E  A4D8               	btfss	status,2,c
  2939  002860  D00F               	goto	l23668
  2940                           
  2941                           ; BSR set to: 1
  2942  002862  05E3               	decf	_controlGate_stateMachine& (0+255),w,b
  2943  002864  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2944  002866  A4D8               	btfss	status,2,c
  2945  002868  D00B               	goto	l23668
  2946                           
  2947                           ; BSR set to: 1
  2948                           ;sm_Main_MC50.c: 262:                 {;sm_Main_MC50.c: 263:                     sm_send
      +                          _event(&main_stateMachine, ev_goto_StandBy);
  2949  00286A  0EEE               	movlw	low _main_stateMachine
  2950  00286C  6E12               	movwf	sm_send_event@psm^0,c
  2951  00286E  0E01               	movlw	high _main_stateMachine
  2952  002870  6E13               	movwf	(sm_send_event@psm+1)^0,c
  2953  002872  0E00               	movlw	0
  2954  002874  6E15               	movwf	(sm_send_event@event+1)^0,c
  2955  002876  0E07               	movlw	7
  2956  002878  6E14               	movwf	sm_send_event@event^0,c
  2957  00287A  EC0E  F043         	call	_sm_send_event	;wreg free
  2958                           
  2959                           ;sm_Main_MC50.c: 264:                 }
  2960  00287E  0012               	return	
  2961  002880                     l23668:
  2962                           
  2963                           ; BSR set to: 1
  2964  002880  5100               	movf	_var_sys& (0+255),w,b	;volatile
  2965  002882  A4D8               	btfss	status,2,c
  2966  002884  D074               	goto	l23718
  2967                           
  2968                           ; BSR set to: 1
  2969  002886  0E04               	movlw	4
  2970  002888  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
  2971  00288A  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
  2972  00288C  A4D8               	btfss	status,2,c
  2973  00288E  D06F               	goto	l23718
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;sm_Main_MC50.c: 266:                 {;sm_Main_MC50.c: 268:                     if
  2977  002890  0100               	movlb	0	; () banked
  2978  002892  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  2979  002894  B4D8               	btfsc	status,2,c
  2980  002896  D00B               	goto	u29140
  2981                           
  2982                           ; BSR set to: 0
  2983  002898  0101               	movlb	1	; () banked
  2984  00289A  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  2985  00289C  B4D8               	btfsc	status,2,c
  2986  00289E  D007               	goto	u29140
  2987                           
  2988                           ; BSR set to: 1
  2989  0028A0  050B               	decf	(_var_sys+11)& (0+255),w,b	;volatile
  2990  0028A2  B4D8               	btfsc	status,2,c
  2991  0028A4  D013               	goto	u29180
  2992                           
  2993                           ; BSR set to: 1
  2994  0028A6  0E03               	movlw	3
  2995  0028A8  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  2996  0028AA  B4D8               	btfsc	status,2,c
  2997  0028AC  D00F               	goto	u29180
  2998  0028AE                     u29140:
  2999  0028AE  0100               	movlb	0	; () banked
  3000  0028B0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3001  0028B2  A4D8               	btfss	status,2,c
  3002  0028B4  D026               	goto	l23696
  3003                           
  3004                           ; BSR set to: 0
  3005  0028B6  0101               	movlb	1	; () banked
  3006  0028B8  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3007  0028BA  A4D8               	btfss	status,2,c
  3008  0028BC  D022               	goto	l23696
  3009                           
  3010                           ; BSR set to: 1
  3011  0028BE  0E02               	movlw	2
  3012  0028C0  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3013  0028C2  B4D8               	btfsc	status,2,c
  3014  0028C4  D01E               	goto	l23696
  3015                           
  3016                           ; BSR set to: 1
  3017  0028C6  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3018  0028C8  B4D8               	btfsc	status,2,c
  3019  0028CA  D01B               	goto	l23696
  3020  0028CC                     u29180:
  3021                           
  3022                           ; BSR set to: 1
  3023                           ;sm_Main_MC50.c: 273:                     {;sm_Main_MC50.c: 274:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3024  0028CC  0E00               	movlw	0
  3025  0028CE  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3026  0028D0  0E0A               	movlw	10
  3027  0028D2  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3028                           
  3029                           ; BSR set to: 1
  3030                           ;sm_Main_MC50.c: 279:                         if ( var_sys.showAP == YES )
  3031  0028D4  054F               	decf	(_var_sys+79)& (0+255),w,b	;volatile
  3032  0028D6  A4D8               	btfss	status,2,c
  3033  0028D8  D00A               	goto	l23694
  3034                           
  3035                           ; BSR set to: 1
  3036                           ;sm_Main_MC50.c: 280:                         {;sm_Main_MC50.c: 281:                    
      +                                   SetSegmentValueIntermitentMain(dA,dP,( 500/50));
  3037  0028DA  0E10               	movlw	16
  3038  0028DC  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3039  0028DE  0E00               	movlw	0
  3040  0028E0  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3041  0028E2  0E0A               	movlw	10
  3042  0028E4  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3043  0028E6  0E0A               	movlw	10
  3044  0028E8  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  3045                           
  3046                           ;sm_Main_MC50.c: 282:                         }
  3047  0028EC  0012               	return	
  3048  0028EE                     l23694:
  3049                           
  3050                           ; BSR set to: 1
  3051                           ;sm_Main_MC50.c: 284:                         {;sm_Main_MC50.c: 285:                    
      +                                   SetSegmentValueIntermitentMain(dA,dF,( 500/50));
  3052  0028EE  0E0F               	movlw	15
  3053  0028F0  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3054  0028F2  0E00               	movlw	0
  3055  0028F4  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3056  0028F6  0E0A               	movlw	10
  3057  0028F8  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3058  0028FA  0E0A               	movlw	10
  3059  0028FC  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  3060  002900  0012               	return	
  3061  002902                     l23696:
  3062  002902  0100               	movlb	0	; () banked
  3063  002904  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3064  002906  B4D8               	btfsc	status,2,c
  3065  002908  D008               	goto	u29220
  3066                           
  3067                           ; BSR set to: 0
  3068  00290A  0101               	movlb	1	; () banked
  3069  00290C  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
  3070  00290E  B4D8               	btfsc	status,2,c
  3071  002910  D004               	goto	u29220
  3072                           
  3073                           ; BSR set to: 1
  3074  002912  0E02               	movlw	2
  3075  002914  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3076  002916  B4D8               	btfsc	status,2,c
  3077  002918  D00C               	goto	u29250
  3078  00291A                     u29220:
  3079  00291A  0100               	movlb	0	; () banked
  3080  00291C  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
  3081  00291E  A4D8               	btfss	status,2,c
  3082  002920  D016               	goto	l23712
  3083                           
  3084                           ; BSR set to: 0
  3085  002922  0101               	movlb	1	; () banked
  3086  002924  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
  3087  002926  A4D8               	btfss	status,2,c
  3088  002928  D012               	goto	l23712
  3089                           
  3090                           ; BSR set to: 1
  3091  00292A  0E02               	movlw	2
  3092  00292C  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
  3093  00292E  A4D8               	btfss	status,2,c
  3094  002930  D00E               	goto	l23712
  3095  002932                     u29250:
  3096                           
  3097                           ; BSR set to: 1
  3098                           ;sm_Main_MC50.c: 294:                     {;sm_Main_MC50.c: 295:                        
      +                           ts_system.timeSinalizationDigit=( 500/50);
  3099  002932  0E00               	movlw	0
  3100  002934  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  3101  002936  0E0A               	movlw	10
  3102  002938  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;sm_Main_MC50.c: 297:                         SetSegmentValueIntermitentMain(dA,dP,( 500
      +                          /50));
  3106  00293A  0E10               	movlw	16
  3107  00293C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3108  00293E  0E00               	movlw	0
  3109  002940  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3110  002942  0E0A               	movlw	10
  3111  002944  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3112  002946  0E0A               	movlw	10
  3113  002948  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  3114                           
  3115                           ;sm_Main_MC50.c: 298:                     }
  3116  00294C  0012               	return	
  3117  00294E                     l23712:
  3118  00294E  0101               	movlb	1	; () banked
  3119  002950  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
  3120  002952  A4D8               	btfss	status,2,c
  3121  002954  D006               	goto	l23716
  3122                           
  3123                           ; BSR set to: 1
  3124                           ;sm_Main_MC50.c: 301:                     {;sm_Main_MC50.c: 303:                        
      +                           SetSegmentValueMain(dF,d0);
  3125  002956  0E00               	movlw	0
  3126  002958  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3127  00295A  0E0F               	movlw	15
  3128  00295C  EC03  F04A         	call	_SetSegmentValueMain
  3129                           
  3130                           ;sm_Main_MC50.c: 304:                     }
  3131  002960  0012               	return	
  3132  002962                     l23716:
  3133                           
  3134                           ; BSR set to: 1
  3135                           ;sm_Main_MC50.c: 306:                     {;sm_Main_MC50.c: 307:                       S
      +                          etSegmentValueMain(dMinus,dMinus);
  3136  002962  0E18               	movlw	24
  3137  002964  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3138  002966  0E18               	movlw	24
  3139  002968  EC03  F04A         	call	_SetSegmentValueMain
  3140  00296C  0012               	return	
  3141  00296E                     l23718:
  3142                           
  3143                           ; BSR set to: 1
  3144                           ;sm_Main_MC50.c: 311:                 {;sm_Main_MC50.c: 313:                     SetSegm
      +                          entValueMain(dMinus,dMinus);
  3145  00296E  0E18               	movlw	24
  3146  002970  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3147  002972  0E18               	movlw	24
  3148  002974  EC03  F04A         	call	_SetSegmentValueMain
  3149  002978  0012               	return	
  3150  00297A                     l23722:
  3151  00297A  C0ED  FFD9         	movff	sm_execute_main@psm,fsr2l
  3152  00297E  C0EE  FFDA         	movff	sm_execute_main@psm+1,fsr2h
  3153  002982  50DF               	movf	indf2,w,c
  3154  002984  0100               	movlb	0	; () banked
  3155  002986  6FEF               	movwf	??_sm_execute_main& (0+255),b
  3156  002988  6BF0               	clrf	(??_sm_execute_main+1)& (0+255),b
  3157                           
  3158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3159                           ; Switch size 1, requested type "simple"
  3160                           ; Number of cases is 1, Range of values is 0 to 0
  3161                           ; switch strategies available:
  3162                           ; Name         Instructions Cycles
  3163                           ; simple_byte            4     3 (average)
  3164                           ;	Chosen strategy is simple_byte
  3165  00298A  51F0               	movf	(??_sm_execute_main+1)& (0+255),w,b
  3166  00298C  0A00               	xorlw	0	; case 0
  3167  00298E  A4D8               	btfss	status,2,c
  3168  002990  0012               	return	
  3169                           
  3170                           ; BSR set to: 0
  3171                           ; Switch size 1, requested type "simple"
  3172                           ; Number of cases is 3, Range of values is 0 to 2
  3173                           ; switch strategies available:
  3174                           ; Name         Instructions Cycles
  3175                           ; simple_byte           10     6 (average)
  3176                           ;	Chosen strategy is simple_byte
  3177  002992  51EF               	movf	??_sm_execute_main& (0+255),w,b
  3178  002994  0A00               	xorlw	0	; case 0
  3179  002996  B4D8               	btfsc	status,2,c
  3180  002998  D5F8               	goto	l23446
  3181  00299A  0A01               	xorlw	1	; case 1
  3182  00299C  B4D8               	btfsc	status,2,c
  3183  00299E  D69A               	goto	l23544
  3184  0029A0  0A03               	xorlw	3	; case 2
  3185  0029A2  A4D8               	btfss	status,2,c
  3186  0029A4  0012               	return	
  3187  0029A6  D69D               	goto	l23546
  3188  0029A8                     __end_of_sm_execute_main:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _sm_execute_menuConfiguration *****************
  3192 ;; Defined at:
  3193 ;;		line 33 in file "sm_MenuConfiguration_MC50.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  psm             2   17[BANK0 ] PTR struct .
  3196 ;;		 -> menuConfiguration_stateMachine(11), 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 3F/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3210 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3211 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3212 ;;Total ram usage:        4 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 15
  3215 ;; This function calls:
  3216 ;;		_ClearFlag_rfCMD
  3217 ;;		_ResetDefaultMemory
  3218 ;;		_SaveNVM_VarSystem
  3219 ;;		_SetSegmentValueIntermitentMain
  3220 ;;		_SetSegmentValueMain
  3221 ;;		___lbdiv
  3222 ;;		___lldiv
  3223 ;;		___lmul
  3224 ;;		___lwdiv
  3225 ;;		_controlLearnDigit
  3226 ;;		_controlSaveRemote
  3227 ;;		_controlSelectRemote
  3228 ;;		_load_New_Menu
  3229 ;;		_setValueToEdit
  3230 ;;		_sm_send_event
  3231 ;; This function is called by:
  3232 ;;		_sm_execute_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text2
  3237  000F22                     __ptext2:
  3238                           	callstack 0
  3239  000F22                     _sm_execute_menuConfiguration:
  3240                           	callstack 14
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;sm_MenuConfiguration_MC50.c: 36:     switch((sm_state_Menu_t) psm->current_state)
  3244                           
  3245                           ;incstack = 0
  3246  000F22  D0A2               	goto	l22694
  3247  000F24                     l22636:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;sm_MenuConfiguration_MC50.c: 39:         {;sm_MenuConfiguration_MC50.c: 40:            
      +                           if(psm->last_event==ev_ParameterIsSelected)
  3251  000F24  EE20 F004          	lfsr	2,4
  3252  000F28  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3253  000F2A  26D9               	addwf	fsr2l,f,c
  3254  000F2C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3255  000F2E  22DA               	addwfc	fsr2h,f,c
  3256  000F30  04DE               	decf	postinc2,w,c
  3257  000F32  10DE               	iorwf	postinc2,w,c
  3258  000F34  A4D8               	btfss	status,2,c
  3259  000F36  D006               	goto	l22640
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;sm_MenuConfiguration_MC50.c: 41:             {;sm_MenuConfiguration_MC50.c: 42:        
      +                                   psm->current_state = st_EditParameter;
  3263  000F38  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3264  000F3C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3265  000F40  0E01               	movlw	1
  3266  000F42  D04C               	goto	L9
  3267  000F44                     l22640:
  3268                           
  3269                           ; BSR set to: 0
  3270  000F44  EE20 F004          	lfsr	2,4
  3271  000F48  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3272  000F4A  26D9               	addwf	fsr2l,f,c
  3273  000F4C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3274  000F4E  22DA               	addwfc	fsr2h,f,c
  3275  000F50  0E05               	movlw	5
  3276  000F52  18DE               	xorwf	postinc2,w,c
  3277  000F54  10DE               	iorwf	postinc2,w,c
  3278  000F56  A4D8               	btfss	status,2,c
  3279  000F58  D006               	goto	l22644
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;sm_MenuConfiguration_MC50.c: 45:             {;sm_MenuConfiguration_MC50.c: 46:        
      +                                   psm->current_state = st_Counter;
  3283  000F5A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3284  000F5E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3285  000F62  0E03               	movlw	3
  3286  000F64  D03B               	goto	L9
  3287  000F66                     l22644:
  3288                           
  3289                           ; BSR set to: 0
  3290  000F66  EE20 F004          	lfsr	2,4
  3291  000F6A  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3292  000F6C  26D9               	addwf	fsr2l,f,c
  3293  000F6E  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3294  000F70  22DA               	addwfc	fsr2h,f,c
  3295  000F72  0E08               	movlw	8
  3296  000F74  18DE               	xorwf	postinc2,w,c
  3297  000F76  10DE               	iorwf	postinc2,w,c
  3298  000F78  A4D8               	btfss	status,2,c
  3299  000F7A  D006               	goto	l22648
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;sm_MenuConfiguration_MC50.c: 49:             {;sm_MenuConfiguration_MC50.c: 50:        
      +                                   psm->current_state = st_SelectRemote;
  3303  000F7C  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3304  000F80  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3305  000F84  0E04               	movlw	4
  3306  000F86  D02A               	goto	L9
  3307  000F88                     l22648:
  3308                           
  3309                           ; BSR set to: 0
  3310  000F88  EE20 F004          	lfsr	2,4
  3311  000F8C  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3312  000F8E  26D9               	addwf	fsr2l,f,c
  3313  000F90  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3314  000F92  22DA               	addwfc	fsr2h,f,c
  3315  000F94  0E14               	movlw	20
  3316  000F96  18DE               	xorwf	postinc2,w,c
  3317  000F98  10DE               	iorwf	postinc2,w,c
  3318  000F9A  A4D8               	btfss	status,2,c
  3319  000F9C  D087               	goto	l22696
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;sm_MenuConfiguration_MC50.c: 53:             {;sm_MenuConfiguration_MC50.c: 55:        
      +                                   psm->current_state = st_LearningMode;
  3323  000F9E  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3324  000FA2  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3325  000FA6  0E06               	movlw	6
  3326  000FA8  D019               	goto	L9
  3327  000FAA                     l22652:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;sm_MenuConfiguration_MC50.c: 65:         {;sm_MenuConfiguration_MC50.c: 66:            
      +                           if(psm->last_event==ev_ParameterIsEdited)
  3331  000FAA  EE20 F004          	lfsr	2,4
  3332  000FAE  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3333  000FB0  26D9               	addwf	fsr2l,f,c
  3334  000FB2  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3335  000FB4  22DA               	addwfc	fsr2h,f,c
  3336  000FB6  0E02               	movlw	2
  3337  000FB8  18DE               	xorwf	postinc2,w,c
  3338  000FBA  10DE               	iorwf	postinc2,w,c
  3339  000FBC  A4D8               	btfss	status,2,c
  3340  000FBE  D006               	goto	l22656
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;sm_MenuConfiguration_MC50.c: 67:             {;sm_MenuConfiguration_MC50.c: 68:        
      +                                   psm->current_state = st_SaveParameter;
  3344  000FC0  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3345  000FC4  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3346  000FC8  0E02               	movlw	2
  3347  000FCA  D008               	goto	L9
  3348  000FCC                     l22656:
  3349                           
  3350                           ; BSR set to: 0
  3351  000FCC  EE20 F004          	lfsr	2,4
  3352  000FD0  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3353  000FD2  26D9               	addwf	fsr2l,f,c
  3354  000FD4  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3355  000FD6  22DA               	addwfc	fsr2h,f,c
  3356  000FD8  0E03               	movlw	3
  3357  000FDA  D03B               	goto	L123
  3358  000FDC                     L9:
  3359  000FDC  6EDE               	movwf	postinc2,c
  3360  000FDE  0E00               	movlw	0
  3361  000FE0  6EDD               	movwf	postdec2,c
  3362  000FE2  D064               	goto	l22696
  3363  000FE4                     l22664:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;sm_MenuConfiguration_MC50.c: 85:         {;sm_MenuConfiguration_MC50.c: 86:            
      +                           if(psm->last_event==ev_ParameterIsSaved)
  3367  000FE4  EE20 F004          	lfsr	2,4
  3368  000FE8  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3369  000FEA  26D9               	addwf	fsr2l,f,c
  3370  000FEC  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3371  000FEE  22DA               	addwfc	fsr2h,f,c
  3372  000FF0  0E04               	movlw	4
  3373  000FF2  18DE               	xorwf	postinc2,w,c
  3374  000FF4  10DE               	iorwf	postinc2,w,c
  3375  000FF6  A4D8               	btfss	status,2,c
  3376  000FF8  D7E9               	goto	l22656
  3377  000FFA  D02F               	goto	u27270
  3378  000FFC                     l22672:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;sm_MenuConfiguration_MC50.c: 97:         {;sm_MenuConfiguration_MC50.c: 98:            
      +                           if(psm->last_event==ev_addRemotes)
  3382  000FFC  EE20 F004          	lfsr	2,4
  3383  001000  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3384  001002  26D9               	addwf	fsr2l,f,c
  3385  001004  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3386  001006  22DA               	addwfc	fsr2h,f,c
  3387  001008  0E08               	movlw	8
  3388  00100A  18DE               	xorwf	postinc2,w,c
  3389  00100C  10DE               	iorwf	postinc2,w,c
  3390  00100E  A4D8               	btfss	status,2,c
  3391  001010  D7DD               	goto	l22656
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;sm_MenuConfiguration_MC50.c: 99:             {;sm_MenuConfiguration_MC50.c: 100:       
      +                                    psm->current_state = st_SaveRemotes;
  3395  001012  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3396  001016  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3397  00101A  0E05               	movlw	5
  3398  00101C  D7DF               	goto	L9
  3399  00101E                     l22680:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;sm_MenuConfiguration_MC50.c: 109:         {;sm_MenuConfiguration_MC50.c: 110:          
      +                             if(psm->last_event==ev_NextRemote)
  3403  00101E  EE20 F004          	lfsr	2,4
  3404  001022  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3405  001024  26D9               	addwf	fsr2l,f,c
  3406  001026  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3407  001028  22DA               	addwfc	fsr2h,f,c
  3408  00102A  0E09               	movlw	9
  3409  00102C  18DE               	xorwf	postinc2,w,c
  3410  00102E  10DE               	iorwf	postinc2,w,c
  3411  001030  A4D8               	btfss	status,2,c
  3412  001032  D008               	goto	l22688
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;sm_MenuConfiguration_MC50.c: 111:             {;sm_MenuConfiguration_MC50.c: 112:      
      +                                     psm->current_state = st_SelectRemote;
  3416  001034  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3417  001038  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3418  00103C  0E04               	movlw	4
  3419  00103E  6EDE               	movwf	postinc2,c
  3420  001040  0E00               	movlw	0
  3421  001042  6EDD               	movwf	postdec2,c
  3422  001044                     l22688:
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;sm_MenuConfiguration_MC50.c: 121:         {;sm_MenuConfiguration_MC50.c: 122:          
      +                             if(psm->last_event==ev_ParameterIsSaved)
  3426  001044  EE20 F004          	lfsr	2,4
  3427  001048  51E9               	movf	sm_execute_menuConfiguration@psm& (0+255),w,b
  3428  00104A  26D9               	addwf	fsr2l,f,c
  3429  00104C  51EA               	movf	(sm_execute_menuConfiguration@psm+1)& (0+255),w,b
  3430  00104E  22DA               	addwfc	fsr2h,f,c
  3431  001050  0E04               	movlw	4
  3432  001052                     L123:
  3433  001052  18DE               	xorwf	postinc2,w,c
  3434  001054  10DE               	iorwf	postinc2,w,c
  3435  001056  A4D8               	btfss	status,2,c
  3436  001058  D029               	goto	l22696
  3437  00105A                     u27270:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;sm_MenuConfiguration_MC50.c: 123:             {;sm_MenuConfiguration_MC50.c: 124:      
      +                                     psm->current_state = st_MainMenu;
  3441  00105A  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3442  00105E  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3443  001062  0E00               	movlw	0
  3444  001064  D7BB               	goto	L9
  3445  001066                     l3228:
  3446                           
  3447                           ; BSR set to: 0
  3448  001066  D7FF               	goto	l3228
  3449  001068                     l22694:
  3450                           
  3451                           ; BSR set to: 0
  3452  001068  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  3453  00106C  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  3454  001070  50DF               	movf	indf2,w,c
  3455  001072  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3456  001074  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  3457                           
  3458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3459                           ; Switch size 1, requested type "simple"
  3460                           ; Number of cases is 1, Range of values is 0 to 0
  3461                           ; switch strategies available:
  3462                           ; Name         Instructions Cycles
  3463                           ; simple_byte            4     3 (average)
  3464                           ;	Chosen strategy is simple_byte
  3465  001076  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  3466  001078  0A00               	xorlw	0	; case 0
  3467  00107A  A4D8               	btfss	status,2,c
  3468  00107C  D7F4               	goto	l3228
  3469                           
  3470                           ; BSR set to: 0
  3471                           ; Switch size 1, requested type "simple"
  3472                           ; Number of cases is 7, Range of values is 0 to 6
  3473                           ; switch strategies available:
  3474                           ; Name         Instructions Cycles
  3475                           ; simple_byte           22    12 (average)
  3476                           ;	Chosen strategy is simple_byte
  3477  00107E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3478  001080  0A00               	xorlw	0	; case 0
  3479  001082  B4D8               	btfsc	status,2,c
  3480  001084  D74F               	goto	l22636
  3481  001086  0A01               	xorlw	1	; case 1
  3482  001088  B4D8               	btfsc	status,2,c
  3483  00108A  D78F               	goto	l22652
  3484  00108C  0A03               	xorlw	3	; case 2
  3485  00108E  B4D8               	btfsc	status,2,c
  3486  001090  D7D9               	goto	l22688
  3487  001092  0A01               	xorlw	1	; case 3
  3488  001094  B4D8               	btfsc	status,2,c
  3489  001096  D7A6               	goto	l22664
  3490  001098  0A07               	xorlw	7	; case 4
  3491  00109A  B4D8               	btfsc	status,2,c
  3492  00109C  D7AF               	goto	l22672
  3493  00109E  0A01               	xorlw	1	; case 5
  3494  0010A0  B4D8               	btfsc	status,2,c
  3495  0010A2  D7BD               	goto	l22680
  3496  0010A4  0A03               	xorlw	3	; case 6
  3497  0010A6  B4D8               	btfsc	status,2,c
  3498  0010A8  D7CD               	goto	l22688
  3499  0010AA  D7DD               	goto	l3228
  3500  0010AC                     l22696:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;sm_MenuConfiguration_MC50.c: 137:     sm_send_event(&menuConfiguration_stateMachine, ev
      +                          _NULL);
  3504  0010AC  0EBF               	movlw	low _menuConfiguration_stateMachine
  3505  0010AE  6E12               	movwf	sm_send_event@psm^0,c
  3506  0010B0  0E02               	movlw	high _menuConfiguration_stateMachine
  3507  0010B2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3508  0010B4  0E00               	movlw	0
  3509  0010B6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3510  0010B8  0E00               	movlw	0
  3511  0010BA  6E14               	movwf	sm_send_event@event^0,c
  3512  0010BC  EC0E  F043         	call	_sm_send_event	;wreg free
  3513                           
  3514                           ;sm_MenuConfiguration_MC50.c: 142:     switch((sm_state_Menu_t) psm->current_state)
  3515  0010C0  D3BF               	goto	l23008
  3516  0010C2                     l22698:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;sm_MenuConfiguration_MC50.c: 145:         {;sm_MenuConfiguration_MC50.c: 146:          
      +                             if(var_sys.ProgrammingDistanceIs==TypeProgrammingModeFull)
  3520  0010C2  0E06               	movlw	6
  3521  0010C4  0101               	movlb	1	; () banked
  3522  0010C6  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3523  0010C8  A4D8               	btfss	status,2,c
  3524  0010CA  D02F               	goto	l22708
  3525                           
  3526                           ; BSR set to: 1
  3527                           ;sm_MenuConfiguration_MC50.c: 147:             {;sm_MenuConfiguration_MC50.c: 148:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3528  0010CC  0E00               	movlw	0
  3529  0010CE  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3530  0010D0  0EC8               	movlw	200
  3531  0010D2  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3532                           
  3533                           ;sm_MenuConfiguration_MC50.c: 149:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3534  0010D4  0E01               	movlw	1
  3535  0010D6  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3536                           
  3537                           ;sm_MenuConfiguration_MC50.c: 150:                 menu_st.parameterSelected=0;
  3538  0010D8  0E00               	movlw	0
  3539  0010DA  6F68               	movwf	(_menu_st+23)& (0+255),b
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;sm_MenuConfiguration_MC50.c: 151:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3543  0010DC  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3544  0010E0  5166               	movf	(_menu_st+21)& (0+255),w,b
  3545  0010E2  ECCA  F00F         	call	_setValueToEdit
  3546  0010E6  0900               	iorlw	0
  3547  0010E8  B4D8               	btfsc	status,2,c
  3548  0010EA  0012               	return	
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;sm_MenuConfiguration_MC50.c: 153:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3552  0010EC  0EBF               	movlw	low _menuConfiguration_stateMachine
  3553  0010EE  6E12               	movwf	sm_send_event@psm^0,c
  3554  0010F0  0E02               	movlw	high _menuConfiguration_stateMachine
  3555  0010F2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3556  0010F4  0E00               	movlw	0
  3557  0010F6  6E15               	movwf	(sm_send_event@event+1)^0,c
  3558  0010F8  0E08               	movlw	8
  3559  0010FA  6E14               	movwf	sm_send_event@event^0,c
  3560  0010FC  EC0E  F043         	call	_sm_send_event	;wreg free
  3561                           
  3562                           ;sm_MenuConfiguration_MC50.c: 154:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3563  001100  0E0A               	movlw	10
  3564  001102  6E10               	movwf	___lbdiv@divisor^0,c
  3565  001104  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3566  001106  ECF9  F046         	call	___lbdiv
  3567  00110A  0DF6               	mullw	246
  3568  00110C  50F3               	movf	243,w,c
  3569  00110E  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3570  001110  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3571  001112  0E00               	movlw	0
  3572  001114  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3573  001116  0E14               	movlw	20
  3574  001118  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3575  00111A  0E0A               	movlw	10
  3576  00111C  6E10               	movwf	___lbdiv@divisor^0,c
  3577  00111E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3578  001120  ECF9  F046         	call	___lbdiv
  3579  001124  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  3580  001128  0012               	return	
  3581  00112A                     l22708:
  3582                           
  3583                           ; BSR set to: 1
  3584  00112A  0E05               	movlw	5
  3585  00112C  193B               	xorwf	(_var_sys+59)& (0+255),w,b	;volatile
  3586  00112E  A4D8               	btfss	status,2,c
  3587  001130  D02F               	goto	l22718
  3588                           
  3589                           ; BSR set to: 1
  3590                           ;sm_MenuConfiguration_MC50.c: 158:             {;sm_MenuConfiguration_MC50.c: 159:      
      +                                     ts_system.timeoutMenu=10*(1000/50);
  3591  001132  0E00               	movlw	0
  3592  001134  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3593  001136  0EC8               	movlw	200
  3594  001138  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3595                           
  3596                           ;sm_MenuConfiguration_MC50.c: 160:                 var_sys.DistanceProgrammingActive=YES
      +                          ;
  3597  00113A  0E01               	movlw	1
  3598  00113C  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  3599                           
  3600                           ;sm_MenuConfiguration_MC50.c: 161:                 menu_st.parameterSelected=1;
  3601  00113E  0E01               	movlw	1
  3602  001140  6F68               	movwf	(_menu_st+23)& (0+255),b
  3603                           
  3604                           ; BSR set to: 1
  3605                           ;sm_MenuConfiguration_MC50.c: 162:                 if (setValueToEdit(menu_st.actualMenu
      +                          ,menu_st.parameterSelected)) {
  3606  001142  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3607  001146  5166               	movf	(_menu_st+21)& (0+255),w,b
  3608  001148  ECCA  F00F         	call	_setValueToEdit
  3609  00114C  0900               	iorlw	0
  3610  00114E  B4D8               	btfsc	status,2,c
  3611  001150  0012               	return	
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;sm_MenuConfiguration_MC50.c: 164:                      sm_send_event(&menuConfiguration
      +                          _stateMachine, ev_addRemotes);
  3615  001152  0EBF               	movlw	low _menuConfiguration_stateMachine
  3616  001154  6E12               	movwf	sm_send_event@psm^0,c
  3617  001156  0E02               	movlw	high _menuConfiguration_stateMachine
  3618  001158  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3619  00115A  0E00               	movlw	0
  3620  00115C  6E15               	movwf	(sm_send_event@event+1)^0,c
  3621  00115E  0E08               	movlw	8
  3622  001160  6E14               	movwf	sm_send_event@event^0,c
  3623  001162  EC0E  F043         	call	_sm_send_event	;wreg free
  3624                           
  3625                           ;sm_MenuConfiguration_MC50.c: 165:                      SetSegmentValueIntermitentMain(e
      +                          dit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50));
  3626  001166  0E0A               	movlw	10
  3627  001168  6E10               	movwf	___lbdiv@divisor^0,c
  3628  00116A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3629  00116C  ECF9  F046         	call	___lbdiv
  3630  001170  0DF6               	mullw	246
  3631  001172  50F3               	movf	243,w,c
  3632  001174  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3633  001176  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  3634  001178  0E00               	movlw	0
  3635  00117A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  3636  00117C  0E14               	movlw	20
  3637  00117E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  3638  001180  0E0A               	movlw	10
  3639  001182  6E10               	movwf	___lbdiv@divisor^0,c
  3640  001184  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3641  001186  ECF9  F046         	call	___lbdiv
  3642  00118A  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  3643                           
  3644                           ; BSR set to: 1
  3645                           ;sm_MenuConfiguration_MC50.c: 167:             }
  3646                           
  3647                           ;sm_MenuConfiguration_MC50.c: 166:                 }
  3648  00118E  0012               	return	
  3649  001190                     l22718:
  3650                           
  3651                           ; BSR set to: 1
  3652  001190  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3653  001192  A4D8               	btfss	status,2,c
  3654  001194  D023               	goto	l22730
  3655                           
  3656                           ; BSR set to: 1
  3657                           ;sm_MenuConfiguration_MC50.c: 169:             {;sm_MenuConfiguration_MC50.c: 170:      
      +                                     ts_system.timeoutMenu= ((1000/50)*5) ;
  3658  001196  0E00               	movlw	0
  3659  001198  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3660  00119A  0E64               	movlw	100
  3661  00119C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3662                           
  3663                           ;sm_MenuConfiguration_MC50.c: 171:                 if(menu_st.parameterSelected==0)
  3664  00119E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3665  0011A0  A4D8               	btfss	status,2,c
  3666  0011A2  D003               	goto	l22724
  3667                           
  3668                           ; BSR set to: 1
  3669                           ;sm_MenuConfiguration_MC50.c: 172:                 {;sm_MenuConfiguration_MC50.c: 173:  
      +                                             menu_st.parameterSelected=menu_st.menuSize-1;
  3670  0011A4  0567               	decf	(_menu_st+22)& (0+255),w,b
  3671  0011A6  6F68               	movwf	(_menu_st+23)& (0+255),b
  3672                           
  3673                           ;sm_MenuConfiguration_MC50.c: 174:                 }
  3674  0011A8  D001               	goto	l22726
  3675  0011AA                     l22724:
  3676                           
  3677                           ; BSR set to: 1
  3678                           ;sm_MenuConfiguration_MC50.c: 176:                 {;sm_MenuConfiguration_MC50.c: 177:  
      +                                             menu_st.parameterSelected--;
  3679  0011AA  0768               	decf	(_menu_st+23)& (0+255),f,b
  3680  0011AC                     l22726:
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;sm_MenuConfiguration_MC50.c: 179:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3684  0011AC  5168               	movf	(_menu_st+23)& (0+255),w,b
  3685  0011AE  0D02               	mullw	2
  3686  0011B0  0E52               	movlw	low (_menu_st+1)
  3687  0011B2  24F3               	addwf	243,w,c
  3688  0011B4  6ED9               	movwf	fsr2l,c
  3689  0011B6  0E01               	movlw	high (_menu_st+1)
  3690  0011B8  20F4               	addwfc	prodh,w,c
  3691  0011BA  6EDA               	movwf	fsr2h,c
  3692  0011BC  50DF               	movf	indf2,w,c
  3693  0011BE  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3694  0011C0  5168               	movf	(_menu_st+23)& (0+255),w,b
  3695  0011C2  0D02               	mullw	2
  3696  0011C4  0E51               	movlw	low _menu_st
  3697  0011C6  24F3               	addwf	243,w,c
  3698  0011C8  6ED9               	movwf	fsr2l,c
  3699  0011CA  0E01               	movlw	high _menu_st
  3700  0011CC  20F4               	addwfc	prodh,w,c
  3701  0011CE  6EDA               	movwf	fsr2h,c
  3702  0011D0  50DF               	movf	indf2,w,c
  3703  0011D2  EC03  F04A         	call	_SetSegmentValueMain
  3704  0011D6                     l22728:
  3705                           
  3706                           ;sm_MenuConfiguration_MC50.c: 180:                 button_struct.processed=1;
  3707  0011D6  0E01               	movlw	1
  3708  0011D8  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3709                           
  3710                           ;sm_MenuConfiguration_MC50.c: 181:             }
  3711  0011DA  0012               	return	
  3712  0011DC                     l22730:
  3713                           
  3714                           ; BSR set to: 1
  3715  0011DC  0E17               	movlw	23
  3716  0011DE  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3717  0011E0  A4D8               	btfss	status,2,c
  3718  0011E2  D021               	goto	l22744
  3719                           
  3720                           ; BSR set to: 1
  3721                           ;sm_MenuConfiguration_MC50.c: 183:             {;sm_MenuConfiguration_MC50.c: 184:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  3722  0011E4  0E00               	movlw	0
  3723  0011E6  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3724  0011E8  0E64               	movlw	100
  3725  0011EA  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3726                           
  3727                           ; BSR set to: 1
  3728                           ;sm_MenuConfiguration_MC50.c: 185:                 menu_st.parameterSelected++;
  3729  0011EC  2B68               	incf	(_menu_st+23)& (0+255),f,b
  3730                           
  3731                           ; BSR set to: 1
  3732                           ;sm_MenuConfiguration_MC50.c: 186:                 if(menu_st.parameterSelected>=menu_st
      +                          .menuSize)
  3733  0011EE  5167               	movf	(_menu_st+22)& (0+255),w,b
  3734  0011F0  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  3735  0011F2  A0D8               	btfss	status,0,c
  3736  0011F4  D002               	goto	l22740
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;sm_MenuConfiguration_MC50.c: 187:                 {;sm_MenuConfiguration_MC50.c: 188:  
      +                                             menu_st.parameterSelected=0;
  3740  0011F6  0E00               	movlw	0
  3741  0011F8  6F68               	movwf	(_menu_st+23)& (0+255),b
  3742  0011FA                     l22740:
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;sm_MenuConfiguration_MC50.c: 190:                 SetSegmentValueMain(menu_st.menuList[
      +                          menu_st.parameterSelected].value_display1, menu_st.menuList[menu_st.parameterSelected].v
      +                          alue_display2);
  3746  0011FA  5168               	movf	(_menu_st+23)& (0+255),w,b
  3747  0011FC  0D02               	mullw	2
  3748  0011FE  0E52               	movlw	low (_menu_st+1)
  3749  001200  24F3               	addwf	243,w,c
  3750  001202  6ED9               	movwf	fsr2l,c
  3751  001204  0E01               	movlw	high (_menu_st+1)
  3752  001206  20F4               	addwfc	prodh,w,c
  3753  001208  6EDA               	movwf	fsr2h,c
  3754  00120A  50DF               	movf	indf2,w,c
  3755  00120C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3756  00120E  5168               	movf	(_menu_st+23)& (0+255),w,b
  3757  001210  0D02               	mullw	2
  3758  001212  0E51               	movlw	low _menu_st
  3759  001214  24F3               	addwf	243,w,c
  3760  001216  6ED9               	movwf	fsr2l,c
  3761  001218  0E01               	movlw	high _menu_st
  3762  00121A  20F4               	addwfc	prodh,w,c
  3763  00121C  6EDA               	movwf	fsr2h,c
  3764  00121E  50DF               	movf	indf2,w,c
  3765  001220  EC03  F04A         	call	_SetSegmentValueMain
  3766  001224  D7D8               	goto	l22728
  3767  001226                     l22744:
  3768                           
  3769                           ; BSR set to: 1
  3770  001226  0E0C               	movlw	12
  3771  001228  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3772  00122A  D09A               	goto	l22800
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;sm_MenuConfiguration_MC50.c: 194:             {;sm_MenuConfiguration_MC50.c: 195:      
      +                                     if (button_struct.current==0 && button_struct.timer>(( 500/50)) )
  3776  00122C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3777  00122E  A4D8               	btfss	status,2,c
  3778  001230  D053               	goto	l22766
  3779                           
  3780                           ; BSR set to: 1
  3781  001232  0E0A               	movlw	10
  3782  001234  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  3783  001236  D050               	goto	l22766
  3784                           
  3785                           ; BSR set to: 1
  3786                           ;sm_MenuConfiguration_MC50.c: 196:                 {;sm_MenuConfiguration_MC50.c: 197:  
      +                                             ts_system.timeoutMenu=((1000/50)*5) ;
  3787  001238  0E00               	movlw	0
  3788  00123A  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3789  00123C  0E64               	movlw	100
  3790  00123E  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3791                           
  3792                           ; BSR set to: 1
  3793                           ;sm_MenuConfiguration_MC50.c: 199:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  3794  001240  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  3795  001244  5166               	movf	(_menu_st+21)& (0+255),w,b
  3796  001246  ECCA  F00F         	call	_setValueToEdit
  3797  00124A  0900               	iorlw	0
  3798  00124C  B4D8               	btfsc	status,2,c
  3799  00124E  D7C3               	goto	l22728
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;sm_MenuConfiguration_MC50.c: 200:                     {;sm_MenuConfiguration_MC50.c: 20
      +                          2:                          sm_send_event(&menuConfiguration_stateMachine, ev_ParameterI
      +                          sSelected);
  3803  001250  0EBF               	movlw	low _menuConfiguration_stateMachine
  3804  001252  6E12               	movwf	sm_send_event@psm^0,c
  3805  001254  0E02               	movlw	high _menuConfiguration_stateMachine
  3806  001256  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3807  001258  0E00               	movlw	0
  3808  00125A  6E15               	movwf	(sm_send_event@event+1)^0,c
  3809  00125C  0E01               	movlw	1
  3810  00125E  6E14               	movwf	sm_send_event@event^0,c
  3811  001260  EC0E  F043         	call	_sm_send_event	;wreg free
  3812                           
  3813                           ;sm_MenuConfiguration_MC50.c: 203:                          if((edit_Param.Value==(unsig
      +                          ned char*)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Dir
      +                          ection_motor)){
  3814  001264  0E98               	movlw	_var_sys_NVM& (0+255)
  3815  001266  0F1C               	addlw	28
  3816  001268  0100               	movlb	0	; () banked
  3817  00126A  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3818  00126C  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3819  00126E  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3820  001270  E101               	bnz	u27405
  3821  001272  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3822  001274                     u27405:
  3823  001274  B4D8               	btfsc	status,2,c
  3824  001276  D009               	goto	u27410
  3825                           
  3826                           ; BSR set to: 0
  3827  001278  0E98               	movlw	_var_sys_NVM& (0+255)
  3828  00127A  0F1B               	addlw	27
  3829  00127C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  3830  00127E  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  3831  001280  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  3832  001282  E101               	bnz	u27415
  3833  001284  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  3834  001286                     u27415:
  3835  001286  A4D8               	btfss	status,2,c
  3836  001288  D016               	goto	l22762
  3837  00128A                     u27410:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;sm_MenuConfiguration_MC50.c: 204:                            SetSegmentValueMain(menu_s
      +                          t.menuList[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].
      +                          value_display2);
  3841  00128A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3842  00128C  0D02               	mullw	2
  3843  00128E  0E52               	movlw	low (_menu_st+1)
  3844  001290  24F3               	addwf	243,w,c
  3845  001292  6ED9               	movwf	fsr2l,c
  3846  001294  0E01               	movlw	high (_menu_st+1)
  3847  001296  20F4               	addwfc	prodh,w,c
  3848  001298  6EDA               	movwf	fsr2h,c
  3849  00129A  50DF               	movf	indf2,w,c
  3850  00129C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3851  00129E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3852  0012A0  0D02               	mullw	2
  3853  0012A2  0E51               	movlw	low _menu_st
  3854  0012A4  24F3               	addwf	243,w,c
  3855  0012A6  6ED9               	movwf	fsr2l,c
  3856  0012A8  0E01               	movlw	high _menu_st
  3857  0012AA  20F4               	addwfc	prodh,w,c
  3858  0012AC  6EDA               	movwf	fsr2h,c
  3859  0012AE  50DF               	movf	indf2,w,c
  3860  0012B0  EC03  F04A         	call	_SetSegmentValueMain
  3861                           
  3862                           ;sm_MenuConfiguration_MC50.c: 206:                          }
  3863  0012B4  D790               	goto	l22728
  3864  0012B6                     l22762:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;sm_MenuConfiguration_MC50.c: 208:                          SetSegmentValueMain(edit_Par
      +                          am.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  3868  0012B6  0E0A               	movlw	10
  3869  0012B8  6E10               	movwf	___lbdiv@divisor^0,c
  3870  0012BA  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3871  0012BC  ECF9  F046         	call	___lbdiv
  3872  0012C0  0DF6               	mullw	246
  3873  0012C2  50F3               	movf	243,w,c
  3874  0012C4  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  3875  0012C6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3876  0012C8  0E0A               	movlw	10
  3877  0012CA  6E10               	movwf	___lbdiv@divisor^0,c
  3878  0012CC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  3879  0012CE  ECF9  F046         	call	___lbdiv
  3880  0012D2  EC03  F04A         	call	_SetSegmentValueMain
  3881  0012D6  D77F               	goto	l22728
  3882  0012D8                     l22766:
  3883                           
  3884                           ; BSR set to: 1
  3885  0012D8  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3886  0012DA  D008               	goto	u27430
  3887  0012DC  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3888  0012DE  E103               	bnz	u27420
  3889  0012E0  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3890  0012E2  A0D8               	btfss	status,0,c
  3891  0012E4  D003               	goto	u27430
  3892  0012E6                     u27420:
  3893                           
  3894                           ; BSR set to: 1
  3895  0012E6  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3896  0012E8  A4D8               	btfss	status,2,c
  3897  0012EA  D01E               	goto	l22784
  3898  0012EC                     u27430:
  3899                           
  3900                           ; BSR set to: 1
  3901  0012EC  0E02               	movlw	2
  3902  0012EE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  3903  0012F0  D01B               	goto	l22784
  3904                           
  3905                           ; BSR set to: 1
  3906                           ;sm_MenuConfiguration_MC50.c: 216:                 {;sm_MenuConfiguration_MC50.c: 217:  
      +                                             ts_system.timeoutMenu=0;
  3907  0012F2  0E00               	movlw	0
  3908  0012F4  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  3909  0012F6  0E00               	movlw	0
  3910  0012F8  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;sm_MenuConfiguration_MC50.c: 218:                     sm_send_event(&main_stateMachine,
      +                           ev_goto_StandBy);
  3914  0012FA  0EEE               	movlw	low _main_stateMachine
  3915  0012FC  6E12               	movwf	sm_send_event@psm^0,c
  3916  0012FE  0E01               	movlw	high _main_stateMachine
  3917  001300  6E13               	movwf	(sm_send_event@psm+1)^0,c
  3918  001302  0E00               	movlw	0
  3919  001304  6E15               	movwf	(sm_send_event@event+1)^0,c
  3920  001306  0E07               	movlw	7
  3921  001308  6E14               	movwf	sm_send_event@event^0,c
  3922  00130A  EC0E  F043         	call	_sm_send_event	;wreg free
  3923                           
  3924                           ;sm_MenuConfiguration_MC50.c: 219:                     SetSegmentValueMain(dMinus,dMinus
      +                          );
  3925  00130E  0E18               	movlw	24
  3926  001310  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  3927  001312  0E18               	movlw	24
  3928  001314  EC03  F04A         	call	_SetSegmentValueMain
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;sm_MenuConfiguration_MC50.c: 220:                     menu_st.lastMainParameterSelected
      +                           = 0;
  3932  001318  0E00               	movlw	0
  3933  00131A  0101               	movlb	1	; () banked
  3934  00131C  6F69               	movwf	(_menu_st+24)& (0+255),b
  3935                           
  3936                           ; BSR set to: 1
  3937                           ;sm_MenuConfiguration_MC50.c: 221:                     button_struct.processed=1;
  3938  00131E  0E01               	movlw	1
  3939  001320  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  3940                           
  3941                           ; BSR set to: 1
  3942                           ;sm_MenuConfiguration_MC50.c: 222:                     ClearFlag_rfCMD();
  3943  001322  EC54  F04B         	call	_ClearFlag_rfCMD	;wreg free
  3944                           
  3945                           ;sm_MenuConfiguration_MC50.c: 224:                 }
  3946  001326  0012               	return	
  3947  001328                     l22784:
  3948                           
  3949                           ; BSR set to: 1
  3950  001328  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3951  00132A  D008               	goto	u27460
  3952  00132C  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3953  00132E  E103               	bnz	u27450
  3954  001330  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3955  001332  A0D8               	btfss	status,0,c
  3956  001334  D003               	goto	u27460
  3957  001336                     u27450:
  3958                           
  3959                           ; BSR set to: 1
  3960  001336  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  3961  001338  A4D8               	btfss	status,2,c
  3962  00133A  D004               	goto	l22792
  3963  00133C                     u27460:
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;sm_MenuConfiguration_MC50.c: 226:                 {;sm_MenuConfiguration_MC50.c: 228:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3967  00133C  5165               	movf	(_menu_st+20)& (0+255),w,b
  3968  00133E  ECCA  F020         	call	_load_New_Menu
  3969  001342  D749               	goto	l22728
  3970  001344                     l22792:
  3971                           
  3972                           ; BSR set to: 1
  3973  001344  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  3974  001346  D005               	goto	u27470
  3975  001348  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  3976  00134A  E102               	bnz	u27471
  3977  00134C  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  3978  00134E  B0D8               	btfsc	status,0,c
  3979  001350                     u27471:
  3980  001350  0012               	return	
  3981  001352                     u27470:
  3982                           
  3983                           ; BSR set to: 1
  3984  001352  0E01               	movlw	1
  3985  001354  6566               	cpfsgt	(_menu_st+21)& (0+255),b
  3986  001356  0012               	return	
  3987                           
  3988                           ; BSR set to: 1
  3989                           ;sm_MenuConfiguration_MC50.c: 232:                 {;sm_MenuConfiguration_MC50.c: 234:  
      +                                             load_New_Menu(menu_st.lastMenu);
  3990  001358  5165               	movf	(_menu_st+20)& (0+255),w,b
  3991  00135A  ECCA  F020         	call	_load_New_Menu
  3992  00135E  D73B               	goto	l22728
  3993  001360                     l22800:
  3994                           
  3995                           ; BSR set to: 1
  3996  001360  0E27               	movlw	39
  3997  001362  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  3998  001364  A4D8               	btfss	status,2,c
  3999  001366  D032               	goto	l22816
  4000                           
  4001                           ; BSR set to: 1
  4002  001368  0E0A               	movlw	10
  4003  00136A  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4004  00136C  D02F               	goto	l22816
  4005                           
  4006                           ; BSR set to: 1
  4007  00136E  0E0D               	movlw	13
  4008  001370  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4009  001372  B4D8               	btfsc	status,2,c
  4010  001374  D02B               	goto	l22816
  4011                           
  4012                           ; BSR set to: 1
  4013                           ;sm_MenuConfiguration_MC50.c: 239:             {;sm_MenuConfiguration_MC50.c: 240:      
      +                                         ts_system.timeoutMenu=((1000/50)*5);
  4014  001376  0E00               	movlw	0
  4015  001378  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4016  00137A  0E64               	movlw	100
  4017  00137C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4018                           
  4019                           ; BSR set to: 1
  4020                           ;sm_MenuConfiguration_MC50.c: 241:                     if (setValueToEdit(menu_st.actual
      +                          Menu,menu_st.parameterSelected))
  4021  00137E  C168  F03A         	movff	_menu_st+23,setValueToEdit@ParameterSelected
  4022  001382  5166               	movf	(_menu_st+21)& (0+255),w,b
  4023  001384  ECCA  F00F         	call	_setValueToEdit
  4024  001388  0900               	iorlw	0
  4025  00138A  B4D8               	btfsc	status,2,c
  4026  00138C  D724               	goto	l22728
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;sm_MenuConfiguration_MC50.c: 243:                     {;sm_MenuConfiguration_MC50.c: 24
      +                          4:                         sm_send_event(&menuConfiguration_stateMachine, ev_addRemotes)
      +                          ;
  4030  00138E  0EBF               	movlw	low _menuConfiguration_stateMachine
  4031  001390  6E12               	movwf	sm_send_event@psm^0,c
  4032  001392  0E02               	movlw	high _menuConfiguration_stateMachine
  4033  001394  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4034  001396  0E00               	movlw	0
  4035  001398  6E15               	movwf	(sm_send_event@event+1)^0,c
  4036  00139A  0E08               	movlw	8
  4037  00139C  6E14               	movwf	sm_send_event@event^0,c
  4038  00139E  EC0E  F043         	call	_sm_send_event	;wreg free
  4039                           
  4040                           ;sm_MenuConfiguration_MC50.c: 245:                         SetSegmentValueIntermitentMai
      +                          n(edit_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),(1000/50)
      +                          );
  4041  0013A2  0E0A               	movlw	10
  4042  0013A4  6E10               	movwf	___lbdiv@divisor^0,c
  4043  0013A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4044  0013A8  ECF9  F046         	call	___lbdiv
  4045  0013AC  0DF6               	mullw	246
  4046  0013AE  50F3               	movf	243,w,c
  4047  0013B0  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4048  0013B2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4049  0013B4  0E00               	movlw	0
  4050  0013B6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4051  0013B8  0E14               	movlw	20
  4052  0013BA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4053  0013BC  0E0A               	movlw	10
  4054  0013BE  6E10               	movwf	___lbdiv@divisor^0,c
  4055  0013C0  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4056  0013C2  ECF9  F046         	call	___lbdiv
  4057  0013C6  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  4058  0013CA  D705               	goto	l22728
  4059  0013CC                     l22816:
  4060                           
  4061                           ; BSR set to: 1
  4062  0013CC  0E0D               	movlw	13
  4063  0013CE  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4064  0013D0  A4D8               	btfss	status,2,c
  4065  0013D2  D027               	goto	l22834
  4066                           
  4067                           ; BSR set to: 1
  4068  0013D4  51A7               	movf	(_ts_system+12)& (0+255),w,b	;volatile
  4069  0013D6  11A8               	iorwf	(_ts_system+13)& (0+255),w,b	;volatile
  4070  0013D8  A4D8               	btfss	status,2,c
  4071  0013DA  D023               	goto	l22834
  4072                           
  4073                           ; BSR set to: 1
  4074                           ;sm_MenuConfiguration_MC50.c: 250:             {;sm_MenuConfiguration_MC50.c: 251:      
      +                                     var_sys_NVM.positionRemotesFull=0;
  4075  0013DC  0E00               	movlw	0
  4076  0013DE  0100               	movlb	0	; () banked
  4077  0013E0  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
  4078                           
  4079                           ;sm_MenuConfiguration_MC50.c: 252:                 var_sys_NVM.positionRemotesWalk=0;
  4080  0013E2  0E00               	movlw	0
  4081  0013E4  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
  4082                           
  4083                           ;sm_MenuConfiguration_MC50.c: 253:                 var_sys_NVM.OnlyRollingCode=NO;
  4084  0013E6  0E00               	movlw	0
  4085  0013E8  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;sm_MenuConfiguration_MC50.c: 254:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4089  0013EA  0E02               	movlw	2
  4090  0013EC  EC16  F047         	call	_SaveNVM_VarSystem
  4091                           
  4092                           ;sm_MenuConfiguration_MC50.c: 255:                 sm_send_event(&main_stateMachine, ev_
      +                          goto_StandBy);
  4093  0013F0  0EEE               	movlw	low _main_stateMachine
  4094  0013F2  6E12               	movwf	sm_send_event@psm^0,c
  4095  0013F4  0E01               	movlw	high _main_stateMachine
  4096  0013F6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4097  0013F8  0E00               	movlw	0
  4098  0013FA  6E15               	movwf	(sm_send_event@event+1)^0,c
  4099  0013FC  0E07               	movlw	7
  4100  0013FE  6E14               	movwf	sm_send_event@event^0,c
  4101  001400  EC0E  F043         	call	_sm_send_event	;wreg free
  4102                           
  4103                           ;sm_MenuConfiguration_MC50.c: 256:                 SetSegmentValueMain(dMinus,dMinus);
  4104  001404  0E18               	movlw	24
  4105  001406  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4106  001408  0E18               	movlw	24
  4107  00140A  EC03  F04A         	call	_SetSegmentValueMain
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;sm_MenuConfiguration_MC50.c: 257:                 button_struct.processed=1;
  4111  00140E  0E01               	movlw	1
  4112  001410  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4113  001412                     l22830:
  4114                           
  4115                           ;sm_MenuConfiguration_MC50.c: 258:                 ClearFlag_rfCMD();
  4116  001412  EC54  F04B         	call	_ClearFlag_rfCMD	;wreg free
  4117  001416                     l22832:
  4118                           
  4119                           ;sm_MenuConfiguration_MC50.c: 259:                  ts_system.timeoutMenu=0;
  4120  001416  0E00               	movlw	0
  4121  001418  0101               	movlb	1	; () banked
  4122  00141A  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4123  00141C  0E00               	movlw	0
  4124  00141E  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4125                           
  4126                           ;sm_MenuConfiguration_MC50.c: 260:             }
  4127  001420  0012               	return	
  4128  001422                     l22834:
  4129                           
  4130                           ; BSR set to: 1
  4131  001422  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4132  001424  D008               	goto	u27560
  4133  001426  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4134  001428  E103               	bnz	u27550
  4135  00142A  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4136  00142C  A0D8               	btfss	status,0,c
  4137  00142E  D003               	goto	u27560
  4138  001430                     u27550:
  4139                           
  4140                           ; BSR set to: 1
  4141  001430  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4142  001432  A4D8               	btfss	status,2,c
  4143  001434  0012               	return	
  4144  001436                     u27560:
  4145                           
  4146                           ; BSR set to: 1
  4147                           ;sm_MenuConfiguration_MC50.c: 262:             {;sm_MenuConfiguration_MC50.c: 263:      
      +                                      sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4148  001436  0EEE               	movlw	low _main_stateMachine
  4149  001438  6E12               	movwf	sm_send_event@psm^0,c
  4150  00143A  0E01               	movlw	high _main_stateMachine
  4151  00143C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4152  00143E  0E00               	movlw	0
  4153  001440  6E15               	movwf	(sm_send_event@event+1)^0,c
  4154  001442  0E07               	movlw	7
  4155  001444  6E14               	movwf	sm_send_event@event^0,c
  4156  001446  EC0E  F043         	call	_sm_send_event	;wreg free
  4157                           
  4158                           ;sm_MenuConfiguration_MC50.c: 264:                  SetSegmentValueMain(dMinus,dMinus);
  4159  00144A  0E18               	movlw	24
  4160  00144C  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4161  00144E  0E18               	movlw	24
  4162  001450  EC03  F04A         	call	_SetSegmentValueMain
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;sm_MenuConfiguration_MC50.c: 265:                  ClearFlag_rfCMD();
  4166  001454  EC54  F04B         	call	_ClearFlag_rfCMD	;wreg free
  4167                           
  4168                           ;sm_MenuConfiguration_MC50.c: 266:                  button_struct.processed=1;
  4169  001458  0E01               	movlw	1
  4170  00145A  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  4171  00145C  D7DC               	goto	l22832
  4172  00145E                     l22848:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;sm_MenuConfiguration_MC50.c: 272:         {;sm_MenuConfiguration_MC50.c: 273:          
      +                             if (button_struct.current==0x00)
  4176  00145E  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4177  001460  A4D8               	btfss	status,2,c
  4178  001462  D047               	goto	l22868
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;sm_MenuConfiguration_MC50.c: 274:             {;sm_MenuConfiguration_MC50.c: 275:      
      +                                     ts_system.timeoutMenu=((1000/50)*5);
  4182  001464  0E00               	movlw	0
  4183  001466  0101               	movlb	1	; () banked
  4184  001468  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4185  00146A  0E64               	movlw	100
  4186  00146C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4187                           
  4188                           ; BSR set to: 1
  4189                           ;sm_MenuConfiguration_MC50.c: 276:                 if(edit_Param.tempValue<=edit_Param.M
      +                          in)
  4190  00146E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4191  001470  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  4192  001472  A0D8               	btfss	status,0,c
  4193  001474  D003               	goto	l22856
  4194                           
  4195                           ; BSR set to: 1
  4196                           ;sm_MenuConfiguration_MC50.c: 277:                 {;sm_MenuConfiguration_MC50.c: 278:  
      +                                             edit_Param.tempValue=edit_Param.Max;
  4197  001476  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  4198                           
  4199                           ;sm_MenuConfiguration_MC50.c: 279:                 }
  4200  00147A  D001               	goto	l22858
  4201  00147C                     l22856:
  4202                           
  4203                           ; BSR set to: 1
  4204                           ;sm_MenuConfiguration_MC50.c: 281:                 {;sm_MenuConfiguration_MC50.c: 282:  
      +                                             edit_Param.tempValue--;
  4205  00147C  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  4206  00147E                     l22858:
  4207                           
  4208                           ; BSR set to: 1
  4209                           ;sm_MenuConfiguration_MC50.c: 284:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4210  00147E  0E98               	movlw	_var_sys_NVM& (0+255)
  4211  001480  0F1C               	addlw	28
  4212  001482  0100               	movlb	0	; () banked
  4213  001484  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4214  001486  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4215  001488  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4216  00148A  E101               	bnz	u27595
  4217  00148C  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4218  00148E                     u27595:
  4219  00148E  B4D8               	btfsc	status,2,c
  4220  001490  D009               	goto	u27600
  4221                           
  4222                           ; BSR set to: 0
  4223  001492  0E98               	movlw	_var_sys_NVM& (0+255)
  4224  001494  0F1B               	addlw	27
  4225  001496  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4226  001498  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4227  00149A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4228  00149C  E101               	bnz	u27605
  4229  00149E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4230  0014A0                     u27605:
  4231  0014A0  A4D8               	btfss	status,2,c
  4232  0014A2  D016               	goto	l22864
  4233  0014A4                     u27600:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;sm_MenuConfiguration_MC50.c: 285:                 SetSegmentValueMain(menu_st.menuList[
      +                          edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_displ
      +                          ay2);
  4237  0014A4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4238  0014A6  0D02               	mullw	2
  4239  0014A8  0E52               	movlw	low (_menu_st+1)
  4240  0014AA  24F3               	addwf	243,w,c
  4241  0014AC  6ED9               	movwf	fsr2l,c
  4242  0014AE  0E01               	movlw	high (_menu_st+1)
  4243  0014B0  20F4               	addwfc	prodh,w,c
  4244  0014B2  6EDA               	movwf	fsr2h,c
  4245  0014B4  50DF               	movf	indf2,w,c
  4246  0014B6  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4247  0014B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4248  0014BA  0D02               	mullw	2
  4249  0014BC  0E51               	movlw	low _menu_st
  4250  0014BE  24F3               	addwf	243,w,c
  4251  0014C0  6ED9               	movwf	fsr2l,c
  4252  0014C2  0E01               	movlw	high _menu_st
  4253  0014C4  20F4               	addwfc	prodh,w,c
  4254  0014C6  6EDA               	movwf	fsr2h,c
  4255  0014C8  50DF               	movf	indf2,w,c
  4256  0014CA  EC03  F04A         	call	_SetSegmentValueMain
  4257                           
  4258                           ;sm_MenuConfiguration_MC50.c: 286:                 }
  4259  0014CE  D683               	goto	l22728
  4260  0014D0                     l22864:
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;sm_MenuConfiguration_MC50.c: 289:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4264  0014D0  0E0A               	movlw	10
  4265  0014D2  6E10               	movwf	___lbdiv@divisor^0,c
  4266  0014D4  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4267  0014D6  ECF9  F046         	call	___lbdiv
  4268  0014DA  0DF6               	mullw	246
  4269  0014DC  50F3               	movf	243,w,c
  4270  0014DE  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4271  0014E0  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4272  0014E2  0E0A               	movlw	10
  4273  0014E4  6E10               	movwf	___lbdiv@divisor^0,c
  4274  0014E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4275  0014E8  ECF9  F046         	call	___lbdiv
  4276  0014EC  EC03  F04A         	call	_SetSegmentValueMain
  4277  0014F0  D672               	goto	l22728
  4278  0014F2                     l22868:
  4279                           
  4280                           ; BSR set to: 0
  4281  0014F2  0E17               	movlw	23
  4282  0014F4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  4283  0014F6  A4D8               	btfss	status,2,c
  4284  0014F8  D045               	goto	l22888
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;sm_MenuConfiguration_MC50.c: 294:             {;sm_MenuConfiguration_MC50.c: 295:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4288  0014FA  0E00               	movlw	0
  4289  0014FC  0101               	movlb	1	; () banked
  4290  0014FE  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4291  001500  0E64               	movlw	100
  4292  001502  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4293                           
  4294                           ; BSR set to: 1
  4295                           ;sm_MenuConfiguration_MC50.c: 296:                 edit_Param.tempValue++;
  4296  001504  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;sm_MenuConfiguration_MC50.c: 297:                 if(edit_Param.tempValue>edit_Param.Ma
      +                          x)
  4300  001506  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4301  001508  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  4302  00150A  A0D8               	btfss	status,0,c
  4303                           
  4304                           ; BSR set to: 1
  4305                           ;sm_MenuConfiguration_MC50.c: 298:                 {;sm_MenuConfiguration_MC50.c: 299:  
      +                                              edit_Param.tempValue=edit_Param.Min;
  4306  00150C  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  4307                           
  4308                           ; BSR set to: 1
  4309                           ;sm_MenuConfiguration_MC50.c: 301:                 if ((edit_Param.Value==(unsigned char
      +                          *)&var_sys_NVM.TypeofMotor)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.Direction_m
      +                          otor)){
  4310  001510  0E98               	movlw	_var_sys_NVM& (0+255)
  4311  001512  0F1C               	addlw	28
  4312  001514  0100               	movlb	0	; () banked
  4313  001516  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4314  001518  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4315  00151A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4316  00151C  E101               	bnz	u27635
  4317  00151E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4318  001520                     u27635:
  4319  001520  B4D8               	btfsc	status,2,c
  4320  001522  D009               	goto	u27640
  4321                           
  4322                           ; BSR set to: 0
  4323  001524  0E98               	movlw	_var_sys_NVM& (0+255)
  4324  001526  0F1B               	addlw	27
  4325  001528  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4326  00152A  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4327  00152C  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4328  00152E  E101               	bnz	u27645
  4329  001530  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4330  001532                     u27645:
  4331  001532  A4D8               	btfss	status,2,c
  4332  001534  D016               	goto	l22884
  4333  001536                     u27640:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;sm_MenuConfiguration_MC50.c: 302:                     SetSegmentValueMain(menu_st.menuL
      +                          ist[edit_Param.tempValue].value_display1, menu_st.menuList[edit_Param.tempValue].value_d
      +                          isplay2);
  4337  001536  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4338  001538  0D02               	mullw	2
  4339  00153A  0E52               	movlw	low (_menu_st+1)
  4340  00153C  24F3               	addwf	243,w,c
  4341  00153E  6ED9               	movwf	fsr2l,c
  4342  001540  0E01               	movlw	high (_menu_st+1)
  4343  001542  20F4               	addwfc	prodh,w,c
  4344  001544  6EDA               	movwf	fsr2h,c
  4345  001546  50DF               	movf	indf2,w,c
  4346  001548  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4347  00154A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4348  00154C  0D02               	mullw	2
  4349  00154E  0E51               	movlw	low _menu_st
  4350  001550  24F3               	addwf	243,w,c
  4351  001552  6ED9               	movwf	fsr2l,c
  4352  001554  0E01               	movlw	high _menu_st
  4353  001556  20F4               	addwfc	prodh,w,c
  4354  001558  6EDA               	movwf	fsr2h,c
  4355  00155A  50DF               	movf	indf2,w,c
  4356  00155C  EC03  F04A         	call	_SetSegmentValueMain
  4357                           
  4358                           ;sm_MenuConfiguration_MC50.c: 303:                 }
  4359  001560  D63A               	goto	l22728
  4360  001562                     l22884:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;sm_MenuConfiguration_MC50.c: 306:                 SetSegmentValueMain(edit_Param.tempVa
      +                          lue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10));
  4364  001562  0E0A               	movlw	10
  4365  001564  6E10               	movwf	___lbdiv@divisor^0,c
  4366  001566  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4367  001568  ECF9  F046         	call	___lbdiv
  4368  00156C  0DF6               	mullw	246
  4369  00156E  50F3               	movf	243,w,c
  4370  001570  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4371  001572  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4372  001574  0E0A               	movlw	10
  4373  001576  6E10               	movwf	___lbdiv@divisor^0,c
  4374  001578  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4375  00157A  ECF9  F046         	call	___lbdiv
  4376  00157E  EC03  F04A         	call	_SetSegmentValueMain
  4377  001582  D629               	goto	l22728
  4378  001584                     l22888:
  4379                           
  4380                           ; BSR set to: 0
  4381  001584  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4382  001586  A4D8               	btfss	status,2,c
  4383  001588  D023               	goto	l22904
  4384                           
  4385                           ; BSR set to: 0
  4386  00158A  0E09               	movlw	9
  4387  00158C  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  4388  00158E  D020               	goto	l22904
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;sm_MenuConfiguration_MC50.c: 312:             {;sm_MenuConfiguration_MC50.c: 313:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4392  001590  0E00               	movlw	0
  4393  001592  0101               	movlb	1	; () banked
  4394  001594  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4395  001596  0E64               	movlw	100
  4396  001598  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4397                           
  4398                           ; BSR set to: 1
  4399                           ;sm_MenuConfiguration_MC50.c: 315:                 edit_Param.Value[0]=edit_Param.tempVa
      +                          lue;
  4400  00159A  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4401  00159E  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4402  0015A2  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;sm_MenuConfiguration_MC50.c: 316:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsEdited);
  4406  0015A6  0EBF               	movlw	low _menuConfiguration_stateMachine
  4407  0015A8  6E12               	movwf	sm_send_event@psm^0,c
  4408  0015AA  0E02               	movlw	high _menuConfiguration_stateMachine
  4409  0015AC  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4410  0015AE  0E00               	movlw	0
  4411  0015B0  6E15               	movwf	(sm_send_event@event+1)^0,c
  4412  0015B2  0E02               	movlw	2
  4413  0015B4  6E14               	movwf	sm_send_event@event^0,c
  4414  0015B6  EC0E  F043         	call	_sm_send_event	;wreg free
  4415                           
  4416                           ;sm_MenuConfiguration_MC50.c: 317:                 SetSegmentValueMain(dBar,d1);
  4417  0015BA  0E01               	movlw	1
  4418  0015BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4419  0015BE  0E19               	movlw	25
  4420  0015C0  EC03  F04A         	call	_SetSegmentValueMain
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;sm_MenuConfiguration_MC50.c: 318:                 ts_system.timeSinalizationDigit=((100
      +                          0/50)*2);
  4424  0015C4  0E00               	movlw	0
  4425  0015C6  0101               	movlb	1	; () banked
  4426  0015C8  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  4427  0015CA  0E28               	movlw	40
  4428  0015CC  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  4429  0015CE  D603               	goto	l22728
  4430  0015D0                     l22904:
  4431                           
  4432                           ; BSR set to: 0
  4433  0015D0  0101               	movlb	1	; () banked
  4434  0015D2  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4435  0015D4  D008               	goto	u27680
  4436  0015D6  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4437  0015D8  E103               	bnz	u27670
  4438  0015DA  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4439  0015DC  A0D8               	btfss	status,0,c
  4440  0015DE  D003               	goto	u27680
  4441  0015E0                     u27670:
  4442                           
  4443                           ; BSR set to: 1
  4444  0015E0  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  4445  0015E2  A4D8               	btfss	status,2,c
  4446  0015E4  0012               	return	
  4447  0015E6                     u27680:
  4448                           
  4449                           ; BSR set to: 1
  4450                           ;sm_MenuConfiguration_MC50.c: 323:             {;sm_MenuConfiguration_MC50.c: 324:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4451  0015E6  0E00               	movlw	0
  4452  0015E8  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4453  0015EA  0E64               	movlw	100
  4454  0015EC  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4455                           
  4456                           ; BSR set to: 1
  4457                           ;sm_MenuConfiguration_MC50.c: 325:                 load_New_Menu(menu_st.actualMenu);
  4458  0015EE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4459  0015F0  ECCA  F020         	call	_load_New_Menu
  4460                           
  4461                           ;sm_MenuConfiguration_MC50.c: 326:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_CancelEdition);
  4462  0015F4  0EBF               	movlw	low _menuConfiguration_stateMachine
  4463  0015F6  6E12               	movwf	sm_send_event@psm^0,c
  4464  0015F8  0E02               	movlw	high _menuConfiguration_stateMachine
  4465  0015FA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4466  0015FC  0E00               	movlw	0
  4467  0015FE  6E15               	movwf	(sm_send_event@event+1)^0,c
  4468  001600  0E03               	movlw	3
  4469  001602  6E14               	movwf	sm_send_event@event^0,c
  4470  001604  EC0E  F043         	call	_sm_send_event	;wreg free
  4471  001608  D5E6               	goto	l22728
  4472  00160A                     l22916:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;sm_MenuConfiguration_MC50.c: 332:         {;sm_MenuConfiguration_MC50.c: 333:          
      +                             if (ts_system.timeSinalizationDigit<=0)
  4476  00160A  0101               	movlb	1	; () banked
  4477  00160C  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  4478  00160E  D005               	goto	u27690
  4479  001610  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  4480  001612  E102               	bnz	u27691
  4481  001614  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  4482  001616  B0D8               	btfsc	status,0,c
  4483  001618                     u27691:
  4484  001618  0012               	return	
  4485  00161A                     u27690:
  4486                           
  4487                           ; BSR set to: 1
  4488                           ;sm_MenuConfiguration_MC50.c: 334:             {;sm_MenuConfiguration_MC50.c: 335:      
      +                                     ts_system.timeoutMenu=((1000/50)*5) ;
  4489  00161A  0E00               	movlw	0
  4490  00161C  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4491  00161E  0E64               	movlw	100
  4492  001620  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;sm_MenuConfiguration_MC50.c: 337:                 if((menu_st.actualMenu==E_Menu && men
      +                          u_st.parameterSelected==8)||(edit_Param.Value==(unsigned char*)&var_sys_NVM.TypeofMotor)
      +                          )
  4496  001622  0566               	decf	(_menu_st+21)& (0+255),w,b
  4497  001624  A4D8               	btfss	status,2,c
  4498  001626  D004               	goto	u27710
  4499                           
  4500                           ; BSR set to: 1
  4501  001628  0E08               	movlw	8
  4502  00162A  1968               	xorwf	(_menu_st+23)& (0+255),w,b
  4503  00162C  B4D8               	btfsc	status,2,c
  4504  00162E  D00A               	goto	u27720
  4505  001630                     u27710:
  4506                           
  4507                           ; BSR set to: 1
  4508  001630  0E98               	movlw	_var_sys_NVM& (0+255)
  4509  001632  0F1C               	addlw	28
  4510  001634  0100               	movlb	0	; () banked
  4511  001636  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4512  001638  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4513  00163A  1847               	xorwf	(_edit_Param+1)^0,w,c	;volatile
  4514  00163C  E101               	bnz	u27725
  4515  00163E  5248               	movf	(_edit_Param+2)^0,f,c	;volatile
  4516  001640                     u27725:
  4517  001640  A4D8               	btfss	status,2,c
  4518  001642  D005               	goto	l22928
  4519  001644                     u27720:
  4520                           
  4521                           ;sm_MenuConfiguration_MC50.c: 338:                 {;sm_MenuConfiguration_MC50.c: 341:  
      +                                             ResetDefaultMemory(var_sys_NVM.TypeofMotor);
  4522  001644  0100               	movlb	0	; () banked
  4523  001646  51B4               	movf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
  4524  001648  ECFC  F02F         	call	_ResetDefaultMemory
  4525                           
  4526                           ;sm_MenuConfiguration_MC50.c: 343:                 }
  4527  00164C  D023               	goto	l22946
  4528  00164E                     l22928:
  4529                           
  4530                           ; BSR set to: 0
  4531  00164E  0101               	movlb	1	; () banked
  4532  001650  0566               	decf	(_menu_st+21)& (0+255),w,b
  4533  001652  B4D8               	btfsc	status,2,c
  4534  001654  D004               	goto	u27740
  4535                           
  4536                           ; BSR set to: 1
  4537  001656  0E0A               	movlw	10
  4538  001658  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4539  00165A  A4D8               	btfss	status,2,c
  4540  00165C  D004               	goto	l22934
  4541  00165E                     u27740:
  4542                           
  4543                           ; BSR set to: 1
  4544                           ;sm_MenuConfiguration_MC50.c: 345:                 {;sm_MenuConfiguration_MC50.c: 346:  
      +                                             SaveNVM_VarSystem(pageMemoryE);
  4545  00165E  0E01               	movlw	1
  4546  001660  EC16  F047         	call	_SaveNVM_VarSystem
  4547                           
  4548                           ;sm_MenuConfiguration_MC50.c: 347:                 }
  4549  001664  D017               	goto	l22946
  4550  001666                     l22934:
  4551                           
  4552                           ; BSR set to: 1
  4553                           ;sm_MenuConfiguration_MC50.c: 349:                 {;sm_MenuConfiguration_MC50.c: 350:  
      +                                             if (menu_st.parameterSelected == 1 && edit_Param.Value[0] >=1 && menu
      +                          _st.actualMenu == P2_SMenu )
  4554  001666  0568               	decf	(_menu_st+23)& (0+255),w,b
  4555  001668  A4D8               	btfss	status,2,c
  4556  00166A  D00E               	goto	l22942
  4557                           
  4558                           ; BSR set to: 1
  4559  00166C  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  4560  001670  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  4561  001674  50DF               	movf	indf2,w,c
  4562  001676  B4D8               	btfsc	status,2,c
  4563  001678  D007               	goto	l22942
  4564                           
  4565                           ; BSR set to: 1
  4566  00167A  0E06               	movlw	6
  4567  00167C  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  4568  00167E  A4D8               	btfss	status,2,c
  4569  001680  D003               	goto	l22942
  4570                           
  4571                           ; BSR set to: 1
  4572                           ;sm_MenuConfiguration_MC50.c: 351:                     {;sm_MenuConfiguration_MC50.c: 35
      +                          2:                       var_sys_NVM.motorPower = 9;
  4573  001682  0E09               	movlw	9
  4574  001684  0100               	movlb	0	; () banked
  4575  001686  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
  4576  001688                     l22942:
  4577                           
  4578                           ;sm_MenuConfiguration_MC50.c: 355:                       SaveNVM_VarSystem(pageMemoryE);
  4579  001688  0E01               	movlw	1
  4580  00168A  EC16  F047         	call	_SaveNVM_VarSystem
  4581                           
  4582                           ;sm_MenuConfiguration_MC50.c: 356:                       SaveNVM_VarSystem(pageMemoryP);
  4583  00168E  0E00               	movlw	0
  4584  001690  EC16  F047         	call	_SaveNVM_VarSystem
  4585  001694                     l22946:
  4586                           
  4587                           ;sm_MenuConfiguration_MC50.c: 360:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4588  001694  0EBF               	movlw	low _menuConfiguration_stateMachine
  4589  001696  6E12               	movwf	sm_send_event@psm^0,c
  4590  001698  0E02               	movlw	high _menuConfiguration_stateMachine
  4591  00169A  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4592  00169C  0E00               	movlw	0
  4593  00169E  6E15               	movwf	(sm_send_event@event+1)^0,c
  4594  0016A0  0E04               	movlw	4
  4595  0016A2  6E14               	movwf	sm_send_event@event^0,c
  4596  0016A4  EC0E  F043         	call	_sm_send_event	;wreg free
  4597                           
  4598                           ;sm_MenuConfiguration_MC50.c: 363:                 menu_st.parameterSelected++;
  4599  0016A8  0101               	movlb	1	; () banked
  4600  0016AA  2B68               	incf	(_menu_st+23)& (0+255),f,b
  4601                           
  4602                           ; BSR set to: 1
  4603                           ;sm_MenuConfiguration_MC50.c: 364:                 if(menu_st.actualMenu<=E_Menu)
  4604  0016AC  0E02               	movlw	2
  4605  0016AE  6166               	cpfslt	(_menu_st+21)& (0+255),b
  4606  0016B0  D005               	goto	l22956
  4607                           
  4608                           ; BSR set to: 1
  4609                           ;sm_MenuConfiguration_MC50.c: 365:                 {;sm_MenuConfiguration_MC50.c: 366:  
      +                                             menu_st.lastMainParameterSelected++;
  4610  0016B2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4611                           
  4612                           ; BSR set to: 1
  4613                           ;sm_MenuConfiguration_MC50.c: 367:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4614  0016B4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4615  0016B6  ECCA  F020         	call	_load_New_Menu
  4616                           
  4617                           ;sm_MenuConfiguration_MC50.c: 368:                 }
  4618  0016BA  0012               	return	
  4619  0016BC                     l22956:
  4620                           
  4621                           ; BSR set to: 1
  4622  0016BC  5167               	movf	(_menu_st+22)& (0+255),w,b
  4623  0016BE  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  4624  0016C0  A0D8               	btfss	status,0,c
  4625  0016C2  D005               	goto	l22962
  4626                           
  4627                           ; BSR set to: 1
  4628                           ;sm_MenuConfiguration_MC50.c: 370:                 {;sm_MenuConfiguration_MC50.c: 371:  
      +                                             menu_st.lastMainParameterSelected++;
  4629  0016C4  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4630                           
  4631                           ; BSR set to: 1
  4632                           ;sm_MenuConfiguration_MC50.c: 372:                     load_New_Menu(menu_st.lastMenu);
  4633  0016C6  5165               	movf	(_menu_st+20)& (0+255),w,b
  4634  0016C8  ECCA  F020         	call	_load_New_Menu
  4635                           
  4636                           ;sm_MenuConfiguration_MC50.c: 373:                 }
  4637  0016CC  0012               	return	
  4638  0016CE                     l22962:
  4639                           
  4640                           ; BSR set to: 1
  4641                           ;sm_MenuConfiguration_MC50.c: 375:                 {;sm_MenuConfiguration_MC50.c: 376:  
      +                                             load_New_Menu(menu_st.actualMenu);
  4642  0016CE  5166               	movf	(_menu_st+21)& (0+255),w,b
  4643  0016D0  ECCA  F020         	call	_load_New_Menu
  4644  0016D4  0012               	return	
  4645  0016D6                     l22964:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;sm_MenuConfiguration_MC50.c: 382:         {;sm_MenuConfiguration_MC50.c: 383:          
      +                             if(ts_system.timeoutMenu<=0)
  4649  0016D6  0101               	movlb	1	; () banked
  4650  0016D8  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  4651  0016DA  D005               	goto	u27800
  4652  0016DC  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  4653  0016DE  E102               	bnz	u27801
  4654  0016E0  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  4655  0016E2  B0D8               	btfsc	status,0,c
  4656  0016E4                     u27801:
  4657  0016E4  0012               	return	
  4658  0016E6                     u27800:
  4659                           
  4660                           ; BSR set to: 1
  4661                           ;sm_MenuConfiguration_MC50.c: 384:             {;sm_MenuConfiguration_MC50.c: 386:      
      +                                     if(auxCounter<=0){
  4662  0016E6  0100               	movlb	0	; () banked
  4663  0016E8  51FA               	movf	_auxCounter& (0+255),w,b
  4664  0016EA  11FB               	iorwf	(_auxCounter+1)& (0+255),w,b
  4665  0016EC  A4D8               	btfss	status,2,c
  4666  0016EE  D010               	goto	l22974
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;sm_MenuConfiguration_MC50.c: 387:                     menu_st.lastMainParameterSelected
      +                          ++;
  4670  0016F0  0101               	movlb	1	; () banked
  4671  0016F2  2B69               	incf	(_menu_st+24)& (0+255),f,b
  4672                           
  4673                           ; BSR set to: 1
  4674                           ;sm_MenuConfiguration_MC50.c: 388:                     load_New_Menu(menu_st.actualMenu)
      +                          ;
  4675  0016F4  5166               	movf	(_menu_st+21)& (0+255),w,b
  4676  0016F6  ECCA  F020         	call	_load_New_Menu
  4677                           
  4678                           ;sm_MenuConfiguration_MC50.c: 389:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_ParameterIsSaved);
  4679  0016FA  0EBF               	movlw	low _menuConfiguration_stateMachine
  4680  0016FC  6E12               	movwf	sm_send_event@psm^0,c
  4681  0016FE  0E02               	movlw	high _menuConfiguration_stateMachine
  4682  001700  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4683  001702  0E00               	movlw	0
  4684  001704  6E15               	movwf	(sm_send_event@event+1)^0,c
  4685  001706  0E04               	movlw	4
  4686  001708  6E14               	movwf	sm_send_event@event^0,c
  4687  00170A  EC0E  F043         	call	_sm_send_event	;wreg free
  4688                           
  4689                           ;sm_MenuConfiguration_MC50.c: 390:                 }
  4690  00170E  0012               	return	
  4691  001710                     l22974:
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;sm_MenuConfiguration_MC50.c: 392:                 {;sm_MenuConfiguration_MC50.c: 393:  
      +                                             ts_system.timeoutMenu=(1000/50)*3;
  4695  001710  0E00               	movlw	0
  4696  001712  0101               	movlb	1	; () banked
  4697  001714  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  4698  001716  0E3C               	movlw	60
  4699  001718  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  4700                           
  4701                           ; BSR set to: 1
  4702                           ;sm_MenuConfiguration_MC50.c: 394:                     edit_Param.tempValue=(unsigned ch
      +                          ar)(tempCounter/auxCounter);
  4703  00171A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4704  00171E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4705  001722  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4706  001726  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4707  00172A  C0FA  F014         	movff	_auxCounter,___lldiv@divisor
  4708  00172E  C0FB  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4709  001732  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4710  001734  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4711  001736  EC0B  F03F         	call	___lldiv	;wreg free
  4712  00173A  5010               	movf	?___lldiv^0,w,c
  4713  00173C  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4714                           
  4715                           ;sm_MenuConfiguration_MC50.c: 395:                     tempCounter=tempCounter-(tempCoun
      +                          ter/auxCounter*auxCounter);
  4716  00173E  C0FA  F014         	movff	_auxCounter,___lldiv@divisor
  4717  001742  C0FB  F015         	movff	_auxCounter+1,___lldiv@divisor+1
  4718  001746  6A16               	clrf	(___lldiv@divisor+2)^0,c
  4719  001748  6A17               	clrf	(___lldiv@divisor+3)^0,c
  4720  00174A  C1FA  F010         	movff	_tempCounter,___lldiv@dividend
  4721  00174E  C1FB  F011         	movff	_tempCounter+1,___lldiv@dividend+1
  4722  001752  C1FC  F012         	movff	_tempCounter+2,___lldiv@dividend+2
  4723  001756  C1FD  F013         	movff	_tempCounter+3,___lldiv@dividend+3
  4724  00175A  EC0B  F03F         	call	___lldiv	;wreg free
  4725  00175E  C010  F01D         	movff	?___lldiv,___lmul@multiplier
  4726  001762  C011  F01E         	movff	?___lldiv+1,___lmul@multiplier+1
  4727  001766  C012  F01F         	movff	?___lldiv+2,___lmul@multiplier+2
  4728  00176A  C013  F020         	movff	?___lldiv+3,___lmul@multiplier+3
  4729  00176E  C0FA  F021         	movff	_auxCounter,___lmul@multiplicand
  4730  001772  C0FB  F022         	movff	_auxCounter+1,___lmul@multiplicand+1
  4731  001776  6A23               	clrf	(___lmul@multiplicand+2)^0,c
  4732  001778  6A24               	clrf	(___lmul@multiplicand+3)^0,c
  4733  00177A  EC1C  F044         	call	___lmul	;wreg free
  4734  00177E  501D               	movf	?___lmul^0,w,c
  4735  001780  0101               	movlb	1	; () banked
  4736  001782  5DFA               	subwf	_tempCounter& (0+255),w,b
  4737  001784  6FFA               	movwf	_tempCounter& (0+255),b
  4738  001786  501E               	movf	(?___lmul+1)^0,w,c
  4739  001788  59FB               	subwfb	(_tempCounter+1)& (0+255),w,b
  4740  00178A  6FFB               	movwf	(_tempCounter+1)& (0+255),b
  4741  00178C  501F               	movf	(?___lmul+2)^0,w,c
  4742  00178E  59FC               	subwfb	(_tempCounter+2)& (0+255),w,b
  4743  001790  6FFC               	movwf	(_tempCounter+2)& (0+255),b
  4744  001792  5020               	movf	(?___lmul+3)^0,w,c
  4745  001794  59FD               	subwfb	(_tempCounter+3)& (0+255),w,b
  4746  001796  6FFD               	movwf	(_tempCounter+3)& (0+255),b
  4747                           
  4748                           ; BSR set to: 1
  4749                           ;sm_MenuConfiguration_MC50.c: 396:                     auxCounter=auxCounter/100;
  4750  001798  C0FA  F010         	movff	_auxCounter,___lwdiv@dividend
  4751  00179C  C0FB  F011         	movff	_auxCounter+1,___lwdiv@dividend+1
  4752  0017A0  0E00               	movlw	0
  4753  0017A2  6E13               	movwf	(___lwdiv@divisor+1)^0,c
  4754  0017A4  0E64               	movlw	100
  4755  0017A6  6E12               	movwf	___lwdiv@divisor^0,c
  4756  0017A8  EC9C  F044         	call	___lwdiv	;wreg free
  4757  0017AC  C010  F0FA         	movff	?___lwdiv,_auxCounter
  4758  0017B0  C011  F0FB         	movff	?___lwdiv+1,_auxCounter+1
  4759                           
  4760                           ;sm_MenuConfiguration_MC50.c: 397:                     SetSegmentValueIntermitentMain(ed
      +                          it_Param.tempValue/10, edit_Param.tempValue-((edit_Param.tempValue/10)*10),( 500/50));
  4761  0017B4  0E0A               	movlw	10
  4762  0017B6  6E10               	movwf	___lbdiv@divisor^0,c
  4763  0017B8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4764  0017BA  ECF9  F046         	call	___lbdiv
  4765  0017BE  0DF6               	mullw	246
  4766  0017C0  50F3               	movf	243,w,c
  4767  0017C2  2449               	addwf	(_edit_Param+3)^0,w,c	;volatile
  4768  0017C4  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  4769  0017C6  0E00               	movlw	0
  4770  0017C8  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  4771  0017CA  0E0A               	movlw	10
  4772  0017CC  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  4773  0017CE  0E0A               	movlw	10
  4774  0017D0  6E10               	movwf	___lbdiv@divisor^0,c
  4775  0017D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  4776  0017D4  ECF9  F046         	call	___lbdiv
  4777  0017D8  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  4778  0017DC  0012               	return	
  4779  0017DE                     l22984:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;sm_MenuConfiguration_MC50.c: 403:         {;sm_MenuConfiguration_MC50.c: 404:          
      +                             if(firstselectflag==1){
  4783  0017DE  0101               	movlb	1	; () banked
  4784  0017E0  05FE               	decf	_firstselectflag& (0+255),w,b
  4785  0017E2  A4D8               	btfss	status,2,c
  4786  0017E4  D004               	goto	l22988
  4787                           
  4788                           ; BSR set to: 1
  4789                           ;sm_MenuConfiguration_MC50.c: 405:                 edit_Param.tempValue=0;
  4790  0017E6  0E00               	movlw	0
  4791  0017E8  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  4792                           
  4793                           ;sm_MenuConfiguration_MC50.c: 406:                 firstselectflag=0;
  4794  0017EA  0E00               	movlw	0
  4795  0017EC  6FFE               	movwf	_firstselectflag& (0+255),b
  4796  0017EE                     l22988:
  4797                           
  4798                           ; BSR set to: 1
  4799                           ;sm_MenuConfiguration_MC50.c: 408:             controlSelectRemote();
  4800  0017EE  ECB3  F01B         	call	_controlSelectRemote	;wreg free
  4801                           
  4802                           ;sm_MenuConfiguration_MC50.c: 409:         };sm_MenuConfiguration_MC50.c: 410:         b
      +                          reak;
  4803  0017F2  0012               	return	
  4804  0017F4                     l22990:
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;sm_MenuConfiguration_MC50.c: 412:         {;sm_MenuConfiguration_MC50.c: 413:          
      +                             controlSaveRemote();
  4808  0017F4  ECAE  F03A         	call	_controlSaveRemote	;wreg free
  4809                           
  4810                           ;sm_MenuConfiguration_MC50.c: 414:         };sm_MenuConfiguration_MC50.c: 415:         b
      +                          reak;
  4811  0017F8  0012               	return	
  4812  0017FA                     l22992:
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;sm_MenuConfiguration_MC50.c: 417:         {;sm_MenuConfiguration_MC50.c: 418:          
      +                             controlLearnDigit();
  4816  0017FA  EC7E  F047         	call	_controlLearnDigit	;wreg free
  4817                           
  4818                           ;sm_MenuConfiguration_MC50.c: 419:             if(var_sys.LearningIsEnabled==NO)
  4819  0017FE  0101               	movlb	1	; () banked
  4820  001800  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
  4821  001802  A4D8               	btfss	status,2,c
  4822  001804  0012               	return	
  4823                           
  4824                           ; BSR set to: 1
  4825                           ;sm_MenuConfiguration_MC50.c: 420:             {;sm_MenuConfiguration_MC50.c: 421:      
      +                                     sm_send_event(&main_stateMachine, ev_goto_StandBy);
  4826  001806  0EEE               	movlw	low _main_stateMachine
  4827  001808  6E12               	movwf	sm_send_event@psm^0,c
  4828  00180A  0E01               	movlw	high _main_stateMachine
  4829  00180C  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4830  00180E  0E00               	movlw	0
  4831  001810  6E15               	movwf	(sm_send_event@event+1)^0,c
  4832  001812  0E07               	movlw	7
  4833  001814  6E14               	movwf	sm_send_event@event^0,c
  4834  001816  EC0E  F043         	call	_sm_send_event	;wreg free
  4835                           
  4836                           ;sm_MenuConfiguration_MC50.c: 422:                 sm_send_event(&menuConfiguration_stat
      +                          eMachine, ev_ParameterIsSaved);
  4837  00181A  0EBF               	movlw	low _menuConfiguration_stateMachine
  4838  00181C  6E12               	movwf	sm_send_event@psm^0,c
  4839  00181E  0E02               	movlw	high _menuConfiguration_stateMachine
  4840  001820  6E13               	movwf	(sm_send_event@psm+1)^0,c
  4841  001822  0E00               	movlw	0
  4842  001824  6E15               	movwf	(sm_send_event@event+1)^0,c
  4843  001826  0E04               	movlw	4
  4844  001828  6E14               	movwf	sm_send_event@event^0,c
  4845  00182A  EC0E  F043         	call	_sm_send_event	;wreg free
  4846                           
  4847                           ;sm_MenuConfiguration_MC50.c: 423:                 SetSegmentValueMain(dMinus,dMinus);
  4848  00182E  0E18               	movlw	24
  4849  001830  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  4850  001832  0E18               	movlw	24
  4851  001834  EC03  F04A         	call	_SetSegmentValueMain
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;sm_MenuConfiguration_MC50.c: 424:                 SaveNVM_VarSystem(pageMemoryCounters)
      +                          ;
  4855  001838  0E02               	movlw	2
  4856  00183A  EC16  F047         	call	_SaveNVM_VarSystem
  4857  00183E  D5E9               	goto	l22830
  4858  001840                     l23008:
  4859  001840  C0E9  FFD9         	movff	sm_execute_menuConfiguration@psm,fsr2l
  4860  001844  C0EA  FFDA         	movff	sm_execute_menuConfiguration@psm+1,fsr2h
  4861  001848  50DF               	movf	indf2,w,c
  4862  00184A  0100               	movlb	0	; () banked
  4863  00184C  6FEB               	movwf	??_sm_execute_menuConfiguration& (0+255),b
  4864  00184E  6BEC               	clrf	(??_sm_execute_menuConfiguration+1)& (0+255),b
  4865                           
  4866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4867                           ; Switch size 1, requested type "simple"
  4868                           ; Number of cases is 1, Range of values is 0 to 0
  4869                           ; switch strategies available:
  4870                           ; Name         Instructions Cycles
  4871                           ; simple_byte            4     3 (average)
  4872                           ;	Chosen strategy is simple_byte
  4873  001850  51EC               	movf	(??_sm_execute_menuConfiguration+1)& (0+255),w,b
  4874  001852  0A00               	xorlw	0	; case 0
  4875  001854  A4D8               	btfss	status,2,c
  4876  001856  0012               	return	
  4877                           
  4878                           ; BSR set to: 0
  4879                           ; Switch size 1, requested type "simple"
  4880                           ; Number of cases is 7, Range of values is 0 to 6
  4881                           ; switch strategies available:
  4882                           ; Name         Instructions Cycles
  4883                           ; simple_byte           22    12 (average)
  4884                           ;	Chosen strategy is simple_byte
  4885  001858  51EB               	movf	??_sm_execute_menuConfiguration& (0+255),w,b
  4886  00185A  0A00               	xorlw	0	; case 0
  4887  00185C  B4D8               	btfsc	status,2,c
  4888  00185E  D431               	goto	l22698
  4889  001860  0A01               	xorlw	1	; case 1
  4890  001862  B4D8               	btfsc	status,2,c
  4891  001864  D5FC               	goto	l22848
  4892  001866  0A03               	xorlw	3	; case 2
  4893  001868  B4D8               	btfsc	status,2,c
  4894  00186A  D6CF               	goto	l22916
  4895  00186C  0A01               	xorlw	1	; case 3
  4896  00186E  B4D8               	btfsc	status,2,c
  4897  001870  D732               	goto	l22964
  4898  001872  0A07               	xorlw	7	; case 4
  4899  001874  B4D8               	btfsc	status,2,c
  4900  001876  D7B3               	goto	l22984
  4901  001878  0A01               	xorlw	1	; case 5
  4902  00187A  B4D8               	btfsc	status,2,c
  4903  00187C  D7BB               	goto	l22990
  4904  00187E  0A03               	xorlw	3	; case 6
  4905  001880  A4D8               	btfss	status,2,c
  4906  001882  0012               	return	
  4907  001884  D7BA               	goto	l22992
  4908  001886                     __end_of_sm_execute_menuConfiguration:
  4909                           	callstack 0
  4910                           
  4911 ;; *************** function _setValueToEdit *****************
  4912 ;; Defined at:
  4913 ;;		line 648 in file "sm_MenuConfiguration_MC50.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  menuType        1    wreg     enum E10813
  4916 ;;  ParameterSel    1   57[COMRAM] unsigned char 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  menuType        1    6[BANK0 ] enum E10813
  4919 ;;  posindex        1    7[BANK0 ] unsigned char 
  4920 ;;  haveValueToE    1    8[BANK0 ] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      unsigned char 
  4923 ;; Registers used:
  4924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 3F/1
  4927 ;;		On exit  : 3F/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4930 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4931 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4933 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4934 ;;Total ram usage:        6 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; Hardware stack levels required when called: 14
  4937 ;; This function calls:
  4938 ;;		_InitReceiver
  4939 ;;		_SaveNVM_VarSystem
  4940 ;;		_cmdMemoryIsEmpty
  4941 ;;		_load_New_Menu
  4942 ;;		_sm_send_event
  4943 ;; This function is called by:
  4944 ;;		_sm_execute_menuConfiguration
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text3
  4949  001F94                     __ptext3:
  4950                           	callstack 0
  4951  001F94                     _setValueToEdit:
  4952                           	callstack 14
  4953                           
  4954                           ;incstack = 0
  4955                           ;setValueToEdit@menuType stored from wreg
  4956  001F94  0100               	movlb	0	; () banked
  4957  001F96  6FDE               	movwf	setValueToEdit@menuType& (0+255),b
  4958                           
  4959                           ;sm_MenuConfiguration_MC50.c: 649:     char haveValueToEdit=0;
  4960  001F98  0E00               	movlw	0
  4961  001F9A  0100               	movlb	0	; () banked
  4962  001F9C  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  4963                           
  4964                           ;sm_MenuConfiguration_MC50.c: 652:     switch (menuType)
  4965  001F9E  D254               	goto	l21250
  4966  001FA0                     l3353:
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;sm_MenuConfiguration_MC50.c: 655:         {;sm_MenuConfiguration_MC50.c: 656:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  4970  001FA0  C168  F169         	movff	_menu_st+23,_menu_st+24
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;sm_MenuConfiguration_MC50.c: 657:             edit_Param.Min=0;
  4974  001FA4  0E00               	movlw	0
  4975  001FA6  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  4976                           
  4977                           ;sm_MenuConfiguration_MC50.c: 658:             switch (ParameterSelected)
  4978  001FA8  D034               	goto	l21006
  4979  001FAA                     l20960:
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;sm_MenuConfiguration_MC50.c: 661:                 {;sm_MenuConfiguration_MC50.c: 662:  
      +                                             load_New_Menu(P0_SMenu);
  4983  001FAA  0E04               	movlw	4
  4984  001FAC  ECCA  F020         	call	_load_New_Menu
  4985                           
  4986                           ;sm_MenuConfiguration_MC50.c: 664:                 };sm_MenuConfiguration_MC50.c: 665:  
      +                                         break;
  4987  001FB0  D274               	goto	l21252
  4988  001FB2                     l20962:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;sm_MenuConfiguration_MC50.c: 667:                 {;sm_MenuConfiguration_MC50.c: 668:  
      +                                             load_New_Menu(P1_SMenu);
  4992  001FB2  0E05               	movlw	5
  4993  001FB4  ECCA  F020         	call	_load_New_Menu
  4994                           
  4995                           ;sm_MenuConfiguration_MC50.c: 669:                 };sm_MenuConfiguration_MC50.c: 670:  
      +                                         break;
  4996  001FB8  D270               	goto	l21252
  4997  001FBA                     l20964:
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;sm_MenuConfiguration_MC50.c: 672:                 {;sm_MenuConfiguration_MC50.c: 673:  
      +                                             load_New_Menu(P2_SMenu);
  5001  001FBA  0E06               	movlw	6
  5002  001FBC  ECCA  F020         	call	_load_New_Menu
  5003                           
  5004                           ;sm_MenuConfiguration_MC50.c: 674:                 };sm_MenuConfiguration_MC50.c: 675:  
      +                                         break;
  5005  001FC0  D26C               	goto	l21252
  5006  001FC2                     l20966:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;sm_MenuConfiguration_MC50.c: 677:                 {;sm_MenuConfiguration_MC50.c: 678:  
      +                                             edit_Param.Max=99;
  5010  001FC2  0E63               	movlw	99
  5011  001FC4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;sm_MenuConfiguration_MC50.c: 680:                     edit_Param.tempValue=var_sys_NVM.
      +                          walkTime;
  5015  001FC6  C09C  F049         	movff	_var_sys_NVM+4,_edit_Param+3	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;sm_MenuConfiguration_MC50.c: 681:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.walkTime;
  5019  001FCA  0E9C               	movlw	low (_var_sys_NVM+4)
  5020  001FCC                     L13:
  5021  001FCC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5022  001FCE  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;sm_MenuConfiguration_MC50.c: 682:                     haveValueToEdit=1;
  5026  001FD0  0E01               	movlw	1
  5027  001FD2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5028                           
  5029                           ;sm_MenuConfiguration_MC50.c: 683:                 };sm_MenuConfiguration_MC50.c: 684:  
      +                                         break;
  5030  001FD4  D262               	goto	l21252
  5031  001FD6                     l20974:
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;sm_MenuConfiguration_MC50.c: 686:                 {;sm_MenuConfiguration_MC50.c: 687:  
      +                                             load_New_Menu(P4_SMenu);
  5035  001FD6  0E07               	movlw	7
  5036  001FD8  ECCA  F020         	call	_load_New_Menu
  5037                           
  5038                           ;sm_MenuConfiguration_MC50.c: 688:                 };sm_MenuConfiguration_MC50.c: 689:  
      +                                         break;
  5039  001FDC  D25E               	goto	l21252
  5040  001FDE                     l20976:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;sm_MenuConfiguration_MC50.c: 691:                 {;sm_MenuConfiguration_MC50.c: 692:  
      +                                             load_New_Menu(P5_SMenu);
  5044  001FDE  0E08               	movlw	8
  5045  001FE0  ECCA  F020         	call	_load_New_Menu
  5046                           
  5047                           ;sm_MenuConfiguration_MC50.c: 693:                 };sm_MenuConfiguration_MC50.c: 694:  
      +                                         break;
  5048  001FE4  D25A               	goto	l21252
  5049  001FE6                     l20978:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;sm_MenuConfiguration_MC50.c: 696:                 {;sm_MenuConfiguration_MC50.c: 697:  
      +                                             load_New_Menu(P6_SMenu);
  5053  001FE6  0E09               	movlw	9
  5054  001FE8  ECCA  F020         	call	_load_New_Menu
  5055                           
  5056                           ;sm_MenuConfiguration_MC50.c: 698:                 };sm_MenuConfiguration_MC50.c: 699:  
      +                                         break;
  5057  001FEC  D256               	goto	l21252
  5058  001FEE                     l20980:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;sm_MenuConfiguration_MC50.c: 701:                 {;sm_MenuConfiguration_MC50.c: 702:  
      +                                             edit_Param.Max=2;
  5062  001FEE  0E02               	movlw	2
  5063  001FF0  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;sm_MenuConfiguration_MC50.c: 704:                     edit_Param.tempValue=var_sys_NVM.
      +                          operationMode;
  5067  001FF2  C0A4  F049         	movff	_var_sys_NVM+12,_edit_Param+3	;volatile
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;sm_MenuConfiguration_MC50.c: 705:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.operationMode;
  5071  001FF6  0EA4               	movlw	low (_var_sys_NVM+12)
  5072  001FF8  D7E9               	goto	L13
  5073  001FFA                     l20988:
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;sm_MenuConfiguration_MC50.c: 710:                 {;sm_MenuConfiguration_MC50.c: 711:  
      +                                             edit_Param.Max=3;
  5077  001FFA  0E03               	movlw	3
  5078  001FFC  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;sm_MenuConfiguration_MC50.c: 713:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashLightMode;
  5082  001FFE  C0A5  F049         	movff	_var_sys_NVM+13,_edit_Param+3	;volatile
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;sm_MenuConfiguration_MC50.c: 714:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashLightMode;
  5086  002002  0EA5               	movlw	low (_var_sys_NVM+13)
  5087  002004  D7E3               	goto	L13
  5088  002006                     l20996:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;sm_MenuConfiguration_MC50.c: 719:                 {;sm_MenuConfiguration_MC50.c: 720:  
      +                                             edit_Param.Max=1;
  5092  002006  0E01               	movlw	1
  5093  002008  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;sm_MenuConfiguration_MC50.c: 722:                     edit_Param.tempValue=var_sys_NVM.
      +                          programmingDistance;
  5097  00200A  C0A6  F049         	movff	_var_sys_NVM+14,_edit_Param+3	;volatile
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;sm_MenuConfiguration_MC50.c: 723:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.programmingDistance;
  5101  00200E  0EA6               	movlw	low (_var_sys_NVM+14)
  5102  002010  D7DD               	goto	L13
  5103  002012                     l21006:
  5104                           
  5105                           ; BSR set to: 0
  5106  002012  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5107  002014  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5108  002016  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5109                           
  5110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5111                           ; Switch size 1, requested type "simple"
  5112                           ; Number of cases is 1, Range of values is 0 to 0
  5113                           ; switch strategies available:
  5114                           ; Name         Instructions Cycles
  5115                           ; simple_byte            4     3 (average)
  5116                           ;	Chosen strategy is simple_byte
  5117  002018  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5118  00201A  0A00               	xorlw	0	; case 0
  5119  00201C  A4D8               	btfss	status,2,c
  5120  00201E  D23D               	goto	l21252
  5121                           
  5122                           ; BSR set to: 0
  5123                           ; Switch size 1, requested type "simple"
  5124                           ; Number of cases is 10, Range of values is 0 to 9
  5125                           ; switch strategies available:
  5126                           ; Name         Instructions Cycles
  5127                           ; simple_byte           31    16 (average)
  5128                           ;	Chosen strategy is simple_byte
  5129  002020  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5130  002022  0A00               	xorlw	0	; case 0
  5131  002024  B4D8               	btfsc	status,2,c
  5132  002026  D7C1               	goto	l20960
  5133  002028  0A01               	xorlw	1	; case 1
  5134  00202A  B4D8               	btfsc	status,2,c
  5135  00202C  D7C2               	goto	l20962
  5136  00202E  0A03               	xorlw	3	; case 2
  5137  002030  B4D8               	btfsc	status,2,c
  5138  002032  D7C3               	goto	l20964
  5139  002034  0A01               	xorlw	1	; case 3
  5140  002036  B4D8               	btfsc	status,2,c
  5141  002038  D7C4               	goto	l20966
  5142  00203A  0A07               	xorlw	7	; case 4
  5143  00203C  B4D8               	btfsc	status,2,c
  5144  00203E  D7CB               	goto	l20974
  5145  002040  0A01               	xorlw	1	; case 5
  5146  002042  B4D8               	btfsc	status,2,c
  5147  002044  D7CC               	goto	l20976
  5148  002046  0A03               	xorlw	3	; case 6
  5149  002048  B4D8               	btfsc	status,2,c
  5150  00204A  D7CD               	goto	l20978
  5151  00204C  0A01               	xorlw	1	; case 7
  5152  00204E  B4D8               	btfsc	status,2,c
  5153  002050  D7CE               	goto	l20980
  5154  002052  0A0F               	xorlw	15	; case 8
  5155  002054  B4D8               	btfsc	status,2,c
  5156  002056  D7D1               	goto	l20988
  5157  002058  0A01               	xorlw	1	; case 9
  5158  00205A  B4D8               	btfsc	status,2,c
  5159  00205C  D7D4               	goto	l20996
  5160  00205E  D21D               	goto	l21252
  5161  002060                     l3367:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;sm_MenuConfiguration_MC50.c: 733:         {;sm_MenuConfiguration_MC50.c: 734:          
      +                             menu_st.lastMainParameterSelected= menu_st.parameterSelected;
  5165  002060  C168  F169         	movff	_menu_st+23,_menu_st+24
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;sm_MenuConfiguration_MC50.c: 735:             edit_Param.Max=1;
  5169  002064  0E01               	movlw	1
  5170  002066  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5171                           
  5172                           ;sm_MenuConfiguration_MC50.c: 736:             edit_Param.Min=0;
  5173  002068  0E00               	movlw	0
  5174  00206A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5175                           
  5176                           ;sm_MenuConfiguration_MC50.c: 737:             switch (ParameterSelected)
  5177  00206C  D057               	goto	l21062
  5178  00206E                     l21010:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;sm_MenuConfiguration_MC50.c: 740:                 {;sm_MenuConfiguration_MC50.c: 741:  
      +                                             load_New_Menu(E0_SMenu);
  5182  00206E  0E0A               	movlw	10
  5183  002070  ECCA  F020         	call	_load_New_Menu
  5184                           
  5185                           ;sm_MenuConfiguration_MC50.c: 742:                 };sm_MenuConfiguration_MC50.c: 743:  
      +                                         break;
  5186  002074  D212               	goto	l21252
  5187  002076                     l21012:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;sm_MenuConfiguration_MC50.c: 745:                 {;sm_MenuConfiguration_MC50.c: 748:  
      +                                             load_New_Menu(E1_SMenu);
  5191  002076  0E0B               	movlw	11
  5192  002078  ECCA  F020         	call	_load_New_Menu
  5193                           
  5194                           ;sm_MenuConfiguration_MC50.c: 750:                 };sm_MenuConfiguration_MC50.c: 751:  
      +                                         break;
  5195  00207C  D20E               	goto	l21252
  5196  00207E                     l21014:
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;sm_MenuConfiguration_MC50.c: 753:                 {;sm_MenuConfiguration_MC50.c: 754:  
      +                                             edit_Param.Max=99;
  5200  00207E  0E63               	movlw	99
  5201  002080  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;sm_MenuConfiguration_MC50.c: 756:                     edit_Param.tempValue=var_sys_NVM.
      +                          ligthTime;
  5205  002082  C0AC  F049         	movff	_var_sys_NVM+20,_edit_Param+3	;volatile
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;sm_MenuConfiguration_MC50.c: 757:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.ligthTime;
  5209  002086  0EAC               	movlw	low (_var_sys_NVM+20)
  5210  002088  D7A1               	goto	L13
  5211  00208A                     l21022:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;sm_MenuConfiguration_MC50.c: 762:                 {;sm_MenuConfiguration_MC50.c: 763:  
      +                                            edit_Param.Max=9;
  5215  00208A  0E09               	movlw	9
  5216  00208C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5217                           
  5218                           ;sm_MenuConfiguration_MC50.c: 764:                    edit_Param.Min=1;
  5219  00208E  0E01               	movlw	1
  5220  002090  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;sm_MenuConfiguration_MC50.c: 765:                    edit_Param.tempValue=var_sys_NVM.f
      +                          olow_me;
  5224  002092  C0AD  F049         	movff	_var_sys_NVM+21,_edit_Param+3	;volatile
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;sm_MenuConfiguration_MC50.c: 766:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.folow_me;
  5228  002096  0EAD               	movlw	low (_var_sys_NVM+21)
  5229  002098  D799               	goto	L13
  5230  00209A                     l3375:
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;sm_MenuConfiguration_MC50.c: 778:                 {;sm_MenuConfiguration_MC50.c: 779:  
      +                                            edit_Param.tempValue=var_sys_NVM.electricBrake;
  5234  00209A  C0AF  F049         	movff	_var_sys_NVM+23,_edit_Param+3	;volatile
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;sm_MenuConfiguration_MC50.c: 780:                    edit_Param.Value=(unsigned char*)&
      +                          var_sys_NVM.electricBrake;
  5238  00209E  0EAF               	movlw	low (_var_sys_NVM+23)
  5239  0020A0  D795               	goto	L13
  5240  0020A2                     l21034:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;sm_MenuConfiguration_MC50.c: 785:                 {;sm_MenuConfiguration_MC50.c: 786:  
      +                                             edit_Param.Max=9;
  5244  0020A2  0E09               	movlw	9
  5245  0020A4  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5246                           
  5247                           ;sm_MenuConfiguration_MC50.c: 787:                     edit_Param.Min=1;
  5248  0020A6  0E01               	movlw	1
  5249  0020A8  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;sm_MenuConfiguration_MC50.c: 788:                     edit_Param.tempValue=var_sys_NVM.
      +                          velocityDecelaration;
  5253  0020AA  C0B0  F049         	movff	_var_sys_NVM+24,_edit_Param+3	;volatile
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;sm_MenuConfiguration_MC50.c: 789:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.velocityDecelaration;
  5257  0020AE  0EB0               	movlw	low (_var_sys_NVM+24)
  5258  0020B0  D78D               	goto	L13
  5259  0020B2                     l21042:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;sm_MenuConfiguration_MC50.c: 794:                 {;sm_MenuConfiguration_MC50.c: 795:  
      +                                             edit_Param.tempValue=0;
  5263  0020B2  0E00               	movlw	0
  5264  0020B4  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5265                           
  5266                           ;sm_MenuConfiguration_MC50.c: 796:                     ts_system.timeoutMenu=0;
  5267  0020B6  0E00               	movlw	0
  5268  0020B8  0101               	movlb	1	; () banked
  5269  0020BA  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  5270  0020BC  0E00               	movlw	0
  5271  0020BE  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  5272                           
  5273                           ;sm_MenuConfiguration_MC50.c: 798:                     auxCounter=10000;
  5274  0020C0  0E27               	movlw	39
  5275  0020C2  0100               	movlb	0	; () banked
  5276  0020C4  6FFB               	movwf	(_auxCounter+1)& (0+255),b
  5277  0020C6  0E10               	movlw	16
  5278  0020C8  6FFA               	movwf	_auxCounter& (0+255),b
  5279                           
  5280                           ;sm_MenuConfiguration_MC50.c: 799:                     ts_system.timeBetweenSaveCounters
      +                          =0;
  5281  0020CA  0E00               	movlw	0
  5282  0020CC  0101               	movlb	1	; () banked
  5283  0020CE  6FC2               	movwf	(_ts_system+39)& (0+255),b	;volatile
  5284  0020D0  0E00               	movlw	0
  5285  0020D2  6FC1               	movwf	(_ts_system+38)& (0+255),b	;volatile
  5286                           
  5287                           ; BSR set to: 1
  5288                           ;sm_MenuConfiguration_MC50.c: 800:                     tempCounter=var_sys.actualCounter
      +                          Moves;
  5289  0020D4  C13C  F1FA         	movff	_var_sys+60,_tempCounter	;volatile
  5290  0020D8  C13D  F1FB         	movff	_var_sys+61,_tempCounter+1	;volatile
  5291  0020DC  C13E  F1FC         	movff	_var_sys+62,_tempCounter+2	;volatile
  5292  0020E0  C13F  F1FD         	movff	_var_sys+63,_tempCounter+3	;volatile
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;sm_MenuConfiguration_MC50.c: 801:                     sm_send_event(&menuConfiguration_
      +                          stateMachine, ev_showCounter);
  5296  0020E4  0EBF               	movlw	low _menuConfiguration_stateMachine
  5297  0020E6  6E12               	movwf	sm_send_event@psm^0,c
  5298  0020E8  0E02               	movlw	high _menuConfiguration_stateMachine
  5299  0020EA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5300  0020EC  0E00               	movlw	0
  5301  0020EE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5302  0020F0  0E05               	movlw	5
  5303  0020F2  6E14               	movwf	sm_send_event@event^0,c
  5304  0020F4  EC0E  F043         	call	_sm_send_event	;wreg free
  5305                           
  5306                           ;sm_MenuConfiguration_MC50.c: 802:                 };sm_MenuConfiguration_MC50.c: 803:  
      +                                         break;
  5307  0020F8  D1D0               	goto	l21252
  5308  0020FA                     l21048:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;sm_MenuConfiguration_MC50.c: 805:                 {;sm_MenuConfiguration_MC50.c: 806:  
      +                                             edit_Param.tempValue=0;
  5312  0020FA  0E00               	movlw	0
  5313  0020FC  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5314                           
  5315                           ;sm_MenuConfiguration_MC50.c: 807:                     haveValueToEdit=1;
  5316  0020FE  0E01               	movlw	1
  5317  002100  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;sm_MenuConfiguration_MC50.c: 808:                     edit_Param.Value = 0;
  5321  002102  0E00               	movlw	0
  5322  002104  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5323  002106  0E00               	movlw	0
  5324  002108  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  5325                           
  5326                           ;sm_MenuConfiguration_MC50.c: 809:                 };sm_MenuConfiguration_MC50.c: 810:  
      +                                         break;
  5327  00210A  D1C7               	goto	l21252
  5328  00210C                     l21052:
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;sm_MenuConfiguration_MC50.c: 812:                 {;sm_MenuConfiguration_MC50.c: 813:  
      +                                             edit_Param.Max=3;
  5332  00210C  0E03               	movlw	3
  5333  00210E  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5334                           
  5335                           ;sm_MenuConfiguration_MC50.c: 814:                     edit_Param.Min=0;
  5336  002110  0E00               	movlw	0
  5337  002112  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;sm_MenuConfiguration_MC50.c: 815:                     edit_Param.tempValue=var_sys_NVM.
      +                          flashRGBMode;
  5341  002114  C0B1  F049         	movff	_var_sys_NVM+25,_edit_Param+3	;volatile
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;sm_MenuConfiguration_MC50.c: 816:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.flashRGBMode;
  5345  002118  0EB1               	movlw	low (_var_sys_NVM+25)
  5346  00211A  D758               	goto	L13
  5347  00211C                     l21062:
  5348                           
  5349                           ; BSR set to: 0
  5350  00211C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5351  00211E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5352  002120  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5353                           
  5354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5355                           ; Switch size 1, requested type "simple"
  5356                           ; Number of cases is 1, Range of values is 0 to 0
  5357                           ; switch strategies available:
  5358                           ; Name         Instructions Cycles
  5359                           ; simple_byte            4     3 (average)
  5360                           ;	Chosen strategy is simple_byte
  5361  002122  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5362  002124  0A00               	xorlw	0	; case 0
  5363  002126  A4D8               	btfss	status,2,c
  5364  002128  D1B8               	goto	l21252
  5365                           
  5366                           ; BSR set to: 0
  5367                           ; Switch size 1, requested type "simple"
  5368                           ; Number of cases is 10, Range of values is 0 to 9
  5369                           ; switch strategies available:
  5370                           ; Name         Instructions Cycles
  5371                           ; simple_byte           31    16 (average)
  5372                           ;	Chosen strategy is simple_byte
  5373  00212A  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5374  00212C  0A00               	xorlw	0	; case 0
  5375  00212E  B4D8               	btfsc	status,2,c
  5376  002130  D79E               	goto	l21010
  5377  002132  0A01               	xorlw	1	; case 1
  5378  002134  B4D8               	btfsc	status,2,c
  5379  002136  D79F               	goto	l21012
  5380  002138  0A03               	xorlw	3	; case 2
  5381  00213A  B4D8               	btfsc	status,2,c
  5382  00213C  D7A0               	goto	l21014
  5383  00213E  0A01               	xorlw	1	; case 3
  5384  002140  B4D8               	btfsc	status,2,c
  5385  002142  D7A3               	goto	l21022
  5386  002144  0A07               	xorlw	7	; case 4
  5387  002146  B4D8               	btfsc	status,2,c
  5388  002148  D1A8               	goto	l21252
  5389  00214A  0A01               	xorlw	1	; case 5
  5390  00214C  B4D8               	btfsc	status,2,c
  5391  00214E  D7A5               	goto	l3375
  5392  002150  0A03               	xorlw	3	; case 6
  5393  002152  B4D8               	btfsc	status,2,c
  5394  002154  D7A6               	goto	l21034
  5395  002156  0A01               	xorlw	1	; case 7
  5396  002158  B4D8               	btfsc	status,2,c
  5397  00215A  D7AB               	goto	l21042
  5398  00215C  0A0F               	xorlw	15	; case 8
  5399  00215E  B4D8               	btfsc	status,2,c
  5400  002160  D7CC               	goto	l21048
  5401  002162  0A01               	xorlw	1	; case 9
  5402  002164  B4D8               	btfsc	status,2,c
  5403  002166  D7D2               	goto	l21052
  5404  002168  D198               	goto	l21252
  5405  00216A                     l21064:
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;sm_MenuConfiguration_MC50.c: 829:                 {;sm_MenuConfiguration_MC50.c: 830:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5409  00216A  0EBF               	movlw	low _menuConfiguration_stateMachine
  5410  00216C  6E12               	movwf	sm_send_event@psm^0,c
  5411  00216E  0E02               	movlw	high _menuConfiguration_stateMachine
  5412  002170  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5413  002172  0E00               	movlw	0
  5414  002174  6E15               	movwf	(sm_send_event@event+1)^0,c
  5415  002176  0E14               	movlw	20
  5416  002178  6E14               	movwf	sm_send_event@event^0,c
  5417  00217A  EC0E  F043         	call	_sm_send_event	;wreg free
  5418                           
  5419                           ;sm_MenuConfiguration_MC50.c: 831:                  sm_send_event(&controlGate_stateMach
      +                          ine,ev_SartLearning );
  5420  00217E  0EE3               	movlw	low _controlGate_stateMachine
  5421  002180  6E12               	movwf	sm_send_event@psm^0,c
  5422  002182  0E01               	movlw	high _controlGate_stateMachine
  5423  002184  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5424  002186  0E00               	movlw	0
  5425  002188  6E15               	movwf	(sm_send_event@event+1)^0,c
  5426  00218A  0E14               	movlw	20
  5427  00218C  6E14               	movwf	sm_send_event@event^0,c
  5428  00218E  EC0E  F043         	call	_sm_send_event	;wreg free
  5429                           
  5430                           ;sm_MenuConfiguration_MC50.c: 832:                  var_sys.LearningIsEnabled=YES;
  5431  002192  0E01               	movlw	1
  5432  002194  0101               	movlb	1	; () banked
  5433  002196  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5434                           
  5435                           ; BSR set to: 1
  5436                           ;sm_MenuConfiguration_MC50.c: 833:                  var_sys.programinAutomatic = Automat
      +                          ic;
  5437  002198  0E00               	movlw	0
  5438  00219A  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5439                           
  5440                           ; BSR set to: 1
  5441                           ;sm_MenuConfiguration_MC50.c: 834:                  SaveNVM_VarSystem(pageMemoryE);
  5442  00219C  0E01               	movlw	1
  5443  00219E  EC16  F047         	call	_SaveNVM_VarSystem
  5444                           
  5445                           ;sm_MenuConfiguration_MC50.c: 837:                 };sm_MenuConfiguration_MC50.c: 838:  
      +                                         break;
  5446  0021A2  D17B               	goto	l21252
  5447  0021A4                     l21072:
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;sm_MenuConfiguration_MC50.c: 840:                 {;sm_MenuConfiguration_MC50.c: 841:  
      +                                          sm_send_event(&menuConfiguration_stateMachine, ev_SartLearning);
  5451  0021A4  0EBF               	movlw	low _menuConfiguration_stateMachine
  5452  0021A6  6E12               	movwf	sm_send_event@psm^0,c
  5453  0021A8  0E02               	movlw	high _menuConfiguration_stateMachine
  5454  0021AA  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5455  0021AC  0E00               	movlw	0
  5456  0021AE  6E15               	movwf	(sm_send_event@event+1)^0,c
  5457  0021B0  0E14               	movlw	20
  5458  0021B2  6E14               	movwf	sm_send_event@event^0,c
  5459  0021B4  EC0E  F043         	call	_sm_send_event	;wreg free
  5460                           
  5461                           ;sm_MenuConfiguration_MC50.c: 842:                  sm_send_event(&controlGate_stateMach
      +                          ine, ev_SartLearning);
  5462  0021B8  0EE3               	movlw	low _controlGate_stateMachine
  5463  0021BA  6E12               	movwf	sm_send_event@psm^0,c
  5464  0021BC  0E01               	movlw	high _controlGate_stateMachine
  5465  0021BE  6E13               	movwf	(sm_send_event@psm+1)^0,c
  5466  0021C0  0E00               	movlw	0
  5467  0021C2  6E15               	movwf	(sm_send_event@event+1)^0,c
  5468  0021C4  0E14               	movlw	20
  5469  0021C6  6E14               	movwf	sm_send_event@event^0,c
  5470  0021C8  EC0E  F043         	call	_sm_send_event	;wreg free
  5471                           
  5472                           ;sm_MenuConfiguration_MC50.c: 843:                  var_sys.LearningIsEnabled=YES;
  5473  0021CC  0E01               	movlw	1
  5474  0021CE  0101               	movlb	1	; () banked
  5475  0021D0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
  5476                           
  5477                           ; BSR set to: 1
  5478                           ;sm_MenuConfiguration_MC50.c: 844:                  var_sys.programinAutomatic = Manual;
  5479  0021D2  0E01               	movlw	1
  5480  0021D4  6F2A               	movwf	(_var_sys+42)& (0+255),b	;volatile
  5481                           
  5482                           ; BSR set to: 1
  5483                           ;sm_MenuConfiguration_MC50.c: 845:                  SaveNVM_VarSystem(pageMemoryE);
  5484  0021D6  0E01               	movlw	1
  5485  0021D8  EC16  F047         	call	_SaveNVM_VarSystem
  5486                           
  5487                           ;sm_MenuConfiguration_MC50.c: 848:                 };sm_MenuConfiguration_MC50.c: 849:  
      +                                         break;
  5488  0021DC  D15E               	goto	l21252
  5489  0021DE                     l3385:
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;sm_MenuConfiguration_MC50.c: 851:                 {;sm_MenuConfiguration_MC50.c: 852:  
      +                                          edit_Param.tempValue=var_sys_NVM.TypeofMotor;
  5493  0021DE  C0B4  F049         	movff	_var_sys_NVM+28,_edit_Param+3	;volatile
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;sm_MenuConfiguration_MC50.c: 853:                  load_New_Menu(TypeMotor_Menu);
  5497  0021E2  0E03               	movlw	3
  5498  0021E4  ECCA  F020         	call	_load_New_Menu
  5499                           
  5500                           ;sm_MenuConfiguration_MC50.c: 854:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.TypeofMotor;
  5501  0021E8  0EB4               	movlw	low (_var_sys_NVM+28)
  5502  0021EA  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5503  0021EC  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5504                           
  5505                           ;sm_MenuConfiguration_MC50.c: 855:                  haveValueToEdit=1;
  5506  0021EE  0E01               	movlw	1
  5507  0021F0  0100               	movlb	0	; () banked
  5508  0021F2  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;sm_MenuConfiguration_MC50.c: 856:                  edit_Param.Max=2;
  5512  0021F4  0E02               	movlw	2
  5513  0021F6  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;sm_MenuConfiguration_MC50.c: 857:                  edit_Param.Min=0;
  5517  0021F8  0E00               	movlw	0
  5518  0021FA  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5519                           
  5520                           ;sm_MenuConfiguration_MC50.c: 859:                 };sm_MenuConfiguration_MC50.c: 860:  
      +                                         break;
  5521  0021FC  D14E               	goto	l21252
  5522  0021FE                     l3386:
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;sm_MenuConfiguration_MC50.c: 862:                 {;sm_MenuConfiguration_MC50.c: 863:  
      +                                          edit_Param.tempValue=var_sys_NVM.Direction_motor;
  5526  0021FE  C0B3  F049         	movff	_var_sys_NVM+27,_edit_Param+3	;volatile
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;sm_MenuConfiguration_MC50.c: 864:                  load_New_Menu(Direction_Menu);
  5530  002202  0E02               	movlw	2
  5531  002204  ECCA  F020         	call	_load_New_Menu
  5532                           
  5533                           ;sm_MenuConfiguration_MC50.c: 865:                  edit_Param.Value=(unsigned char*)&va
      +                          r_sys_NVM.Direction_motor;
  5534  002208  0EB3               	movlw	low (_var_sys_NVM+27)
  5535  00220A  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5536  00220C  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5537                           
  5538                           ;sm_MenuConfiguration_MC50.c: 866:                  haveValueToEdit=1;
  5539  00220E  0E01               	movlw	1
  5540  002210  0100               	movlb	0	; () banked
  5541  002212  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;sm_MenuConfiguration_MC50.c: 867:                  edit_Param.Max=1;
  5545  002214  0E01               	movlw	1
  5546  002216  D7EF               	goto	L14
  5547  002218                     l21102:
  5548                           
  5549                           ; BSR set to: 0
  5550  002218  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5551  00221A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5552  00221C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5553                           
  5554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5555                           ; Switch size 1, requested type "simple"
  5556                           ; Number of cases is 1, Range of values is 0 to 0
  5557                           ; switch strategies available:
  5558                           ; Name         Instructions Cycles
  5559                           ; simple_byte            4     3 (average)
  5560                           ;	Chosen strategy is simple_byte
  5561  00221E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5562  002220  0A00               	xorlw	0	; case 0
  5563  002222  A4D8               	btfss	status,2,c
  5564  002224  D13A               	goto	l21252
  5565                           
  5566                           ; BSR set to: 0
  5567                           ; Switch size 1, requested type "simple"
  5568                           ; Number of cases is 4, Range of values is 0 to 3
  5569                           ; switch strategies available:
  5570                           ; Name         Instructions Cycles
  5571                           ; simple_byte           13     7 (average)
  5572                           ;	Chosen strategy is simple_byte
  5573  002226  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5574  002228  0A00               	xorlw	0	; case 0
  5575  00222A  B4D8               	btfsc	status,2,c
  5576  00222C  D79E               	goto	l21064
  5577  00222E  0A01               	xorlw	1	; case 1
  5578  002230  B4D8               	btfsc	status,2,c
  5579  002232  D7B8               	goto	l21072
  5580  002234  0A03               	xorlw	3	; case 2
  5581  002236  B4D8               	btfsc	status,2,c
  5582  002238  D7D2               	goto	l3385
  5583  00223A  0A01               	xorlw	1	; case 3
  5584  00223C  B4D8               	btfsc	status,2,c
  5585  00223E  D7DF               	goto	l3386
  5586  002240  D12C               	goto	l21252
  5587  002242                     l21104:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;sm_MenuConfiguration_MC50.c: 883:                 {;sm_MenuConfiguration_MC50.c: 884:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationOpen;
  5591  002242  0E98               	movlw	low _var_sys_NVM
  5592  002244  D001               	goto	L15
  5593  002246                     l21106:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;sm_MenuConfiguration_MC50.c: 888:                 {;sm_MenuConfiguration_MC50.c: 889:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationClose;
  5597  002246  0E99               	movlw	low (_var_sys_NVM+1)
  5598  002248                     L15:
  5599  002248  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5600  00224A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5601                           
  5602                           ;sm_MenuConfiguration_MC50.c: 890:                 };sm_MenuConfiguration_MC50.c: 891:  
      +                                         break;
  5603  00224C  D00E               	goto	l21112
  5604  00224E                     l21110:
  5605                           
  5606                           ; BSR set to: 0
  5607  00224E  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5608  002250  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5609  002252  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5610                           
  5611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5612                           ; Switch size 1, requested type "simple"
  5613                           ; Number of cases is 1, Range of values is 0 to 0
  5614                           ; switch strategies available:
  5615                           ; Name         Instructions Cycles
  5616                           ; simple_byte            4     3 (average)
  5617                           ;	Chosen strategy is simple_byte
  5618  002254  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5619  002256  0A00               	xorlw	0	; case 0
  5620  002258  A4D8               	btfss	status,2,c
  5621  00225A  D007               	goto	l21112
  5622                           
  5623                           ; BSR set to: 0
  5624                           ; Switch size 1, requested type "simple"
  5625                           ; Number of cases is 2, Range of values is 0 to 1
  5626                           ; switch strategies available:
  5627                           ; Name         Instructions Cycles
  5628                           ; simple_byte            7     4 (average)
  5629                           ;	Chosen strategy is simple_byte
  5630  00225C  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5631  00225E  0A00               	xorlw	0	; case 0
  5632  002260  B4D8               	btfsc	status,2,c
  5633  002262  D7EF               	goto	l21104
  5634  002264  0A01               	xorlw	1	; case 1
  5635  002266  B4D8               	btfsc	status,2,c
  5636  002268  D7EE               	goto	l21106
  5637  00226A                     l21112:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;sm_MenuConfiguration_MC50.c: 895:                 edit_Param.Max=45;
  5641  00226A  0E2D               	movlw	45
  5642  00226C                     L29:
  5643  00226C  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5644                           
  5645                           ;sm_MenuConfiguration_MC50.c: 896:                 edit_Param.Min=0;
  5646  00226E  0E00               	movlw	0
  5647  002270  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5648  002272                     L19:
  5649                           
  5650                           ;sm_MenuConfiguration_MC50.c: 899:             haveValueToEdit=1;
  5651  002272  0E01               	movlw	1
  5652  002274  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;sm_MenuConfiguration_MC50.c: 900:             edit_Param.tempValue= edit_Param.Value[0]
      +                          ;
  5656  002276  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  5657  00227A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  5658  00227E  50DF               	movf	indf2,w,c
  5659  002280  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  5660                           
  5661                           ;sm_MenuConfiguration_MC50.c: 901:         };sm_MenuConfiguration_MC50.c: 902:         b
      +                          reak;
  5662  002282  D10B               	goto	l21252
  5663  002284                     l21116:
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;sm_MenuConfiguration_MC50.c: 904:         {;sm_MenuConfiguration_MC50.c: 905:          
      +                             edit_Param.Max=9;
  5667  002284  0E09               	movlw	9
  5668  002286  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  5669                           
  5670                           ;sm_MenuConfiguration_MC50.c: 906:             edit_Param.Min=0;
  5671  002288  0E00               	movlw	0
  5672  00228A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5673                           
  5674                           ;sm_MenuConfiguration_MC50.c: 907:             switch (ParameterSelected)
  5675  00228C  D00F               	goto	l21132
  5676  00228E                     l21118:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;sm_MenuConfiguration_MC50.c: 910:                 {;sm_MenuConfiguration_MC50.c: 911:  
      +                                               if (var_sys_NVM.motorSensitivity <2)
  5680  00228E  0E02               	movlw	2
  5681  002290  619B               	cpfslt	(_var_sys_NVM+3)& (0+255),b	;volatile
  5682  002292  D002               	goto	l21122
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;sm_MenuConfiguration_MC50.c: 912:                       {;sm_MenuConfiguration_MC50.c: 
      +                          913:                         edit_Param.Min=0;
  5686  002294  0E00               	movlw	0
  5687  002296  D001               	goto	L16
  5688  002298                     l21122:
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;sm_MenuConfiguration_MC50.c: 916:                       {;sm_MenuConfiguration_MC50.c: 
      +                          917:                         edit_Param.Min=9;
  5692  002298  0E09               	movlw	9
  5693  00229A                     L16:
  5694  00229A  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;sm_MenuConfiguration_MC50.c: 919:                     edit_Param.Value=(unsigned char*)
      +                          &var_sys_NVM.motorPower;
  5698  00229C  0E9A               	movlw	low (_var_sys_NVM+2)
  5699  00229E  D003               	goto	L18
  5700  0022A0                     l21126:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;sm_MenuConfiguration_MC50.c: 923:                 {;sm_MenuConfiguration_MC50.c: 924:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.motorSensitivity;
  5704  0022A0  0E9B               	movlw	low (_var_sys_NVM+3)
  5705  0022A2  D001               	goto	L18
  5706  0022A4                     l21128:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;sm_MenuConfiguration_MC50.c: 928:                 {;sm_MenuConfiguration_MC50.c: 929:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.decelarationSensivity;
  5710  0022A4  0EA7               	movlw	low (_var_sys_NVM+15)
  5711  0022A6                     L18:
  5712  0022A6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5713  0022A8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5714                           
  5715                           ;sm_MenuConfiguration_MC50.c: 930:                 };sm_MenuConfiguration_MC50.c: 931:  
      +                                         break;
  5716  0022AA  D7E3               	goto	L19
  5717  0022AC                     l21132:
  5718                           
  5719                           ; BSR set to: 0
  5720  0022AC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5721  0022AE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5722  0022B0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5723                           
  5724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5725                           ; Switch size 1, requested type "simple"
  5726                           ; Number of cases is 1, Range of values is 0 to 0
  5727                           ; switch strategies available:
  5728                           ; Name         Instructions Cycles
  5729                           ; simple_byte            4     3 (average)
  5730                           ;	Chosen strategy is simple_byte
  5731  0022B2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5732  0022B4  0A00               	xorlw	0	; case 0
  5733  0022B6  A4D8               	btfss	status,2,c
  5734  0022B8  D7DC               	goto	L19
  5735                           
  5736                           ; BSR set to: 0
  5737                           ; Switch size 1, requested type "simple"
  5738                           ; Number of cases is 3, Range of values is 0 to 2
  5739                           ; switch strategies available:
  5740                           ; Name         Instructions Cycles
  5741                           ; simple_byte           10     6 (average)
  5742                           ;	Chosen strategy is simple_byte
  5743  0022BA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5744  0022BC  0A00               	xorlw	0	; case 0
  5745  0022BE  B4D8               	btfsc	status,2,c
  5746  0022C0  D7E6               	goto	l21118
  5747  0022C2  0A01               	xorlw	1	; case 1
  5748  0022C4  B4D8               	btfsc	status,2,c
  5749  0022C6  D7EC               	goto	l21126
  5750  0022C8  0A03               	xorlw	3	; case 2
  5751  0022CA  B4D8               	btfsc	status,2,c
  5752  0022CC  D7EB               	goto	l21128
  5753  0022CE  D7D1               	goto	L19
  5754  0022D0                     l21138:
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;sm_MenuConfiguration_MC50.c: 942:                 {;sm_MenuConfiguration_MC50.c: 943:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeFullClose;
  5758  0022D0  0E9D               	movlw	low (_var_sys_NVM+5)
  5759  0022D2  D001               	goto	L20
  5760  0022D4                     l21140:
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;sm_MenuConfiguration_MC50.c: 947:                 {;sm_MenuConfiguration_MC50.c: 948:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.autoTimeWalkClose;
  5764  0022D4  0E9E               	movlw	low (_var_sys_NVM+6)
  5765  0022D6                     L20:
  5766  0022D6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5767  0022D8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5768                           
  5769                           ;sm_MenuConfiguration_MC50.c: 949:                 };sm_MenuConfiguration_MC50.c: 950:  
      +                                         break;
  5770  0022DA  D00E               	goto	l21146
  5771  0022DC                     l21144:
  5772                           
  5773                           ; BSR set to: 0
  5774  0022DC  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5775  0022DE  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5776  0022E0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5777                           
  5778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5779                           ; Switch size 1, requested type "simple"
  5780                           ; Number of cases is 1, Range of values is 0 to 0
  5781                           ; switch strategies available:
  5782                           ; Name         Instructions Cycles
  5783                           ; simple_byte            4     3 (average)
  5784                           ;	Chosen strategy is simple_byte
  5785  0022E2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5786  0022E4  0A00               	xorlw	0	; case 0
  5787  0022E6  A4D8               	btfss	status,2,c
  5788  0022E8  D007               	goto	l21146
  5789                           
  5790                           ; BSR set to: 0
  5791                           ; Switch size 1, requested type "simple"
  5792                           ; Number of cases is 2, Range of values is 0 to 1
  5793                           ; switch strategies available:
  5794                           ; Name         Instructions Cycles
  5795                           ; simple_byte            7     4 (average)
  5796                           ;	Chosen strategy is simple_byte
  5797  0022EA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5798  0022EC  0A00               	xorlw	0	; case 0
  5799  0022EE  B4D8               	btfsc	status,2,c
  5800  0022F0  D7EF               	goto	l21138
  5801  0022F2  0A01               	xorlw	1	; case 1
  5802  0022F4  B4D8               	btfsc	status,2,c
  5803  0022F6  D7EE               	goto	l21140
  5804  0022F8                     l21146:
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;sm_MenuConfiguration_MC50.c: 952:             edit_Param.Max=99;
  5808  0022F8  0E63               	movlw	99
  5809  0022FA  D7B8               	goto	L29
  5810  0022FC                     l21150:
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;sm_MenuConfiguration_MC50.c: 963:                 {;sm_MenuConfiguration_MC50.c: 964:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellIsON;
  5814  0022FC  0E9F               	movlw	low (_var_sys_NVM+7)
  5815  0022FE  D034               	goto	L125
  5816  002300                     l21152:
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;sm_MenuConfiguration_MC50.c: 968:                 {;sm_MenuConfiguration_MC50.c: 969:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.photoCellInOpen;
  5820  002300  0EA0               	movlw	low (_var_sys_NVM+8)
  5821  002302  D032               	goto	L125
  5822  002304                     l21156:
  5823                           
  5824                           ; BSR set to: 0
  5825  002304  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5826  002306  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5827  002308  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5828                           
  5829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5830                           ; Switch size 1, requested type "simple"
  5831                           ; Number of cases is 1, Range of values is 0 to 0
  5832                           ; switch strategies available:
  5833                           ; Name         Instructions Cycles
  5834                           ; simple_byte            4     3 (average)
  5835                           ;	Chosen strategy is simple_byte
  5836  00230A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5837  00230C  0A00               	xorlw	0	; case 0
  5838  00230E  A4D8               	btfss	status,2,c
  5839  002310  D02D               	goto	L124
  5840                           
  5841                           ; BSR set to: 0
  5842                           ; Switch size 1, requested type "simple"
  5843                           ; Number of cases is 2, Range of values is 0 to 1
  5844                           ; switch strategies available:
  5845                           ; Name         Instructions Cycles
  5846                           ; simple_byte            7     4 (average)
  5847                           ;	Chosen strategy is simple_byte
  5848  002312  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5849  002314  0A00               	xorlw	0	; case 0
  5850  002316  B4D8               	btfsc	status,2,c
  5851  002318  D7F1               	goto	l21150
  5852  00231A  0A01               	xorlw	1	; case 1
  5853  00231C  B4D8               	btfsc	status,2,c
  5854  00231E  D7F0               	goto	l21152
  5855  002320  D025               	goto	L124
  5856  002322                     l21162:
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;sm_MenuConfiguration_MC50.c: 984:                 {;sm_MenuConfiguration_MC50.c: 985:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandIsON;
  5860  002322  0EA1               	movlw	low (_var_sys_NVM+9)
  5861  002324  D021               	goto	L125
  5862  002326                     l21164:
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;sm_MenuConfiguration_MC50.c: 989:                 {;sm_MenuConfiguration_MC50.c: 990:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandType;
  5866  002326  0EA2               	movlw	low (_var_sys_NVM+10)
  5867  002328  D01F               	goto	L125
  5868  00232A                     l21166:
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;sm_MenuConfiguration_MC50.c: 994:                 {;sm_MenuConfiguration_MC50.c: 995:  
      +                                             edit_Param.Value=(unsigned char*)&var_sys_NVM.securityBandInOpen;
  5872  00232A  0EA3               	movlw	low (_var_sys_NVM+11)
  5873  00232C  D01D               	goto	L125
  5874  00232E                     l21168:
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;sm_MenuConfiguration_MC50.c: 999:                 {;sm_MenuConfiguration_MC50.c: 1000: 
      +                                              edit_Param.Value=(unsigned char*)&var_sys_NVM.Stopboton;
  5878  00232E  0EAE               	movlw	low (_var_sys_NVM+22)
  5879  002330  D01B               	goto	L125
  5880  002332                     l21172:
  5881                           
  5882                           ; BSR set to: 0
  5883  002332  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5884  002334  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5885  002336  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5886                           
  5887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5888                           ; Switch size 1, requested type "simple"
  5889                           ; Number of cases is 1, Range of values is 0 to 0
  5890                           ; switch strategies available:
  5891                           ; Name         Instructions Cycles
  5892                           ; simple_byte            4     3 (average)
  5893                           ;	Chosen strategy is simple_byte
  5894  002338  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5895  00233A  0A00               	xorlw	0	; case 0
  5896  00233C  A4D8               	btfss	status,2,c
  5897  00233E  D016               	goto	L124
  5898                           
  5899                           ; BSR set to: 0
  5900                           ; Switch size 1, requested type "simple"
  5901                           ; Number of cases is 4, Range of values is 0 to 3
  5902                           ; switch strategies available:
  5903                           ; Name         Instructions Cycles
  5904                           ; simple_byte           13     7 (average)
  5905                           ;	Chosen strategy is simple_byte
  5906  002340  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5907  002342  0A00               	xorlw	0	; case 0
  5908  002344  B4D8               	btfsc	status,2,c
  5909  002346  D7ED               	goto	l21162
  5910  002348  0A01               	xorlw	1	; case 1
  5911  00234A  B4D8               	btfsc	status,2,c
  5912  00234C  D7EC               	goto	l21164
  5913  00234E  0A03               	xorlw	3	; case 2
  5914  002350  B4D8               	btfsc	status,2,c
  5915  002352  D7EB               	goto	l21166
  5916  002354  0A01               	xorlw	1	; case 3
  5917  002356  B4D8               	btfsc	status,2,c
  5918  002358  D7EA               	goto	l21168
  5919  00235A  D008               	goto	L124
  5920  00235C                     l21178:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;sm_MenuConfiguration_MC50.c: 1018:                 {;sm_MenuConfiguration_MC50.c: 1019:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.homemPresente;
  5924  00235C  0EA8               	movlw	low (_var_sys_NVM+16)
  5925  00235E  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5926  002360  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;sm_MenuConfiguration_MC50.c: 1020:                       edit_Param.Max=2;
  5930  002362  0E02               	movlw	2
  5931  002364  D783               	goto	L29
  5932  002366                     l21184:
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;sm_MenuConfiguration_MC50.c: 1025:                 {;sm_MenuConfiguration_MC50.c: 1026:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.logicDigital;
  5936  002366  0EA9               	movlw	low (_var_sys_NVM+17)
  5937  002368                     L125:
  5938  002368  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5939  00236A  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5940  00236C                     L124:
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;sm_MenuConfiguration_MC50.c: 1027:                     edit_Param.Max=1;
  5944  00236C  0E01               	movlw	1
  5945  00236E  D77E               	goto	L29
  5946  002370                     l21192:
  5947                           
  5948                           ; BSR set to: 0
  5949  002370  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  5950  002372  6FDC               	movwf	??_setValueToEdit& (0+255),b
  5951  002374  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  5952                           
  5953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5954                           ; Switch size 1, requested type "simple"
  5955                           ; Number of cases is 1, Range of values is 0 to 0
  5956                           ; switch strategies available:
  5957                           ; Name         Instructions Cycles
  5958                           ; simple_byte            4     3 (average)
  5959                           ;	Chosen strategy is simple_byte
  5960  002376  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  5961  002378  0A00               	xorlw	0	; case 0
  5962  00237A  A4D8               	btfss	status,2,c
  5963  00237C  D77A               	goto	L19
  5964                           
  5965                           ; BSR set to: 0
  5966                           ; Switch size 1, requested type "simple"
  5967                           ; Number of cases is 2, Range of values is 0 to 1
  5968                           ; switch strategies available:
  5969                           ; Name         Instructions Cycles
  5970                           ; simple_byte            7     4 (average)
  5971                           ;	Chosen strategy is simple_byte
  5972  00237E  51DC               	movf	??_setValueToEdit& (0+255),w,b
  5973  002380  0A00               	xorlw	0	; case 0
  5974  002382  B4D8               	btfsc	status,2,c
  5975  002384  D7EB               	goto	l21178
  5976  002386  0A01               	xorlw	1	; case 1
  5977  002388  B4D8               	btfsc	status,2,c
  5978  00238A  D7ED               	goto	l21184
  5979  00238C  D772               	goto	L19
  5980  00238E                     l21198:
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;sm_MenuConfiguration_MC50.c: 1042:                 {;sm_MenuConfiguration_MC50.c: 1043:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softStart;
  5984  00238E  0EAA               	movlw	low (_var_sys_NVM+18)
  5985  002390  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  5986  002392  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;sm_MenuConfiguration_MC50.c: 1044:                      edit_Param.Max=9;
  5990  002394  0E09               	movlw	9
  5991  002396  D76A               	goto	L29
  5992  002398                     l21204:
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;sm_MenuConfiguration_MC50.c: 1049:                 {;sm_MenuConfiguration_MC50.c: 1050:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.softstop;
  5996  002398  0EAB               	movlw	low (_var_sys_NVM+19)
  5997  00239A  D7FA               	goto	L27
  5998  00239C                     l21212:
  5999                           
  6000                           ; BSR set to: 0
  6001  00239C  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6002  00239E  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6003  0023A0  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6004                           
  6005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6006                           ; Switch size 1, requested type "simple"
  6007                           ; Number of cases is 1, Range of values is 0 to 0
  6008                           ; switch strategies available:
  6009                           ; Name         Instructions Cycles
  6010                           ; simple_byte            4     3 (average)
  6011                           ;	Chosen strategy is simple_byte
  6012  0023A2  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6013  0023A4  0A00               	xorlw	0	; case 0
  6014  0023A6  A4D8               	btfss	status,2,c
  6015  0023A8  D764               	goto	L19
  6016                           
  6017                           ; BSR set to: 0
  6018                           ; Switch size 1, requested type "simple"
  6019                           ; Number of cases is 2, Range of values is 0 to 1
  6020                           ; switch strategies available:
  6021                           ; Name         Instructions Cycles
  6022                           ; simple_byte            7     4 (average)
  6023                           ;	Chosen strategy is simple_byte
  6024  0023AA  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6025  0023AC  0A00               	xorlw	0	; case 0
  6026  0023AE  B4D8               	btfsc	status,2,c
  6027  0023B0  D7EE               	goto	l21198
  6028  0023B2  0A01               	xorlw	1	; case 1
  6029  0023B4  B4D8               	btfsc	status,2,c
  6030  0023B6  D7F0               	goto	l21204
  6031  0023B8  D75C               	goto	L19
  6032  0023BA                     l21218:
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;sm_MenuConfiguration_MC50.c: 1068:                 {;sm_MenuConfiguration_MC50.c: 1069:
      +                                 edit_Param.Value=&value;
  6036  0023BA  0EF9               	movlw	low setValueToEdit@value
  6037  0023BC  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6038  0023BE  0E01               	movlw	high setValueToEdit@value
  6039  0023C0  6E48               	movwf	(_edit_Param+2)^0,c	;volatile
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;sm_MenuConfiguration_MC50.c: 1070:                     for(unsigned char posindex=0; po
      +                          sindex <= *(unsigned char*)&var_sys_NVM.positionRemotesFull; posindex++)
  6043  0023C2  0E00               	movlw	0
  6044  0023C4  6FDF               	movwf	setValueToEdit@posindex& (0+255),b
  6045  0023C6  D00D               	goto	l21228
  6046  0023C8                     l3433:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;sm_MenuConfiguration_MC50.c: 1071:                     {;sm_MenuConfiguration_MC50.c: 1
      +                          072:                         value=posindex;
  6050  0023C8  C0DF  F1F9         	movff	setValueToEdit@posindex,setValueToEdit@value
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;sm_MenuConfiguration_MC50.c: 1073:                         if(cmdMemoryIsEmpty(menu_st.
      +                          parameterSelected, posindex))
  6054  0023CC  C0DF  F02E         	movff	setValueToEdit@posindex,cmdMemoryIsEmpty@position
  6055  0023D0  0101               	movlb	1	; () banked
  6056  0023D2  5168               	movf	(_menu_st+23)& (0+255),w,b
  6057  0023D4  EC9C  F03C         	call	_cmdMemoryIsEmpty
  6058  0023D8  0900               	iorlw	0
  6059  0023DA  A4D8               	btfss	status,2,c
  6060  0023DC  D008               	goto	u24380
  6061                           
  6062                           ;sm_MenuConfiguration_MC50.c: 1075:                     }
  6063  0023DE  0100               	movlb	0	; () banked
  6064  0023E0  2BDF               	incf	setValueToEdit@posindex& (0+255),f,b
  6065  0023E2                     l21228:
  6066                           
  6067                           ; BSR set to: 0
  6068  0023E2  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6069  0023E6  51DF               	movf	setValueToEdit@posindex& (0+255),w,b
  6070  0023E8  5CDE               	subwf	postinc2,w,c
  6071  0023EA  B0D8               	btfsc	status,0,c
  6072  0023EC  D7ED               	goto	l3433
  6073  0023EE                     u24380:
  6074                           
  6075                           ;sm_MenuConfiguration_MC50.c: 1076:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesFull;
  6076  0023EE  EE20  F0B8         	lfsr	2,_var_sys_NVM+32
  6077  0023F2  D005               	goto	L28
  6078  0023F4                     l21232:
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;sm_MenuConfiguration_MC50.c: 1080:                 {;sm_MenuConfiguration_MC50.c: 1081:
      +                                               edit_Param.Value=(unsigned char*)&var_sys_NVM.positionRemotesWalk;
  6082  0023F4  0EB9               	movlw	low (_var_sys_NVM+33)
  6083  0023F6  6E47               	movwf	(_edit_Param+1)^0,c	;volatile
  6084  0023F8  6A48               	clrf	(_edit_Param+2)^0,c	;volatile
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;sm_MenuConfiguration_MC50.c: 1082:                     edit_Param.Max=*(unsigned char*)
      +                          &var_sys_NVM.positionRemotesWalk;
  6088  0023FA  EE20  F0B9         	lfsr	2,_var_sys_NVM+33
  6089  0023FE                     L28:
  6090  0023FE  50DF               	movf	indf2,w,c
  6091  002400  6E4A               	movwf	(_edit_Param+4)^0,c	;volatile
  6092                           
  6093                           ;sm_MenuConfiguration_MC50.c: 1083:                 };sm_MenuConfiguration_MC50.c: 1084:
      +                                           break;
  6094  002402  D00E               	goto	l21240
  6095  002404                     l21238:
  6096                           
  6097                           ; BSR set to: 0
  6098  002404  503A               	movf	setValueToEdit@ParameterSelected^0,w,c
  6099  002406  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6100  002408  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6101                           
  6102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6103                           ; Switch size 1, requested type "simple"
  6104                           ; Number of cases is 1, Range of values is 0 to 0
  6105                           ; switch strategies available:
  6106                           ; Name         Instructions Cycles
  6107                           ; simple_byte            4     3 (average)
  6108                           ;	Chosen strategy is simple_byte
  6109  00240A  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6110  00240C  0A00               	xorlw	0	; case 0
  6111  00240E  A4D8               	btfss	status,2,c
  6112  002410  D007               	goto	l21240
  6113                           
  6114                           ; BSR set to: 0
  6115                           ; Switch size 1, requested type "simple"
  6116                           ; Number of cases is 2, Range of values is 0 to 1
  6117                           ; switch strategies available:
  6118                           ; Name         Instructions Cycles
  6119                           ; simple_byte            7     4 (average)
  6120                           ;	Chosen strategy is simple_byte
  6121  002412  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6122  002414  0A00               	xorlw	0	; case 0
  6123  002416  B4D8               	btfsc	status,2,c
  6124  002418  D7D0               	goto	l21218
  6125  00241A  0A01               	xorlw	1	; case 1
  6126  00241C  B4D8               	btfsc	status,2,c
  6127  00241E  D7EA               	goto	l21232
  6128  002420                     l21240:
  6129                           
  6130                           ;sm_MenuConfiguration_MC50.c: 1086:             edit_Param.position=*edit_Param.Value;
  6131  002420  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6132  002424  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6133  002428  50DF               	movf	indf2,w,c
  6134  00242A  6E46               	movwf	_edit_Param^0,c	;volatile
  6135                           
  6136                           ;sm_MenuConfiguration_MC50.c: 1087:             edit_Param.Min=0;
  6137  00242C  0E00               	movlw	0
  6138  00242E  6E4B               	movwf	(_edit_Param+5)^0,c	;volatile
  6139                           
  6140                           ;sm_MenuConfiguration_MC50.c: 1088:             haveValueToEdit=1;
  6141  002430  0E01               	movlw	1
  6142  002432  0100               	movlb	0	; () banked
  6143  002434  6FE0               	movwf	setValueToEdit@haveValueToEdit& (0+255),b
  6144                           
  6145                           ;sm_MenuConfiguration_MC50.c: 1089:             edit_Param.tempValue=*edit_Param.Value;
  6146  002436  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  6147  00243A  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  6148  00243E  50DF               	movf	indf2,w,c
  6149  002440  6E49               	movwf	(_edit_Param+3)^0,c	;volatile
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;sm_MenuConfiguration_MC50.c: 1090:             InitReceiver();
  6153  002442  ECF6  F049         	call	_InitReceiver	;wreg free
  6154                           
  6155                           ;sm_MenuConfiguration_MC50.c: 1091:         };sm_MenuConfiguration_MC50.c: 1092:        
      +                           break;
  6156  002446  D029               	goto	l21252
  6157  002448                     l21250:
  6158                           
  6159                           ; BSR set to: 0
  6160  002448  51DE               	movf	setValueToEdit@menuType& (0+255),w,b
  6161  00244A  6FDC               	movwf	??_setValueToEdit& (0+255),b
  6162  00244C  6BDD               	clrf	(??_setValueToEdit+1)& (0+255),b
  6163                           
  6164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6165                           ; Switch size 1, requested type "simple"
  6166                           ; Number of cases is 1, Range of values is 0 to 0
  6167                           ; switch strategies available:
  6168                           ; Name         Instructions Cycles
  6169                           ; simple_byte            4     3 (average)
  6170                           ;	Chosen strategy is simple_byte
  6171  00244E  51DD               	movf	(??_setValueToEdit+1)& (0+255),w,b
  6172  002450  0A00               	xorlw	0	; case 0
  6173  002452  A4D8               	btfss	status,2,c
  6174  002454  D022               	goto	l21252
  6175                           
  6176                           ; BSR set to: 0
  6177                           ; Switch size 1, requested type "simple"
  6178                           ; Number of cases is 11, Range of values is 0 to 12
  6179                           ; switch strategies available:
  6180                           ; Name         Instructions Cycles
  6181                           ; simple_byte           34    18 (average)
  6182                           ;	Chosen strategy is simple_byte
  6183  002456  51DC               	movf	??_setValueToEdit& (0+255),w,b
  6184  002458  0A00               	xorlw	0	; case 0
  6185  00245A  B4D8               	btfsc	status,2,c
  6186  00245C  D5A1               	goto	l3353
  6187  00245E  0A01               	xorlw	1	; case 1
  6188  002460  B4D8               	btfsc	status,2,c
  6189  002462  D5FE               	goto	l3367
  6190  002464  0A05               	xorlw	5	; case 4
  6191  002466  B4D8               	btfsc	status,2,c
  6192  002468  D6D7               	goto	l21102
  6193  00246A  0A01               	xorlw	1	; case 5
  6194  00246C  B4D8               	btfsc	status,2,c
  6195  00246E  D6EF               	goto	l21110
  6196  002470  0A03               	xorlw	3	; case 6
  6197  002472  B4D8               	btfsc	status,2,c
  6198  002474  D707               	goto	l21116
  6199  002476  0A01               	xorlw	1	; case 7
  6200  002478  B4D8               	btfsc	status,2,c
  6201  00247A  D730               	goto	l21144
  6202  00247C  0A0F               	xorlw	15	; case 8
  6203  00247E  B4D8               	btfsc	status,2,c
  6204  002480  D741               	goto	l21156
  6205  002482  0A01               	xorlw	1	; case 9
  6206  002484  B4D8               	btfsc	status,2,c
  6207  002486  D755               	goto	l21172
  6208  002488  0A03               	xorlw	3	; case 10
  6209  00248A  B4D8               	btfsc	status,2,c
  6210  00248C  D771               	goto	l21192
  6211  00248E  0A01               	xorlw	1	; case 11
  6212  002490  B4D8               	btfsc	status,2,c
  6213  002492  D784               	goto	l21212
  6214  002494  0A07               	xorlw	7	; case 12
  6215  002496  B4D8               	btfsc	status,2,c
  6216  002498  D7B5               	goto	l21238
  6217  00249A                     l21252:
  6218                           
  6219                           ;sm_MenuConfiguration_MC50.c: 1095:     return haveValueToEdit;
  6220  00249A  0100               	movlb	0	; () banked
  6221  00249C  51E0               	movf	setValueToEdit@haveValueToEdit& (0+255),w,b
  6222                           
  6223                           ; BSR set to: 0
  6224  00249E  0012               	return		;funcret
  6225  0024A0                     __end_of_setValueToEdit:
  6226                           	callstack 0
  6227                           
  6228 ;; *************** function _load_New_Menu *****************
  6229 ;; Defined at:
  6230 ;;		line 434 in file "sm_MenuConfiguration_MC50.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  Menu            1    wreg     enum E10813
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  Menu            1   33[COMRAM] enum E10813
  6235 ;;  i               1   34[COMRAM] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6248 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6249 ;;Total ram usage:        4 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; Hardware stack levels required when called: 5
  6252 ;; This function calls:
  6253 ;;		_SetSegmentValueIntermitentMain
  6254 ;;		_SetSegmentValueMain
  6255 ;; This function is called by:
  6256 ;;		_sm_execute_main
  6257 ;;		_sm_execute_menuConfiguration
  6258 ;;		_setValueToEdit
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text4
  6263  004194                     __ptext4:
  6264                           	callstack 0
  6265  004194                     _load_New_Menu:
  6266                           	callstack 22
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;incstack = 0
  6270                           ;load_New_Menu@Menu stored from wreg
  6271  004194  6E22               	movwf	load_New_Menu@Menu^0,c
  6272                           
  6273                           ;sm_MenuConfiguration_MC50.c: 435:     ts_system.timeoutMenu=((1000/50)*5) ;
  6274  004196  0E00               	movlw	0
  6275  004198  0101               	movlb	1	; () banked
  6276  00419A  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  6277  00419C  0E64               	movlw	100
  6278  00419E  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  6279                           
  6280                           ; BSR set to: 1
  6281                           ;sm_MenuConfiguration_MC50.c: 439:     if(menu_st.actualMenu!=Menu && Menu>E_Menu)
  6282  0041A0  5022               	movf	load_New_Menu@Menu^0,w,c
  6283  0041A2  1966               	xorwf	(_menu_st+21)& (0+255),w,b
  6284  0041A4  B4D8               	btfsc	status,2,c
  6285  0041A6  D006               	goto	l20260
  6286                           
  6287                           ; BSR set to: 1
  6288  0041A8  0E01               	movlw	1
  6289  0041AA  6422               	cpfsgt	load_New_Menu@Menu^0,c
  6290  0041AC  D003               	goto	l20260
  6291                           
  6292                           ; BSR set to: 1
  6293                           ;sm_MenuConfiguration_MC50.c: 440:     {;sm_MenuConfiguration_MC50.c: 441:         menu_
      +                          st.parameterSelected=0;
  6294  0041AE  0E00               	movlw	0
  6295  0041B0  6F68               	movwf	(_menu_st+23)& (0+255),b
  6296                           
  6297                           ;sm_MenuConfiguration_MC50.c: 442:     }
  6298  0041B2  D005               	goto	l20264
  6299  0041B4                     l20260:
  6300                           
  6301                           ; BSR set to: 1
  6302  0041B4  0E02               	movlw	2
  6303  0041B6  6022               	cpfslt	load_New_Menu@Menu^0,c
  6304  0041B8  D002               	goto	l20264
  6305                           
  6306                           ; BSR set to: 1
  6307                           ;sm_MenuConfiguration_MC50.c: 444:     {;sm_MenuConfiguration_MC50.c: 445:        menu_s
      +                          t.parameterSelected = menu_st.lastMainParameterSelected;
  6308  0041BA  C169  F168         	movff	_menu_st+24,_menu_st+23
  6309  0041BE                     l20264:
  6310                           
  6311                           ; BSR set to: 1
  6312                           ;sm_MenuConfiguration_MC50.c: 449:     menu_st.lastMenu=((void*)0);
  6313  0041BE  0E00               	movlw	0
  6314  0041C0  6F65               	movwf	(_menu_st+20)& (0+255),b
  6315                           
  6316                           ;sm_MenuConfiguration_MC50.c: 450:     switch (Menu)
  6317  0041C2  D0F6               	goto	l20316
  6318  0041C4                     l20266:
  6319                           
  6320                           ; BSR set to: 1
  6321                           ;sm_MenuConfiguration_MC50.c: 453:         {;sm_MenuConfiguration_MC50.c: 455:          
      +                             menu_st.actualMenu=P_Menu;
  6322  0041C4  0E00               	movlw	0
  6323  0041C6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6324                           
  6325                           ;sm_MenuConfiguration_MC50.c: 456:             menu_st.menuSize=10;
  6326  0041C8  0E0A               	movlw	10
  6327  0041CA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6328                           
  6329                           ;sm_MenuConfiguration_MC50.c: 457:             menu_st.lastMainParameterSelected=0;
  6330  0041CC  0E00               	movlw	0
  6331  0041CE  6F69               	movwf	(_menu_st+24)& (0+255),b
  6332                           
  6333                           ;sm_MenuConfiguration_MC50.c: 458:             for (i=0;i<(10);i++)
  6334  0041D0  0E00               	movlw	0
  6335  0041D2  6E23               	movwf	load_New_Menu@i^0,c
  6336  0041D4                     l20272:
  6337                           
  6338                           ;sm_MenuConfiguration_MC50.c: 459:             {;sm_MenuConfiguration_MC50.c: 460:      
      +                                    menu_st.menuList[i].value_display1=dP;
  6339  0041D4  5023               	movf	load_New_Menu@i^0,w,c
  6340  0041D6  0D02               	mullw	2
  6341  0041D8  0E51               	movlw	low _menu_st
  6342  0041DA  24F3               	addwf	243,w,c
  6343  0041DC  6ED9               	movwf	fsr2l,c
  6344  0041DE  0E01               	movlw	high _menu_st
  6345  0041E0  20F4               	addwfc	prodh,w,c
  6346  0041E2  6EDA               	movwf	fsr2h,c
  6347  0041E4  0E10               	movlw	16
  6348  0041E6  6EDF               	movwf	indf2,c
  6349                           
  6350                           ;sm_MenuConfiguration_MC50.c: 461:                menu_st.menuList[i].value_display2=i;
  6351  0041E8  5023               	movf	load_New_Menu@i^0,w,c
  6352  0041EA  0D02               	mullw	2
  6353  0041EC  0E52               	movlw	low (_menu_st+1)
  6354  0041EE  24F3               	addwf	243,w,c
  6355  0041F0  6ED9               	movwf	fsr2l,c
  6356  0041F2  0E01               	movlw	high (_menu_st+1)
  6357  0041F4  20F4               	addwfc	prodh,w,c
  6358  0041F6  6EDA               	movwf	fsr2h,c
  6359  0041F8  C023  FFDF         	movff	load_New_Menu@i,indf2
  6360                           
  6361                           ;sm_MenuConfiguration_MC50.c: 462:             }
  6362  0041FC  2A23               	incf	load_New_Menu@i^0,f,c
  6363  0041FE  0E09               	movlw	9
  6364  004200  6423               	cpfsgt	load_New_Menu@i^0,c
  6365  004202  D7E8               	goto	l20272
  6366  004204  D107               	goto	l20318
  6367  004206                     l20278:
  6368                           
  6369                           ; BSR set to: 1
  6370                           ;sm_MenuConfiguration_MC50.c: 466:         {;sm_MenuConfiguration_MC50.c: 468:          
      +                             menu_st.actualMenu=E_Menu;
  6371  004206  0E01               	movlw	1
  6372  004208  6F66               	movwf	(_menu_st+21)& (0+255),b
  6373                           
  6374                           ;sm_MenuConfiguration_MC50.c: 469:             menu_st.menuSize=10;
  6375  00420A  0E0A               	movlw	10
  6376  00420C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6377                           
  6378                           ;sm_MenuConfiguration_MC50.c: 470:             menu_st.lastMainParameterSelected=0;
  6379  00420E  0E00               	movlw	0
  6380  004210  6F69               	movwf	(_menu_st+24)& (0+255),b
  6381                           
  6382                           ;sm_MenuConfiguration_MC50.c: 471:             for (i=0;i<(10);i++)
  6383  004212  0E00               	movlw	0
  6384  004214  6E23               	movwf	load_New_Menu@i^0,c
  6385  004216                     l20284:
  6386                           
  6387                           ;sm_MenuConfiguration_MC50.c: 472:             {;sm_MenuConfiguration_MC50.c: 473:      
      +                                    menu_st.menuList[i].value_display1=dE;
  6388  004216  5023               	movf	load_New_Menu@i^0,w,c
  6389  004218  0D02               	mullw	2
  6390  00421A  0E51               	movlw	low _menu_st
  6391  00421C  24F3               	addwf	243,w,c
  6392  00421E  6ED9               	movwf	fsr2l,c
  6393  004220  0E01               	movlw	high _menu_st
  6394  004222  20F4               	addwfc	prodh,w,c
  6395  004224  6EDA               	movwf	fsr2h,c
  6396  004226  0E0E               	movlw	14
  6397  004228  6EDF               	movwf	indf2,c
  6398                           
  6399                           ;sm_MenuConfiguration_MC50.c: 474:                menu_st.menuList[i].value_display2=i;
  6400  00422A  5023               	movf	load_New_Menu@i^0,w,c
  6401  00422C  0D02               	mullw	2
  6402  00422E  0E52               	movlw	low (_menu_st+1)
  6403  004230  24F3               	addwf	243,w,c
  6404  004232  6ED9               	movwf	fsr2l,c
  6405  004234  0E01               	movlw	high (_menu_st+1)
  6406  004236  20F4               	addwfc	prodh,w,c
  6407  004238  6EDA               	movwf	fsr2h,c
  6408  00423A  C023  FFDF         	movff	load_New_Menu@i,indf2
  6409                           
  6410                           ;sm_MenuConfiguration_MC50.c: 475:             }
  6411  00423E  2A23               	incf	load_New_Menu@i^0,f,c
  6412  004240  0E09               	movlw	9
  6413  004242  6423               	cpfsgt	load_New_Menu@i^0,c
  6414  004244  D7E8               	goto	l20284
  6415  004246  D0E6               	goto	l20318
  6416  004248                     l20290:
  6417                           
  6418                           ; BSR set to: 1
  6419                           ;sm_MenuConfiguration_MC50.c: 479:         {;sm_MenuConfiguration_MC50.c: 480:          
      +                             menu_st.lastMenu=P_Menu;
  6420  004248  0E00               	movlw	0
  6421  00424A  6F65               	movwf	(_menu_st+20)& (0+255),b
  6422                           
  6423                           ;sm_MenuConfiguration_MC50.c: 481:             menu_st.actualMenu=P0_SMenu;
  6424  00424C  0E04               	movlw	4
  6425  00424E  6F66               	movwf	(_menu_st+21)& (0+255),b
  6426                           
  6427                           ;sm_MenuConfiguration_MC50.c: 482:             menu_st.menuSize=4;
  6428  004250  0E04               	movlw	4
  6429  004252  6F67               	movwf	(_menu_st+22)& (0+255),b
  6430                           
  6431                           ;sm_MenuConfiguration_MC50.c: 483:             menu_st.menuList[0].value_display1=dA;
  6432  004254  0E0A               	movlw	10
  6433  004256  6F51               	movwf	_menu_st& (0+255),b
  6434                           
  6435                           ;sm_MenuConfiguration_MC50.c: 484:             menu_st.menuList[0].value_display2=dU;
  6436  004258  0E13               	movlw	19
  6437  00425A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6438                           
  6439                           ;sm_MenuConfiguration_MC50.c: 485:             menu_st.menuList[1].value_display1=dM;
  6440  00425C  0E17               	movlw	23
  6441  00425E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6442                           
  6443                           ;sm_MenuConfiguration_MC50.c: 486:             menu_st.menuList[1].value_display2=dA;
  6444  004260  0E0A               	movlw	10
  6445  004262  6F54               	movwf	(_menu_st+3)& (0+255),b
  6446                           
  6447                           ;sm_MenuConfiguration_MC50.c: 487:             menu_st.menuList[2].value_display1=d5;
  6448  004264  0E05               	movlw	5
  6449  004266  6F55               	movwf	(_menu_st+4)& (0+255),b
  6450                           
  6451                           ;sm_MenuConfiguration_MC50.c: 488:             menu_st.menuList[2].value_display2=dy;
  6452  004268  0E21               	movlw	33
  6453  00426A  6F56               	movwf	(_menu_st+5)& (0+255),b
  6454                           
  6455                           ;sm_MenuConfiguration_MC50.c: 489:             menu_st.menuList[3].value_display1=dd;
  6456  00426C  0E0D               	movlw	13
  6457  00426E  6F57               	movwf	(_menu_st+6)& (0+255),b
  6458                           
  6459                           ;sm_MenuConfiguration_MC50.c: 490:             menu_st.menuList[3].value_display2=d1;
  6460  004270  0E01               	movlw	1
  6461  004272  D051               	goto	L31
  6462  004274                     l20292:
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;sm_MenuConfiguration_MC50.c: 494:         {;sm_MenuConfiguration_MC50.c: 495:          
      +                             menu_st.lastMenu=P_Menu;
  6466  004274  0E00               	movlw	0
  6467  004276  6F65               	movwf	(_menu_st+20)& (0+255),b
  6468                           
  6469                           ;sm_MenuConfiguration_MC50.c: 496:             menu_st.actualMenu=P1_SMenu;
  6470  004278  0E05               	movlw	5
  6471  00427A  6F66               	movwf	(_menu_st+21)& (0+255),b
  6472                           
  6473                           ;sm_MenuConfiguration_MC50.c: 497:             menu_st.menuSize=2;
  6474  00427C  0E02               	movlw	2
  6475  00427E  6F67               	movwf	(_menu_st+22)& (0+255),b
  6476                           
  6477                           ;sm_MenuConfiguration_MC50.c: 498:             menu_st.menuList[0].value_display1=dd;
  6478  004280  0E0D               	movlw	13
  6479  004282  6F51               	movwf	_menu_st& (0+255),b
  6480                           
  6481                           ;sm_MenuConfiguration_MC50.c: 499:             menu_st.menuList[0].value_display2=dA;
  6482  004284  0E0A               	movlw	10
  6483  004286  6F52               	movwf	(_menu_st+1)& (0+255),b
  6484                           
  6485                           ;sm_MenuConfiguration_MC50.c: 500:             menu_st.menuList[1].value_display1=dd;
  6486  004288  0E0D               	movlw	13
  6487  00428A  6F53               	movwf	(_menu_st+2)& (0+255),b
  6488                           
  6489                           ;sm_MenuConfiguration_MC50.c: 501:             menu_st.menuList[1].value_display2=dF;
  6490  00428C  0E0F               	movlw	15
  6491  00428E  D08E               	goto	L38
  6492  004290                     l20294:
  6493                           
  6494                           ; BSR set to: 1
  6495                           ;sm_MenuConfiguration_MC50.c: 508:         {;sm_MenuConfiguration_MC50.c: 509:          
      +                             menu_st.lastMenu=P_Menu;
  6496  004290  0E00               	movlw	0
  6497  004292  6F65               	movwf	(_menu_st+20)& (0+255),b
  6498                           
  6499                           ;sm_MenuConfiguration_MC50.c: 510:             menu_st.actualMenu=P2_SMenu;
  6500  004294  0E06               	movlw	6
  6501  004296  6F66               	movwf	(_menu_st+21)& (0+255),b
  6502                           
  6503                           ;sm_MenuConfiguration_MC50.c: 511:             menu_st.menuSize=3;
  6504  004298  0E03               	movlw	3
  6505  00429A  6F67               	movwf	(_menu_st+22)& (0+255),b
  6506                           
  6507                           ;sm_MenuConfiguration_MC50.c: 512:             menu_st.menuList[0].value_display1=dF;
  6508  00429C  0E0F               	movlw	15
  6509  00429E  6F51               	movwf	_menu_st& (0+255),b
  6510                           
  6511                           ;sm_MenuConfiguration_MC50.c: 513:             menu_st.menuList[0].value_display2=d0;
  6512  0042A0  0E00               	movlw	0
  6513  0042A2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6514                           
  6515                           ;sm_MenuConfiguration_MC50.c: 514:             menu_st.menuList[1].value_display1=dF;
  6516  0042A4  0E0F               	movlw	15
  6517  0042A6  6F53               	movwf	(_menu_st+2)& (0+255),b
  6518                           
  6519                           ;sm_MenuConfiguration_MC50.c: 515:             menu_st.menuList[1].value_display2=d5;
  6520  0042A8  0E05               	movlw	5
  6521  0042AA  6F54               	movwf	(_menu_st+3)& (0+255),b
  6522                           
  6523                           ;sm_MenuConfiguration_MC50.c: 516:             menu_st.menuList[2].value_display1=dF;
  6524  0042AC  0E0F               	movlw	15
  6525  0042AE  6F55               	movwf	(_menu_st+4)& (0+255),b
  6526                           
  6527                           ;sm_MenuConfiguration_MC50.c: 517:             menu_st.menuList[2].value_display2=dd;
  6528  0042B0  0E0D               	movlw	13
  6529  0042B2  D073               	goto	L33
  6530  0042B4                     l20296:
  6531                           
  6532                           ; BSR set to: 1
  6533                           ;sm_MenuConfiguration_MC50.c: 521:         {;sm_MenuConfiguration_MC50.c: 522:          
      +                             menu_st.lastMenu=P_Menu;
  6534  0042B4  0E00               	movlw	0
  6535  0042B6  6F65               	movwf	(_menu_st+20)& (0+255),b
  6536                           
  6537                           ;sm_MenuConfiguration_MC50.c: 523:             menu_st.actualMenu=P4_SMenu;
  6538  0042B8  0E07               	movlw	7
  6539  0042BA  6F66               	movwf	(_menu_st+21)& (0+255),b
  6540                           
  6541                           ;sm_MenuConfiguration_MC50.c: 524:             menu_st.menuSize=2;
  6542  0042BC  0E02               	movlw	2
  6543  0042BE  6F67               	movwf	(_menu_st+22)& (0+255),b
  6544                           
  6545                           ;sm_MenuConfiguration_MC50.c: 525:             menu_st.menuList[0].value_display1=dA;
  6546  0042C0  0E0A               	movlw	10
  6547  0042C2  6F51               	movwf	_menu_st& (0+255),b
  6548                           
  6549                           ;sm_MenuConfiguration_MC50.c: 526:             menu_st.menuList[0].value_display2=dF;
  6550  0042C4  0E0F               	movlw	15
  6551  0042C6  6F52               	movwf	(_menu_st+1)& (0+255),b
  6552                           
  6553                           ;sm_MenuConfiguration_MC50.c: 527:             menu_st.menuList[1].value_display1=dA;
  6554  0042C8  0E0A               	movlw	10
  6555  0042CA  6F53               	movwf	(_menu_st+2)& (0+255),b
  6556                           
  6557                           ;sm_MenuConfiguration_MC50.c: 528:             menu_st.menuList[1].value_display2=dP;
  6558  0042CC  0E10               	movlw	16
  6559  0042CE  D06E               	goto	L38
  6560  0042D0                     l20298:
  6561                           
  6562                           ; BSR set to: 1
  6563                           ;sm_MenuConfiguration_MC50.c: 532:         {;sm_MenuConfiguration_MC50.c: 533:          
      +                             menu_st.lastMenu=P_Menu;
  6564  0042D0  0E00               	movlw	0
  6565  0042D2  6F65               	movwf	(_menu_st+20)& (0+255),b
  6566                           
  6567                           ;sm_MenuConfiguration_MC50.c: 534:             menu_st.actualMenu=P5_SMenu;
  6568  0042D4  0E08               	movlw	8
  6569  0042D6  6F66               	movwf	(_menu_st+21)& (0+255),b
  6570                           
  6571                           ;sm_MenuConfiguration_MC50.c: 535:             menu_st.menuSize=2;
  6572  0042D8  0E02               	movlw	2
  6573  0042DA  6F67               	movwf	(_menu_st+22)& (0+255),b
  6574                           
  6575                           ;sm_MenuConfiguration_MC50.c: 536:             menu_st.menuList[0].value_display1=dL;
  6576  0042DC  0E12               	movlw	18
  6577  0042DE  6F51               	movwf	_menu_st& (0+255),b
  6578                           
  6579                           ;sm_MenuConfiguration_MC50.c: 537:             menu_st.menuList[0].value_display2=dE;
  6580  0042E0  0E0E               	movlw	14
  6581  0042E2  6F52               	movwf	(_menu_st+1)& (0+255),b
  6582                           
  6583                           ;sm_MenuConfiguration_MC50.c: 538:             menu_st.menuList[1].value_display1=dH;
  6584  0042E4  0E11               	movlw	17
  6585  0042E6  6F53               	movwf	(_menu_st+2)& (0+255),b
  6586                           
  6587                           ;sm_MenuConfiguration_MC50.c: 539:             menu_st.menuList[1].value_display2=dC;
  6588  0042E8  0E0C               	movlw	12
  6589  0042EA  D060               	goto	L38
  6590  0042EC                     l20300:
  6591                           
  6592                           ; BSR set to: 1
  6593                           ;sm_MenuConfiguration_MC50.c: 543:         {;sm_MenuConfiguration_MC50.c: 544:          
      +                             menu_st.lastMenu=P_Menu;
  6594  0042EC  0E00               	movlw	0
  6595  0042EE  6F65               	movwf	(_menu_st+20)& (0+255),b
  6596                           
  6597                           ;sm_MenuConfiguration_MC50.c: 545:             menu_st.actualMenu=P6_SMenu;
  6598  0042F0  0E09               	movlw	9
  6599  0042F2  6F66               	movwf	(_menu_st+21)& (0+255),b
  6600                           
  6601                           ;sm_MenuConfiguration_MC50.c: 546:             menu_st.menuSize=4;
  6602  0042F4  0E04               	movlw	4
  6603  0042F6  6F67               	movwf	(_menu_st+22)& (0+255),b
  6604                           
  6605                           ;sm_MenuConfiguration_MC50.c: 547:             menu_st.menuList[0].value_display1=dL;
  6606  0042F8  0E12               	movlw	18
  6607  0042FA  6F51               	movwf	_menu_st& (0+255),b
  6608                           
  6609                           ;sm_MenuConfiguration_MC50.c: 548:             menu_st.menuList[0].value_display2=dA;
  6610  0042FC  0E0A               	movlw	10
  6611  0042FE  6F52               	movwf	(_menu_st+1)& (0+255),b
  6612                           
  6613                           ;sm_MenuConfiguration_MC50.c: 549:             menu_st.menuList[1].value_display1=dH;
  6614  004300  0E11               	movlw	17
  6615  004302  6F53               	movwf	(_menu_st+2)& (0+255),b
  6616                           
  6617                           ;sm_MenuConfiguration_MC50.c: 550:             menu_st.menuList[1].value_display2=dA;
  6618  004304  0E0A               	movlw	10
  6619  004306  6F54               	movwf	(_menu_st+3)& (0+255),b
  6620                           
  6621                           ;sm_MenuConfiguration_MC50.c: 551:             menu_st.menuList[2].value_display1=dH;
  6622  004308  0E11               	movlw	17
  6623  00430A  6F55               	movwf	(_menu_st+4)& (0+255),b
  6624                           
  6625                           ;sm_MenuConfiguration_MC50.c: 552:             menu_st.menuList[2].value_display2=dL;
  6626  00430C  0E12               	movlw	18
  6627  00430E  6F56               	movwf	(_menu_st+5)& (0+255),b
  6628                           
  6629                           ;sm_MenuConfiguration_MC50.c: 553:             menu_st.menuList[3].value_display1=d5;
  6630  004310  0E05               	movlw	5
  6631  004312  6F57               	movwf	(_menu_st+6)& (0+255),b
  6632                           
  6633                           ;sm_MenuConfiguration_MC50.c: 554:             menu_st.menuList[3].value_display2=dt;
  6634  004314  0E15               	movlw	21
  6635  004316                     L31:
  6636  004316  6F58               	movwf	(_menu_st+7)& (0+255),b
  6637                           
  6638                           ;sm_MenuConfiguration_MC50.c: 556:         };sm_MenuConfiguration_MC50.c: 557:         b
      +                          reak;
  6639  004318  D07D               	goto	l20318
  6640  00431A                     l20302:
  6641                           
  6642                           ; BSR set to: 1
  6643                           ;sm_MenuConfiguration_MC50.c: 559:         {;sm_MenuConfiguration_MC50.c: 560:          
      +                             menu_st.lastMenu=E_Menu;
  6644  00431A  0E01               	movlw	1
  6645  00431C  6F65               	movwf	(_menu_st+20)& (0+255),b
  6646                           
  6647                           ;sm_MenuConfiguration_MC50.c: 561:             menu_st.actualMenu=E0_SMenu;
  6648  00431E  0E0A               	movlw	10
  6649  004320  6F66               	movwf	(_menu_st+21)& (0+255),b
  6650                           
  6651                           ;sm_MenuConfiguration_MC50.c: 562:             menu_st.menuSize=2;
  6652  004322  0E02               	movlw	2
  6653  004324  6F67               	movwf	(_menu_st+22)& (0+255),b
  6654                           
  6655                           ;sm_MenuConfiguration_MC50.c: 563:             menu_st.menuList[0].value_display1=dH;
  6656  004326  0E11               	movlw	17
  6657  004328  6F51               	movwf	_menu_st& (0+255),b
  6658                           
  6659                           ;sm_MenuConfiguration_MC50.c: 564:             menu_st.menuList[0].value_display2=dP;
  6660  00432A  0E10               	movlw	16
  6661  00432C  6F52               	movwf	(_menu_st+1)& (0+255),b
  6662                           
  6663                           ;sm_MenuConfiguration_MC50.c: 565:             menu_st.menuList[1].value_display1=dP;
  6664  00432E  0E10               	movlw	16
  6665  004330  6F53               	movwf	(_menu_st+2)& (0+255),b
  6666                           
  6667                           ;sm_MenuConfiguration_MC50.c: 566:             menu_st.menuList[1].value_display2=dL;
  6668  004332  0E12               	movlw	18
  6669  004334  D03B               	goto	L38
  6670  004336                     l20304:
  6671                           
  6672                           ; BSR set to: 1
  6673                           ;sm_MenuConfiguration_MC50.c: 570:         {;sm_MenuConfiguration_MC50.c: 571:          
      +                             menu_st.lastMenu=E_Menu;
  6674  004336  0E01               	movlw	1
  6675  004338  6F65               	movwf	(_menu_st+20)& (0+255),b
  6676                           
  6677                           ;sm_MenuConfiguration_MC50.c: 572:             menu_st.actualMenu=E1_SMenu;
  6678  00433A  0E0B               	movlw	11
  6679  00433C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6680                           
  6681                           ;sm_MenuConfiguration_MC50.c: 573:             menu_st.menuSize=2;
  6682  00433E  0E02               	movlw	2
  6683  004340  6F67               	movwf	(_menu_st+22)& (0+255),b
  6684                           
  6685                           ;sm_MenuConfiguration_MC50.c: 574:             menu_st.menuList[0].value_display1=dr;
  6686  004342  0E14               	movlw	20
  6687  004344  6F51               	movwf	_menu_st& (0+255),b
  6688                           
  6689                           ;sm_MenuConfiguration_MC50.c: 575:             menu_st.menuList[0].value_display2=dq;
  6690  004346  0E24               	movlw	36
  6691  004348  6F52               	movwf	(_menu_st+1)& (0+255),b
  6692                           
  6693                           ;sm_MenuConfiguration_MC50.c: 576:             menu_st.menuList[1].value_display1=dr;
  6694  00434A  0E14               	movlw	20
  6695  00434C  6F53               	movwf	(_menu_st+2)& (0+255),b
  6696                           
  6697                           ;sm_MenuConfiguration_MC50.c: 577:             menu_st.menuList[1].value_display2=dc;
  6698  00434E  0E23               	movlw	35
  6699  004350  D02D               	goto	L38
  6700  004352                     l20306:
  6701                           
  6702                           ; BSR set to: 1
  6703                           ;sm_MenuConfiguration_MC50.c: 581:         {;sm_MenuConfiguration_MC50.c: 583:          
      +                             menu_st.actualMenu=S_Menu;
  6704  004352  0E0C               	movlw	12
  6705  004354  6F66               	movwf	(_menu_st+21)& (0+255),b
  6706                           
  6707                           ;sm_MenuConfiguration_MC50.c: 584:             menu_st.parameterSelected=0;
  6708  004356  0E00               	movlw	0
  6709  004358  6F68               	movwf	(_menu_st+23)& (0+255),b
  6710                           
  6711                           ;sm_MenuConfiguration_MC50.c: 585:             menu_st.menuSize=2;
  6712  00435A  0E02               	movlw	2
  6713  00435C  6F67               	movwf	(_menu_st+22)& (0+255),b
  6714                           
  6715                           ;sm_MenuConfiguration_MC50.c: 586:             menu_st.menuList[0].value_display1=d5;
  6716  00435E  0E05               	movlw	5
  6717  004360  6F51               	movwf	_menu_st& (0+255),b
  6718                           
  6719                           ;sm_MenuConfiguration_MC50.c: 587:             menu_st.menuList[0].value_display2=dU;
  6720  004362  0E13               	movlw	19
  6721  004364  6F52               	movwf	(_menu_st+1)& (0+255),b
  6722                           
  6723                           ;sm_MenuConfiguration_MC50.c: 588:             menu_st.menuList[1].value_display1=d5;
  6724  004366  0E05               	movlw	5
  6725  004368  D7B0               	goto	L39
  6726  00436A                     l20308:
  6727                           
  6728                           ; BSR set to: 1
  6729                           ;sm_MenuConfiguration_MC50.c: 593:         {;sm_MenuConfiguration_MC50.c: 595:          
      +                             menu_st.actualMenu=Del_Menu;
  6730  00436A  0E0D               	movlw	13
  6731  00436C  6F66               	movwf	(_menu_st+21)& (0+255),b
  6732                           
  6733                           ;sm_MenuConfiguration_MC50.c: 596:             menu_st.menuSize=1;
  6734  00436E  0E01               	movlw	1
  6735  004370  6F67               	movwf	(_menu_st+22)& (0+255),b
  6736                           
  6737                           ;sm_MenuConfiguration_MC50.c: 597:             menu_st.menuList[0].value_display1=dd;
  6738  004372  0E0D               	movlw	13
  6739  004374  6F51               	movwf	_menu_st& (0+255),b
  6740                           
  6741                           ;sm_MenuConfiguration_MC50.c: 598:             menu_st.menuList[0].value_display2=dL;
  6742  004376  0E12               	movlw	18
  6743  004378  6F52               	movwf	(_menu_st+1)& (0+255),b
  6744                           
  6745                           ;sm_MenuConfiguration_MC50.c: 599:             ts_system.timeSinalizationDigit=(1000/50)
      +                          *3;
  6746  00437A  0E00               	movlw	0
  6747  00437C  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  6748  00437E  0E3C               	movlw	60
  6749  004380  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  6750                           
  6751                           ;sm_MenuConfiguration_MC50.c: 600:         };sm_MenuConfiguration_MC50.c: 601:         b
      +                          reak;
  6752  004382  D048               	goto	l20318
  6753  004384                     l20310:
  6754                           
  6755                           ; BSR set to: 1
  6756                           ;sm_MenuConfiguration_MC50.c: 604:         {;sm_MenuConfiguration_MC50.c: 608:          
      +                             menu_st.menuList[0].value_display1=d5;
  6757  004384  0E05               	movlw	5
  6758  004386  6F51               	movwf	_menu_st& (0+255),b
  6759                           
  6760                           ;sm_MenuConfiguration_MC50.c: 609:             menu_st.menuList[0].value_display2=dC;
  6761  004388  0E0C               	movlw	12
  6762  00438A  6F52               	movwf	(_menu_st+1)& (0+255),b
  6763                           
  6764                           ;sm_MenuConfiguration_MC50.c: 610:             menu_st.menuList[1].value_display1=d5;
  6765  00438C  0E05               	movlw	5
  6766  00438E  6F53               	movwf	(_menu_st+2)& (0+255),b
  6767                           
  6768                           ;sm_MenuConfiguration_MC50.c: 611:             menu_st.menuList[1].value_display2=dE;
  6769  004390  0E0E               	movlw	14
  6770  004392  6F54               	movwf	(_menu_st+3)& (0+255),b
  6771                           
  6772                           ;sm_MenuConfiguration_MC50.c: 612:             menu_st.menuList[2].value_display1=db;
  6773  004394  0E22               	movlw	34
  6774  004396  6F55               	movwf	(_menu_st+4)& (0+255),b
  6775                           
  6776                           ;sm_MenuConfiguration_MC50.c: 613:             menu_st.menuList[2].value_display2=dr;
  6777  004398  0E14               	movlw	20
  6778  00439A                     L33:
  6779  00439A  6F56               	movwf	(_menu_st+5)& (0+255),b
  6780                           
  6781                           ;sm_MenuConfiguration_MC50.c: 614:         };sm_MenuConfiguration_MC50.c: 615:         b
      +                          reak;
  6782  00439C  D03B               	goto	l20318
  6783  00439E                     l20312:
  6784                           
  6785                           ; BSR set to: 1
  6786                           ;sm_MenuConfiguration_MC50.c: 617:         {;sm_MenuConfiguration_MC50.c: 621:          
      +                             menu_st.menuList[0].value_display1=dL;
  6787  00439E  0E12               	movlw	18
  6788  0043A0  6F51               	movwf	_menu_st& (0+255),b
  6789                           
  6790                           ;sm_MenuConfiguration_MC50.c: 622:             menu_st.menuList[0].value_display2=dE;
  6791  0043A2  0E0E               	movlw	14
  6792  0043A4  6F52               	movwf	(_menu_st+1)& (0+255),b
  6793                           
  6794                           ;sm_MenuConfiguration_MC50.c: 623:             menu_st.menuList[1].value_display1=dr;
  6795  0043A6  0E14               	movlw	20
  6796  0043A8  6F53               	movwf	(_menu_st+2)& (0+255),b
  6797                           
  6798                           ;sm_MenuConfiguration_MC50.c: 624:             menu_st.menuList[1].value_display2=dt;
  6799  0043AA  0E15               	movlw	21
  6800  0043AC                     L38:
  6801  0043AC  6F54               	movwf	(_menu_st+3)& (0+255),b
  6802                           
  6803                           ;sm_MenuConfiguration_MC50.c: 626:         };sm_MenuConfiguration_MC50.c: 627:         b
      +                          reak;
  6804  0043AE  D032               	goto	l20318
  6805  0043B0                     l20316:
  6806                           
  6807                           ; BSR set to: 1
  6808  0043B0  5022               	movf	load_New_Menu@Menu^0,w,c
  6809  0043B2  6E20               	movwf	??_load_New_Menu^0,c
  6810  0043B4  6A21               	clrf	(??_load_New_Menu+1)^0,c
  6811                           
  6812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6813                           ; Switch size 1, requested type "simple"
  6814                           ; Number of cases is 1, Range of values is 0 to 0
  6815                           ; switch strategies available:
  6816                           ; Name         Instructions Cycles
  6817                           ; simple_byte            4     3 (average)
  6818                           ;	Chosen strategy is simple_byte
  6819  0043B6  5021               	movf	(??_load_New_Menu+1)^0,w,c
  6820  0043B8  0A00               	xorlw	0	; case 0
  6821  0043BA  A4D8               	btfss	status,2,c
  6822  0043BC  D02B               	goto	l20318
  6823                           
  6824                           ; BSR set to: 1
  6825                           ; Switch size 1, requested type "simple"
  6826                           ; Number of cases is 14, Range of values is 0 to 13
  6827                           ; switch strategies available:
  6828                           ; Name         Instructions Cycles
  6829                           ; simple_byte           43    22 (average)
  6830                           ;	Chosen strategy is simple_byte
  6831  0043BE  5020               	movf	??_load_New_Menu^0,w,c
  6832  0043C0  0A00               	xorlw	0	; case 0
  6833  0043C2  B4D8               	btfsc	status,2,c
  6834  0043C4  D6FF               	goto	l20266
  6835  0043C6  0A01               	xorlw	1	; case 1
  6836  0043C8  B4D8               	btfsc	status,2,c
  6837  0043CA  D71D               	goto	l20278
  6838  0043CC  0A03               	xorlw	3	; case 2
  6839  0043CE  B4D8               	btfsc	status,2,c
  6840  0043D0  D7E6               	goto	l20312
  6841  0043D2  0A01               	xorlw	1	; case 3
  6842  0043D4  B4D8               	btfsc	status,2,c
  6843  0043D6  D7D6               	goto	l20310
  6844  0043D8  0A07               	xorlw	7	; case 4
  6845  0043DA  B4D8               	btfsc	status,2,c
  6846  0043DC  D735               	goto	l20290
  6847  0043DE  0A01               	xorlw	1	; case 5
  6848  0043E0  B4D8               	btfsc	status,2,c
  6849  0043E2  D748               	goto	l20292
  6850  0043E4  0A03               	xorlw	3	; case 6
  6851  0043E6  B4D8               	btfsc	status,2,c
  6852  0043E8  D753               	goto	l20294
  6853  0043EA  0A01               	xorlw	1	; case 7
  6854  0043EC  B4D8               	btfsc	status,2,c
  6855  0043EE  D762               	goto	l20296
  6856  0043F0  0A0F               	xorlw	15	; case 8
  6857  0043F2  B4D8               	btfsc	status,2,c
  6858  0043F4  D76D               	goto	l20298
  6859  0043F6  0A01               	xorlw	1	; case 9
  6860  0043F8  B4D8               	btfsc	status,2,c
  6861  0043FA  D778               	goto	l20300
  6862  0043FC  0A03               	xorlw	3	; case 10
  6863  0043FE  B4D8               	btfsc	status,2,c
  6864  004400  D78C               	goto	l20302
  6865  004402  0A01               	xorlw	1	; case 11
  6866  004404  B4D8               	btfsc	status,2,c
  6867  004406  D797               	goto	l20304
  6868  004408  0A07               	xorlw	7	; case 12
  6869  00440A  B4D8               	btfsc	status,2,c
  6870  00440C  D7A2               	goto	l20306
  6871  00440E  0A01               	xorlw	1	; case 13
  6872  004410  B4D8               	btfsc	status,2,c
  6873  004412  D7AB               	goto	l20308
  6874  004414                     l20318:
  6875                           
  6876                           ;sm_MenuConfiguration_MC50.c: 632:     if(menu_st.parameterSelected>=menu_st.menuSize)
  6877  004414  0101               	movlb	1	; () banked
  6878  004416  5167               	movf	(_menu_st+22)& (0+255),w,b
  6879  004418  5D68               	subwf	(_menu_st+23)& (0+255),w,b
  6880  00441A  A0D8               	btfss	status,0,c
  6881  00441C  D002               	goto	l20322
  6882                           
  6883                           ; BSR set to: 1
  6884                           ;sm_MenuConfiguration_MC50.c: 633:     {;sm_MenuConfiguration_MC50.c: 634:         menu_
      +                          st.parameterSelected=0;
  6885  00441E  0E00               	movlw	0
  6886  004420  6F68               	movwf	(_menu_st+23)& (0+255),b
  6887  004422                     l20322:
  6888                           
  6889                           ; BSR set to: 1
  6890                           ;sm_MenuConfiguration_MC50.c: 637:     if(Menu==Del_Menu)
  6891  004422  0E0D               	movlw	13
  6892  004424  1822               	xorwf	load_New_Menu@Menu^0,w,c
  6893  004426  A4D8               	btfss	status,2,c
  6894  004428  D01A               	goto	l20326
  6895                           
  6896                           ; BSR set to: 1
  6897                           ;sm_MenuConfiguration_MC50.c: 638:     {;sm_MenuConfiguration_MC50.c: 639:         SetSe
      +                          gmentValueIntermitentMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, m
      +                          enu_st.menuList[ menu_st.parameterSelected].value_display2,( 500/50));
  6898  00442A  5168               	movf	(_menu_st+23)& (0+255),w,b
  6899  00442C  0D02               	mullw	2
  6900  00442E  0E52               	movlw	low (_menu_st+1)
  6901  004430  24F3               	addwf	243,w,c
  6902  004432  6ED9               	movwf	fsr2l,c
  6903  004434  0E01               	movlw	high (_menu_st+1)
  6904  004436  20F4               	addwfc	prodh,w,c
  6905  004438  6EDA               	movwf	fsr2h,c
  6906  00443A  50DF               	movf	indf2,w,c
  6907  00443C  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  6908  00443E  0E00               	movlw	0
  6909  004440  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  6910  004442  0E0A               	movlw	10
  6911  004444  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  6912  004446  5168               	movf	(_menu_st+23)& (0+255),w,b
  6913  004448  0D02               	mullw	2
  6914  00444A  0E51               	movlw	low _menu_st
  6915  00444C  24F3               	addwf	243,w,c
  6916  00444E  6ED9               	movwf	fsr2l,c
  6917  004450  0E01               	movlw	high _menu_st
  6918  004452  20F4               	addwfc	prodh,w,c
  6919  004454  6EDA               	movwf	fsr2h,c
  6920  004456  50DF               	movf	indf2,w,c
  6921  004458  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  6922                           
  6923                           ;sm_MenuConfiguration_MC50.c: 640:     }
  6924  00445C  0012               	return	
  6925  00445E                     l20326:
  6926                           
  6927                           ; BSR set to: 1
  6928                           ;sm_MenuConfiguration_MC50.c: 642:     {;sm_MenuConfiguration_MC50.c: 643:         SetSe
      +                          gmentValueMain(menu_st.menuList[ menu_st.parameterSelected].value_display1, menu_st.menu
      +                          List[ menu_st.parameterSelected].value_display2);
  6929  00445E  5168               	movf	(_menu_st+23)& (0+255),w,b
  6930  004460  0D02               	mullw	2
  6931  004462  0E52               	movlw	low (_menu_st+1)
  6932  004464  24F3               	addwf	243,w,c
  6933  004466  6ED9               	movwf	fsr2l,c
  6934  004468  0E01               	movlw	high (_menu_st+1)
  6935  00446A  20F4               	addwfc	prodh,w,c
  6936  00446C  6EDA               	movwf	fsr2h,c
  6937  00446E  50DF               	movf	indf2,w,c
  6938  004470  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  6939  004472  5168               	movf	(_menu_st+23)& (0+255),w,b
  6940  004474  0D02               	mullw	2
  6941  004476  0E51               	movlw	low _menu_st
  6942  004478  24F3               	addwf	243,w,c
  6943  00447A  6ED9               	movwf	fsr2l,c
  6944  00447C  0E01               	movlw	high _menu_st
  6945  00447E  20F4               	addwfc	prodh,w,c
  6946  004480  6EDA               	movwf	fsr2h,c
  6947  004482  50DF               	movf	indf2,w,c
  6948  004484  EC03  F04A         	call	_SetSegmentValueMain
  6949  004488  0012               	return		;funcret
  6950  00448A                     __end_of_load_New_Menu:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _InitReceiver *****************
  6954 ;; Defined at:
  6955 ;;		line 207 in file "inputs_MC50.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;		None
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2
  6964 ;; Tracked objects:
  6965 ;;		On entry : 30/F
  6966 ;;		On exit  : 3F/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;Total ram usage:        0 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 4
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_main
  6980 ;;		_setValueToEdit
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text5
  6985  0093EC                     __ptext5:
  6986                           	callstack 0
  6987  0093EC                     _InitReceiver:
  6988                           	callstack 23
  6989                           
  6990                           ;inputs_MC50.c: 208:     TMR0IF = 0;
  6991                           
  6992                           ;incstack = 0
  6993  0093EC  010E               	movlb	14	; () banked
  6994  0093EE  9BCA               	bcf	202,5,b	;volatile
  6995                           
  6996                           ;inputs_MC50.c: 209:     TMR0IE = 1;
  6997  0093F0  8BC2               	bsf	194,5,b	;volatile
  6998                           
  6999                           ;inputs_MC50.c: 210:     GIE = 1;
  7000  0093F2  8EF2               	bsf	4082,7,c	;volatile
  7001                           
  7002                           ; BSR set to: 14
  7003                           ;inputs_MC50.c: 211:     RFstate = 0;
  7004  0093F4  0E00               	movlw	0
  7005  0093F6  0101               	movlb	1	; () banked
  7006  0093F8  6F99               	movwf	_RFstate& (0+255),b
  7007                           
  7008                           ;inputs_MC50.c: 212:     RFFull_12BIT=0;
  7009  0093FA  0E00               	movlw	0
  7010  0093FC  0100               	movlb	0	; () banked
  7011  0093FE  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
  7012                           
  7013                           ;inputs_MC50.c: 213:     RFFull = 0;
  7014  009400  0E00               	movlw	0
  7015  009402  6F8B               	movwf	_RFFull& (0+255),b	;volatile
  7016                           
  7017                           ; BSR set to: 0
  7018  009404  0012               	return		;funcret
  7019  009406                     __end_of_InitReceiver:
  7020                           	callstack 0
  7021                           
  7022 ;; *************** function _controlSelectRemote *****************
  7023 ;; Defined at:
  7024 ;;		line 1098 in file "sm_MenuConfiguration_MC50.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  typeRemote      1   11[BANK0 ] enum E10392
  7029 ;;  pos             1   10[BANK0 ] unsigned char 
  7030 ;;  tempSerial      4   12[BANK0 ] unsigned long 
  7031 ;;  temp            1   16[BANK0 ] unsigned char 
  7032 ;;  validSerial     1    9[BANK0 ] unsigned char 
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7037 ;; Tracked objects:
  7038 ;;		On entry : 3F/1
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7043 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7045 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7046 ;;Total ram usage:        9 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; Hardware stack levels required when called: 14
  7049 ;; This function calls:
  7050 ;;		_ClearFlag_rfCMD
  7051 ;;		_RemoveSerial
  7052 ;;		_SaveNVM_VarSystem
  7053 ;;		_SetSegmentValue
  7054 ;;		_SetSegmentValueIntermitentMain
  7055 ;;		_SetSegmentValueMain
  7056 ;;		___awdiv
  7057 ;;		___lbmod
  7058 ;;		_cmdMemoryIsEmpty
  7059 ;;		_getSerialCmd
  7060 ;;		_getTypeRemote
  7061 ;;		_saveNewSerial
  7062 ;;		_sm_send_event
  7063 ;;		_validateRemoteSerialNumber
  7064 ;; This function is called by:
  7065 ;;		_sm_execute_menuConfiguration
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text6
  7070  003766                     __ptext6:
  7071                           	callstack 0
  7072  003766                     _controlSelectRemote:
  7073                           	callstack 14
  7074                           
  7075                           ; BSR set to: 1
  7076                           ;sm_MenuConfiguration_MC50.c: 1099:     unsigned long tempSerial;;sm_MenuConfiguration_M
      +                          C50.c: 1100:     char temp=getSerialCmd(&tempSerial);
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;incstack = 0
  7080  003766  0EE4               	movlw	low controlSelectRemote@tempSerial
  7081  003768  6E1B               	movwf	getSerialCmd@serial^0,c
  7082  00376A  EC15  F045         	call	_getSerialCmd	;wreg free
  7083  00376E  0100               	movlb	0	; () banked
  7084  003770  6FE8               	movwf	controlSelectRemote@temp& (0+255),b
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;sm_MenuConfiguration_MC50.c: 1101:     char validSerial;;sm_MenuConfiguration_MC50.c: 1
      +                          102:     if(ts_system.timeoutMenu<=0 || button_struct.current==0x00)
  7088  003772  0101               	movlb	1	; () banked
  7089  003774  BFAA               	btfsc	(_ts_system+15)& (0+255),7,b	;volatile
  7090  003776  D008               	goto	u24400
  7091  003778  51AA               	movf	(_ts_system+15)& (0+255),w,b	;volatile
  7092  00377A  E103               	bnz	u24390
  7093  00377C  05A9               	decf	(_ts_system+14)& (0+255),w,b	;volatile
  7094  00377E  A0D8               	btfss	status,0,c
  7095  003780  D003               	goto	u24400
  7096  003782                     u24390:
  7097                           
  7098                           ; BSR set to: 1
  7099  003782  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7100  003784  A4D8               	btfss	status,2,c
  7101  003786  D028               	goto	l21396
  7102  003788                     u24400:
  7103                           
  7104                           ; BSR set to: 1
  7105                           ;sm_MenuConfiguration_MC50.c: 1103:     {;sm_MenuConfiguration_MC50.c: 1104:         sm_
      +                          send_event(&main_stateMachine, ev_goto_StandBy);
  7106  003788  0EEE               	movlw	low _main_stateMachine
  7107  00378A  6E12               	movwf	sm_send_event@psm^0,c
  7108  00378C  0E01               	movlw	high _main_stateMachine
  7109  00378E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7110  003790  0E00               	movlw	0
  7111  003792  6E15               	movwf	(sm_send_event@event+1)^0,c
  7112  003794  0E07               	movlw	7
  7113  003796  6E14               	movwf	sm_send_event@event^0,c
  7114  003798  EC0E  F043         	call	_sm_send_event	;wreg free
  7115                           
  7116                           ;sm_MenuConfiguration_MC50.c: 1105:         sm_send_event(&menuConfiguration_stateMachin
      +                          e, ev_CancelEdition);
  7117  00379C  0EBF               	movlw	low _menuConfiguration_stateMachine
  7118  00379E  6E12               	movwf	sm_send_event@psm^0,c
  7119  0037A0  0E02               	movlw	high _menuConfiguration_stateMachine
  7120  0037A2  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7121  0037A4  0E00               	movlw	0
  7122  0037A6  6E15               	movwf	(sm_send_event@event+1)^0,c
  7123  0037A8  0E03               	movlw	3
  7124  0037AA  6E14               	movwf	sm_send_event@event^0,c
  7125  0037AC  EC0E  F043         	call	_sm_send_event	;wreg free
  7126                           
  7127                           ;sm_MenuConfiguration_MC50.c: 1106:         var_sys.DistanceProgrammingActive=NO;
  7128  0037B0  0E00               	movlw	0
  7129  0037B2  0101               	movlb	1	; () banked
  7130  0037B4  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7131                           
  7132                           ; BSR set to: 1
  7133                           ;sm_MenuConfiguration_MC50.c: 1107:         var_sys.ProgrammingDistanceIs=NoCMD;
  7134  0037B6  0E00               	movlw	0
  7135  0037B8  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7136                           
  7137                           ; BSR set to: 1
  7138                           ;sm_MenuConfiguration_MC50.c: 1108:         SetSegmentValueMain(dMinus,dMinus);
  7139  0037BA  0E18               	movlw	24
  7140  0037BC  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7141  0037BE  0E18               	movlw	24
  7142  0037C0  EC03  F04A         	call	_SetSegmentValueMain
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;sm_MenuConfiguration_MC50.c: 1109:         ClearFlag_rfCMD();
  7146  0037C4  EC54  F04B         	call	_ClearFlag_rfCMD	;wreg free
  7147                           
  7148                           ;sm_MenuConfiguration_MC50.c: 1110:         button_struct.processed=1;
  7149  0037C8  0E01               	movlw	1
  7150  0037CA  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7151                           
  7152                           ;sm_MenuConfiguration_MC50.c: 1111:         ts_system.timeoutMenu = 0;
  7153  0037CC  0E00               	movlw	0
  7154  0037CE  0101               	movlb	1	; () banked
  7155  0037D0  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7156  0037D2  0E00               	movlw	0
  7157  0037D4  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7158                           
  7159                           ;sm_MenuConfiguration_MC50.c: 1113:     }
  7160  0037D6  0012               	return	
  7161  0037D8                     l21396:
  7162                           
  7163                           ; BSR set to: 1
  7164  0037D8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  7165  0037DA  A4D8               	btfss	status,2,c
  7166  0037DC  D05B               	goto	l21418
  7167                           
  7168                           ; BSR set to: 1
  7169  0037DE  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7170  0037E0  B4D8               	btfsc	status,2,c
  7171  0037E2  D058               	goto	l21418
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;sm_MenuConfiguration_MC50.c: 1115:     {;sm_MenuConfiguration_MC50.c: 1116:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7175  0037E4  0E00               	movlw	0
  7176  0037E6  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7177  0037E8  0E64               	movlw	100
  7178  0037EA  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7179                           
  7180                           ; BSR set to: 1
  7181                           ;sm_MenuConfiguration_MC50.c: 1117:         if(edit_Param.tempValue<=edit_Param.Min)
  7182  0037EC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7183  0037EE  5C4B               	subwf	(_edit_Param+5)^0,w,c	;volatile
  7184  0037F0  A0D8               	btfss	status,0,c
  7185  0037F2  D003               	goto	l21406
  7186                           
  7187                           ; BSR set to: 1
  7188                           ;sm_MenuConfiguration_MC50.c: 1118:         {;sm_MenuConfiguration_MC50.c: 1119:        
      +                               edit_Param.tempValue=edit_Param.Max;
  7189  0037F4  C04A  F049         	movff	_edit_Param+4,_edit_Param+3	;volatile
  7190                           
  7191                           ;sm_MenuConfiguration_MC50.c: 1120:         }
  7192  0037F8  D001               	goto	l21408
  7193  0037FA                     l21406:
  7194                           
  7195                           ; BSR set to: 1
  7196                           ;sm_MenuConfiguration_MC50.c: 1122:         {;sm_MenuConfiguration_MC50.c: 1123:        
      +                               edit_Param.tempValue--;
  7197  0037FA  0649               	decf	(_edit_Param+3)^0,f,c	;volatile
  7198  0037FC                     l21408:
  7199                           
  7200                           ; BSR set to: 1
  7201                           ;sm_MenuConfiguration_MC50.c: 1125:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1 || edit_Param.tempValue==edit_Param.Max)
  7202  0037FC  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7203  003800  5168               	movf	(_menu_st+23)& (0+255),w,b
  7204  003802  EC9C  F03C         	call	_cmdMemoryIsEmpty
  7205  003806  06E8               	decf	wreg,f,c
  7206  003808  B4D8               	btfsc	status,2,c
  7207  00380A  D004               	goto	u24450
  7208  00380C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7209  00380E  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7210  003810  A4D8               	btfss	status,2,c
  7211  003812  D021               	goto	l21414
  7212  003814                     u24450:
  7213                           
  7214                           ;sm_MenuConfiguration_MC50.c: 1126:         {;sm_MenuConfiguration_MC50.c: 1127:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7215  003814  0E0A               	movlw	10
  7216  003816  6E10               	movwf	___lbmod@divisor^0,c
  7217  003818  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7218  00381A  ECCB  F048         	call	___lbmod
  7219  00381E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7220  003820  0E00               	movlw	0
  7221  003822  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7222  003824  0E14               	movlw	20
  7223  003826  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7224  003828  0E0A               	movlw	10
  7225  00382A  6E10               	movwf	___lbmod@divisor^0,c
  7226  00382C  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7227  00382E  ECCB  F048         	call	___lbmod
  7228  003832  0100               	movlb	0	; () banked
  7229  003834  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7230  003836  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7231  003838  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7232  00383A  6E14               	movwf	___awdiv@dividend^0,c
  7233  00383C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7234  00383E  A0D8               	btfss	status,0,c
  7235  003840  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7236  003842  0E00               	movlw	0
  7237  003844  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7238  003846  0E0A               	movlw	10
  7239  003848  6E16               	movwf	___awdiv@divisor^0,c
  7240  00384A  EC87  F03E         	call	___awdiv	;wreg free
  7241  00384E  5014               	movf	?___awdiv^0,w,c
  7242  003850  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  7243                           
  7244                           ;sm_MenuConfiguration_MC50.c: 1128:         }
  7245  003854  D01C               	goto	l21416
  7246  003856                     l21414:
  7247                           
  7248                           ;sm_MenuConfiguration_MC50.c: 1130:         {;sm_MenuConfiguration_MC50.c: 1131:        
      +                               SetSegmentValueMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.t
      +                          empValue%10);
  7249  003856  0E0A               	movlw	10
  7250  003858  6E10               	movwf	___lbmod@divisor^0,c
  7251  00385A  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7252  00385C  ECCB  F048         	call	___lbmod
  7253  003860  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7254  003862  0E0A               	movlw	10
  7255  003864  6E10               	movwf	___lbmod@divisor^0,c
  7256  003866  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7257  003868  ECCB  F048         	call	___lbmod
  7258  00386C  0100               	movlb	0	; () banked
  7259  00386E  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7260  003870  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7261  003872  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7262  003874  6E14               	movwf	___awdiv@dividend^0,c
  7263  003876  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7264  003878  A0D8               	btfss	status,0,c
  7265  00387A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7266  00387C  0E00               	movlw	0
  7267  00387E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7268  003880  0E0A               	movlw	10
  7269  003882  6E16               	movwf	___awdiv@divisor^0,c
  7270  003884  EC87  F03E         	call	___awdiv	;wreg free
  7271  003888  5014               	movf	?___awdiv^0,w,c
  7272  00388A  EC03  F04A         	call	_SetSegmentValueMain
  7273  00388E                     l21416:
  7274                           
  7275                           ;sm_MenuConfiguration_MC50.c: 1133:         button_struct.processed=1;
  7276  00388E  0E01               	movlw	1
  7277  003890  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  7278                           
  7279                           ;sm_MenuConfiguration_MC50.c: 1134:     }
  7280  003892  0012               	return	
  7281  003894                     l21418:
  7282                           
  7283                           ; BSR set to: 1
  7284  003894  0E17               	movlw	23
  7285  003896  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7286  003898  A4D8               	btfss	status,2,c
  7287  00389A  D057               	goto	l21440
  7288                           
  7289                           ; BSR set to: 1
  7290  00389C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7291  00389E  B4D8               	btfsc	status,2,c
  7292  0038A0  D054               	goto	l21440
  7293                           
  7294                           ; BSR set to: 1
  7295                           ;sm_MenuConfiguration_MC50.c: 1136:     {;sm_MenuConfiguration_MC50.c: 1137:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7296  0038A2  0E00               	movlw	0
  7297  0038A4  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7298  0038A6  0E64               	movlw	100
  7299  0038A8  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;sm_MenuConfiguration_MC50.c: 1138:         edit_Param.tempValue++;
  7303  0038AA  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7304                           
  7305                           ; BSR set to: 1
  7306                           ;sm_MenuConfiguration_MC50.c: 1139:         if(edit_Param.tempValue>edit_Param.Max)
  7307  0038AC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7308  0038AE  5C4A               	subwf	(_edit_Param+4)^0,w,c	;volatile
  7309  0038B0  A0D8               	btfss	status,0,c
  7310                           
  7311                           ; BSR set to: 1
  7312                           ;sm_MenuConfiguration_MC50.c: 1140:         {;sm_MenuConfiguration_MC50.c: 1141:        
      +                                edit_Param.tempValue=edit_Param.Min;
  7313  0038B2  C04B  F049         	movff	_edit_Param+5,_edit_Param+3	;volatile
  7314                           
  7315                           ; BSR set to: 1
  7316                           ;sm_MenuConfiguration_MC50.c: 1143:         if(cmdMemoryIsEmpty(menu_st.parameterSelecte
      +                          d,edit_Param.tempValue)==1|| edit_Param.tempValue==edit_Param.Max)
  7317  0038B6  C049  F02E         	movff	_edit_Param+3,cmdMemoryIsEmpty@position	;volatile
  7318  0038BA  5168               	movf	(_menu_st+23)& (0+255),w,b
  7319  0038BC  EC9C  F03C         	call	_cmdMemoryIsEmpty
  7320  0038C0  06E8               	decf	wreg,f,c
  7321  0038C2  B4D8               	btfsc	status,2,c
  7322  0038C4  D004               	goto	u24500
  7323  0038C6  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7324  0038C8  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7325  0038CA  A4D8               	btfss	status,2,c
  7326  0038CC  D021               	goto	l21436
  7327  0038CE                     u24500:
  7328                           
  7329                           ;sm_MenuConfiguration_MC50.c: 1144:         {;sm_MenuConfiguration_MC50.c: 1145:        
      +                               SetSegmentValueIntermitentMain((edit_Param.tempValue-edit_Param.tempValue%10)/10, e
      +                          dit_Param.tempValue%10,(1000/50));
  7330  0038CE  0E0A               	movlw	10
  7331  0038D0  6E10               	movwf	___lbmod@divisor^0,c
  7332  0038D2  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7333  0038D4  ECCB  F048         	call	___lbmod
  7334  0038D8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7335  0038DA  0E00               	movlw	0
  7336  0038DC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7337  0038DE  0E14               	movlw	20
  7338  0038E0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7339  0038E2  0E0A               	movlw	10
  7340  0038E4  6E10               	movwf	___lbmod@divisor^0,c
  7341  0038E6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7342  0038E8  ECCB  F048         	call	___lbmod
  7343  0038EC  0100               	movlb	0	; () banked
  7344  0038EE  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7345  0038F0  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7346  0038F2  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7347  0038F4  6E14               	movwf	___awdiv@dividend^0,c
  7348  0038F6  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7349  0038F8  A0D8               	btfss	status,0,c
  7350  0038FA  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7351  0038FC  0E00               	movlw	0
  7352  0038FE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7353  003900  0E0A               	movlw	10
  7354  003902  6E16               	movwf	___awdiv@divisor^0,c
  7355  003904  EC87  F03E         	call	___awdiv	;wreg free
  7356  003908  5014               	movf	?___awdiv^0,w,c
  7357  00390A  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  7358                           
  7359                           ;sm_MenuConfiguration_MC50.c: 1146:         }
  7360  00390E  D7BF               	goto	l21416
  7361  003910                     l21436:
  7362                           
  7363                           ;sm_MenuConfiguration_MC50.c: 1148:         {;sm_MenuConfiguration_MC50.c: 1149:        
      +                               SetSegmentValue((edit_Param.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempV
      +                          alue%10);
  7364  003910  0E0A               	movlw	10
  7365  003912  6E10               	movwf	___lbmod@divisor^0,c
  7366  003914  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7367  003916  ECCB  F048         	call	___lbmod
  7368  00391A  6E1C               	movwf	SetSegmentValue@d2^0,c
  7369  00391C  0E0A               	movlw	10
  7370  00391E  6E10               	movwf	___lbmod@divisor^0,c
  7371  003920  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7372  003922  ECCB  F048         	call	___lbmod
  7373  003926  0100               	movlb	0	; () banked
  7374  003928  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7375  00392A  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7376  00392C  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7377  00392E  6E14               	movwf	___awdiv@dividend^0,c
  7378  003930  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7379  003932  A0D8               	btfss	status,0,c
  7380  003934  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7381  003936  0E00               	movlw	0
  7382  003938  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7383  00393A  0E0A               	movlw	10
  7384  00393C  6E16               	movwf	___awdiv@divisor^0,c
  7385  00393E  EC87  F03E         	call	___awdiv	;wreg free
  7386  003942  5014               	movf	?___awdiv^0,w,c
  7387  003944  EC1D  F04A         	call	_SetSegmentValue
  7388  003948  D7A2               	goto	l21416
  7389  00394A                     l21440:
  7390                           
  7391                           ; BSR set to: 1
  7392  00394A  0E63               	movlw	99
  7393  00394C  644A               	cpfsgt	(_edit_Param+4)^0,c	;volatile
  7394  00394E  D01A               	goto	l21450
  7395                           
  7396                           ; BSR set to: 1
  7397  003950  0E63               	movlw	99
  7398  003952  6449               	cpfsgt	(_edit_Param+3)^0,c	;volatile
  7399  003954  D017               	goto	l21450
  7400                           
  7401                           ; BSR set to: 1
  7402                           ;sm_MenuConfiguration_MC50.c: 1154:     {;sm_MenuConfiguration_MC50.c: 1155:         if(
      +                          menu_st.parameterSelected==0)
  7403  003956  5168               	movf	(_menu_st+23)& (0+255),w,b
  7404  003958  A4D8               	btfss	status,2,c
  7405  00395A  D00A               	goto	l21448
  7406                           
  7407                           ; BSR set to: 1
  7408                           ;sm_MenuConfiguration_MC50.c: 1156:         {;sm_MenuConfiguration_MC50.c: 1157:        
      +                               SetSegmentValueIntermitentMain(dL, dU,( 500/50));
  7409  00395C  0E13               	movlw	19
  7410  00395E  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7411  003960  0E00               	movlw	0
  7412  003962  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7413  003964  0E0A               	movlw	10
  7414  003966  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7415  003968  0E12               	movlw	18
  7416  00396A  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  7417                           
  7418                           ;sm_MenuConfiguration_MC50.c: 1158:         }
  7419  00396E  0012               	return	
  7420  003970                     l21448:
  7421                           
  7422                           ; BSR set to: 1
  7423                           ;sm_MenuConfiguration_MC50.c: 1160:         {;sm_MenuConfiguration_MC50.c: 1161:        
      +                               SetSegmentValueIntermitentMain(dL, dP,( 500/50));
  7424  003970  0E10               	movlw	16
  7425  003972  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7426  003974  0E00               	movlw	0
  7427  003976  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7428  003978  0E0A               	movlw	10
  7429  00397A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7430  00397C  0E12               	movlw	18
  7431  00397E  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  7432  003982  0012               	return	
  7433  003984                     l21450:
  7434                           
  7435                           ; BSR set to: 1
  7436  003984  0100               	movlb	0	; () banked
  7437  003986  29E8               	incf	controlSelectRemote@temp& (0+255),w,b
  7438  003988  B4D8               	btfsc	status,2,c
  7439  00398A  D097               	goto	l21508
  7440                           
  7441                           ; BSR set to: 0
  7442  00398C  51E8               	movf	controlSelectRemote@temp& (0+255),w,b
  7443  00398E  B4D8               	btfsc	status,2,c
  7444  003990  D00F               	goto	u24590
  7445                           
  7446                           ; BSR set to: 0
  7447  003992  05E8               	decf	controlSelectRemote@temp& (0+255),w,b
  7448  003994  B4D8               	btfsc	status,2,c
  7449  003996  D00C               	goto	u24590
  7450                           
  7451                           ; BSR set to: 0
  7452  003998  0E02               	movlw	2
  7453  00399A  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7454  00399C  B4D8               	btfsc	status,2,c
  7455  00399E  D008               	goto	u24590
  7456                           
  7457                           ; BSR set to: 0
  7458  0039A0  0E04               	movlw	4
  7459  0039A2  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7460  0039A4  B4D8               	btfsc	status,2,c
  7461  0039A6  D004               	goto	u24590
  7462                           
  7463                           ; BSR set to: 0
  7464  0039A8  0E08               	movlw	8
  7465  0039AA  19E8               	xorwf	controlSelectRemote@temp& (0+255),w,b
  7466  0039AC  A4D8               	btfss	status,2,c
  7467  0039AE  D085               	goto	l21508
  7468  0039B0                     u24590:
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;sm_MenuConfiguration_MC50.c: 1165:     {;sm_MenuConfiguration_MC50.c: 1166:         cha
      +                          r pos;;sm_MenuConfiguration_MC50.c: 1167:         validSerial=validateRemoteSerialNumber
      +                          (tempSerial,NO,&pos);
  7472  0039B0  C0E4  F02E         	movff	controlSelectRemote@tempSerial,validateRemoteSerialNumber@serial
  7473  0039B4  C0E5  F02F         	movff	controlSelectRemote@tempSerial+1,validateRemoteSerialNumber@serial+1
  7474  0039B8  C0E6  F030         	movff	controlSelectRemote@tempSerial+2,validateRemoteSerialNumber@serial+2
  7475  0039BC  C0E7  F031         	movff	controlSelectRemote@tempSerial+3,validateRemoteSerialNumber@serial+3
  7476  0039C0  0E00               	movlw	0
  7477  0039C2  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
  7478  0039C4  0EE2               	movlw	low controlSelectRemote@pos
  7479  0039C6  6E33               	movwf	validateRemoteSerialNumber@position^0,c
  7480  0039C8  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
  7481  0039CA  ECC9  F02C         	call	_validateRemoteSerialNumber	;wreg free
  7482  0039CE  6FE1               	movwf	controlSelectRemote@validSerial& (0+255),b
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;sm_MenuConfiguration_MC50.c: 1169:         TypeRemote_st typeRemote = getTypeRemote();
  7486  0039D0  EC51  F04B         	call	_getTypeRemote	;wreg free
  7487  0039D4  0100               	movlb	0	; () banked
  7488  0039D6  6FE3               	movwf	controlSelectRemote@typeRemote& (0+255),b
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;sm_MenuConfiguration_MC50.c: 1170:         if(validSerial==0&&(typeRemote==Keeloq_Rolli
      +                          ngCode || (var_sys_NVM.OnlyRollingCode==NO)))
  7492  0039D8  51E1               	movf	controlSelectRemote@validSerial& (0+255),w,b
  7493  0039DA  A4D8               	btfss	status,2,c
  7494  0039DC  0012               	return	
  7495                           
  7496                           ; BSR set to: 0
  7497  0039DE  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7498  0039E0  B4D8               	btfsc	status,2,c
  7499  0039E2  D003               	goto	u24620
  7500                           
  7501                           ; BSR set to: 0
  7502  0039E4  51BE               	movf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
  7503  0039E6  A4D8               	btfss	status,2,c
  7504  0039E8  0012               	return	
  7505  0039EA                     u24620:
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;sm_MenuConfiguration_MC50.c: 1171:         {;sm_MenuConfiguration_MC50.c: 1172:        
      +                               saveNewSerial(menu_st.parameterSelected,tempSerial,edit_Param.tempValue);
  7509  0039EA  C0E4  F0D8         	movff	controlSelectRemote@tempSerial,saveNewSerial@tempSerial
  7510  0039EE  C0E5  F0D9         	movff	controlSelectRemote@tempSerial+1,saveNewSerial@tempSerial+1
  7511  0039F2  C0E6  F0DA         	movff	controlSelectRemote@tempSerial+2,saveNewSerial@tempSerial+2
  7512  0039F6  C0E7  F0DB         	movff	controlSelectRemote@tempSerial+3,saveNewSerial@tempSerial+3
  7513  0039FA  C049  F0DC         	movff	_edit_Param+3,saveNewSerial@position	;volatile
  7514  0039FE  0101               	movlb	1	; () banked
  7515  003A00  5168               	movf	(_menu_st+23)& (0+255),w,b
  7516  003A02  EC6B  F041         	call	_saveNewSerial
  7517                           
  7518                           ;sm_MenuConfiguration_MC50.c: 1173:             if(edit_Param.tempValue==var_sys_NVM.pos
      +                          itionRemotesFull&&var_sys_NVM.positionRemotesFull<99)
  7519  003A06  0100               	movlb	0	; () banked
  7520  003A08  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7521  003A0A  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7522  003A0C  A4D8               	btfss	status,2,c
  7523  003A0E  D004               	goto	l21480
  7524                           
  7525                           ; BSR set to: 0
  7526  003A10  0E63               	movlw	99
  7527  003A12  61B8               	cpfslt	(_var_sys_NVM+32)& (0+255),b	;volatile
  7528  003A14  D001               	goto	l21480
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;sm_MenuConfiguration_MC50.c: 1174:                 var_sys_NVM.positionRemotesFull++;
  7532  003A16  2BB8               	incf	(_var_sys_NVM+32)& (0+255),f,b	;volatile
  7533  003A18                     l21480:
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;sm_MenuConfiguration_MC50.c: 1175:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_addRemotes);
  7537  003A18  0EBF               	movlw	low _menuConfiguration_stateMachine
  7538  003A1A  6E12               	movwf	sm_send_event@psm^0,c
  7539  003A1C  0E02               	movlw	high _menuConfiguration_stateMachine
  7540  003A1E  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7541  003A20  0E00               	movlw	0
  7542  003A22  6E15               	movwf	(sm_send_event@event+1)^0,c
  7543  003A24  0E08               	movlw	8
  7544  003A26  6E14               	movwf	sm_send_event@event^0,c
  7545  003A28  EC0E  F043         	call	_sm_send_event	;wreg free
  7546                           
  7547                           ;sm_MenuConfiguration_MC50.c: 1176:             var_sys.DistanceProgrammingActive=NO;
  7548  003A2C  0E00               	movlw	0
  7549  003A2E  0101               	movlb	1	; () banked
  7550  003A30  6F40               	movwf	(_var_sys+64)& (0+255),b	;volatile
  7551                           
  7552                           ; BSR set to: 1
  7553                           ;sm_MenuConfiguration_MC50.c: 1177:             var_sys.ProgrammingDistanceIs=NoCMD;
  7554  003A32  0E00               	movlw	0
  7555  003A34  6F3B               	movwf	(_var_sys+59)& (0+255),b	;volatile
  7556                           
  7557                           ; BSR set to: 1
  7558                           ;sm_MenuConfiguration_MC50.c: 1178:             ts_system.timeSinalizationDigit=(1000/50
      +                          )*2;
  7559  003A36  0E00               	movlw	0
  7560  003A38  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  7561  003A3A  0E28               	movlw	40
  7562  003A3C  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  7563                           
  7564                           ; BSR set to: 1
  7565                           ;sm_MenuConfiguration_MC50.c: 1179:             SetSegmentValueIntermitentMain((edit_Par
      +                          am.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,( 200/50));
  7566  003A3E  0E0A               	movlw	10
  7567  003A40  6E10               	movwf	___lbmod@divisor^0,c
  7568  003A42  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7569  003A44  ECCB  F048         	call	___lbmod
  7570  003A48  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7571  003A4A  0E00               	movlw	0
  7572  003A4C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7573  003A4E  0E04               	movlw	4
  7574  003A50  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7575  003A52  0E0A               	movlw	10
  7576  003A54  6E10               	movwf	___lbmod@divisor^0,c
  7577  003A56  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7578  003A58  ECCB  F048         	call	___lbmod
  7579  003A5C  0100               	movlb	0	; () banked
  7580  003A5E  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7581  003A60  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7582  003A62  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7583  003A64  6E14               	movwf	___awdiv@dividend^0,c
  7584  003A66  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7585  003A68  A0D8               	btfss	status,0,c
  7586  003A6A  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7587  003A6C  0E00               	movlw	0
  7588  003A6E  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7589  003A70  0E0A               	movlw	10
  7590  003A72  6E16               	movwf	___awdiv@divisor^0,c
  7591  003A74  EC87  F03E         	call	___awdiv	;wreg free
  7592  003A78  5014               	movf	?___awdiv^0,w,c
  7593  003A7A  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  7594                           
  7595                           ;sm_MenuConfiguration_MC50.c: 1180:             if(edit_Param.Max==edit_Param.tempValue 
      +                          || edit_Param.Max==0 )
  7596  003A7E  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7597  003A80  184A               	xorwf	(_edit_Param+4)^0,w,c	;volatile
  7598  003A82  B4D8               	btfsc	status,2,c
  7599  003A84  D003               	goto	u24660
  7600  003A86  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7601  003A88  A4D8               	btfss	status,2,c
  7602  003A8A  0012               	return	
  7603  003A8C                     u24660:
  7604                           
  7605                           ;sm_MenuConfiguration_MC50.c: 1181:             {;sm_MenuConfiguration_MC50.c: 1185:    
      +                                       if(var_sys_NVM.positionRemotesFull==0 && var_sys_NVM.positionRemotesFull==0
      +                           && typeRemote==Keeloq_RollingCode)
  7606  003A8C  0100               	movlb	0	; () banked
  7607  003A8E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7608  003A90  A4D8               	btfss	status,2,c
  7609  003A92  D008               	goto	l21502
  7610                           
  7611                           ; BSR set to: 0
  7612  003A94  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
  7613  003A96  A4D8               	btfss	status,2,c
  7614  003A98  D005               	goto	l21502
  7615                           
  7616                           ; BSR set to: 0
  7617  003A9A  51E3               	movf	controlSelectRemote@typeRemote& (0+255),w,b
  7618  003A9C  A4D8               	btfss	status,2,c
  7619  003A9E  D002               	goto	l21502
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;sm_MenuConfiguration_MC50.c: 1186:                 {;sm_MenuConfiguration_MC50.c: 1188:
      +                                               var_sys_NVM.OnlyRollingCode=YES;
  7623  003AA0  0E01               	movlw	1
  7624  003AA2  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
  7625  003AA4                     l21502:
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;sm_MenuConfiguration_MC50.c: 1192:                 edit_Param.tempValue++;
  7629  003AA4  2A49               	incf	(_edit_Param+3)^0,f,c	;volatile
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;sm_MenuConfiguration_MC50.c: 1193:                 edit_Param.Value[0]=edit_Param.tempV
      +                          alue;
  7633  003AA6  C047  FFD9         	movff	_edit_Param+1,fsr2l	;volatile
  7634  003AAA  C048  FFDA         	movff	_edit_Param+2,fsr2h	;volatile
  7635  003AAE  C049  FFDF         	movff	_edit_Param+3,indf2	;volatile
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;sm_MenuConfiguration_MC50.c: 1194:                 SaveNVM_VarSystem(pageMemoryCounters
      +                          );
  7639  003AB2  0E02               	movlw	2
  7640  003AB4  EC16  F047         	call	_SaveNVM_VarSystem
  7641  003AB8  0012               	return	
  7642  003ABA                     l21508:
  7643                           
  7644                           ; BSR set to: 0
  7645  003ABA  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7646  003ABC  1849               	xorwf	(_edit_Param+3)^0,w,c	;volatile
  7647  003ABE  B4D8               	btfsc	status,2,c
  7648  003AC0  0012               	return	
  7649                           
  7650                           ; BSR set to: 0
  7651  003AC2  0E27               	movlw	39
  7652  003AC4  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  7653  003AC6  A4D8               	btfss	status,2,c
  7654  003AC8  0012               	return	
  7655                           
  7656                           ; BSR set to: 0
  7657  003ACA  0E27               	movlw	39
  7658  003ACC  644E               	cpfsgt	(_button_struct+2)^0,c	;volatile
  7659  003ACE  0012               	return	
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;sm_MenuConfiguration_MC50.c: 1201:     {;sm_MenuConfiguration_MC50.c: 1202:         ts_
      +                          system.timeoutMenu=((1000/50)*5) ;
  7663  003AD0  0E00               	movlw	0
  7664  003AD2  0101               	movlb	1	; () banked
  7665  003AD4  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7666  003AD6  0E64               	movlw	100
  7667  003AD8  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7668                           
  7669                           ; BSR set to: 1
  7670                           ;sm_MenuConfiguration_MC50.c: 1203:         RemoveSerial(menu_st.parameterSelected,edit_
      +                          Param.tempValue);
  7671  003ADA  C049  F03A         	movff	_edit_Param+3,RemoveSerial@position	;volatile
  7672  003ADE  5168               	movf	(_menu_st+23)& (0+255),w,b
  7673  003AE0  EC4C  F03F         	call	_RemoveSerial
  7674                           
  7675                           ;sm_MenuConfiguration_MC50.c: 1204:         SetSegmentValueIntermitentMain((edit_Param.t
      +                          empValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7676  003AE4  0E0A               	movlw	10
  7677  003AE6  6E10               	movwf	___lbmod@divisor^0,c
  7678  003AE8  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7679  003AEA  ECCB  F048         	call	___lbmod
  7680  003AEE  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7681  003AF0  0E00               	movlw	0
  7682  003AF2  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7683  003AF4  0E14               	movlw	20
  7684  003AF6  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7685  003AF8  0E0A               	movlw	10
  7686  003AFA  6E10               	movwf	___lbmod@divisor^0,c
  7687  003AFC  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7688  003AFE  ECCB  F048         	call	___lbmod
  7689  003B02  0100               	movlb	0	; () banked
  7690  003B04  6FE0               	movwf	??_controlSelectRemote& (0+255),b
  7691  003B06  51E0               	movf	??_controlSelectRemote& (0+255),w,b
  7692  003B08  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7693  003B0A  6E14               	movwf	___awdiv@dividend^0,c
  7694  003B0C  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7695  003B0E  A0D8               	btfss	status,0,c
  7696  003B10  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7697  003B12  0E00               	movlw	0
  7698  003B14  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7699  003B16  0E0A               	movlw	10
  7700  003B18  6E16               	movwf	___awdiv@divisor^0,c
  7701  003B1A  EC87  F03E         	call	___awdiv	;wreg free
  7702  003B1E  5014               	movf	?___awdiv^0,w,c
  7703  003B20  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  7704  003B24  0012               	return	
  7705  003B26                     __end_of_controlSelectRemote:
  7706                           	callstack 0
  7707                           
  7708 ;; *************** function _getTypeRemote *****************
  7709 ;; Defined at:
  7710 ;;		line 459 in file "inputs_MC50.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;		None
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1    wreg      enum E10559
  7717 ;; Registers used:
  7718 ;;		wreg, status,2
  7719 ;; Tracked objects:
  7720 ;;		On entry : 3F/0
  7721 ;;		On exit  : 3F/2
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;Total ram usage:        0 bytes
  7729 ;; Hardware stack levels used: 1
  7730 ;; Hardware stack levels required when called: 4
  7731 ;; This function calls:
  7732 ;;		Nothing
  7733 ;; This function is called by:
  7734 ;;		_controlSelectRemote
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           
  7738                           	psect	text7
  7739  0096A2                     __ptext7:
  7740                           	callstack 0
  7741  0096A2                     _getTypeRemote:
  7742                           	callstack 23
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;inputs_MC50.c: 460:     return classic_data.type;
  7746                           
  7747                           ;incstack = 0
  7748  0096A2  0102               	movlb	2	; () banked
  7749  0096A4  51A2               	movf	(_classic_data+14)& (0+255),w,b
  7750                           
  7751                           ; BSR set to: 2
  7752  0096A6  0012               	return		;funcret
  7753  0096A8                     __end_of_getTypeRemote:
  7754                           	callstack 0
  7755                           
  7756 ;; *************** function _getSerialCmd *****************
  7757 ;; Defined at:
  7758 ;;		line 442 in file "inputs_MC50.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  serial          1   26[COMRAM] PTR unsigned long 
  7761 ;;		 -> controlSelectRemote@tempSerial(4), 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  temp            1   27[COMRAM] char 
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      char 
  7766 ;; Registers used:
  7767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7768 ;; Tracked objects:
  7769 ;;		On entry : 3F/1
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7773 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;Total ram usage:        2 bytes
  7778 ;; Hardware stack levels used: 1
  7779 ;; Hardware stack levels required when called: 5
  7780 ;; This function calls:
  7781 ;;		_memcpy
  7782 ;; This function is called by:
  7783 ;;		_controlSelectRemote
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text8
  7788  008A2A                     __ptext8:
  7789                           	callstack 0
  7790  008A2A                     _getSerialCmd:
  7791                           	callstack 22
  7792                           
  7793                           ; BSR set to: 1
  7794                           ;inputs_MC50.c: 443:     signed char temp=-1;
  7795                           
  7796                           ; BSR set to: 2
  7797                           ;incstack = 0
  7798  008A2A  681C               	setf	getSerialCmd@temp^0,c
  7799                           
  7800                           ; BSR set to: 1
  7801                           ;inputs_MC50.c: 444:     if(RFFull)
  7802  008A2C  0100               	movlb	0	; () banked
  7803  008A2E  518B               	movf	_RFFull& (0+255),w,b	;volatile
  7804  008A30  B4D8               	btfsc	status,2,c
  7805  008A32  D020               	goto	l20096
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;inputs_MC50.c: 445:     {;inputs_MC50.c: 446:         if(RFFull_12BIT)
  7809  008A34  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
  7810  008A36  B4D8               	btfsc	status,2,c
  7811  008A38  D00E               	goto	l20092
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;inputs_MC50.c: 447:         {;inputs_MC50.c: 448:             memcpy((char*)serial,&cla
      +                          ssic_data.serialnumber,4);
  7815  008A3A  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7816  008A3E  6A11               	clrf	(memcpy@d1+1)^0,c
  7817  008A40  0E98               	movlw	low (_classic_data+4)
  7818  008A42  6E12               	movwf	memcpy@s1^0,c
  7819  008A44  0E02               	movlw	high (_classic_data+4)
  7820  008A46  6E13               	movwf	(memcpy@s1+1)^0,c
  7821  008A48  0E00               	movlw	0
  7822  008A4A  6E15               	movwf	(memcpy@n+1)^0,c
  7823  008A4C  0E04               	movlw	4
  7824  008A4E  6E14               	movwf	memcpy@n^0,c
  7825  008A50  EC18  F046         	call	_memcpy	;wreg free
  7826                           
  7827                           ;inputs_MC50.c: 449:         }
  7828  008A54  D00D               	goto	l20094
  7829  008A56                     l20092:
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;inputs_MC50.c: 451:         {;inputs_MC50.c: 452:             memcpy((char*)serial,(cha
      +                          r*)BufferRF+4,4);
  7833  008A56  C01B  F010         	movff	getSerialCmd@serial,memcpy@d1
  7834  008A5A  6A11               	clrf	(memcpy@d1+1)^0,c
  7835  008A5C  0ECE               	movlw	low (_BufferRF+4)
  7836  008A5E  6E12               	movwf	memcpy@s1^0,c
  7837  008A60  0E02               	movlw	high (_BufferRF+4)
  7838  008A62  6E13               	movwf	(memcpy@s1+1)^0,c
  7839  008A64  0E00               	movlw	0
  7840  008A66  6E15               	movwf	(memcpy@n+1)^0,c
  7841  008A68  0E04               	movlw	4
  7842  008A6A  6E14               	movwf	memcpy@n^0,c
  7843  008A6C  EC18  F046         	call	_memcpy	;wreg free
  7844  008A70                     l20094:
  7845                           
  7846                           ;inputs_MC50.c: 454:         temp=classic_data.fcode1;
  7847  008A70  C2A0  F01C         	movff	_classic_data+12,getSerialCmd@temp
  7848  008A74                     l20096:
  7849                           
  7850                           ;inputs_MC50.c: 456:     return temp;
  7851  008A74  501C               	movf	getSerialCmd@temp^0,w,c
  7852  008A76  0012               	return		;funcret
  7853  008A78                     __end_of_getSerialCmd:
  7854                           	callstack 0
  7855                           
  7856 ;; *************** function _controlSaveRemote *****************
  7857 ;; Defined at:
  7858 ;;		line 1209 in file "sm_MenuConfiguration_MC50.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;		None
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7867 ;; Tracked objects:
  7868 ;;		On entry : 3F/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7876 ;;Total ram usage:        1 bytes
  7877 ;; Hardware stack levels used: 1
  7878 ;; Hardware stack levels required when called: 6
  7879 ;; This function calls:
  7880 ;;		_ClearFlag_rfCMD
  7881 ;;		_SetSegmentValueIntermitentMain
  7882 ;;		_SetSegmentValueMain
  7883 ;;		___awdiv
  7884 ;;		___lbmod
  7885 ;;		_sm_send_event
  7886 ;; This function is called by:
  7887 ;;		_sm_execute_menuConfiguration
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           	psect	text9
  7892  00755C                     __ptext9:
  7893                           	callstack 0
  7894  00755C                     _controlSaveRemote:
  7895                           	callstack 22
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;sm_MenuConfiguration_MC50.c: 1210:      if (ts_system.timeSinalizationDigit<=0)
  7899                           
  7900                           ;incstack = 0
  7901  00755C  0101               	movlb	1	; () banked
  7902  00755E  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  7903  007560  D005               	goto	u24730
  7904  007562  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  7905  007564  E154               	bnz	l3483
  7906  007566  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  7907  007568  B0D8               	btfsc	status,0,c
  7908  00756A  0012               	return	
  7909  00756C                     u24730:
  7910                           
  7911                           ; BSR set to: 1
  7912                           ;sm_MenuConfiguration_MC50.c: 1211:      {;sm_MenuConfiguration_MC50.c: 1212:          i
      +                          f(edit_Param.Max==0)
  7913  00756C  504A               	movf	(_edit_Param+4)^0,w,c	;volatile
  7914  00756E  A4D8               	btfss	status,2,c
  7915  007570  D02E               	goto	l21530
  7916                           
  7917                           ; BSR set to: 1
  7918                           ;sm_MenuConfiguration_MC50.c: 1213:          {;sm_MenuConfiguration_MC50.c: 1214:       
      +                                 ts_system.timeoutMenu=10*(1000/50);
  7919  007572  0E00               	movlw	0
  7920  007574  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  7921  007576  0EC8               	movlw	200
  7922  007578  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  7923                           
  7924                           ; BSR set to: 1
  7925                           ;sm_MenuConfiguration_MC50.c: 1215:              sm_send_event(&menuConfiguration_stateM
      +                          achine, ev_NextRemote);
  7926  00757A  0EBF               	movlw	low _menuConfiguration_stateMachine
  7927  00757C  6E12               	movwf	sm_send_event@psm^0,c
  7928  00757E  0E02               	movlw	high _menuConfiguration_stateMachine
  7929  007580  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7930  007582  0E00               	movlw	0
  7931  007584  6E15               	movwf	(sm_send_event@event+1)^0,c
  7932  007586  0E09               	movlw	9
  7933  007588  6E14               	movwf	sm_send_event@event^0,c
  7934  00758A  EC0E  F043         	call	_sm_send_event	;wreg free
  7935                           
  7936                           ;sm_MenuConfiguration_MC50.c: 1216:              SetSegmentValueIntermitentMain((edit_Pa
      +                          ram.tempValue-edit_Param.tempValue%10)/10, edit_Param.tempValue%10,(1000/50));
  7937  00758E  0E0A               	movlw	10
  7938  007590  6E10               	movwf	___lbmod@divisor^0,c
  7939  007592  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7940  007594  ECCB  F048         	call	___lbmod
  7941  007598  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
  7942  00759A  0E00               	movlw	0
  7943  00759C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
  7944  00759E  0E14               	movlw	20
  7945  0075A0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
  7946  0075A2  0E0A               	movlw	10
  7947  0075A4  6E10               	movwf	___lbmod@divisor^0,c
  7948  0075A6  5049               	movf	(_edit_Param+3)^0,w,c	;volatile
  7949  0075A8  ECCB  F048         	call	___lbmod
  7950  0075AC  6E20               	movwf	??_controlSaveRemote^0,c
  7951  0075AE  5020               	movf	??_controlSaveRemote^0,w,c
  7952  0075B0  5C49               	subwf	(_edit_Param+3)^0,w,c	;volatile
  7953  0075B2  6E14               	movwf	___awdiv@dividend^0,c
  7954  0075B4  6A15               	clrf	(___awdiv@dividend+1)^0,c
  7955  0075B6  A0D8               	btfss	status,0,c
  7956  0075B8  0615               	decf	(___awdiv@dividend+1)^0,f,c
  7957  0075BA  0E00               	movlw	0
  7958  0075BC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7959  0075BE  0E0A               	movlw	10
  7960  0075C0  6E16               	movwf	___awdiv@divisor^0,c
  7961  0075C2  EC87  F03E         	call	___awdiv	;wreg free
  7962  0075C6  5014               	movf	?___awdiv^0,w,c
  7963  0075C8  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
  7964                           
  7965                           ;sm_MenuConfiguration_MC50.c: 1217:          }
  7966  0075CC  0012               	return	
  7967  0075CE                     l21530:
  7968                           
  7969                           ; BSR set to: 1
  7970                           ;sm_MenuConfiguration_MC50.c: 1219:          {;sm_MenuConfiguration_MC50.c: 1220:       
      +                                sm_send_event(&main_stateMachine, ev_goto_StandBy);
  7971  0075CE  0EEE               	movlw	low _main_stateMachine
  7972  0075D0  6E12               	movwf	sm_send_event@psm^0,c
  7973  0075D2  0E01               	movlw	high _main_stateMachine
  7974  0075D4  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7975  0075D6  0E00               	movlw	0
  7976  0075D8  6E15               	movwf	(sm_send_event@event+1)^0,c
  7977  0075DA  0E07               	movlw	7
  7978  0075DC  6E14               	movwf	sm_send_event@event^0,c
  7979  0075DE  EC0E  F043         	call	_sm_send_event	;wreg free
  7980                           
  7981                           ;sm_MenuConfiguration_MC50.c: 1221:             sm_send_event(&menuConfiguration_stateMa
      +                          chine, ev_ParameterIsSaved);
  7982  0075E2  0EBF               	movlw	low _menuConfiguration_stateMachine
  7983  0075E4  6E12               	movwf	sm_send_event@psm^0,c
  7984  0075E6  0E02               	movlw	high _menuConfiguration_stateMachine
  7985  0075E8  6E13               	movwf	(sm_send_event@psm+1)^0,c
  7986  0075EA  0E00               	movlw	0
  7987  0075EC  6E15               	movwf	(sm_send_event@event+1)^0,c
  7988  0075EE  0E04               	movlw	4
  7989  0075F0  6E14               	movwf	sm_send_event@event^0,c
  7990  0075F2  EC0E  F043         	call	_sm_send_event	;wreg free
  7991                           
  7992                           ;sm_MenuConfiguration_MC50.c: 1222:             SetSegmentValueMain(dMinus,dMinus);
  7993  0075F6  0E18               	movlw	24
  7994  0075F8  6E1C               	movwf	SetSegmentValueMain@d2^0,c
  7995  0075FA  0E18               	movlw	24
  7996  0075FC  EC03  F04A         	call	_SetSegmentValueMain
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;sm_MenuConfiguration_MC50.c: 1223:             ClearFlag_rfCMD();
  8000  007600  EC54  F04B         	call	_ClearFlag_rfCMD	;wreg free
  8001                           
  8002                           ;sm_MenuConfiguration_MC50.c: 1224:             ts_system.timeoutMenu = 0;
  8003  007604  0E00               	movlw	0
  8004  007606  0101               	movlb	1	; () banked
  8005  007608  6FAA               	movwf	(_ts_system+15)& (0+255),b	;volatile
  8006  00760A  0E00               	movlw	0
  8007  00760C  6FA9               	movwf	(_ts_system+14)& (0+255),b	;volatile
  8008  00760E                     l3483:
  8009  00760E  0012               	return		;funcret
  8010  007610                     __end_of_controlSaveRemote:
  8011                           	callstack 0
  8012                           
  8013 ;; *************** function ___lbmod *****************
  8014 ;; Defined at:
  8015 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  dividend        1    wreg     unsigned char 
  8018 ;;  divisor         1   15[COMRAM] unsigned char 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  dividend        1   16[COMRAM] unsigned char 
  8021 ;;  rem             1   18[COMRAM] unsigned char 
  8022 ;;  counter         1   17[COMRAM] unsigned char 
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      unsigned char 
  8025 ;; Registers used:
  8026 ;;		wreg, status,2, status,0
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/1
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8032 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8033 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8035 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8036 ;;Total ram usage:        4 bytes
  8037 ;; Hardware stack levels used: 1
  8038 ;; Hardware stack levels required when called: 4
  8039 ;; This function calls:
  8040 ;;		Nothing
  8041 ;; This function is called by:
  8042 ;;		_controlSelectRemote
  8043 ;;		_controlSaveRemote
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           	psect	text10
  8048  009196                     __ptext10:
  8049                           	callstack 0
  8050  009196                     ___lbmod:
  8051                           	callstack 23
  8052                           
  8053                           ;incstack = 0
  8054                           ;___lbmod@dividend stored from wreg
  8055  009196  6E11               	movwf	___lbmod@dividend^0,c
  8056  009198  0E08               	movlw	8
  8057  00919A  6E12               	movwf	___lbmod@counter^0,c
  8058  00919C  0E00               	movlw	0
  8059  00919E  6E13               	movwf	___lbmod@rem^0,c
  8060  0091A0                     l12770:
  8061  0091A0  90D8               	bcf	status,0,c
  8062  0091A2  3411               	rlcf	___lbmod@dividend^0,w,c
  8063  0091A4  3413               	rlcf	___lbmod@rem^0,w,c
  8064  0091A6  6E13               	movwf	___lbmod@rem^0,c
  8065  0091A8  90D8               	bcf	status,0,c
  8066  0091AA  3611               	rlcf	___lbmod@dividend^0,f,c
  8067  0091AC  5010               	movf	___lbmod@divisor^0,w,c
  8068  0091AE  5C13               	subwf	___lbmod@rem^0,w,c
  8069  0091B0  A0D8               	btfss	status,0,c
  8070  0091B2  D002               	goto	l12778
  8071  0091B4  5010               	movf	___lbmod@divisor^0,w,c
  8072  0091B6  5E13               	subwf	___lbmod@rem^0,f,c
  8073  0091B8                     l12778:
  8074  0091B8  2E12               	decfsz	___lbmod@counter^0,f,c
  8075  0091BA  D7F2               	goto	l12770
  8076  0091BC  5013               	movf	___lbmod@rem^0,w,c
  8077  0091BE  0012               	return		;funcret
  8078  0091C0                     __end_of___lbmod:
  8079                           	callstack 0
  8080                           
  8081 ;; *************** function ___awdiv *****************
  8082 ;; Defined at:
  8083 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  dividend        2   19[COMRAM] int 
  8086 ;;  divisor         2   21[COMRAM] int 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  quotient        2   25[COMRAM] int 
  8089 ;;  sign            1   24[COMRAM] unsigned char 
  8090 ;;  counter         1   23[COMRAM] unsigned char 
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  2   19[COMRAM] int 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8101 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;Total ram usage:        8 bytes
  8105 ;; Hardware stack levels used: 1
  8106 ;; Hardware stack levels required when called: 4
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_controlSelectRemote
  8111 ;;		_controlSaveRemote
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text11
  8116  007D0E                     __ptext11:
  8117                           	callstack 0
  8118  007D0E                     ___awdiv:
  8119                           	callstack 23
  8120                           
  8121                           ;incstack = 0
  8122  007D0E  0E00               	movlw	0
  8123  007D10  6E19               	movwf	___awdiv@sign^0,c
  8124  007D12  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8125  007D14  D006               	goto	l12706
  8126  007D16  6C16               	negf	___awdiv@divisor^0,c
  8127  007D18  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  8128  007D1A  B0D8               	btfsc	status,0,c
  8129  007D1C  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  8130  007D1E  0E01               	movlw	1
  8131  007D20  6E19               	movwf	___awdiv@sign^0,c
  8132  007D22                     l12706:
  8133  007D22  AE15               	btfss	(___awdiv@dividend+1)^0,7,c
  8134  007D24  D006               	goto	l12712
  8135  007D26  6C14               	negf	___awdiv@dividend^0,c
  8136  007D28  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  8137  007D2A  B0D8               	btfsc	status,0,c
  8138  007D2C  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  8139  007D2E  0E01               	movlw	1
  8140  007D30  1A19               	xorwf	___awdiv@sign^0,f,c
  8141  007D32                     l12712:
  8142  007D32  0E00               	movlw	0
  8143  007D34  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  8144  007D36  0E00               	movlw	0
  8145  007D38  6E1A               	movwf	___awdiv@quotient^0,c
  8146  007D3A  5016               	movf	___awdiv@divisor^0,w,c
  8147  007D3C  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  8148  007D3E  B4D8               	btfsc	status,2,c
  8149  007D40  D01C               	goto	l12734
  8150  007D42  0E01               	movlw	1
  8151  007D44  6E18               	movwf	___awdiv@counter^0,c
  8152  007D46  D004               	goto	l12720
  8153  007D48                     l12718:
  8154  007D48  90D8               	bcf	status,0,c
  8155  007D4A  3616               	rlcf	___awdiv@divisor^0,f,c
  8156  007D4C  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  8157  007D4E  2A18               	incf	___awdiv@counter^0,f,c
  8158  007D50                     l12720:
  8159  007D50  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  8160  007D52  D7FA               	goto	l12718
  8161  007D54                     u12340:
  8162  007D54  90D8               	bcf	status,0,c
  8163  007D56  361A               	rlcf	___awdiv@quotient^0,f,c
  8164  007D58  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8165  007D5A  5016               	movf	___awdiv@divisor^0,w,c
  8166  007D5C  5C14               	subwf	___awdiv@dividend^0,w,c
  8167  007D5E  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8168  007D60  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  8169  007D62  A0D8               	btfss	status,0,c
  8170  007D64  D005               	goto	l12730
  8171  007D66  5016               	movf	___awdiv@divisor^0,w,c
  8172  007D68  5E14               	subwf	___awdiv@dividend^0,f,c
  8173  007D6A  5017               	movf	(___awdiv@divisor+1)^0,w,c
  8174  007D6C  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  8175  007D6E  801A               	bsf	___awdiv@quotient^0,0,c
  8176  007D70                     l12730:
  8177  007D70  90D8               	bcf	status,0,c
  8178  007D72  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  8179  007D74  3216               	rrcf	___awdiv@divisor^0,f,c
  8180  007D76  2E18               	decfsz	___awdiv@counter^0,f,c
  8181  007D78  D7ED               	goto	u12340
  8182  007D7A                     l12734:
  8183  007D7A  5019               	movf	___awdiv@sign^0,w,c
  8184  007D7C  B4D8               	btfsc	status,2,c
  8185  007D7E  D004               	goto	l12738
  8186  007D80  6C1A               	negf	___awdiv@quotient^0,c
  8187  007D82  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  8188  007D84  B0D8               	btfsc	status,0,c
  8189  007D86  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  8190  007D88                     l12738:
  8191  007D88  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  8192  007D8C  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  8193  007D90  0012               	return		;funcret
  8194  007D92                     __end_of___awdiv:
  8195                           	callstack 0
  8196                           
  8197 ;; *************** function _SetSegmentValueMain *****************
  8198 ;; Defined at:
  8199 ;;		line 104 in file "outputs_MC50.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  d1              1    wreg     unsigned char 
  8202 ;;  d2              1   27[COMRAM] unsigned char 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  d1              1   28[COMRAM] unsigned char 
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  1    wreg      void 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 3F/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8214 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8218 ;;Total ram usage:        2 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; Hardware stack levels required when called: 4
  8221 ;; This function calls:
  8222 ;;		Nothing
  8223 ;; This function is called by:
  8224 ;;		_sm_execute_main
  8225 ;;		_sm_execute_menuConfiguration
  8226 ;;		_load_New_Menu
  8227 ;;		_controlSelectRemote
  8228 ;;		_controlSaveRemote
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           	psect	text12
  8233  009406                     __ptext12:
  8234                           	callstack 0
  8235  009406                     _SetSegmentValueMain:
  8236                           	callstack 22
  8237                           
  8238                           ;incstack = 0
  8239                           ;SetSegmentValueMain@d1 stored from wreg
  8240  009406  6E1D               	movwf	SetSegmentValueMain@d1^0,c
  8241                           
  8242                           ;outputs_MC50.c: 104: void SetSegmentValueMain(char d1, char d2);outputs_MC50.c: 105: {;
      +                          outputs_MC50.c: 106:     dispStruct.display_grp.value_display1=d1;
  8243  009408  C01D  F072         	movff	SetSegmentValueMain@d1,_dispStruct	;volatile
  8244                           
  8245                           ;outputs_MC50.c: 107:     dispStruct.display_grp.value_display2=d2;
  8246  00940C  C01C  F073         	movff	SetSegmentValueMain@d2,_dispStruct+1	;volatile
  8247                           
  8248                           ;outputs_MC50.c: 108:     dispStruct.intermitentFreq=0;
  8249  009410  0E00               	movlw	0
  8250  009412  0100               	movlb	0	; () banked
  8251  009414  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8252  009416  0E00               	movlw	0
  8253  009418  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;outputs_MC50.c: 109:     dispStruct.upFase=0;
  8257  00941A  0E00               	movlw	0
  8258  00941C  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8259                           
  8260                           ; BSR set to: 0
  8261  00941E  0012               	return		;funcret
  8262  009420                     __end_of_SetSegmentValueMain:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _ClearFlag_rfCMD *****************
  8266 ;; Defined at:
  8267 ;;		line 463 in file "inputs_MC50.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;		None
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/1
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8285 ;;Total ram usage:        0 bytes
  8286 ;; Hardware stack levels used: 1
  8287 ;; Hardware stack levels required when called: 4
  8288 ;; This function calls:
  8289 ;;		Nothing
  8290 ;; This function is called by:
  8291 ;;		_sm_execute_menuConfiguration
  8292 ;;		_controlSelectRemote
  8293 ;;		_controlSaveRemote
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text13
  8298  0096A8                     __ptext13:
  8299                           	callstack 0
  8300  0096A8                     _ClearFlag_rfCMD:
  8301                           	callstack 23
  8302                           
  8303                           ;inputs_MC50.c: 464:     rfCMD.processed=1;
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;incstack = 0
  8307  0096A8  0E01               	movlw	1
  8308  0096AA  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
  8309  0096AC  0012               	return		;funcret
  8310  0096AE                     __end_of_ClearFlag_rfCMD:
  8311                           	callstack 0
  8312                           
  8313 ;; *************** function _controlLearnDigit *****************
  8314 ;; Defined at:
  8315 ;;		line 1230 in file "sm_MenuConfiguration_MC50.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;		None
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;		None
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2, status,0, cstack
  8324 ;; Tracked objects:
  8325 ;;		On entry : 3F/0
  8326 ;;		On exit  : 3E/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;Total ram usage:        0 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 5
  8336 ;; This function calls:
  8337 ;;		_SetSegmentValueLearn
  8338 ;; This function is called by:
  8339 ;;		_sm_execute_menuConfiguration
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text14
  8344  008EFC                     __ptext14:
  8345                           	callstack 0
  8346  008EFC                     _controlLearnDigit:
  8347                           	callstack 23
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;sm_MenuConfiguration_MC50.c: 1232:     if(ts_system.timeSinalizationDigit<=0 )
  8351                           
  8352                           ;incstack = 0
  8353  008EFC  0101               	movlb	1	; () banked
  8354  008EFE  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
  8355  008F00  D005               	goto	u13900
  8356  008F02  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
  8357  008F04  E112               	bnz	l3489
  8358  008F06  05A7               	decf	(_ts_system+12)& (0+255),w,b	;volatile
  8359  008F08  B0D8               	btfsc	status,0,c
  8360  008F0A  0012               	return	
  8361  008F0C                     u13900:
  8362                           
  8363                           ; BSR set to: 1
  8364                           ;sm_MenuConfiguration_MC50.c: 1233:     {;sm_MenuConfiguration_MC50.c: 1234:         ts_
      +                          system.timeSinalizationDigit=( 100/50);
  8365  008F0C  0E00               	movlw	0
  8366  008F0E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  8367  008F10  0E02               	movlw	2
  8368  008F12  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  8369                           
  8370                           ; BSR set to: 1
  8371                           ;sm_MenuConfiguration_MC50.c: 1235:         if(var_sys.StateMotor==InClose)
  8372  008F14  0E03               	movlw	3
  8373  008F16  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
  8374  008F18  A4D8               	btfss	status,2,c
  8375  008F1A  D004               	goto	l14092
  8376                           
  8377                           ; BSR set to: 1
  8378                           ;sm_MenuConfiguration_MC50.c: 1236:         {;sm_MenuConfiguration_MC50.c: 1237:        
      +                               SetSegmentValueLearn(Left);
  8379  008F1C  0E00               	movlw	0
  8380  008F1E  EC4A  F037         	call	_SetSegmentValueLearn
  8381                           
  8382                           ;sm_MenuConfiguration_MC50.c: 1238:         }
  8383  008F22  0012               	return	
  8384  008F24                     l14092:
  8385                           
  8386                           ; BSR set to: 1
  8387                           ;sm_MenuConfiguration_MC50.c: 1240:         {;sm_MenuConfiguration_MC50.c: 1241:        
      +                               SetSegmentValueLearn(Rigth);
  8388  008F24  0E01               	movlw	1
  8389  008F26  EC4A  F037         	call	_SetSegmentValueLearn
  8390  008F2A                     l3489:
  8391  008F2A  0012               	return		;funcret
  8392  008F2C                     __end_of_controlLearnDigit:
  8393                           	callstack 0
  8394                           
  8395 ;; *************** function _SetSegmentValueLearn *****************
  8396 ;; Defined at:
  8397 ;;		line 124 in file "outputs_MC50.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;  direction       1    wreg     enum E10602
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;  direction       1   17[COMRAM] enum E10602
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0
  8406 ;; Tracked objects:
  8407 ;;		On entry : 3F/1
  8408 ;;		On exit  : 3F/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8414 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8415 ;;Total ram usage:        3 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 4
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_controlLearnDigit
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text15
  8426  006E94                     __ptext15:
  8427                           	callstack 0
  8428  006E94                     _SetSegmentValueLearn:
  8429                           	callstack 23
  8430                           
  8431                           ;incstack = 0
  8432                           ;SetSegmentValueLearn@direction stored from wreg
  8433  006E94  6E12               	movwf	SetSegmentValueLearn@direction^0,c
  8434                           
  8435                           ;outputs_MC50.c: 124: void SetSegmentValueLearn(Direction_en direction);outputs_MC50.c: 
      +                          125: {;outputs_MC50.c: 126:     dispStruct.intermitentFreq=0;
  8436  006E96  0E00               	movlw	0
  8437  006E98  0100               	movlb	0	; () banked
  8438  006E9A  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
  8439  006E9C  0E00               	movlw	0
  8440  006E9E  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
  8441                           
  8442                           ;outputs_MC50.c: 127:     dispStruct.upFase=0;
  8443  006EA0  0E00               	movlw	0
  8444  006EA2  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
  8445                           
  8446                           ;outputs_MC50.c: 128:     switch (direction)
  8447  006EA4  D066               	goto	l12544
  8448  006EA6                     l12490:
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;outputs_MC50.c: 131:             if(dispStruct.display_grp.value_display1==sA && dispSt
      +                          ruct.display_grp.value_display2==dBlank)
  8452  006EA6  0E1A               	movlw	26
  8453  006EA8  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8454  006EAA  A4D8               	btfss	status,2,c
  8455  006EAC  D009               	goto	l12496
  8456                           
  8457                           ; BSR set to: 0
  8458  006EAE  0E20               	movlw	32
  8459  006EB0  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8460  006EB2  A4D8               	btfss	status,2,c
  8461  006EB4  D005               	goto	l12496
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;outputs_MC50.c: 132:             {;outputs_MC50.c: 133:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8465  006EB6  0E20               	movlw	32
  8466  006EB8  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8467                           
  8468                           ;outputs_MC50.c: 134:                dispStruct.display_grp.value_display2=sA;
  8469  006EBA  0E1A               	movlw	26
  8470  006EBC  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8471                           
  8472                           ;outputs_MC50.c: 135:             }
  8473  006EBE  0012               	return	
  8474  006EC0                     l12496:
  8475                           
  8476                           ; BSR set to: 0
  8477  006EC0  0E20               	movlw	32
  8478  006EC2  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8479  006EC4  A4D8               	btfss	status,2,c
  8480  006EC6  D009               	goto	l12502
  8481                           
  8482                           ; BSR set to: 0
  8483  006EC8  0E1D               	movlw	29
  8484  006ECA  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8485  006ECC  A4D8               	btfss	status,2,c
  8486  006ECE  D005               	goto	l12502
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;outputs_MC50.c: 137:             {;outputs_MC50.c: 138:                dispStruct.displ
      +                          ay_grp.value_display1=sD;
  8490  006ED0  0E1D               	movlw	29
  8491  006ED2  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8492                           
  8493                           ;outputs_MC50.c: 139:                dispStruct.display_grp.value_display2=dBlank;
  8494  006ED4  0E20               	movlw	32
  8495  006ED6  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8496                           
  8497                           ;outputs_MC50.c: 140:             }
  8498  006ED8  0012               	return	
  8499  006EDA                     l12502:
  8500                           
  8501                           ; BSR set to: 0
  8502  006EDA  0E1F               	movlw	31
  8503  006EDC  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8504  006EDE  A4D8               	btfss	status,2,c
  8505  006EE0  D005               	goto	l12506
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;outputs_MC50.c: 142:             {;outputs_MC50.c: 143:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8509  006EE2  0E1A               	movlw	26
  8510  006EE4  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8511                           
  8512                           ;outputs_MC50.c: 144:                dispStruct.display_grp.value_display2=dBlank;
  8513  006EE6  0E20               	movlw	32
  8514  006EE8  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8515                           
  8516                           ;outputs_MC50.c: 145:             }
  8517  006EEA  0012               	return	
  8518  006EEC                     l12506:
  8519                           
  8520                           ; BSR set to: 0
  8521  006EEC  0E20               	movlw	32
  8522  006EEE  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8523  006EF0  A4D8               	btfss	status,2,c
  8524  006EF2  D002               	goto	l12510
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;outputs_MC50.c: 147:             {;outputs_MC50.c: 148:                dispStruct.displ
      +                          ay_grp.value_display2++;
  8528  006EF4  2B73               	incf	(_dispStruct+1)& (0+255),f,b	;volatile
  8529                           
  8530                           ;outputs_MC50.c: 149:             }
  8531  006EF6  0012               	return	
  8532  006EF8                     l12510:
  8533                           
  8534                           ; BSR set to: 0
  8535  006EF8  0E20               	movlw	32
  8536  006EFA  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8537  006EFC  A4D8               	btfss	status,2,c
  8538  006EFE  D002               	goto	l12514
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;outputs_MC50.c: 151:             {;outputs_MC50.c: 152:                dispStruct.displ
      +                          ay_grp.value_display1++;
  8542  006F00  2B72               	incf	_dispStruct& (0+255),f,b	;volatile
  8543                           
  8544                           ;outputs_MC50.c: 153:             }
  8545  006F02  0012               	return	
  8546  006F04                     l12514:
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;outputs_MC50.c: 155:             {;outputs_MC50.c: 156:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8550  006F04  0E1A               	movlw	26
  8551  006F06  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8552                           
  8553                           ;outputs_MC50.c: 157:                dispStruct.display_grp.value_display2=dBlank;
  8554  006F08  0E20               	movlw	32
  8555  006F0A  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8556  006F0C  0012               	return	
  8557  006F0E                     l12516:
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;outputs_MC50.c: 161:             if(dispStruct.display_grp.value_display2==sA && dispSt
      +                          ruct.display_grp.value_display1==dBlank)
  8561  006F0E  0E1A               	movlw	26
  8562  006F10  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8563  006F12  A4D8               	btfss	status,2,c
  8564  006F14  D009               	goto	l12522
  8565                           
  8566                           ; BSR set to: 0
  8567  006F16  0E20               	movlw	32
  8568  006F18  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8569  006F1A  A4D8               	btfss	status,2,c
  8570  006F1C  D005               	goto	l12522
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;outputs_MC50.c: 162:             {;outputs_MC50.c: 163:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8574  006F1E  0E1A               	movlw	26
  8575  006F20  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8576                           
  8577                           ;outputs_MC50.c: 164:                dispStruct.display_grp.value_display2=dBlank;
  8578  006F22  0E20               	movlw	32
  8579  006F24  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8580                           
  8581                           ;outputs_MC50.c: 165:             }
  8582  006F26  0012               	return	
  8583  006F28                     l12522:
  8584                           
  8585                           ; BSR set to: 0
  8586  006F28  0E20               	movlw	32
  8587  006F2A  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8588  006F2C  A4D8               	btfss	status,2,c
  8589  006F2E  D009               	goto	l12528
  8590                           
  8591                           ; BSR set to: 0
  8592  006F30  0E1D               	movlw	29
  8593  006F32  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8594  006F34  A4D8               	btfss	status,2,c
  8595  006F36  D005               	goto	l12528
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;outputs_MC50.c: 167:             {;outputs_MC50.c: 168:                dispStruct.displ
      +                          ay_grp.value_display1=dBlank;
  8599  006F38  0E20               	movlw	32
  8600  006F3A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8601                           
  8602                           ;outputs_MC50.c: 169:                dispStruct.display_grp.value_display2=sD;
  8603  006F3C  0E1D               	movlw	29
  8604  006F3E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8605                           
  8606                           ;outputs_MC50.c: 170:             }
  8607  006F40  0012               	return	
  8608  006F42                     l12528:
  8609                           
  8610                           ; BSR set to: 0
  8611  006F42  0E1A               	movlw	26
  8612  006F44  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8613  006F46  A4D8               	btfss	status,2,c
  8614  006F48  D003               	goto	l12532
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;outputs_MC50.c: 172:             {;outputs_MC50.c: 173:                dispStruct.displ
      +                          ay_grp.value_display1=sF;
  8618  006F4A  0E1F               	movlw	31
  8619  006F4C  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8620                           
  8621                           ;outputs_MC50.c: 174:             }
  8622  006F4E  0012               	return	
  8623  006F50                     l12532:
  8624                           
  8625                           ; BSR set to: 0
  8626  006F50  0E20               	movlw	32
  8627  006F52  1972               	xorwf	_dispStruct& (0+255),w,b	;volatile
  8628  006F54  A4D8               	btfss	status,2,c
  8629  006F56  D002               	goto	l12536
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;outputs_MC50.c: 176:             {;outputs_MC50.c: 177:                dispStruct.displ
      +                          ay_grp.value_display2--;
  8633  006F58  0773               	decf	(_dispStruct+1)& (0+255),f,b	;volatile
  8634                           
  8635                           ;outputs_MC50.c: 178:             }
  8636  006F5A  0012               	return	
  8637  006F5C                     l12536:
  8638                           
  8639                           ; BSR set to: 0
  8640  006F5C  0E20               	movlw	32
  8641  006F5E  1973               	xorwf	(_dispStruct+1)& (0+255),w,b	;volatile
  8642  006F60  A4D8               	btfss	status,2,c
  8643  006F62  D002               	goto	l12540
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;outputs_MC50.c: 180:             {;outputs_MC50.c: 181:                dispStruct.displ
      +                          ay_grp.value_display1--;
  8647  006F64  0772               	decf	_dispStruct& (0+255),f,b	;volatile
  8648                           
  8649                           ;outputs_MC50.c: 182:             }
  8650  006F66  0012               	return	
  8651  006F68                     l12540:
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;outputs_MC50.c: 184:             {;outputs_MC50.c: 185:                dispStruct.displ
      +                          ay_grp.value_display1=sA;
  8655  006F68  0E1A               	movlw	26
  8656  006F6A  6F72               	movwf	_dispStruct& (0+255),b	;volatile
  8657                           
  8658                           ;outputs_MC50.c: 186:                dispStruct.display_grp.value_display2=dBlank;
  8659  006F6C  0E20               	movlw	32
  8660  006F6E  6F73               	movwf	(_dispStruct+1)& (0+255),b	;volatile
  8661  006F70  0012               	return	
  8662  006F72                     l12544:
  8663                           
  8664                           ; BSR set to: 0
  8665  006F72  5012               	movf	SetSegmentValueLearn@direction^0,w,c
  8666  006F74  6E10               	movwf	??_SetSegmentValueLearn^0,c
  8667  006F76  6A11               	clrf	(??_SetSegmentValueLearn+1)^0,c
  8668                           
  8669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8670                           ; Switch size 1, requested type "simple"
  8671                           ; Number of cases is 1, Range of values is 0 to 0
  8672                           ; switch strategies available:
  8673                           ; Name         Instructions Cycles
  8674                           ; simple_byte            4     3 (average)
  8675                           ;	Chosen strategy is simple_byte
  8676  006F78  5011               	movf	(??_SetSegmentValueLearn+1)^0,w,c
  8677  006F7A  0A00               	xorlw	0	; case 0
  8678  006F7C  A4D8               	btfss	status,2,c
  8679  006F7E  0012               	return	
  8680                           
  8681                           ; BSR set to: 0
  8682                           ; Switch size 1, requested type "simple"
  8683                           ; Number of cases is 2, Range of values is 0 to 1
  8684                           ; switch strategies available:
  8685                           ; Name         Instructions Cycles
  8686                           ; simple_byte            7     4 (average)
  8687                           ;	Chosen strategy is simple_byte
  8688  006F80  5010               	movf	??_SetSegmentValueLearn^0,w,c
  8689  006F82  0A00               	xorlw	0	; case 0
  8690  006F84  B4D8               	btfsc	status,2,c
  8691  006F86  D7C3               	goto	l12516
  8692  006F88  0A01               	xorlw	1	; case 1
  8693  006F8A  A4D8               	btfss	status,2,c
  8694  006F8C  0012               	return	
  8695  006F8E  D78B               	goto	l12490
  8696  006F90                     __end_of_SetSegmentValueLearn:
  8697                           	callstack 0
  8698                           
  8699 ;; *************** function ___lldiv *****************
  8700 ;; Defined at:
  8701 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  dividend        4   15[COMRAM] unsigned long 
  8704 ;;  divisor         4   19[COMRAM] unsigned long 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  quotient        4   23[COMRAM] unsigned long 
  8707 ;;  counter         1   27[COMRAM] unsigned char 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  4   15[COMRAM] unsigned long 
  8710 ;; Registers used:
  8711 ;;		wreg, status,2, status,0
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/1
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8717 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8718 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8720 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8721 ;;Total ram usage:       13 bytes
  8722 ;; Hardware stack levels used: 1
  8723 ;; Hardware stack levels required when called: 4
  8724 ;; This function calls:
  8725 ;;		Nothing
  8726 ;; This function is called by:
  8727 ;;		_sm_execute_menuConfiguration
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text16
  8732  007E16                     __ptext16:
  8733                           	callstack 0
  8734  007E16                     ___lldiv:
  8735                           	callstack 24
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;incstack = 0
  8739  007E16  0E00               	movlw	0
  8740  007E18  6E18               	movwf	___lldiv@quotient^0,c
  8741  007E1A  0E00               	movlw	0
  8742  007E1C  6E19               	movwf	(___lldiv@quotient+1)^0,c
  8743  007E1E  0E00               	movlw	0
  8744  007E20  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  8745  007E22  0E00               	movlw	0
  8746  007E24  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  8747  007E26  5014               	movf	___lldiv@divisor^0,w,c
  8748  007E28  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  8749  007E2A  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  8750  007E2C  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  8751  007E2E  B4D8               	btfsc	status,2,c
  8752  007E30  D02A               	goto	l3736
  8753  007E32  0E01               	movlw	1
  8754  007E34  6E1C               	movwf	___lldiv@counter^0,c
  8755  007E36  D006               	goto	l14112
  8756  007E38                     l14110:
  8757  007E38  90D8               	bcf	status,0,c
  8758  007E3A  3614               	rlcf	___lldiv@divisor^0,f,c
  8759  007E3C  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  8760  007E3E  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  8761  007E40  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  8762  007E42  2A1C               	incf	___lldiv@counter^0,f,c
  8763  007E44                     l14112:
  8764  007E44  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  8765  007E46  D7F8               	goto	l14110
  8766  007E48                     u13940:
  8767  007E48  90D8               	bcf	status,0,c
  8768  007E4A  3618               	rlcf	___lldiv@quotient^0,f,c
  8769  007E4C  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  8770  007E4E  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  8771  007E50  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  8772  007E52  5014               	movf	___lldiv@divisor^0,w,c
  8773  007E54  5C10               	subwf	___lldiv@dividend^0,w,c
  8774  007E56  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8775  007E58  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  8776  007E5A  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8777  007E5C  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  8778  007E5E  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8779  007E60  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  8780  007E62  A0D8               	btfss	status,0,c
  8781  007E64  D009               	goto	l14122
  8782  007E66  5014               	movf	___lldiv@divisor^0,w,c
  8783  007E68  5E10               	subwf	___lldiv@dividend^0,f,c
  8784  007E6A  5015               	movf	(___lldiv@divisor+1)^0,w,c
  8785  007E6C  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  8786  007E6E  5016               	movf	(___lldiv@divisor+2)^0,w,c
  8787  007E70  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  8788  007E72  5017               	movf	(___lldiv@divisor+3)^0,w,c
  8789  007E74  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  8790  007E76  8018               	bsf	___lldiv@quotient^0,0,c
  8791  007E78                     l14122:
  8792  007E78  90D8               	bcf	status,0,c
  8793  007E7A  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  8794  007E7C  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  8795  007E7E  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  8796  007E80  3214               	rrcf	___lldiv@divisor^0,f,c
  8797  007E82  2E1C               	decfsz	___lldiv@counter^0,f,c
  8798  007E84  D7E1               	goto	u13940
  8799  007E86                     l3736:
  8800  007E86  C018  F010         	movff	___lldiv@quotient,?___lldiv
  8801  007E8A  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  8802  007E8E  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  8803  007E92  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  8804  007E96  0012               	return		;funcret
  8805  007E98                     __end_of___lldiv:
  8806                           	callstack 0
  8807                           
  8808 ;; *************** function _sm_execute_ControlGate *****************
  8809 ;; Defined at:
  8810 ;;		line 128 in file "sm_ControlGate_MC50.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;  psm             2   15[BANK0 ] PTR struct .
  8813 ;;		 -> controlGate_stateMachine(11), 
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;  typeOpenOrde    1   19[BANK0 ] enum E10372
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  1    wreg      void 
  8818 ;; Registers used:
  8819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8820 ;; Tracked objects:
  8821 ;;		On entry : 3F/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8825 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8828 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8829 ;;Total ram usage:        5 bytes
  8830 ;; Hardware stack levels used: 1
  8831 ;; Hardware stack levels required when called: 15
  8832 ;; This function calls:
  8833 ;;		_GetOpenOrder
  8834 ;;		_SetSegmentValueIntermitent
  8835 ;;		_WaitPreFlash
  8836 ;;		_actionZone_Closed
  8837 ;;		_actionZone_Closing
  8838 ;;		_actionZone_Opened
  8839 ;;		_actionZone_Opening
  8840 ;;		_sm_execute_ControlLearning
  8841 ;;		_sm_send_event
  8842 ;; This function is called by:
  8843 ;;		_main
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text17
  8848  003B26                     __ptext17:
  8849                           	callstack 0
  8850  003B26                     _sm_execute_ControlGate:
  8851                           	callstack 15
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;sm_ControlGate_MC50.c: 129:     TypeCMD typeOpenOrder;;sm_ControlGate_MC50.c: 133:     
      +                          if ( (main_stateMachine.current_state == st_MenuConfiguration) && (menuConfiguration_sta
      +                          teMachine.current_state != st_LearningMode) )
  8855                           
  8856                           ;incstack = 0
  8857  003B26  0101               	movlb	1	; () banked
  8858  003B28  05EE               	decf	_main_stateMachine& (0+255),w,b
  8859  003B2A  11EF               	iorwf	(_main_stateMachine+1)& (0+255),w,b
  8860  003B2C  A4D8               	btfss	status,2,c
  8861  003B2E  D006               	goto	l23738
  8862                           
  8863                           ; BSR set to: 1
  8864  003B30  0E06               	movlw	6
  8865  003B32  0102               	movlb	2	; () banked
  8866  003B34  19BF               	xorwf	_menuConfiguration_stateMachine& (0+255),w,b
  8867  003B36  11C0               	iorwf	(_menuConfiguration_stateMachine+1)& (0+255),w,b
  8868  003B38  A4D8               	btfss	status,2,c
  8869  003B3A  0012               	return	
  8870  003B3C                     l23738:
  8871                           
  8872                           ;sm_ControlGate_MC50.c: 137:         if (var_sys.preflashingcontrol == YES){
  8873  003B3C  0101               	movlb	1	; () banked
  8874  003B3E  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
  8875  003B40  A4D8               	btfss	status,2,c
  8876  003B42  D0CE               	goto	l23812
  8877                           
  8878                           ; BSR set to: 1
  8879                           ;sm_ControlGate_MC50.c: 139:         WaitPreFlash();
  8880  003B44  EC33  F041         	call	_WaitPreFlash	;wreg free
  8881  003B48  D0CB               	goto	l23812
  8882  003B4A                     l23742:
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;sm_ControlGate_MC50.c: 145:         {;sm_ControlGate_MC50.c: 148:             if (psm->
      +                          last_event == ev_GateClosed) {
  8886  003B4A  EE20 F004          	lfsr	2,4
  8887  003B4E  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8888  003B50  26D9               	addwf	fsr2l,f,c
  8889  003B52  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8890  003B54  22DA               	addwfc	fsr2h,f,c
  8891  003B56  0E0A               	movlw	10
  8892  003B58  18DE               	xorwf	postinc2,w,c
  8893  003B5A  10DE               	iorwf	postinc2,w,c
  8894  003B5C  A4D8               	btfss	status,2,c
  8895  003B5E  D006               	goto	l23746
  8896  003B60                     u29300:
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;sm_ControlGate_MC50.c: 149:                 psm->current_state = st_Closed;
  8900  003B60  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8901  003B64  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8902  003B68  0E01               	movlw	1
  8903  003B6A  D0B5               	goto	L55
  8904  003B6C                     l23746:
  8905                           
  8906                           ; BSR set to: 0
  8907  003B6C  EE20 F004          	lfsr	2,4
  8908  003B70  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8909  003B72  26D9               	addwf	fsr2l,f,c
  8910  003B74  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8911  003B76  22DA               	addwfc	fsr2h,f,c
  8912  003B78  0E0B               	movlw	11
  8913  003B7A  18DE               	xorwf	postinc2,w,c
  8914  003B7C  10DE               	iorwf	postinc2,w,c
  8915  003B7E  A4D8               	btfss	status,2,c
  8916  003B80  D0CF               	goto	l23814
  8917  003B82  D038               	goto	u29370
  8918  003B84                     l23750:
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;sm_ControlGate_MC50.c: 160:         {;sm_ControlGate_MC50.c: 161:             if (psm->
      +                          last_event == ev_OpenGate) {
  8922  003B84  EE20 F004          	lfsr	2,4
  8923  003B88  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8924  003B8A  26D9               	addwf	fsr2l,f,c
  8925  003B8C  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8926  003B8E  22DA               	addwfc	fsr2h,f,c
  8927  003B90  0E0C               	movlw	12
  8928  003B92  18DE               	xorwf	postinc2,w,c
  8929  003B94  10DE               	iorwf	postinc2,w,c
  8930  003B96  A4D8               	btfss	status,2,c
  8931  003B98  D072               	goto	l23798
  8932  003B9A                     u29320:
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;sm_ControlGate_MC50.c: 162:                 psm->current_state = st_Opening;
  8936  003B9A  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8937  003B9E  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8938  003BA2  0E02               	movlw	2
  8939  003BA4  D098               	goto	L55
  8940  003BA6                     l23758:
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;sm_ControlGate_MC50.c: 169:         {;sm_ControlGate_MC50.c: 170:             if (psm->
      +                          last_event == ev_StopGate) {
  8944  003BA6  EE20 F004          	lfsr	2,4
  8945  003BAA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8946  003BAC  26D9               	addwf	fsr2l,f,c
  8947  003BAE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8948  003BB0  22DA               	addwfc	fsr2h,f,c
  8949  003BB2  0E0D               	movlw	13
  8950  003BB4  18DE               	xorwf	postinc2,w,c
  8951  003BB6  10DE               	iorwf	postinc2,w,c
  8952  003BB8  B4D8               	btfsc	status,2,c
  8953  003BBA  D01C               	goto	u29370
  8954                           
  8955                           ; BSR set to: 0
  8956                           
  8957                           ;sm_ControlGate_MC50.c: 172:             } else if (psm->last_event == ev_CloseGate) {
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;sm_ControlGate_MC50.c: 171:                 psm->current_state = st_Opened;
  8961  003BBC  EE20 F004          	lfsr	2,4
  8962  003BC0  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8963  003BC2  26D9               	addwf	fsr2l,f,c
  8964  003BC4  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8965  003BC6  22DA               	addwfc	fsr2h,f,c
  8966  003BC8  0E0E               	movlw	14
  8967  003BCA  18DE               	xorwf	postinc2,w,c
  8968  003BCC  10DE               	iorwf	postinc2,w,c
  8969  003BCE  A4D8               	btfss	status,2,c
  8970  003BD0  D02D               	goto	L129
  8971  003BD2                     u29350:
  8972                           
  8973                           ; BSR set to: 0
  8974                           ;sm_ControlGate_MC50.c: 173:                 psm->current_state = st_Closing;
  8975  003BD2  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8976  003BD6  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8977  003BDA  0E03               	movlw	3
  8978  003BDC  D07C               	goto	L55
  8979  003BDE                     l23770:
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;sm_ControlGate_MC50.c: 180:         {;sm_ControlGate_MC50.c: 181:             if (psm->
      +                          last_event == ev_StopGate) {
  8983  003BDE  EE20 F004          	lfsr	2,4
  8984  003BE2  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  8985  003BE4  26D9               	addwf	fsr2l,f,c
  8986  003BE6  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  8987  003BE8  22DA               	addwfc	fsr2h,f,c
  8988  003BEA  0E0D               	movlw	13
  8989  003BEC  18DE               	xorwf	postinc2,w,c
  8990  003BEE  10DE               	iorwf	postinc2,w,c
  8991  003BF0  A4D8               	btfss	status,2,c
  8992  003BF2  D006               	goto	l23774
  8993  003BF4                     u29370:
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;sm_ControlGate_MC50.c: 182:                 psm->current_state = st_Opened;
  8997  003BF4  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  8998  003BF8  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  8999  003BFC  0E04               	movlw	4
  9000  003BFE  D06B               	goto	L55
  9001  003C00                     l23774:
  9002                           
  9003                           ; BSR set to: 0
  9004  003C00  EE20 F004          	lfsr	2,4
  9005  003C04  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9006  003C06  26D9               	addwf	fsr2l,f,c
  9007  003C08  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9008  003C0A  22DA               	addwfc	fsr2h,f,c
  9009  003C0C  0E0F               	movlw	15
  9010  003C0E  18DE               	xorwf	postinc2,w,c
  9011  003C10  10DE               	iorwf	postinc2,w,c
  9012  003C12  B4D8               	btfsc	status,2,c
  9013  003C14  D7A5               	goto	u29300
  9014                           
  9015                           ; BSR set to: 0
  9016                           
  9017                           ;sm_ControlGate_MC50.c: 185:             } else if (psm->last_event == ev_OpenGate) {
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;sm_ControlGate_MC50.c: 184:                 psm->current_state = st_Closed;
  9021  003C16  EE20 F004          	lfsr	2,4
  9022  003C1A  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9023  003C1C  26D9               	addwf	fsr2l,f,c
  9024  003C1E  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9025  003C20  22DA               	addwfc	fsr2h,f,c
  9026  003C22  0E0C               	movlw	12
  9027  003C24  18DE               	xorwf	postinc2,w,c
  9028  003C26  10DE               	iorwf	postinc2,w,c
  9029  003C28  B4D8               	btfsc	status,2,c
  9030  003C2A  D7B7               	goto	u29320
  9031  003C2C                     L129:
  9032                           
  9033                           ; BSR set to: 0
  9034                           
  9035                           ;sm_ControlGate_MC50.c: 187:             } else if (psm->last_event == ev_ErrorGate) {
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;sm_ControlGate_MC50.c: 186:                 psm->current_state = st_Opening;
  9039  003C2C  EE20 F004          	lfsr	2,4
  9040  003C30  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9041  003C32  26D9               	addwf	fsr2l,f,c
  9042  003C34  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9043  003C36  22DA               	addwfc	fsr2h,f,c
  9044  003C38  0E10               	movlw	16
  9045  003C3A  D044               	goto	L126
  9046  003C3C                     l23786:
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;sm_ControlGate_MC50.c: 193:         {;sm_ControlGate_MC50.c: 194:             if (psm->
      +                          last_event == ev_CloseGate) {
  9050  003C3C  EE20 F004          	lfsr	2,4
  9051  003C40  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9052  003C42  26D9               	addwf	fsr2l,f,c
  9053  003C44  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9054  003C46  22DA               	addwfc	fsr2h,f,c
  9055  003C48  0E0E               	movlw	14
  9056  003C4A  18DE               	xorwf	postinc2,w,c
  9057  003C4C  10DE               	iorwf	postinc2,w,c
  9058  003C4E  B4D8               	btfsc	status,2,c
  9059  003C50  D7C0               	goto	u29350
  9060                           
  9061                           ; BSR set to: 0
  9062                           
  9063                           ;sm_ControlGate_MC50.c: 196:             } else if (psm->last_event == ev_OpenGate) {
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;sm_ControlGate_MC50.c: 195:                 psm->current_state = st_Closing;
  9067  003C52  EE20 F004          	lfsr	2,4
  9068  003C56  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9069  003C58  26D9               	addwf	fsr2l,f,c
  9070  003C5A  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9071  003C5C  22DA               	addwfc	fsr2h,f,c
  9072  003C5E  0E0C               	movlw	12
  9073  003C60  18DE               	xorwf	postinc2,w,c
  9074  003C62  10DE               	iorwf	postinc2,w,c
  9075  003C64  B4D8               	btfsc	status,2,c
  9076  003C66  D799               	goto	u29320
  9077                           
  9078                           ; BSR set to: 0
  9079                           
  9080                           ;sm_ControlGate_MC50.c: 198:             } else if (psm->last_event == ev_ErrorGate) {
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;sm_ControlGate_MC50.c: 197:                 psm->current_state = st_Opening;
  9084  003C68  EE20 F004          	lfsr	2,4
  9085  003C6C  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9086  003C6E  26D9               	addwf	fsr2l,f,c
  9087  003C70  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9088  003C72  22DA               	addwfc	fsr2h,f,c
  9089  003C74  0E10               	movlw	16
  9090  003C76  18DE               	xorwf	postinc2,w,c
  9091  003C78  10DE               	iorwf	postinc2,w,c
  9092  003C7A  B4D8               	btfsc	status,2,c
  9093  003C7C  D027               	goto	L127
  9094  003C7E                     l23798:
  9095                           
  9096                           ; BSR set to: 0
  9097  003C7E  EE20 F004          	lfsr	2,4
  9098  003C82  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9099  003C84  26D9               	addwf	fsr2l,f,c
  9100  003C86  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9101  003C88  22DA               	addwfc	fsr2h,f,c
  9102  003C8A  0E14               	movlw	20
  9103  003C8C  18DE               	xorwf	postinc2,w,c
  9104  003C8E  10DE               	iorwf	postinc2,w,c
  9105  003C90  A4D8               	btfss	status,2,c
  9106  003C92  D046               	goto	l23814
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;sm_ControlGate_MC50.c: 205:                 psm->current_state = st_Learning;
  9110  003C94  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9111  003C98  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9112  003C9C  0E05               	movlw	5
  9113  003C9E  D01B               	goto	L55
  9114  003CA0                     l23802:
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;sm_ControlGate_MC50.c: 217:         {;sm_ControlGate_MC50.c: 218:             if (psm->
      +                          last_event == ev_LearningComplete) {
  9118  003CA0  EE20 F004          	lfsr	2,4
  9119  003CA4  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9120  003CA6  26D9               	addwf	fsr2l,f,c
  9121  003CA8  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9122  003CAA  22DA               	addwfc	fsr2h,f,c
  9123  003CAC  0E13               	movlw	19
  9124  003CAE  18DE               	xorwf	postinc2,w,c
  9125  003CB0  10DE               	iorwf	postinc2,w,c
  9126  003CB2  B4D8               	btfsc	status,2,c
  9127  003CB4  D755               	goto	u29300
  9128                           
  9129                           ; BSR set to: 0
  9130                           
  9131                           ;sm_ControlGate_MC50.c: 220:             } else if (psm->last_event == ev_ErrorLearning)
      +                           {
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;sm_ControlGate_MC50.c: 219:                 psm->current_state = st_Closed;
  9135  003CB6  EE20 F004          	lfsr	2,4
  9136  003CBA  51E7               	movf	sm_execute_ControlGate@psm& (0+255),w,b
  9137  003CBC  26D9               	addwf	fsr2l,f,c
  9138  003CBE  51E8               	movf	(sm_execute_ControlGate@psm+1)& (0+255),w,b
  9139  003CC0  22DA               	addwfc	fsr2h,f,c
  9140  003CC2  0E12               	movlw	18
  9141  003CC4                     L126:
  9142  003CC4  18DE               	xorwf	postinc2,w,c
  9143  003CC6  10DE               	iorwf	postinc2,w,c
  9144  003CC8  A4D8               	btfss	status,2,c
  9145  003CCA  D02A               	goto	l23814
  9146  003CCC                     L127:
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;sm_ControlGate_MC50.c: 221:                 psm->current_state = st_Idle;
  9150  003CCC  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9151  003CD0  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9152  003CD4  0E00               	movlw	0
  9153  003CD6                     L55:
  9154  003CD6  6EDE               	movwf	postinc2,c
  9155  003CD8  0E00               	movlw	0
  9156  003CDA  6EDD               	movwf	postdec2,c
  9157  003CDC  D021               	goto	l23814
  9158  003CDE                     l2648:
  9159                           
  9160                           ; BSR set to: 0
  9161  003CDE  D7FF               	goto	l2648
  9162  003CE0                     l23812:
  9163                           
  9164                           ; BSR set to: 1
  9165  003CE0  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9166  003CE4  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9167  003CE8  50DF               	movf	indf2,w,c
  9168  003CEA  0100               	movlb	0	; () banked
  9169  003CEC  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9170  003CEE  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9171                           
  9172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9173                           ; Switch size 1, requested type "simple"
  9174                           ; Number of cases is 1, Range of values is 0 to 0
  9175                           ; switch strategies available:
  9176                           ; Name         Instructions Cycles
  9177                           ; simple_byte            4     3 (average)
  9178                           ;	Chosen strategy is simple_byte
  9179  003CF0  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9180  003CF2  0A00               	xorlw	0	; case 0
  9181  003CF4  A4D8               	btfss	status,2,c
  9182  003CF6  D7F3               	goto	l2648
  9183                           
  9184                           ; BSR set to: 0
  9185                           ; Switch size 1, requested type "simple"
  9186                           ; Number of cases is 6, Range of values is 0 to 5
  9187                           ; switch strategies available:
  9188                           ; Name         Instructions Cycles
  9189                           ; simple_byte           19    10 (average)
  9190                           ;	Chosen strategy is simple_byte
  9191  003CF8  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9192  003CFA  0A00               	xorlw	0	; case 0
  9193  003CFC  B4D8               	btfsc	status,2,c
  9194  003CFE  D725               	goto	l23742
  9195  003D00  0A01               	xorlw	1	; case 1
  9196  003D02  B4D8               	btfsc	status,2,c
  9197  003D04  D73F               	goto	l23750
  9198  003D06  0A03               	xorlw	3	; case 2
  9199  003D08  B4D8               	btfsc	status,2,c
  9200  003D0A  D74D               	goto	l23758
  9201  003D0C  0A01               	xorlw	1	; case 3
  9202  003D0E  B4D8               	btfsc	status,2,c
  9203  003D10  D766               	goto	l23770
  9204  003D12  0A07               	xorlw	7	; case 4
  9205  003D14  B4D8               	btfsc	status,2,c
  9206  003D16  D792               	goto	l23786
  9207  003D18  0A01               	xorlw	1	; case 5
  9208  003D1A  B4D8               	btfsc	status,2,c
  9209  003D1C  D7C1               	goto	l23802
  9210  003D1E  D7DF               	goto	l2648
  9211  003D20                     l23814:
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;sm_ControlGate_MC50.c: 234:     sm_send_event(&controlGate_stateMachine, ev_NULL);
  9215  003D20  0EE3               	movlw	low _controlGate_stateMachine
  9216  003D22  6E12               	movwf	sm_send_event@psm^0,c
  9217  003D24  0E01               	movlw	high _controlGate_stateMachine
  9218  003D26  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9219  003D28  0E00               	movlw	0
  9220  003D2A  6E15               	movwf	(sm_send_event@event+1)^0,c
  9221  003D2C  0E00               	movlw	0
  9222  003D2E  6E14               	movwf	sm_send_event@event^0,c
  9223  003D30  EC0E  F043         	call	_sm_send_event	;wreg free
  9224                           
  9225                           ;sm_ControlGate_MC50.c: 239:     switch ((sm_state_ControlGate_t) psm->current_state) {
  9226  003D34  D07D               	goto	l23878
  9227  003D36                     l23816:
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;sm_ControlGate_MC50.c: 241:         {;sm_ControlGate_MC50.c: 244:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (5 * (1000/50));
  9231  003D36  0E00               	movlw	0
  9232  003D38  0101               	movlb	1	; () banked
  9233  003D3A  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9234  003D3C  0E64               	movlw	100
  9235  003D3E  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9236                           
  9237                           ;sm_ControlGate_MC50.c: 247:             var_sys.PositionIsLost = YES;
  9238  003D40  0E01               	movlw	1
  9239  003D42  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9240                           
  9241                           ; BSR set to: 1
  9242                           ;sm_ControlGate_MC50.c: 248:             if (var_sys.WorkTimeMaxAlarmState == EmAlarme |
      +                          | var_sys.NumberOffErrors > 3)
  9243  003D44  0E02               	movlw	2
  9244  003D46  1942               	xorwf	(_var_sys+66)& (0+255),w,b	;volatile
  9245  003D48  B4D8               	btfsc	status,2,c
  9246  003D4A  D003               	goto	u29480
  9247                           
  9248                           ; BSR set to: 1
  9249  003D4C  0E03               	movlw	3
  9250  003D4E  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
  9251  003D50  D027               	goto	l23838
  9252  003D52                     u29480:
  9253                           
  9254                           ; BSR set to: 1
  9255                           ;sm_ControlGate_MC50.c: 249:             {;sm_ControlGate_MC50.c: 252:                 t
      +                          ypeOpenOrder = GetOpenOrder();
  9256  003D52  EC15  F02B         	call	_GetOpenOrder	;wreg free
  9257  003D56  0100               	movlb	0	; () banked
  9258  003D58  6FEB               	movwf	sm_execute_ControlGate@typeOpenOrder& (0+255),b
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;sm_ControlGate_MC50.c: 253:                 SetSegmentValueIntermitent(dE,dr, (1000/50)
      +                          );
  9262  003D5A  0E14               	movlw	20
  9263  003D5C  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9264  003D5E  0E00               	movlw	0
  9265  003D60  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9266  003D62  0E14               	movlw	20
  9267  003D64  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9268  003D66  0E0E               	movlw	14
  9269  003D68  ECAD  F047         	call	_SetSegmentValueIntermitent
  9270                           
  9271                           ; BSR set to: 1
  9272                           ;sm_ControlGate_MC50.c: 254:                 ts_system.timeSinalizationDigit = ( 500/50)
      +                          ;
  9273  003D6C  0E00               	movlw	0
  9274  003D6E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9275  003D70  0E0A               	movlw	10
  9276  003D72  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9277                           
  9278                           ; BSR set to: 1
  9279                           ;sm_ControlGate_MC50.c: 255:                 if ((typeOpenOrder != NoCMD) ||(button_stru
      +                          ct.current==0 || button_struct.current==0x00 ||button_struct.current==0x17 ))
  9280  003D74  0100               	movlb	0	; () banked
  9281  003D76  51EB               	movf	sm_execute_ControlGate@typeOpenOrder& (0+255),w,b
  9282  003D78  A4D8               	btfss	status,2,c
  9283  003D7A  D00A               	goto	u29520
  9284                           
  9285                           ; BSR set to: 0
  9286  003D7C  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9287  003D7E  B4D8               	btfsc	status,2,c
  9288  003D80  D007               	goto	u29520
  9289                           
  9290                           ; BSR set to: 0
  9291  003D82  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9292  003D84  B4D8               	btfsc	status,2,c
  9293  003D86  D004               	goto	u29520
  9294                           
  9295                           ; BSR set to: 0
  9296  003D88  0E17               	movlw	23
  9297  003D8A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
  9298  003D8C  A4D8               	btfss	status,2,c
  9299  003D8E  0012               	return	
  9300  003D90                     u29520:
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;sm_ControlGate_MC50.c: 256:                 {;sm_ControlGate_MC50.c: 257:              
      +                                 var_sys.WorkTimeMaxAlarmState = Clear;
  9304  003D90  0E00               	movlw	0
  9305  003D92  0101               	movlb	1	; () banked
  9306  003D94  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
  9307                           
  9308                           ;sm_ControlGate_MC50.c: 258:                     var_sys.NumberOffErrors = 0;
  9309  003D96  0E00               	movlw	0
  9310  003D98  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9311                           
  9312                           ;sm_ControlGate_MC50.c: 259:                     button_struct.processed=1;
  9313  003D9A  0E01               	movlw	1
  9314  003D9C  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
  9315  003D9E  0012               	return	
  9316  003DA0                     l23838:
  9317                           
  9318                           ; BSR set to: 1
  9319                           ;sm_ControlGate_MC50.c: 264:             {;sm_ControlGate_MC50.c: 267:                  
      +                             var_sys.Statedoorcontrol = st_Closed;
  9320  003DA0  0E01               	movlw	1
  9321  003DA2  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
  9322                           
  9323                           ; BSR set to: 1
  9324                           ;sm_ControlGate_MC50.c: 268:                     var_sys.actualCounterMoves++;
  9325  003DA4  0E01               	movlw	1
  9326  003DA6  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
  9327  003DA8  0E00               	movlw	0
  9328  003DAA  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
  9329  003DAC  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
  9330  003DAE  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
  9331                           
  9332                           ; BSR set to: 1
  9333                           ;sm_ControlGate_MC50.c: 269:                     var_sys.Timewalkisactived = 0;
  9334  003DB0  0E00               	movlw	0
  9335  003DB2  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
  9336                           
  9337                           ; BSR set to: 1
  9338                           ;sm_ControlGate_MC50.c: 270:                     var_sys.PositionActual = 0;
  9339  003DB4  0E00               	movlw	0
  9340  003DB6  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
  9341  003DB8  0E00               	movlw	0
  9342  003DBA  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
  9343  003DBC  0E00               	movlw	0
  9344  003DBE  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
  9345  003DC0  0E00               	movlw	0
  9346  003DC2  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
  9347                           
  9348                           ; BSR set to: 1
  9349                           ;sm_ControlGate_MC50.c: 272:                     var_sys.PositionIsLost = NO;
  9350  003DC4  0E00               	movlw	0
  9351  003DC6  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
  9352                           
  9353                           ; BSR set to: 1
  9354                           ;sm_ControlGate_MC50.c: 273:                     var_sys.NumberOffErrors = 0;
  9355  003DC8  0E00               	movlw	0
  9356  003DCA  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
  9357                           
  9358                           ; BSR set to: 1
  9359                           ;sm_ControlGate_MC50.c: 274:                     var_sys.StateMotor = Stopped;
  9360  003DCC  0E00               	movlw	0
  9361  003DCE  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9362                           
  9363                           ; BSR set to: 1
  9364                           ;sm_ControlGate_MC50.c: 276:                     ts_system.timeSinalizationDigit = (1000
      +                          /50) * 2;
  9365  003DD0  0E00               	movlw	0
  9366  003DD2  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
  9367  003DD4  0E28               	movlw	40
  9368  003DD6  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
  9369                           
  9370                           ; BSR set to: 1
  9371                           ;sm_ControlGate_MC50.c: 277:                     SetSegmentValueIntermitent(dF, dC, ( 20
      +                          0/50));
  9372  003DD8  0E0C               	movlw	12
  9373  003DDA  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
  9374  003DDC  0E00               	movlw	0
  9375  003DDE  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
  9376  003DE0  0E04               	movlw	4
  9377  003DE2  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
  9378  003DE4  0E0F               	movlw	15
  9379  003DE6  ECAD  F047         	call	_SetSegmentValueIntermitent
  9380                           
  9381                           ; BSR set to: 1
  9382                           ;sm_ControlGate_MC50.c: 278:                     sm_send_event(&controlGate_stateMachine
      +                          , ev_GateClosed);
  9383  003DEA  0EE3               	movlw	low _controlGate_stateMachine
  9384  003DEC  6E12               	movwf	sm_send_event@psm^0,c
  9385  003DEE  0E01               	movlw	high _controlGate_stateMachine
  9386  003DF0  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9387  003DF2  0E00               	movlw	0
  9388  003DF4  6E15               	movwf	(sm_send_event@event+1)^0,c
  9389  003DF6  0E0A               	movlw	10
  9390  003DF8  6E14               	movwf	sm_send_event@event^0,c
  9391  003DFA  EC0E  F043         	call	_sm_send_event	;wreg free
  9392  003DFE  0012               	return	
  9393  003E00                     l23858:
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;sm_ControlGate_MC50.c: 285:         {;sm_ControlGate_MC50.c: 287:             actionZon
      +                          e_Closed();
  9397  003E00  EC08  F03B         	call	_actionZone_Closed	;wreg free
  9398                           
  9399                           ;sm_ControlGate_MC50.c: 288:         };sm_ControlGate_MC50.c: 289:             break;
  9400  003E04  0012               	return	
  9401  003E06                     l23860:
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;sm_ControlGate_MC50.c: 291:         {;sm_ControlGate_MC50.c: 293:             actionZon
      +                          e_Opening();
  9405  003E06  ECC6  F024         	call	_actionZone_Opening	;wreg free
  9406  003E0A                     l23862:
  9407                           
  9408                           ;sm_ControlGate_MC50.c: 295:             ts_system.TimeStopADCZeroOffsetCalc = (5 * (100
      +                          0/50));
  9409  003E0A  0E00               	movlw	0
  9410  003E0C  0101               	movlb	1	; () banked
  9411  003E0E  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
  9412  003E10  0E64               	movlw	100
  9413  003E12  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
  9414                           
  9415                           ;sm_ControlGate_MC50.c: 296:         };sm_ControlGate_MC50.c: 297:             break;
  9416  003E14  0012               	return	
  9417  003E16                     l23864:
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;sm_ControlGate_MC50.c: 299:         {;sm_ControlGate_MC50.c: 301:             actionZon
      +                          e_Opened();
  9421  003E16  EC35  F029         	call	_actionZone_Opened	;wreg free
  9422  003E1A  D7F7               	goto	l23862
  9423  003E1C                     l23868:
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;sm_ControlGate_MC50.c: 307:         {;sm_ControlGate_MC50.c: 309:             actionZon
      +                          e_Closing();
  9427  003E1C  EC45  F022         	call	_actionZone_Closing	;wreg free
  9428  003E20  D7F4               	goto	l23862
  9429  003E22                     l23872:
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;sm_ControlGate_MC50.c: 315:         {;sm_ControlGate_MC50.c: 316:             sm_execut
      +                          e_ControlLearning(&controlLearning_stateMachine);
  9433  003E22  0EB4               	movlw	low _controlLearning_stateMachine
  9434  003E24  6FDC               	movwf	sm_execute_ControlLearning@psm& (0+255),b
  9435  003E26  0E02               	movlw	high _controlLearning_stateMachine
  9436  003E28  6FDD               	movwf	(sm_execute_ControlLearning@psm+1)& (0+255),b
  9437  003E2A  EC43  F00C         	call	_sm_execute_ControlLearning	;wreg free
  9438  003E2E  D7ED               	goto	l23862
  9439  003E30                     l23878:
  9440  003E30  C0E7  FFD9         	movff	sm_execute_ControlGate@psm,fsr2l
  9441  003E34  C0E8  FFDA         	movff	sm_execute_ControlGate@psm+1,fsr2h
  9442  003E38  50DF               	movf	indf2,w,c
  9443  003E3A  0100               	movlb	0	; () banked
  9444  003E3C  6FE9               	movwf	??_sm_execute_ControlGate& (0+255),b
  9445  003E3E  6BEA               	clrf	(??_sm_execute_ControlGate+1)& (0+255),b
  9446                           
  9447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9448                           ; Switch size 1, requested type "simple"
  9449                           ; Number of cases is 1, Range of values is 0 to 0
  9450                           ; switch strategies available:
  9451                           ; Name         Instructions Cycles
  9452                           ; simple_byte            4     3 (average)
  9453                           ;	Chosen strategy is simple_byte
  9454  003E40  51EA               	movf	(??_sm_execute_ControlGate+1)& (0+255),w,b
  9455  003E42  0A00               	xorlw	0	; case 0
  9456  003E44  A4D8               	btfss	status,2,c
  9457  003E46  0012               	return	
  9458                           
  9459                           ; BSR set to: 0
  9460                           ; Switch size 1, requested type "simple"
  9461                           ; Number of cases is 6, Range of values is 0 to 5
  9462                           ; switch strategies available:
  9463                           ; Name         Instructions Cycles
  9464                           ; simple_byte           19    10 (average)
  9465                           ;	Chosen strategy is simple_byte
  9466  003E48  51E9               	movf	??_sm_execute_ControlGate& (0+255),w,b
  9467  003E4A  0A00               	xorlw	0	; case 0
  9468  003E4C  B4D8               	btfsc	status,2,c
  9469  003E4E  D773               	goto	l23816
  9470  003E50  0A01               	xorlw	1	; case 1
  9471  003E52  B4D8               	btfsc	status,2,c
  9472  003E54  D7D5               	goto	l23858
  9473  003E56  0A03               	xorlw	3	; case 2
  9474  003E58  B4D8               	btfsc	status,2,c
  9475  003E5A  D7D5               	goto	l23860
  9476  003E5C  0A01               	xorlw	1	; case 3
  9477  003E5E  B4D8               	btfsc	status,2,c
  9478  003E60  D7DD               	goto	l23868
  9479  003E62  0A07               	xorlw	7	; case 4
  9480  003E64  B4D8               	btfsc	status,2,c
  9481  003E66  D7D7               	goto	l23864
  9482  003E68  0A01               	xorlw	1	; case 5
  9483  003E6A  A4D8               	btfss	status,2,c
  9484  003E6C  0012               	return	
  9485  003E6E  D7D9               	goto	l23872
  9486  003E70                     __end_of_sm_execute_ControlGate:
  9487                           	callstack 0
  9488                           
  9489 ;; *************** function _sm_execute_ControlLearning *****************
  9490 ;; Defined at:
  9491 ;;		line 29 in file "sm_ControlLearning_MC50.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  psm             2    4[BANK0 ] PTR struct .
  9494 ;;		 -> controlLearning_stateMachine(11), 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  typeOpenOrde    1   57[COMRAM] enum E10372
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 3F/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9509 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9510 ;;Total ram usage:        5 bytes
  9511 ;; Hardware stack levels used: 1
  9512 ;; Hardware stack levels required when called: 14
  9513 ;; This function calls:
  9514 ;;		_GetOpenOrder
  9515 ;;		_SaveNVM_VarSystem
  9516 ;;		_calculateMean
  9517 ;;		_clearLearningValue
  9518 ;;		_generateErrorLearnig
  9519 ;;		_sm_send_event
  9520 ;; This function is called by:
  9521 ;;		_sm_execute_ControlGate
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text18
  9526  001886                     __ptext18:
  9527                           	callstack 0
  9528  001886                     _sm_execute_ControlLearning:
  9529                           	callstack 15
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;sm_ControlLearning_MC50.c: 31:    TypeCMD typeOpenOrder = GetOpenOrder();
  9533                           
  9534                           ;incstack = 0
  9535  001886  EC15  F02B         	call	_GetOpenOrder	;wreg free
  9536  00188A  6E3A               	movwf	sm_execute_ControlLearning@typeOpenOrder^0,c
  9537                           
  9538                           ;sm_ControlLearning_MC50.c: 33:     switch((sm_state_ControlLearning_t) psm->current_sta
      +                          te)
  9539  00188C  D0B8               	goto	l22362
  9540  00188E                     l22288:
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;sm_ControlLearning_MC50.c: 36:         {;sm_ControlLearning_MC50.c: 37:              if
      +                          ((psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0)&& (var_sys.p
      +                          rograminAutomatic == 0))
  9544  00188E  EE20 F004          	lfsr	2,4
  9545  001892  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9546  001894  26D9               	addwf	fsr2l,f,c
  9547  001896  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9548  001898  22DA               	addwfc	fsr2h,f,c
  9549  00189A  0E0A               	movlw	10
  9550  00189C  18DE               	xorwf	postinc2,w,c
  9551  00189E  10DE               	iorwf	postinc2,w,c
  9552  0018A0  A4D8               	btfss	status,2,c
  9553  0018A2  D00D               	goto	l22296
  9554                           
  9555                           ; BSR set to: 0
  9556  0018A4  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9557  0018A6  B4D8               	btfsc	status,2,c
  9558  0018A8  D00A               	goto	l22296
  9559                           
  9560                           ; BSR set to: 0
  9561  0018AA  0101               	movlb	1	; () banked
  9562  0018AC  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9563  0018AE  A4D8               	btfss	status,2,c
  9564  0018B0  D006               	goto	l22296
  9565  0018B2                     u26390:
  9566                           
  9567                           ; BSR set to: 1
  9568                           ;sm_ControlLearning_MC50.c: 38:             {;sm_ControlLearning_MC50.c: 39:            
      +                               psm->current_state = st_WaitLearnigOpen;
  9569  0018B2  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9570  0018B6  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9571  0018BA  0E02               	movlw	2
  9572  0018BC  D08A               	goto	L66
  9573  0018BE                     l22296:
  9574  0018BE  0100               	movlb	0	; () banked
  9575  0018C0  EE20 F004          	lfsr	2,4
  9576  0018C4  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9577  0018C6  26D9               	addwf	fsr2l,f,c
  9578  0018C8  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9579  0018CA  22DA               	addwfc	fsr2h,f,c
  9580  0018CC  0E0A               	movlw	10
  9581  0018CE  18DE               	xorwf	postinc2,w,c
  9582  0018D0  10DE               	iorwf	postinc2,w,c
  9583  0018D2  A4D8               	btfss	status,2,c
  9584  0018D4  D00D               	goto	l22304
  9585                           
  9586                           ; BSR set to: 0
  9587  0018D6  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9588  0018D8  B4D8               	btfsc	status,2,c
  9589  0018DA  D004               	goto	u26420
  9590                           
  9591                           ; BSR set to: 0
  9592  0018DC  0101               	movlb	1	; () banked
  9593  0018DE  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9594  0018E0  A4D8               	btfss	status,2,c
  9595  0018E2  D006               	goto	l22304
  9596  0018E4                     u26420:
  9597                           
  9598                           ;sm_ControlLearning_MC50.c: 43:             {;sm_ControlLearning_MC50.c: 44:            
      +                               psm->current_state = st_WaitForOpened;
  9599  0018E4  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9600  0018E8  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9601  0018EC  0E04               	movlw	4
  9602  0018EE  D071               	goto	L66
  9603  0018F0                     l22304:
  9604  0018F0  0100               	movlb	0	; () banked
  9605  0018F2  EE20 F004          	lfsr	2,4
  9606  0018F6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9607  0018F8  26D9               	addwf	fsr2l,f,c
  9608  0018FA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9609  0018FC  22DA               	addwfc	fsr2h,f,c
  9610  0018FE  0E0B               	movlw	11
  9611  001900  18DE               	xorwf	postinc2,w,c
  9612  001902  10DE               	iorwf	postinc2,w,c
  9613  001904  A4D8               	btfss	status,2,c
  9614  001906  D09B               	goto	l22364
  9615                           
  9616                           ; BSR set to: 0
  9617                           ;sm_ControlLearning_MC50.c: 47:             {;sm_ControlLearning_MC50.c: 48:            
      +                               psm->current_state = st_WaitForClosed;
  9618  001908  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9619  00190C  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9620  001910  0E01               	movlw	1
  9621  001912  D05F               	goto	L66
  9622  001914                     l22308:
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;sm_ControlLearning_MC50.c: 53:         {;sm_ControlLearning_MC50.c: 54:             if(
      +                          (psm->last_event==ev_GateClosed)&&(var_sys_NVM.decelarationSensivity != 0) && (var_sys.p
      +                          rograminAutomatic == 0))
  9626  001914  EE20 F004          	lfsr	2,4
  9627  001918  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9628  00191A  26D9               	addwf	fsr2l,f,c
  9629  00191C  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9630  00191E  22DA               	addwfc	fsr2h,f,c
  9631  001920  0E0A               	movlw	10
  9632  001922  18DE               	xorwf	postinc2,w,c
  9633  001924  10DE               	iorwf	postinc2,w,c
  9634  001926  A4D8               	btfss	status,2,c
  9635  001928  D007               	goto	l22316
  9636                           
  9637                           ; BSR set to: 0
  9638  00192A  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9639  00192C  B4D8               	btfsc	status,2,c
  9640  00192E  D004               	goto	l22316
  9641                           
  9642                           ; BSR set to: 0
  9643  001930  0101               	movlb	1	; () banked
  9644  001932  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9645  001934  B4D8               	btfsc	status,2,c
  9646  001936  D7BD               	goto	u26390
  9647  001938                     l22316:
  9648  001938  0100               	movlb	0	; () banked
  9649  00193A  EE20 F004          	lfsr	2,4
  9650  00193E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9651  001940  26D9               	addwf	fsr2l,f,c
  9652  001942  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9653  001944  22DA               	addwfc	fsr2h,f,c
  9654  001946  0E0A               	movlw	10
  9655  001948  18DE               	xorwf	postinc2,w,c
  9656  00194A  10DE               	iorwf	postinc2,w,c
  9657  00194C  A4D8               	btfss	status,2,c
  9658  00194E  D007               	goto	l22324
  9659                           
  9660                           ; BSR set to: 0
  9661  001950  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9662  001952  B4D8               	btfsc	status,2,c
  9663  001954  D7C7               	goto	u26420
  9664                           
  9665                           ; BSR set to: 0
  9666  001956  0101               	movlb	1	; () banked
  9667  001958  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9668  00195A  B4D8               	btfsc	status,2,c
  9669  00195C  D7C3               	goto	u26420
  9670  00195E                     l22324:
  9671  00195E  0100               	movlb	0	; () banked
  9672  001960                     L68:
  9673  001960  EE20 F004          	lfsr	2,4
  9674  001964  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9675  001966  26D9               	addwf	fsr2l,f,c
  9676  001968  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9677  00196A  22DA               	addwfc	fsr2h,f,c
  9678  00196C  0E10               	movlw	16
  9679  00196E  18DE               	xorwf	postinc2,w,c
  9680  001970  10DE               	iorwf	postinc2,w,c
  9681  001972  A4D8               	btfss	status,2,c
  9682  001974  D064               	goto	l22364
  9683  001976  D03C               	goto	L128
  9684  001978                     l22328:
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;sm_ControlLearning_MC50.c: 70:         {;sm_ControlLearning_MC50.c: 71:             if(
      +                          psm->last_event==ev_GateOpened)
  9688  001978  EE20 F004          	lfsr	2,4
  9689  00197C  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9690  00197E  26D9               	addwf	fsr2l,f,c
  9691  001980  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9692  001982  22DA               	addwfc	fsr2h,f,c
  9693  001984  0E0B               	movlw	11
  9694  001986  18DE               	xorwf	postinc2,w,c
  9695  001988  10DE               	iorwf	postinc2,w,c
  9696  00198A  A4D8               	btfss	status,2,c
  9697  00198C  D7E9               	goto	L68
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;sm_ControlLearning_MC50.c: 72:             {;sm_ControlLearning_MC50.c: 73:            
      +                               psm->current_state = st_WaitLearnigClose;
  9701  00198E  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9702  001992  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9703  001996  0E03               	movlw	3
  9704  001998  D01C               	goto	L66
  9705  00199A                     l22336:
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;sm_ControlLearning_MC50.c: 82:         {;sm_ControlLearning_MC50.c: 83:             if(
      +                          psm->last_event==ev_GateClosed)
  9709  00199A  EE20 F004          	lfsr	2,4
  9710  00199E  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9711  0019A0  26D9               	addwf	fsr2l,f,c
  9712  0019A2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9713  0019A4  22DA               	addwfc	fsr2h,f,c
  9714  0019A6  0E0A               	movlw	10
  9715  0019A8  18DE               	xorwf	postinc2,w,c
  9716  0019AA  10DE               	iorwf	postinc2,w,c
  9717  0019AC  A4D8               	btfss	status,2,c
  9718  0019AE  D7D8               	goto	L68
  9719  0019B0  D799               	goto	u26420
  9720  0019B2                     l22344:
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;sm_ControlLearning_MC50.c: 94:         {;sm_ControlLearning_MC50.c: 95:             if(
      +                          psm->last_event==ev_GateOpened)
  9724  0019B2  EE20 F004          	lfsr	2,4
  9725  0019B6  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9726  0019B8  26D9               	addwf	fsr2l,f,c
  9727  0019BA  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9728  0019BC  22DA               	addwfc	fsr2h,f,c
  9729  0019BE  0E0B               	movlw	11
  9730  0019C0  18DE               	xorwf	postinc2,w,c
  9731  0019C2  10DE               	iorwf	postinc2,w,c
  9732  0019C4  A4D8               	btfss	status,2,c
  9733  0019C6  D7CC               	goto	L68
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;sm_ControlLearning_MC50.c: 96:             {;sm_ControlLearning_MC50.c: 97:            
      +                               psm->current_state = st_WaitForEndLearn;
  9737  0019C8  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9738  0019CC  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9739  0019D0  0E05               	movlw	5
  9740  0019D2                     L66:
  9741  0019D2  6EDE               	movwf	postinc2,c
  9742  0019D4  0E00               	movlw	0
  9743  0019D6  6EDD               	movwf	postdec2,c
  9744  0019D8  D032               	goto	l22364
  9745  0019DA                     l22352:
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;sm_ControlLearning_MC50.c: 106:         {;sm_ControlLearning_MC50.c: 107:             i
      +                          f(psm->last_event==ev_GateClosed)
  9749  0019DA  EE20 F004          	lfsr	2,4
  9750  0019DE  51DC               	movf	sm_execute_ControlLearning@psm& (0+255),w,b
  9751  0019E0  26D9               	addwf	fsr2l,f,c
  9752  0019E2  51DD               	movf	(sm_execute_ControlLearning@psm+1)& (0+255),w,b
  9753  0019E4  22DA               	addwfc	fsr2h,f,c
  9754  0019E6  0E0A               	movlw	10
  9755  0019E8  18DE               	xorwf	postinc2,w,c
  9756  0019EA  10DE               	iorwf	postinc2,w,c
  9757  0019EC  A4D8               	btfss	status,2,c
  9758  0019EE  D7B8               	goto	L68
  9759  0019F0                     L128:
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;sm_ControlLearning_MC50.c: 112:             {;sm_ControlLearning_MC50.c: 113:          
      +                                 psm->current_state = st_InitLearning;
  9763  0019F0  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9764  0019F4  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9765  0019F8  0E00               	movlw	0
  9766  0019FA  D7EB               	goto	L66
  9767  0019FC                     l2907:
  9768                           
  9769                           ; BSR set to: 0
  9770  0019FC  D7FF               	goto	l2907
  9771  0019FE                     l22362:
  9772  0019FE  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
  9773  001A02  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
  9774  001A06  50DF               	movf	indf2,w,c
  9775  001A08  0100               	movlb	0	; () banked
  9776  001A0A  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
  9777  001A0C  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
  9778                           
  9779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9780                           ; Switch size 1, requested type "simple"
  9781                           ; Number of cases is 1, Range of values is 0 to 0
  9782                           ; switch strategies available:
  9783                           ; Name         Instructions Cycles
  9784                           ; simple_byte            4     3 (average)
  9785                           ;	Chosen strategy is simple_byte
  9786  001A0E  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
  9787  001A10  0A00               	xorlw	0	; case 0
  9788  001A12  A4D8               	btfss	status,2,c
  9789  001A14  D7F3               	goto	l2907
  9790                           
  9791                           ; BSR set to: 0
  9792                           ; Switch size 1, requested type "simple"
  9793                           ; Number of cases is 6, Range of values is 0 to 5
  9794                           ; switch strategies available:
  9795                           ; Name         Instructions Cycles
  9796                           ; simple_byte           19    10 (average)
  9797                           ;	Chosen strategy is simple_byte
  9798  001A16  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
  9799  001A18  0A00               	xorlw	0	; case 0
  9800  001A1A  B4D8               	btfsc	status,2,c
  9801  001A1C  D738               	goto	l22288
  9802  001A1E  0A01               	xorlw	1	; case 1
  9803  001A20  B4D8               	btfsc	status,2,c
  9804  001A22  D778               	goto	l22308
  9805  001A24  0A03               	xorlw	3	; case 2
  9806  001A26  B4D8               	btfsc	status,2,c
  9807  001A28  D7A7               	goto	l22328
  9808  001A2A  0A01               	xorlw	1	; case 3
  9809  001A2C  B4D8               	btfsc	status,2,c
  9810  001A2E  D7B5               	goto	l22336
  9811  001A30  0A07               	xorlw	7	; case 4
  9812  001A32  B4D8               	btfsc	status,2,c
  9813  001A34  D7BE               	goto	l22344
  9814  001A36  0A01               	xorlw	1	; case 5
  9815  001A38  B4D8               	btfsc	status,2,c
  9816  001A3A  D7CF               	goto	l22352
  9817  001A3C  D7DF               	goto	l2907
  9818  001A3E                     l22364:
  9819                           
  9820                           ;sm_ControlLearning_MC50.c: 126:     sm_send_event(&controlLearning_stateMachine, ev_NUL
      +                          L);
  9821  001A3E  0EB4               	movlw	low _controlLearning_stateMachine
  9822  001A40  6E12               	movwf	sm_send_event@psm^0,c
  9823  001A42  0E02               	movlw	high _controlLearning_stateMachine
  9824  001A44  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9825  001A46  0E00               	movlw	0
  9826  001A48  6E15               	movwf	(sm_send_event@event+1)^0,c
  9827  001A4A  0E00               	movlw	0
  9828  001A4C  6E14               	movwf	sm_send_event@event^0,c
  9829  001A4E  EC0E  F043         	call	_sm_send_event	;wreg free
  9830                           
  9831                           ;sm_ControlLearning_MC50.c: 131:     switch((sm_state_ControlGate_t) psm->current_state)
  9832  001A52  D280               	goto	l22620
  9833  001A54                     l22366:
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;sm_ControlLearning_MC50.c: 134:         {;sm_ControlLearning_MC50.c: 135:             i
      +                          f(var_sys.FimCurso_CloseIsEnabled==YES)
  9837  001A54  0101               	movlb	1	; () banked
  9838  001A56  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9839  001A58  A4D8               	btfss	status,2,c
  9840  001A5A  D03A               	goto	l22384
  9841                           
  9842                           ; BSR set to: 1
  9843                           ;sm_ControlLearning_MC50.c: 136:             {;sm_ControlLearning_MC50.c: 137:          
      +                                 control_limit_switch = 1;
  9844  001A5C  0E01               	movlw	1
  9845  001A5E  0100               	movlb	0	; () banked
  9846  001A60  6F81               	movwf	_control_limit_switch& (0+255),b
  9847                           
  9848                           ; BSR set to: 0
  9849                           ;sm_ControlLearning_MC50.c: 138:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
  9850  001A62  0EB4               	movlw	low _controlLearning_stateMachine
  9851  001A64  6E12               	movwf	sm_send_event@psm^0,c
  9852  001A66  0E02               	movlw	high _controlLearning_stateMachine
  9853  001A68  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9854  001A6A  0E00               	movlw	0
  9855  001A6C  6E15               	movwf	(sm_send_event@event+1)^0,c
  9856  001A6E  0E0A               	movlw	10
  9857  001A70  6E14               	movwf	sm_send_event@event^0,c
  9858  001A72  EC0E  F043         	call	_sm_send_event	;wreg free
  9859                           
  9860                           ;sm_ControlLearning_MC50.c: 139:                 var_sys.StateMotor=InOpenFull;
  9861  001A76  0E01               	movlw	1
  9862  001A78  0101               	movlb	1	; () banked
  9863  001A7A  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9864                           
  9865                           ; BSR set to: 1
  9866                           ;sm_ControlLearning_MC50.c: 140:                 clearLearningValue();
  9867  001A7C  ECCB  F03F         	call	_clearLearningValue	;wreg free
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;sm_ControlLearning_MC50.c: 141:                  if ((var_sys_NVM.decelarationSensivity
      +                           != 0) && (var_sys.programinAutomatic == 0))
  9871  001A80  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
  9872  001A82  B4D8               	btfsc	status,2,c
  9873  001A84  D016               	goto	l22382
  9874                           
  9875                           ; BSR set to: 0
  9876  001A86  0101               	movlb	1	; () banked
  9877  001A88  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
  9878  001A8A  A4D8               	btfss	status,2,c
  9879  001A8C  D012               	goto	l22382
  9880  001A8E                     u26610:
  9881                           
  9882                           ; BSR set to: 1
  9883                           ;sm_ControlLearning_MC50.c: 142:                          {;sm_ControlLearning_MC50.c: 1
      +                          43:                 ts_system.TimeLearningDecelaration=(1000/50)*15;
  9884  001A8E  0E01               	movlw	1
  9885  001A90  6FD2               	movwf	(_ts_system+55)& (0+255),b	;volatile
  9886  001A92  0E2C               	movlw	44
  9887  001A94  6FD1               	movwf	(_ts_system+54)& (0+255),b	;volatile
  9888                           
  9889                           ;sm_ControlLearning_MC50.c: 144:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*6;
  9890  001A96  0E00               	movlw	0
  9891  001A98  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
  9892  001A9A  0E78               	movlw	120
  9893  001A9C  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
  9894                           
  9895                           ;sm_ControlLearning_MC50.c: 145:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
  9896  001A9E  0E00               	movlw	0
  9897  001AA0  6FE0               	movwf	(_ts_system+69)& (0+255),b	;volatile
  9898  001AA2  0E14               	movlw	20
  9899  001AA4  6FDF               	movwf	(_ts_system+68)& (0+255),b	;volatile
  9900                           
  9901                           ;sm_ControlLearning_MC50.c: 146:                 var_sys.LearningDecelaration=YES;
  9902  001AA6  0E01               	movlw	1
  9903  001AA8  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9904                           
  9905                           ;sm_ControlLearning_MC50.c: 147:                 control_limit_switch = 0;
  9906  001AAA  0E00               	movlw	0
  9907  001AAC  0100               	movlb	0	; () banked
  9908  001AAE  6F81               	movwf	_control_limit_switch& (0+255),b
  9909                           
  9910                           ;sm_ControlLearning_MC50.c: 148:                  }
  9911  001AB0  0012               	return	
  9912  001AB2                     l22382:
  9913                           
  9914                           ;sm_ControlLearning_MC50.c: 150:                 {;sm_ControlLearning_MC50.c: 151:      
      +                                     var_sys.LearningDecelaration=NO;
  9915  001AB2  0E00               	movlw	0
  9916  001AB4  0101               	movlb	1	; () banked
  9917  001AB6  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9918                           
  9919                           ;sm_ControlLearning_MC50.c: 152:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
  9920  001AB8  0E00               	movlw	0
  9921  001ABA  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
  9922  001ABC  0E50               	movlw	80
  9923  001ABE  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
  9924                           
  9925                           ;sm_ControlLearning_MC50.c: 153:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
  9926  001AC0  0E00               	movlw	0
  9927  001AC2  6FE0               	movwf	(_ts_system+69)& (0+255),b	;volatile
  9928  001AC4  0E14               	movlw	20
  9929  001AC6  6FDF               	movwf	(_ts_system+68)& (0+255),b	;volatile
  9930                           
  9931                           ;sm_ControlLearning_MC50.c: 154:                 control_limit_switch = 0;
  9932  001AC8  0E00               	movlw	0
  9933  001ACA  0100               	movlb	0	; () banked
  9934  001ACC  6F81               	movwf	_control_limit_switch& (0+255),b
  9935  001ACE  0012               	return	
  9936  001AD0                     l22384:
  9937                           
  9938                           ; BSR set to: 1
  9939                           ;sm_ControlLearning_MC50.c: 159:             {;sm_ControlLearning_MC50.c: 160:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
  9940  001AD0  0EB4               	movlw	low _controlLearning_stateMachine
  9941  001AD2  6E12               	movwf	sm_send_event@psm^0,c
  9942  001AD4  0E02               	movlw	high _controlLearning_stateMachine
  9943  001AD6  6E13               	movwf	(sm_send_event@psm+1)^0,c
  9944  001AD8  0E00               	movlw	0
  9945  001ADA  6E15               	movwf	(sm_send_event@event+1)^0,c
  9946  001ADC  0E0B               	movlw	11
  9947  001ADE  6E14               	movwf	sm_send_event@event^0,c
  9948  001AE0  EC0E  F043         	call	_sm_send_event	;wreg free
  9949                           
  9950                           ;sm_ControlLearning_MC50.c: 161:                 var_sys.StateMotor = InClose;
  9951  001AE4  0E03               	movlw	3
  9952  001AE6  0101               	movlb	1	; () banked
  9953  001AE8  6F00               	movwf	_var_sys& (0+255),b	;volatile
  9954                           
  9955                           ; BSR set to: 1
  9956                           ;sm_ControlLearning_MC50.c: 162:                 var_sys.LearningDecelaration= YES;
  9957  001AEA  0E01               	movlw	1
  9958  001AEC  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
  9959                           
  9960                           ; BSR set to: 1
  9961                           ;sm_ControlLearning_MC50.c: 164:         };sm_ControlLearning_MC50.c: 165:         break
      +                          ;
  9962                           
  9963                           ;sm_ControlLearning_MC50.c: 163:             }
  9964  001AEE  0012               	return	
  9965  001AF0                     l22390:
  9966                           
  9967                           ; BSR set to: 0
  9968                           ;sm_ControlLearning_MC50.c: 167:         {;sm_ControlLearning_MC50.c: 168:             i
      +                          f(((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1)) || ((button_stru
      +                          ct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
  9969  001AF0  0101               	movlb	1	; () banked
  9970  001AF2  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
  9971  001AF4  B4D8               	btfsc	status,2,c
  9972  001AF6  D00E               	goto	u26660
  9973                           
  9974                           ; BSR set to: 1
  9975  001AF8  0100               	movlb	0	; () banked
  9976  001AFA  0581               	decf	_control_limit_switch& (0+255),w,b
  9977  001AFC  B4D8               	btfsc	status,2,c
  9978  001AFE  D00A               	goto	u26660
  9979                           
  9980                           ; BSR set to: 0
  9981  001B00  504D               	movf	(_button_struct+1)^0,w,c	;volatile
  9982  001B02  B4D8               	btfsc	status,2,c
  9983  001B04  D003               	goto	u26650
  9984                           
  9985                           ; BSR set to: 0
  9986  001B06  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
  9987  001B08  A4D8               	btfss	status,2,c
  9988  001B0A  D028               	goto	l22418
  9989  001B0C                     u26650:
  9990                           
  9991                           ; BSR set to: 0
  9992  001B0C  0101               	movlb	1	; () banked
  9993  001B0E  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
  9994  001B10  A4D8               	btfss	status,2,c
  9995  001B12  D024               	goto	l22418
  9996  001B14                     u26660:
  9997                           
  9998                           ;sm_ControlLearning_MC50.c: 169:             {;sm_ControlLearning_MC50.c: 171:          
      +                                 control_limit_switch = 1;
  9999  001B14  0E01               	movlw	1
 10000  001B16  0100               	movlb	0	; () banked
 10001  001B18  6F81               	movwf	_control_limit_switch& (0+255),b
 10002                           
 10003                           ;sm_ControlLearning_MC50.c: 172:                 var_sys.StateMotor=Stopped;
 10004  001B1A  0E00               	movlw	0
 10005  001B1C  0101               	movlb	1	; () banked
 10006  001B1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10007                           
 10008                           ; BSR set to: 1
 10009                           ;sm_ControlLearning_MC50.c: 173:                 if(ts_system.TimeWaitToNextState<=0)
 10010  001B20  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10011  001B22  D005               	goto	u26670
 10012  001B24  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10013  001B26  E102               	bnz	u26671
 10014  001B28  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10015  001B2A  B0D8               	btfsc	status,0,c
 10016  001B2C                     u26671:
 10017  001B2C  0012               	return	
 10018  001B2E                     u26670:
 10019                           
 10020                           ; BSR set to: 1
 10021                           ;sm_ControlLearning_MC50.c: 174:                 {;sm_ControlLearning_MC50.c: 175:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10022  001B2E  0EB4               	movlw	low _controlLearning_stateMachine
 10023  001B30  6E12               	movwf	sm_send_event@psm^0,c
 10024  001B32  0E02               	movlw	high _controlLearning_stateMachine
 10025  001B34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10026  001B36  0E00               	movlw	0
 10027  001B38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10028  001B3A  0E0A               	movlw	10
 10029  001B3C  6E14               	movwf	sm_send_event@event^0,c
 10030  001B3E  EC0E  F043         	call	_sm_send_event	;wreg free
 10031                           
 10032                           ;sm_ControlLearning_MC50.c: 176:                     var_sys.StateMotor=InOpenFull;
 10033  001B42  0E01               	movlw	1
 10034  001B44  0101               	movlb	1	; () banked
 10035  001B46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10036                           
 10037                           ; BSR set to: 1
 10038                           ;sm_ControlLearning_MC50.c: 177:                     clearLearningValue();
 10039  001B48  ECCB  F03F         	call	_clearLearningValue	;wreg free
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;sm_ControlLearning_MC50.c: 178:                         if ((var_sys_NVM.decelarationSe
      +                          nsivity != 0) && (var_sys.programinAutomatic == 0))
 10043  001B4C  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 10044  001B4E  B4D8               	btfsc	status,2,c
 10045  001B50  D7B0               	goto	l22382
 10046                           
 10047                           ; BSR set to: 0
 10048  001B52  0101               	movlb	1	; () banked
 10049  001B54  512A               	movf	(_var_sys+42)& (0+255),w,b	;volatile
 10050  001B56  B4D8               	btfsc	status,2,c
 10051  001B58  D79A               	goto	u26610
 10052  001B5A  D7AB               	goto	l22382
 10053  001B5C                     l22418:
 10054  001B5C  0101               	movlb	1	; () banked
 10055  001B5E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10056  001B60  A4D8               	btfss	status,2,c
 10057  001B62  D003               	goto	l22422
 10058  001B64                     u26700:
 10059                           
 10060                           ; BSR set to: 1
 10061                           ;sm_ControlLearning_MC50.c: 196:             {;sm_ControlLearning_MC50.c: 197:          
      +                                 generateErrorLearnig();
 10062  001B64  EC47  F042         	call	_generateErrorLearnig	;wreg free
 10063                           
 10064                           ;sm_ControlLearning_MC50.c: 198:             }
 10065  001B68  0012               	return	
 10066  001B6A                     l22422:
 10067                           
 10068                           ; BSR set to: 1
 10069                           ;sm_ControlLearning_MC50.c: 200:             {;sm_ControlLearning_MC50.c: 201:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10070  001B6A  0E00               	movlw	0
 10071  001B6C  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10072  001B6E  0E28               	movlw	40
 10073  001B70  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10074  001B72  0012               	return	
 10075  001B74                     l22424:
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;sm_ControlLearning_MC50.c: 206:         {;sm_ControlLearning_MC50.c: 207:             i
      +                          f((var_sys.FimCurso_OpenIsEnabled==YES) || (ts_system.TimeLearningDecelaration<=0)||(con
      +                          trol_limit_switch == 1))
 10079  001B74  0101               	movlb	1	; () banked
 10080  001B76  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10081  001B78  A4D8               	btfss	status,2,c
 10082                           
 10083                           ; BSR set to: 1
 10084  001B7A  BFD2               	btfsc	(_ts_system+55)& (0+255),7,b	;volatile
 10085  001B7C  D009               	goto	u26730
 10086  001B7E  51D2               	movf	(_ts_system+55)& (0+255),w,b	;volatile
 10087  001B80  E103               	bnz	u26720
 10088  001B82  05D1               	decf	(_ts_system+54)& (0+255),w,b	;volatile
 10089  001B84  A0D8               	btfss	status,0,c
 10090  001B86  D004               	goto	u26730
 10091  001B88                     u26720:
 10092                           
 10093                           ; BSR set to: 1
 10094  001B88  0100               	movlb	0	; () banked
 10095  001B8A  0581               	decf	_control_limit_switch& (0+255),w,b
 10096  001B8C  A4D8               	btfss	status,2,c
 10097  001B8E  D02A               	goto	l22446
 10098  001B90                     u26730:
 10099                           
 10100                           ;sm_ControlLearning_MC50.c: 209:             {;sm_ControlLearning_MC50.c: 210:          
      +                                  control_limit_switch = 1;
 10101  001B90  0E01               	movlw	1
 10102  001B92  0100               	movlb	0	; () banked
 10103  001B94  6F81               	movwf	_control_limit_switch& (0+255),b
 10104                           
 10105                           ;sm_ControlLearning_MC50.c: 211:                 var_sys.StateMotor=Stopped;
 10106  001B96  0E00               	movlw	0
 10107  001B98  0101               	movlb	1	; () banked
 10108  001B9A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10109                           
 10110                           ; BSR set to: 1
 10111                           ;sm_ControlLearning_MC50.c: 212:             if(ts_system.TimeWaitToNextState<=0)
 10112  001B9C  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10113  001B9E  D005               	goto	u26740
 10114  001BA0  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10115  001BA2  E102               	bnz	u26741
 10116  001BA4  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10117  001BA6  B0D8               	btfsc	status,0,c
 10118  001BA8                     u26741:
 10119  001BA8  0012               	return	
 10120  001BAA                     u26740:
 10121                           
 10122                           ; BSR set to: 1
 10123                           ;sm_ControlLearning_MC50.c: 213:             {;sm_ControlLearning_MC50.c: 215:          
      +                                 sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10124  001BAA  0EB4               	movlw	low _controlLearning_stateMachine
 10125  001BAC  6E12               	movwf	sm_send_event@psm^0,c
 10126  001BAE  0E02               	movlw	high _controlLearning_stateMachine
 10127  001BB0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10128  001BB2  0E00               	movlw	0
 10129  001BB4  6E15               	movwf	(sm_send_event@event+1)^0,c
 10130  001BB6  0E0B               	movlw	11
 10131  001BB8  6E14               	movwf	sm_send_event@event^0,c
 10132  001BBA  EC0E  F043         	call	_sm_send_event	;wreg free
 10133                           
 10134                           ;sm_ControlLearning_MC50.c: 216:                 var_sys.StateMotor=InClose;
 10135  001BBE  0E03               	movlw	3
 10136  001BC0  0101               	movlb	1	; () banked
 10137  001BC2  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10138                           
 10139                           ; BSR set to: 1
 10140                           ;sm_ControlLearning_MC50.c: 217:                 ts_system.TimeLearningDecelaration=(100
      +                          0/50)*5;
 10141  001BC4  0E00               	movlw	0
 10142  001BC6  6FD2               	movwf	(_ts_system+55)& (0+255),b	;volatile
 10143  001BC8  0E64               	movlw	100
 10144  001BCA  6FD1               	movwf	(_ts_system+54)& (0+255),b	;volatile
 10145                           
 10146                           ; BSR set to: 1
 10147                           ;sm_ControlLearning_MC50.c: 218:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*5;
 10148  001BCC  0E00               	movlw	0
 10149  001BCE  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10150  001BD0  0E64               	movlw	100
 10151  001BD2                     L67:
 10152  001BD2  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10153                           
 10154                           ; BSR set to: 1
 10155                           ;sm_ControlLearning_MC50.c: 219:                 ts_system.TimeWaitReleCapacitor = (1000
      +                          /50);
 10156  001BD4  0E00               	movlw	0
 10157  001BD6  6FE0               	movwf	(_ts_system+69)& (0+255),b	;volatile
 10158  001BD8  0E14               	movlw	20
 10159  001BDA  6FDF               	movwf	(_ts_system+68)& (0+255),b	;volatile
 10160                           
 10161                           ; BSR set to: 1
 10162                           ;sm_ControlLearning_MC50.c: 220:                 control_limit_switch = 0;
 10163  001BDC  0E00               	movlw	0
 10164  001BDE  0100               	movlb	0	; () banked
 10165  001BE0  6F81               	movwf	_control_limit_switch& (0+255),b
 10166  001BE2  0012               	return	
 10167  001BE4                     l22446:
 10168                           
 10169                           ; BSR set to: 0
 10170  001BE4  0101               	movlb	1	; () banked
 10171  001BE6  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10172  001BE8  B4D8               	btfsc	status,2,c
 10173  001BEA  D7BC               	goto	u26700
 10174                           
 10175                           ; BSR set to: 1
 10176                           ;sm_ControlLearning_MC50.c: 230:             {;sm_ControlLearning_MC50.c: 231:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10177  001BEC  0E00               	movlw	0
 10178  001BEE  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10179  001BF0  0E28               	movlw	40
 10180  001BF2  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10181                           
 10182                           ; BSR set to: 1
 10183                           ;sm_ControlLearning_MC50.c: 232:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10184  001BF4  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10185  001BF6  D005               	goto	u26760
 10186  001BF8  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10187  001BFA  E102               	bnz	u26761
 10188  001BFC  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10189  001BFE  B0D8               	btfsc	status,0,c
 10190  001C00                     u26761:
 10191  001C00  0012               	return	
 10192  001C02                     u26760:
 10193                           
 10194                           ; BSR set to: 1
 10195                           ;sm_ControlLearning_MC50.c: 233:                 {;sm_ControlLearning_MC50.c: 234:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10196  001C02  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10197  001C04  0012               	return	
 10198  001C06  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10199  001C08  E103               	bnz	u26770
 10200  001C0A  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10201  001C0C  A0D8               	btfss	status,0,c
 10202  001C0E  0012               	return	
 10203  001C10                     u26770:
 10204                           
 10205                           ; BSR set to: 1
 10206                           ;sm_ControlLearning_MC50.c: 235:                 {;sm_ControlLearning_MC50.c: 236:      
      +                                         learn_st.openHistCurrent=calculateMean(learn_st.openHistCurrent,var_sys.A
      +                          ctualHistCurrent);
 10207  001C10  C06E  F010         	movff	_learn_st+14,calculateMean@meanValue	;volatile
 10208  001C14  C06F  F011         	movff	_learn_st+15,calculateMean@meanValue+1	;volatile
 10209  001C18  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10210  001C1A  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10211  001C1C  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10212  001C20  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10213  001C24  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10214  001C28  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10215  001C2C  ECAE  F042         	call	_calculateMean	;wreg free
 10216  001C30  C010  F06E         	movff	?_calculateMean,_learn_st+14	;volatile
 10217  001C34  C011  F06F         	movff	?_calculateMean+1,_learn_st+15	;volatile
 10218  001C38  0012               	return	
 10219  001C3A                     l22458:
 10220                           
 10221                           ; BSR set to: 0
 10222                           ;sm_ControlLearning_MC50.c: 243:         {;sm_ControlLearning_MC50.c: 244:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||(control_limit_switch == 1))
 10223  001C3A  0101               	movlb	1	; () banked
 10224  001C3C  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10225  001C3E  B4D8               	btfsc	status,2,c
 10226  001C40  D004               	goto	u26790
 10227                           
 10228                           ; BSR set to: 1
 10229  001C42  0100               	movlb	0	; () banked
 10230  001C44  0581               	decf	_control_limit_switch& (0+255),w,b
 10231  001C46  A4D8               	btfss	status,2,c
 10232  001C48  D020               	goto	l22478
 10233  001C4A                     u26790:
 10234                           
 10235                           ;sm_ControlLearning_MC50.c: 245:             {;sm_ControlLearning_MC50.c: 246:          
      +                                 control_limit_switch = 1;
 10236  001C4A  0E01               	movlw	1
 10237  001C4C  0100               	movlb	0	; () banked
 10238  001C4E  6F81               	movwf	_control_limit_switch& (0+255),b
 10239                           
 10240                           ;sm_ControlLearning_MC50.c: 247:                 var_sys.StateMotor=Stopped;
 10241  001C50  0E00               	movlw	0
 10242  001C52  0101               	movlb	1	; () banked
 10243  001C54  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10244                           
 10245                           ; BSR set to: 1
 10246                           ;sm_ControlLearning_MC50.c: 248:                 if(ts_system.TimeWaitToNextState<=0)
 10247  001C56  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10248  001C58  D005               	goto	u26800
 10249  001C5A  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10250  001C5C  E102               	bnz	u26801
 10251  001C5E  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10252  001C60  B0D8               	btfsc	status,0,c
 10253  001C62                     u26801:
 10254  001C62  0012               	return	
 10255  001C64                     u26800:
 10256                           
 10257                           ; BSR set to: 1
 10258                           ;sm_ControlLearning_MC50.c: 249:                 {;sm_ControlLearning_MC50.c: 250:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateClosed);
 10259  001C64  0EB4               	movlw	low _controlLearning_stateMachine
 10260  001C66  6E12               	movwf	sm_send_event@psm^0,c
 10261  001C68  0E02               	movlw	high _controlLearning_stateMachine
 10262  001C6A  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10263  001C6C  0E00               	movlw	0
 10264  001C6E  6E15               	movwf	(sm_send_event@event+1)^0,c
 10265  001C70  0E0A               	movlw	10
 10266  001C72  6E14               	movwf	sm_send_event@event^0,c
 10267  001C74  EC0E  F043         	call	_sm_send_event	;wreg free
 10268                           
 10269                           ;sm_ControlLearning_MC50.c: 251:                     var_sys.StateMotor=InOpenFull;
 10270  001C78  0E01               	movlw	1
 10271  001C7A  0101               	movlb	1	; () banked
 10272  001C7C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10273                           
 10274                           ; BSR set to: 1
 10275                           ;sm_ControlLearning_MC50.c: 252:                     var_sys.LearningDecelaration=NO;
 10276  001C7E  0E00               	movlw	0
 10277  001C80  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10278                           
 10279                           ; BSR set to: 1
 10280                           ;sm_ControlLearning_MC50.c: 253:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*3;
 10281  001C82  0E00               	movlw	0
 10282  001C84  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10283  001C86  0E3C               	movlw	60
 10284  001C88  D7A4               	goto	L67
 10285  001C8A                     l22478:
 10286                           
 10287                           ; BSR set to: 0
 10288  001C8A  0101               	movlb	1	; () banked
 10289  001C8C  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10290  001C8E  B4D8               	btfsc	status,2,c
 10291  001C90  D769               	goto	u26700
 10292                           
 10293                           ; BSR set to: 1
 10294                           ;sm_ControlLearning_MC50.c: 265:             {;sm_ControlLearning_MC50.c: 266:          
      +                                 ts_system.TimeWaitToNextState=(2*(1000/50));
 10295  001C92  0E00               	movlw	0
 10296  001C94  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10297  001C96  0E28               	movlw	40
 10298  001C98  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10299                           
 10300                           ; BSR set to: 1
 10301                           ;sm_ControlLearning_MC50.c: 267:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10302  001C9A  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10303  001C9C  D005               	goto	u26820
 10304  001C9E  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10305  001CA0  E102               	bnz	u26821
 10306  001CA2  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10307  001CA4  B0D8               	btfsc	status,0,c
 10308  001CA6                     u26821:
 10309  001CA6  0012               	return	
 10310  001CA8                     u26820:
 10311                           
 10312                           ; BSR set to: 1
 10313                           ;sm_ControlLearning_MC50.c: 268:                 {;sm_ControlLearning_MC50.c: 269:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10314  001CA8  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10315  001CAA  0012               	return	
 10316  001CAC  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10317  001CAE  E103               	bnz	u26830
 10318  001CB0  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10319  001CB2  A0D8               	btfss	status,0,c
 10320  001CB4  0012               	return	
 10321  001CB6                     u26830:
 10322                           
 10323                           ; BSR set to: 1
 10324                           ;sm_ControlLearning_MC50.c: 270:                 {;sm_ControlLearning_MC50.c: 271:      
      +                                         learn_st.closeHistCurrent=calculateMean(learn_st.closeHistCurrent,var_sys
      +                          .ActualHistCurrent);
 10325  001CB6  C070  F010         	movff	_learn_st+16,calculateMean@meanValue	;volatile
 10326  001CBA  C071  F011         	movff	_learn_st+17,calculateMean@meanValue+1	;volatile
 10327  001CBE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10328  001CC0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10329  001CC2  C130  F014         	movff	_var_sys+48,calculateMean@newValue	;volatile
 10330  001CC6  C131  F015         	movff	_var_sys+49,calculateMean@newValue+1	;volatile
 10331  001CCA  C132  F016         	movff	_var_sys+50,calculateMean@newValue+2	;volatile
 10332  001CCE  C133  F017         	movff	_var_sys+51,calculateMean@newValue+3	;volatile
 10333  001CD2  ECAE  F042         	call	_calculateMean	;wreg free
 10334  001CD6  C010  F070         	movff	?_calculateMean,_learn_st+16	;volatile
 10335  001CDA  C011  F071         	movff	?_calculateMean+1,_learn_st+17	;volatile
 10336  001CDE  0012               	return	
 10337  001CE0                     l22490:
 10338                           
 10339                           ; BSR set to: 0
 10340                           ;sm_ControlLearning_MC50.c: 278:         {;sm_ControlLearning_MC50.c: 279:             i
      +                          f(((var_sys.FimCurso_OpenIsEnabled==YES)||control_limit_switch == 1)||(var_sys.LearningD
      +                          ecelaration==YES && (button_struct.current == 0 ||typeOpenOrder == TypeFull) && var_sys.
      +                          programinAutomatic == 1))
 10341  001CE0  0101               	movlb	1	; () banked
 10342  001CE2  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 10343  001CE4  B4D8               	btfsc	status,2,c
 10344  001CE6  D011               	goto	u26890
 10345                           
 10346                           ; BSR set to: 1
 10347  001CE8  0100               	movlb	0	; () banked
 10348  001CEA  0581               	decf	_control_limit_switch& (0+255),w,b
 10349  001CEC  B4D8               	btfsc	status,2,c
 10350  001CEE  D00D               	goto	u26890
 10351                           
 10352                           ; BSR set to: 0
 10353  001CF0  0101               	movlb	1	; () banked
 10354  001CF2  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10355  001CF4  A4D8               	btfss	status,2,c
 10356  001CF6  D02C               	goto	l22516
 10357                           
 10358                           ; BSR set to: 1
 10359  001CF8  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10360  001CFA  B4D8               	btfsc	status,2,c
 10361  001CFC  D003               	goto	u26880
 10362                           
 10363                           ; BSR set to: 1
 10364  001CFE  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10365  001D00  A4D8               	btfss	status,2,c
 10366  001D02  D026               	goto	l22516
 10367  001D04                     u26880:
 10368                           
 10369                           ; BSR set to: 1
 10370  001D04  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10371  001D06  A4D8               	btfss	status,2,c
 10372  001D08  D023               	goto	l22516
 10373  001D0A                     u26890:
 10374                           
 10375                           ;sm_ControlLearning_MC50.c: 280:             {;sm_ControlLearning_MC50.c: 282:          
      +                                 var_sys.Counter_Learning = 0;
 10376  001D0A  0E00               	movlw	0
 10377  001D0C  0101               	movlb	1	; () banked
 10378  001D0E  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10379                           
 10380                           ;sm_ControlLearning_MC50.c: 283:                 var_sys.LearningDecelaration = NO;
 10381  001D10  0E00               	movlw	0
 10382  001D12  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10383                           
 10384                           ;sm_ControlLearning_MC50.c: 284:                 control_limit_switch = 1;
 10385  001D14  0E01               	movlw	1
 10386  001D16  0100               	movlb	0	; () banked
 10387  001D18  6F81               	movwf	_control_limit_switch& (0+255),b
 10388                           
 10389                           ;sm_ControlLearning_MC50.c: 285:                 var_sys.StateMotor=Stopped;
 10390  001D1A  0E00               	movlw	0
 10391  001D1C  0101               	movlb	1	; () banked
 10392  001D1E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10393                           
 10394                           ; BSR set to: 1
 10395                           ;sm_ControlLearning_MC50.c: 286:                 if(ts_system.TimeWaitToNextState<=0)
 10396  001D20  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 10397  001D22  D005               	goto	u26900
 10398  001D24  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 10399  001D26  E102               	bnz	u26901
 10400  001D28  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 10401  001D2A  B0D8               	btfsc	status,0,c
 10402  001D2C                     u26901:
 10403  001D2C  0012               	return	
 10404  001D2E                     u26900:
 10405                           
 10406                           ; BSR set to: 1
 10407                           ;sm_ControlLearning_MC50.c: 287:                 {;sm_ControlLearning_MC50.c: 288:      
      +                                         sm_send_event(&controlLearning_stateMachine, ev_GateOpened);
 10408  001D2E  0EB4               	movlw	low _controlLearning_stateMachine
 10409  001D30  6E12               	movwf	sm_send_event@psm^0,c
 10410  001D32  0E02               	movlw	high _controlLearning_stateMachine
 10411  001D34  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10412  001D36  0E00               	movlw	0
 10413  001D38  6E15               	movwf	(sm_send_event@event+1)^0,c
 10414  001D3A  0E0B               	movlw	11
 10415  001D3C  6E14               	movwf	sm_send_event@event^0,c
 10416  001D3E  EC0E  F043         	call	_sm_send_event	;wreg free
 10417                           
 10418                           ;sm_ControlLearning_MC50.c: 289:                     var_sys.StateMotor=InClose;
 10419  001D42  0E03               	movlw	3
 10420  001D44  0101               	movlb	1	; () banked
 10421  001D46  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10422                           
 10423                           ; BSR set to: 1
 10424                           ;sm_ControlLearning_MC50.c: 290:                     ts_system.TimeWaitToGetCurrent=(100
      +                          0/50)*4;
 10425  001D48  0E00               	movlw	0
 10426  001D4A  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10427  001D4C  0E50               	movlw	80
 10428  001D4E  D741               	goto	L67
 10429  001D50                     l22516:
 10430                           
 10431                           ; BSR set to: 1
 10432  001D50  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10433  001D52  B4D8               	btfsc	status,2,c
 10434  001D54  D707               	goto	u26700
 10435                           
 10436                           ; BSR set to: 1
 10437  001D56  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10438  001D58  B4D8               	btfsc	status,2,c
 10439  001D5A  D003               	goto	u26930
 10440                           
 10441                           ; BSR set to: 1
 10442  001D5C  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10443  001D5E  A4D8               	btfss	status,2,c
 10444  001D60  D00F               	goto	l22530
 10445  001D62                     u26930:
 10446                           
 10447                           ; BSR set to: 1
 10448  001D62  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10449  001D64  A4D8               	btfss	status,2,c
 10450  001D66  D00C               	goto	l22530
 10451                           
 10452                           ; BSR set to: 1
 10453  001D68  5147               	movf	(_var_sys+71)& (0+255),w,b	;volatile
 10454  001D6A  A4D8               	btfss	status,2,c
 10455  001D6C  D009               	goto	l22530
 10456  001D6E                     u26950:
 10457                           
 10458                           ; BSR set to: 1
 10459                           ;sm_ControlLearning_MC50.c: 303:                 var_sys.LearningDecelaration=YES;
 10460  001D6E  0E01               	movlw	1
 10461  001D70  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10462                           
 10463                           ;sm_ControlLearning_MC50.c: 306:                 button_struct.processed = 1;
 10464  001D72  0E01               	movlw	1
 10465  001D74  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 10466                           
 10467                           ;sm_ControlLearning_MC50.c: 307:                 ts_system.TimeWaitToGetCurrent=(1000/50
      +                          )*4;
 10468  001D76  0E00               	movlw	0
 10469  001D78  6FD0               	movwf	(_ts_system+53)& (0+255),b	;volatile
 10470  001D7A  0E50               	movlw	80
 10471  001D7C  6FCF               	movwf	(_ts_system+52)& (0+255),b	;volatile
 10472                           
 10473                           ;sm_ControlLearning_MC50.c: 309:             }
 10474  001D7E  0012               	return	
 10475  001D80                     l22530:
 10476                           
 10477                           ; BSR set to: 1
 10478  001D80  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10479  001D82  A4D8               	btfss	status,2,c
 10480  001D84  D00C               	goto	l22538
 10481                           
 10482                           ; BSR set to: 1
 10483                           ;sm_ControlLearning_MC50.c: 313:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10484  001D86  0E00               	movlw	0
 10485  001D88  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10486  001D8A  0E28               	movlw	40
 10487  001D8C  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10488                           
 10489                           ; BSR set to: 1
 10490                           ;sm_ControlLearning_MC50.c: 315:                 if(ts_system.TimeWaitToGetCurrent>0)
 10491  001D8E  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10492  001D90  0012               	return	
 10493  001D92  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10494  001D94  E103               	bnz	u26970
 10495  001D96  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10496  001D98  A0D8               	btfss	status,0,c
 10497  001D9A  0012               	return	
 10498  001D9C                     u26970:
 10499  001D9C  D739               	goto	u26770
 10500  001D9E                     l22538:
 10501                           
 10502                           ; BSR set to: 1
 10503                           ;sm_ControlLearning_MC50.c: 322:             {;sm_ControlLearning_MC50.c: 323:          
      +                                 var_sys.Counter_Learning = 1;
 10504  001D9E  0E01               	movlw	1
 10505  001DA0  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10506                           
 10507                           ;sm_ControlLearning_MC50.c: 324:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10508  001DA2  0E00               	movlw	0
 10509  001DA4  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10510  001DA6  0E28               	movlw	40
 10511  001DA8  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10512                           
 10513                           ; BSR set to: 1
 10514                           ;sm_ControlLearning_MC50.c: 326:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10515  001DAA  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10516  001DAC  D005               	goto	u26980
 10517  001DAE  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10518  001DB0  E102               	bnz	u26981
 10519  001DB2  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10520  001DB4  B0D8               	btfsc	status,0,c
 10521  001DB6                     u26981:
 10522  001DB6  0012               	return	
 10523  001DB8                     u26980:
 10524                           
 10525                           ; BSR set to: 1
 10526                           ;sm_ControlLearning_MC50.c: 327:                 {;sm_ControlLearning_MC50.c: 328:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10527  001DB8  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10528  001DBA  0012               	return	
 10529  001DBC  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10530  001DBE  E103               	bnz	u26990
 10531  001DC0  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10532  001DC2  A0D8               	btfss	status,0,c
 10533  001DC4  0012               	return	
 10534  001DC6                     u26990:
 10535                           
 10536                           ; BSR set to: 1
 10537                           ;sm_ControlLearning_MC50.c: 329:                 {;sm_ControlLearning_MC50.c: 330:      
      +                                         learn_st.openCurrent=calculateMean(learn_st.openCurrent,var_sys.ActualCur
      +                          rent);
 10538  001DC6  C06A  F010         	movff	_learn_st+10,calculateMean@meanValue	;volatile
 10539  001DCA  C06B  F011         	movff	_learn_st+11,calculateMean@meanValue+1	;volatile
 10540  001DCE  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10541  001DD0  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10542  001DD2  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10543  001DD6  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10544  001DDA  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10545  001DDC  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10546  001DDE  ECAE  F042         	call	_calculateMean	;wreg free
 10547  001DE2  C010  F06A         	movff	?_calculateMean,_learn_st+10	;volatile
 10548  001DE6  C011  F06B         	movff	?_calculateMean+1,_learn_st+11	;volatile
 10549  001DEA  0012               	return	
 10550  001DEC                     l22546:
 10551                           
 10552                           ; BSR set to: 0
 10553                           ;sm_ControlLearning_MC50.c: 337:         {;sm_ControlLearning_MC50.c: 338:             i
      +                          f((var_sys.FimCurso_CloseIsEnabled==YES)||( var_sys.LearningDecelaration==YES && (button
      +                          _struct.current == 0 || typeOpenOrder == TypeFull) && var_sys.programinAutomatic == 1))
 10554  001DEC  0101               	movlb	1	; () banked
 10555  001DEE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 10556  001DF0  B4D8               	btfsc	status,2,c
 10557  001DF2  D00C               	goto	u27040
 10558                           
 10559                           ; BSR set to: 1
 10560  001DF4  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10561  001DF6  A4D8               	btfss	status,2,c
 10562  001DF8  D06F               	goto	l22592
 10563                           
 10564                           ; BSR set to: 1
 10565  001DFA  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10566  001DFC  B4D8               	btfsc	status,2,c
 10567  001DFE  D003               	goto	u27030
 10568                           
 10569                           ; BSR set to: 1
 10570  001E00  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10571  001E02  A4D8               	btfss	status,2,c
 10572  001E04  D069               	goto	l22592
 10573  001E06                     u27030:
 10574                           
 10575                           ; BSR set to: 1
 10576  001E06  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10577  001E08  A4D8               	btfss	status,2,c
 10578  001E0A  D066               	goto	l22592
 10579  001E0C                     u27040:
 10580                           
 10581                           ; BSR set to: 1
 10582                           ;sm_ControlLearning_MC50.c: 339:             {;sm_ControlLearning_MC50.c: 342:          
      +                                 var_sys.Statedoorcontrol = st_Closed;
 10583  001E0C  0E01               	movlw	1
 10584  001E0E  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 10585                           
 10586                           ;sm_ControlLearning_MC50.c: 343:                 var_sys.Counter_Learning = 0;
 10587  001E10  0E00               	movlw	0
 10588  001E12  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10589                           
 10590                           ;sm_ControlLearning_MC50.c: 344:                 var_sys.LearningDecelaration = NO;
 10591  001E14  0E00               	movlw	0
 10592  001E16  6F47               	movwf	(_var_sys+71)& (0+255),b	;volatile
 10593                           
 10594                           ;sm_ControlLearning_MC50.c: 345:                 var_sys.StateMotor=Stopped;
 10595  001E18  0E00               	movlw	0
 10596  001E1A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 10597                           
 10598                           ; BSR set to: 1
 10599                           ;sm_ControlLearning_MC50.c: 346:                 sm_send_event(&controlLearning_stateMac
      +                          hine, ev_GateClosed);
 10600  001E1C  0EB4               	movlw	low _controlLearning_stateMachine
 10601  001E1E  6E12               	movwf	sm_send_event@psm^0,c
 10602  001E20  0E02               	movlw	high _controlLearning_stateMachine
 10603  001E22  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10604  001E24  0E00               	movlw	0
 10605  001E26  6E15               	movwf	(sm_send_event@event+1)^0,c
 10606  001E28  0E0A               	movlw	10
 10607  001E2A  6E14               	movwf	sm_send_event@event^0,c
 10608  001E2C  EC0E  F043         	call	_sm_send_event	;wreg free
 10609                           
 10610                           ;sm_ControlLearning_MC50.c: 347:                 sm_send_event(&controlGate_stateMachine
      +                          , ev_LearningComplete);
 10611  001E30  0EE3               	movlw	low _controlGate_stateMachine
 10612  001E32  6E12               	movwf	sm_send_event@psm^0,c
 10613  001E34  0E01               	movlw	high _controlGate_stateMachine
 10614  001E36  6E13               	movwf	(sm_send_event@psm+1)^0,c
 10615  001E38  0E00               	movlw	0
 10616  001E3A  6E15               	movwf	(sm_send_event@event+1)^0,c
 10617  001E3C  0E13               	movlw	19
 10618  001E3E  6E14               	movwf	sm_send_event@event^0,c
 10619  001E40  EC0E  F043         	call	_sm_send_event	;wreg free
 10620                           
 10621                           ;sm_ControlLearning_MC50.c: 348:                 var_sys_NVM.learningTimeToClose=learn_s
      +                          t.timeClose;
 10622  001E44  C060  F0D0         	movff	_learn_st,_var_sys_NVM+56	;volatile
 10623  001E48  C061  F0D1         	movff	_learn_st+1,_var_sys_NVM+57	;volatile
 10624  001E4C  C062  F0D2         	movff	_learn_st+2,_var_sys_NVM+58	;volatile
 10625  001E50  C063  F0D3         	movff	_learn_st+3,_var_sys_NVM+59	;volatile
 10626                           
 10627                           ;sm_ControlLearning_MC50.c: 349:                 var_sys_NVM.learningTimeToOpen=learn_st
      +                          .timeOpen;
 10628  001E54  C064  F0CC         	movff	_learn_st+4,_var_sys_NVM+52	;volatile
 10629  001E58  C065  F0CD         	movff	_learn_st+5,_var_sys_NVM+53	;volatile
 10630  001E5C  C066  F0CE         	movff	_learn_st+6,_var_sys_NVM+54	;volatile
 10631  001E60  C067  F0CF         	movff	_learn_st+7,_var_sys_NVM+55	;volatile
 10632                           
 10633                           ;sm_ControlLearning_MC50.c: 350:                 if (var_sys.programinAutomatic == 1){
 10634  001E64  0101               	movlb	1	; () banked
 10635  001E66  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10636  001E68  A4D8               	btfss	status,2,c
 10637  001E6A  D005               	goto	l22570
 10638                           
 10639                           ; BSR set to: 1
 10640                           ;sm_ControlLearning_MC50.c: 351:                     var_sys_NVM.decelarationClose=learn
      +                          _st.timeDecelerationClose ;
 10641  001E6C  C068  F099         	movff	_learn_st+8,_var_sys_NVM+1	;volatile
 10642                           
 10643                           ;sm_ControlLearning_MC50.c: 352:                     var_sys_NVM.decelarationOpen=learn_
      +                          st.timeDecelerationOpen ;
 10644  001E70  C069  F098         	movff	_learn_st+9,_var_sys_NVM	;volatile
 10645                           
 10646                           ;sm_ControlLearning_MC50.c: 353:                                 }
 10647  001E74  D005               	goto	l22572
 10648  001E76                     l22570:
 10649                           
 10650                           ; BSR set to: 1
 10651                           ;sm_ControlLearning_MC50.c: 355:                     var_sys_NVM.decelarationClose=4 ;
 10652  001E76  0E04               	movlw	4
 10653  001E78  0100               	movlb	0	; () banked
 10654  001E7A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 10655                           
 10656                           ;sm_ControlLearning_MC50.c: 356:                     var_sys_NVM.decelarationOpen=4 ;
 10657  001E7C  0E04               	movlw	4
 10658  001E7E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 10659  001E80                     l22572:
 10660                           
 10661                           ;sm_ControlLearning_MC50.c: 358:                 var_sys_NVM.learningCurrentNormalClose=
      +                          learn_st.closeCurrent;
 10662  001E80  C06C  F0C8         	movff	_learn_st+12,_var_sys_NVM+48	;volatile
 10663  001E84  C06D  F0C9         	movff	_learn_st+13,_var_sys_NVM+49	;volatile
 10664                           
 10665                           ;sm_ControlLearning_MC50.c: 359:                 var_sys_NVM.learningCurrentNormalOpen=l
      +                          earn_st.openCurrent;
 10666  001E88  C06A  F0CA         	movff	_learn_st+10,_var_sys_NVM+50	;volatile
 10667  001E8C  C06B  F0CB         	movff	_learn_st+11,_var_sys_NVM+51	;volatile
 10668                           
 10669                           ;sm_ControlLearning_MC50.c: 360:                 var_sys_NVM.learningCurrentDecelaration
      +                          Open=learn_st.openHistCurrent;
 10670  001E90  C06E  F0C4         	movff	_learn_st+14,_var_sys_NVM+44	;volatile
 10671  001E94  C06F  F0C5         	movff	_learn_st+15,_var_sys_NVM+45	;volatile
 10672  001E98  0100               	movlb	0	; () banked
 10673  001E9A  6BC6               	clrf	(_var_sys_NVM+46)& (0+255),b	;volatile
 10674  001E9C  6BC7               	clrf	(_var_sys_NVM+47)& (0+255),b	;volatile
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;sm_ControlLearning_MC50.c: 361:                 var_sys_NVM.learningCurrentDecelaration
      +                          Close=learn_st.closeHistCurrent;
 10678  001E9E  C070  F0C0         	movff	_learn_st+16,_var_sys_NVM+40	;volatile
 10679  001EA2  C071  F0C1         	movff	_learn_st+17,_var_sys_NVM+41	;volatile
 10680  001EA6  6BC2               	clrf	(_var_sys_NVM+42)& (0+255),b	;volatile
 10681  001EA8  6BC3               	clrf	(_var_sys_NVM+43)& (0+255),b	;volatile
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;sm_ControlLearning_MC50.c: 362:                 SaveNVM_VarSystem(pageMemoryP);
 10685  001EAA  0E00               	movlw	0
 10686  001EAC  EC16  F047         	call	_SaveNVM_VarSystem
 10687                           
 10688                           ;sm_ControlLearning_MC50.c: 363:                 SaveNVM_VarSystem(pageMemoryLearningVar
      +                          s);
 10689  001EB0  0E03               	movlw	3
 10690  001EB2  EC16  F047         	call	_SaveNVM_VarSystem
 10691                           
 10692                           ;sm_ControlLearning_MC50.c: 364:                 SaveNVM_VarSystem(pageMemoryCounters);
 10693  001EB6  0E02               	movlw	2
 10694  001EB8  EC16  F047         	call	_SaveNVM_VarSystem
 10695                           
 10696                           ;sm_ControlLearning_MC50.c: 365:                 var_sys.LearningIsEnabled=NO;
 10697  001EBC  0E00               	movlw	0
 10698  001EBE  0101               	movlb	1	; () banked
 10699  001EC0  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10700                           
 10701                           ; BSR set to: 1
 10702                           ;sm_ControlLearning_MC50.c: 366:                 var_sys.PositionActual=0;
 10703  001EC2  0E00               	movlw	0
 10704  001EC4  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 10705  001EC6  0E00               	movlw	0
 10706  001EC8  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 10707  001ECA  0E00               	movlw	0
 10708  001ECC  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 10709  001ECE  0E00               	movlw	0
 10710  001ED0  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 10711                           
 10712                           ; BSR set to: 1
 10713                           ;sm_ControlLearning_MC50.c: 367:                 var_sys.PositionIsLost = NO;
 10714  001ED2  0E00               	movlw	0
 10715  001ED4  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 10716                           
 10717                           ;sm_ControlLearning_MC50.c: 369:             }
 10718  001ED6  0012               	return	
 10719  001ED8                     l22592:
 10720                           
 10721                           ; BSR set to: 1
 10722  001ED8  5100               	movf	_var_sys& (0+255),w,b	;volatile
 10723  001EDA  B4D8               	btfsc	status,2,c
 10724  001EDC  D643               	goto	u26700
 10725                           
 10726                           ; BSR set to: 1
 10727  001EDE  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 10728  001EE0  B4D8               	btfsc	status,2,c
 10729  001EE2  D003               	goto	u27080
 10730                           
 10731                           ; BSR set to: 1
 10732  001EE4  043A               	decf	sm_execute_ControlLearning@typeOpenOrder^0,w,c
 10733  001EE6  A4D8               	btfss	status,2,c
 10734  001EE8  D003               	goto	l22604
 10735  001EEA                     u27080:
 10736                           
 10737                           ; BSR set to: 1
 10738  001EEA  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 10739  001EEC  B4D8               	btfsc	status,2,c
 10740  001EEE  D73F               	goto	u26950
 10741  001EF0                     l22604:
 10742                           
 10743                           ; BSR set to: 1
 10744  001EF0  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 10745  001EF2  A4D8               	btfss	status,2,c
 10746  001EF4  D008               	goto	l22610
 10747                           
 10748                           ; BSR set to: 1
 10749                           ;sm_ControlLearning_MC50.c: 384:                  if(ts_system.TimeWaitToGetCurrent>0)
 10750  001EF6  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10751  001EF8  0012               	return	
 10752  001EFA  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10753  001EFC  E103               	bnz	u27110
 10754  001EFE  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10755  001F00  A0D8               	btfss	status,0,c
 10756  001F02  0012               	return	
 10757  001F04                     u27110:
 10758  001F04  D6D8               	goto	u26830
 10759  001F06                     l22610:
 10760                           
 10761                           ; BSR set to: 1
 10762                           ;sm_ControlLearning_MC50.c: 390:             {;sm_ControlLearning_MC50.c: 391:          
      +                                 var_sys.Counter_Learning = 1;
 10763  001F06  0E01               	movlw	1
 10764  001F08  6F17               	movwf	(_var_sys+23)& (0+255),b	;volatile
 10765                           
 10766                           ;sm_ControlLearning_MC50.c: 392:                 ts_system.TimeWaitToNextState=(2*(1000/
      +                          50));
 10767  001F0A  0E00               	movlw	0
 10768  001F0C  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 10769  001F0E  0E28               	movlw	40
 10770  001F10  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 10771                           
 10772                           ; BSR set to: 1
 10773                           ;sm_ControlLearning_MC50.c: 395:                 if (ts_system.TimeWaitReleCapacitor <=0
      +                          )
 10774  001F12  BFE0               	btfsc	(_ts_system+69)& (0+255),7,b	;volatile
 10775  001F14  D005               	goto	u27120
 10776  001F16  51E0               	movf	(_ts_system+69)& (0+255),w,b	;volatile
 10777  001F18  E102               	bnz	u27121
 10778  001F1A  05DF               	decf	(_ts_system+68)& (0+255),w,b	;volatile
 10779  001F1C  B0D8               	btfsc	status,0,c
 10780  001F1E                     u27121:
 10781  001F1E  0012               	return	
 10782  001F20                     u27120:
 10783                           
 10784                           ; BSR set to: 1
 10785                           ;sm_ControlLearning_MC50.c: 396:                 {;sm_ControlLearning_MC50.c: 397:      
      +                                     if(ts_system.TimeWaitToGetCurrent>0)
 10786  001F20  BFD0               	btfsc	(_ts_system+53)& (0+255),7,b	;volatile
 10787  001F22  0012               	return	
 10788  001F24  51D0               	movf	(_ts_system+53)& (0+255),w,b	;volatile
 10789  001F26  E103               	bnz	u27130
 10790  001F28  05CF               	decf	(_ts_system+52)& (0+255),w,b	;volatile
 10791  001F2A  A0D8               	btfss	status,0,c
 10792  001F2C  0012               	return	
 10793  001F2E                     u27130:
 10794                           
 10795                           ; BSR set to: 1
 10796                           ;sm_ControlLearning_MC50.c: 398:                 {;sm_ControlLearning_MC50.c: 399:      
      +                                         learn_st.closeCurrent=calculateMean(learn_st.closeCurrent,var_sys.ActualC
      +                          urrent);
 10797  001F2E  C06C  F010         	movff	_learn_st+12,calculateMean@meanValue	;volatile
 10798  001F32  C06D  F011         	movff	_learn_st+13,calculateMean@meanValue+1	;volatile
 10799  001F36  6A12               	clrf	(calculateMean@meanValue+2)^0,c
 10800  001F38  6A13               	clrf	(calculateMean@meanValue+3)^0,c
 10801  001F3A  C12E  F014         	movff	_var_sys+46,calculateMean@newValue	;volatile
 10802  001F3E  C12F  F015         	movff	_var_sys+47,calculateMean@newValue+1	;volatile
 10803  001F42  6A16               	clrf	(calculateMean@newValue+2)^0,c
 10804  001F44  6A17               	clrf	(calculateMean@newValue+3)^0,c
 10805  001F46  ECAE  F042         	call	_calculateMean	;wreg free
 10806  001F4A  C010  F06C         	movff	?_calculateMean,_learn_st+12	;volatile
 10807  001F4E  C011  F06D         	movff	?_calculateMean+1,_learn_st+13	;volatile
 10808  001F52  0012               	return	
 10809  001F54                     l22620:
 10810  001F54  C0DC  FFD9         	movff	sm_execute_ControlLearning@psm,fsr2l
 10811  001F58  C0DD  FFDA         	movff	sm_execute_ControlLearning@psm+1,fsr2h
 10812  001F5C  50DF               	movf	indf2,w,c
 10813  001F5E  0100               	movlb	0	; () banked
 10814  001F60  6FDE               	movwf	??_sm_execute_ControlLearning& (0+255),b
 10815  001F62  6BDF               	clrf	(??_sm_execute_ControlLearning+1)& (0+255),b
 10816                           
 10817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10818                           ; Switch size 1, requested type "simple"
 10819                           ; Number of cases is 1, Range of values is 0 to 0
 10820                           ; switch strategies available:
 10821                           ; Name         Instructions Cycles
 10822                           ; simple_byte            4     3 (average)
 10823                           ;	Chosen strategy is simple_byte
 10824  001F64  51DF               	movf	(??_sm_execute_ControlLearning+1)& (0+255),w,b
 10825  001F66  0A00               	xorlw	0	; case 0
 10826  001F68  A4D8               	btfss	status,2,c
 10827  001F6A  0012               	return	
 10828                           
 10829                           ; BSR set to: 0
 10830                           ; Switch size 1, requested type "simple"
 10831                           ; Number of cases is 6, Range of values is 0 to 5
 10832                           ; switch strategies available:
 10833                           ; Name         Instructions Cycles
 10834                           ; simple_byte           19    10 (average)
 10835                           ;	Chosen strategy is simple_byte
 10836  001F6C  51DE               	movf	??_sm_execute_ControlLearning& (0+255),w,b
 10837  001F6E  0A00               	xorlw	0	; case 0
 10838  001F70  B4D8               	btfsc	status,2,c
 10839  001F72  D570               	goto	l22366
 10840  001F74  0A01               	xorlw	1	; case 1
 10841  001F76  B4D8               	btfsc	status,2,c
 10842  001F78  D5BB               	goto	l22390
 10843  001F7A  0A03               	xorlw	3	; case 2
 10844  001F7C  B4D8               	btfsc	status,2,c
 10845  001F7E  D5FA               	goto	l22424
 10846  001F80  0A01               	xorlw	1	; case 3
 10847  001F82  B4D8               	btfsc	status,2,c
 10848  001F84  D65A               	goto	l22458
 10849  001F86  0A07               	xorlw	7	; case 4
 10850  001F88  B4D8               	btfsc	status,2,c
 10851  001F8A  D6AA               	goto	l22490
 10852  001F8C  0A01               	xorlw	1	; case 5
 10853  001F8E  A4D8               	btfss	status,2,c
 10854  001F90  0012               	return	
 10855  001F92  D72C               	goto	l22546
 10856  001F94                     __end_of_sm_execute_ControlLearning:
 10857                           	callstack 0
 10858                           
 10859 ;; *************** function _generateErrorLearnig *****************
 10860 ;; Defined at:
 10861 ;;		line 424 in file "sm_ControlLearning_MC50.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;		None
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 3E/1
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10879 ;;Total ram usage:        0 bytes
 10880 ;; Hardware stack levels used: 1
 10881 ;; Hardware stack levels required when called: 6
 10882 ;; This function calls:
 10883 ;;		_sm_init
 10884 ;; This function is called by:
 10885 ;;		_sm_execute_ControlLearning
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text19
 10890  00848E                     __ptext19:
 10891                           	callstack 0
 10892  00848E                     _generateErrorLearnig:
 10893                           	callstack 22
 10894                           
 10895                           ;sm_ControlLearning_MC50.c: 428:     var_sys.LearningIsEnabled=NO;
 10896                           
 10897                           ;incstack = 0
 10898  00848E  0E00               	movlw	0
 10899  008490  0101               	movlb	1	; () banked
 10900  008492  6F26               	movwf	(_var_sys+38)& (0+255),b	;volatile
 10901                           
 10902                           ; BSR set to: 1
 10903                           ;sm_ControlLearning_MC50.c: 430:     sm_init(&menuConfiguration_stateMachine,st_MainMenu
      +                          ,HIST_NONE);
 10904  008494  0EBF               	movlw	low _menuConfiguration_stateMachine
 10905  008496  6E12               	movwf	sm_init@psm^0,c
 10906  008498  0E02               	movlw	high _menuConfiguration_stateMachine
 10907  00849A  6E13               	movwf	(sm_init@psm+1)^0,c
 10908  00849C  0E00               	movlw	0
 10909  00849E  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10910  0084A0  0E00               	movlw	0
 10911  0084A2  6E14               	movwf	sm_init@initial_state^0,c
 10912  0084A4  0E00               	movlw	0
 10913  0084A6  6E16               	movwf	sm_init@hist_mode^0,c
 10914  0084A8  ECF1  F043         	call	_sm_init	;wreg free
 10915                           
 10916                           ;sm_ControlLearning_MC50.c: 431:     sm_init(&main_stateMachine,st_standBy,HIST_NONE);
 10917  0084AC  0EEE               	movlw	low _main_stateMachine
 10918  0084AE  6E12               	movwf	sm_init@psm^0,c
 10919  0084B0  0E01               	movlw	high _main_stateMachine
 10920  0084B2  6E13               	movwf	(sm_init@psm+1)^0,c
 10921  0084B4  0E00               	movlw	0
 10922  0084B6  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10923  0084B8  0E00               	movlw	0
 10924  0084BA  6E14               	movwf	sm_init@initial_state^0,c
 10925  0084BC  0E00               	movlw	0
 10926  0084BE  6E16               	movwf	sm_init@hist_mode^0,c
 10927  0084C0  ECF1  F043         	call	_sm_init	;wreg free
 10928                           
 10929                           ;sm_ControlLearning_MC50.c: 432:     sm_init(&controlGate_stateMachine,st_Idle,HIST_NONE
      +                          );
 10930  0084C4  0EE3               	movlw	low _controlGate_stateMachine
 10931  0084C6  6E12               	movwf	sm_init@psm^0,c
 10932  0084C8  0E01               	movlw	high _controlGate_stateMachine
 10933  0084CA  6E13               	movwf	(sm_init@psm+1)^0,c
 10934  0084CC  0E00               	movlw	0
 10935  0084CE  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10936  0084D0  0E00               	movlw	0
 10937  0084D2  6E14               	movwf	sm_init@initial_state^0,c
 10938  0084D4  0E00               	movlw	0
 10939  0084D6  6E16               	movwf	sm_init@hist_mode^0,c
 10940  0084D8  ECF1  F043         	call	_sm_init	;wreg free
 10941                           
 10942                           ;sm_ControlLearning_MC50.c: 433:     sm_init(&controlLearning_stateMachine,st_InitLearni
      +                          ng,HIST_NONE);
 10943  0084DC  0EB4               	movlw	low _controlLearning_stateMachine
 10944  0084DE  6E12               	movwf	sm_init@psm^0,c
 10945  0084E0  0E02               	movlw	high _controlLearning_stateMachine
 10946  0084E2  6E13               	movwf	(sm_init@psm+1)^0,c
 10947  0084E4  0E00               	movlw	0
 10948  0084E6  6E15               	movwf	(sm_init@initial_state+1)^0,c
 10949  0084E8  0E00               	movlw	0
 10950  0084EA  6E14               	movwf	sm_init@initial_state^0,c
 10951  0084EC  0E00               	movlw	0
 10952  0084EE  6E16               	movwf	sm_init@hist_mode^0,c
 10953  0084F0  ECF1  F043         	call	_sm_init	;wreg free
 10954  0084F4  0012               	return		;funcret
 10955  0084F6                     __end_of_generateErrorLearnig:
 10956                           	callstack 0
 10957                           
 10958 ;; *************** function _sm_init *****************
 10959 ;; Defined at:
 10960 ;;		line 12 in file "sm_common_MC50.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  psm             2   17[COMRAM] PTR struct .
 10963 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 10964 ;;  initial_stat    2   19[COMRAM] int 
 10965 ;;  hist_mode       1   21[COMRAM] enum E348
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;		None
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      void 
 10970 ;; Registers used:
 10971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/1
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10977 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10980 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10981 ;;Total ram usage:        5 bytes
 10982 ;; Hardware stack levels used: 1
 10983 ;; Hardware stack levels required when called: 5
 10984 ;; This function calls:
 10985 ;;		_sm_restart
 10986 ;; This function is called by:
 10987 ;;		_main
 10988 ;;		_generateErrorLearnig
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           	psect	text20
 10993  0087E2                     __ptext20:
 10994                           	callstack 0
 10995  0087E2                     _sm_init:
 10996                           	callstack 25
 10997                           
 10998                           ;sm_common_MC50.c: 12: void sm_init(sm_t *psm, int initial_state, sm_history_t hist_mode
      +                          );sm_common_MC50.c: 13: {;sm_common_MC50.c: 14:  psm->initial_state = initial_state;
 10999                           
 11000                           ;incstack = 0
 11001  0087E2  EE20 F002          	lfsr	2,2
 11002  0087E6  5012               	movf	sm_init@psm^0,w,c
 11003  0087E8  26D9               	addwf	fsr2l,f,c
 11004  0087EA  5013               	movf	(sm_init@psm+1)^0,w,c
 11005  0087EC  22DA               	addwfc	fsr2h,f,c
 11006  0087EE  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11007  0087F2  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11008                           
 11009                           ;sm_common_MC50.c: 15:  psm->history = hist_mode;
 11010  0087F6  EE20 F006          	lfsr	2,6
 11011  0087FA  5012               	movf	sm_init@psm^0,w,c
 11012  0087FC  26D9               	addwf	fsr2l,f,c
 11013  0087FE  5013               	movf	(sm_init@psm+1)^0,w,c
 11014  008800  22DA               	addwfc	fsr2h,f,c
 11015  008802  C016  FFDF         	movff	sm_init@hist_mode,indf2
 11016                           
 11017                           ;sm_common_MC50.c: 16:  psm->current_state = initial_state;
 11018  008806  C012  FFD9         	movff	sm_init@psm,fsr2l
 11019  00880A  C013  FFDA         	movff	sm_init@psm+1,fsr2h
 11020  00880E  C014  FFDE         	movff	sm_init@initial_state,postinc2
 11021  008812  C015  FFDD         	movff	sm_init@initial_state+1,postdec2
 11022                           
 11023                           ;sm_common_MC50.c: 19:  psm->parent_machine = ((void*)0);
 11024  008816  EE20 F007          	lfsr	2,7
 11025  00881A  5012               	movf	sm_init@psm^0,w,c
 11026  00881C  26D9               	addwf	fsr2l,f,c
 11027  00881E  5013               	movf	(sm_init@psm+1)^0,w,c
 11028  008820  22DA               	addwfc	fsr2h,f,c
 11029  008822  0E00               	movlw	0
 11030  008824  6EDE               	movwf	postinc2,c
 11031  008826  0E00               	movlw	0
 11032  008828  6EDD               	movwf	postdec2,c
 11033                           
 11034                           ;sm_common_MC50.c: 20:  sm_restart(psm);
 11035  00882A  C012  F010         	movff	sm_init@psm,sm_restart@psm
 11036  00882E  C013  F011         	movff	sm_init@psm+1,sm_restart@psm+1
 11037  008832  ECF6  F045         	call	_sm_restart	;wreg free
 11038  008836  0012               	return		;funcret
 11039  008838                     __end_of_sm_init:
 11040                           	callstack 0
 11041                           
 11042 ;; *************** function _sm_restart *****************
 11043 ;; Defined at:
 11044 ;;		line 23 in file "sm_common_MC50.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  psm             2   15[COMRAM] PTR struct .
 11047 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 11048 ;; Auto vars:     Size  Location     Type
 11049 ;;		None
 11050 ;; Return value:  Size  Location     Type
 11051 ;;                  1    wreg      void 
 11052 ;; Registers used:
 11053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11054 ;; Tracked objects:
 11055 ;;		On entry : 0/1
 11056 ;;		On exit  : 0/0
 11057 ;;		Unchanged: 0/0
 11058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11063 ;;Total ram usage:        2 bytes
 11064 ;; Hardware stack levels used: 1
 11065 ;; Hardware stack levels required when called: 4
 11066 ;; This function calls:
 11067 ;;		Nothing
 11068 ;; This function is called by:
 11069 ;;		_sm_init
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           	psect	text21
 11074  008BEC                     __ptext21:
 11075                           	callstack 0
 11076  008BEC                     _sm_restart:
 11077                           	callstack 25
 11078                           
 11079                           ;sm_common_MC50.c: 24:  if(psm->history == HIST_NONE){
 11080                           
 11081                           ;incstack = 0
 11082  008BEC  EE20 F006          	lfsr	2,6
 11083  008BF0  5010               	movf	sm_restart@psm^0,w,c
 11084  008BF2  26D9               	addwf	fsr2l,f,c
 11085  008BF4  5011               	movf	(sm_restart@psm+1)^0,w,c
 11086  008BF6  22DA               	addwfc	fsr2h,f,c
 11087  008BF8  50DF               	movf	indf2,w,c
 11088  008BFA  A4D8               	btfss	status,2,c
 11089  008BFC  D00E               	goto	l19990
 11090                           
 11091                           ;sm_common_MC50.c: 25:   psm->current_state = psm->initial_state;
 11092  008BFE  EE20 F002          	lfsr	2,2
 11093  008C02  5010               	movf	sm_restart@psm^0,w,c
 11094  008C04  26D9               	addwf	fsr2l,f,c
 11095  008C06  5011               	movf	(sm_restart@psm+1)^0,w,c
 11096  008C08  22DA               	addwfc	fsr2h,f,c
 11097  008C0A  C010  FFE1         	movff	sm_restart@psm,fsr1l
 11098  008C0E  C011  FFE2         	movff	sm_restart@psm+1,fsr1h
 11099  008C12  CFDE FFE6          	movff	postinc2,postinc1
 11100  008C16  CFDD FFE5          	movff	postdec2,postdec1
 11101  008C1A                     l19990:
 11102                           
 11103                           ;sm_common_MC50.c: 27:  psm->last_event = 0;
 11104  008C1A  EE20 F004          	lfsr	2,4
 11105  008C1E  5010               	movf	sm_restart@psm^0,w,c
 11106  008C20  26D9               	addwf	fsr2l,f,c
 11107  008C22  5011               	movf	(sm_restart@psm+1)^0,w,c
 11108  008C24  22DA               	addwfc	fsr2h,f,c
 11109  008C26  0E00               	movlw	0
 11110  008C28  6EDE               	movwf	postinc2,c
 11111  008C2A  0E00               	movlw	0
 11112  008C2C  6EDD               	movwf	postdec2,c
 11113  008C2E  0012               	return		;funcret
 11114  008C30                     __end_of_sm_restart:
 11115                           	callstack 0
 11116                           
 11117 ;; *************** function _clearLearningValue *****************
 11118 ;; Defined at:
 11119 ;;		line 436 in file "sm_ControlLearning_MC50.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;		None
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;		None
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  1    wreg      void 
 11126 ;; Registers used:
 11127 ;;		wreg, status,2
 11128 ;; Tracked objects:
 11129 ;;		On entry : 3F/1
 11130 ;;		On exit  : 3F/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11137 ;;Total ram usage:        0 bytes
 11138 ;; Hardware stack levels used: 1
 11139 ;; Hardware stack levels required when called: 4
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_sm_execute_ControlLearning
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text22
 11148  007F96                     __ptext22:
 11149                           	callstack 0
 11150  007F96                     _clearLearningValue:
 11151                           	callstack 24
 11152                           
 11153                           ; BSR set to: 1
 11154                           ;sm_ControlLearning_MC50.c: 438:     learn_st.timeOpen=0;
 11155                           
 11156                           ;incstack = 0
 11157  007F96  0E00               	movlw	0
 11158  007F98  0100               	movlb	0	; () banked
 11159  007F9A  6F64               	movwf	(_learn_st+4)& (0+255),b	;volatile
 11160  007F9C  0E00               	movlw	0
 11161  007F9E  6F65               	movwf	(_learn_st+5)& (0+255),b	;volatile
 11162  007FA0  0E00               	movlw	0
 11163  007FA2  6F66               	movwf	(_learn_st+6)& (0+255),b	;volatile
 11164  007FA4  0E00               	movlw	0
 11165  007FA6  6F67               	movwf	(_learn_st+7)& (0+255),b	;volatile
 11166                           
 11167                           ;sm_ControlLearning_MC50.c: 439:     learn_st.timeClose=0;
 11168  007FA8  0E00               	movlw	0
 11169  007FAA  6F60               	movwf	_learn_st& (0+255),b	;volatile
 11170  007FAC  0E00               	movlw	0
 11171  007FAE  6F61               	movwf	(_learn_st+1)& (0+255),b	;volatile
 11172  007FB0  0E00               	movlw	0
 11173  007FB2  6F62               	movwf	(_learn_st+2)& (0+255),b	;volatile
 11174  007FB4  0E00               	movlw	0
 11175  007FB6  6F63               	movwf	(_learn_st+3)& (0+255),b	;volatile
 11176                           
 11177                           ;sm_ControlLearning_MC50.c: 440:     learn_st.timeDecelerationOpen=0;
 11178  007FB8  0E00               	movlw	0
 11179  007FBA  6F69               	movwf	(_learn_st+9)& (0+255),b	;volatile
 11180                           
 11181                           ;sm_ControlLearning_MC50.c: 441:     learn_st.timeDecelerationClose=0;
 11182  007FBC  0E00               	movlw	0
 11183  007FBE  6F68               	movwf	(_learn_st+8)& (0+255),b	;volatile
 11184                           
 11185                           ;sm_ControlLearning_MC50.c: 442:     learn_st.openCurrent=0;
 11186  007FC0  0E00               	movlw	0
 11187  007FC2  6F6B               	movwf	(_learn_st+11)& (0+255),b	;volatile
 11188  007FC4  0E00               	movlw	0
 11189  007FC6  6F6A               	movwf	(_learn_st+10)& (0+255),b	;volatile
 11190                           
 11191                           ;sm_ControlLearning_MC50.c: 443:     learn_st.closeCurrent=0;
 11192  007FC8  0E00               	movlw	0
 11193  007FCA  6F6D               	movwf	(_learn_st+13)& (0+255),b	;volatile
 11194  007FCC  0E00               	movlw	0
 11195  007FCE  6F6C               	movwf	(_learn_st+12)& (0+255),b	;volatile
 11196                           
 11197                           ;sm_ControlLearning_MC50.c: 444:     learn_st.openHistCurrent=0;
 11198  007FD0  0E00               	movlw	0
 11199  007FD2  6F6F               	movwf	(_learn_st+15)& (0+255),b	;volatile
 11200  007FD4  0E00               	movlw	0
 11201  007FD6  6F6E               	movwf	(_learn_st+14)& (0+255),b	;volatile
 11202                           
 11203                           ;sm_ControlLearning_MC50.c: 445:     learn_st.closeHistCurrent=0;
 11204  007FD8  0E00               	movlw	0
 11205  007FDA  6F71               	movwf	(_learn_st+17)& (0+255),b	;volatile
 11206  007FDC  0E00               	movlw	0
 11207  007FDE  6F70               	movwf	(_learn_st+16)& (0+255),b	;volatile
 11208                           
 11209                           ;sm_ControlLearning_MC50.c: 446:     var_sys_NVM.learningCurrentNormalClose=0;
 11210  007FE0  0E00               	movlw	0
 11211  007FE2  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 11212  007FE4  0E00               	movlw	0
 11213  007FE6  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 11214                           
 11215                           ;sm_ControlLearning_MC50.c: 447:     var_sys_NVM.learningCurrentNormalOpen=0;
 11216  007FE8  0E00               	movlw	0
 11217  007FEA  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 11218  007FEC  0E00               	movlw	0
 11219  007FEE  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 11220                           
 11221                           ;sm_ControlLearning_MC50.c: 448:     var_sys_NVM.learningCurrentDecelarationClose=0;
 11222  007FF0  0E00               	movlw	0
 11223  007FF2  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 11224  007FF4  0E00               	movlw	0
 11225  007FF6  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 11226  007FF8  0E00               	movlw	0
 11227  007FFA  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 11228  007FFC  0E00               	movlw	0
 11229  007FFE  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 11230                           
 11231                           ;sm_ControlLearning_MC50.c: 449:     var_sys_NVM.learningCurrentDecelarationOpen=0;
 11232  008000  0E00               	movlw	0
 11233  008002  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 11234  008004  0E00               	movlw	0
 11235  008006  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 11236  008008  0E00               	movlw	0
 11237  00800A  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 11238  00800C  0E00               	movlw	0
 11239  00800E  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 11240                           
 11241                           ; BSR set to: 0
 11242  008010  0012               	return		;funcret
 11243  008012                     __end_of_clearLearningValue:
 11244                           	callstack 0
 11245                           
 11246 ;; *************** function _calculateMean *****************
 11247 ;; Defined at:
 11248 ;;		line 411 in file "sm_ControlLearning_MC50.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;  meanValue       4   15[COMRAM] unsigned long 
 11251 ;;  newValue        4   19[COMRAM] unsigned long 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;		None
 11254 ;; Return value:  Size  Location     Type
 11255 ;;                  4   15[COMRAM] unsigned long 
 11256 ;; Registers used:
 11257 ;;		wreg, status,2, status,0
 11258 ;; Tracked objects:
 11259 ;;		On entry : 3E/1
 11260 ;;		On exit  : 3E/0
 11261 ;;		Unchanged: 3E/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11263 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11265 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11266 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11267 ;;Total ram usage:       12 bytes
 11268 ;; Hardware stack levels used: 1
 11269 ;; Hardware stack levels required when called: 4
 11270 ;; This function calls:
 11271 ;;		Nothing
 11272 ;; This function is called by:
 11273 ;;		_sm_execute_ControlLearning
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           	psect	text23
 11278  00855C                     __ptext23:
 11279                           	callstack 0
 11280  00855C                     _calculateMean:
 11281                           	callstack 24
 11282                           
 11283                           ;sm_ControlLearning_MC50.c: 411: unsigned long calculateMean(unsigned long meanValue,uns
      +                          igned long newValue);sm_ControlLearning_MC50.c: 412: {;sm_ControlLearning_MC50.c: 413:  
      +                             if(meanValue==0)
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;incstack = 0
 11287  00855C  5010               	movf	calculateMean@meanValue^0,w,c
 11288  00855E  1011               	iorwf	(calculateMean@meanValue+1)^0,w,c
 11289  008560  1012               	iorwf	(calculateMean@meanValue+2)^0,w,c
 11290  008562  1013               	iorwf	(calculateMean@meanValue+3)^0,w,c
 11291  008564  A4D8               	btfss	status,2,c
 11292  008566  D009               	goto	l20950
 11293                           
 11294                           ;sm_ControlLearning_MC50.c: 414:     {;sm_ControlLearning_MC50.c: 415:         meanValue
      +                          =newValue;
 11295  008568  C014  F010         	movff	calculateMean@newValue,calculateMean@meanValue
 11296  00856C  C015  F011         	movff	calculateMean@newValue+1,calculateMean@meanValue+1
 11297  008570  C016  F012         	movff	calculateMean@newValue+2,calculateMean@meanValue+2
 11298  008574  C017  F013         	movff	calculateMean@newValue+3,calculateMean@meanValue+3
 11299                           
 11300                           ;sm_ControlLearning_MC50.c: 416:     }
 11301  008578  D019               	goto	l20952
 11302  00857A                     l20950:
 11303                           
 11304                           ;sm_ControlLearning_MC50.c: 418:     {;sm_ControlLearning_MC50.c: 419:         meanValue
      +                          =(meanValue+newValue)/2;
 11305  00857A  5014               	movf	calculateMean@newValue^0,w,c
 11306  00857C  2410               	addwf	calculateMean@meanValue^0,w,c
 11307  00857E  6E18               	movwf	??_calculateMean^0,c
 11308  008580  5015               	movf	(calculateMean@newValue+1)^0,w,c
 11309  008582  2011               	addwfc	(calculateMean@meanValue+1)^0,w,c
 11310  008584  6E19               	movwf	(??_calculateMean+1)^0,c
 11311  008586  5016               	movf	(calculateMean@newValue+2)^0,w,c
 11312  008588  2012               	addwfc	(calculateMean@meanValue+2)^0,w,c
 11313  00858A  6E1A               	movwf	(??_calculateMean+2)^0,c
 11314  00858C  5017               	movf	(calculateMean@newValue+3)^0,w,c
 11315  00858E  2013               	addwfc	(calculateMean@meanValue+3)^0,w,c
 11316  008590  6E1B               	movwf	(??_calculateMean+3)^0,c
 11317  008592  90D8               	bcf	status,0,c
 11318  008594  321B               	rrcf	(??_calculateMean+3)^0,f,c
 11319  008596  321A               	rrcf	(??_calculateMean+2)^0,f,c
 11320  008598  3219               	rrcf	(??_calculateMean+1)^0,f,c
 11321  00859A  3218               	rrcf	??_calculateMean^0,f,c
 11322  00859C  C018  F010         	movff	??_calculateMean,calculateMean@meanValue
 11323  0085A0  C019  F011         	movff	??_calculateMean+1,calculateMean@meanValue+1
 11324  0085A4  C01A  F012         	movff	??_calculateMean+2,calculateMean@meanValue+2
 11325  0085A8  C01B  F013         	movff	??_calculateMean+3,calculateMean@meanValue+3
 11326  0085AC                     l20952:
 11327                           
 11328                           ;sm_ControlLearning_MC50.c: 421:     return meanValue;
 11329  0085AC  C010  F010         	movff	calculateMean@meanValue,?_calculateMean
 11330  0085B0  C011  F011         	movff	calculateMean@meanValue+1,?_calculateMean+1
 11331  0085B4  C012  F012         	movff	calculateMean@meanValue+2,?_calculateMean+2
 11332  0085B8  C013  F013         	movff	calculateMean@meanValue+3,?_calculateMean+3
 11333  0085BC  0012               	return		;funcret
 11334  0085BE                     __end_of_calculateMean:
 11335                           	callstack 0
 11336                           
 11337 ;; *************** function _actionZone_Opening *****************
 11338 ;; Defined at:
 11339 ;;		line 374 in file "sm_ControlGate_MC50.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;		None
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;  typeOpenOrde    1   14[BANK0 ] enum E10372
 11344 ;;  securityOpen    1   13[BANK0 ] enum E10397
 11345 ;;  securityClos    1   12[BANK0 ] enum E10397
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      void 
 11348 ;; Registers used:
 11349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 3F/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11358 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11359 ;;Total ram usage:        3 bytes
 11360 ;; Hardware stack levels used: 1
 11361 ;; Hardware stack levels required when called: 8
 11362 ;; This function calls:
 11363 ;;		_CloseOrder
 11364 ;;		_GetOpenOrder
 11365 ;;		_GetSecurityStateInClosing
 11366 ;;		_GetSecurityStateInOpening
 11367 ;;		_InitFullAutoTime
 11368 ;;		_InitWalkAutoTime
 11369 ;;		_SetSegmentValueIntermitent
 11370 ;;		_StopOrder
 11371 ;;		_VerifyFollowMe
 11372 ;;		_controlVelocity
 11373 ;;		_setPositionInvertionInClosing
 11374 ;;		_setPositionInvertionInOpening
 11375 ;;		_sm_send_event
 11376 ;; This function is called by:
 11377 ;;		_sm_execute_ControlGate
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text24
 11382  00498C                     __ptext24:
 11383                           	callstack 0
 11384  00498C                     _actionZone_Opening:
 11385                           	callstack 21
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;sm_ControlGate_MC50.c: 375:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 11389                           
 11390                           ;incstack = 0
 11391  00498C  EC5D  F03B         	call	_GetSecurityStateInClosing	;wreg free
 11392  004990  0100               	movlb	0	; () banked
 11393  004992  6FE4               	movwf	actionZone_Opening@securityClosing& (0+255),b
 11394                           
 11395                           ;sm_ControlGate_MC50.c: 376:     StateEnum securityOpening = GetSecurityStateInOpening()
      +                          ;
 11396  004994  ECB0  F03B         	call	_GetSecurityStateInOpening	;wreg free
 11397  004998  0100               	movlb	0	; () banked
 11398  00499A  6FE5               	movwf	actionZone_Opening@securityOpening& (0+255),b
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;sm_ControlGate_MC50.c: 377:     TypeCMD typeOpenOrder = GetOpenOrder();
 11402  00499C  EC15  F02B         	call	_GetOpenOrder	;wreg free
 11403  0049A0  0100               	movlb	0	; () banked
 11404  0049A2  6FE6               	movwf	actionZone_Opening@typeOpenOrder& (0+255),b
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;sm_ControlGate_MC50.c: 380:     controlVelocity();
 11408  0049A4  EC26  F028         	call	_controlVelocity	;wreg free
 11409                           
 11410                           ;sm_ControlGate_MC50.c: 381:     InitFullAutoTime();
 11411  0049A8  EC10  F04A         	call	_InitFullAutoTime	;wreg free
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;sm_ControlGate_MC50.c: 383:     var_sys.passoAPassoAutoClose = NO;
 11415  0049AC  0E00               	movlw	0
 11416  0049AE  0101               	movlb	1	; () banked
 11417  0049B0  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11418                           
 11419                           ; BSR set to: 1
 11420                           ;sm_ControlGate_MC50.c: 385:     VerifyFollowMe(securityClosing);
 11421  0049B2  0100               	movlb	0	; () banked
 11422  0049B4  51E4               	movf	actionZone_Opening@securityClosing& (0+255),w,b
 11423  0049B6  EC68  F049         	call	_VerifyFollowMe
 11424                           
 11425                           ;sm_ControlGate_MC50.c: 386:     if (var_sys.NumberOffErrors > 3) {
 11426  0049BA  0E03               	movlw	3
 11427  0049BC  0101               	movlb	1	; () banked
 11428  0049BE  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 11429  0049C0  D00D               	goto	l21822
 11430                           
 11431                           ; BSR set to: 1
 11432                           ;sm_ControlGate_MC50.c: 388:         var_sys.StateMotor = Stopped;
 11433  0049C2  0E00               	movlw	0
 11434  0049C4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11435  0049C6                     l21820:
 11436                           
 11437                           ; BSR set to: 1
 11438                           ;sm_ControlGate_MC50.c: 389:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 11439  0049C6  0EE3               	movlw	low _controlGate_stateMachine
 11440  0049C8  6E12               	movwf	sm_send_event@psm^0,c
 11441  0049CA  0E01               	movlw	high _controlGate_stateMachine
 11442  0049CC  6E13               	movwf	(sm_send_event@psm+1)^0,c
 11443  0049CE  0E00               	movlw	0
 11444  0049D0  6E15               	movwf	(sm_send_event@event+1)^0,c
 11445  0049D2  0E10               	movlw	16
 11446  0049D4  6E14               	movwf	sm_send_event@event^0,c
 11447  0049D6  EC0E  F043         	call	_sm_send_event	;wreg free
 11448                           
 11449                           ;sm_ControlGate_MC50.c: 390:     } else if (var_sys.StateMotor == InOpenWalk && ts_syste
      +                          m.timeOpenWalk <= 0)
 11450  0049DA  0012               	return	
 11451  0049DC                     l21822:
 11452                           
 11453                           ; BSR set to: 1
 11454  0049DC  0E02               	movlw	2
 11455  0049DE  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11456  0049E0  A4D8               	btfss	status,2,c
 11457  0049E2  D013               	goto	l21836
 11458                           
 11459                           ; BSR set to: 1
 11460  0049E4  BFAC               	btfsc	(_ts_system+17)& (0+255),7,b	;volatile
 11461  0049E6  D005               	goto	u25320
 11462  0049E8  51AC               	movf	(_ts_system+17)& (0+255),w,b	;volatile
 11463  0049EA  E10F               	bnz	l21836
 11464  0049EC  05AB               	decf	(_ts_system+16)& (0+255),w,b	;volatile
 11465  0049EE  B0D8               	btfsc	status,0,c
 11466  0049F0  D00C               	goto	l21836
 11467  0049F2                     u25320:
 11468                           
 11469                           ; BSR set to: 1
 11470                           ;sm_ControlGate_MC50.c: 391:     {;sm_ControlGate_MC50.c: 396:         setPositionInvert
      +                          ionInOpening();
 11471  0049F2  ECB9  F038         	call	_setPositionInvertionInOpening	;wreg free
 11472                           
 11473                           ; BSR set to: 1
 11474                           ;sm_ControlGate_MC50.c: 397:         StopOrder();
 11475  0049F6  ECBE  F049         	call	_StopOrder	;wreg free
 11476                           
 11477                           ;sm_ControlGate_MC50.c: 398:         InitWalkAutoTime();
 11478  0049FA  EC95  F04A         	call	_InitWalkAutoTime	;wreg free
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;sm_ControlGate_MC50.c: 399:         var_sys.passoAPassoAutoClose = YES;
 11482  0049FE  0E01               	movlw	1
 11483  004A00  0101               	movlb	1	; () banked
 11484  004A02  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11485                           
 11486                           ; BSR set to: 1
 11487                           ;sm_ControlGate_MC50.c: 400:         Abertura_pedonal = 1;
 11488  004A04  0E01               	movlw	1
 11489  004A06  6F8E               	movwf	_Abertura_pedonal& (0+255),b
 11490                           
 11491                           ;sm_ControlGate_MC50.c: 402:     } else if ((var_sys.FimCurso_OpenIsEnabled == YES)||(va
      +                          r_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost
      +                          ==NO) && (var_sys.Statedoorcontrol == st_Opening))
 11492  004A08  0012               	return	
 11493  004A0A                     l21836:
 11494                           
 11495                           ; BSR set to: 1
 11496  004A0A  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 11497  004A0C  B4D8               	btfsc	status,2,c
 11498  004A0E  D010               	goto	u25370
 11499                           
 11500                           ; BSR set to: 1
 11501  004A10  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 11502  004A12  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 11503  004A14  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 11504  004A16  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 11505  004A18  A4D8               	btfss	status,2,c
 11506  004A1A  D02F               	goto	l21856
 11507                           
 11508                           ; BSR set to: 1
 11509  004A1C  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 11510  004A1E  A4D8               	btfss	status,2,c
 11511  004A20  D02C               	goto	l21856
 11512                           
 11513                           ; BSR set to: 1
 11514  004A22  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 11515  004A24  A4D8               	btfss	status,2,c
 11516  004A26  D029               	goto	l21856
 11517                           
 11518                           ; BSR set to: 1
 11519  004A28  0E02               	movlw	2
 11520  004A2A  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 11521  004A2C  A4D8               	btfss	status,2,c
 11522  004A2E  D025               	goto	l21856
 11523  004A30                     u25370:
 11524                           
 11525                           ; BSR set to: 1
 11526                           ;sm_ControlGate_MC50.c: 403:     {;sm_ControlGate_MC50.c: 408:         var_sys.Statedoor
      +                          control = st_Opened;
 11527  004A30  0E04               	movlw	4
 11528  004A32  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 11529                           
 11530                           ; BSR set to: 1
 11531                           ;sm_ControlGate_MC50.c: 409:         var_sys.PositionActual = var_sys_NVM.learningTimeTo
      +                          Close;
 11532  004A34  C0D0  F11E         	movff	_var_sys_NVM+56,_var_sys+30	;volatile
 11533  004A38  C0D1  F11F         	movff	_var_sys_NVM+57,_var_sys+31	;volatile
 11534  004A3C  C0D2  F120         	movff	_var_sys_NVM+58,_var_sys+32	;volatile
 11535  004A40  C0D3  F121         	movff	_var_sys_NVM+59,_var_sys+33	;volatile
 11536                           
 11537                           ;sm_ControlGate_MC50.c: 410:         var_sys.AutoInversionActiveStop = NO;
 11538  004A44  0E00               	movlw	0
 11539  004A46  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 11540                           
 11541                           ;sm_ControlGate_MC50.c: 411:         var_sys.PositionIsLost = NO;
 11542  004A48  0E00               	movlw	0
 11543  004A4A  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 11544                           
 11545                           ;sm_ControlGate_MC50.c: 412:         var_sys.DigitSinalizedTemp = 1;
 11546  004A4C  0E01               	movlw	1
 11547  004A4E  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 11548                           
 11549                           ;sm_ControlGate_MC50.c: 413:         var_sys.NumberOffErrors = 0;
 11550  004A50  0E00               	movlw	0
 11551  004A52  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 11552                           
 11553                           ;sm_ControlGate_MC50.c: 414:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 11554  004A54  0E00               	movlw	0
 11555  004A56  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 11556  004A58  0E28               	movlw	40
 11557  004A5A  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 11558                           
 11559                           ; BSR set to: 1
 11560                           ;sm_ControlGate_MC50.c: 415:         SetSegmentValueIntermitent(dF, d0, ( 200/50));
 11561  004A5C  0E00               	movlw	0
 11562  004A5E  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 11563  004A60  0E00               	movlw	0
 11564  004A62  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 11565  004A64  0E04               	movlw	4
 11566  004A66  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 11567  004A68  0E0F               	movlw	15
 11568  004A6A  ECAD  F047         	call	_SetSegmentValueIntermitent
 11569                           
 11570                           ; BSR set to: 1
 11571                           ;sm_ControlGate_MC50.c: 416:         StopOrder();
 11572  004A6E  ECBE  F049         	call	_StopOrder	;wreg free
 11573                           
 11574                           ;sm_ControlGate_MC50.c: 417:         var_sys.passoAPassoAutoClose = YES;
 11575  004A72  0E01               	movlw	1
 11576  004A74  0101               	movlb	1	; () banked
 11577  004A76  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 11578                           
 11579                           ;sm_ControlGate_MC50.c: 419:     }
 11580  004A78  0012               	return	
 11581  004A7A                     l21856:
 11582                           
 11583                           ; BSR set to: 1
 11584  004A7A  0100               	movlb	0	; () banked
 11585  004A7C  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11586  004A7E  B4D8               	btfsc	status,2,c
 11587  004A80  D012               	goto	u25410
 11588                           
 11589                           ; BSR set to: 0
 11590  004A82  0101               	movlb	1	; () banked
 11591  004A84  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11592  004A86  D025               	goto	l21876
 11593  004A88  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11594  004A8A  E103               	bnz	u25390
 11595  004A8C  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11596  004A8E  A0D8               	btfss	status,0,c
 11597  004A90  D020               	goto	l21876
 11598  004A92                     u25390:
 11599                           
 11600                           ; BSR set to: 1
 11601  004A92  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 11602  004A94  A4D8               	btfss	status,2,c
 11603  004A96  D01D               	goto	l21876
 11604                           
 11605                           ; BSR set to: 1
 11606  004A98  BFCC               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 11607  004A9A  D005               	goto	u25410
 11608  004A9C  51CC               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 11609  004A9E  E119               	bnz	l21876
 11610  004AA0  05CB               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 11611  004AA2  B0D8               	btfsc	status,0,c
 11612  004AA4  D016               	goto	l21876
 11613  004AA6                     u25410:
 11614  004AA6  0101               	movlb	1	; () banked
 11615  004AA8  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 11616  004AAA  A4D8               	btfss	status,2,c
 11617  004AAC  D012               	goto	l21876
 11618                           
 11619                           ; BSR set to: 1
 11620                           ;sm_ControlGate_MC50.c: 422:         if (securityOpening != YES){
 11621  004AAE  0100               	movlb	0	; () banked
 11622  004AB0  05E5               	decf	actionZone_Opening@securityOpening& (0+255),w,b
 11623  004AB2  B4D8               	btfsc	status,2,c
 11624  004AB4  D002               	goto	l21870
 11625                           
 11626                           ; BSR set to: 0
 11627                           ;sm_ControlGate_MC50.c: 423:              var_sys.NumberOffErrors++;
 11628  004AB6  0101               	movlb	1	; () banked
 11629  004AB8  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11630  004ABA                     l21870:
 11631                           
 11632                           ;sm_ControlGate_MC50.c: 426:         var_sys.AutoInversionActive = YES;
 11633  004ABA  0E01               	movlw	1
 11634  004ABC  0101               	movlb	1	; () banked
 11635  004ABE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11636                           
 11637                           ; BSR set to: 1
 11638                           ;sm_ControlGate_MC50.c: 427:         ts_system.TimeWaitToNextState = ( 500/50);
 11639  004AC0  0E00               	movlw	0
 11640  004AC2  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 11641  004AC4  0E0A               	movlw	10
 11642  004AC6  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 11643                           
 11644                           ; BSR set to: 1
 11645                           ;sm_ControlGate_MC50.c: 428:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 11646  004AC8  0E00               	movlw	0
 11647  004ACA  6FDC               	movwf	(_ts_system+65)& (0+255),b	;volatile
 11648  004ACC  0E1E               	movlw	30
 11649  004ACE  6FDB               	movwf	(_ts_system+64)& (0+255),b	;volatile
 11650                           
 11651                           ;sm_ControlGate_MC50.c: 430:     }
 11652  004AD0  0012               	return	
 11653  004AD2                     l21876:
 11654                           
 11655                           ; BSR set to: 1
 11656  004AD2  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 11657  004AD4  D02D               	goto	l21906
 11658  004AD6  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 11659  004AD8  E103               	bnz	u25440
 11660  004ADA  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 11661  004ADC  A0D8               	btfss	status,0,c
 11662  004ADE  D028               	goto	l21906
 11663  004AE0                     u25440:
 11664                           
 11665                           ; BSR set to: 1
 11666  004AE0  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11667  004AE2  A4D8               	btfss	status,2,c
 11668  004AE4  D025               	goto	l21906
 11669                           
 11670                           ; BSR set to: 1
 11671                           ;sm_ControlGate_MC50.c: 432:         if (var_sys.InvertionCurrentClosing == YES) {
 11672  004AE6  0544               	decf	(_var_sys+68)& (0+255),w,b	;volatile
 11673  004AE8  A4D8               	btfss	status,2,c
 11674  004AEA  D005               	goto	l21888
 11675                           
 11676                           ; BSR set to: 1
 11677                           ;sm_ControlGate_MC50.c: 434:             var_sys.StateMotor = Stopped;
 11678  004AEC  0E00               	movlw	0
 11679  004AEE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11680                           
 11681                           ; BSR set to: 1
 11682                           ;sm_ControlGate_MC50.c: 435:             setPositionInvertionInClosing();
 11683  004AF0  EC12  F034         	call	_setPositionInvertionInClosing	;wreg free
 11684  004AF4  D768               	goto	l21820
 11685  004AF6                     l21888:
 11686                           
 11687                           ; BSR set to: 1
 11688  004AF6  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11689  004AF8  D005               	goto	u25470
 11690  004AFA  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11691  004AFC  E116               	bnz	l21904
 11692  004AFE  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11693  004B00  B0D8               	btfsc	status,0,c
 11694  004B02  D013               	goto	l21904
 11695  004B04                     u25470:
 11696                           
 11697                           ; BSR set to: 1
 11698                           ;sm_ControlGate_MC50.c: 438:             CloseOrder();
 11699  004B04  EC09  F049         	call	_CloseOrder	;wreg free
 11700                           
 11701                           ;sm_ControlGate_MC50.c: 440:             setPositionInvertionInOpening();
 11702  004B08  ECB9  F038         	call	_setPositionInvertionInOpening	;wreg free
 11703                           
 11704                           ; BSR set to: 1
 11705                           ;sm_ControlGate_MC50.c: 441:             var_sys.AutoInversionActive = NO;
 11706  004B0C  0E00               	movlw	0
 11707  004B0E  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 11708                           
 11709                           ; BSR set to: 1
 11710                           ;sm_ControlGate_MC50.c: 442:             var_sys.InvertionCurrentOpening = YES;
 11711  004B10  0E01               	movlw	1
 11712  004B12  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 11713                           
 11714                           ; BSR set to: 1
 11715                           ;sm_ControlGate_MC50.c: 443:             ts_system.TimeInversionStart = (1000/50);
 11716  004B14  0E00               	movlw	0
 11717  004B16  6FCC               	movwf	(_ts_system+49)& (0+255),b	;volatile
 11718  004B18  0E14               	movlw	20
 11719  004B1A  6FCB               	movwf	(_ts_system+48)& (0+255),b	;volatile
 11720                           
 11721                           ; BSR set to: 1
 11722                           ;sm_ControlGate_MC50.c: 444:             ts_system.InvertionTimeClosingFromOpen = (1000/
      +                          50) * 2;
 11723  004B1C  0E00               	movlw	0
 11724  004B1E  6FCE               	movwf	(_ts_system+51)& (0+255),b	;volatile
 11725  004B20  0E28               	movlw	40
 11726  004B22  6FCD               	movwf	(_ts_system+50)& (0+255),b	;volatile
 11727                           
 11728                           ; BSR set to: 1
 11729                           ;sm_ControlGate_MC50.c: 445:             var_sys.InvertionClosingFromOpen = YES;
 11730  004B24  0E01               	movlw	1
 11731  004B26  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 11732                           
 11733                           ;sm_ControlGate_MC50.c: 449:         } else
 11734  004B28  0012               	return	
 11735  004B2A                     l21904:
 11736                           
 11737                           ; BSR set to: 1
 11738                           ;sm_ControlGate_MC50.c: 450:         {;sm_ControlGate_MC50.c: 451:             var_sys.S
      +                          tateMotor = Stopped;
 11739  004B2A  0E00               	movlw	0
 11740  004B2C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11741  004B2E  0012               	return	
 11742  004B30                     l21906:
 11743                           
 11744                           ; BSR set to: 1
 11745  004B30  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 11746  004B32  A4D8               	btfss	status,2,c
 11747  004B34  D00A               	goto	l21926
 11748                           
 11749                           ; BSR set to: 1
 11750                           ;sm_ControlGate_MC50.c: 457:                 var_sys.StateMotor = Stopped;
 11751  004B36  0E00               	movlw	0
 11752  004B38  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11753                           
 11754                           ; BSR set to: 1
 11755                           ;sm_ControlGate_MC50.c: 460:         if (ts_system.TimeWaitToNextState <= 0) {
 11756  004B3A  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11757  004B3C  D7E3               	goto	u25470
 11758  004B3E  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11759  004B40  E14E               	bnz	l2718
 11760  004B42  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11761  004B44  B0D8               	btfsc	status,0,c
 11762  004B46  0012               	return	
 11763  004B48  D7DD               	goto	u25470
 11764  004B4A                     l21926:
 11765                           
 11766                           ; BSR set to: 1
 11767  004B4A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 11768  004B4C  A4D8               	btfss	status,2,c
 11769  004B4E  D018               	goto	l21944
 11770                           
 11771                           ; BSR set to: 1
 11772  004B50  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 11773  004B52  D005               	goto	u25510
 11774  004B54  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 11775  004B56  E114               	bnz	l21944
 11776  004B58  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 11777  004B5A  B0D8               	btfsc	status,0,c
 11778  004B5C  D011               	goto	l21944
 11779  004B5E                     u25510:
 11780                           
 11781                           ; BSR set to: 1
 11782                           ;sm_ControlGate_MC50.c: 479:       if(securityOpening != ST){
 11783  004B5E  0E02               	movlw	2
 11784  004B60  0100               	movlb	0	; () banked
 11785  004B62  19E5               	xorwf	actionZone_Opening@securityOpening& (0+255),w,b
 11786  004B64  B4D8               	btfsc	status,2,c
 11787  004B66  D007               	goto	l21940
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;sm_ControlGate_MC50.c: 480:         var_sys.NumberOffErrors++;
 11791  004B68  0101               	movlb	1	; () banked
 11792  004B6A  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 11793                           
 11794                           ; BSR set to: 1
 11795                           ;sm_ControlGate_MC50.c: 482:         var_sys.StateMotor = Stopped;
 11796  004B6C  0E00               	movlw	0
 11797  004B6E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;sm_ControlGate_MC50.c: 483:         setPositionInvertionInOpening();
 11801  004B70  ECB9  F038         	call	_setPositionInvertionInOpening	;wreg free
 11802  004B74  D728               	goto	l21820
 11803  004B76                     l21940:
 11804                           
 11805                           ; BSR set to: 0
 11806                           ;sm_ControlGate_MC50.c: 486:           setPositionInvertionInOpening();
 11807  004B76  ECB9  F038         	call	_setPositionInvertionInOpening	;wreg free
 11808  004B7A                     l21942:
 11809                           
 11810                           ;sm_ControlGate_MC50.c: 487:           StopOrder();
 11811  004B7A  ECBE  F049         	call	_StopOrder	;wreg free
 11812  004B7E  0012               	return	
 11813  004B80                     l21944:
 11814                           
 11815                           ; BSR set to: 1
 11816  004B80  0100               	movlb	0	; () banked
 11817  004B82  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 11818  004B84  A4D8               	btfss	status,2,c
 11819  004B86  D005               	goto	l21950
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;sm_ControlGate_MC50.c: 492:         if (typeOpenOrder != TypeFullOpen) {
 11823  004B88  0E03               	movlw	3
 11824  004B8A  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11825  004B8C  B4D8               	btfsc	status,2,c
 11826  004B8E  0012               	return	
 11827  004B90  D7F4               	goto	l21942
 11828  004B92                     l21950:
 11829                           
 11830                           ; BSR set to: 0
 11831  004B92  0E02               	movlw	2
 11832  004B94  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11833  004B96  A4D8               	btfss	status,2,c
 11834  004B98  D011               	goto	l21962
 11835                           
 11836                           ; BSR set to: 0
 11837  004B9A  0E02               	movlw	2
 11838  004B9C  0101               	movlb	1	; () banked
 11839  004B9E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 11840  004BA0  A4D8               	btfss	status,2,c
 11841  004BA2  D00C               	goto	l21962
 11842                           
 11843                           ; BSR set to: 1
 11844  004BA4  0E02               	movlw	2
 11845  004BA6  0100               	movlb	0	; () banked
 11846  004BA8  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11847  004BAA  B4D8               	btfsc	status,2,c
 11848  004BAC  D007               	goto	l21962
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;sm_ControlGate_MC50.c: 502:         setPositionInvertionInOpening();
 11852  004BAE  ECB9  F038         	call	_setPositionInvertionInOpening	;wreg free
 11853                           
 11854                           ; BSR set to: 1
 11855                           ;sm_ControlGate_MC50.c: 503:         StopOrder();
 11856  004BB2  ECBE  F049         	call	_StopOrder	;wreg free
 11857                           
 11858                           ;sm_ControlGate_MC50.c: 504:         InitWalkAutoTime();
 11859  004BB6  EC95  F04A         	call	_InitWalkAutoTime	;wreg free
 11860                           
 11861                           ;sm_ControlGate_MC50.c: 505:     } else if ((typeOpenOrder == TypeFull || typeOpenOrder 
      +                          == TypeFullOpen || typeOpenOrder == TypeFullClose) && var_sys_NVM.operationMode != ModoC
      +                          ondominio) {
 11862  004BBA  0012               	return	
 11863  004BBC                     l21962:
 11864  004BBC  0100               	movlb	0	; () banked
 11865  004BBE  05E6               	decf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11866  004BC0  B4D8               	btfsc	status,2,c
 11867  004BC2  D008               	goto	u25600
 11868                           
 11869                           ; BSR set to: 0
 11870  004BC4  0E03               	movlw	3
 11871  004BC6  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11872  004BC8  B4D8               	btfsc	status,2,c
 11873  004BCA  D004               	goto	u25600
 11874                           
 11875                           ; BSR set to: 0
 11876  004BCC  0E04               	movlw	4
 11877  004BCE  19E6               	xorwf	actionZone_Opening@typeOpenOrder& (0+255),w,b
 11878  004BD0  A4D8               	btfss	status,2,c
 11879  004BD2  0012               	return	
 11880  004BD4                     u25600:
 11881                           
 11882                           ; BSR set to: 0
 11883  004BD4  0E02               	movlw	2
 11884  004BD6  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 11885  004BD8  B4D8               	btfsc	status,2,c
 11886  004BDA  0012               	return	
 11887  004BDC  D7CC               	goto	l21940
 11888  004BDE                     l2718:
 11889  004BDE  0012               	return		;funcret
 11890  004BE0                     __end_of_actionZone_Opening:
 11891                           	callstack 0
 11892                           
 11893 ;; *************** function _setPositionInvertionInOpening *****************
 11894 ;; Defined at:
 11895 ;;		line 894 in file "sm_ControlGate_MC50.c"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;		None
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;		None
 11900 ;; Return value:  Size  Location     Type
 11901 ;;                  1    wreg      void 
 11902 ;; Registers used:
 11903 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11904 ;; Tracked objects:
 11905 ;;		On entry : 3E/1
 11906 ;;		On exit  : 3F/1
 11907 ;;		Unchanged: 0/0
 11908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11911 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11912 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11913 ;;Total ram usage:        8 bytes
 11914 ;; Hardware stack levels used: 1
 11915 ;; Hardware stack levels required when called: 6
 11916 ;; This function calls:
 11917 ;;		_getTimeDecelaration
 11918 ;; This function is called by:
 11919 ;;		_actionZone_Opening
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text25
 11924  007172                     __ptext25:
 11925                           	callstack 0
 11926  007172                     _setPositionInvertionInOpening:
 11927                           	callstack 22
 11928                           
 11929                           ;sm_ControlGate_MC50.c: 896:     if(var_sys_NVM.TypeofMotor != 2){
 11930                           
 11931                           ;incstack = 0
 11932  007172  0E02               	movlw	2
 11933  007174  0100               	movlb	0	; () banked
 11934  007176  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 11935  007178  B4D8               	btfsc	status,2,c
 11936  00717A  D009               	goto	l20902
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;sm_ControlGate_MC50.c: 897:        var_sys.PositionActual -= ( 100/50);
 11940  00717C  0EFE               	movlw	254
 11941  00717E  0101               	movlb	1	; () banked
 11942  007180  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 11943  007182  0EFF               	movlw	255
 11944  007184  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 11945  007186  0EFF               	movlw	255
 11946  007188  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 11947  00718A  0EFF               	movlw	255
 11948  00718C  D006               	goto	L69
 11949  00718E                     l20902:
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;sm_ControlGate_MC50.c: 901:          var_sys.PositionActual += ( 50/50);
 11953  00718E  0E01               	movlw	1
 11954  007190  0101               	movlb	1	; () banked
 11955  007192  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 11956  007194  0E00               	movlw	0
 11957  007196  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 11958  007198  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 11959  00719A                     L69:
 11960  00719A  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 11961                           
 11962                           ; BSR set to: 1
 11963                           ;sm_ControlGate_MC50.c: 906:     if (var_sys.PositionActual < getTimeDecelaration(InClos
      +                          e)) {
 11964  00719C  0E03               	movlw	3
 11965  00719E  EC45  F038         	call	_getTimeDecelaration
 11966  0071A2  5029               	movf	?_getTimeDecelaration^0,w,c
 11967  0071A4  0101               	movlb	1	; () banked
 11968  0071A6  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 11969  0071A8  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 11970  0071AA  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 11971  0071AC  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 11972  0071AE  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 11973  0071B0  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 11974  0071B2  0A80               	xorlw	128
 11975  0071B4  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 11976  0071B6  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 11977  0071B8  0A80               	xorlw	128
 11978  0071BA  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 11979  0071BC  B0D8               	btfsc	status,0,c
 11980  0071BE  D004               	goto	l20908
 11981                           
 11982                           ; BSR set to: 1
 11983                           ;sm_ControlGate_MC50.c: 907:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 11984  0071C0  0E03               	movlw	3
 11985  0071C2  EC45  F038         	call	_getTimeDecelaration
 11986  0071C6  D015               	goto	L70
 11987  0071C8                     l20908:
 11988                           
 11989                           ; BSR set to: 1
 11990  0071C8  0E01               	movlw	1
 11991  0071CA  EC45  F038         	call	_getTimeDecelaration
 11992  0071CE  0101               	movlb	1	; () banked
 11993  0071D0  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 11994  0071D2  5C29               	subwf	?_getTimeDecelaration^0,w,c
 11995  0071D4  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 11996  0071D6  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 11997  0071D8  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 11998  0071DA  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 11999  0071DC  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12000  0071DE  0A80               	xorlw	128
 12001  0071E0  6E32               	movwf	??_setPositionInvertionInOpening^0,c
 12002  0071E2  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12003  0071E4  0A80               	xorlw	128
 12004  0071E6  5832               	subwfb	??_setPositionInvertionInOpening^0,w,c
 12005  0071E8  B0D8               	btfsc	status,0,c
 12006  0071EA  D00B               	goto	l20912
 12007                           
 12008                           ; BSR set to: 1
 12009                           ;sm_ControlGate_MC50.c: 909:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 12010  0071EC  0E01               	movlw	1
 12011  0071EE  EC45  F038         	call	_getTimeDecelaration
 12012  0071F2                     L70:
 12013  0071F2  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 12014  0071F6  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 12015  0071FA  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 12016  0071FE  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 12017  007202                     l20912:
 12018                           
 12019                           ;sm_ControlGate_MC50.c: 911:     var_sys.TimeMaxMotorIsON = var_sys.PositionActual + var
      +                          _sys_NVM.decelarationClose*( 500/50) + (1000/50)*10;
 12020  007202  0100               	movlb	0	; () banked
 12021  007204  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12022  007206  0D0A               	mullw	10
 12023  007208  CFF3 F032          	movff	prodl,??_setPositionInvertionInOpening
 12024  00720C  CFF4 F033          	movff	prodh,??_setPositionInvertionInOpening+1
 12025  007210  0E00               	movlw	0
 12026  007212  BE33               	btfsc	(??_setPositionInvertionInOpening+1)^0,7,c
 12027  007214  0EFF               	movlw	255
 12028  007216  6E34               	movwf	(??_setPositionInvertionInOpening+2)^0,c
 12029  007218  6E35               	movwf	(??_setPositionInvertionInOpening+3)^0,c
 12030  00721A  0101               	movlb	1	; () banked
 12031  00721C  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12032  00721E  2432               	addwf	??_setPositionInvertionInOpening^0,w,c
 12033  007220  6E36               	movwf	(??_setPositionInvertionInOpening+4)^0,c
 12034  007222  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12035  007224  2033               	addwfc	(??_setPositionInvertionInOpening+1)^0,w,c
 12036  007226  6E37               	movwf	(??_setPositionInvertionInOpening+5)^0,c
 12037  007228  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12038  00722A  2034               	addwfc	(??_setPositionInvertionInOpening+2)^0,w,c
 12039  00722C  6E38               	movwf	(??_setPositionInvertionInOpening+6)^0,c
 12040  00722E  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12041  007230  2035               	addwfc	(??_setPositionInvertionInOpening+3)^0,w,c
 12042  007232  6E39               	movwf	(??_setPositionInvertionInOpening+7)^0,c
 12043  007234  0EC8               	movlw	200
 12044  007236  2436               	addwf	(??_setPositionInvertionInOpening+4)^0,w,c
 12045  007238  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 12046  00723A  0E00               	movlw	0
 12047  00723C  2037               	addwfc	(??_setPositionInvertionInOpening+5)^0,w,c
 12048  00723E  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 12049  007240  0E00               	movlw	0
 12050  007242  2038               	addwfc	(??_setPositionInvertionInOpening+6)^0,w,c
 12051  007244  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 12052  007246  0E00               	movlw	0
 12053  007248  2039               	addwfc	(??_setPositionInvertionInOpening+7)^0,w,c
 12054  00724A  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 12055                           
 12056                           ; BSR set to: 1
 12057  00724C  0012               	return		;funcret
 12058  00724E                     __end_of_setPositionInvertionInOpening:
 12059                           	callstack 0
 12060                           
 12061 ;; *************** function _controlVelocity *****************
 12062 ;; Defined at:
 12063 ;;		line 527 in file "outputs_MC50.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;		None
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;		None
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  1    wreg      void 
 12070 ;; Registers used:
 12071 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12072 ;; Tracked objects:
 12073 ;;		On entry : 3E/1
 12074 ;;		On exit  : 3E/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12079 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12080 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12081 ;;Total ram usage:        1 bytes
 12082 ;; Hardware stack levels used: 1
 12083 ;; Hardware stack levels required when called: 7
 12084 ;; This function calls:
 12085 ;;		_ControlDecelarationFactor
 12086 ;;		_InitSoftStop
 12087 ;;		_getStateOpenPosition
 12088 ;;		_getTimeDecelaration
 12089 ;; This function is called by:
 12090 ;;		_main
 12091 ;;		_actionZone_Opening
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text26
 12096  00504C                     __ptext26:
 12097                           	callstack 0
 12098  00504C                     _controlVelocity:
 12099                           	callstack 21
 12100                           
 12101                           ;outputs_MC50.c: 531:     if(var_sys.LearningIsEnabled==YES && var_sys.LearningDecelarat
      +                          ion==YES)
 12102                           
 12103                           ; BSR set to: 1
 12104                           ;incstack = 0
 12105  00504C  0101               	movlb	1	; () banked
 12106  00504E  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12107  005050  A4D8               	btfss	status,2,c
 12108  005052  D017               	goto	l20714
 12109                           
 12110                           ; BSR set to: 1
 12111  005054  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 12112  005056  A4D8               	btfss	status,2,c
 12113  005058  D014               	goto	l20714
 12114                           
 12115                           ; BSR set to: 1
 12116                           ;outputs_MC50.c: 532:     {;outputs_MC50.c: 533:         if(powerControl_st.decelaration
      +                          Active==NO)
 12117  00505A  517B               	movf	_powerControl_st& (0+255),w,b
 12118  00505C  A4D8               	btfss	status,2,c
 12119  00505E  D008               	goto	l20708
 12120                           
 12121                           ; BSR set to: 1
 12122                           ;outputs_MC50.c: 534:         {;outputs_MC50.c: 535:             ts_system.TimeStopedBef
      +                          oreDecelaration=( 500/50);
 12123  005060  0E00               	movlw	0
 12124  005062  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12125  005064  0E0A               	movlw	10
 12126  005066  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12127                           
 12128                           ;outputs_MC50.c: 536:             ts_system.TimeCurrentWaitForAlarm=(1000/50);
 12129  005068  0E00               	movlw	0
 12130  00506A  6FCA               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12131  00506C  0E14               	movlw	20
 12132  00506E  6FC9               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12133  005070                     l20708:
 12134                           
 12135                           ; BSR set to: 1
 12136                           ;outputs_MC50.c: 538:         ControlDecelarationFactor();
 12137  005070  EC37  F04A         	call	_ControlDecelarationFactor	;wreg free
 12138                           
 12139                           ; BSR set to: 1
 12140                           ;outputs_MC50.c: 539:         powerControl_st.decelarationActive=YES;
 12141  005074  0E01               	movlw	1
 12142  005076  6F7B               	movwf	_powerControl_st& (0+255),b
 12143                           
 12144                           ; BSR set to: 1
 12145                           ;outputs_MC50.c: 540:         var_sys.velocityFactor=0;
 12146  005078  0E00               	movlw	0
 12147  00507A  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12148  00507C  0E00               	movlw	0
 12149  00507E  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12150                           
 12151                           ;outputs_MC50.c: 541:     }
 12152  005080  0012               	return	
 12153  005082                     l20714:
 12154                           
 12155                           ; BSR set to: 1
 12156  005082  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 12157  005084  B4D8               	btfsc	status,2,c
 12158  005086  D003               	goto	u23860
 12159                           
 12160                           ; BSR set to: 1
 12161  005088  0509               	decf	(_var_sys+9)& (0+255),w,b	;volatile
 12162  00508A  A4D8               	btfss	status,2,c
 12163  00508C  D007               	goto	l20720
 12164  00508E                     u23860:
 12165                           
 12166                           ; BSR set to: 1
 12167                           ;outputs_MC50.c: 544:     {;outputs_MC50.c: 545:         var_sys.velocityFactor=0;
 12168  00508E  0E00               	movlw	0
 12169  005090  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12170  005092  0E00               	movlw	0
 12171  005094  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12172                           
 12173                           ;outputs_MC50.c: 546:         powerControl_st.decelarationActive=NO;
 12174  005096  0E00               	movlw	0
 12175  005098  6F7B               	movwf	_powerControl_st& (0+255),b
 12176                           
 12177                           ;outputs_MC50.c: 547:     }
 12178  00509A  0012               	return	
 12179  00509C                     l20720:
 12180                           
 12181                           ; BSR set to: 1
 12182  00509C  0E03               	movlw	3
 12183  00509E  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 12184  0050A0  A4D8               	btfss	status,2,c
 12185  0050A2  D068               	goto	l20768
 12186                           
 12187                           ; BSR set to: 1
 12188  0050A4  0E03               	movlw	3
 12189  0050A6  EC45  F038         	call	_getTimeDecelaration
 12190  0050AA  5029               	movf	?_getTimeDecelaration^0,w,c
 12191  0050AC  0101               	movlb	1	; () banked
 12192  0050AE  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 12193  0050B0  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 12194  0050B2  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 12195  0050B4  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 12196  0050B6  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 12197  0050B8  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12198  0050BA  0A80               	xorlw	128
 12199  0050BC  0100               	movlb	0	; () banked
 12200  0050BE  6FDA               	movwf	??_controlVelocity& (0+255),b
 12201  0050C0  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12202  0050C2  0A80               	xorlw	128
 12203  0050C4  59DA               	subwfb	??_controlVelocity& (0+255),w,b
 12204  0050C6  A0D8               	btfss	status,0,c
 12205  0050C8  D004               	goto	u23890
 12206                           
 12207                           ; BSR set to: 0
 12208  0050CA  0101               	movlb	1	; () banked
 12209  0050CC  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12210  0050CE  A4D8               	btfss	status,2,c
 12211  0050D0  D051               	goto	l20768
 12212  0050D2                     u23890:
 12213  0050D2  0100               	movlb	0	; () banked
 12214  0050D4  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 12215  0050D6  B4D8               	btfsc	status,2,c
 12216  0050D8  D004               	goto	u23910
 12217                           
 12218                           ; BSR set to: 0
 12219  0050DA  0101               	movlb	1	; () banked
 12220  0050DC  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12221  0050DE  B4D8               	btfsc	status,2,c
 12222  0050E0  D00C               	goto	u23930
 12223  0050E2                     u23910:
 12224  0050E2  0101               	movlb	1	; () banked
 12225  0050E4  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12226  0050E6  D005               	goto	u23920
 12227  0050E8  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12228  0050EA  E144               	bnz	l20768
 12229  0050EC  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12230  0050EE  B0D8               	btfsc	status,0,c
 12231  0050F0  D041               	goto	l20768
 12232  0050F2                     u23920:
 12233                           
 12234                           ; BSR set to: 1
 12235  0050F2  0100               	movlb	0	; () banked
 12236  0050F4  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12237  0050F6  B4D8               	btfsc	status,2,c
 12238  0050F8  D03D               	goto	l20768
 12239  0050FA                     u23930:
 12240                           
 12241                           ;outputs_MC50.c: 550:     {;outputs_MC50.c: 552:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12242  0050FA  0101               	movlb	1	; () banked
 12243  0050FC  517B               	movf	_powerControl_st& (0+255),w,b
 12244  0050FE  A4D8               	btfss	status,2,c
 12245  005100  D022               	goto	l20754
 12246                           
 12247                           ; BSR set to: 1
 12248  005102  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12249  005104  A4D8               	btfss	status,2,c
 12250  005106  D01F               	goto	l20754
 12251                           
 12252                           ; BSR set to: 1
 12253                           ;outputs_MC50.c: 553:                 {;outputs_MC50.c: 556:                     ts_syst
      +                          em.TimeCurrentWaitForAlarm=(1000/50);
 12254  005108  0E00               	movlw	0
 12255  00510A  6FCA               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12256  00510C  0E14               	movlw	20
 12257  00510E  6FC9               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12258                           
 12259                           ;outputs_MC50.c: 558:                     if (var_sys_NVM.softstop > 0){
 12260  005110  0100               	movlb	0	; () banked
 12261  005112  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12262  005114  B4D8               	btfsc	status,2,c
 12263  005116  D008               	goto	l20744
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;outputs_MC50.c: 559:                         var_sys.AutoInversionActive = NO;
 12267  005118  0E00               	movlw	0
 12268  00511A  0101               	movlb	1	; () banked
 12269  00511C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12270                           
 12271                           ;outputs_MC50.c: 560:                         var_sys.AutoInversionActiveStop = YES;
 12272  00511E  0E01               	movlw	1
 12273  005120  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12274                           
 12275                           ; BSR set to: 1
 12276                           ;outputs_MC50.c: 561:                         InitSoftStop();
 12277  005122  EC8A  F045         	call	_InitSoftStop	;wreg free
 12278                           
 12279                           ;outputs_MC50.c: 563:                     }
 12280  005126  D00F               	goto	l20754
 12281  005128                     l20744:
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;outputs_MC50.c: 565:                     {;outputs_MC50.c: 566:                        
      +                           ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12285  005128  0E00               	movlw	0
 12286  00512A  0101               	movlb	1	; () banked
 12287  00512C  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12288  00512E  0E0A               	movlw	10
 12289  005130  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12290                           
 12291                           ; BSR set to: 1
 12292                           ;outputs_MC50.c: 567:                         ControlDecelarationFactor();
 12293  005132  EC37  F04A         	call	_ControlDecelarationFactor	;wreg free
 12294                           
 12295                           ; BSR set to: 1
 12296                           ;outputs_MC50.c: 568:                         powerControl_st.decelarationActive=YES;
 12297  005136  0E01               	movlw	1
 12298  005138  6F7B               	movwf	_powerControl_st& (0+255),b
 12299                           
 12300                           ; BSR set to: 1
 12301                           ;outputs_MC50.c: 569:                         var_sys.velocityFactor=0;
 12302  00513A  0E00               	movlw	0
 12303  00513C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12304  00513E  0E00               	movlw	0
 12305  005140  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12306                           
 12307                           ; BSR set to: 1
 12308                           ;outputs_MC50.c: 570:                          var_sys.AutoInversionActiveStop = NO;
 12309  005142  0E00               	movlw	0
 12310  005144  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12311  005146                     l20754:
 12312                           
 12313                           ;outputs_MC50.c: 574:                 if ((var_sys.velocityFactorstop <= 0)&&(var_sys.Au
      +                          toInversionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12314  005146  0101               	movlb	1	; () banked
 12315  005148  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12316  00514A  D005               	goto	u23970
 12317  00514C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12318  00514E  E102               	bnz	u23971
 12319  005150  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12320  005152  B0D8               	btfsc	status,0,c
 12321  005154                     u23971:
 12322  005154  0012               	return	
 12323  005156                     u23970:
 12324                           
 12325                           ; BSR set to: 1
 12326  005156  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12327  005158  A4D8               	btfss	status,2,c
 12328  00515A  0012               	return	
 12329                           
 12330                           ; BSR set to: 1
 12331  00515C  0100               	movlb	0	; () banked
 12332  00515E  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12333  005160  B4D8               	btfsc	status,2,c
 12334  005162  0012               	return	
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;outputs_MC50.c: 575:                 {;outputs_MC50.c: 576:                 ts_system.T
      +                          imeStopedBeforeDecelaration=( 100/50);
 12338  005164  0E00               	movlw	0
 12339  005166  0101               	movlb	1	; () banked
 12340  005168  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12341  00516A  0E02               	movlw	2
 12342  00516C  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12343                           
 12344                           ;outputs_MC50.c: 577:                 var_sys.AutoInversionActiveStop = NO;
 12345  00516E  0E00               	movlw	0
 12346  005170  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12347  005172  D77E               	goto	l20708
 12348  005174                     l20768:
 12349  005174  0101               	movlb	1	; () banked
 12350  005176  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12351  005178  EC38  F035         	call	_getStateOpenPosition
 12352  00517C  06E8               	decf	wreg,f,c
 12353  00517E  A4D8               	btfss	status,2,c
 12354  005180  D042               	goto	l20810
 12355                           
 12356                           ; BSR set to: 0
 12357  005182  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12358  005184  B4D8               	btfsc	status,2,c
 12359  005186  D004               	goto	u24020
 12360                           
 12361                           ; BSR set to: 0
 12362  005188  0101               	movlb	1	; () banked
 12363  00518A  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12364  00518C  B4D8               	btfsc	status,2,c
 12365  00518E  D00C               	goto	u24040
 12366  005190                     u24020:
 12367  005190  0101               	movlb	1	; () banked
 12368  005192  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12369  005194  D005               	goto	u24030
 12370  005196  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12371  005198  E136               	bnz	l20810
 12372  00519A  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12373  00519C  B0D8               	btfsc	status,0,c
 12374  00519E  D033               	goto	l20810
 12375  0051A0                     u24030:
 12376                           
 12377                           ; BSR set to: 1
 12378  0051A0  0100               	movlb	0	; () banked
 12379  0051A2  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12380  0051A4  B4D8               	btfsc	status,2,c
 12381  0051A6  D02F               	goto	l20810
 12382  0051A8                     u24040:
 12383                           
 12384                           ;outputs_MC50.c: 586:     {;outputs_MC50.c: 588:             if ((powerControl_st.decela
      +                          rationActive==NO) && (var_sys.AutoInversionActiveStop==NO ))
 12385  0051A8  0101               	movlb	1	; () banked
 12386  0051AA  517B               	movf	_powerControl_st& (0+255),w,b
 12387  0051AC  A4D8               	btfss	status,2,c
 12388  0051AE  D022               	goto	l20796
 12389                           
 12390                           ; BSR set to: 1
 12391  0051B0  5112               	movf	(_var_sys+18)& (0+255),w,b	;volatile
 12392  0051B2  A4D8               	btfss	status,2,c
 12393  0051B4  D01F               	goto	l20796
 12394                           
 12395                           ; BSR set to: 1
 12396                           ;outputs_MC50.c: 589:         {;outputs_MC50.c: 592:             ts_system.TimeCurrentWa
      +                          itForAlarm=(1000/50);
 12397  0051B6  0E00               	movlw	0
 12398  0051B8  6FCA               	movwf	(_ts_system+47)& (0+255),b	;volatile
 12399  0051BA  0E14               	movlw	20
 12400  0051BC  6FC9               	movwf	(_ts_system+46)& (0+255),b	;volatile
 12401                           
 12402                           ;outputs_MC50.c: 594:             if (var_sys_NVM.softstop > 0){
 12403  0051BE  0100               	movlb	0	; () banked
 12404  0051C0  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12405  0051C2  B4D8               	btfsc	status,2,c
 12406  0051C4  D008               	goto	l20788
 12407                           
 12408                           ; BSR set to: 0
 12409                           ;outputs_MC50.c: 595:                 var_sys.AutoInversionActive = NO;
 12410  0051C6  0E00               	movlw	0
 12411  0051C8  0101               	movlb	1	; () banked
 12412  0051CA  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 12413                           
 12414                           ;outputs_MC50.c: 596:                 var_sys.AutoInversionActiveStop = YES;
 12415  0051CC  0E01               	movlw	1
 12416  0051CE  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12417                           
 12418                           ; BSR set to: 1
 12419                           ;outputs_MC50.c: 597:                 InitSoftStop();
 12420  0051D0  EC8A  F045         	call	_InitSoftStop	;wreg free
 12421                           
 12422                           ;outputs_MC50.c: 598:             }else{
 12423  0051D4  D00F               	goto	l20796
 12424  0051D6                     l20788:
 12425                           
 12426                           ; BSR set to: 0
 12427                           ;outputs_MC50.c: 599:                 ts_system.TimeStopedBeforeDecelaration=( 500/50);
 12428  0051D6  0E00               	movlw	0
 12429  0051D8  0101               	movlb	1	; () banked
 12430  0051DA  6FC8               	movwf	(_ts_system+45)& (0+255),b	;volatile
 12431  0051DC  0E0A               	movlw	10
 12432  0051DE  6FC7               	movwf	(_ts_system+44)& (0+255),b	;volatile
 12433                           
 12434                           ;outputs_MC50.c: 600:                  var_sys.AutoInversionActiveStop = NO;
 12435  0051E0  0E00               	movlw	0
 12436  0051E2  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 12437                           
 12438                           ; BSR set to: 1
 12439                           ;outputs_MC50.c: 601:                 ControlDecelarationFactor();
 12440  0051E4  EC37  F04A         	call	_ControlDecelarationFactor	;wreg free
 12441                           
 12442                           ; BSR set to: 1
 12443                           ;outputs_MC50.c: 602:                 powerControl_st.decelarationActive=YES;
 12444  0051E8  0E01               	movlw	1
 12445  0051EA  6F7B               	movwf	_powerControl_st& (0+255),b
 12446                           
 12447                           ; BSR set to: 1
 12448                           ;outputs_MC50.c: 603:                 var_sys.velocityFactor=0;
 12449  0051EC  0E00               	movlw	0
 12450  0051EE  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12451  0051F0  0E00               	movlw	0
 12452  0051F2  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12453  0051F4                     l20796:
 12454                           
 12455                           ;outputs_MC50.c: 607:         if ((var_sys.velocityFactorstop <= 0)&&(var_sys.AutoInvers
      +                          ionActiveStop == YES) && (var_sys_NVM.softstop > 0))
 12456  0051F4  0101               	movlb	1	; () banked
 12457  0051F6  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12458  0051F8  D7AE               	goto	u23970
 12459  0051FA  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12460  0051FC  E135               	bnz	l2306
 12461  0051FE  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12462  005200  B0D8               	btfsc	status,0,c
 12463  005202  0012               	return	
 12464  005204  D7A8               	goto	u23970
 12465  005206                     l20810:
 12466  005206  0101               	movlb	1	; () banked
 12467  005208  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 12468  00520A  D012               	goto	l20818
 12469  00520C  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12470  00520E  E103               	bnz	u24110
 12471  005210  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 12472  005212  A0D8               	btfss	status,0,c
 12473  005214  D00D               	goto	l20818
 12474  005216                     u24110:
 12475                           
 12476                           ; BSR set to: 1
 12477  005216  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12478  005218  B4D8               	btfsc	status,2,c
 12479  00521A  D00A               	goto	l20818
 12480                           
 12481                           ; BSR set to: 1
 12482                           ;outputs_MC50.c: 618:     {;outputs_MC50.c: 619:         var_sys.velocityFactorstop=(var
      +                          _sys.velocityFactorstop)- var_sys.SoftStopDecrementControl;
 12483  00521C  5113               	movf	(_var_sys+19)& (0+255),w,b	;volatile
 12484  00521E  5D10               	subwf	(_var_sys+16)& (0+255),w,b	;volatile
 12485  005220  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12486  005222  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 12487  005224  A0D8               	btfss	status,0,c
 12488  005226  0511               	decf	(_var_sys+17)& (0+255),w,b	;volatile
 12489  005228  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12490  00522A                     l20816:
 12491                           
 12492                           ; BSR set to: 1
 12493                           ;outputs_MC50.c: 620:         powerControl_st.decelarationActive=NO;
 12494  00522A  0E00               	movlw	0
 12495  00522C  6F7B               	movwf	_powerControl_st& (0+255),b
 12496                           
 12497                           ;outputs_MC50.c: 623:     }
 12498  00522E  0012               	return	
 12499  005230                     l20818:
 12500                           
 12501                           ; BSR set to: 1
 12502  005230  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 12503  005232  D010               	goto	l20826
 12504  005234  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12505  005236  E103               	bnz	u24130
 12506  005238  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 12507  00523A  A0D8               	btfss	status,0,c
 12508  00523C  D00B               	goto	l20826
 12509  00523E                     u24130:
 12510                           
 12511                           ; BSR set to: 1
 12512  00523E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 12513  005240  B4D8               	btfsc	status,2,c
 12514  005242  D008               	goto	l20826
 12515                           
 12516                           ; BSR set to: 1
 12517                           ;outputs_MC50.c: 626:     {;outputs_MC50.c: 627:         var_sys.velocityFactor=(var_sys
      +                          .velocityFactor)-var_sys.SoftStartDecrementControl;
 12518  005244  5114               	movf	(_var_sys+20)& (0+255),w,b	;volatile
 12519  005246  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 12520  005248  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12521  00524A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 12522  00524C  A0D8               	btfss	status,0,c
 12523  00524E  050F               	decf	(_var_sys+15)& (0+255),w,b	;volatile
 12524  005250  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12525  005252  D7EB               	goto	l20816
 12526  005254                     l20826:
 12527                           
 12528                           ; BSR set to: 1
 12529                           ;outputs_MC50.c: 634:     {;outputs_MC50.c: 635:          var_sys.velocityFactorstop = 0
      +                          ;
 12530  005254  0E00               	movlw	0
 12531  005256  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12532  005258  0E00               	movlw	0
 12533  00525A  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12534                           
 12535                           ;outputs_MC50.c: 636:          var_sys.velocityFactor=0;
 12536  00525C  0E00               	movlw	0
 12537  00525E  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12538  005260  0E00               	movlw	0
 12539  005262  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12540                           
 12541                           ;outputs_MC50.c: 637:          powerControl_st.decelarationActive=NO;
 12542  005264  0E00               	movlw	0
 12543  005266  6F7B               	movwf	_powerControl_st& (0+255),b
 12544  005268                     l2306:
 12545  005268  0012               	return		;funcret
 12546  00526A                     __end_of_controlVelocity:
 12547                           	callstack 0
 12548                           
 12549 ;; *************** function _getStateOpenPosition *****************
 12550 ;; Defined at:
 12551 ;;		line 470 in file "outputs_MC50.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  stateMotor      1    wreg     enum E10381
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;  stateMotor      1    1[BANK0 ] enum E10381
 12556 ;;  state           1    0[BANK0 ] _Bool 
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  1    wreg      _Bool 
 12559 ;; Registers used:
 12560 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12561 ;; Tracked objects:
 12562 ;;		On entry : 3F/1
 12563 ;;		On exit  : 3F/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12567 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12568 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12569 ;;      Totals:         9       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12570 ;;Total ram usage:       11 bytes
 12571 ;; Hardware stack levels used: 1
 12572 ;; Hardware stack levels required when called: 6
 12573 ;; This function calls:
 12574 ;;		___lmul
 12575 ;;		_getTimeDecelaration
 12576 ;; This function is called by:
 12577 ;;		_controlVelocity
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581                           	psect	text27
 12582  006A70                     __ptext27:
 12583                           	callstack 0
 12584  006A70                     _getStateOpenPosition:
 12585                           	callstack 21
 12586                           
 12587                           ;incstack = 0
 12588                           ;getStateOpenPosition@stateMotor stored from wreg
 12589  006A70  0100               	movlb	0	; () banked
 12590  006A72  6FD9               	movwf	getStateOpenPosition@stateMotor& (0+255),b
 12591                           
 12592                           ;outputs_MC50.c: 470: _Bool getStateOpenPosition(stateMotor_enum stateMotor);outputs_MC5
      +                          0.c: 471: {;outputs_MC50.c: 472:     _Bool state=0;
 12593  006A74  0E00               	movlw	0
 12594  006A76  0100               	movlb	0	; () banked
 12595  006A78  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;outputs_MC50.c: 473:     if(var_sys.PositionIsLost==YES)
 12599  006A7A  0101               	movlb	1	; () banked
 12600  006A7C  0548               	decf	(_var_sys+72)& (0+255),w,b	;volatile
 12601  006A7E  A4D8               	btfss	status,2,c
 12602  006A80  D002               	goto	l20194
 12603  006A82                     u23110:
 12604                           
 12605                           ;outputs_MC50.c: 474:     {;outputs_MC50.c: 475:         state=1;
 12606  006A82  0E01               	movlw	1
 12607  006A84  D046               	goto	L71
 12608  006A86                     l20194:
 12609                           
 12610                           ; BSR set to: 1
 12611  006A86  0100               	movlb	0	; () banked
 12612  006A88  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12613  006A8A  0D14               	mullw	20
 12614  006A8C  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12615  006A90  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12616  006A94  0E00               	movlw	0
 12617  006A96  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12618  006A98  0EFF               	movlw	255
 12619  006A9A  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12620  006A9C  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12621  006A9E  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12622  006AA0  5C32               	subwf	??_getStateOpenPosition^0,w,c
 12623  006AA2  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12624  006AA4  5833               	subwfb	(??_getStateOpenPosition+1)^0,w,c
 12625  006AA6  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12626  006AA8  5834               	subwfb	(??_getStateOpenPosition+2)^0,w,c
 12627  006AAA  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12628  006AAC  5835               	subwfb	(??_getStateOpenPosition+3)^0,w,c
 12629  006AAE  B0D8               	btfsc	status,0,c
 12630  006AB0  D033               	goto	l20208
 12631                           
 12632                           ; BSR set to: 0
 12633  006AB2  0E02               	movlw	2
 12634  006AB4  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12635  006AB6  A4D8               	btfss	status,2,c
 12636  006AB8  D02F               	goto	l20208
 12637                           
 12638                           ; BSR set to: 0
 12639                           ;outputs_MC50.c: 478:     {;outputs_MC50.c: 479:         if(var_sys_NVM.walkTime<(var_sy
      +                          s_NVM.decelarationOpen/2))
 12640  006ABA  90D8               	bcf	status,0,c
 12641  006ABC  3198               	rrcf	_var_sys_NVM& (0+255),w,b	;volatile
 12642  006ABE  619C               	cpfslt	(_var_sys_NVM+4)& (0+255),b	;volatile
 12643  006AC0  D001               	goto	l20202
 12644  006AC2  D7DF               	goto	u23110
 12645  006AC4                     l20202:
 12646                           
 12647                           ; BSR set to: 0
 12648  006AC4  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 12649  006AC6  0D14               	mullw	20
 12650  006AC8  CFF3 F032          	movff	prodl,??_getStateOpenPosition
 12651  006ACC  CFF4 F033          	movff	prodh,??_getStateOpenPosition+1
 12652  006AD0  0E00               	movlw	0
 12653  006AD2  BE33               	btfsc	(??_getStateOpenPosition+1)^0,7,c
 12654  006AD4  0EFF               	movlw	255
 12655  006AD6  6E34               	movwf	(??_getStateOpenPosition+2)^0,c
 12656  006AD8  6E35               	movwf	(??_getStateOpenPosition+3)^0,c
 12657  006ADA  0ED8               	movlw	216
 12658  006ADC  2432               	addwf	??_getStateOpenPosition^0,w,c
 12659  006ADE  6E36               	movwf	(??_getStateOpenPosition+4)^0,c
 12660  006AE0  0EFF               	movlw	255
 12661  006AE2  2033               	addwfc	(??_getStateOpenPosition+1)^0,w,c
 12662  006AE4  6E37               	movwf	(??_getStateOpenPosition+5)^0,c
 12663  006AE6  0EFF               	movlw	255
 12664  006AE8  2034               	addwfc	(??_getStateOpenPosition+2)^0,w,c
 12665  006AEA  6E38               	movwf	(??_getStateOpenPosition+6)^0,c
 12666  006AEC  0EFF               	movlw	255
 12667  006AEE  2035               	addwfc	(??_getStateOpenPosition+3)^0,w,c
 12668  006AF0  6E39               	movwf	(??_getStateOpenPosition+7)^0,c
 12669  006AF2  0101               	movlb	1	; () banked
 12670  006AF4  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12671  006AF6  5C36               	subwf	(??_getStateOpenPosition+4)^0,w,c
 12672  006AF8  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12673  006AFA  5837               	subwfb	(??_getStateOpenPosition+5)^0,w,c
 12674  006AFC  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12675  006AFE  5838               	subwfb	(??_getStateOpenPosition+6)^0,w,c
 12676  006B00  5039               	movf	(??_getStateOpenPosition+7)^0,w,c
 12677  006B02  0A80               	xorlw	128
 12678  006B04  6E3A               	movwf	(??_getStateOpenPosition+8)^0,c
 12679  006B06  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12680  006B08  0A80               	xorlw	128
 12681  006B0A  583A               	subwfb	(??_getStateOpenPosition+8)^0,w,c
 12682  006B0C  A0D8               	btfss	status,0,c
 12683  006B0E  D7B9               	goto	u23110
 12684                           
 12685                           ; BSR set to: 1
 12686                           ;outputs_MC50.c: 488:         {;outputs_MC50.c: 489:             state= 0;
 12687  006B10  0E00               	movlw	0
 12688  006B12                     L71:
 12689  006B12  0100               	movlb	0	; () banked
 12690  006B14  6FD8               	movwf	getStateOpenPosition@state& (0+255),b
 12691  006B16  D032               	goto	l2249
 12692  006B18                     l20208:
 12693                           
 12694                           ; BSR set to: 0
 12695  006B18  0E02               	movlw	2
 12696  006B1A  19D9               	xorwf	getStateOpenPosition@stateMotor& (0+255),w,b
 12697  006B1C  B4D8               	btfsc	status,2,c
 12698  006B1E  D003               	goto	u23170
 12699                           
 12700                           ; BSR set to: 0
 12701  006B20  05D9               	decf	getStateOpenPosition@stateMotor& (0+255),w,b
 12702  006B22  A4D8               	btfss	status,2,c
 12703  006B24  D02B               	goto	l2249
 12704  006B26                     u23170:
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;outputs_MC50.c: 493:     {;outputs_MC50.c: 494:          if((var_sys_NVM.learningTimeTo
      +                          Open)<(((unsigned long)var_sys_NVM.decelarationOpen*( 500/50))))
 12708  006B26  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 12709  006B28  6E1D               	movwf	___lmul@multiplier^0,c
 12710  006B2A  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 12711  006B2C  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 12712  006B2E  6A20               	clrf	(___lmul@multiplier+3)^0,c
 12713  006B30  0E0A               	movlw	10
 12714  006B32  6E21               	movwf	___lmul@multiplicand^0,c
 12715  006B34  0E00               	movlw	0
 12716  006B36  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 12717  006B38  0E00               	movlw	0
 12718  006B3A  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 12719  006B3C  0E00               	movlw	0
 12720  006B3E  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 12721  006B40  EC1C  F044         	call	___lmul	;wreg free
 12722  006B44  501D               	movf	?___lmul^0,w,c
 12723  006B46  0100               	movlb	0	; () banked
 12724  006B48  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 12725  006B4A  501E               	movf	(?___lmul+1)^0,w,c
 12726  006B4C  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 12727  006B4E  501F               	movf	(?___lmul+2)^0,w,c
 12728  006B50  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 12729  006B52  5020               	movf	(?___lmul+3)^0,w,c
 12730  006B54  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 12731  006B56  A0D8               	btfss	status,0,c
 12732  006B58  D794               	goto	u23110
 12733                           
 12734                           ; BSR set to: 0
 12735  006B5A  51D9               	movf	getStateOpenPosition@stateMotor& (0+255),w,b
 12736  006B5C  EC45  F038         	call	_getTimeDecelaration
 12737  006B60  0101               	movlb	1	; () banked
 12738  006B62  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 12739  006B64  5C29               	subwf	?_getTimeDecelaration^0,w,c
 12740  006B66  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 12741  006B68  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 12742  006B6A  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 12743  006B6C  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 12744  006B6E  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 12745  006B70  0A80               	xorlw	128
 12746  006B72  6E32               	movwf	??_getStateOpenPosition^0,c
 12747  006B74  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 12748  006B76  0A80               	xorlw	128
 12749  006B78  5832               	subwfb	??_getStateOpenPosition^0,w,c
 12750  006B7A  D7C8               	goto	L72
 12751  006B7C                     l2249:
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;outputs_MC50.c: 507:     return state;
 12755  006B7C  51D8               	movf	getStateOpenPosition@state& (0+255),w,b
 12756                           
 12757                           ; BSR set to: 0
 12758  006B7E  0012               	return		;funcret
 12759  006B80                     __end_of_getStateOpenPosition:
 12760                           	callstack 0
 12761                           
 12762 ;; *************** function _InitSoftStop *****************
 12763 ;; Defined at:
 12764 ;;		line 849 in file "sm_ControlGate_MC50.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;		None
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  1    wreg      void 
 12771 ;; Registers used:
 12772 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12773 ;; Tracked objects:
 12774 ;;		On entry : 3F/1
 12775 ;;		On exit  : 3E/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12782 ;;Total ram usage:        1 bytes
 12783 ;; Hardware stack levels used: 1
 12784 ;; Hardware stack levels required when called: 5
 12785 ;; This function calls:
 12786 ;;		_GetMotorPower
 12787 ;; This function is called by:
 12788 ;;		_controlVelocity
 12789 ;; This function uses a non-reentrant model
 12790 ;;
 12791                           
 12792                           	psect	text28
 12793  008B14                     __ptext28:
 12794                           	callstack 0
 12795  008B14                     _InitSoftStop:
 12796                           	callstack 22
 12797                           
 12798                           ; BSR set to: 1
 12799                           ;sm_ControlGate_MC50.c: 850:     if (((var_sys.AutoInversionActiveStop == YES)|| (var_sy
      +                          s.AutoInversionActive == YES))&&(var_sys_NVM.softstop >0)) {
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;incstack = 0
 12803  008B14  0512               	decf	(_var_sys+18)& (0+255),w,b	;volatile
 12804  008B16  B4D8               	btfsc	status,2,c
 12805  008B18  D003               	goto	u23210
 12806                           
 12807                           ; BSR set to: 1
 12808  008B1A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 12809  008B1C  A4D8               	btfss	status,2,c
 12810  008B1E  0012               	return	
 12811  008B20                     u23210:
 12812                           
 12813                           ; BSR set to: 1
 12814  008B20  0100               	movlb	0	; () banked
 12815  008B22  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12816  008B24  B4D8               	btfsc	status,2,c
 12817  008B26  0012               	return	
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;sm_ControlGate_MC50.c: 853:         var_sys.velocityFactor = 0;
 12821  008B28  0E00               	movlw	0
 12822  008B2A  0101               	movlb	1	; () banked
 12823  008B2C  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 12824  008B2E  0E00               	movlw	0
 12825  008B30  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 12826                           
 12827                           ;sm_ControlGate_MC50.c: 854:         var_sys.velocityFactorstop = 0;
 12828  008B32  0E00               	movlw	0
 12829  008B34  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 12830  008B36  0E00               	movlw	0
 12831  008B38  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12832                           
 12833                           ; BSR set to: 1
 12834                           ;sm_ControlGate_MC50.c: 855:         var_sys.velocityFactorstop = GetMotorPower();
 12835  008B3A  EC8D  F039         	call	_GetMotorPower	;wreg free
 12836  008B3E  6E14               	movwf	??_InitSoftStop^0,c
 12837  008B40  5014               	movf	??_InitSoftStop^0,w,c
 12838  008B42  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 12839  008B44  6B11               	clrf	(_var_sys+17)& (0+255),b	;volatile
 12840                           
 12841                           ; BSR set to: 1
 12842                           ;sm_ControlGate_MC50.c: 859:         ts_system.timeSoftStop = var_sys.velocityFactorstop
      +                           + 1;
 12843  008B46  0E01               	movlw	1
 12844  008B48  2510               	addwf	(_var_sys+16)& (0+255),w,b	;volatile
 12845  008B4A  6FB3               	movwf	(_ts_system+24)& (0+255),b	;volatile
 12846  008B4C  0E00               	movlw	0
 12847  008B4E  2111               	addwfc	(_var_sys+17)& (0+255),w,b	;volatile
 12848  008B50  6FB4               	movwf	(_ts_system+25)& (0+255),b	;volatile
 12849                           
 12850                           ; BSR set to: 1
 12851                           ;sm_ControlGate_MC50.c: 861:         var_sys.SoftStopDecrementControl = 10 - var_sys_NVM
      +                          .softstop;
 12852  008B52  0100               	movlb	0	; () banked
 12853  008B54  51AB               	movf	(_var_sys_NVM+19)& (0+255),w,b	;volatile
 12854  008B56  080A               	sublw	10
 12855  008B58  0101               	movlb	1	; () banked
 12856  008B5A  6F13               	movwf	(_var_sys+19)& (0+255),b	;volatile
 12857  008B5C  0012               	return		;funcret
 12858  008B5E                     __end_of_InitSoftStop:
 12859                           	callstack 0
 12860                           
 12861 ;; *************** function _ControlDecelarationFactor *****************
 12862 ;; Defined at:
 12863 ;;		line 463 in file "outputs_MC50.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;		None
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;		None
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  1    wreg      void 
 12870 ;; Registers used:
 12871 ;;		wreg, status,2, status,0, prodl, prodh
 12872 ;; Tracked objects:
 12873 ;;		On entry : 3E/1
 12874 ;;		On exit  : 3F/1
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12881 ;;Total ram usage:        0 bytes
 12882 ;; Hardware stack levels used: 1
 12883 ;; Hardware stack levels required when called: 4
 12884 ;; This function calls:
 12885 ;;		Nothing
 12886 ;; This function is called by:
 12887 ;;		_controlVelocity
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           	psect	text29
 12892  00946E                     __ptext29:
 12893                           	callstack 0
 12894  00946E                     _ControlDecelarationFactor:
 12895                           	callstack 23
 12896                           
 12897                           ;outputs_MC50.c: 465:     powerControl_st.decelarationCyclesOn=1;
 12898                           
 12899                           ;incstack = 0
 12900  00946E  0E01               	movlw	1
 12901  009470  0101               	movlb	1	; () banked
 12902  009472  6F7C               	movwf	(_powerControl_st+1)& (0+255),b
 12903                           
 12904                           ;outputs_MC50.c: 466:     powerControl_st.decelarationCyclesOff=2;
 12905  009474  0E02               	movlw	2
 12906  009476  6F7D               	movwf	(_powerControl_st+2)& (0+255),b
 12907                           
 12908                           ; BSR set to: 1
 12909                           ;outputs_MC50.c: 467:     powerControl_st.decelarationPower=var_sys_NVM.velocityDecelara
      +                          tion*var_sys.Torquerelanty;
 12910  009478  0100               	movlb	0	; () banked
 12911  00947A  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 12912  00947C  0101               	movlb	1	; () banked
 12913  00947E  0315               	mulwf	(_var_sys+21)& (0+255),b	;volatile
 12914  009480  CFF3 F17E          	movff	prodl,_powerControl_st+3
 12915                           
 12916                           ; BSR set to: 1
 12917  009484  0012               	return		;funcret
 12918  009486                     __end_of_ControlDecelarationFactor:
 12919                           	callstack 0
 12920                           
 12921 ;; *************** function _actionZone_Opened *****************
 12922 ;; Defined at:
 12923 ;;		line 514 in file "sm_ControlGate_MC50.c"
 12924 ;; Parameters:    Size  Location     Type
 12925 ;;		None
 12926 ;; Auto vars:     Size  Location     Type
 12927 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 12928 ;;  securityClos    1   31[COMRAM] enum E10397
 12929 ;; Return value:  Size  Location     Type
 12930 ;;                  1    wreg      void 
 12931 ;; Registers used:
 12932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12933 ;; Tracked objects:
 12934 ;;		On entry : 3F/0
 12935 ;;		On exit  : 3E/0
 12936 ;;		Unchanged: 0/0
 12937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12942 ;;Total ram usage:        2 bytes
 12943 ;; Hardware stack levels used: 1
 12944 ;; Hardware stack levels required when called: 7
 12945 ;; This function calls:
 12946 ;;		_CloseOrder
 12947 ;;		_GetOpenOrder
 12948 ;;		_GetSecurityStateInClosing
 12949 ;;		_InitFullAutoTime
 12950 ;;		_InitWalkAutoTime
 12951 ;;		_OpenFullOrder
 12952 ;;		_OpenWalkOrder
 12953 ;;		_VerifyFollowMe
 12954 ;; This function is called by:
 12955 ;;		_sm_execute_ControlGate
 12956 ;; This function uses a non-reentrant model
 12957 ;;
 12958                           
 12959                           	psect	text30
 12960  00526A                     __ptext30:
 12961                           	callstack 0
 12962  00526A                     _actionZone_Opened:
 12963                           	callstack 22
 12964                           
 12965                           ; BSR set to: 0
 12966                           ;sm_ControlGate_MC50.c: 515:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 12967                           
 12968                           ; BSR set to: 1
 12969                           ;incstack = 0
 12970  00526A  EC5D  F03B         	call	_GetSecurityStateInClosing	;wreg free
 12971  00526E  6E20               	movwf	actionZone_Opened@securityClosing^0,c
 12972                           
 12973                           ;sm_ControlGate_MC50.c: 517:     if ((securityClosing != NO) && (Abertura_pedonal == 0))
      +                           {
 12974  005270  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 12975  005272  B4D8               	btfsc	status,2,c
 12976  005274  D007               	goto	l21982
 12977  005276  0101               	movlb	1	; () banked
 12978  005278  518E               	movf	_Abertura_pedonal& (0+255),w,b
 12979  00527A  A4D8               	btfss	status,2,c
 12980  00527C  D003               	goto	l21982
 12981                           
 12982                           ; BSR set to: 1
 12983                           ;sm_ControlGate_MC50.c: 518:         InitFullAutoTime();
 12984  00527E  EC10  F04A         	call	_InitFullAutoTime	;wreg free
 12985                           
 12986                           ;sm_ControlGate_MC50.c: 519:     }
 12987  005282  D008               	goto	l2722
 12988  005284                     l21982:
 12989  005284  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 12990  005286  B4D8               	btfsc	status,2,c
 12991  005288  D005               	goto	l2722
 12992  00528A  0101               	movlb	1	; () banked
 12993  00528C  058E               	decf	_Abertura_pedonal& (0+255),w,b
 12994  00528E  B4D8               	btfsc	status,2,c
 12995                           
 12996                           ; BSR set to: 1
 12997                           ;sm_ControlGate_MC50.c: 521:          InitWalkAutoTime();
 12998  005290  EC95  F04A         	call	_InitWalkAutoTime	;wreg free
 12999  005294                     l2722:
 13000                           
 13001                           ;sm_ControlGate_MC50.c: 524:     TypeCMD typeOpenOrder = GetOpenOrder();
 13002  005294  EC15  F02B         	call	_GetOpenOrder	;wreg free
 13003  005298  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13004                           
 13005                           ;sm_ControlGate_MC50.c: 526:     VerifyFollowMe(securityClosing);
 13006  00529A  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13007  00529C  EC68  F049         	call	_VerifyFollowMe
 13008                           
 13009                           ;sm_ControlGate_MC50.c: 530:     if ((PORTBbits.RB1==0) && (var_sys_NVM.autoTimeFullClos
      +                          e != 0)&&(var_sys.AutoCloseActive != 0) && (button_struct.current != 0x35)&& (var_sys_NV
      +                          M.operationMode == ModoCondominio)){
 13010  0052A0  B28E               	btfsc	142,1,c	;volatile
 13011  0052A2  D013               	goto	l2724
 13012  0052A4  0100               	movlb	0	; () banked
 13013  0052A6  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13014  0052A8  B4D8               	btfsc	status,2,c
 13015  0052AA  D00F               	goto	l2724
 13016                           
 13017                           ; BSR set to: 0
 13018  0052AC  0101               	movlb	1	; () banked
 13019  0052AE  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13020  0052B0  B4D8               	btfsc	status,2,c
 13021  0052B2  D00B               	goto	l2724
 13022                           
 13023                           ; BSR set to: 1
 13024  0052B4  0E35               	movlw	53
 13025  0052B6  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 13026  0052B8  B4D8               	btfsc	status,2,c
 13027  0052BA  D007               	goto	l2724
 13028                           
 13029                           ; BSR set to: 1
 13030  0052BC  0E02               	movlw	2
 13031  0052BE  0100               	movlb	0	; () banked
 13032  0052C0  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13033  0052C2  A4D8               	btfss	status,2,c
 13034  0052C4  D002               	goto	l2724
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;sm_ControlGate_MC50.c: 531:       typeOpenOrder = NoCMD;
 13038  0052C6  0E00               	movlw	0
 13039  0052C8  6E21               	movwf	actionZone_Opened@typeOpenOrder^0,c
 13040  0052CA                     l2724:
 13041                           
 13042                           ;sm_ControlGate_MC50.c: 535:      if (typeOpenOrder != NoCMD)
 13043  0052CA  5021               	movf	actionZone_Opened@typeOpenOrder^0,w,c
 13044  0052CC  B4D8               	btfsc	status,2,c
 13045  0052CE  D05D               	goto	l2725
 13046                           
 13047                           ;sm_ControlGate_MC50.c: 536:      {;sm_ControlGate_MC50.c: 539:         ts_system.timeSi
      +                          nalizationDigit = (1000/50) * 3;
 13048  0052D0  0E00               	movlw	0
 13049  0052D2  0101               	movlb	1	; () banked
 13050  0052D4  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13051  0052D6  0E3C               	movlw	60
 13052  0052D8  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13053                           
 13054                           ; BSR set to: 1
 13055                           ;sm_ControlGate_MC50.c: 541:        if ( var_sys_NVM.operationMode == ModoCondominio && 
      +                          var_sys_NVM.autoTimeFullClose == 0 && (typeOpenOrder == TypeFull|| typeOpenOrder == Type
      +                          FullClose ))
 13056  0052DA  0E02               	movlw	2
 13057  0052DC  0100               	movlb	0	; () banked
 13058  0052DE  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13059  0052E0  A4D8               	btfss	status,2,c
 13060  0052E2  D00D               	goto	l22014
 13061                           
 13062                           ; BSR set to: 0
 13063  0052E4  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13064  0052E6  A4D8               	btfss	status,2,c
 13065  0052E8  D00A               	goto	l22014
 13066                           
 13067                           ; BSR set to: 0
 13068  0052EA  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13069  0052EC  B4D8               	btfsc	status,2,c
 13070  0052EE  D004               	goto	u25750
 13071                           
 13072                           ; BSR set to: 0
 13073  0052F0  0E04               	movlw	4
 13074  0052F2  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13075  0052F4  A4D8               	btfss	status,2,c
 13076  0052F6  D003               	goto	l22014
 13077  0052F8                     u25750:
 13078                           
 13079                           ;sm_ControlGate_MC50.c: 542:         {;sm_ControlGate_MC50.c: 544:             CloseOrde
      +                          r();
 13080  0052F8  EC09  F049         	call	_CloseOrder	;wreg free
 13081                           
 13082                           ;sm_ControlGate_MC50.c: 546:         }
 13083  0052FC  0012               	return	
 13084  0052FE                     l22014:
 13085                           
 13086                           ; BSR set to: 0
 13087  0052FE  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 13088  005300  B4D8               	btfsc	status,2,c
 13089  005302  D014               	goto	l22028
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;sm_ControlGate_MC50.c: 553:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && var_sys.Statedoorcontrol != st_Opened) {
 13093  005304  0E03               	movlw	3
 13094  005306  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13095  005308  A4D8               	btfss	status,2,c
 13096  00530A  D00B               	goto	l22024
 13097                           
 13098                           ; BSR set to: 0
 13099  00530C  0101               	movlb	1	; () banked
 13100  00530E  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 13101  005310  A4D8               	btfss	status,2,c
 13102  005312  D007               	goto	l22024
 13103                           
 13104                           ; BSR set to: 1
 13105  005314  0E04               	movlw	4
 13106  005316  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13107  005318  B4D8               	btfsc	status,2,c
 13108  00531A  D003               	goto	l22024
 13109  00531C                     u25790:
 13110                           
 13111                           ; BSR set to: 1
 13112                           ;sm_ControlGate_MC50.c: 555:                 OpenFullOrder();
 13113  00531C  EC1C  F049         	call	_OpenFullOrder	;wreg free
 13114                           
 13115                           ;sm_ControlGate_MC50.c: 556:             } else if (typeOpenOrder == TypeFullClose) {
 13116  005320  0012               	return	
 13117  005322                     l22024:
 13118  005322  0E04               	movlw	4
 13119  005324  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13120  005326  A4D8               	btfss	status,2,c
 13121  005328  0012               	return	
 13122  00532A  D7E6               	goto	u25750
 13123  00532C                     l22028:
 13124                           
 13125                           ; BSR set to: 0
 13126  00532C  0E03               	movlw	3
 13127  00532E  0101               	movlb	1	; () banked
 13128  005330  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13129  005332  A4D8               	btfss	status,2,c
 13130  005334  D009               	goto	l22036
 13131                           
 13132                           ; BSR set to: 1
 13133  005336  0421               	decf	actionZone_Opened@typeOpenOrder^0,w,c
 13134  005338  A4D8               	btfss	status,2,c
 13135  00533A  D006               	goto	l22036
 13136  00533C                     u25820:
 13137                           
 13138                           ; BSR set to: 1
 13139                           ;sm_ControlGate_MC50.c: 563:             OpenFullOrder();
 13140  00533C  EC1C  F049         	call	_OpenFullOrder	;wreg free
 13141  005340                     l22034:
 13142                           
 13143                           ;sm_ControlGate_MC50.c: 565:             var_sys.AutoInversionActive = NO;
 13144  005340  0E00               	movlw	0
 13145  005342  0101               	movlb	1	; () banked
 13146  005344  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13147                           
 13148                           ;sm_ControlGate_MC50.c: 567:         } else if (var_sys.LastState == InClose && typeOpen
      +                          Order == TypeWalk) {
 13149  005346  0012               	return	
 13150  005348                     l22036:
 13151                           
 13152                           ; BSR set to: 1
 13153  005348  0E03               	movlw	3
 13154  00534A  190B               	xorwf	(_var_sys+11)& (0+255),w,b	;volatile
 13155  00534C  A4D8               	btfss	status,2,c
 13156  00534E  D007               	goto	l22044
 13157                           
 13158                           ; BSR set to: 1
 13159  005350  0E02               	movlw	2
 13160  005352  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13161  005354  A4D8               	btfss	status,2,c
 13162  005356  D003               	goto	l22044
 13163                           
 13164                           ; BSR set to: 1
 13165                           ;sm_ControlGate_MC50.c: 569:             OpenWalkOrder();
 13166  005358  ECA3  F041         	call	_OpenWalkOrder	;wreg free
 13167  00535C  D7F1               	goto	l22034
 13168  00535E                     l22044:
 13169                           
 13170                           ; BSR set to: 1
 13171  00535E  0E03               	movlw	3
 13172  005360  1821               	xorwf	actionZone_Opened@typeOpenOrder^0,w,c
 13173  005362  A4D8               	btfss	status,2,c
 13174  005364  D005               	goto	l22054
 13175                           
 13176                           ; BSR set to: 1
 13177                           ;sm_ControlGate_MC50.c: 574:             if (var_sys.Statedoorcontrol == st_Opened){
 13178  005366  0E04               	movlw	4
 13179  005368  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 13180  00536A  B4D8               	btfsc	status,2,c
 13181  00536C  0012               	return	
 13182  00536E  D7E6               	goto	u25820
 13183  005370                     l22054:
 13184                           
 13185                           ; BSR set to: 1
 13186  005370  0100               	movlb	0	; () banked
 13187  005372  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13188  005374  B4D8               	btfsc	status,2,c
 13189  005376  D007               	goto	l22060
 13190                           
 13191                           ; BSR set to: 0
 13192  005378  0E02               	movlw	2
 13193  00537A  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13194  00537C  A4D8               	btfss	status,2,c
 13195  00537E  D003               	goto	l22060
 13196                           
 13197                           ; BSR set to: 0
 13198                           ;sm_ControlGate_MC50.c: 582:         {;sm_ControlGate_MC50.c: 584:             InitFullA
      +                          utoTime();
 13199  005380  EC10  F04A         	call	_InitFullAutoTime	;wreg free
 13200                           
 13201                           ;sm_ControlGate_MC50.c: 586:         }
 13202  005384  0012               	return	
 13203  005386                     l22060:
 13204                           
 13205                           ; BSR set to: 0
 13206  005386  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13207  005388  D7CE               	goto	L73
 13208  00538A                     l2725:
 13209  00538A  B28E               	btfsc	142,1,c	;volatile
 13210  00538C  D00B               	goto	l22068
 13211  00538E  0100               	movlb	0	; () banked
 13212  005390  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13213  005392  B4D8               	btfsc	status,2,c
 13214  005394  D007               	goto	l22068
 13215                           
 13216                           ; BSR set to: 0
 13217                           ;sm_ControlGate_MC50.c: 597:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 13218  005396  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 13219  005398  0D14               	mullw	20
 13220  00539A  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 13221  00539E  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 13222                           
 13223                           ;sm_ControlGate_MC50.c: 599:     }
 13224  0053A2  0012               	return	
 13225  0053A4                     l22068:
 13226  0053A4  0101               	movlb	1	; () banked
 13227  0053A6  053A               	decf	(_var_sys+58)& (0+255),w,b	;volatile
 13228  0053A8  A4D8               	btfss	status,2,c
 13229  0053AA  D00F               	goto	l22078
 13230                           
 13231                           ; BSR set to: 1
 13232  0053AC  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13233  0053AE  A4D8               	btfss	status,2,c
 13234  0053B0  D00C               	goto	l22078
 13235                           
 13236                           ; BSR set to: 1
 13237                           ;sm_ControlGate_MC50.c: 603:         var_sys.StateFollowIsOn = NO;
 13238  0053B2  0E00               	movlw	0
 13239  0053B4  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13240                           
 13241                           ; BSR set to: 1
 13242                           ;sm_ControlGate_MC50.c: 610:         var_sys.AutoCloseActive = var_sys_NVM.folow_me;
 13243  0053B6  C0AD  F123         	movff	_var_sys_NVM+21,_var_sys+35	;volatile
 13244                           
 13245                           ; BSR set to: 1
 13246                           ;sm_ControlGate_MC50.c: 611:         ts_system.timeWaitToClose = var_sys_NVM.folow_me * 
      +                          (1000/50);
 13247  0053BA  0100               	movlb	0	; () banked
 13248  0053BC  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13249  0053BE  0D14               	mullw	20
 13250  0053C0  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 13251  0053C4  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 13252                           
 13253                           ;sm_ControlGate_MC50.c: 613:     }else if (ts_system.timeWaitToClose <= 0 && var_sys_NVM
      +                          .operationMode == ModoPassoPasso && var_sys.passoAPassoAutoClose == YES && var_sys.AutoC
      +                          loseActive != 0) {
 13254  0053C8  0012               	return	
 13255  0053CA                     l22078:
 13256                           
 13257                           ; BSR set to: 1
 13258  0053CA  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13259  0053CC  D005               	goto	u25940
 13260  0053CE  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13261  0053D0  E113               	bnz	l22090
 13262  0053D2  05AD               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13263  0053D4  B0D8               	btfsc	status,0,c
 13264  0053D6  D010               	goto	l22090
 13265  0053D8                     u25940:
 13266                           
 13267                           ; BSR set to: 1
 13268  0053D8  0100               	movlb	0	; () banked
 13269  0053DA  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13270  0053DC  A4D8               	btfss	status,2,c
 13271  0053DE  D00C               	goto	l22090
 13272                           
 13273                           ; BSR set to: 0
 13274  0053E0  0101               	movlb	1	; () banked
 13275  0053E2  0550               	decf	(_var_sys+80)& (0+255),w,b	;volatile
 13276  0053E4  A4D8               	btfss	status,2,c
 13277  0053E6  D008               	goto	l22090
 13278                           
 13279                           ; BSR set to: 1
 13280  0053E8  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13281  0053EA  B4D8               	btfsc	status,2,c
 13282  0053EC  D005               	goto	l22090
 13283                           
 13284                           ; BSR set to: 1
 13285                           ;sm_ControlGate_MC50.c: 615:         var_sys.AutoCloseActive = 0;
 13286  0053EE  0E00               	movlw	0
 13287  0053F0  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13288                           
 13289                           ;sm_ControlGate_MC50.c: 617:         var_sys.passoAPassoAutoClose = NO;
 13290  0053F2  0E00               	movlw	0
 13291  0053F4  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13292  0053F6  D780               	goto	u25750
 13293  0053F8                     l22090:
 13294  0053F8  0101               	movlb	1	; () banked
 13295  0053FA  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 13296  0053FC  D005               	goto	u25980
 13297  0053FE  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 13298  005400  E119               	bnz	l22108
 13299  005402  05AD               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 13300  005404  B0D8               	btfsc	status,0,c
 13301  005406  D016               	goto	l22108
 13302  005408                     u25980:
 13303                           
 13304                           ; BSR set to: 1
 13305  005408  0100               	movlb	0	; () banked
 13306  00540A  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 13307  00540C  B4D8               	btfsc	status,2,c
 13308  00540E  D012               	goto	l22108
 13309                           
 13310                           ; BSR set to: 0
 13311  005410  0101               	movlb	1	; () banked
 13312  005412  5123               	movf	(_var_sys+35)& (0+255),w,b	;volatile
 13313  005414  B4D8               	btfsc	status,2,c
 13314  005416  D00E               	goto	l22108
 13315                           
 13316                           ; BSR set to: 1
 13317                           ;sm_ControlGate_MC50.c: 621:         var_sys.AutoCloseActive = 0;
 13318  005418  0E00               	movlw	0
 13319  00541A  6F23               	movwf	(_var_sys+35)& (0+255),b	;volatile
 13320                           
 13321                           ; BSR set to: 1
 13322                           ;sm_ControlGate_MC50.c: 627:         if ( var_sys.AutoInversionActive == YES )
 13323  00541C  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13324  00541E  A4D8               	btfss	status,2,c
 13325  005420  D003               	goto	l22104
 13326                           
 13327                           ; BSR set to: 1
 13328                           ;sm_ControlGate_MC50.c: 628:         {;sm_ControlGate_MC50.c: 629:             var_sys.A
      +                          utoInversionActive = NO;
 13329  005422  0E00               	movlw	0
 13330  005424  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13331  005426  D77A               	goto	u25790
 13332  005428                     l22104:
 13333                           
 13334                           ; BSR set to: 1
 13335                           ;sm_ControlGate_MC50.c: 633:         {;sm_ControlGate_MC50.c: 634:             CloseOrde
      +                          r();
 13336  005428  EC09  F049         	call	_CloseOrder	;wreg free
 13337                           
 13338                           ;sm_ControlGate_MC50.c: 635:             var_sys.PositionIsLost = 0;
 13339  00542C  0E00               	movlw	0
 13340  00542E  0101               	movlb	1	; () banked
 13341  005430  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13342  005432  0012               	return	
 13343  005434                     l22108:
 13344  005434  0101               	movlb	1	; () banked
 13345  005436  0522               	decf	(_var_sys+34)& (0+255),w,b	;volatile
 13346  005438  A4D8               	btfss	status,2,c
 13347  00543A  0012               	return	
 13348                           
 13349                           ; BSR set to: 1
 13350  00543C  5020               	movf	actionZone_Opened@securityClosing^0,w,c
 13351  00543E  A4D8               	btfss	status,2,c
 13352  005440  0012               	return	
 13353                           
 13354                           ; BSR set to: 1
 13355                           ;sm_ControlGate_MC50.c: 638:     {;sm_ControlGate_MC50.c: 639:         if (ts_system.tim
      +                          eSinalizationDigit <= 1) {
 13356  005442  BFA8               	btfsc	(_ts_system+13)& (0+255),7,b	;volatile
 13357  005444  D006               	goto	u26040
 13358  005446  51A8               	movf	(_ts_system+13)& (0+255),w,b	;volatile
 13359  005448  E103               	bnz	u26041
 13360  00544A  0E02               	movlw	2
 13361  00544C  5DA7               	subwf	(_ts_system+12)& (0+255),w,b	;volatile
 13362  00544E  B0D8               	btfsc	status,0,c
 13363  005450                     u26041:
 13364  005450  0012               	return	
 13365  005452                     u26040:
 13366                           
 13367                           ; BSR set to: 1
 13368                           ;sm_ControlGate_MC50.c: 640:             var_sys.DigitSinalizedTemp = NO;
 13369  005452  0E00               	movlw	0
 13370  005454  6F22               	movwf	(_var_sys+34)& (0+255),b	;volatile
 13371  005456  0012               	return		;funcret
 13372  005458                     __end_of_actionZone_Opened:
 13373                           	callstack 0
 13374                           
 13375 ;; *************** function _VerifyFollowMe *****************
 13376 ;; Defined at:
 13377 ;;		line 117 in file "sm_ControlGate_MC50.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;  securityClos    1    wreg     enum E10397
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;  securityClos    1   15[COMRAM] enum E10397
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      void 
 13384 ;; Registers used:
 13385 ;;		wreg, status,2, status,0
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 3E/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13395 ;;Total ram usage:        1 bytes
 13396 ;; Hardware stack levels used: 1
 13397 ;; Hardware stack levels required when called: 4
 13398 ;; This function calls:
 13399 ;;		Nothing
 13400 ;; This function is called by:
 13401 ;;		_actionZone_Opening
 13402 ;;		_actionZone_Opened
 13403 ;; This function uses a non-reentrant model
 13404 ;;
 13405                           
 13406                           	psect	text31
 13407  0092D0                     __ptext31:
 13408                           	callstack 0
 13409  0092D0                     _VerifyFollowMe:
 13410                           	callstack 24
 13411                           
 13412                           ;incstack = 0
 13413                           ;VerifyFollowMe@securityClose stored from wreg
 13414  0092D0  6E10               	movwf	VerifyFollowMe@securityClose^0,c
 13415                           
 13416                           ;sm_ControlGate_MC50.c: 120:     if (var_sys_NVM.folow_me != 0 && var_sys_NVM.photoCellI
      +                          nOpen == 0)
 13417  0092D2  0100               	movlb	0	; () banked
 13418  0092D4  51AD               	movf	(_var_sys_NVM+21)& (0+255),w,b	;volatile
 13419  0092D6  B4D8               	btfsc	status,2,c
 13420  0092D8  0012               	return	
 13421                           
 13422                           ; BSR set to: 0
 13423  0092DA  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 13424  0092DC  A4D8               	btfss	status,2,c
 13425  0092DE  0012               	return	
 13426                           
 13427                           ; BSR set to: 0
 13428                           ;sm_ControlGate_MC50.c: 121:     {;sm_ControlGate_MC50.c: 122:         if (securityClose
      +                           == YES && var_sys.StateFollowIsOn == NO) {
 13429  0092E0  0410               	decf	VerifyFollowMe@securityClose^0,w,c
 13430  0092E2  A4D8               	btfss	status,2,c
 13431  0092E4  0012               	return	
 13432                           
 13433                           ; BSR set to: 0
 13434  0092E6  0101               	movlb	1	; () banked
 13435  0092E8  513A               	movf	(_var_sys+58)& (0+255),w,b	;volatile
 13436  0092EA  A4D8               	btfss	status,2,c
 13437  0092EC  0012               	return	
 13438                           
 13439                           ; BSR set to: 1
 13440                           ;sm_ControlGate_MC50.c: 123:             var_sys.StateFollowIsOn = YES;
 13441  0092EE  0E01               	movlw	1
 13442  0092F0  6F3A               	movwf	(_var_sys+58)& (0+255),b	;volatile
 13443  0092F2  0012               	return		;funcret
 13444  0092F4                     __end_of_VerifyFollowMe:
 13445                           	callstack 0
 13446                           
 13447 ;; *************** function _CloseOrder *****************
 13448 ;; Defined at:
 13449 ;;		line 63 in file "sm_ControlGate_MC50.c"
 13450 ;; Parameters:    Size  Location     Type
 13451 ;;		None
 13452 ;; Auto vars:     Size  Location     Type
 13453 ;;		None
 13454 ;; Return value:  Size  Location     Type
 13455 ;;                  1    wreg      void 
 13456 ;; Registers used:
 13457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13458 ;; Tracked objects:
 13459 ;;		On entry : 3E/1
 13460 ;;		On exit  : 3E/0
 13461 ;;		Unchanged: 0/0
 13462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13467 ;;Total ram usage:        0 bytes
 13468 ;; Hardware stack levels used: 1
 13469 ;; Hardware stack levels required when called: 6
 13470 ;; This function calls:
 13471 ;;		_InitSoftStart
 13472 ;;		_sm_send_event
 13473 ;; This function is called by:
 13474 ;;		_actionZone_Opening
 13475 ;;		_actionZone_Opened
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           	psect	text32
 13480  009212                     __ptext32:
 13481                           	callstack 0
 13482  009212                     _CloseOrder:
 13483                           	callstack 22
 13484                           
 13485                           ;sm_ControlGate_MC50.c: 65:     var_sys.StateMotor = InClose;
 13486                           
 13487                           ;incstack = 0
 13488  009212  0E03               	movlw	3
 13489  009214  0101               	movlb	1	; () banked
 13490  009216  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13491                           
 13492                           ; BSR set to: 1
 13493                           ;sm_ControlGate_MC50.c: 66:     sm_send_event(&controlGate_stateMachine, ev_CloseGate);
 13494  009218  0EE3               	movlw	low _controlGate_stateMachine
 13495  00921A  6E12               	movwf	sm_send_event@psm^0,c
 13496  00921C  0E01               	movlw	high _controlGate_stateMachine
 13497  00921E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13498  009220  0E00               	movlw	0
 13499  009222  6E15               	movwf	(sm_send_event@event+1)^0,c
 13500  009224  0E0E               	movlw	14
 13501  009226  6E14               	movwf	sm_send_event@event^0,c
 13502  009228  EC0E  F043         	call	_sm_send_event	;wreg free
 13503                           
 13504                           ;sm_ControlGate_MC50.c: 67:     var_sys.LastState = InClose;
 13505  00922C  0E03               	movlw	3
 13506  00922E  0101               	movlb	1	; () banked
 13507  009230  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 13508                           
 13509                           ; BSR set to: 1
 13510                           ;sm_ControlGate_MC50.c: 68:     InitSoftStart();
 13511  009232  EC3C  F043         	call	_InitSoftStart	;wreg free
 13512  009236  0012               	return		;funcret
 13513  009238                     __end_of_CloseOrder:
 13514                           	callstack 0
 13515                           
 13516 ;; *************** function _actionZone_Closing *****************
 13517 ;; Defined at:
 13518 ;;		line 649 in file "sm_ControlGate_MC50.c"
 13519 ;; Parameters:    Size  Location     Type
 13520 ;;		None
 13521 ;; Auto vars:     Size  Location     Type
 13522 ;;  typeOpenOrde    1   50[COMRAM] enum E10372
 13523 ;;  securityClos    1   49[COMRAM] enum E10397
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  1    wreg      void 
 13526 ;; Registers used:
 13527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13528 ;; Tracked objects:
 13529 ;;		On entry : 3F/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13537 ;;Total ram usage:        2 bytes
 13538 ;; Hardware stack levels used: 1
 13539 ;; Hardware stack levels required when called: 7
 13540 ;; This function calls:
 13541 ;;		_GetOpenOrder
 13542 ;;		_GetSecurityStateInClosing
 13543 ;;		_InitFullAutoTime
 13544 ;;		_InitWalkAutoTime
 13545 ;;		_OpenFullOrder
 13546 ;;		_OpenWalkOrder
 13547 ;;		_SetSegmentValueIntermitent
 13548 ;;		_StopOrder
 13549 ;;		___lmul
 13550 ;;		_setPositionInvertionInClosing
 13551 ;;		_sm_send_event
 13552 ;; This function is called by:
 13553 ;;		_sm_execute_ControlGate
 13554 ;; This function uses a non-reentrant model
 13555 ;;
 13556                           
 13557                           	psect	text33
 13558  00448A                     __ptext33:
 13559                           	callstack 0
 13560  00448A                     _actionZone_Closing:
 13561                           	callstack 22
 13562                           
 13563                           ; BSR set to: 0
 13564                           ;sm_ControlGate_MC50.c: 651:     TypeCMD typeOpenOrder = GetOpenOrder();
 13565                           
 13566                           ;incstack = 0
 13567  00448A  EC15  F02B         	call	_GetOpenOrder	;wreg free
 13568  00448E  6E33               	movwf	actionZone_Closing@typeOpenOrder^0,c
 13569                           
 13570                           ;sm_ControlGate_MC50.c: 653:     StateEnum securityClosing = GetSecurityStateInClosing()
      +                          ;
 13571  004490  EC5D  F03B         	call	_GetSecurityStateInClosing	;wreg free
 13572  004494  6E32               	movwf	actionZone_Closing@securityClosing^0,c
 13573                           
 13574                           ;sm_ControlGate_MC50.c: 654:     Abertura_pedonal = 0;
 13575  004496  0E00               	movlw	0
 13576  004498  0101               	movlb	1	; () banked
 13577  00449A  6F8E               	movwf	_Abertura_pedonal& (0+255),b
 13578                           
 13579                           ; BSR set to: 1
 13580                           ;sm_ControlGate_MC50.c: 656:     InitFullAutoTime();
 13581  00449C  EC10  F04A         	call	_InitFullAutoTime	;wreg free
 13582                           
 13583                           ; BSR set to: 0
 13584                           ;sm_ControlGate_MC50.c: 658:     var_sys.passoAPassoAutoClose = NO;
 13585  0044A0  0E00               	movlw	0
 13586  0044A2  0101               	movlb	1	; () banked
 13587  0044A4  6F50               	movwf	(_var_sys+80)& (0+255),b	;volatile
 13588                           
 13589                           ; BSR set to: 1
 13590                           ;sm_ControlGate_MC50.c: 660:     if (var_sys.NumberOffErrors > 3) {
 13591  0044A6  0E03               	movlw	3
 13592  0044A8  6543               	cpfsgt	(_var_sys+67)& (0+255),b	;volatile
 13593  0044AA  D00D               	goto	l22132
 13594                           
 13595                           ; BSR set to: 1
 13596                           ;sm_ControlGate_MC50.c: 662:         var_sys.StateMotor = Stopped;
 13597  0044AC  0E00               	movlw	0
 13598  0044AE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13599  0044B0                     l22130:
 13600                           
 13601                           ; BSR set to: 1
 13602                           ;sm_ControlGate_MC50.c: 663:         sm_send_event(&controlGate_stateMachine, ev_ErrorGa
      +                          te);
 13603  0044B0  0EE3               	movlw	low _controlGate_stateMachine
 13604  0044B2  6E12               	movwf	sm_send_event@psm^0,c
 13605  0044B4  0E01               	movlw	high _controlGate_stateMachine
 13606  0044B6  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13607  0044B8  0E00               	movlw	0
 13608  0044BA  6E15               	movwf	(sm_send_event@event+1)^0,c
 13609  0044BC  0E10               	movlw	16
 13610  0044BE  6E14               	movwf	sm_send_event@event^0,c
 13611  0044C0  EC0E  F043         	call	_sm_send_event	;wreg free
 13612                           
 13613                           ;sm_ControlGate_MC50.c: 664:     } else if ((var_sys.FimCurso_CloseIsEnabled == YES)||(v
      +                          ar_sys.TimeMaxMotorIsON<=0) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLos
      +                          t==NO)) {
 13614  0044C4  0012               	return	
 13615  0044C6                     l22132:
 13616                           
 13617                           ; BSR set to: 1
 13618  0044C6  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 13619  0044C8  B4D8               	btfsc	status,2,c
 13620  0044CA  D00C               	goto	u26090
 13621                           
 13622                           ; BSR set to: 1
 13623  0044CC  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 13624  0044CE  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 13625  0044D0  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 13626  0044D2  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 13627  0044D4  A4D8               	btfss	status,2,c
 13628  0044D6  D05F               	goto	l22164
 13629                           
 13630                           ; BSR set to: 1
 13631  0044D8  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 13632  0044DA  A4D8               	btfss	status,2,c
 13633  0044DC  D05C               	goto	l22164
 13634                           
 13635                           ; BSR set to: 1
 13636  0044DE  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 13637  0044E0  A4D8               	btfss	status,2,c
 13638  0044E2  D059               	goto	l22164
 13639  0044E4                     u26090:
 13640                           
 13641                           ; BSR set to: 1
 13642                           ;sm_ControlGate_MC50.c: 666:         if (var_sys_NVM.flashLightMode == 2) {
 13643  0044E4  0E02               	movlw	2
 13644  0044E6  0100               	movlb	0	; () banked
 13645  0044E8  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 13646  0044EA  A4D8               	btfss	status,2,c
 13647  0044EC  D018               	goto	l22144
 13648                           
 13649                           ; BSR set to: 0
 13650                           ;sm_ControlGate_MC50.c: 667:             ts_system.TimeOnFlashLigth = (long) ((long) var
      +                          _sys_NVM.ligthTime * ((1000/50)*60));
 13651  0044EE  51AC               	movf	(_var_sys_NVM+20)& (0+255),w,b	;volatile
 13652  0044F0  6E1D               	movwf	___lmul@multiplier^0,c
 13653  0044F2  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 13654  0044F4  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 13655  0044F6  6A20               	clrf	(___lmul@multiplier+3)^0,c
 13656  0044F8  0EB0               	movlw	176
 13657  0044FA  6E21               	movwf	___lmul@multiplicand^0,c
 13658  0044FC  0E04               	movlw	4
 13659  0044FE  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 13660  004500  0E00               	movlw	0
 13661  004502  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 13662  004504  0E00               	movlw	0
 13663  004506  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 13664  004508  EC1C  F044         	call	___lmul	;wreg free
 13665  00450C  C01D  F1BB         	movff	?___lmul,_ts_system+32	;volatile
 13666  004510  C01E  F1BC         	movff	?___lmul+1,_ts_system+33	;volatile
 13667  004514  C01F  F1BD         	movff	?___lmul+2,_ts_system+34	;volatile
 13668  004518  C020  F1BE         	movff	?___lmul+3,_ts_system+35	;volatile
 13669                           
 13670                           ;sm_ControlGate_MC50.c: 668:         }
 13671  00451C  D009               	goto	l2768
 13672  00451E                     l22144:
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;sm_ControlGate_MC50.c: 670:             ts_system.TimeOnFlashLigth = 0;
 13676  00451E  0E00               	movlw	0
 13677  004520  0101               	movlb	1	; () banked
 13678  004522  6FBB               	movwf	(_ts_system+32)& (0+255),b	;volatile
 13679  004524  0E00               	movlw	0
 13680  004526  6FBC               	movwf	(_ts_system+33)& (0+255),b	;volatile
 13681  004528  0E00               	movlw	0
 13682  00452A  6FBD               	movwf	(_ts_system+34)& (0+255),b	;volatile
 13683  00452C  0E00               	movlw	0
 13684  00452E  6FBE               	movwf	(_ts_system+35)& (0+255),b	;volatile
 13685  004530                     l2768:
 13686                           
 13687                           ;sm_ControlGate_MC50.c: 672:         var_sys.AutoInversionActiveStop = NO;
 13688  004530  0E00               	movlw	0
 13689  004532  0101               	movlb	1	; () banked
 13690  004534  6F12               	movwf	(_var_sys+18)& (0+255),b	;volatile
 13691                           
 13692                           ;sm_ControlGate_MC50.c: 674:         var_sys.Statedoorcontrol = st_Closed;
 13693  004536  0E01               	movlw	1
 13694  004538  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 13695                           
 13696                           ; BSR set to: 1
 13697                           ;sm_ControlGate_MC50.c: 675:         var_sys.actualCounterMoves++;
 13698  00453A  0E01               	movlw	1
 13699  00453C  273C               	addwf	(_var_sys+60)& (0+255),f,b	;volatile
 13700  00453E  0E00               	movlw	0
 13701  004540  233D               	addwfc	(_var_sys+61)& (0+255),f,b	;volatile
 13702  004542  233E               	addwfc	(_var_sys+62)& (0+255),f,b	;volatile
 13703  004544  233F               	addwfc	(_var_sys+63)& (0+255),f,b	;volatile
 13704                           
 13705                           ; BSR set to: 1
 13706                           ;sm_ControlGate_MC50.c: 676:         var_sys.Timewalkisactived = 0;
 13707  004546  0E00               	movlw	0
 13708  004548  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 13709                           
 13710                           ; BSR set to: 1
 13711                           ;sm_ControlGate_MC50.c: 677:         var_sys.PositionActual = 0;
 13712  00454A  0E00               	movlw	0
 13713  00454C  6F1E               	movwf	(_var_sys+30)& (0+255),b	;volatile
 13714  00454E  0E00               	movlw	0
 13715  004550  6F1F               	movwf	(_var_sys+31)& (0+255),b	;volatile
 13716  004552  0E00               	movlw	0
 13717  004554  6F20               	movwf	(_var_sys+32)& (0+255),b	;volatile
 13718  004556  0E00               	movlw	0
 13719  004558  6F21               	movwf	(_var_sys+33)& (0+255),b	;volatile
 13720                           
 13721                           ; BSR set to: 1
 13722                           ;sm_ControlGate_MC50.c: 679:         var_sys.PositionIsLost = NO;
 13723  00455A  0E00               	movlw	0
 13724  00455C  6F48               	movwf	(_var_sys+72)& (0+255),b	;volatile
 13725                           
 13726                           ; BSR set to: 1
 13727                           ;sm_ControlGate_MC50.c: 680:         var_sys.NumberOffErrors = 0;
 13728  00455E  0E00               	movlw	0
 13729  004560  6F43               	movwf	(_var_sys+67)& (0+255),b	;volatile
 13730                           
 13731                           ; BSR set to: 1
 13732                           ;sm_ControlGate_MC50.c: 681:         var_sys.StateMotor = Stopped;
 13733  004562  0E00               	movlw	0
 13734  004564  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13735                           
 13736                           ; BSR set to: 1
 13737                           ;sm_ControlGate_MC50.c: 683:         ts_system.timeSinalizationDigit = (1000/50) * 2;
 13738  004566  0E00               	movlw	0
 13739  004568  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 13740  00456A  0E28               	movlw	40
 13741  00456C  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 13742                           
 13743                           ; BSR set to: 1
 13744                           ;sm_ControlGate_MC50.c: 684:         SetSegmentValueIntermitent(dF, dC, ( 200/50));
 13745  00456E  0E0C               	movlw	12
 13746  004570  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 13747  004572  0E00               	movlw	0
 13748  004574  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 13749  004576  0E04               	movlw	4
 13750  004578  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 13751  00457A  0E0F               	movlw	15
 13752  00457C  ECAD  F047         	call	_SetSegmentValueIntermitent
 13753                           
 13754                           ; BSR set to: 1
 13755                           ;sm_ControlGate_MC50.c: 687:          sm_send_event(&controlGate_stateMachine, ev_Closed
      +                          Gate);
 13756  004580  0EE3               	movlw	low _controlGate_stateMachine
 13757  004582  6E12               	movwf	sm_send_event@psm^0,c
 13758  004584  0E01               	movlw	high _controlGate_stateMachine
 13759  004586  6E13               	movwf	(sm_send_event@psm+1)^0,c
 13760  004588  0E00               	movlw	0
 13761  00458A  6E15               	movwf	(sm_send_event@event+1)^0,c
 13762  00458C  0E0F               	movlw	15
 13763  00458E  6E14               	movwf	sm_send_event@event^0,c
 13764  004590  EC0E  F043         	call	_sm_send_event	;wreg free
 13765                           
 13766                           ;sm_ControlGate_MC50.c: 691:     }
 13767  004594  0012               	return	
 13768  004596                     l22164:
 13769                           
 13770                           ; BSR set to: 1
 13771  004596  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13772  004598  B4D8               	btfsc	status,2,c
 13773  00459A  D011               	goto	u26140
 13774                           
 13775                           ; BSR set to: 1
 13776  00459C  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13777  00459E  D021               	goto	l22184
 13778  0045A0  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13779  0045A2  E103               	bnz	u26120
 13780  0045A4  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13781  0045A6  A0D8               	btfss	status,0,c
 13782  0045A8  D01C               	goto	l22184
 13783  0045AA                     u26120:
 13784                           
 13785                           ; BSR set to: 1
 13786  0045AA  0541               	decf	(_var_sys+65)& (0+255),w,b	;volatile
 13787  0045AC  A4D8               	btfss	status,2,c
 13788  0045AE  D019               	goto	l22184
 13789                           
 13790                           ; BSR set to: 1
 13791  0045B0  BFCC               	btfsc	(_ts_system+49)& (0+255),7,b	;volatile
 13792  0045B2  D005               	goto	u26140
 13793  0045B4  51CC               	movf	(_ts_system+49)& (0+255),w,b	;volatile
 13794  0045B6  E115               	bnz	l22184
 13795  0045B8  05CB               	decf	(_ts_system+48)& (0+255),w,b	;volatile
 13796  0045BA  B0D8               	btfsc	status,0,c
 13797  0045BC  D012               	goto	l22184
 13798  0045BE                     u26140:
 13799                           
 13800                           ; BSR set to: 1
 13801  0045BE  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 13802  0045C0  A4D8               	btfss	status,2,c
 13803  0045C2  D00F               	goto	l22184
 13804                           
 13805                           ; BSR set to: 1
 13806                           ;sm_ControlGate_MC50.c: 694:          if (securityClosing != YES){
 13807  0045C4  0432               	decf	actionZone_Closing@securityClosing^0,w,c
 13808  0045C6  A4D8               	btfss	status,2,c
 13809                           
 13810                           ; BSR set to: 1
 13811                           ;sm_ControlGate_MC50.c: 695:             var_sys.NumberOffErrors++;
 13812  0045C8  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13813                           
 13814                           ; BSR set to: 1
 13815                           ;sm_ControlGate_MC50.c: 697:         var_sys.NumberOffErrors++;
 13816                           
 13817                           ;sm_ControlGate_MC50.c: 696:         }
 13818  0045CA  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 13819                           
 13820                           ; BSR set to: 1
 13821                           ;sm_ControlGate_MC50.c: 698:         var_sys.AutoInversionActive = YES;
 13822  0045CC  0E01               	movlw	1
 13823  0045CE  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13824                           
 13825                           ; BSR set to: 1
 13826                           ;sm_ControlGate_MC50.c: 699:         ts_system.TimeWaitToNextState = ( 500/50);
 13827  0045D0  0E00               	movlw	0
 13828  0045D2  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 13829  0045D4  0E0A               	movlw	10
 13830  0045D6  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 13831                           
 13832                           ; BSR set to: 1
 13833                           ;sm_ControlGate_MC50.c: 700:         ts_system.TimeStopElectricBrake = ((1000/50)+( 500/
      +                          50));
 13834  0045D8  0E00               	movlw	0
 13835  0045DA  6FDC               	movwf	(_ts_system+65)& (0+255),b	;volatile
 13836  0045DC  0E1E               	movlw	30
 13837  0045DE  6FDB               	movwf	(_ts_system+64)& (0+255),b	;volatile
 13838                           
 13839                           ;sm_ControlGate_MC50.c: 702:     }
 13840  0045E0  0012               	return	
 13841  0045E2                     l22184:
 13842                           
 13843                           ; BSR set to: 1
 13844  0045E2  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 13845  0045E4  D02E               	goto	l22214
 13846  0045E6  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 13847  0045E8  E103               	bnz	u26170
 13848  0045EA  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 13849  0045EC  A0D8               	btfss	status,0,c
 13850  0045EE  D029               	goto	l22214
 13851  0045F0                     u26170:
 13852                           
 13853                           ; BSR set to: 1
 13854  0045F0  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13855  0045F2  A4D8               	btfss	status,2,c
 13856  0045F4  D026               	goto	l22214
 13857                           
 13858                           ; BSR set to: 1
 13859                           ;sm_ControlGate_MC50.c: 704:         if (var_sys.InvertionCurrentOpening == YES) {
 13860  0045F6  0545               	decf	(_var_sys+69)& (0+255),w,b	;volatile
 13861  0045F8  A4D8               	btfss	status,2,c
 13862  0045FA  D005               	goto	l22196
 13863  0045FC                     u26190:
 13864                           
 13865                           ; BSR set to: 1
 13866                           ;sm_ControlGate_MC50.c: 706:             var_sys.StateMotor = Stopped;
 13867  0045FC  0E00               	movlw	0
 13868  0045FE  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13869                           
 13870                           ; BSR set to: 1
 13871                           ;sm_ControlGate_MC50.c: 707:             setPositionInvertionInClosing();
 13872  004600  EC12  F034         	call	_setPositionInvertionInClosing	;wreg free
 13873  004604  D755               	goto	l22130
 13874  004606                     l22196:
 13875                           
 13876                           ; BSR set to: 1
 13877  004606  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13878  004608  D005               	goto	u26200
 13879  00460A  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 13880  00460C  E117               	bnz	l22212
 13881  00460E  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 13882  004610  B0D8               	btfsc	status,0,c
 13883  004612  D014               	goto	l22212
 13884  004614                     u26200:
 13885                           
 13886                           ; BSR set to: 1
 13887                           ;sm_ControlGate_MC50.c: 710:          if(var_sys.Timewalkisactived == YES){
 13888  004614  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 13889  004616  A4D8               	btfss	status,2,c
 13890  004618  D003               	goto	l22202
 13891                           
 13892                           ; BSR set to: 1
 13893                           ;sm_ControlGate_MC50.c: 711:                 OpenWalkOrder();
 13894  00461A  ECA3  F041         	call	_OpenWalkOrder	;wreg free
 13895                           
 13896                           ;sm_ControlGate_MC50.c: 713:             }
 13897  00461E  D004               	goto	l22206
 13898  004620                     l22202:
 13899                           
 13900                           ; BSR set to: 1
 13901                           ;sm_ControlGate_MC50.c: 716:             OpenFullOrder();
 13902  004620  EC1C  F049         	call	_OpenFullOrder	;wreg free
 13903                           
 13904                           ;sm_ControlGate_MC50.c: 718:             setPositionInvertionInClosing();
 13905  004624  EC12  F034         	call	_setPositionInvertionInClosing	;wreg free
 13906  004628                     l22206:
 13907                           
 13908                           ;sm_ControlGate_MC50.c: 720:             var_sys.AutoInversionActive = NO;
 13909  004628  0E00               	movlw	0
 13910  00462A  0101               	movlb	1	; () banked
 13911  00462C  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13912                           
 13913                           ; BSR set to: 1
 13914                           ;sm_ControlGate_MC50.c: 721:             var_sys.InvertionCurrentClosing = YES;
 13915  00462E  0E01               	movlw	1
 13916  004630  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 13917                           
 13918                           ; BSR set to: 1
 13919                           ;sm_ControlGate_MC50.c: 722:             ts_system.TimeInversionStart = (1000/50);
 13920  004632  0E00               	movlw	0
 13921  004634  6FCC               	movwf	(_ts_system+49)& (0+255),b	;volatile
 13922  004636  0E14               	movlw	20
 13923  004638  6FCB               	movwf	(_ts_system+48)& (0+255),b	;volatile
 13924                           
 13925                           ;sm_ControlGate_MC50.c: 726:         } else
 13926  00463A  0012               	return	
 13927  00463C                     l22212:
 13928                           
 13929                           ; BSR set to: 1
 13930                           ;sm_ControlGate_MC50.c: 727:         {;sm_ControlGate_MC50.c: 728:             var_sys.S
      +                          tateMotor = Stopped;
 13931  00463C  0E00               	movlw	0
 13932  00463E  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13933  004640  0012               	return	
 13934  004642                     l22214:
 13935                           
 13936                           ; BSR set to: 1
 13937  004642  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 13938  004644  A4D8               	btfss	status,2,c
 13939  004646  D017               	goto	l22230
 13940                           
 13941                           ; BSR set to: 1
 13942                           ;sm_ControlGate_MC50.c: 732:                 var_sys.StateMotor = Stopped;
 13943  004648  0E00               	movlw	0
 13944  00464A  6F00               	movwf	_var_sys& (0+255),b	;volatile
 13945                           
 13946                           ; BSR set to: 1
 13947                           ;sm_ControlGate_MC50.c: 737:         if (ts_system.TimeWaitToNextState <= 0) {
 13948  00464C  BFC0               	btfsc	(_ts_system+37)& (0+255),7,b	;volatile
 13949  00464E  D005               	goto	u26230
 13950  004650  51C0               	movf	(_ts_system+37)& (0+255),w,b	;volatile
 13951  004652  E160               	bnz	l2805
 13952  004654  05BF               	decf	(_ts_system+36)& (0+255),w,b	;volatile
 13953  004656  B0D8               	btfsc	status,0,c
 13954  004658  0012               	return	
 13955  00465A                     u26230:
 13956                           
 13957                           ; BSR set to: 1
 13958                           ;sm_ControlGate_MC50.c: 738:             if(var_sys.Timewalkisactived == YES){
 13959  00465A  054A               	decf	(_var_sys+74)& (0+255),w,b	;volatile
 13960  00465C  A4D8               	btfss	status,2,c
 13961  00465E  D003               	goto	l22224
 13962                           
 13963                           ; BSR set to: 1
 13964                           ;sm_ControlGate_MC50.c: 739:                 OpenWalkOrder();
 13965  004660  ECA3  F041         	call	_OpenWalkOrder	;wreg free
 13966                           
 13967                           ;sm_ControlGate_MC50.c: 741:             }
 13968  004664  D004               	goto	l22228
 13969  004666                     l22224:
 13970                           
 13971                           ; BSR set to: 1
 13972                           ;sm_ControlGate_MC50.c: 744:                  OpenFullOrder();
 13973  004666  EC1C  F049         	call	_OpenFullOrder	;wreg free
 13974                           
 13975                           ;sm_ControlGate_MC50.c: 746:             setPositionInvertionInClosing();
 13976  00466A  EC12  F034         	call	_setPositionInvertionInClosing	;wreg free
 13977  00466E                     l22228:
 13978                           
 13979                           ;sm_ControlGate_MC50.c: 748:             var_sys.AutoInversionActive = NO;
 13980  00466E  0E00               	movlw	0
 13981  004670  0101               	movlb	1	; () banked
 13982  004672  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 13983  004674  0012               	return	
 13984  004676                     l22230:
 13985                           
 13986                           ; BSR set to: 1
 13987  004676  5100               	movf	_var_sys& (0+255),w,b	;volatile
 13988  004678  A4D8               	btfss	status,2,c
 13989  00467A  D00B               	goto	l22246
 13990                           
 13991                           ; BSR set to: 1
 13992                           ;sm_ControlGate_MC50.c: 755:         if(securityClosing != ST){
 13993  00467C  0E02               	movlw	2
 13994  00467E  1832               	xorwf	actionZone_Closing@securityClosing^0,w,c
 13995  004680  B4D8               	btfsc	status,2,c
 13996  004682  D002               	goto	l22242
 13997                           
 13998                           ; BSR set to: 1
 13999                           ;sm_ControlGate_MC50.c: 756:            var_sys.NumberOffErrors++;
 14000  004684  2B43               	incf	(_var_sys+67)& (0+255),f,b	;volatile
 14001  004686  D7BA               	goto	u26190
 14002  004688                     l22242:
 14003                           
 14004                           ; BSR set to: 1
 14005                           ;sm_ControlGate_MC50.c: 761:         {;sm_ControlGate_MC50.c: 762:             setPositi
      +                          onInvertionInClosing();
 14006  004688  EC12  F034         	call	_setPositionInvertionInClosing	;wreg free
 14007  00468C                     l22244:
 14008                           
 14009                           ;sm_ControlGate_MC50.c: 763:             StopOrder();
 14010  00468C  ECBE  F049         	call	_StopOrder	;wreg free
 14011  004690  0012               	return	
 14012  004692                     l22246:
 14013                           
 14014                           ; BSR set to: 1
 14015  004692  BFCE               	btfsc	(_ts_system+51)& (0+255),7,b	;volatile
 14016  004694  D005               	goto	u26270
 14017  004696  51CE               	movf	(_ts_system+51)& (0+255),w,b	;volatile
 14018  004698  E10B               	bnz	l22256
 14019  00469A  05CD               	decf	(_ts_system+50)& (0+255),w,b	;volatile
 14020  00469C  B0D8               	btfsc	status,0,c
 14021  00469E  D008               	goto	l22256
 14022  0046A0                     u26270:
 14023                           
 14024                           ; BSR set to: 1
 14025  0046A0  0546               	decf	(_var_sys+70)& (0+255),w,b	;volatile
 14026  0046A2  A4D8               	btfss	status,2,c
 14027  0046A4  D005               	goto	l22256
 14028                           
 14029                           ; BSR set to: 1
 14030                           ;sm_ControlGate_MC50.c: 768:         setPositionInvertionInClosing();
 14031  0046A6  EC12  F034         	call	_setPositionInvertionInClosing	;wreg free
 14032                           
 14033                           ; BSR set to: 1
 14034                           ;sm_ControlGate_MC50.c: 769:         var_sys.InvertionClosingFromOpen = NO;
 14035  0046AA  0E00               	movlw	0
 14036  0046AC  6F46               	movwf	(_var_sys+70)& (0+255),b	;volatile
 14037  0046AE  D7EE               	goto	l22244
 14038  0046B0                     l22256:
 14039                           
 14040                           ; BSR set to: 1
 14041  0046B0  0100               	movlb	0	; () banked
 14042  0046B2  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14043  0046B4  B4D8               	btfsc	status,2,c
 14044  0046B6  D004               	goto	u26300
 14045                           
 14046                           ; BSR set to: 0
 14047  0046B8  0E02               	movlw	2
 14048  0046BA  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14049  0046BC  A4D8               	btfss	status,2,c
 14050  0046BE  D005               	goto	l22264
 14051  0046C0                     u26300:
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;sm_ControlGate_MC50.c: 773:         if (typeOpenOrder != TypeFullClose) {
 14055  0046C0  0E04               	movlw	4
 14056  0046C2  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14057  0046C4  B4D8               	btfsc	status,2,c
 14058  0046C6  0012               	return	
 14059  0046C8  D7E1               	goto	l22244
 14060  0046CA                     l22264:
 14061                           
 14062                           ; BSR set to: 0
 14063  0046CA  5033               	movf	actionZone_Closing@typeOpenOrder^0,w,c
 14064  0046CC  B4D8               	btfsc	status,2,c
 14065  0046CE  0012               	return	
 14066                           
 14067                           ; BSR set to: 0
 14068                           ;sm_ControlGate_MC50.c: 788:         if ( var_sys_NVM.operationMode == ModoPassoPasso )
 14069  0046D0  05A4               	decf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14070  0046D2  A4D8               	btfss	status,2,c
 14071  0046D4  D013               	goto	l22280
 14072                           
 14073                           ; BSR set to: 0
 14074                           ;sm_ControlGate_MC50.c: 789:         {;sm_ControlGate_MC50.c: 790:             setPositi
      +                          onInvertionInClosing();
 14075  0046D6  EC12  F034         	call	_setPositionInvertionInClosing	;wreg free
 14076                           
 14077                           ; BSR set to: 1
 14078                           ;sm_ControlGate_MC50.c: 791:             StopOrder();
 14079  0046DA  ECBE  F049         	call	_StopOrder	;wreg free
 14080                           
 14081                           ;sm_ControlGate_MC50.c: 793:             if (typeOpenOrder == TypeWalk && var_sys_NVM.op
      +                          erationMode != ModoCondominio)
 14082  0046DE  0E02               	movlw	2
 14083  0046E0  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14084  0046E2  A4D8               	btfss	status,2,c
 14085  0046E4  0012               	return	
 14086  0046E6  0E02               	movlw	2
 14087  0046E8  0100               	movlb	0	; () banked
 14088  0046EA  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 14089  0046EC  B4D8               	btfsc	status,2,c
 14090  0046EE  0012               	return	
 14091                           
 14092                           ; BSR set to: 0
 14093                           ;sm_ControlGate_MC50.c: 794:             {;sm_ControlGate_MC50.c: 795:                 I
      +                          nitWalkAutoTime();
 14094  0046F0  EC95  F04A         	call	_InitWalkAutoTime	;wreg free
 14095                           
 14096                           ; BSR set to: 0
 14097                           ;sm_ControlGate_MC50.c: 796:                 var_sys.showAP = YES;
 14098  0046F4  0E01               	movlw	1
 14099  0046F6  0101               	movlb	1	; () banked
 14100  0046F8  6F4F               	movwf	(_var_sys+79)& (0+255),b	;volatile
 14101  0046FA  0012               	return	
 14102  0046FC                     l22280:
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;sm_ControlGate_MC50.c: 801:         {;sm_ControlGate_MC50.c: 802:             if (typeO
      +                          penOrder != TypeFullClose){
 14106  0046FC  0E04               	movlw	4
 14107  0046FE  1833               	xorwf	actionZone_Closing@typeOpenOrder^0,w,c
 14108  004700  B4D8               	btfsc	status,2,c
 14109  004702  D7C4               	goto	l22244
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;sm_ControlGate_MC50.c: 803:                 var_sys.AutoInversionActive = YES;
 14113  004704  0E01               	movlw	1
 14114  004706  0101               	movlb	1	; () banked
 14115  004708  6F27               	movwf	(_var_sys+39)& (0+255),b	;volatile
 14116                           
 14117                           ;sm_ControlGate_MC50.c: 804:                 ts_system.TimeWaitToNextState = ( 500/50);
 14118  00470A  0E00               	movlw	0
 14119  00470C  6FC0               	movwf	(_ts_system+37)& (0+255),b	;volatile
 14120  00470E  0E0A               	movlw	10
 14121  004710  6FBF               	movwf	(_ts_system+36)& (0+255),b	;volatile
 14122                           
 14123                           ;sm_ControlGate_MC50.c: 806:             }
 14124  004712  0012               	return	
 14125  004714                     l2805:
 14126  004714  0012               	return		;funcret
 14127  004716                     __end_of_actionZone_Closing:
 14128                           	callstack 0
 14129                           
 14130 ;; *************** function _setPositionInvertionInClosing *****************
 14131 ;; Defined at:
 14132 ;;		line 867 in file "sm_ControlGate_MC50.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;		None
 14135 ;; Auto vars:     Size  Location     Type
 14136 ;;		None
 14137 ;; Return value:  Size  Location     Type
 14138 ;;                  1    wreg      void 
 14139 ;; Registers used:
 14140 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14141 ;; Tracked objects:
 14142 ;;		On entry : 3E/1
 14143 ;;		On exit  : 3F/1
 14144 ;;		Unchanged: 0/0
 14145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14148 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14149 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14150 ;;Total ram usage:       12 bytes
 14151 ;; Hardware stack levels used: 1
 14152 ;; Hardware stack levels required when called: 6
 14153 ;; This function calls:
 14154 ;;		_getTimeDecelaration
 14155 ;; This function is called by:
 14156 ;;		_actionZone_Opening
 14157 ;;		_actionZone_Closing
 14158 ;; This function uses a non-reentrant model
 14159 ;;
 14160                           
 14161                           	psect	text34
 14162  006824                     __ptext34:
 14163                           	callstack 0
 14164  006824                     _setPositionInvertionInClosing:
 14165                           	callstack 22
 14166                           
 14167                           ;sm_ControlGate_MC50.c: 872:     if(var_sys_NVM.TypeofMotor != 2){
 14168                           
 14169                           ;incstack = 0
 14170  006824  0E02               	movlw	2
 14171  006826  0100               	movlb	0	; () banked
 14172  006828  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14173  00682A  B4D8               	btfsc	status,2,c
 14174  00682C  D007               	goto	l20918
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;sm_ControlGate_MC50.c: 874:        var_sys.PositionActual += ( 100/50);
 14178  00682E  0E02               	movlw	2
 14179  006830  0101               	movlb	1	; () banked
 14180  006832  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14181  006834  0E00               	movlw	0
 14182  006836  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14183  006838  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14184  00683A  D008               	goto	L74
 14185  00683C                     l20918:
 14186                           
 14187                           ; BSR set to: 0
 14188                           ;sm_ControlGate_MC50.c: 878:     {;sm_ControlGate_MC50.c: 879:        var_sys.PositionAc
      +                          tual -= ( 50/50);
 14189  00683C  0EFF               	movlw	255
 14190  00683E  0101               	movlb	1	; () banked
 14191  006840  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 14192  006842  0EFF               	movlw	255
 14193  006844  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 14194  006846  0EFF               	movlw	255
 14195  006848  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 14196  00684A  0EFF               	movlw	255
 14197  00684C                     L74:
 14198  00684C  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 14199                           
 14200                           ; BSR set to: 1
 14201                           ;sm_ControlGate_MC50.c: 882:     if (var_sys.PositionActual > getTimeDecelaration(InOpen
      +                          Full)&& var_sys_NVM.TypeofMotor != 2) {
 14202  00684E  0E01               	movlw	1
 14203  006850  EC45  F038         	call	_getTimeDecelaration
 14204  006854  0101               	movlb	1	; () banked
 14205  006856  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14206  006858  5C29               	subwf	?_getTimeDecelaration^0,w,c
 14207  00685A  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14208  00685C  582A               	subwfb	(?_getTimeDecelaration+1)^0,w,c
 14209  00685E  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14210  006860  582B               	subwfb	(?_getTimeDecelaration+2)^0,w,c
 14211  006862  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14212  006864  0A80               	xorlw	128
 14213  006866  0100               	movlb	0	; () banked
 14214  006868  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14215  00686A  0101               	movlb	1	; () banked
 14216  00686C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14217  00686E  0A80               	xorlw	128
 14218  006870  0100               	movlb	0	; () banked
 14219  006872  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14220  006874  B0D8               	btfsc	status,0,c
 14221  006876  D008               	goto	l20926
 14222                           
 14223                           ; BSR set to: 0
 14224  006878  0E02               	movlw	2
 14225  00687A  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14226  00687C  B4D8               	btfsc	status,2,c
 14227  00687E  D004               	goto	l20926
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;sm_ControlGate_MC50.c: 883:         var_sys.PositionActual = getTimeDecelaration(InOpen
      +                          Full);
 14231  006880  0E01               	movlw	1
 14232  006882  EC45  F038         	call	_getTimeDecelaration
 14233  006886  D01A               	goto	L75
 14234  006888                     l20926:
 14235                           
 14236                           ; BSR set to: 0
 14237  006888  0E03               	movlw	3
 14238  00688A  EC45  F038         	call	_getTimeDecelaration
 14239  00688E  5029               	movf	?_getTimeDecelaration^0,w,c
 14240  006890  0101               	movlb	1	; () banked
 14241  006892  5D1E               	subwf	(_var_sys+30)& (0+255),w,b	;volatile
 14242  006894  502A               	movf	(?_getTimeDecelaration+1)^0,w,c
 14243  006896  591F               	subwfb	(_var_sys+31)& (0+255),w,b	;volatile
 14244  006898  502B               	movf	(?_getTimeDecelaration+2)^0,w,c
 14245  00689A  5920               	subwfb	(_var_sys+32)& (0+255),w,b	;volatile
 14246  00689C  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14247  00689E  0A80               	xorlw	128
 14248  0068A0  0100               	movlb	0	; () banked
 14249  0068A2  6FD8               	movwf	??_setPositionInvertionInClosing& (0+255),b
 14250  0068A4  502C               	movf	(?_getTimeDecelaration+3)^0,w,c
 14251  0068A6  0A80               	xorlw	128
 14252  0068A8  59D8               	subwfb	??_setPositionInvertionInClosing& (0+255),w,b
 14253  0068AA  B0D8               	btfsc	status,0,c
 14254  0068AC  D00F               	goto	l20932
 14255                           
 14256                           ; BSR set to: 0
 14257  0068AE  0E02               	movlw	2
 14258  0068B0  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14259  0068B2  B4D8               	btfsc	status,2,c
 14260  0068B4  D00B               	goto	l20932
 14261                           
 14262                           ; BSR set to: 0
 14263                           ;sm_ControlGate_MC50.c: 887:         var_sys.PositionActual = getTimeDecelaration(InClos
      +                          e);
 14264  0068B6  0E03               	movlw	3
 14265  0068B8  EC45  F038         	call	_getTimeDecelaration
 14266  0068BC                     L75:
 14267  0068BC  C029  F11E         	movff	?_getTimeDecelaration,_var_sys+30	;volatile
 14268  0068C0  C02A  F11F         	movff	?_getTimeDecelaration+1,_var_sys+31	;volatile
 14269  0068C4  C02B  F120         	movff	?_getTimeDecelaration+2,_var_sys+32	;volatile
 14270  0068C8  C02C  F121         	movff	?_getTimeDecelaration+3,_var_sys+33	;volatile
 14271  0068CC                     l20932:
 14272                           
 14273                           ;sm_ControlGate_MC50.c: 890:     var_sys.TimeMaxMotorIsON = ((signed long)var_sys_NVM.le
      +                          arningTimeToOpen - var_sys.PositionActual) + (var_sys_NVM.decelarationOpen*( 500/50))+ (
      +                          1000/50)*10;
 14274  0068CC  0100               	movlb	0	; () banked
 14275  0068CE  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14276  0068D0  0D0A               	mullw	10
 14277  0068D2  CFF3 F0D8          	movff	prodl,??_setPositionInvertionInClosing
 14278  0068D6  CFF4 F0D9          	movff	prodh,??_setPositionInvertionInClosing+1
 14279  0068DA  0E00               	movlw	0
 14280  0068DC  BFD9               	btfsc	(??_setPositionInvertionInClosing+1)& (0+255),7,b
 14281  0068DE  0EFF               	movlw	255
 14282  0068E0  6FDA               	movwf	(??_setPositionInvertionInClosing+2)& (0+255),b
 14283  0068E2  6FDB               	movwf	(??_setPositionInvertionInClosing+3)& (0+255),b
 14284  0068E4  0101               	movlb	1	; () banked
 14285  0068E6  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 14286  0068E8  0100               	movlb	0	; () banked
 14287  0068EA  5DD8               	subwf	??_setPositionInvertionInClosing& (0+255),w,b
 14288  0068EC  6FDC               	movwf	(??_setPositionInvertionInClosing+4)& (0+255),b
 14289  0068EE  0101               	movlb	1	; () banked
 14290  0068F0  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 14291  0068F2  0100               	movlb	0	; () banked
 14292  0068F4  59D9               	subwfb	(??_setPositionInvertionInClosing+1)& (0+255),w,b
 14293  0068F6  6FDD               	movwf	(??_setPositionInvertionInClosing+5)& (0+255),b
 14294  0068F8  0101               	movlb	1	; () banked
 14295  0068FA  5120               	movf	(_var_sys+32)& (0+255),w,b	;volatile
 14296  0068FC  0100               	movlb	0	; () banked
 14297  0068FE  59DA               	subwfb	(??_setPositionInvertionInClosing+2)& (0+255),w,b
 14298  006900  6FDE               	movwf	(??_setPositionInvertionInClosing+6)& (0+255),b
 14299  006902  0101               	movlb	1	; () banked
 14300  006904  5121               	movf	(_var_sys+33)& (0+255),w,b	;volatile
 14301  006906  0100               	movlb	0	; () banked
 14302  006908  59DB               	subwfb	(??_setPositionInvertionInClosing+3)& (0+255),w,b
 14303  00690A  6FDF               	movwf	(??_setPositionInvertionInClosing+7)& (0+255),b
 14304  00690C  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14305  00690E  25DC               	addwf	(??_setPositionInvertionInClosing+4)& (0+255),w,b
 14306  006910  6FE0               	movwf	(??_setPositionInvertionInClosing+8)& (0+255),b
 14307  006912  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14308  006914  21DD               	addwfc	(??_setPositionInvertionInClosing+5)& (0+255),w,b
 14309  006916  6FE1               	movwf	(??_setPositionInvertionInClosing+9)& (0+255),b
 14310  006918  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14311  00691A  21DE               	addwfc	(??_setPositionInvertionInClosing+6)& (0+255),w,b
 14312  00691C  6FE2               	movwf	(??_setPositionInvertionInClosing+10)& (0+255),b
 14313  00691E  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14314  006920  21DF               	addwfc	(??_setPositionInvertionInClosing+7)& (0+255),w,b
 14315  006922  6FE3               	movwf	(??_setPositionInvertionInClosing+11)& (0+255),b
 14316  006924  0EC8               	movlw	200
 14317  006926  25E0               	addwf	(??_setPositionInvertionInClosing+8)& (0+255),w,b
 14318  006928  0101               	movlb	1	; () banked
 14319  00692A  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 14320  00692C  0E00               	movlw	0
 14321  00692E  0100               	movlb	0	; () banked
 14322  006930  21E1               	addwfc	(??_setPositionInvertionInClosing+9)& (0+255),w,b
 14323  006932  0101               	movlb	1	; () banked
 14324  006934  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 14325  006936  0E00               	movlw	0
 14326  006938  0100               	movlb	0	; () banked
 14327  00693A  21E2               	addwfc	(??_setPositionInvertionInClosing+10)& (0+255),w,b
 14328  00693C  0101               	movlb	1	; () banked
 14329  00693E  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 14330  006940  0E00               	movlw	0
 14331  006942  0100               	movlb	0	; () banked
 14332  006944  21E3               	addwfc	(??_setPositionInvertionInClosing+11)& (0+255),w,b
 14333  006946  0101               	movlb	1	; () banked
 14334  006948  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 14335                           
 14336                           ; BSR set to: 1
 14337  00694A  0012               	return		;funcret
 14338  00694C                     __end_of_setPositionInvertionInClosing:
 14339                           	callstack 0
 14340                           
 14341 ;; *************** function _getTimeDecelaration *****************
 14342 ;; Defined at:
 14343 ;;		line 641 in file "outputs_MC50.c"
 14344 ;; Parameters:    Size  Location     Type
 14345 ;;  state           1    wreg     enum E10381
 14346 ;; Auto vars:     Size  Location     Type
 14347 ;;  state           1   48[COMRAM] enum E10381
 14348 ;; Return value:  Size  Location     Type
 14349 ;;                  4   40[COMRAM] long 
 14350 ;; Registers used:
 14351 ;;		wreg, status,2, status,0, cstack
 14352 ;; Tracked objects:
 14353 ;;		On entry : 3E/1
 14354 ;;		On exit  : 0/0
 14355 ;;		Unchanged: 0/0
 14356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14359 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14360 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14361 ;;Total ram usage:        9 bytes
 14362 ;; Hardware stack levels used: 1
 14363 ;; Hardware stack levels required when called: 5
 14364 ;; This function calls:
 14365 ;;		___lmul
 14366 ;; This function is called by:
 14367 ;;		_getStateOpenPosition
 14368 ;;		_controlVelocity
 14369 ;;		_setPositionInvertionInClosing
 14370 ;;		_setPositionInvertionInOpening
 14371 ;; This function uses a non-reentrant model
 14372 ;;
 14373                           
 14374                           	psect	text35
 14375  00708A                     __ptext35:
 14376                           	callstack 0
 14377  00708A                     _getTimeDecelaration:
 14378                           	callstack 22
 14379                           
 14380                           ; BSR set to: 1
 14381                           ;incstack = 0
 14382                           ;getTimeDecelaration@state stored from wreg
 14383  00708A  6E31               	movwf	getTimeDecelaration@state^0,c
 14384                           
 14385                           ;outputs_MC50.c: 641: signed long getTimeDecelaration(stateMotor_enum state);outputs_MC5
      +                          0.c: 642: {;outputs_MC50.c: 644:     if(state==InClose)
 14386  00708C  0E03               	movlw	3
 14387  00708E  1831               	xorwf	getTimeDecelaration@state^0,w,c
 14388  007090  A4D8               	btfss	status,2,c
 14389  007092  D033               	goto	l19954
 14390                           
 14391                           ;outputs_MC50.c: 645:     {;outputs_MC50.c: 646:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14392  007094  0E02               	movlw	2
 14393  007096  0100               	movlb	0	; () banked
 14394  007098  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14395  00709A  B4D8               	btfsc	status,2,c
 14396  00709C  D018               	goto	l19950
 14397                           
 14398                           ; BSR set to: 0
 14399                           ;outputs_MC50.c: 647:         {return (signed long)((signed long)var_sys_NVM.decelaratio
      +                          nClose*( 500/50));}
 14400  00709E  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 14401  0070A0  6E1D               	movwf	___lmul@multiplier^0,c
 14402  0070A2  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14403  0070A4  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14404  0070A6  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14405  0070A8  0E0A               	movlw	10
 14406  0070AA  6E21               	movwf	___lmul@multiplicand^0,c
 14407  0070AC  0E00               	movlw	0
 14408  0070AE  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14409  0070B0  0E00               	movlw	0
 14410  0070B2  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14411  0070B4  0E00               	movlw	0
 14412  0070B6  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14413  0070B8  EC1C  F044         	call	___lmul	;wreg free
 14414  0070BC  C01D  F029         	movff	?___lmul,?_getTimeDecelaration
 14415  0070C0  C01E  F02A         	movff	?___lmul+1,?_getTimeDecelaration+1
 14416  0070C4  C01F  F02B         	movff	?___lmul+2,?_getTimeDecelaration+2
 14417  0070C8  C020  F02C         	movff	?___lmul+3,?_getTimeDecelaration+3
 14418  0070CC  0012               	return	
 14419  0070CE                     l19950:
 14420                           
 14421                           ; BSR set to: 0
 14422  0070CE  C099  F02D         	movff	_var_sys_NVM+1,??_getTimeDecelaration	;volatile
 14423  0070D2  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14424  0070D4  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14425  0070D6  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14426  0070D8  0E02               	movlw	2
 14427  0070DA                     u22825:
 14428  0070DA  90D8               	bcf	status,0,c
 14429  0070DC  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14430  0070DE  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14431  0070E0  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14432  0070E2  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14433  0070E4  2EE8               	decfsz	wreg,f,c
 14434  0070E6  D7F9               	goto	u22825
 14435  0070E8  C02D  F029         	movff	??_getTimeDecelaration,?_getTimeDecelaration
 14436  0070EC  C02E  F02A         	movff	??_getTimeDecelaration+1,?_getTimeDecelaration+1
 14437  0070F0  C02F  F02B         	movff	??_getTimeDecelaration+2,?_getTimeDecelaration+2
 14438  0070F4  C030  F02C         	movff	??_getTimeDecelaration+3,?_getTimeDecelaration+3
 14439  0070F8  0012               	return	
 14440  0070FA                     l19954:
 14441                           
 14442                           ;outputs_MC50.c: 651:     {;outputs_MC50.c: 652:         if (var_sys_NVM.TypeofMotor != 
      +                          2)
 14443  0070FA  0E02               	movlw	2
 14444  0070FC  0100               	movlb	0	; () banked
 14445  0070FE  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 14446  007100  B4D8               	btfsc	status,2,c
 14447  007102  D01D               	goto	l19962
 14448                           
 14449                           ; BSR set to: 0
 14450                           ;outputs_MC50.c: 653:         {return (signed long)((signed long)var_sys_NVM.learningTim
      +                          eToOpen-(((signed long)var_sys_NVM.decelarationOpen*( 500/50))));}
 14451  007104  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 14452  007106  6E1D               	movwf	___lmul@multiplier^0,c
 14453  007108  6A1E               	clrf	(___lmul@multiplier+1)^0,c
 14454  00710A  6A1F               	clrf	(___lmul@multiplier+2)^0,c
 14455  00710C  6A20               	clrf	(___lmul@multiplier+3)^0,c
 14456  00710E  0EF6               	movlw	246
 14457  007110  6E21               	movwf	___lmul@multiplicand^0,c
 14458  007112  0EFF               	movlw	255
 14459  007114  6E22               	movwf	(___lmul@multiplicand+1)^0,c
 14460  007116  0EFF               	movlw	255
 14461  007118  6E23               	movwf	(___lmul@multiplicand+2)^0,c
 14462  00711A  0EFF               	movlw	255
 14463  00711C  6E24               	movwf	(___lmul@multiplicand+3)^0,c
 14464  00711E  EC1C  F044         	call	___lmul	;wreg free
 14465  007122  0100               	movlb	0	; () banked
 14466  007124  51CC               	movf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14467  007126  241D               	addwf	?___lmul^0,w,c
 14468  007128  6E29               	movwf	?_getTimeDecelaration^0,c
 14469  00712A  51CD               	movf	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14470  00712C  201E               	addwfc	(?___lmul+1)^0,w,c
 14471  00712E  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14472  007130  51CE               	movf	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14473  007132  201F               	addwfc	(?___lmul+2)^0,w,c
 14474  007134  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14475  007136  51CF               	movf	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14476  007138  2020               	addwfc	(?___lmul+3)^0,w,c
 14477  00713A  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14478  00713C  0012               	return	
 14479  00713E                     l19962:
 14480                           
 14481                           ; BSR set to: 0
 14482  00713E  C098  F02D         	movff	_var_sys_NVM,??_getTimeDecelaration	;volatile
 14483  007142  6A2E               	clrf	(??_getTimeDecelaration+1)^0,c
 14484  007144  6A2F               	clrf	(??_getTimeDecelaration+2)^0,c
 14485  007146  6A30               	clrf	(??_getTimeDecelaration+3)^0,c
 14486  007148  0E02               	movlw	2
 14487  00714A                     u22845:
 14488  00714A  90D8               	bcf	status,0,c
 14489  00714C  362D               	rlcf	??_getTimeDecelaration^0,f,c
 14490  00714E  362E               	rlcf	(??_getTimeDecelaration+1)^0,f,c
 14491  007150  362F               	rlcf	(??_getTimeDecelaration+2)^0,f,c
 14492  007152  3630               	rlcf	(??_getTimeDecelaration+3)^0,f,c
 14493  007154  2EE8               	decfsz	wreg,f,c
 14494  007156  D7F9               	goto	u22845
 14495  007158  502D               	movf	??_getTimeDecelaration^0,w,c
 14496  00715A  5DCC               	subwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 14497  00715C  6E29               	movwf	?_getTimeDecelaration^0,c
 14498  00715E  502E               	movf	(??_getTimeDecelaration+1)^0,w,c
 14499  007160  59CD               	subwfb	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 14500  007162  6E2A               	movwf	(?_getTimeDecelaration+1)^0,c
 14501  007164  502F               	movf	(??_getTimeDecelaration+2)^0,w,c
 14502  007166  59CE               	subwfb	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 14503  007168  6E2B               	movwf	(?_getTimeDecelaration+2)^0,c
 14504  00716A  5030               	movf	(??_getTimeDecelaration+3)^0,w,c
 14505  00716C  59CF               	subwfb	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 14506  00716E  6E2C               	movwf	(?_getTimeDecelaration+3)^0,c
 14507  007170  0012               	return		;funcret
 14508  007172                     __end_of_getTimeDecelaration:
 14509                           	callstack 0
 14510                           
 14511 ;; *************** function ___lmul *****************
 14512 ;; Defined at:
 14513 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;  multiplier      4   28[COMRAM] unsigned long 
 14516 ;;  multiplicand    4   32[COMRAM] unsigned long 
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;  product         4   36[COMRAM] unsigned long 
 14519 ;; Return value:  Size  Location     Type
 14520 ;;                  4   28[COMRAM] unsigned long 
 14521 ;; Registers used:
 14522 ;;		wreg, status,2, status,0
 14523 ;; Tracked objects:
 14524 ;;		On entry : 0/1
 14525 ;;		On exit  : 0/0
 14526 ;;		Unchanged: 0/0
 14527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14528 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14529 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14531 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14532 ;;Total ram usage:       12 bytes
 14533 ;; Hardware stack levels used: 1
 14534 ;; Hardware stack levels required when called: 4
 14535 ;; This function calls:
 14536 ;;		Nothing
 14537 ;; This function is called by:
 14538 ;;		_getStateOpenPosition
 14539 ;;		_getTimeDecelaration
 14540 ;;		_actionZone_Closing
 14541 ;;		_sm_execute_menuConfiguration
 14542 ;; This function uses a non-reentrant model
 14543 ;;
 14544                           
 14545                           	psect	text36
 14546  008838                     __ptext36:
 14547                           	callstack 0
 14548  008838                     ___lmul:
 14549                           	callstack 24
 14550                           
 14551                           ;incstack = 0
 14552  008838  0E00               	movlw	0
 14553  00883A  6E25               	movwf	___lmul@product^0,c
 14554  00883C  0E00               	movlw	0
 14555  00883E  6E26               	movwf	(___lmul@product+1)^0,c
 14556  008840  0E00               	movlw	0
 14557  008842  6E27               	movwf	(___lmul@product+2)^0,c
 14558  008844  0E00               	movlw	0
 14559  008846  6E28               	movwf	(___lmul@product+3)^0,c
 14560  008848                     l19840:
 14561  008848  A01D               	btfss	___lmul@multiplier^0,0,c
 14562  00884A  D008               	goto	l19844
 14563  00884C  5021               	movf	___lmul@multiplicand^0,w,c
 14564  00884E  2625               	addwf	___lmul@product^0,f,c
 14565  008850  5022               	movf	(___lmul@multiplicand+1)^0,w,c
 14566  008852  2226               	addwfc	(___lmul@product+1)^0,f,c
 14567  008854  5023               	movf	(___lmul@multiplicand+2)^0,w,c
 14568  008856  2227               	addwfc	(___lmul@product+2)^0,f,c
 14569  008858  5024               	movf	(___lmul@multiplicand+3)^0,w,c
 14570  00885A  2228               	addwfc	(___lmul@product+3)^0,f,c
 14571  00885C                     l19844:
 14572  00885C  90D8               	bcf	status,0,c
 14573  00885E  3621               	rlcf	___lmul@multiplicand^0,f,c
 14574  008860  3622               	rlcf	(___lmul@multiplicand+1)^0,f,c
 14575  008862  3623               	rlcf	(___lmul@multiplicand+2)^0,f,c
 14576  008864  3624               	rlcf	(___lmul@multiplicand+3)^0,f,c
 14577  008866  90D8               	bcf	status,0,c
 14578  008868  3220               	rrcf	(___lmul@multiplier+3)^0,f,c
 14579  00886A  321F               	rrcf	(___lmul@multiplier+2)^0,f,c
 14580  00886C  321E               	rrcf	(___lmul@multiplier+1)^0,f,c
 14581  00886E  321D               	rrcf	___lmul@multiplier^0,f,c
 14582  008870  501D               	movf	___lmul@multiplier^0,w,c
 14583  008872  101E               	iorwf	(___lmul@multiplier+1)^0,w,c
 14584  008874  101F               	iorwf	(___lmul@multiplier+2)^0,w,c
 14585  008876  1020               	iorwf	(___lmul@multiplier+3)^0,w,c
 14586  008878  A4D8               	btfss	status,2,c
 14587  00887A  D7E6               	goto	l19840
 14588  00887C  C025  F01D         	movff	___lmul@product,?___lmul
 14589  008880  C026  F01E         	movff	___lmul@product+1,?___lmul+1
 14590  008884  C027  F01F         	movff	___lmul@product+2,?___lmul+2
 14591  008888  C028  F020         	movff	___lmul@product+3,?___lmul+3
 14592  00888C  0012               	return		;funcret
 14593  00888E                     __end_of___lmul:
 14594                           	callstack 0
 14595                           
 14596 ;; *************** function _StopOrder *****************
 14597 ;; Defined at:
 14598 ;;		line 96 in file "sm_ControlGate_MC50.c"
 14599 ;; Parameters:    Size  Location     Type
 14600 ;;		None
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;		None
 14603 ;; Return value:  Size  Location     Type
 14604 ;;                  1    wreg      void 
 14605 ;; Registers used:
 14606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14607 ;; Tracked objects:
 14608 ;;		On entry : 3E/1
 14609 ;;		On exit  : 0/0
 14610 ;;		Unchanged: 0/0
 14611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14616 ;;Total ram usage:        0 bytes
 14617 ;; Hardware stack levels used: 1
 14618 ;; Hardware stack levels required when called: 6
 14619 ;; This function calls:
 14620 ;;		_sm_send_event
 14621 ;; This function is called by:
 14622 ;;		_actionZone_Opening
 14623 ;;		_actionZone_Closing
 14624 ;; This function uses a non-reentrant model
 14625 ;;
 14626                           
 14627                           	psect	text37
 14628  00937C                     __ptext37:
 14629                           	callstack 0
 14630  00937C                     _StopOrder:
 14631                           	callstack 22
 14632                           
 14633                           ;sm_ControlGate_MC50.c: 99:    var_sys.StateMotor = Stopped;
 14634                           
 14635                           ;incstack = 0
 14636  00937C  0E00               	movlw	0
 14637  00937E  0101               	movlb	1	; () banked
 14638  009380  6F00               	movwf	_var_sys& (0+255),b	;volatile
 14639                           
 14640                           ; BSR set to: 1
 14641                           ;sm_ControlGate_MC50.c: 100:    sm_send_event(&controlGate_stateMachine, ev_StopGate);
 14642  009382  0EE3               	movlw	low _controlGate_stateMachine
 14643  009384  6E12               	movwf	sm_send_event@psm^0,c
 14644  009386  0E01               	movlw	high _controlGate_stateMachine
 14645  009388  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14646  00938A  0E00               	movlw	0
 14647  00938C  6E15               	movwf	(sm_send_event@event+1)^0,c
 14648  00938E  0E0D               	movlw	13
 14649  009390  6E14               	movwf	sm_send_event@event^0,c
 14650  009392  EC0E  F043         	call	_sm_send_event	;wreg free
 14651  009396  0012               	return		;funcret
 14652  009398                     __end_of_StopOrder:
 14653                           	callstack 0
 14654                           
 14655 ;; *************** function _GetSecurityStateInClosing *****************
 14656 ;; Defined at:
 14657 ;;		line 776 in file "inputs_MC50.c"
 14658 ;; Parameters:    Size  Location     Type
 14659 ;;		None
 14660 ;; Auto vars:     Size  Location     Type
 14661 ;;		None
 14662 ;; Return value:  Size  Location     Type
 14663 ;;                  1    wreg      enum E10564
 14664 ;; Registers used:
 14665 ;;		wreg, status,2, status,0, cstack
 14666 ;; Tracked objects:
 14667 ;;		On entry : 0/0
 14668 ;;		On exit  : 3E/0
 14669 ;;		Unchanged: 0/0
 14670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14675 ;;Total ram usage:        0 bytes
 14676 ;; Hardware stack levels used: 1
 14677 ;; Hardware stack levels required when called: 5
 14678 ;; This function calls:
 14679 ;;		_SetSegmentValueIntermitent
 14680 ;; This function is called by:
 14681 ;;		_actionZone_Opening
 14682 ;;		_actionZone_Opened
 14683 ;;		_actionZone_Closing
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           	psect	text38
 14688  0076BA                     __ptext38:
 14689                           	callstack 0
 14690  0076BA                     _GetSecurityStateInClosing:
 14691                           	callstack 23
 14692                           
 14693                           ;inputs_MC50.c: 786:      if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBar
      +                          IsObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 0)&& (var_sys_NVM.Stopboton == 
      +                          0))
 14694                           
 14695                           ;incstack = 0
 14696  0076BA  0100               	movlb	0	; () banked
 14697  0076BC  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 14698  0076BE  A4D8               	btfss	status,2,c
 14699  0076C0  D01B               	goto	l20598
 14700                           
 14701                           ; BSR set to: 0
 14702  0076C2  0101               	movlb	1	; () banked
 14703  0076C4  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14704  0076C6  A4D8               	btfss	status,2,c
 14705  0076C8  D017               	goto	l20598
 14706                           
 14707                           ; BSR set to: 1
 14708  0076CA  0100               	movlb	0	; () banked
 14709  0076CC  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 14710  0076CE  A4D8               	btfss	status,2,c
 14711  0076D0  D013               	goto	l20598
 14712                           
 14713                           ; BSR set to: 0
 14714  0076D2  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14715  0076D4  A4D8               	btfss	status,2,c
 14716  0076D6  D010               	goto	l20598
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;inputs_MC50.c: 787:     {;inputs_MC50.c: 790:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14720  0076D8  0E00               	movlw	0
 14721  0076DA  0101               	movlb	1	; () banked
 14722  0076DC  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14723  0076DE  0E04               	movlw	4
 14724  0076E0  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14725                           
 14726                           ; BSR set to: 1
 14727                           ;inputs_MC50.c: 791:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 14728  0076E2  0E0A               	movlw	10
 14729  0076E4  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14730  0076E6  0E00               	movlw	0
 14731  0076E8  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14732  0076EA  0E14               	movlw	20
 14733  0076EC  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14734  0076EE  0E12               	movlw	18
 14735  0076F0  ECAD  F047         	call	_SetSegmentValueIntermitent
 14736  0076F4                     l20592:
 14737                           
 14738                           ; BSR set to: 1
 14739                           ;inputs_MC50.c: 792:         return YES;
 14740  0076F4  0E01               	movlw	1
 14741  0076F6  0012               	return	
 14742  0076F8                     l20598:
 14743  0076F8  0100               	movlb	0	; () banked
 14744  0076FA  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 14745  0076FC  A4D8               	btfss	status,2,c
 14746  0076FE  D013               	goto	l20612
 14747                           
 14748                           ; BSR set to: 0
 14749  007700  0101               	movlb	1	; () banked
 14750  007702  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 14751  007704  A4D8               	btfss	status,2,c
 14752  007706  D00F               	goto	l20612
 14753                           
 14754                           ; BSR set to: 1
 14755                           ;inputs_MC50.c: 795:     {;inputs_MC50.c: 797:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14756  007708  0E00               	movlw	0
 14757  00770A  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14758  00770C  0E04               	movlw	4
 14759  00770E  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14760                           
 14761                           ; BSR set to: 1
 14762                           ;inputs_MC50.c: 798:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 14763  007710  0E15               	movlw	21
 14764  007712  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14765  007714  0E00               	movlw	0
 14766  007716  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14767  007718  0E14               	movlw	20
 14768  00771A  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14769  00771C  0E05               	movlw	5
 14770  00771E  ECAD  F047         	call	_SetSegmentValueIntermitent
 14771                           
 14772                           ; BSR set to: 1
 14773                           ;inputs_MC50.c: 799:         return ST;
 14774  007722  0E02               	movlw	2
 14775  007724  0012               	return	
 14776  007726                     l20612:
 14777  007726  0100               	movlb	0	; () banked
 14778  007728  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 14779  00772A  A4D8               	btfss	status,2,c
 14780  00772C  D017               	goto	l20628
 14781                           
 14782                           ; BSR set to: 0
 14783  00772E  0101               	movlb	1	; () banked
 14784  007730  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 14785  007732  A4D8               	btfss	status,2,c
 14786  007734  D013               	goto	l20628
 14787                           
 14788                           ; BSR set to: 1
 14789  007736  0100               	movlb	0	; () banked
 14790  007738  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 14791  00773A  A4D8               	btfss	status,2,c
 14792  00773C  D00F               	goto	l20628
 14793                           
 14794                           ; BSR set to: 0
 14795                           ;inputs_MC50.c: 803:     {;inputs_MC50.c: 805:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 14796  00773E  0E00               	movlw	0
 14797  007740  0101               	movlb	1	; () banked
 14798  007742  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 14799  007744  0E04               	movlw	4
 14800  007746  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 14801                           
 14802                           ; BSR set to: 1
 14803                           ;inputs_MC50.c: 806:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 14804  007748  0E0E               	movlw	14
 14805  00774A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 14806  00774C  0E00               	movlw	0
 14807  00774E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 14808  007750  0E14               	movlw	20
 14809  007752  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 14810  007754  0E12               	movlw	18
 14811  007756  ECAD  F047         	call	_SetSegmentValueIntermitent
 14812  00775A  D7CC               	goto	l20592
 14813  00775C                     l20628:
 14814                           
 14815                           ;inputs_MC50.c: 811:     {;inputs_MC50.c: 812:         return NO;
 14816  00775C  0E00               	movlw	0
 14817  00775E  0012               	return		;funcret
 14818  007760                     __end_of_GetSecurityStateInClosing:
 14819                           	callstack 0
 14820                           
 14821 ;; *************** function _actionZone_Closed *****************
 14822 ;; Defined at:
 14823 ;;		line 327 in file "sm_ControlGate_MC50.c"
 14824 ;; Parameters:    Size  Location     Type
 14825 ;;		None
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;  typeOpenOrde    1   32[COMRAM] enum E10372
 14828 ;;  securityOpen    1   31[COMRAM] enum E10397
 14829 ;; Return value:  Size  Location     Type
 14830 ;;                  1    wreg      void 
 14831 ;; Registers used:
 14832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14833 ;; Tracked objects:
 14834 ;;		On entry : 3F/0
 14835 ;;		On exit  : 0/0
 14836 ;;		Unchanged: 0/0
 14837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14841 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14842 ;;Total ram usage:        2 bytes
 14843 ;; Hardware stack levels used: 1
 14844 ;; Hardware stack levels required when called: 8
 14845 ;; This function calls:
 14846 ;;		_GetOpenOrder
 14847 ;;		_GetSecurityStateInOpening
 14848 ;;		_InitFullAutoTime
 14849 ;;		_InitWalkAutoTime
 14850 ;;		_OpenFullOrder
 14851 ;;		_OpenWalkOrder
 14852 ;;		_WaitPreFlash
 14853 ;;		_sm_send_event
 14854 ;; This function is called by:
 14855 ;;		_sm_execute_ControlGate
 14856 ;; This function uses a non-reentrant model
 14857 ;;
 14858                           
 14859                           	psect	text39
 14860  007610                     __ptext39:
 14861                           	callstack 0
 14862  007610                     _actionZone_Closed:
 14863                           	callstack 21
 14864                           
 14865                           ; BSR set to: 0
 14866                           ;sm_ControlGate_MC50.c: 331:     if (main_stateMachine.current_state != st_MenuConfigura
      +                          tion) {
 14867                           
 14868                           ;incstack = 0
 14869  007610  0101               	movlb	1	; () banked
 14870  007612  05EE               	decf	_main_stateMachine& (0+255),w,b
 14871  007614  11EF               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 14872  007616  B4D8               	btfsc	status,2,c
 14873  007618  0012               	return	
 14874                           
 14875                           ; BSR set to: 1
 14876                           ;sm_ControlGate_MC50.c: 334:         TypeCMD typeOpenOrder = GetOpenOrder();
 14877  00761A  EC15  F02B         	call	_GetOpenOrder	;wreg free
 14878  00761E  6E21               	movwf	actionZone_Closed@typeOpenOrder^0,c
 14879                           
 14880                           ;sm_ControlGate_MC50.c: 336:         StateEnum securityOpening = GetSecurityStateInOpeni
      +                          ng();
 14881  007620  ECB0  F03B         	call	_GetSecurityStateInOpening	;wreg free
 14882  007624  6E20               	movwf	actionZone_Closed@securityOpening^0,c
 14883                           
 14884                           ;sm_ControlGate_MC50.c: 338:         if (var_sys_NVM.homemPresente == 1) {
 14885  007626  0100               	movlb	0	; () banked
 14886  007628  05A8               	decf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 14887  00762A  A4D8               	btfss	status,2,c
 14888  00762C  D018               	goto	l21772
 14889                           
 14890                           ; BSR set to: 0
 14891                           ;sm_ControlGate_MC50.c: 344:             if (typeOpenOrder == TypeFullOpen && var_sys.Fi
      +                          mCurso_OpenIsEnabled == NO && securityOpening == NO) {
 14892  00762E  0E03               	movlw	3
 14893  007630  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14894  007632  A4D8               	btfss	status,2,c
 14895  007634  0012               	return	
 14896                           
 14897                           ; BSR set to: 0
 14898  007636  0101               	movlb	1	; () banked
 14899  007638  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 14900  00763A  A4D8               	btfss	status,2,c
 14901  00763C  0012               	return	
 14902                           
 14903                           ; BSR set to: 1
 14904  00763E  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14905  007640  A4D8               	btfss	status,2,c
 14906  007642  0012               	return	
 14907                           
 14908                           ; BSR set to: 1
 14909                           ;sm_ControlGate_MC50.c: 346:                 OpenFullOrder();
 14910  007644  EC1C  F049         	call	_OpenFullOrder	;wreg free
 14911  007648                     l21770:
 14912                           
 14913                           ;sm_ControlGate_MC50.c: 347:                 sm_send_event(&main_stateMachine, ev_MotorI
      +                          sOpen);
 14914  007648  0EEE               	movlw	low _main_stateMachine
 14915  00764A  6E12               	movwf	sm_send_event@psm^0,c
 14916  00764C  0E01               	movlw	high _main_stateMachine
 14917  00764E  6E13               	movwf	(sm_send_event@psm+1)^0,c
 14918  007650  0E00               	movlw	0
 14919  007652  6E15               	movwf	(sm_send_event@event+1)^0,c
 14920  007654  0E11               	movlw	17
 14921  007656  6E14               	movwf	sm_send_event@event^0,c
 14922  007658  EC0E  F043         	call	_sm_send_event	;wreg free
 14923  00765C  0012               	return	
 14924  00765E                     l21772:
 14925                           
 14926                           ; BSR set to: 0
 14927  00765E  0421               	decf	actionZone_Closed@typeOpenOrder^0,w,c
 14928  007660  B4D8               	btfsc	status,2,c
 14929  007662  D004               	goto	u25230
 14930                           
 14931                           ; BSR set to: 0
 14932  007664  0E03               	movlw	3
 14933  007666  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14934  007668  A4D8               	btfss	status,2,c
 14935  00766A  D017               	goto	l21792
 14936  00766C                     u25230:
 14937                           
 14938                           ; BSR set to: 0
 14939  00766C  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14940  00766E  A4D8               	btfss	status,2,c
 14941  007670  D014               	goto	l21792
 14942                           
 14943                           ; BSR set to: 0
 14944  007672  0101               	movlb	1	; () banked
 14945  007674  511D               	movf	(_var_sys+29)& (0+255),w,b	;volatile
 14946  007676  A4D8               	btfss	status,2,c
 14947  007678  D010               	goto	l21792
 14948                           
 14949                           ; BSR set to: 1
 14950                           ;sm_ControlGate_MC50.c: 353:             if (var_sys_NVM.flashRGBMode == rgb_pre){
 14951  00767A  0E02               	movlw	2
 14952  00767C  0100               	movlb	0	; () banked
 14953  00767E  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 14954  007680  A4D8               	btfss	status,2,c
 14955  007682  D006               	goto	l21786
 14956                           
 14957                           ; BSR set to: 0
 14958                           ;sm_ControlGate_MC50.c: 354:                 var_sys.preflashingcontrol = YES;
 14959  007684  0E01               	movlw	1
 14960  007686  0101               	movlb	1	; () banked
 14961  007688  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 14962                           
 14963                           ; BSR set to: 1
 14964                           ;sm_ControlGate_MC50.c: 355:                 WaitPreFlash();
 14965  00768A  EC33  F041         	call	_WaitPreFlash	;wreg free
 14966                           
 14967                           ;sm_ControlGate_MC50.c: 356:             }
 14968  00768E  0012               	return	
 14969  007690                     l21786:
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;sm_ControlGate_MC50.c: 358:                 OpenFullOrder();
 14973  007690  EC1C  F049         	call	_OpenFullOrder	;wreg free
 14974                           
 14975                           ;sm_ControlGate_MC50.c: 359:                InitFullAutoTime();
 14976  007694  EC10  F04A         	call	_InitFullAutoTime	;wreg free
 14977  007698  D7D7               	goto	l21770
 14978  00769A                     l21792:
 14979  00769A  0E02               	movlw	2
 14980  00769C  1821               	xorwf	actionZone_Closed@typeOpenOrder^0,w,c
 14981  00769E  A4D8               	btfss	status,2,c
 14982  0076A0  0012               	return	
 14983  0076A2  5020               	movf	actionZone_Closed@securityOpening^0,w,c
 14984  0076A4  A4D8               	btfss	status,2,c
 14985  0076A6  0012               	return	
 14986  0076A8  0100               	movlb	0	; () banked
 14987  0076AA  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 14988  0076AC  B4D8               	btfsc	status,2,c
 14989  0076AE  0012               	return	
 14990                           
 14991                           ; BSR set to: 0
 14992                           ;sm_ControlGate_MC50.c: 367:             OpenWalkOrder();
 14993  0076B0  ECA3  F041         	call	_OpenWalkOrder	;wreg free
 14994                           
 14995                           ;sm_ControlGate_MC50.c: 368:             InitWalkAutoTime();
 14996  0076B4  EC95  F04A         	call	_InitWalkAutoTime	;wreg free
 14997  0076B8  D7C7               	goto	l21770
 14998  0076BA                     __end_of_actionZone_Closed:
 14999                           	callstack 0
 15000                           
 15001 ;; *************** function _WaitPreFlash *****************
 15002 ;; Defined at:
 15003 ;;		line 41 in file "sm_ControlGate_MC50.c"
 15004 ;; Parameters:    Size  Location     Type
 15005 ;;		None
 15006 ;; Auto vars:     Size  Location     Type
 15007 ;;		None
 15008 ;; Return value:  Size  Location     Type
 15009 ;;                  1    wreg      void 
 15010 ;; Registers used:
 15011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15012 ;; Tracked objects:
 15013 ;;		On entry : 3F/1
 15014 ;;		On exit  : 3F/1
 15015 ;;		Unchanged: 0/0
 15016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15021 ;;Total ram usage:        0 bytes
 15022 ;; Hardware stack levels used: 1
 15023 ;; Hardware stack levels required when called: 7
 15024 ;; This function calls:
 15025 ;;		_InitFullAutoTime
 15026 ;;		_OpenFullOrder
 15027 ;;		_sm_send_event
 15028 ;; This function is called by:
 15029 ;;		_sm_execute_ControlGate
 15030 ;;		_actionZone_Closed
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           	psect	text40
 15035  008266                     __ptext40:
 15036                           	callstack 0
 15037  008266                     _WaitPreFlash:
 15038                           	callstack 21
 15039                           
 15040                           ; BSR set to: 1
 15041                           ;sm_ControlGate_MC50.c: 44:     if ((var_sys_NVM.flashRGBMode == rgb_pre) && (var_sys.pr
      +                          eflashingcontrol == YES) && (ts_system.timewaitFlashRGB <=0) && (aux_i == 0))
 15042                           
 15043                           ;incstack = 0
 15044  008266  0E02               	movlw	2
 15045  008268  0100               	movlb	0	; () banked
 15046  00826A  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 15047  00826C  A4D8               	btfss	status,2,c
 15048  00826E  D014               	goto	l20838
 15049                           
 15050                           ; BSR set to: 0
 15051  008270  0101               	movlb	1	; () banked
 15052  008272  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 15053  008274  A4D8               	btfss	status,2,c
 15054  008276  D010               	goto	l20838
 15055                           
 15056                           ; BSR set to: 1
 15057  008278  BFE2               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15058  00827A  D005               	goto	u24170
 15059  00827C  51E2               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15060  00827E  E10C               	bnz	l20838
 15061  008280  05E1               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15062  008282  B0D8               	btfsc	status,0,c
 15063  008284  D009               	goto	l20838
 15064  008286                     u24170:
 15065                           
 15066                           ; BSR set to: 1
 15067  008286  518D               	movf	_aux_i& (0+255),w,b
 15068  008288  A4D8               	btfss	status,2,c
 15069  00828A  D006               	goto	l20838
 15070                           
 15071                           ; BSR set to: 1
 15072                           ;sm_ControlGate_MC50.c: 45:         {;sm_ControlGate_MC50.c: 46:             ts_system.t
      +                          imewaitFlashRGB = (1000/50) *3;
 15073  00828C  0E00               	movlw	0
 15074  00828E  6FE2               	movwf	(_ts_system+71)& (0+255),b	;volatile
 15075  008290  0E3C               	movlw	60
 15076  008292  6FE1               	movwf	(_ts_system+70)& (0+255),b	;volatile
 15077                           
 15078                           ;sm_ControlGate_MC50.c: 47:             aux_i=1;
 15079  008294  0E01               	movlw	1
 15080  008296  6F8D               	movwf	_aux_i& (0+255),b
 15081  008298                     l20838:
 15082                           
 15083                           ;sm_ControlGate_MC50.c: 50:     if ((ts_system.timewaitFlashRGB <= 0) && (aux_i==1 ))
 15084  008298  0101               	movlb	1	; () banked
 15085  00829A  BFE2               	btfsc	(_ts_system+71)& (0+255),7,b	;volatile
 15086  00829C  D005               	goto	u24190
 15087  00829E  51E2               	movf	(_ts_system+71)& (0+255),w,b	;volatile
 15088  0082A0  E119               	bnz	l2580
 15089  0082A2  05E1               	decf	(_ts_system+70)& (0+255),w,b	;volatile
 15090  0082A4  B0D8               	btfsc	status,0,c
 15091  0082A6  0012               	return	
 15092  0082A8                     u24190:
 15093                           
 15094                           ; BSR set to: 1
 15095  0082A8  058D               	decf	_aux_i& (0+255),w,b
 15096  0082AA  A4D8               	btfss	status,2,c
 15097  0082AC  0012               	return	
 15098                           
 15099                           ; BSR set to: 1
 15100                           ;sm_ControlGate_MC50.c: 51:         {;sm_ControlGate_MC50.c: 54:                 var_sys
      +                          .preflashingcontrol = NO;
 15101  0082AE  0E00               	movlw	0
 15102  0082B0  6F1D               	movwf	(_var_sys+29)& (0+255),b	;volatile
 15103                           
 15104                           ; BSR set to: 1
 15105                           ;sm_ControlGate_MC50.c: 55:                 OpenFullOrder();
 15106  0082B2  EC1C  F049         	call	_OpenFullOrder	;wreg free
 15107                           
 15108                           ;sm_ControlGate_MC50.c: 56:                 InitFullAutoTime();
 15109  0082B6  EC10  F04A         	call	_InitFullAutoTime	;wreg free
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;sm_ControlGate_MC50.c: 57:                 sm_send_event(&main_stateMachine, ev_MotorIs
      +                          Open);
 15113  0082BA  0EEE               	movlw	low _main_stateMachine
 15114  0082BC  6E12               	movwf	sm_send_event@psm^0,c
 15115  0082BE  0E01               	movlw	high _main_stateMachine
 15116  0082C0  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15117  0082C2  0E00               	movlw	0
 15118  0082C4  6E15               	movwf	(sm_send_event@event+1)^0,c
 15119  0082C6  0E11               	movlw	17
 15120  0082C8  6E14               	movwf	sm_send_event@event^0,c
 15121  0082CA  EC0E  F043         	call	_sm_send_event	;wreg free
 15122                           
 15123                           ;sm_ControlGate_MC50.c: 58:                 aux_i=0;
 15124  0082CE  0E00               	movlw	0
 15125  0082D0  0101               	movlb	1	; () banked
 15126  0082D2  6F8D               	movwf	_aux_i& (0+255),b
 15127  0082D4                     l2580:
 15128                           
 15129                           ; BSR set to: 1
 15130  0082D4  0012               	return		;funcret
 15131  0082D6                     __end_of_WaitPreFlash:
 15132                           	callstack 0
 15133                           
 15134 ;; *************** function _OpenFullOrder *****************
 15135 ;; Defined at:
 15136 ;;		line 29 in file "sm_ControlGate_MC50.c"
 15137 ;; Parameters:    Size  Location     Type
 15138 ;;		None
 15139 ;; Auto vars:     Size  Location     Type
 15140 ;;		None
 15141 ;; Return value:  Size  Location     Type
 15142 ;;                  1    wreg      void 
 15143 ;; Registers used:
 15144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15145 ;; Tracked objects:
 15146 ;;		On entry : 3E/1
 15147 ;;		On exit  : 3E/0
 15148 ;;		Unchanged: 0/0
 15149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15154 ;;Total ram usage:        0 bytes
 15155 ;; Hardware stack levels used: 1
 15156 ;; Hardware stack levels required when called: 6
 15157 ;; This function calls:
 15158 ;;		_InitSoftStart
 15159 ;;		_sm_send_event
 15160 ;; This function is called by:
 15161 ;;		_WaitPreFlash
 15162 ;;		_actionZone_Closed
 15163 ;;		_actionZone_Opened
 15164 ;;		_actionZone_Closing
 15165 ;; This function uses a non-reentrant model
 15166 ;;
 15167                           
 15168                           	psect	text41
 15169  009238                     __ptext41:
 15170                           	callstack 0
 15171  009238                     _OpenFullOrder:
 15172                           	callstack 22
 15173                           
 15174                           ;sm_ControlGate_MC50.c: 32:     var_sys.StateMotor = InOpenFull;
 15175                           
 15176                           ; BSR set to: 1
 15177                           ;incstack = 0
 15178  009238  0E01               	movlw	1
 15179  00923A  0101               	movlb	1	; () banked
 15180  00923C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15181                           
 15182                           ; BSR set to: 1
 15183                           ;sm_ControlGate_MC50.c: 33:     sm_send_event(&controlGate_stateMachine, ev_OpenGate);
 15184  00923E  0EE3               	movlw	low _controlGate_stateMachine
 15185  009240  6E12               	movwf	sm_send_event@psm^0,c
 15186  009242  0E01               	movlw	high _controlGate_stateMachine
 15187  009244  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15188  009246  0E00               	movlw	0
 15189  009248  6E15               	movwf	(sm_send_event@event+1)^0,c
 15190  00924A  0E0C               	movlw	12
 15191  00924C  6E14               	movwf	sm_send_event@event^0,c
 15192  00924E  EC0E  F043         	call	_sm_send_event	;wreg free
 15193                           
 15194                           ;sm_ControlGate_MC50.c: 34:     var_sys.LastState = InOpenFull;
 15195  009252  0E01               	movlw	1
 15196  009254  0101               	movlb	1	; () banked
 15197  009256  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15198                           
 15199                           ; BSR set to: 1
 15200                           ;sm_ControlGate_MC50.c: 35:     InitSoftStart();
 15201  009258  EC3C  F043         	call	_InitSoftStart	;wreg free
 15202  00925C  0012               	return		;funcret
 15203  00925E                     __end_of_OpenFullOrder:
 15204                           	callstack 0
 15205                           
 15206 ;; *************** function _InitFullAutoTime *****************
 15207 ;; Defined at:
 15208 ;;		line 109 in file "sm_ControlGate_MC50.c"
 15209 ;; Parameters:    Size  Location     Type
 15210 ;;		None
 15211 ;; Auto vars:     Size  Location     Type
 15212 ;;		None
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  1    wreg      void 
 15215 ;; Registers used:
 15216 ;;		wreg, status,2, status,0, prodl, prodh
 15217 ;; Tracked objects:
 15218 ;;		On entry : 3E/0
 15219 ;;		On exit  : 3F/0
 15220 ;;		Unchanged: 0/0
 15221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15226 ;;Total ram usage:        0 bytes
 15227 ;; Hardware stack levels used: 1
 15228 ;; Hardware stack levels required when called: 4
 15229 ;; This function calls:
 15230 ;;		Nothing
 15231 ;; This function is called by:
 15232 ;;		_WaitPreFlash
 15233 ;;		_actionZone_Closed
 15234 ;;		_actionZone_Opening
 15235 ;;		_actionZone_Opened
 15236 ;;		_actionZone_Closing
 15237 ;; This function uses a non-reentrant model
 15238 ;;
 15239                           
 15240                           	psect	text42
 15241  009420                     __ptext42:
 15242                           	callstack 0
 15243  009420                     _InitFullAutoTime:
 15244                           	callstack 24
 15245                           
 15246                           ;sm_ControlGate_MC50.c: 111:     if (var_sys_NVM.homemPresente == 0) {
 15247                           
 15248                           ;incstack = 0
 15249  009420  0100               	movlb	0	; () banked
 15250  009422  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 15251  009424  A4D8               	btfss	status,2,c
 15252  009426  0012               	return	
 15253                           
 15254                           ; BSR set to: 0
 15255                           ;sm_ControlGate_MC50.c: 112:         ts_system.timeWaitToClose = ((int) var_sys_NVM.auto
      +                          TimeFullClose * (1000/50));
 15256  009428  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 15257  00942A  0D14               	mullw	20
 15258  00942C  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 15259  009430  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;sm_ControlGate_MC50.c: 113:         var_sys.AutoCloseActive = var_sys_NVM.autoTimeFullC
      +                          lose;
 15263  009434  C09D  F123         	movff	_var_sys_NVM+5,_var_sys+35	;volatile
 15264                           
 15265                           ; BSR set to: 0
 15266  009438  0012               	return		;funcret
 15267  00943A                     __end_of_InitFullAutoTime:
 15268                           	callstack 0
 15269                           
 15270 ;; *************** function _OpenWalkOrder *****************
 15271 ;; Defined at:
 15272 ;;		line 71 in file "sm_ControlGate_MC50.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;		None
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;  diffTime        2   25[COMRAM] int 
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1    wreg      void 
 15279 ;; Registers used:
 15280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15281 ;; Tracked objects:
 15282 ;;		On entry : 3E/1
 15283 ;;		On exit  : 3E/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15290 ;;Total ram usage:        4 bytes
 15291 ;; Hardware stack levels used: 1
 15292 ;; Hardware stack levels required when called: 6
 15293 ;; This function calls:
 15294 ;;		_InitSoftStart
 15295 ;;		_sm_send_event
 15296 ;; This function is called by:
 15297 ;;		_actionZone_Closed
 15298 ;;		_actionZone_Opened
 15299 ;;		_actionZone_Closing
 15300 ;; This function uses a non-reentrant model
 15301 ;;
 15302                           
 15303                           	psect	text43
 15304  008346                     __ptext43:
 15305                           	callstack 0
 15306  008346                     _OpenWalkOrder:
 15307                           	callstack 22
 15308                           
 15309                           ;sm_ControlGate_MC50.c: 72:     int diffTime = ((int) var_sys_NVM.walkTime * (1000/50)) 
      +                          - var_sys.PositionActual ;
 15310                           
 15311                           ; BSR set to: 0
 15312                           ;incstack = 0
 15313  008346  0100               	movlb	0	; () banked
 15314  008348  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 15315  00834A  0D14               	mullw	20
 15316  00834C  CFF3 F018          	movff	prodl,??_OpenWalkOrder
 15317  008350  CFF4 F019          	movff	prodh,??_OpenWalkOrder+1
 15318  008354  0101               	movlb	1	; () banked
 15319  008356  511E               	movf	(_var_sys+30)& (0+255),w,b	;volatile
 15320  008358  5C18               	subwf	??_OpenWalkOrder^0,w,c
 15321  00835A  6E1A               	movwf	OpenWalkOrder@diffTime^0,c
 15322  00835C  511F               	movf	(_var_sys+31)& (0+255),w,b	;volatile
 15323  00835E  5819               	subwfb	(??_OpenWalkOrder+1)^0,w,c
 15324  008360  6E1B               	movwf	(OpenWalkOrder@diffTime+1)^0,c
 15325                           
 15326                           ; BSR set to: 1
 15327                           ;sm_ControlGate_MC50.c: 74:     if (diffTime > 0) {
 15328  008362  BE1B               	btfsc	(OpenWalkOrder@diffTime+1)^0,7,c
 15329  008364  D022               	goto	l20876
 15330  008366  501B               	movf	(OpenWalkOrder@diffTime+1)^0,w,c
 15331  008368  E103               	bnz	u24210
 15332  00836A  041A               	decf	OpenWalkOrder@diffTime^0,w,c
 15333  00836C  A0D8               	btfss	status,0,c
 15334  00836E  D01D               	goto	l20876
 15335  008370                     u24210:
 15336                           
 15337                           ; BSR set to: 1
 15338                           ;sm_ControlGate_MC50.c: 76:         sm_send_event(&controlGate_stateMachine, ev_OpenGate
      +                          );
 15339  008370  0EE3               	movlw	low _controlGate_stateMachine
 15340  008372  6E12               	movwf	sm_send_event@psm^0,c
 15341  008374  0E01               	movlw	high _controlGate_stateMachine
 15342  008376  6E13               	movwf	(sm_send_event@psm+1)^0,c
 15343  008378  0E00               	movlw	0
 15344  00837A  6E15               	movwf	(sm_send_event@event+1)^0,c
 15345  00837C  0E0C               	movlw	12
 15346  00837E  6E14               	movwf	sm_send_event@event^0,c
 15347  008380  EC0E  F043         	call	_sm_send_event	;wreg free
 15348                           
 15349                           ;sm_ControlGate_MC50.c: 77:         if (var_sys.Statedoorcontrol == st_Closed){
 15350  008384  0101               	movlb	1	; () banked
 15351  008386  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 15352  008388  A4D8               	btfss	status,2,c
 15353  00838A  D005               	goto	l20870
 15354                           
 15355                           ; BSR set to: 1
 15356                           ;sm_ControlGate_MC50.c: 78:            ts_system.timeOpenWalk = diffTime;
 15357  00838C  C01A  F1AB         	movff	OpenWalkOrder@diffTime,_ts_system+16	;volatile
 15358  008390  C01B  F1AC         	movff	OpenWalkOrder@diffTime+1,_ts_system+17	;volatile
 15359                           
 15360                           ;sm_ControlGate_MC50.c: 79:         }
 15361  008394  D006               	goto	l20872
 15362  008396                     l20870:
 15363                           
 15364                           ; BSR set to: 1
 15365                           ;sm_ControlGate_MC50.c: 81:             ts_system.timeOpenWalk = diffTime + (1000/50);
 15366  008396  0E14               	movlw	20
 15367  008398  241A               	addwf	OpenWalkOrder@diffTime^0,w,c
 15368  00839A  6FAB               	movwf	(_ts_system+16)& (0+255),b	;volatile
 15369  00839C  0E00               	movlw	0
 15370  00839E  201B               	addwfc	(OpenWalkOrder@diffTime+1)^0,w,c
 15371  0083A0  6FAC               	movwf	(_ts_system+17)& (0+255),b	;volatile
 15372  0083A2                     l20872:
 15373                           
 15374                           ; BSR set to: 1
 15375                           ;sm_ControlGate_MC50.c: 83:         var_sys.StateMotor = InOpenWalk;
 15376  0083A2  0E02               	movlw	2
 15377  0083A4  6F00               	movwf	_var_sys& (0+255),b	;volatile
 15378                           
 15379                           ; BSR set to: 1
 15380                           ;sm_ControlGate_MC50.c: 84:         var_sys.Timewalkisactived = YES;
 15381  0083A6  0E01               	movlw	1
 15382  0083A8  6F4A               	movwf	(_var_sys+74)& (0+255),b	;volatile
 15383  0083AA                     l20876:
 15384                           
 15385                           ; BSR set to: 1
 15386                           ;sm_ControlGate_MC50.c: 92:     var_sys.LastState = InOpenWalk;
 15387  0083AA  0E02               	movlw	2
 15388  0083AC  6F0B               	movwf	(_var_sys+11)& (0+255),b	;volatile
 15389                           
 15390                           ; BSR set to: 1
 15391                           ;sm_ControlGate_MC50.c: 93:     InitSoftStart();
 15392  0083AE  EC3C  F043         	call	_InitSoftStart	;wreg free
 15393  0083B2  0012               	return		;funcret
 15394  0083B4                     __end_of_OpenWalkOrder:
 15395                           	callstack 0
 15396                           
 15397 ;; *************** function _sm_send_event *****************
 15398 ;; Defined at:
 15399 ;;		line 34 in file "sm_common_MC50.c"
 15400 ;; Parameters:    Size  Location     Type
 15401 ;;  psm             2   17[COMRAM] PTR struct .
 15402 ;;		 -> controlLearning_stateMachine(11), controlGate_stateMachine(11), main_stateMachine(11), menuConfiguration_stateMa
      +chine(11), 
 15403 ;;  event           2   19[COMRAM] int 
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;		None
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      void 
 15408 ;; Registers used:
 15409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15410 ;; Tracked objects:
 15411 ;;		On entry : 0/0
 15412 ;;		On exit  : 0/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15418 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15419 ;;Total ram usage:        6 bytes
 15420 ;; Hardware stack levels used: 1
 15421 ;; Hardware stack levels required when called: 5
 15422 ;; This function calls:
 15423 ;;		_sm_get_current_state
 15424 ;; This function is called by:
 15425 ;;		_OpenFullOrder
 15426 ;;		_WaitPreFlash
 15427 ;;		_CloseOrder
 15428 ;;		_OpenWalkOrder
 15429 ;;		_StopOrder
 15430 ;;		_sm_execute_ControlGate
 15431 ;;		_actionZone_Closed
 15432 ;;		_actionZone_Opening
 15433 ;;		_actionZone_Closing
 15434 ;;		_sm_execute_ControlLearning
 15435 ;;		_sm_execute_main
 15436 ;;		_sm_execute_menuConfiguration
 15437 ;;		_setValueToEdit
 15438 ;;		_controlSelectRemote
 15439 ;;		_controlSaveRemote
 15440 ;; This function uses a non-reentrant model
 15441 ;;
 15442                           
 15443                           	psect	text44
 15444  00861C                     __ptext44:
 15445                           	callstack 0
 15446  00861C                     _sm_send_event:
 15447                           	callstack 24
 15448                           
 15449                           ;sm_common_MC50.c: 34: void sm_send_event(sm_t *psm, int event);sm_common_MC50.c: 35: {;
      +                          sm_common_MC50.c: 36:  if(( psm->parent_machine == ((void*)0)) || (sm_get_current_state(
      +                          psm->parent_machine)==psm->parent_state))
 15450                           
 15451                           ;incstack = 0
 15452  00861C  EE20 F007          	lfsr	2,7
 15453  008620  5012               	movf	sm_send_event@psm^0,w,c
 15454  008622  26D9               	addwf	fsr2l,f,c
 15455  008624  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15456  008626  22DA               	addwfc	fsr2h,f,c
 15457  008628  50DE               	movf	postinc2,w,c
 15458  00862A  10DE               	iorwf	postinc2,w,c
 15459  00862C  B4D8               	btfsc	status,2,c
 15460  00862E  D019               	goto	u22860
 15461  008630  EE20 F007          	lfsr	2,7
 15462  008634  5012               	movf	sm_send_event@psm^0,w,c
 15463  008636  26D9               	addwf	fsr2l,f,c
 15464  008638  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15465  00863A  22DA               	addwfc	fsr2h,f,c
 15466  00863C  CFDE F010          	movff	postinc2,sm_get_current_state@psm
 15467  008640  CFDD F011          	movff	postdec2,sm_get_current_state@psm+1
 15468  008644  ECB3  F04A         	call	_sm_get_current_state	;wreg free
 15469  008648  EE20 F009          	lfsr	2,9
 15470  00864C  5012               	movf	sm_send_event@psm^0,w,c
 15471  00864E  26D9               	addwf	fsr2l,f,c
 15472  008650  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15473  008652  22DA               	addwfc	fsr2h,f,c
 15474  008654  50DE               	movf	postinc2,w,c
 15475  008656  1810               	xorwf	?_sm_get_current_state^0,w,c
 15476  008658  E10E               	bnz	l3507
 15477  00865A  50DE               	movf	postinc2,w,c
 15478  00865C  1811               	xorwf	(?_sm_get_current_state+1)^0,w,c
 15479  00865E  A4D8               	btfss	status,2,c
 15480  008660  0012               	return	
 15481  008662                     u22860:
 15482                           
 15483                           ;sm_common_MC50.c: 38:  {;sm_common_MC50.c: 39:   psm->last_event = event;
 15484  008662  EE20 F004          	lfsr	2,4
 15485  008666  5012               	movf	sm_send_event@psm^0,w,c
 15486  008668  26D9               	addwf	fsr2l,f,c
 15487  00866A  5013               	movf	(sm_send_event@psm+1)^0,w,c
 15488  00866C  22DA               	addwfc	fsr2h,f,c
 15489  00866E  C014  FFDE         	movff	sm_send_event@event,postinc2
 15490  008672  C015  FFDD         	movff	sm_send_event@event+1,postdec2
 15491  008676                     l3507:
 15492  008676  0012               	return		;funcret
 15493  008678                     __end_of_sm_send_event:
 15494                           	callstack 0
 15495                           
 15496 ;; *************** function _sm_get_current_state *****************
 15497 ;; Defined at:
 15498 ;;		line 30 in file "sm_common_MC50.c"
 15499 ;; Parameters:    Size  Location     Type
 15500 ;;  psm             2   15[COMRAM] PTR struct .
 15501 ;;		 -> NULL(0), 
 15502 ;; Auto vars:     Size  Location     Type
 15503 ;;		None
 15504 ;; Return value:  Size  Location     Type
 15505 ;;                  2   15[COMRAM] int 
 15506 ;; Registers used:
 15507 ;;		fsr2l, fsr2h
 15508 ;; Tracked objects:
 15509 ;;		On entry : 0/0
 15510 ;;		On exit  : 0/0
 15511 ;;		Unchanged: 0/0
 15512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15517 ;;Total ram usage:        2 bytes
 15518 ;; Hardware stack levels used: 1
 15519 ;; Hardware stack levels required when called: 4
 15520 ;; This function calls:
 15521 ;;		Nothing
 15522 ;; This function is called by:
 15523 ;;		_sm_send_event
 15524 ;; This function uses a non-reentrant model
 15525 ;;
 15526                           
 15527                           	psect	text45
 15528  009566                     __ptext45:
 15529                           	callstack 0
 15530  009566                     _sm_get_current_state:
 15531                           	callstack 24
 15532                           
 15533                           ;sm_common_MC50.c: 31:  return psm->current_state;
 15534                           
 15535                           ;incstack = 0
 15536  009566  C010  FFD9         	movff	sm_get_current_state@psm,fsr2l
 15537  00956A  C011  FFDA         	movff	sm_get_current_state@psm+1,fsr2h
 15538  00956E  CFDE F010          	movff	postinc2,?_sm_get_current_state
 15539  009572  CFDD F011          	movff	postdec2,?_sm_get_current_state+1
 15540  009576  0012               	return		;funcret
 15541  009578                     __end_of_sm_get_current_state:
 15542                           	callstack 0
 15543                           
 15544 ;; *************** function _InitSoftStart *****************
 15545 ;; Defined at:
 15546 ;;		line 816 in file "sm_ControlGate_MC50.c"
 15547 ;; Parameters:    Size  Location     Type
 15548 ;;		None
 15549 ;; Auto vars:     Size  Location     Type
 15550 ;;		None
 15551 ;; Return value:  Size  Location     Type
 15552 ;;                  1    wreg      void 
 15553 ;; Registers used:
 15554 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15555 ;; Tracked objects:
 15556 ;;		On entry : 3F/1
 15557 ;;		On exit  : 3E/0
 15558 ;;		Unchanged: 0/0
 15559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15564 ;;Total ram usage:        1 bytes
 15565 ;; Hardware stack levels used: 1
 15566 ;; Hardware stack levels required when called: 5
 15567 ;; This function calls:
 15568 ;;		_GetMotorPower
 15569 ;; This function is called by:
 15570 ;;		_OpenFullOrder
 15571 ;;		_CloseOrder
 15572 ;;		_OpenWalkOrder
 15573 ;; This function uses a non-reentrant model
 15574 ;;
 15575                           
 15576                           	psect	text46
 15577  008678                     __ptext46:
 15578                           	callstack 0
 15579  008678                     _InitSoftStart:
 15580                           	callstack 22
 15581                           
 15582                           ; BSR set to: 1
 15583                           ;sm_ControlGate_MC50.c: 817:     if (var_sys_NVM.softStart != 0 && var_sys.AutoInversion
      +                          Active == NO) {
 15584                           
 15585                           ;incstack = 0
 15586  008678  0100               	movlb	0	; () banked
 15587  00867A  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15588  00867C  B4D8               	btfsc	status,2,c
 15589  00867E  0012               	return	
 15590                           
 15591                           ; BSR set to: 0
 15592  008680  0101               	movlb	1	; () banked
 15593  008682  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 15594  008684  A4D8               	btfss	status,2,c
 15595  008686  0012               	return	
 15596                           
 15597                           ; BSR set to: 1
 15598                           ;sm_ControlGate_MC50.c: 824:         var_sys.velocityFactorstop = 0;
 15599  008688  0E00               	movlw	0
 15600  00868A  6F11               	movwf	(_var_sys+17)& (0+255),b	;volatile
 15601  00868C  0E00               	movlw	0
 15602  00868E  6F10               	movwf	(_var_sys+16)& (0+255),b	;volatile
 15603                           
 15604                           ;sm_ControlGate_MC50.c: 825:         var_sys.velocityFactor = 0;
 15605  008690  0E00               	movlw	0
 15606  008692  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15607  008694  0E00               	movlw	0
 15608  008696  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15609                           
 15610                           ; BSR set to: 1
 15611                           ;sm_ControlGate_MC50.c: 826:         var_sys.velocityFactor = GetMotorPower();
 15612  008698  EC8D  F039         	call	_GetMotorPower	;wreg free
 15613  00869C  6E14               	movwf	??_InitSoftStart^0,c
 15614  00869E  5014               	movf	??_InitSoftStart^0,w,c
 15615  0086A0  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15616  0086A2  6B0F               	clrf	(_var_sys+15)& (0+255),b	;volatile
 15617                           
 15618                           ; BSR set to: 1
 15619                           ;sm_ControlGate_MC50.c: 827:         if ( var_sys.velocityFactor > (81) )
 15620  0086A4  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 15621  0086A6  D00A               	goto	l19984
 15622  0086A8  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 15623  0086AA  E104               	bnz	u22890
 15624  0086AC  0E52               	movlw	82
 15625  0086AE  5D0E               	subwf	(_var_sys+14)& (0+255),w,b	;volatile
 15626  0086B0  A0D8               	btfss	status,0,c
 15627  0086B2  D004               	goto	l19984
 15628  0086B4                     u22890:
 15629                           
 15630                           ; BSR set to: 1
 15631                           ;sm_ControlGate_MC50.c: 828:         {;sm_ControlGate_MC50.c: 829:             var_sys.v
      +                          elocityFactor = (81);
 15632  0086B4  0E00               	movlw	0
 15633  0086B6  6F0F               	movwf	(_var_sys+15)& (0+255),b	;volatile
 15634  0086B8  0E51               	movlw	81
 15635  0086BA  6F0E               	movwf	(_var_sys+14)& (0+255),b	;volatile
 15636  0086BC                     l19984:
 15637                           
 15638                           ; BSR set to: 1
 15639                           ;sm_ControlGate_MC50.c: 840:         ts_system.timeSoftStart = var_sys.velocityFactor + 
      +                          1;
 15640  0086BC  0E01               	movlw	1
 15641  0086BE  250E               	addwf	(_var_sys+14)& (0+255),w,b	;volatile
 15642  0086C0  6FB1               	movwf	(_ts_system+22)& (0+255),b	;volatile
 15643  0086C2  0E00               	movlw	0
 15644  0086C4  210F               	addwfc	(_var_sys+15)& (0+255),w,b	;volatile
 15645  0086C6  6FB2               	movwf	(_ts_system+23)& (0+255),b	;volatile
 15646                           
 15647                           ;sm_ControlGate_MC50.c: 842:         var_sys.SoftStartDecrementControl = 10 - var_sys_NV
      +                          M.softStart;
 15648  0086C8  0100               	movlb	0	; () banked
 15649  0086CA  51AA               	movf	(_var_sys_NVM+18)& (0+255),w,b	;volatile
 15650  0086CC  080A               	sublw	10
 15651  0086CE  0101               	movlb	1	; () banked
 15652  0086D0  6F14               	movwf	(_var_sys+20)& (0+255),b	;volatile
 15653  0086D2  0012               	return		;funcret
 15654  0086D4                     __end_of_InitSoftStart:
 15655                           	callstack 0
 15656                           
 15657 ;; *************** function _InitWalkAutoTime *****************
 15658 ;; Defined at:
 15659 ;;		line 103 in file "sm_ControlGate_MC50.c"
 15660 ;; Parameters:    Size  Location     Type
 15661 ;;		None
 15662 ;; Auto vars:     Size  Location     Type
 15663 ;;		None
 15664 ;; Return value:  Size  Location     Type
 15665 ;;                  1    wreg      void 
 15666 ;; Registers used:
 15667 ;;		wreg, status,2, status,0, prodl, prodh
 15668 ;; Tracked objects:
 15669 ;;		On entry : 0/1
 15670 ;;		On exit  : 3F/0
 15671 ;;		Unchanged: 0/0
 15672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15677 ;;Total ram usage:        0 bytes
 15678 ;; Hardware stack levels used: 1
 15679 ;; Hardware stack levels required when called: 4
 15680 ;; This function calls:
 15681 ;;		Nothing
 15682 ;; This function is called by:
 15683 ;;		_actionZone_Closed
 15684 ;;		_actionZone_Opening
 15685 ;;		_actionZone_Opened
 15686 ;;		_actionZone_Closing
 15687 ;; This function uses a non-reentrant model
 15688 ;;
 15689                           
 15690                           	psect	text47
 15691  00952A                     __ptext47:
 15692                           	callstack 0
 15693  00952A                     _InitWalkAutoTime:
 15694                           	callstack 24
 15695                           
 15696                           ;sm_ControlGate_MC50.c: 105:     ts_system.timeWaitToClose = ((int) var_sys_NVM.autoTime
      +                          WalkClose * (1000/50));
 15697                           
 15698                           ;incstack = 0
 15699  00952A  0100               	movlb	0	; () banked
 15700  00952C  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 15701  00952E  0D14               	mullw	20
 15702  009530  CFF3 F1AD          	movff	prodl,_ts_system+18	;volatile
 15703  009534  CFF4 F1AE          	movff	prodh,_ts_system+19	;volatile
 15704                           
 15705                           ; BSR set to: 0
 15706                           ;sm_ControlGate_MC50.c: 106:     var_sys.AutoCloseActive = var_sys_NVM.autoTimeWalkClose
      +                          ;
 15707  009538  C09E  F123         	movff	_var_sys_NVM+6,_var_sys+35	;volatile
 15708                           
 15709                           ; BSR set to: 0
 15710  00953C  0012               	return		;funcret
 15711  00953E                     __end_of_InitWalkAutoTime:
 15712                           	callstack 0
 15713                           
 15714 ;; *************** function _GetSecurityStateInOpening *****************
 15715 ;; Defined at:
 15716 ;;		line 738 in file "inputs_MC50.c"
 15717 ;; Parameters:    Size  Location     Type
 15718 ;;		None
 15719 ;; Auto vars:     Size  Location     Type
 15720 ;;		None
 15721 ;; Return value:  Size  Location     Type
 15722 ;;                  1    wreg      enum E10564
 15723 ;; Registers used:
 15724 ;;		wreg, status,2, status,0, cstack
 15725 ;; Tracked objects:
 15726 ;;		On entry : 0/0
 15727 ;;		On exit  : 3E/0
 15728 ;;		Unchanged: 0/0
 15729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15734 ;;Total ram usage:        0 bytes
 15735 ;; Hardware stack levels used: 1
 15736 ;; Hardware stack levels required when called: 5
 15737 ;; This function calls:
 15738 ;;		_SetSegmentValueIntermitent
 15739 ;; This function is called by:
 15740 ;;		_actionZone_Closed
 15741 ;;		_actionZone_Opening
 15742 ;; This function uses a non-reentrant model
 15743 ;;
 15744                           
 15745                           	psect	text48
 15746  007760                     __ptext48:
 15747                           	callstack 0
 15748  007760                     _GetSecurityStateInOpening:
 15749                           	callstack 23
 15750                           
 15751                           ;inputs_MC50.c: 747:     if((var_sys_NVM.securityBandIsON == 1) && (var_sys.SecurityBarI
      +                          sObstructed == YES)&&(var_sys_NVM.securityBandInOpen == 1)&& (var_sys_NVM.Stopboton == 0
      +                          ))
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;incstack = 0
 15755  007760  0100               	movlb	0	; () banked
 15756  007762  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 15757  007764  A4D8               	btfss	status,2,c
 15758  007766  D01B               	goto	l20546
 15759                           
 15760                           ; BSR set to: 0
 15761  007768  0101               	movlb	1	; () banked
 15762  00776A  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15763  00776C  A4D8               	btfss	status,2,c
 15764  00776E  D017               	goto	l20546
 15765                           
 15766                           ; BSR set to: 1
 15767  007770  0100               	movlb	0	; () banked
 15768  007772  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 15769  007774  A4D8               	btfss	status,2,c
 15770  007776  D013               	goto	l20546
 15771                           
 15772                           ; BSR set to: 0
 15773  007778  51AE               	movf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15774  00777A  A4D8               	btfss	status,2,c
 15775  00777C  D010               	goto	l20546
 15776                           
 15777                           ; BSR set to: 0
 15778                           ;inputs_MC50.c: 748:     {;inputs_MC50.c: 750:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15779  00777E  0E00               	movlw	0
 15780  007780  0101               	movlb	1	; () banked
 15781  007782  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15782  007784  0E04               	movlw	4
 15783  007786  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15784                           
 15785                           ; BSR set to: 1
 15786                           ;inputs_MC50.c: 751:         SetSegmentValueIntermitent(dL,dA,(1000/50));
 15787  007788  0E0A               	movlw	10
 15788  00778A  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15789  00778C  0E00               	movlw	0
 15790  00778E  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15791  007790  0E14               	movlw	20
 15792  007792  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15793  007794  0E12               	movlw	18
 15794  007796  ECAD  F047         	call	_SetSegmentValueIntermitent
 15795  00779A                     l20540:
 15796                           
 15797                           ; BSR set to: 1
 15798                           ;inputs_MC50.c: 752:         return YES;
 15799  00779A  0E01               	movlw	1
 15800  00779C  0012               	return	
 15801  00779E                     l20546:
 15802  00779E  0100               	movlb	0	; () banked
 15803  0077A0  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 15804  0077A2  A4D8               	btfss	status,2,c
 15805  0077A4  D013               	goto	l20560
 15806                           
 15807                           ; BSR set to: 0
 15808  0077A6  0101               	movlb	1	; () banked
 15809  0077A8  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 15810  0077AA  A4D8               	btfss	status,2,c
 15811  0077AC  D00F               	goto	l20560
 15812                           
 15813                           ; BSR set to: 1
 15814                           ;inputs_MC50.c: 756:     {;inputs_MC50.c: 758:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15815  0077AE  0E00               	movlw	0
 15816  0077B0  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15817  0077B2  0E04               	movlw	4
 15818  0077B4  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15819                           
 15820                           ; BSR set to: 1
 15821                           ;inputs_MC50.c: 759:         SetSegmentValueIntermitent(d5,dt,(1000/50));
 15822  0077B6  0E15               	movlw	21
 15823  0077B8  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15824  0077BA  0E00               	movlw	0
 15825  0077BC  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15826  0077BE  0E14               	movlw	20
 15827  0077C0  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15828  0077C2  0E05               	movlw	5
 15829  0077C4  ECAD  F047         	call	_SetSegmentValueIntermitent
 15830                           
 15831                           ; BSR set to: 1
 15832                           ;inputs_MC50.c: 760:         return ST;
 15833  0077C8  0E02               	movlw	2
 15834  0077CA  0012               	return	
 15835  0077CC                     l20560:
 15836  0077CC  0100               	movlb	0	; () banked
 15837  0077CE  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 15838  0077D0  A4D8               	btfss	status,2,c
 15839  0077D2  D017               	goto	l20576
 15840                           
 15841                           ; BSR set to: 0
 15842  0077D4  0101               	movlb	1	; () banked
 15843  0077D6  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 15844  0077D8  A4D8               	btfss	status,2,c
 15845  0077DA  D013               	goto	l20576
 15846                           
 15847                           ; BSR set to: 1
 15848  0077DC  0100               	movlb	0	; () banked
 15849  0077DE  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 15850  0077E0  A4D8               	btfss	status,2,c
 15851  0077E2  D00F               	goto	l20576
 15852                           
 15853                           ; BSR set to: 0
 15854                           ;inputs_MC50.c: 764:     {;inputs_MC50.c: 766:         ts_system.timeSinalizationDigit=(
      +                           200/50);
 15855  0077E4  0E00               	movlw	0
 15856  0077E6  0101               	movlb	1	; () banked
 15857  0077E8  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 15858  0077EA  0E04               	movlw	4
 15859  0077EC  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 15860                           
 15861                           ; BSR set to: 1
 15862                           ;inputs_MC50.c: 767:         SetSegmentValueIntermitent(dL,dE,(1000/50));
 15863  0077EE  0E0E               	movlw	14
 15864  0077F0  6E10               	movwf	SetSegmentValueIntermitent@d2^0,c
 15865  0077F2  0E00               	movlw	0
 15866  0077F4  6E12               	movwf	(SetSegmentValueIntermitent@time+1)^0,c
 15867  0077F6  0E14               	movlw	20
 15868  0077F8  6E11               	movwf	SetSegmentValueIntermitent@time^0,c
 15869  0077FA  0E12               	movlw	18
 15870  0077FC  ECAD  F047         	call	_SetSegmentValueIntermitent
 15871  007800  D7CC               	goto	l20540
 15872  007802                     l20576:
 15873                           
 15874                           ;inputs_MC50.c: 771:     {;inputs_MC50.c: 772:         return NO;
 15875  007802  0E00               	movlw	0
 15876  007804  0012               	return		;funcret
 15877  007806                     __end_of_GetSecurityStateInOpening:
 15878                           	callstack 0
 15879                           
 15880 ;; *************** function _SetSegmentValueIntermitent *****************
 15881 ;; Defined at:
 15882 ;;		line 201 in file "outputs_MC50.c"
 15883 ;; Parameters:    Size  Location     Type
 15884 ;;  d1              1    wreg     unsigned char 
 15885 ;;  d2              1   15[COMRAM] unsigned char 
 15886 ;;  time            2   16[COMRAM] int 
 15887 ;; Auto vars:     Size  Location     Type
 15888 ;;  d1              1   18[COMRAM] unsigned char 
 15889 ;; Return value:  Size  Location     Type
 15890 ;;                  1    wreg      void 
 15891 ;; Registers used:
 15892 ;;		wreg, status,2, status,0
 15893 ;; Tracked objects:
 15894 ;;		On entry : 3E/0
 15895 ;;		On exit  : 3F/1
 15896 ;;		Unchanged: 0/0
 15897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15898 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15901 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15902 ;;Total ram usage:        4 bytes
 15903 ;; Hardware stack levels used: 1
 15904 ;; Hardware stack levels required when called: 4
 15905 ;; This function calls:
 15906 ;;		Nothing
 15907 ;; This function is called by:
 15908 ;;		_GetSecurityStateInOpening
 15909 ;;		_GetSecurityStateInClosing
 15910 ;;		_sm_execute_ControlGate
 15911 ;;		_actionZone_Opening
 15912 ;;		_actionZone_Closing
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916                           	psect	text49
 15917  008F5A                     __ptext49:
 15918                           	callstack 0
 15919  008F5A                     _SetSegmentValueIntermitent:
 15920                           	callstack 24
 15921                           
 15922                           ;incstack = 0
 15923                           ;SetSegmentValueIntermitent@d1 stored from wreg
 15924  008F5A  6E13               	movwf	SetSegmentValueIntermitent@d1^0,c
 15925                           
 15926                           ;outputs_MC50.c: 201: void SetSegmentValueIntermitent(char d1, char d2,int time);outputs
      +                          _MC50.c: 202: {;outputs_MC50.c: 204:     if ( main_stateMachine.current_state != st_Menu
      +                          Configuration && (ts_system.timeoutMenu == 0 && button_struct.timer < (1000/50)))
 15927  008F5C  0101               	movlb	1	; () banked
 15928  008F5E  05EE               	decf	_main_stateMachine& (0+255),w,b
 15929  008F60  11EF               	iorwf	(_main_stateMachine+1)& (0+255),w,b
 15930  008F62  B4D8               	btfsc	status,2,c
 15931  008F64  0012               	return	
 15932                           
 15933                           ; BSR set to: 1
 15934  008F66  51A9               	movf	(_ts_system+14)& (0+255),w,b	;volatile
 15935  008F68  11AA               	iorwf	(_ts_system+15)& (0+255),w,b	;volatile
 15936  008F6A  A4D8               	btfss	status,2,c
 15937  008F6C  0012               	return	
 15938                           
 15939                           ; BSR set to: 1
 15940  008F6E  0E14               	movlw	20
 15941  008F70  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 15942  008F72  0012               	return	
 15943                           
 15944                           ; BSR set to: 1
 15945                           ;outputs_MC50.c: 205:     {;outputs_MC50.c: 206:         dispStruct.display_grp.value_di
      +                          splay1=d1;
 15946  008F74  C013  F072         	movff	SetSegmentValueIntermitent@d1,_dispStruct	;volatile
 15947                           
 15948                           ;outputs_MC50.c: 207:         dispStruct.display_grp.value_display2=d2;
 15949  008F78  C010  F073         	movff	SetSegmentValueIntermitent@d2,_dispStruct+1	;volatile
 15950                           
 15951                           ;outputs_MC50.c: 208:         dispStruct.intermitentFreq=time;
 15952  008F7C  C011  F075         	movff	SetSegmentValueIntermitent@time,_dispStruct+3	;volatile
 15953  008F80  C012  F076         	movff	SetSegmentValueIntermitent@time+1,_dispStruct+4	;volatile
 15954                           
 15955                           ; BSR set to: 1
 15956  008F84  0012               	return		;funcret
 15957  008F86                     __end_of_SetSegmentValueIntermitent:
 15958                           	callstack 0
 15959                           
 15960 ;; *************** function _GetOpenOrder *****************
 15961 ;; Defined at:
 15962 ;;		line 330 in file "inputs_MC50.c"
 15963 ;; Parameters:    Size  Location     Type
 15964 ;;		None
 15965 ;; Auto vars:     Size  Location     Type
 15966 ;;		None
 15967 ;; Return value:  Size  Location     Type
 15968 ;;                  1    wreg      enum E10539
 15969 ;; Registers used:
 15970 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15971 ;; Tracked objects:
 15972 ;;		On entry : 3E/1
 15973 ;;		On exit  : 0/0
 15974 ;;		Unchanged: 0/0
 15975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15980 ;;Total ram usage:        0 bytes
 15981 ;; Hardware stack levels used: 1
 15982 ;; Hardware stack levels required when called: 5
 15983 ;; This function calls:
 15984 ;;		_SetSegmentValueIntermitentMain
 15985 ;;		___lbdiv
 15986 ;; This function is called by:
 15987 ;;		_sm_execute_ControlGate
 15988 ;;		_actionZone_Closed
 15989 ;;		_actionZone_Opening
 15990 ;;		_actionZone_Opened
 15991 ;;		_actionZone_Closing
 15992 ;;		_sm_execute_ControlLearning
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996                           	psect	text50
 15997  00562A                     __ptext50:
 15998                           	callstack 0
 15999  00562A                     _GetOpenOrder:
 16000                           	callstack 23
 16001                           
 16002                           ;inputs_MC50.c: 332:    if (var_sys.LearningIsEnabled == NO){
 16003                           
 16004                           ; BSR set to: 1
 16005                           ;incstack = 0
 16006  00562A  0101               	movlb	1	; () banked
 16007  00562C  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 16008  00562E  A4D8               	btfss	status,2,c
 16009  005630  D0C0               	goto	l20516
 16010                           
 16011                           ; BSR set to: 1
 16012                           ;inputs_MC50.c: 334:        if(ts_system.TimeCurrentAlarm>0)
 16013  005632  BFC6               	btfsc	(_ts_system+43)& (0+255),7,b	;volatile
 16014  005634  D019               	goto	l20408
 16015  005636  51C6               	movf	(_ts_system+43)& (0+255),w,b	;volatile
 16016  005638  E103               	bnz	u23420
 16017  00563A  05C5               	decf	(_ts_system+42)& (0+255),w,b	;volatile
 16018  00563C  A0D8               	btfss	status,0,c
 16019  00563E  D014               	goto	l20408
 16020  005640                     u23420:
 16021                           
 16022                           ; BSR set to: 1
 16023                           ;inputs_MC50.c: 336:         {;inputs_MC50.c: 337:             SetSegmentValueIntermiten
      +                          tMain(dL,d1,(1000/50));
 16024  005640  0E01               	movlw	1
 16025  005642  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16026  005644  0E00               	movlw	0
 16027  005646  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16028  005648  0E14               	movlw	20
 16029  00564A  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16030  00564C  0E12               	movlw	18
 16031  00564E  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
 16032                           
 16033                           ;inputs_MC50.c: 338:             ts_system.timeSinalizationDigit=( 500/50);
 16034  005652  0E00               	movlw	0
 16035  005654  0101               	movlb	1	; () banked
 16036  005656  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16037  005658  0E0A               	movlw	10
 16038  00565A  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16039                           
 16040                           ; BSR set to: 1
 16041                           ;inputs_MC50.c: 339:             rfCMD.processed=1;
 16042  00565C  0E01               	movlw	1
 16043  00565E  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16044                           
 16045                           ; BSR set to: 1
 16046                           ;inputs_MC50.c: 340:             button_struct.processed=1;
 16047  005660  0E01               	movlw	1
 16048  005662  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16049  005664                     l20402:
 16050                           
 16051                           ;inputs_MC50.c: 341:             return NoCMD;
 16052  005664  0E00               	movlw	0
 16053  005666  0012               	return	
 16054  005668                     l20408:
 16055                           
 16056                           ; BSR set to: 1
 16057  005668  0100               	movlb	0	; () banked
 16058  00566A  51A8               	movf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16059  00566C  B4D8               	btfsc	status,2,c
 16060  00566E  D02F               	goto	l20442
 16061                           
 16062                           ; BSR set to: 0
 16063                           ;inputs_MC50.c: 344:         {;inputs_MC50.c: 345:             if(button_struct.current=
      +                          =0x35)
 16064  005670  0E35               	movlw	53
 16065  005672  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16066  005674  A4D8               	btfss	status,2,c
 16067  005676  D017               	goto	l20426
 16068                           
 16069                           ; BSR set to: 0
 16070                           ;inputs_MC50.c: 346:             {;inputs_MC50.c: 347:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16071  005678  0E00               	movlw	0
 16072  00567A  0101               	movlb	1	; () banked
 16073  00567C  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16074  00567E  0E0A               	movlw	10
 16075  005680  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16076                           
 16077                           ; BSR set to: 1
 16078                           ;inputs_MC50.c: 348:                 SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16079  005682  0E00               	movlw	0
 16080  005684  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16081  005686  0E00               	movlw	0
 16082  005688  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16083  00568A  0E04               	movlw	4
 16084  00568C  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16085  00568E  0E12               	movlw	18
 16086  005690  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
 16087                           
 16088                           ;inputs_MC50.c: 349:                 if (var_sys_NVM.homemPresente == 2){
 16089  005694  0E02               	movlw	2
 16090  005696  0100               	movlb	0	; () banked
 16091  005698  19A8               	xorwf	(_var_sys_NVM+16)& (0+255),w,b	;volatile
 16092  00569A  A4D8               	btfss	status,2,c
 16093  00569C  D002               	goto	l20420
 16094  00569E                     u23450:
 16095                           
 16096                           ; BSR set to: 0
 16097                           ;inputs_MC50.c: 350:                    button_struct.processed=1;
 16098  00569E  0E01               	movlw	1
 16099  0056A0  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16100  0056A2                     l20420:
 16101                           
 16102                           ; BSR set to: 0
 16103                           ;inputs_MC50.c: 352:                 return TypeFullOpen;
 16104  0056A2  0E03               	movlw	3
 16105  0056A4  0012               	return	
 16106  0056A6                     l20426:
 16107                           
 16108                           ; BSR set to: 0
 16109  0056A6  0E33               	movlw	51
 16110  0056A8  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16111  0056AA  A4D8               	btfss	status,2,c
 16112  0056AC  D7DB               	goto	l20402
 16113                           
 16114                           ; BSR set to: 0
 16115                           ;inputs_MC50.c: 355:             {;inputs_MC50.c: 356:                 ts_system.timeSin
      +                          alizationDigit=( 500/50);
 16116  0056AE  0E00               	movlw	0
 16117  0056B0  0101               	movlb	1	; () banked
 16118  0056B2  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16119  0056B4  0E0A               	movlw	10
 16120  0056B6  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16121                           
 16122                           ; BSR set to: 1
 16123                           ;inputs_MC50.c: 357:                 SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16124  0056B8  0E05               	movlw	5
 16125  0056BA  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16126  0056BC  0E00               	movlw	0
 16127  0056BE  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16128  0056C0  0E04               	movlw	4
 16129  0056C2  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16130  0056C4  0E12               	movlw	18
 16131  0056C6  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
 16132  0056CA                     l20432:
 16133                           
 16134                           ;inputs_MC50.c: 359:                 return TypeFullClose;
 16135  0056CA  0E04               	movlw	4
 16136  0056CC  0012               	return	
 16137  0056CE                     l20442:
 16138                           
 16139                           ; BSR set to: 0
 16140  0056CE  0E35               	movlw	53
 16141  0056D0  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16142  0056D2  A4D8               	btfss	status,2,c
 16143  0056D4  D016               	goto	l20464
 16144                           
 16145                           ; BSR set to: 0
 16146                           ;inputs_MC50.c: 371:         {;inputs_MC50.c: 372:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16147  0056D6  0E00               	movlw	0
 16148  0056D8  0101               	movlb	1	; () banked
 16149  0056DA  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16150  0056DC  0E28               	movlw	40
 16151  0056DE  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16152                           
 16153                           ; BSR set to: 1
 16154                           ;inputs_MC50.c: 373:             SetSegmentValueIntermitentMain(dL,d0,( 200/50));
 16155  0056E0  0E00               	movlw	0
 16156  0056E2  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16157  0056E4  0E00               	movlw	0
 16158  0056E6  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16159  0056E8  0E04               	movlw	4
 16160  0056EA  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16161  0056EC  0E12               	movlw	18
 16162  0056EE  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
 16163                           
 16164                           ;inputs_MC50.c: 374:             if(var_sys_NVM.logicDigital==1)
 16165  0056F2  0100               	movlb	0	; () banked
 16166  0056F4  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16167  0056F6  B4D8               	btfsc	status,2,c
 16168  0056F8  D7D2               	goto	u23450
 16169  0056FA                     l20458:
 16170                           
 16171                           ;inputs_MC50.c: 380:             {;inputs_MC50.c: 381:                 button_struct.pro
      +                          cessed=1;
 16172  0056FA  0E01               	movlw	1
 16173  0056FC  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16174                           
 16175                           ;inputs_MC50.c: 382:                 return TypeFull;
 16176  0056FE  0E01               	movlw	1
 16177  005700  0012               	return	
 16178  005702                     l20464:
 16179                           
 16180                           ; BSR set to: 0
 16181  005702  0E33               	movlw	51
 16182  005704  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16183  005706  A4D8               	btfss	status,2,c
 16184  005708  D019               	goto	l20486
 16185                           
 16186                           ; BSR set to: 0
 16187                           ;inputs_MC50.c: 387:         {;inputs_MC50.c: 389:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16188  00570A  0E00               	movlw	0
 16189  00570C  0101               	movlb	1	; () banked
 16190  00570E  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16191  005710  0E28               	movlw	40
 16192  005712  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16193                           
 16194                           ; BSR set to: 1
 16195                           ;inputs_MC50.c: 390:             SetSegmentValueIntermitentMain(dL,d5,( 200/50));
 16196  005714  0E05               	movlw	5
 16197  005716  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16198  005718  0E00               	movlw	0
 16199  00571A  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16200  00571C  0E04               	movlw	4
 16201  00571E  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16202  005720  0E12               	movlw	18
 16203  005722  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
 16204                           
 16205                           ;inputs_MC50.c: 391:             if(var_sys_NVM.logicDigital==1)
 16206  005726  0100               	movlb	0	; () banked
 16207  005728  05A9               	decf	(_var_sys_NVM+17)& (0+255),w,b	;volatile
 16208  00572A  A4D8               	btfss	status,2,c
 16209  00572C  D003               	goto	l20480
 16210                           
 16211                           ; BSR set to: 0
 16212                           ;inputs_MC50.c: 392:             {;inputs_MC50.c: 393:                  button_struct.pr
      +                          ocessed=1;
 16213  00572E  0E01               	movlw	1
 16214  005730  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16215  005732  D7CB               	goto	l20432
 16216  005734                     l20480:
 16217                           
 16218                           ; BSR set to: 0
 16219                           ;inputs_MC50.c: 399:             {;inputs_MC50.c: 400:                  button_struct.pr
      +                          ocessed=1;
 16220  005734  0E01               	movlw	1
 16221  005736  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16222                           
 16223                           ; BSR set to: 0
 16224                           ;inputs_MC50.c: 402:                 return TypeWalk;
 16225  005738  0E02               	movlw	2
 16226  00573A  0012               	return	
 16227  00573C                     l20486:
 16228                           
 16229                           ; BSR set to: 0
 16230  00573C  0E36               	movlw	54
 16231  00573E  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16232  005740  A4D8               	btfss	status,2,c
 16233  005742  D00F               	goto	l20500
 16234                           
 16235                           ; BSR set to: 0
 16236                           ;inputs_MC50.c: 408:         {;inputs_MC50.c: 409:             ts_system.timeSinalizatio
      +                          nDigit=(1000/50)*2;
 16237  005744  0E00               	movlw	0
 16238  005746  0101               	movlb	1	; () banked
 16239  005748  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16240  00574A  0E28               	movlw	40
 16241  00574C  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16242                           
 16243                           ; BSR set to: 1
 16244                           ;inputs_MC50.c: 410:             SetSegmentValueIntermitentMain(dP,dU,( 200/50));
 16245  00574E  0E13               	movlw	19
 16246  005750  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16247  005752  0E00               	movlw	0
 16248  005754  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16249  005756  0E04               	movlw	4
 16250  005758  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16251  00575A  0E10               	movlw	16
 16252  00575C  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
 16253  005760  D7CC               	goto	l20458
 16254  005762                     l20500:
 16255                           
 16256                           ; BSR set to: 0
 16257                           ;inputs_MC50.c: 417:         {;inputs_MC50.c: 418:             if(rfCMD.currentType!=NoC
      +                          MD && rfCMD.currentType!=TypeProgrammingModeFull && rfCMD.currentType!=TypeProgrammingMo
      +                          deWalk )
 16258  005762  503B               	movf	_rfCMD^0,w,c	;volatile
 16259  005764  B4D8               	btfsc	status,2,c
 16260  005766  D023               	goto	l20512
 16261                           
 16262                           ; BSR set to: 0
 16263  005768  0E06               	movlw	6
 16264  00576A  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16265  00576C  B4D8               	btfsc	status,2,c
 16266  00576E  D01F               	goto	l20512
 16267                           
 16268                           ; BSR set to: 0
 16269  005770  0E05               	movlw	5
 16270  005772  183B               	xorwf	_rfCMD^0,w,c	;volatile
 16271  005774  B4D8               	btfsc	status,2,c
 16272  005776  D01B               	goto	l20512
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;inputs_MC50.c: 419:             {;inputs_MC50.c: 420:                 SetSegmentValueIn
      +                          termitentMain(rfCMD.currentPosMem/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),
      +                          ( 200/50));
 16276  005778  0E0A               	movlw	10
 16277  00577A  6E10               	movwf	___lbdiv@divisor^0,c
 16278  00577C  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16279  00577E  ECF9  F046         	call	___lbdiv
 16280  005782  0DF6               	mullw	246
 16281  005784  50F3               	movf	243,w,c
 16282  005786  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16283  005788  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16284  00578A  0E00               	movlw	0
 16285  00578C  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16286  00578E  0E04               	movlw	4
 16287  005790  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16288  005792  0E0A               	movlw	10
 16289  005794  6E10               	movwf	___lbdiv@divisor^0,c
 16290  005796  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16291  005798  ECF9  F046         	call	___lbdiv
 16292  00579C  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
 16293                           
 16294                           ;inputs_MC50.c: 421:                 ts_system.timeSinalizationDigit=(1000/50)*2;
 16295  0057A0  0E00               	movlw	0
 16296  0057A2  0101               	movlb	1	; () banked
 16297  0057A4  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16298  0057A6  0E28               	movlw	40
 16299  0057A8  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16300                           
 16301                           ; BSR set to: 1
 16302                           ;inputs_MC50.c: 422:                 rfCMD.processed=1;
 16303  0057AA  0E01               	movlw	1
 16304  0057AC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16305  0057AE                     l20512:
 16306                           
 16307                           ;inputs_MC50.c: 425:             return rfCMD.currentType;
 16308  0057AE  503B               	movf	_rfCMD^0,w,c	;volatile
 16309  0057B0  0012               	return	
 16310  0057B2                     l20516:
 16311                           
 16312                           ; BSR set to: 1
 16313                           ;inputs_MC50.c: 428:     {;inputs_MC50.c: 429:        if(rfCMD.currentType!=NoCMD ){
 16314  0057B2  503B               	movf	_rfCMD^0,w,c	;volatile
 16315  0057B4  B4D8               	btfsc	status,2,c
 16316  0057B6  D01B               	goto	l20524
 16317                           
 16318                           ; BSR set to: 1
 16319                           ;inputs_MC50.c: 430:                   SetSegmentValueIntermitentMain(rfCMD.currentPosMe
      +                          m/10, rfCMD.currentPosMem-((rfCMD.currentPosMem/10)*10),( 200/50));
 16320  0057B8  0E0A               	movlw	10
 16321  0057BA  6E10               	movwf	___lbdiv@divisor^0,c
 16322  0057BC  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16323  0057BE  ECF9  F046         	call	___lbdiv
 16324  0057C2  0DF6               	mullw	246
 16325  0057C4  50F3               	movf	243,w,c
 16326  0057C6  2443               	addwf	(_rfCMD+8)^0,w,c	;volatile
 16327  0057C8  6E1C               	movwf	SetSegmentValueIntermitentMain@d2^0,c
 16328  0057CA  0E00               	movlw	0
 16329  0057CC  6E1E               	movwf	(SetSegmentValueIntermitentMain@time+1)^0,c
 16330  0057CE  0E04               	movlw	4
 16331  0057D0  6E1D               	movwf	SetSegmentValueIntermitentMain@time^0,c
 16332  0057D2  0E0A               	movlw	10
 16333  0057D4  6E10               	movwf	___lbdiv@divisor^0,c
 16334  0057D6  5043               	movf	(_rfCMD+8)^0,w,c	;volatile
 16335  0057D8  ECF9  F046         	call	___lbdiv
 16336  0057DC  EC9F  F04A         	call	_SetSegmentValueIntermitentMain
 16337                           
 16338                           ;inputs_MC50.c: 431:                 ts_system.timeSinalizationDigit=(1000/50)*1;
 16339  0057E0  0E00               	movlw	0
 16340  0057E2  0101               	movlb	1	; () banked
 16341  0057E4  6FA8               	movwf	(_ts_system+13)& (0+255),b	;volatile
 16342  0057E6  0E14               	movlw	20
 16343  0057E8  6FA7               	movwf	(_ts_system+12)& (0+255),b	;volatile
 16344                           
 16345                           ; BSR set to: 1
 16346                           ;inputs_MC50.c: 432:                 rfCMD.processed=1;
 16347  0057EA  0E01               	movlw	1
 16348  0057EC  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 16349  0057EE                     l20524:
 16350                           
 16351                           ; BSR set to: 1
 16352                           ;inputs_MC50.c: 434:        return rfCMD.currentType;
 16353  0057EE  503B               	movf	_rfCMD^0,w,c	;volatile
 16354  0057F0  0012               	return		;funcret
 16355  0057F2                     __end_of_GetOpenOrder:
 16356                           	callstack 0
 16357                           
 16358 ;; *************** function ___lbdiv *****************
 16359 ;; Defined at:
 16360 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;  dividend        1    wreg     unsigned char 
 16363 ;;  divisor         1   15[COMRAM] unsigned char 
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;  dividend        1   16[COMRAM] unsigned char 
 16366 ;;  quotient        1   18[COMRAM] unsigned char 
 16367 ;;  counter         1   17[COMRAM] unsigned char 
 16368 ;; Return value:  Size  Location     Type
 16369 ;;                  1    wreg      unsigned char 
 16370 ;; Registers used:
 16371 ;;		wreg, status,2, status,0
 16372 ;; Tracked objects:
 16373 ;;		On entry : 0/0
 16374 ;;		On exit  : 0/0
 16375 ;;		Unchanged: 0/0
 16376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16378 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16381 ;;Total ram usage:        4 bytes
 16382 ;; Hardware stack levels used: 1
 16383 ;; Hardware stack levels required when called: 4
 16384 ;; This function calls:
 16385 ;;		Nothing
 16386 ;; This function is called by:
 16387 ;;		_GetOpenOrder
 16388 ;;		_sm_execute_menuConfiguration
 16389 ;; This function uses a non-reentrant model
 16390 ;;
 16391                           
 16392                           	psect	text51
 16393  008DF2                     __ptext51:
 16394                           	callstack 0
 16395  008DF2                     ___lbdiv:
 16396                           	callstack 24
 16397                           
 16398                           ;incstack = 0
 16399                           ;___lbdiv@dividend stored from wreg
 16400  008DF2  6E11               	movwf	___lbdiv@dividend^0,c
 16401  008DF4  0E00               	movlw	0
 16402  008DF6  6E13               	movwf	___lbdiv@quotient^0,c
 16403  008DF8  5010               	movf	___lbdiv@divisor^0,w,c
 16404  008DFA  B4D8               	btfsc	status,2,c
 16405  008DFC  D015               	goto	l20354
 16406  008DFE  0E01               	movlw	1
 16407  008E00  6E12               	movwf	___lbdiv@counter^0,c
 16408  008E02  D003               	goto	l20342
 16409  008E04                     l20338:
 16410  008E04  90D8               	bcf	status,0,c
 16411  008E06  3610               	rlcf	___lbdiv@divisor^0,f,c
 16412  008E08  2A12               	incf	___lbdiv@counter^0,f,c
 16413  008E0A                     l20342:
 16414  008E0A  AE10               	btfss	___lbdiv@divisor^0,7,c
 16415  008E0C  D7FB               	goto	l20338
 16416  008E0E                     u23320:
 16417  008E0E  90D8               	bcf	status,0,c
 16418  008E10  3613               	rlcf	___lbdiv@quotient^0,f,c
 16419  008E12  5010               	movf	___lbdiv@divisor^0,w,c
 16420  008E14  5C11               	subwf	___lbdiv@dividend^0,w,c
 16421  008E16  A0D8               	btfss	status,0,c
 16422  008E18  D003               	goto	l20350
 16423  008E1A  5010               	movf	___lbdiv@divisor^0,w,c
 16424  008E1C  5E11               	subwf	___lbdiv@dividend^0,f,c
 16425  008E1E  8013               	bsf	___lbdiv@quotient^0,0,c
 16426  008E20                     l20350:
 16427  008E20  90D8               	bcf	status,0,c
 16428  008E22  3210               	rrcf	___lbdiv@divisor^0,f,c
 16429  008E24  2E12               	decfsz	___lbdiv@counter^0,f,c
 16430  008E26  D7F3               	goto	u23320
 16431  008E28                     l20354:
 16432  008E28  5013               	movf	___lbdiv@quotient^0,w,c
 16433  008E2A  0012               	return		;funcret
 16434  008E2C                     __end_of___lbdiv:
 16435                           	callstack 0
 16436                           
 16437 ;; *************** function _SetSegmentValueIntermitentMain *****************
 16438 ;; Defined at:
 16439 ;;		line 193 in file "outputs_MC50.c"
 16440 ;; Parameters:    Size  Location     Type
 16441 ;;  d1              1    wreg     unsigned char 
 16442 ;;  d2              1   27[COMRAM] unsigned char 
 16443 ;;  time            2   28[COMRAM] int 
 16444 ;; Auto vars:     Size  Location     Type
 16445 ;;  d1              1   30[COMRAM] unsigned char 
 16446 ;; Return value:  Size  Location     Type
 16447 ;;                  1    wreg      void 
 16448 ;; Registers used:
 16449 ;;		wreg
 16450 ;; Tracked objects:
 16451 ;;		On entry : 0/1
 16452 ;;		On exit  : 0/0
 16453 ;;		Unchanged: 0/0
 16454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16455 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16458 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16459 ;;Total ram usage:        4 bytes
 16460 ;; Hardware stack levels used: 1
 16461 ;; Hardware stack levels required when called: 4
 16462 ;; This function calls:
 16463 ;;		Nothing
 16464 ;; This function is called by:
 16465 ;;		_GetOpenOrder
 16466 ;;		_sm_execute_main
 16467 ;;		_sm_execute_menuConfiguration
 16468 ;;		_load_New_Menu
 16469 ;;		_controlSelectRemote
 16470 ;;		_controlSaveRemote
 16471 ;; This function uses a non-reentrant model
 16472 ;;
 16473                           
 16474                           	psect	text52
 16475  00953E                     __ptext52:
 16476                           	callstack 0
 16477  00953E                     _SetSegmentValueIntermitentMain:
 16478                           	callstack 22
 16479                           
 16480                           ;incstack = 0
 16481                           ;SetSegmentValueIntermitentMain@d1 stored from wreg
 16482  00953E  6E1F               	movwf	SetSegmentValueIntermitentMain@d1^0,c
 16483                           
 16484                           ;outputs_MC50.c: 193: void SetSegmentValueIntermitentMain(char d1, char d2,int time);out
      +                          puts_MC50.c: 194: {;outputs_MC50.c: 195:     dispStruct.display_grp.value_display1=d1;
 16485  009540  C01F  F072         	movff	SetSegmentValueIntermitentMain@d1,_dispStruct	;volatile
 16486                           
 16487                           ;outputs_MC50.c: 196:     dispStruct.display_grp.value_display2=d2;
 16488  009544  C01C  F073         	movff	SetSegmentValueIntermitentMain@d2,_dispStruct+1	;volatile
 16489                           
 16490                           ;outputs_MC50.c: 197:     dispStruct.intermitentFreq=time;
 16491  009548  C01D  F075         	movff	SetSegmentValueIntermitentMain@time,_dispStruct+3	;volatile
 16492  00954C  C01E  F076         	movff	SetSegmentValueIntermitentMain@time+1,_dispStruct+4	;volatile
 16493  009550  0012               	return		;funcret
 16494  009552                     __end_of_SetSegmentValueIntermitentMain:
 16495                           	callstack 0
 16496                           
 16497 ;; *************** function _readbutton *****************
 16498 ;; Defined at:
 16499 ;;		line 471 in file "inputs_MC50.c"
 16500 ;; Parameters:    Size  Location     Type
 16501 ;;		None
 16502 ;; Auto vars:     Size  Location     Type
 16503 ;;		None
 16504 ;; Return value:  Size  Location     Type
 16505 ;;                  1    wreg      void 
 16506 ;; Registers used:
 16507 ;;		wreg, status,2, status,0
 16508 ;; Tracked objects:
 16509 ;;		On entry : 3F/1
 16510 ;;		On exit  : 3F/1
 16511 ;;		Unchanged: 0/0
 16512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16517 ;;Total ram usage:        0 bytes
 16518 ;; Hardware stack levels used: 1
 16519 ;; Hardware stack levels required when called: 4
 16520 ;; This function calls:
 16521 ;;		Nothing
 16522 ;; This function is called by:
 16523 ;;		_main
 16524 ;; This function uses a non-reentrant model
 16525 ;;
 16526                           
 16527                           	psect	text53
 16528  008422                     __ptext53:
 16529                           	callstack 0
 16530  008422                     _readbutton:
 16531                           	callstack 26
 16532                           
 16533                           ; BSR set to: 1
 16534                           ;inputs_MC50.c: 474:  static unsigned char key1=0, key2=0;;inputs_MC50.c: 479:  key2 = (
      +                           PORTB & 0x37 );
 16535                           
 16536                           ;incstack = 0
 16537  008422  508E               	movf	142,w,c	;volatile
 16538  008424  0B37               	andlw	55
 16539  008426  6F97               	movwf	readbutton@key2& (0+255),b
 16540  008428  F000               	nop		;# 
 16541  00842A  F000               	nop		;# 
 16542  00842C  F000               	nop		;# 
 16543                           
 16544                           ;inputs_MC50.c: 483:  key1 = ( PORTB & 0x37 );
 16545  00842E  508E               	movf	142,w,c	;volatile
 16546  008430  0B37               	andlw	55
 16547  008432  0100               	movlb	0	; () banked
 16548  008434  6F86               	movwf	readbutton@key1& (0+255),b
 16549                           
 16550                           ;inputs_MC50.c: 485:  if ( key2 == key1 )
 16551  008436  5186               	movf	readbutton@key1& (0+255),w,b
 16552  008438  0101               	movlb	1	; () banked
 16553  00843A  1997               	xorwf	readbutton@key2& (0+255),w,b
 16554  00843C  A4D8               	btfss	status,2,c
 16555  00843E  D003               	goto	l16848
 16556                           
 16557                           ; BSR set to: 1
 16558                           ;inputs_MC50.c: 486:  {;inputs_MC50.c: 487:         button_struct.current = key1;
 16559  008440  C086  F04D         	movff	readbutton@key1,_button_struct+1	;volatile
 16560                           
 16561                           ;inputs_MC50.c: 488:  }
 16562  008444  D002               	goto	l16850
 16563  008446                     l16848:
 16564                           
 16565                           ; BSR set to: 1
 16566                           ;inputs_MC50.c: 490:     {;inputs_MC50.c: 491:         button_struct.current = 0x37;
 16567  008446  0E37               	movlw	55
 16568  008448  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16569  00844A                     l16850:
 16570                           
 16571                           ; BSR set to: 1
 16572                           ;inputs_MC50.c: 494:     if ( button_struct.current == 0x37 || ( button_struct.current !
      +                          = button_struct.old && button_struct.current == 0x00))
 16573  00844A  0E37               	movlw	55
 16574  00844C  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16575  00844E  B4D8               	btfsc	status,2,c
 16576  008450  D007               	goto	u19330
 16577                           
 16578                           ; BSR set to: 1
 16579  008452  504C               	movf	_button_struct^0,w,c	;volatile
 16580  008454  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16581  008456  B4D8               	btfsc	status,2,c
 16582  008458  D007               	goto	l16858
 16583                           
 16584                           ; BSR set to: 1
 16585  00845A  504D               	movf	(_button_struct+1)^0,w,c	;volatile
 16586  00845C  A4D8               	btfss	status,2,c
 16587  00845E  D004               	goto	l16858
 16588  008460                     u19330:
 16589                           
 16590                           ; BSR set to: 1
 16591                           ;inputs_MC50.c: 495:  {;inputs_MC50.c: 496:   button_struct.processed=0;
 16592  008460  0E00               	movlw	0
 16593  008462  6E4F               	movwf	(_button_struct+3)^0,c	;volatile
 16594                           
 16595                           ;inputs_MC50.c: 497:         button_struct.timer=0;
 16596  008464  0E00               	movlw	0
 16597  008466  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16598  008468                     l16858:
 16599                           
 16600                           ; BSR set to: 1
 16601                           ;inputs_MC50.c: 500:  if ( button_struct.current != 0x37 )
 16602  008468  0E37               	movlw	55
 16603  00846A  184D               	xorwf	(_button_struct+1)^0,w,c	;volatile
 16604  00846C  B4D8               	btfsc	status,2,c
 16605  00846E  D007               	goto	l16866
 16606                           
 16607                           ; BSR set to: 1
 16608                           ;inputs_MC50.c: 501:  {;inputs_MC50.c: 502:   button_struct.old = button_struct.current;
 16609  008470  C04D  F04C         	movff	_button_struct+1,_button_struct	;volatile
 16610                           
 16611                           ; BSR set to: 1
 16612                           ;inputs_MC50.c: 504:         if ( button_struct.timer < 250 )
 16613  008474  0EFA               	movlw	250
 16614  008476  604E               	cpfslt	(_button_struct+2)^0,c	;volatile
 16615  008478  D004               	goto	l16868
 16616                           
 16617                           ; BSR set to: 1
 16618                           ;inputs_MC50.c: 505:         {;inputs_MC50.c: 506:             button_struct.timer++;
 16619  00847A  2A4E               	incf	(_button_struct+2)^0,f,c	;volatile
 16620  00847C  D002               	goto	l16868
 16621  00847E                     l16866:
 16622                           
 16623                           ; BSR set to: 1
 16624                           ;inputs_MC50.c: 515:  {;inputs_MC50.c: 516:   button_struct.timer=0;
 16625  00847E  0E00               	movlw	0
 16626  008480  6E4E               	movwf	(_button_struct+2)^0,c	;volatile
 16627  008482                     l16868:
 16628                           
 16629                           ; BSR set to: 1
 16630                           ;inputs_MC50.c: 520:  if ( button_struct.processed == 1 )
 16631  008482  044F               	decf	(_button_struct+3)^0,w,c	;volatile
 16632  008484  A4D8               	btfss	status,2,c
 16633  008486  0012               	return	
 16634                           
 16635                           ; BSR set to: 1
 16636                           ;inputs_MC50.c: 521:  {;inputs_MC50.c: 522:   button_struct.current = 0x37;
 16637  008488  0E37               	movlw	55
 16638  00848A  6E4D               	movwf	(_button_struct+1)^0,c	;volatile
 16639                           
 16640                           ; BSR set to: 1
 16641  00848C  0012               	return		;funcret
 16642  00848E                     __end_of_readbutton:
 16643                           	callstack 0
 16644                           
 16645 ;; *************** function _read_package *****************
 16646 ;; Defined at:
 16647 ;;		line 21 in file "eusartpackage.c"
 16648 ;; Parameters:    Size  Location     Type
 16649 ;;		None
 16650 ;; Auto vars:     Size  Location     Type
 16651 ;;  package         7   23[COMRAM] struct package_t
 16652 ;; Return value:  Size  Location     Type
 16653 ;;                  7   16[COMRAM] struct package_t
 16654 ;; Registers used:
 16655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 16656 ;; Tracked objects:
 16657 ;;		On entry : 3F/0
 16658 ;;		On exit  : 3F/E
 16659 ;;		Unchanged: 0/0
 16660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16661 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16662 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16664 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16665 ;;Total ram usage:       14 bytes
 16666 ;; Hardware stack levels used: 1
 16667 ;; Hardware stack levels required when called: 5
 16668 ;; This function calls:
 16669 ;;		_EUSART1_Read
 16670 ;; This function is called by:
 16671 ;;		_main
 16672 ;; This function uses a non-reentrant model
 16673 ;;
 16674                           
 16675                           	psect	text54
 16676  00898A                     __ptext54:
 16677                           	callstack 0
 16678  00898A                     _read_package:
 16679                           	callstack 25
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;eusartpackage.c: 22:         struct package_t package;;eusartpackage.c: 24:         if(
      +                          EUSART1_Read()!=0x0A){
 16683                           
 16684                           ; BSR set to: 1
 16685                           ;incstack = 0
 16686  00898A  ECAF  F045         	call	_EUSART1_Read	;wreg free
 16687  00898E  0A0A               	xorlw	10
 16688  008990  B4D8               	btfsc	status,2,c
 16689  008992  D00C               	goto	l17026
 16690  008994                     u19860:
 16691                           
 16692                           ; BSR set to: 14
 16693                           ;eusartpackage.c: 25:             package.valid=0;
 16694  008994  0E00               	movlw	0
 16695  008996  6E1E               	movwf	(read_package@package+6)^0,c
 16696                           
 16697                           ; BSR set to: 14
 16698                           ;eusartpackage.c: 26:             return package;
 16699  008998  EE20  F018         	lfsr	2,read_package@package
 16700  00899C  EE00  F011         	lfsr	0,?_read_package
 16701  0089A0  0E06               	movlw	6
 16702  0089A2                     u19871:
 16703  0089A2  CFDB FFEB          	movff	plusw2,plusw0
 16704  0089A6  06E8               	decf	wreg,f,c
 16705  0089A8  E2FC               	bc	u19871
 16706  0089AA  0012               	return	
 16707  0089AC                     l17026:
 16708                           
 16709                           ; BSR set to: 14
 16710                           ;eusartpackage.c: 29:             package.startbyte=0x0A;
 16711  0089AC  0E0A               	movlw	10
 16712  0089AE  6E1C               	movwf	(read_package@package+4)^0,c
 16713                           
 16714                           ; BSR set to: 14
 16715                           ;eusartpackage.c: 32:         package.functioncode=EUSART1_Read();
 16716  0089B0  ECAF  F045         	call	_EUSART1_Read	;wreg free
 16717  0089B4  6E18               	movwf	read_package@package^0,c
 16718                           
 16719                           ; BSR set to: 14
 16720                           ;eusartpackage.c: 33:         package.address=EUSART1_Read();
 16721  0089B6  ECAF  F045         	call	_EUSART1_Read	;wreg free
 16722  0089BA  6E19               	movwf	(read_package@package+1)^0,c
 16723                           
 16724                           ; BSR set to: 14
 16725                           ;eusartpackage.c: 34:         package.data.data8[0]=EUSART1_Read();
 16726  0089BC  ECAF  F045         	call	_EUSART1_Read	;wreg free
 16727  0089C0  6E1A               	movwf	(read_package@package+2)^0,c
 16728                           
 16729                           ; BSR set to: 14
 16730                           ;eusartpackage.c: 35:         package.data.data8[1]=EUSART1_Read();
 16731  0089C2  ECAF  F045         	call	_EUSART1_Read	;wreg free
 16732  0089C6  6E1B               	movwf	(read_package@package+3)^0,c
 16733                           
 16734                           ; BSR set to: 14
 16735                           ;eusartpackage.c: 38:         if(EUSART1_Read()!=0x0D){
 16736  0089C8  ECAF  F045         	call	_EUSART1_Read	;wreg free
 16737  0089CC  0A0D               	xorlw	13
 16738  0089CE  A4D8               	btfss	status,2,c
 16739  0089D0  D7E1               	goto	u19860
 16740                           
 16741                           ; BSR set to: 14
 16742                           ;eusartpackage.c: 43:             package.endbyte=0x0D;
 16743  0089D2  0E0D               	movlw	13
 16744  0089D4  6E1D               	movwf	(read_package@package+5)^0,c
 16745                           
 16746                           ; BSR set to: 14
 16747                           ;eusartpackage.c: 46:         package.valid=1;
 16748  0089D6  0E01               	movlw	1
 16749  0089D8  D7DE               	goto	L76
 16750  0089DA                     __end_of_read_package:
 16751                           	callstack 0
 16752                           
 16753 ;; *************** function _EUSART1_Read *****************
 16754 ;; Defined at:
 16755 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;  readValue       1   15[COMRAM] unsigned char 
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1    wreg      unsigned char 
 16762 ;; Registers used:
 16763 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16764 ;; Tracked objects:
 16765 ;;		On entry : 31/0
 16766 ;;		On exit  : 3F/E
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16773 ;;Total ram usage:        1 bytes
 16774 ;; Hardware stack levels used: 1
 16775 ;; Hardware stack levels required when called: 4
 16776 ;; This function calls:
 16777 ;;		Nothing
 16778 ;; This function is called by:
 16779 ;;		_read_package
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           	psect	text55
 16784  008B5E                     __ptext55:
 16785                           	callstack 0
 16786  008B5E                     _EUSART1_Read:
 16787                           	callstack 25
 16788                           
 16789                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16790                           
 16791                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 16792                           
 16793                           ; BSR set to: 14
 16794                           ;incstack = 0
 16795  008B5E  0100               	movlb	0	; () banked
 16796  008B60  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 16797  008B62  B4D8               	btfsc	status,2,c
 16798  008B64  D7FC               	goto	__ptext55
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 16802  008B66  0E74               	movlw	low _eusart1RxStatusBuffer
 16803  008B68  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16804  008B6A  6ED9               	movwf	fsr2l,c
 16805  008B6C  6ADA               	clrf	fsr2h,c
 16806  008B6E  0E02               	movlw	high _eusart1RxStatusBuffer
 16807  008B70  22DA               	addwfc	fsr2h,f,c
 16808  008B72  50DF               	movf	indf2,w,c
 16809  008B74  0101               	movlb	1	; () banked
 16810  008B76  6F9A               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 16811                           
 16812                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 16813  008B78  0E7C               	movlw	low _eusart1RxBuffer
 16814  008B7A  0100               	movlb	0	; () banked
 16815  008B7C  2594               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 16816  008B7E  6ED9               	movwf	fsr2l,c
 16817  008B80  6ADA               	clrf	fsr2h,c
 16818  008B82  0E02               	movlw	high _eusart1RxBuffer
 16819  008B84  22DA               	addwfc	fsr2h,f,c
 16820  008B86  50DF               	movf	indf2,w,c
 16821  008B88  6E10               	movwf	EUSART1_Read@readValue^0,c
 16822                           
 16823                           ; BSR set to: 0
 16824  008B8A  2B94               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 16825                           
 16826                           ; BSR set to: 0
 16827                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 16828  008B8C  0E07               	movlw	7
 16829  008B8E  6594               	cpfsgt	_eusart1RxTail& (0+255),b
 16830  008B90  D002               	goto	l14250
 16831                           
 16832                           ; BSR set to: 0
 16833                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 16834  008B92  0E00               	movlw	0
 16835  008B94  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 16836  008B96                     l14250:
 16837                           
 16838                           ; BSR set to: 0
 16839                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 16840  008B96  010E               	movlb	14	; () banked
 16841  008B98  9BC5               	bcf	197,5,b	;volatile
 16842                           
 16843                           ; BSR set to: 14
 16844                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 16845  008B9A  0100               	movlb	0	; () banked
 16846  008B9C  0793               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 16847                           
 16848                           ; BSR set to: 0
 16849                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 16850  008B9E  010E               	movlb	14	; () banked
 16851  008BA0  8BC5               	bsf	197,5,b	;volatile
 16852                           
 16853                           ; BSR set to: 14
 16854                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 16855  008BA2  5010               	movf	EUSART1_Read@readValue^0,w,c
 16856                           
 16857                           ; BSR set to: 14
 16858  008BA4  0012               	return		;funcret
 16859  008BA6                     __end_of_EUSART1_Read:
 16860                           	callstack 0
 16861                           
 16862 ;; *************** function _readRFButtons *****************
 16863 ;; Defined at:
 16864 ;;		line 231 in file "inputs_MC50.c"
 16865 ;; Parameters:    Size  Location     Type
 16866 ;;		None
 16867 ;; Auto vars:     Size  Location     Type
 16868 ;;		None
 16869 ;; Return value:  Size  Location     Type
 16870 ;;                  1    wreg      void 
 16871 ;; Registers used:
 16872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16873 ;; Tracked objects:
 16874 ;;		On entry : 3F/1
 16875 ;;		On exit  : 3E/0
 16876 ;;		Unchanged: 0/0
 16877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16882 ;;Total ram usage:        0 bytes
 16883 ;; Hardware stack levels used: 1
 16884 ;; Hardware stack levels required when called: 15
 16885 ;; This function calls:
 16886 ;;		_DecryptPacket_12BIT
 16887 ;;		_keeloqDecryptPacket
 16888 ;; This function is called by:
 16889 ;;		_main
 16890 ;; This function uses a non-reentrant model
 16891 ;;
 16892                           
 16893                           	psect	text56
 16894  005E62                     __ptext56:
 16895                           	callstack 0
 16896  005E62                     _readRFButtons:
 16897                           	callstack 15
 16898                           
 16899                           ; BSR set to: 1
 16900                           ;inputs_MC50.c: 232:     static unsigned char key1 = 0;;inputs_MC50.c: 233:     static u
      +                          int32_t serial = 0;;inputs_MC50.c: 234:     static uint16_t rollingCode= 0;;inputs_MC50.
      +                          c: 235:     static TypeCMD keyType = 0;;inputs_MC50.c: 236:     static TypeRemote_st typ
      +                          eRemote;;inputs_MC50.c: 241:     if(RFFull)
 16901                           
 16902                           ; BSR set to: 14
 16903                           ;incstack = 0
 16904  005E62  0100               	movlb	0	; () banked
 16905  005E64  518B               	movf	_RFFull& (0+255),w,b	;volatile
 16906  005E66  B4D8               	btfsc	status,2,c
 16907  005E68  D0B9               	goto	l23194
 16908                           
 16909                           ; BSR set to: 0
 16910                           ;inputs_MC50.c: 242:     {;inputs_MC50.c: 244:          if(RFFull_12BIT==0)
 16911  005E6A  518A               	movf	_RFFull_12BIT& (0+255),w,b	;volatile
 16912  005E6C  A4D8               	btfss	status,2,c
 16913  005E6E  D00B               	goto	l23140
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;inputs_MC50.c: 245:          {;inputs_MC50.c: 246:             keyType = keeloqDecryptP
      +                          acket(BufferRF,&classic_data);
 16917  005E70  0ECA               	movlw	low _BufferRF
 16918  005E72  6FE0               	movwf	keeloqDecryptPacket@data& (0+255),b
 16919  005E74  0E02               	movlw	high _BufferRF
 16920  005E76  6FE1               	movwf	(keeloqDecryptPacket@data+1)& (0+255),b
 16921  005E78  0E94               	movlw	low _classic_data
 16922  005E7A  6FE2               	movwf	keeloqDecryptPacket@classic_data& (0+255),b
 16923  005E7C  0E02               	movlw	high _classic_data
 16924  005E7E  6FE3               	movwf	(keeloqDecryptPacket@classic_data+1)& (0+255),b
 16925  005E80  EC2C  F02A         	call	_keeloqDecryptPacket	;wreg free
 16926  005E84  D00A               	goto	L77
 16927  005E86                     l23140:
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;inputs_MC50.c: 249:          {;inputs_MC50.c: 250:             keyType = DecryptPacket_
      +                          12BIT(BufferRF,&classic_data);
 16931  005E86  0ECA               	movlw	low _BufferRF
 16932  005E88  6FE0               	movwf	DecryptPacket_12BIT@data& (0+255),b
 16933  005E8A  0E02               	movlw	high _BufferRF
 16934  005E8C  6FE1               	movwf	(DecryptPacket_12BIT@data+1)& (0+255),b
 16935  005E8E  0E94               	movlw	low _classic_data
 16936  005E90  6FE2               	movwf	DecryptPacket_12BIT@classic_data& (0+255),b
 16937  005E92  0E02               	movlw	high _classic_data
 16938  005E94  6FE3               	movwf	(DecryptPacket_12BIT@classic_data+1)& (0+255),b
 16939  005E96  EC2D  F03D         	call	_DecryptPacket_12BIT	;wreg free
 16940  005E9A                     L77:
 16941  005E9A  6F87               	movwf	readRFButtons@keyType& (0+255),b
 16942                           
 16943                           ; BSR set to: 0
 16944                           ;inputs_MC50.c: 254:         key1 = classic_data.fcode1;
 16945  005E9C  C2A0  F088         	movff	_classic_data+12,readRFButtons@key1
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;inputs_MC50.c: 255:         serial = classic_data.serialnumber;
 16949  005EA0  C298  F181         	movff	_classic_data+4,readRFButtons@serial
 16950  005EA4  C299  F182         	movff	_classic_data+5,readRFButtons@serial+1
 16951  005EA8  C29A  F183         	movff	_classic_data+6,readRFButtons@serial+2
 16952  005EAC  C29B  F184         	movff	_classic_data+7,readRFButtons@serial+3
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;inputs_MC50.c: 256:         rollingCode = classic_data.sync;
 16956  005EB0  C29C  F185         	movff	_classic_data+8,readRFButtons@rollingCode
 16957  005EB4  C29D  F186         	movff	_classic_data+9,readRFButtons@rollingCode+1
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;inputs_MC50.c: 257:         typeRemote = classic_data.type;
 16961  005EB8  C2A2  F198         	movff	_classic_data+14,readRFButtons@typeRemote
 16962                           
 16963                           ; BSR set to: 0
 16964                           ;inputs_MC50.c: 270:         if (var_sys.LearningIsEnabled == YES){
 16965  005EBC  0101               	movlb	1	; () banked
 16966  005EBE  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 16967  005EC0  A4D8               	btfss	status,2,c
 16968  005EC2  D01E               	goto	l23162
 16969                           
 16970                           ; BSR set to: 1
 16971                           ;inputs_MC50.c: 272:              if (keyType==NoCMD || rfCMD.currentKey!=key1 || rfCMD.
      +                          currentSerial!=serial || keyType!=rfCMD.currentType)
 16972  005EC4  0100               	movlb	0	; () banked
 16973  005EC6  5187               	movf	readRFButtons@keyType& (0+255),w,b
 16974  005EC8  B4D8               	btfsc	status,2,c
 16975  005ECA  D044               	goto	u28160
 16976                           
 16977                           ; BSR set to: 0
 16978  005ECC  5188               	movf	readRFButtons@key1& (0+255),w,b
 16979  005ECE  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 16980  005ED0  A4D8               	btfss	status,2,c
 16981  005ED2  D040               	goto	u28160
 16982                           
 16983                           ; BSR set to: 0
 16984  005ED4  0101               	movlb	1	; () banked
 16985  005ED6  5181               	movf	readRFButtons@serial& (0+255),w,b
 16986  005ED8  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 16987  005EDA  E13C               	bnz	l23174
 16988  005EDC  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 16989  005EDE  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 16990  005EE0  E139               	bnz	l23174
 16991  005EE2  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 16992  005EE4  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 16993  005EE6  E136               	bnz	l23174
 16994  005EE8  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 16995  005EEA  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 16996  005EEC  A4D8               	btfss	status,2,c
 16997  005EEE  D032               	goto	u28160
 16998                           
 16999                           ; BSR set to: 1
 17000  005EF0  0100               	movlb	0	; () banked
 17001  005EF2  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17002  005EF4  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17003  005EF6  A4D8               	btfss	status,2,c
 17004  005EF8  D02D               	goto	u28160
 17005  005EFA                     l1649:
 17006                           
 17007                           ;inputs_MC50.c: 274:                 rfCMD.timer=0;
 17008  005EFA  0E00               	movlw	0
 17009  005EFC  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17010                           
 17011                           ;inputs_MC50.c: 275:         }
 17012  005EFE  D038               	goto	l1652
 17013  005F00                     l23162:
 17014                           
 17015                           ; BSR set to: 1
 17016  005F00  0100               	movlb	0	; () banked
 17017  005F02  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17018  005F04  B4D8               	btfsc	status,2,c
 17019  005F06  D026               	goto	u28160
 17020                           
 17021                           ; BSR set to: 0
 17022  005F08  5187               	movf	readRFButtons@keyType& (0+255),w,b
 17023  005F0A  183B               	xorwf	_rfCMD^0,w,c	;volatile
 17024  005F0C  B4D8               	btfsc	status,2,c
 17025  005F0E  D00F               	goto	u28140
 17026                           
 17027                           ; BSR set to: 0
 17028  005F10  0101               	movlb	1	; () banked
 17029  005F12  BFB0               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17030  005F14  D005               	goto	u28130
 17031  005F16  51B0               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17032  005F18  E10A               	bnz	l23170
 17033  005F1A  05AF               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17034  005F1C  B0D8               	btfsc	status,0,c
 17035  005F1E  D007               	goto	u28140
 17036  005F20                     u28130:
 17037                           
 17038                           ; BSR set to: 1
 17039  005F20  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17040  005F22  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17041  005F24  E117               	bnz	l23174
 17042  005F26  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17043  005F28  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17044  005F2A  A4D8               	btfss	status,2,c
 17045  005F2C  D013               	goto	u28160
 17046  005F2E                     u28140:
 17047  005F2E                     l23170:
 17048  005F2E  0100               	movlb	0	; () banked
 17049  005F30  5188               	movf	readRFButtons@key1& (0+255),w,b
 17050  005F32  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17051  005F34  A4D8               	btfss	status,2,c
 17052  005F36  D00E               	goto	u28160
 17053                           
 17054                           ; BSR set to: 0
 17055  005F38  0101               	movlb	1	; () banked
 17056  005F3A  5181               	movf	readRFButtons@serial& (0+255),w,b
 17057  005F3C  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17058  005F3E  E10A               	bnz	u28160
 17059  005F40  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17060  005F42  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17061  005F44  E107               	bnz	u28160
 17062  005F46  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17063  005F48  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17064  005F4A  E104               	bnz	u28160
 17065  005F4C  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17066  005F4E  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17067  005F50  B4D8               	btfsc	status,2,c
 17068  005F52  D003               	goto	l23176
 17069  005F54                     u28160:
 17070  005F54                     l23174:
 17071                           
 17072                           ;inputs_MC50.c: 278:         {;inputs_MC50.c: 279:            rfCMD.processed=0;
 17073  005F54  0E00               	movlw	0
 17074  005F56  6E45               	movwf	(_rfCMD+10)^0,c	;volatile
 17075  005F58  D7D0               	goto	l1649
 17076  005F5A                     l23176:
 17077                           
 17078                           ; BSR set to: 1
 17079  005F5A  BFB0               	btfsc	(_ts_system+21)& (0+255),7,b	;volatile
 17080  005F5C  D005               	goto	u28170
 17081  005F5E  51B0               	movf	(_ts_system+21)& (0+255),w,b	;volatile
 17082  005F60  E107               	bnz	l1652
 17083  005F62  05AF               	decf	(_ts_system+20)& (0+255),w,b	;volatile
 17084  005F64  B0D8               	btfsc	status,0,c
 17085  005F66  D004               	goto	l1652
 17086  005F68                     u28170:
 17087                           
 17088                           ; BSR set to: 1
 17089  005F68  0E02               	movlw	2
 17090  005F6A  1998               	xorwf	readRFButtons@typeRemote& (0+255),w,b
 17091  005F6C  B4D8               	btfsc	status,2,c
 17092  005F6E  D7F2               	goto	u28160
 17093  005F70                     l1652:
 17094                           
 17095                           ;inputs_MC50.c: 289:         ts_system.TimeLastCommand=( 500/50);
 17096  005F70  0E00               	movlw	0
 17097  005F72  0101               	movlb	1	; () banked
 17098  005F74  6FB0               	movwf	(_ts_system+21)& (0+255),b	;volatile
 17099  005F76  0E0A               	movlw	10
 17100  005F78  6FAF               	movwf	(_ts_system+20)& (0+255),b	;volatile
 17101                           
 17102                           ; BSR set to: 1
 17103                           ;inputs_MC50.c: 291:         rfCMD.currentType=keyType;
 17104  005F7A  C087  F03B         	movff	readRFButtons@keyType,_rfCMD	;volatile
 17105                           
 17106                           ;inputs_MC50.c: 292:         if
 17107  005F7E  503B               	movf	_rfCMD^0,w,c	;volatile
 17108  005F80  B4D8               	btfsc	status,2,c
 17109  005F82  D01A               	goto	u28220
 17110                           
 17111                           ; BSR set to: 1
 17112  005F84  0100               	movlb	0	; () banked
 17113  005F86  5188               	movf	readRFButtons@key1& (0+255),w,b
 17114  005F88  183C               	xorwf	(_rfCMD+1)^0,w,c	;volatile
 17115  005F8A  A4D8               	btfss	status,2,c
 17116  005F8C  D015               	goto	u28220
 17117                           
 17118                           ; BSR set to: 0
 17119  005F8E  0101               	movlb	1	; () banked
 17120  005F90  5181               	movf	readRFButtons@serial& (0+255),w,b
 17121  005F92  183D               	xorwf	(_rfCMD+2)^0,w,c	;volatile
 17122  005F94  E111               	bnz	l1662
 17123  005F96  5182               	movf	(readRFButtons@serial+1)& (0+255),w,b
 17124  005F98  183E               	xorwf	(_rfCMD+3)^0,w,c	;volatile
 17125  005F9A  E10E               	bnz	l1662
 17126  005F9C  5183               	movf	(readRFButtons@serial+2)& (0+255),w,b
 17127  005F9E  183F               	xorwf	(_rfCMD+4)^0,w,c	;volatile
 17128  005FA0  E10B               	bnz	l1662
 17129  005FA2  5184               	movf	(readRFButtons@serial+3)& (0+255),w,b
 17130  005FA4  1840               	xorwf	(_rfCMD+5)^0,w,c	;volatile
 17131  005FA6  A4D8               	btfss	status,2,c
 17132  005FA8  D007               	goto	u28220
 17133                           
 17134                           ; BSR set to: 1
 17135  005FAA  5185               	movf	readRFButtons@rollingCode& (0+255),w,b
 17136  005FAC  1841               	xorwf	(_rfCMD+6)^0,w,c	;volatile
 17137  005FAE  E104               	bnz	u28220
 17138  005FB0  5186               	movf	(readRFButtons@rollingCode+1)& (0+255),w,b
 17139  005FB2  1842               	xorwf	(_rfCMD+7)^0,w,c	;volatile
 17140  005FB4  B4D8               	btfsc	status,2,c
 17141  005FB6  D00E               	goto	l23192
 17142  005FB8                     u28220:
 17143  005FB8                     l1662:
 17144                           
 17145                           ;inputs_MC50.c: 299:         {;inputs_MC50.c: 300:             rfCMD.currentKey=key1;
 17146  005FB8  C088  F03C         	movff	readRFButtons@key1,_rfCMD+1	;volatile
 17147                           
 17148                           ;inputs_MC50.c: 301:             rfCMD.currentSerial=serial;
 17149  005FBC  C181  F03D         	movff	readRFButtons@serial,_rfCMD+2	;volatile
 17150  005FC0  C182  F03E         	movff	readRFButtons@serial+1,_rfCMD+3	;volatile
 17151  005FC4  C183  F03F         	movff	readRFButtons@serial+2,_rfCMD+4	;volatile
 17152  005FC8  C184  F040         	movff	readRFButtons@serial+3,_rfCMD+5	;volatile
 17153                           
 17154                           ;inputs_MC50.c: 302:             rfCMD.currentPosMem=classic_data.positionMem;
 17155  005FCC  C2A3  F043         	movff	_classic_data+15,_rfCMD+8	;volatile
 17156                           
 17157                           ;inputs_MC50.c: 303:             rfCMD.timer=0;
 17158  005FD0  0E00               	movlw	0
 17159  005FD2  6E44               	movwf	(_rfCMD+9)^0,c	;volatile
 17160  005FD4                     l23192:
 17161                           
 17162                           ;inputs_MC50.c: 305:         rfCMD.currentRolling=rollingCode;
 17163  005FD4  C185  F041         	movff	readRFButtons@rollingCode,_rfCMD+6	;volatile
 17164  005FD8  C186  F042         	movff	readRFButtons@rollingCode+1,_rfCMD+7	;volatile
 17165  005FDC                     l23194:
 17166                           
 17167                           ;inputs_MC50.c: 310:     if(rfCMD.processed == 1)
 17168  005FDC  0445               	decf	(_rfCMD+10)^0,w,c	;volatile
 17169  005FDE  A4D8               	btfss	status,2,c
 17170  005FE0  D003               	goto	l23198
 17171                           
 17172                           ;inputs_MC50.c: 311:     {;inputs_MC50.c: 312:        rfCMD.currentType = NoCMD;
 17173  005FE2  0E00               	movlw	0
 17174  005FE4  6E3B               	movwf	_rfCMD^0,c	;volatile
 17175                           
 17176                           ;inputs_MC50.c: 313:     }
 17177  005FE6  0012               	return	
 17178  005FE8                     l23198:
 17179  005FE8  503B               	movf	_rfCMD^0,w,c	;volatile
 17180  005FEA  B4D8               	btfsc	status,2,c
 17181  005FEC  0012               	return	
 17182                           
 17183                           ;inputs_MC50.c: 315:     {;inputs_MC50.c: 317:         if ( rfCMD.timer < 250 )
 17184  005FEE  0EFA               	movlw	250
 17185  005FF0  6044               	cpfslt	(_rfCMD+9)^0,c	;volatile
 17186  005FF2  0012               	return	
 17187                           
 17188                           ;inputs_MC50.c: 318:         {;inputs_MC50.c: 319:             rfCMD.timer++;
 17189  005FF4  2A44               	incf	(_rfCMD+9)^0,f,c	;volatile
 17190  005FF6  0012               	return		;funcret
 17191  005FF8                     __end_of_readRFButtons:
 17192                           	callstack 0
 17193                           
 17194 ;; *************** function _keeloqDecryptPacket *****************
 17195 ;; Defined at:
 17196 ;;		line 299 in file "keeloqDecrypt_MC50.c"
 17197 ;; Parameters:    Size  Location     Type
 17198 ;;  data            2    8[BANK0 ] PTR unsigned char 
 17199 ;;		 -> BufferRF(9), 
 17200 ;;  classic_data    2   10[BANK0 ] PTR struct .
 17201 ;;		 -> classic_data(16), 
 17202 ;; Auto vars:     Size  Location     Type
 17203 ;;  commandType     1   17[BANK0 ] enum E10539
 17204 ;;  hop_error       1   16[BANK0 ] enum E10730
 17205 ;; Return value:  Size  Location     Type
 17206 ;;                  1    wreg      enum E10539
 17207 ;; Registers used:
 17208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17209 ;; Tracked objects:
 17210 ;;		On entry : 3F/0
 17211 ;;		On exit  : 3F/0
 17212 ;;		Unchanged: 0/0
 17213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17216 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17217 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17218 ;;Total ram usage:       10 bytes
 17219 ;; Hardware stack levels used: 1
 17220 ;; Hardware stack levels required when called: 14
 17221 ;; This function calls:
 17222 ;;		_DecCHK
 17223 ;;		_HopCHK
 17224 ;;		_keeloq_classic_decrypt_packet
 17225 ;;		_memcpy
 17226 ;;		_validateRemoteSerialNumber
 17227 ;;		_verifyProgramingMode
 17228 ;; This function is called by:
 17229 ;;		_readRFButtons
 17230 ;; This function uses a non-reentrant model
 17231 ;;
 17232                           
 17233                           	psect	text57
 17234  005458                     __ptext57:
 17235                           	callstack 0
 17236  005458                     _keeloqDecryptPacket:
 17237                           	callstack 15
 17238                           
 17239                           ; BSR set to: 0
 17240                           ;keeloqDecrypt_MC50.c: 299: TypeCMD keeloqDecryptPacket (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 300: {;keeloqDecrypt_MC50.c: 301:     result_code_t h
      +                          op_error;;keeloqDecrypt_MC50.c: 302:     TypeCMD commandType;;keeloqDecrypt_MC50.c: 303:
      +                               memcpy(classic_data, data, 8);
 17241                           
 17242                           ;incstack = 0
 17243  005458  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,memcpy@d1
 17244  00545C  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,memcpy@d1+1
 17245  005460  C0E0  F012         	movff	keeloqDecryptPacket@data,memcpy@s1
 17246  005464  C0E1  F013         	movff	keeloqDecryptPacket@data+1,memcpy@s1+1
 17247  005468  0E00               	movlw	0
 17248  00546A  6E15               	movwf	(memcpy@n+1)^0,c
 17249  00546C  0E08               	movlw	8
 17250  00546E  6E14               	movwf	memcpy@n^0,c
 17251  005470  EC18  F046         	call	_memcpy	;wreg free
 17252                           
 17253                           ;keeloqDecrypt_MC50.c: 304:     memcpy(&classic_data->sync, &classic_data->raw_data, 4);
 17254  005474  0E08               	movlw	8
 17255  005476  0100               	movlb	0	; () banked
 17256  005478  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17257  00547A  6E10               	movwf	memcpy@d1^0,c
 17258  00547C  0E00               	movlw	0
 17259  00547E  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17260  005480  6E11               	movwf	(memcpy@d1+1)^0,c
 17261  005482  C0E2  F012         	movff	keeloqDecryptPacket@classic_data,memcpy@s1
 17262  005486  C0E3  F013         	movff	keeloqDecryptPacket@classic_data+1,memcpy@s1+1
 17263  00548A  0E00               	movlw	0
 17264  00548C  6E15               	movwf	(memcpy@n+1)^0,c
 17265  00548E  0E04               	movlw	4
 17266  005490  6E14               	movwf	memcpy@n^0,c
 17267  005492  EC18  F046         	call	_memcpy	;wreg free
 17268                           
 17269                           ;keeloqDecrypt_MC50.c: 305:     classic_data->fcode1 = *((uint8_t *) (&classic_data->ser
      +                          ialnumber) + 3) >> 4;
 17270  005496  0100               	movlb	0	; () banked
 17271  005498  EE20 F00C          	lfsr	2,12
 17272  00549C  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17273  00549E  26D9               	addwf	fsr2l,f,c
 17274  0054A0  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17275  0054A2  22DA               	addwfc	fsr2h,f,c
 17276  0054A4  EE10 F007          	lfsr	1,7
 17277  0054A8  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17278  0054AA  26E1               	addwf	fsr1l,f,c
 17279  0054AC  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17280  0054AE  22E2               	addwfc	fsr1h,f,c
 17281  0054B0  50E7               	movf	indf1,w,c
 17282  0054B2  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17283  0054B4  39E4               	swapf	??_keeloqDecryptPacket& (0+255),w,b
 17284  0054B6  0B0F               	andlw	15
 17285  0054B8  6EDF               	movwf	indf2,c
 17286                           
 17287                           ; BSR set to: 0
 17288                           ;keeloqDecrypt_MC50.c: 306:     commandType=verifyProgramingMode(classic_data);
 17289  0054BA  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,verifyProgramingMode@classic_data
 17290  0054BE  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,verifyProgramingMode@classic_data+1
 17291  0054C2  EC32  F047         	call	_verifyProgramingMode	;wreg free
 17292  0054C6  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17293                           
 17294                           ; BSR set to: 0
 17295                           ;keeloqDecrypt_MC50.c: 308:     if(commandType==NoCMD)
 17296  0054C8  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17297  0054CA  A4D8               	btfss	status,2,c
 17298  0054CC  D019               	goto	l21678
 17299                           
 17300                           ; BSR set to: 0
 17301                           ;keeloqDecrypt_MC50.c: 309:     {;keeloqDecrypt_MC50.c: 310:         commandType=validat
      +                          eRemoteSerialNumber(classic_data->serialnumber,NO,&classic_data->positionMem);
 17302  0054CE  EE20 F004          	lfsr	2,4
 17303  0054D2  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17304  0054D4  26D9               	addwf	fsr2l,f,c
 17305  0054D6  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17306  0054D8  22DA               	addwfc	fsr2h,f,c
 17307  0054DA  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17308  0054DE  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17309  0054E2  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17310  0054E6  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17311  0054EA  0E00               	movlw	0
 17312  0054EC  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17313  0054EE  0E0F               	movlw	15
 17314  0054F0  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17315  0054F2  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17316  0054F4  0E00               	movlw	0
 17317  0054F6  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17318  0054F8  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17319  0054FA  ECC9  F02C         	call	_validateRemoteSerialNumber	;wreg free
 17320  0054FE  D004               	goto	L78
 17321  005500                     l21678:
 17322                           
 17323                           ; BSR set to: 0
 17324  005500  51A6               	movf	(_var_sys_NVM+14)& (0+255),w,b	;volatile
 17325  005502  A4D8               	btfss	status,2,c
 17326  005504  D002               	goto	l21682
 17327                           
 17328                           ; BSR set to: 0
 17329                           ;keeloqDecrypt_MC50.c: 313:     {;keeloqDecrypt_MC50.c: 314:         commandType=NoCMD;
 17330  005506  0E00               	movlw	0
 17331  005508                     L78:
 17332  005508  6FE9               	movwf	keeloqDecryptPacket@commandType& (0+255),b
 17333  00550A                     l21682:
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;keeloqDecrypt_MC50.c: 316:     classic_data->serialnumber = classic_data->serialnumber 
      +                          & 0x0FFFFFFF;
 17337  00550A  EE20 F004          	lfsr	2,4
 17338  00550E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17339  005510  26D9               	addwf	fsr2l,f,c
 17340  005512  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17341  005514  22DA               	addwfc	fsr2h,f,c
 17342  005516  0EFF               	movlw	255
 17343  005518  14DE               	andwf	postinc2,w,c
 17344  00551A  6FE4               	movwf	??_keeloqDecryptPacket& (0+255),b
 17345  00551C  0EFF               	movlw	255
 17346  00551E  14DE               	andwf	postinc2,w,c
 17347  005520  6FE5               	movwf	(??_keeloqDecryptPacket+1)& (0+255),b
 17348  005522  0EFF               	movlw	255
 17349  005524  14DE               	andwf	postinc2,w,c
 17350  005526  6FE6               	movwf	(??_keeloqDecryptPacket+2)& (0+255),b
 17351  005528  0E0F               	movlw	15
 17352  00552A  14DE               	andwf	postinc2,w,c
 17353  00552C  6FE7               	movwf	(??_keeloqDecryptPacket+3)& (0+255),b
 17354  00552E  EE20 F004          	lfsr	2,4
 17355  005532  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17356  005534  26D9               	addwf	fsr2l,f,c
 17357  005536  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17358  005538  22DA               	addwfc	fsr2h,f,c
 17359  00553A  C0E4  FFDE         	movff	??_keeloqDecryptPacket,postinc2
 17360  00553E  C0E5  FFDE         	movff	??_keeloqDecryptPacket+1,postinc2
 17361  005542  C0E6  FFDE         	movff	??_keeloqDecryptPacket+2,postinc2
 17362  005546  C0E7  FFDE         	movff	??_keeloqDecryptPacket+3,postinc2
 17363                           
 17364                           ; BSR set to: 0
 17365                           ;keeloqDecrypt_MC50.c: 318:     keeloq_classic_decrypt_packet(classic_data);
 17366  00554A  C0E2  F038         	movff	keeloqDecryptPacket@classic_data,keeloq_classic_decrypt_packet@data
 17367  00554E  C0E3  F039         	movff	keeloqDecryptPacket@classic_data+1,keeloq_classic_decrypt_packet@data+1
 17368  005552  ECC5  F043         	call	_keeloq_classic_decrypt_packet	;wreg free
 17369                           
 17370                           ; BSR set to: 0
 17371                           ;keeloqDecrypt_MC50.c: 320:     if(commandType==NoCMD )
 17372  005556  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17373  005558  A4D8               	btfss	status,2,c
 17374  00555A  D01B               	goto	l21700
 17375                           
 17376                           ; BSR set to: 0
 17377                           ;keeloqDecrypt_MC50.c: 321:     {;keeloqDecrypt_MC50.c: 323:         if (DecCHK(classic_
      +                          data) == 0) {
 17378  00555C  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17379  005560  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17380  005564  EC4C  F047         	call	_DecCHK	;wreg free
 17381  005568  0900               	iorlw	0
 17382  00556A  A4D8               	btfss	status,2,c
 17383  00556C  D008               	goto	l21692
 17384                           
 17385                           ; BSR set to: 0
 17386                           ;keeloqDecrypt_MC50.c: 324:             classic_data->type=Keeloq_NoRollingCode;
 17387  00556E  EE20 F00E          	lfsr	2,14
 17388  005572  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17389  005574  26D9               	addwf	fsr2l,f,c
 17390  005576  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17391  005578  22DA               	addwfc	fsr2h,f,c
 17392  00557A  0E01               	movlw	1
 17393  00557C  D007               	goto	L79
 17394  00557E                     l21692:
 17395                           
 17396                           ; BSR set to: 0
 17397                           ;keeloqDecrypt_MC50.c: 328:         {;keeloqDecrypt_MC50.c: 329:             classic_dat
      +                          a->type=Keeloq_RollingCode;
 17398  00557E  EE20 F00E          	lfsr	2,14
 17399  005582  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17400  005584  26D9               	addwf	fsr2l,f,c
 17401  005586  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17402  005588  22DA               	addwfc	fsr2h,f,c
 17403  00558A  0E00               	movlw	0
 17404  00558C                     L79:
 17405  00558C  6EDF               	movwf	indf2,c
 17406  00558E                     l21694:
 17407                           
 17408                           ; BSR set to: 0
 17409                           ;keeloqDecrypt_MC50.c: 331:         return NoCMD;
 17410  00558E  0E00               	movlw	0
 17411  005590  0012               	return	
 17412  005592                     l21700:
 17413                           
 17414                           ; BSR set to: 0
 17415  005592  0E06               	movlw	6
 17416  005594  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17417  005596  B4D8               	btfsc	status,2,c
 17418  005598  D004               	goto	u25120
 17419                           
 17420                           ; BSR set to: 0
 17421  00559A  0E05               	movlw	5
 17422  00559C  19E9               	xorwf	keeloqDecryptPacket@commandType& (0+255),w,b
 17423  00559E  A4D8               	btfss	status,2,c
 17424  0055A0  D01B               	goto	l21710
 17425  0055A2                     u25120:
 17426                           
 17427                           ; BSR set to: 0
 17428                           ;keeloqDecrypt_MC50.c: 334:     {;keeloqDecrypt_MC50.c: 335:         if(validateRemoteSe
      +                          rialNumber(classic_data->serialnumber,YES,&classic_data->positionMem)==NoCMD)
 17429  0055A2  EE20 F004          	lfsr	2,4
 17430  0055A6  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17431  0055A8  26D9               	addwf	fsr2l,f,c
 17432  0055AA  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17433  0055AC  22DA               	addwfc	fsr2h,f,c
 17434  0055AE  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 17435  0055B2  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 17436  0055B6  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 17437  0055BA  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 17438  0055BE  0E01               	movlw	1
 17439  0055C0  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 17440  0055C2  0E0F               	movlw	15
 17441  0055C4  25E2               	addwf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17442  0055C6  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 17443  0055C8  0E00               	movlw	0
 17444  0055CA  21E3               	addwfc	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17445  0055CC  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 17446  0055CE  ECC9  F02C         	call	_validateRemoteSerialNumber	;wreg free
 17447  0055D2  0900               	iorlw	0
 17448  0055D4  B4D8               	btfsc	status,2,c
 17449  0055D6  D7DB               	goto	l21694
 17450  0055D8                     l21710:
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;keeloqDecrypt_MC50.c: 344:     if (DecCHK(classic_data) == 0)
 17454  0055D8  C0E2  F010         	movff	keeloqDecryptPacket@classic_data,DecCHK@data
 17455  0055DC  C0E3  F011         	movff	keeloqDecryptPacket@classic_data+1,DecCHK@data+1
 17456  0055E0  EC4C  F047         	call	_DecCHK	;wreg free
 17457  0055E4  0900               	iorlw	0
 17458  0055E6  A4D8               	btfss	status,2,c
 17459  0055E8  D00D               	goto	l21726
 17460                           
 17461                           ; BSR set to: 0
 17462                           ;keeloqDecrypt_MC50.c: 345:     {;keeloqDecrypt_MC50.c: 346:         if(var_sys_NVM.Only
      +                          RollingCode==YES) {
 17463  0055EA  05BE               	decf	(_var_sys_NVM+38)& (0+255),w,b	;volatile
 17464  0055EC  B4D8               	btfsc	status,2,c
 17465  0055EE  D7CF               	goto	l21694
 17466                           
 17467                           ; BSR set to: 0
 17468                           ;keeloqDecrypt_MC50.c: 352:         {;keeloqDecrypt_MC50.c: 353:             classic_dat
      +                          a->type=Keeloq_NoRollingCode;
 17469  0055F0  EE20 F00E          	lfsr	2,14
 17470  0055F4  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17471  0055F6  26D9               	addwf	fsr2l,f,c
 17472  0055F8  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17473  0055FA  22DA               	addwfc	fsr2h,f,c
 17474  0055FC  0E01               	movlw	1
 17475  0055FE  6EDF               	movwf	indf2,c
 17476                           
 17477                           ; BSR set to: 0
 17478                           ;keeloqDecrypt_MC50.c: 354:             return commandType;
 17479  005600  51E9               	movf	keeloqDecryptPacket@commandType& (0+255),w,b
 17480  005602  0012               	return	
 17481  005604                     l21726:
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;keeloqDecrypt_MC50.c: 359:     hop_error = HopCHK(classic_data);
 17485  005604  C0E2  F024         	movff	keeloqDecryptPacket@classic_data,HopCHK@data
 17486  005608  C0E3  F025         	movff	keeloqDecryptPacket@classic_data+1,HopCHK@data+1
 17487  00560C  ECFF  F03D         	call	_HopCHK	;wreg free
 17488  005610  0100               	movlb	0	; () banked
 17489  005612  6FE8               	movwf	keeloqDecryptPacket@hop_error& (0+255),b
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;keeloqDecrypt_MC50.c: 360:     if (hop_error != VALID_PACKET) {
 17493  005614  05E8               	decf	keeloqDecryptPacket@hop_error& (0+255),w,b
 17494  005616  A4D8               	btfss	status,2,c
 17495  005618  D7BA               	goto	l21694
 17496                           
 17497                           ; BSR set to: 0
 17498                           ;keeloqDecrypt_MC50.c: 364:     classic_data->type=Keeloq_RollingCode;
 17499  00561A  EE20 F00E          	lfsr	2,14
 17500  00561E  51E2               	movf	keeloqDecryptPacket@classic_data& (0+255),w,b
 17501  005620  26D9               	addwf	fsr2l,f,c
 17502  005622  51E3               	movf	(keeloqDecryptPacket@classic_data+1)& (0+255),w,b
 17503  005624  22DA               	addwfc	fsr2h,f,c
 17504  005626  0E00               	movlw	0
 17505  005628  D7EA               	goto	L80
 17506  00562A                     __end_of_keeloqDecryptPacket:
 17507                           	callstack 0
 17508                           
 17509 ;; *************** function _verifyProgramingMode *****************
 17510 ;; Defined at:
 17511 ;;		line 401 in file "keeloqDecrypt_MC50.c"
 17512 ;; Parameters:    Size  Location     Type
 17513 ;;  classic_data    2   15[COMRAM] PTR struct .
 17514 ;;		 -> classic_data(16), 
 17515 ;; Auto vars:     Size  Location     Type
 17516 ;;		None
 17517 ;; Return value:  Size  Location     Type
 17518 ;;                  1    wreg      enum E10539
 17519 ;; Registers used:
 17520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17521 ;; Tracked objects:
 17522 ;;		On entry : 3F/0
 17523 ;;		On exit  : 3F/0
 17524 ;;		Unchanged: 3F/0
 17525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17530 ;;Total ram usage:        3 bytes
 17531 ;; Hardware stack levels used: 1
 17532 ;; Hardware stack levels required when called: 4
 17533 ;; This function calls:
 17534 ;;		Nothing
 17535 ;; This function is called by:
 17536 ;;		_keeloqDecryptPacket
 17537 ;; This function uses a non-reentrant model
 17538 ;;
 17539                           
 17540                           	psect	text58
 17541  008E64                     __ptext58:
 17542                           	callstack 0
 17543  008E64                     _verifyProgramingMode:
 17544                           	callstack 24
 17545                           
 17546                           ; BSR set to: 0
 17547                           ;keeloqDecrypt_MC50.c: 401: TypeCMD verifyProgramingMode(classic_encoder_t* classic_data
      +                          );keeloqDecrypt_MC50.c: 402: {;keeloqDecrypt_MC50.c: 403:     if (classic_data->fcode1==
      +                          0x0A)
 17548                           
 17549                           ; BSR set to: 0
 17550                           ;incstack = 0
 17551  008E64  EE20 F00C          	lfsr	2,12
 17552  008E68  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17553  008E6A  26D9               	addwf	fsr2l,f,c
 17554  008E6C  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17555  008E6E  22DA               	addwfc	fsr2h,f,c
 17556  008E70  0E0A               	movlw	10
 17557  008E72  18DE               	xorwf	postinc2,w,c
 17558  008E74  A4D8               	btfss	status,2,c
 17559  008E76  D002               	goto	l20684
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;keeloqDecrypt_MC50.c: 404:     {;keeloqDecrypt_MC50.c: 405:         return TypeProgramm
      +                          ingModeFull;
 17563  008E78  0E06               	movlw	6
 17564  008E7A  0012               	return	
 17565  008E7C                     l20684:
 17566                           
 17567                           ; BSR set to: 0
 17568  008E7C  EE20 F00C          	lfsr	2,12
 17569  008E80  5010               	movf	verifyProgramingMode@classic_data^0,w,c
 17570  008E82  26D9               	addwf	fsr2l,f,c
 17571  008E84  5011               	movf	(verifyProgramingMode@classic_data+1)^0,w,c
 17572  008E86  22DA               	addwfc	fsr2h,f,c
 17573  008E88  0E05               	movlw	5
 17574  008E8A  18DE               	xorwf	postinc2,w,c
 17575  008E8C  A4D8               	btfss	status,2,c
 17576  008E8E  D002               	goto	l20692
 17577                           
 17578                           ; BSR set to: 0
 17579                           ;keeloqDecrypt_MC50.c: 408:     {;keeloqDecrypt_MC50.c: 409:         return TypeProgramm
      +                          ingModeWalk;
 17580  008E90  0E05               	movlw	5
 17581  008E92  0012               	return	
 17582  008E94                     l20692:
 17583                           
 17584                           ; BSR set to: 0
 17585                           ;keeloqDecrypt_MC50.c: 412:     {;keeloqDecrypt_MC50.c: 413:         return NoCMD;
 17586  008E94  0E00               	movlw	0
 17587                           
 17588                           ; BSR set to: 0
 17589  008E96  0012               	return		;funcret
 17590  008E98                     __end_of_verifyProgramingMode:
 17591                           	callstack 0
 17592                           
 17593 ;; *************** function _keeloq_classic_decrypt_packet *****************
 17594 ;; Defined at:
 17595 ;;		line 390 in file "keeloqDecrypt_MC50.c"
 17596 ;; Parameters:    Size  Location     Type
 17597 ;;  data            2   55[COMRAM] PTR struct .
 17598 ;;		 -> classic_data(16), 
 17599 ;; Auto vars:     Size  Location     Type
 17600 ;;		None
 17601 ;; Return value:  Size  Location     Type
 17602 ;;                  1    wreg      void 
 17603 ;; Registers used:
 17604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17605 ;; Tracked objects:
 17606 ;;		On entry : 3F/0
 17607 ;;		On exit  : 3F/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17612 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17613 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17614 ;;Total ram usage:        5 bytes
 17615 ;; Hardware stack levels used: 1
 17616 ;; Hardware stack levels required when called: 7
 17617 ;; This function calls:
 17618 ;;		_Decrypt
 17619 ;;		_NormalKeyGen
 17620 ;; This function is called by:
 17621 ;;		_keeloqDecryptPacket
 17622 ;; This function uses a non-reentrant model
 17623 ;;
 17624                           
 17625                           	psect	text59
 17626  00878A                     __ptext59:
 17627                           	callstack 0
 17628  00878A                     _keeloq_classic_decrypt_packet:
 17629                           	callstack 21
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;keeloqDecrypt_MC50.c: 393:     NormalKeyGen(&data->serialnumber);
 17633                           
 17634                           ; BSR set to: 0
 17635                           ;incstack = 0
 17636  00878A  0E04               	movlw	4
 17637  00878C  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17638  00878E  6E26               	movwf	NormalKeyGen@serial^0,c
 17639  008790  0E00               	movlw	0
 17640  008792  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17641  008794  6E27               	movwf	(NormalKeyGen@serial+1)^0,c
 17642  008796  ECC0  F035         	call	_NormalKeyGen	;wreg free
 17643                           
 17644                           ;keeloqDecrypt_MC50.c: 395:     Decrypt((uint8_t*) & data->sync);
 17645  00879A  0E08               	movlw	8
 17646  00879C  2438               	addwf	keeloq_classic_decrypt_packet@data^0,w,c
 17647  00879E  6E1B               	movwf	Decrypt@packet^0,c
 17648  0087A0  0E00               	movlw	0
 17649  0087A2  2039               	addwfc	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17650  0087A4  6E1C               	movwf	(Decrypt@packet+1)^0,c
 17651  0087A6  EC27  F039         	call	_Decrypt	;wreg free
 17652                           
 17653                           ;keeloqDecrypt_MC50.c: 398:     data->fcode2 = (data->disc >> 12) & 0x0F;
 17654  0087AA  EE20 F00D          	lfsr	2,13
 17655  0087AE  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17656  0087B0  26D9               	addwf	fsr2l,f,c
 17657  0087B2  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17658  0087B4  22DA               	addwfc	fsr2h,f,c
 17659  0087B6  EE10 F00A          	lfsr	1,10
 17660  0087BA  5038               	movf	keeloq_classic_decrypt_packet@data^0,w,c
 17661  0087BC  26E1               	addwf	fsr1l,f,c
 17662  0087BE  5039               	movf	(keeloq_classic_decrypt_packet@data+1)^0,w,c
 17663  0087C0  22E2               	addwfc	fsr1h,f,c
 17664  0087C2  CFE6 F0D8          	movff	postinc1,??_keeloq_classic_decrypt_packet
 17665  0087C6  CFE5 F0D9          	movff	postdec1,??_keeloq_classic_decrypt_packet+1
 17666  0087CA  0E0C               	movlw	12
 17667  0087CC  0100               	movlb	0	; () banked
 17668  0087CE  6FDA               	movwf	(??_keeloq_classic_decrypt_packet+2)& (0+255),b
 17669  0087D0                     u23815:
 17670  0087D0  90D8               	bcf	status,0,c
 17671  0087D2  33D9               	rrcf	(??_keeloq_classic_decrypt_packet+1)& (0+255),f,b
 17672  0087D4  33D8               	rrcf	??_keeloq_classic_decrypt_packet& (0+255),f,b
 17673  0087D6  2FDA               	decfsz	(??_keeloq_classic_decrypt_packet+2)& (0+255),f,b
 17674  0087D8  D7FB               	goto	u23815
 17675  0087DA  51D8               	movf	??_keeloq_classic_decrypt_packet& (0+255),w,b
 17676  0087DC  0B0F               	andlw	15
 17677  0087DE  6EDF               	movwf	indf2,c
 17678                           
 17679                           ; BSR set to: 0
 17680  0087E0  0012               	return		;funcret
 17681  0087E2                     __end_of_keeloq_classic_decrypt_packet:
 17682                           	callstack 0
 17683                           
 17684 ;; *************** function _NormalKeyGen *****************
 17685 ;; Defined at:
 17686 ;;		line 87 in file "keeloqDecrypt_MC50.c"
 17687 ;; Parameters:    Size  Location     Type
 17688 ;;  serial          2   37[COMRAM] PTR unsigned long 
 17689 ;;		 -> classic_data(16), 
 17690 ;; Auto vars:     Size  Location     Type
 17691 ;;  Buffer          8   47[COMRAM] unsigned char [8]
 17692 ;;  SKEYtemp        4   43[COMRAM] unsigned char [4]
 17693 ;;  HOPtemp         4   39[COMRAM] unsigned char [4]
 17694 ;; Return value:  Size  Location     Type
 17695 ;;                  1    wreg      void 
 17696 ;; Registers used:
 17697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17698 ;; Tracked objects:
 17699 ;;		On entry : 3F/0
 17700 ;;		On exit  : 0/0
 17701 ;;		Unchanged: 0/0
 17702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17704 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17706 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17707 ;;Total ram usage:       18 bytes
 17708 ;; Hardware stack levels used: 1
 17709 ;; Hardware stack levels required when called: 6
 17710 ;; This function calls:
 17711 ;;		_Decrypt
 17712 ;;		_LoadManufCode
 17713 ;;		_memcpy
 17714 ;; This function is called by:
 17715 ;;		_keeloq_classic_decrypt_packet
 17716 ;; This function uses a non-reentrant model
 17717 ;;
 17718                           
 17719                           	psect	text60
 17720  006B80                     __ptext60:
 17721                           	callstack 0
 17722  006B80                     _NormalKeyGen:
 17723                           	callstack 21
 17724                           
 17725                           ; BSR set to: 0
 17726                           ;keeloqDecrypt_MC50.c: 88:     static uint8_t SEED[4];;keeloqDecrypt_MC50.c: 89:     uin
      +                          t8_t Buffer[8];;keeloqDecrypt_MC50.c: 90:     uint8_t HOPtemp[4];;keeloqDecrypt_MC50.c: 
      +                          91:     uint8_t SKEYtemp[4];;keeloqDecrypt_MC50.c: 93:     memcpy(&Buffer[4], serial, 4)
      +                          ;
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;incstack = 0
 17730  006B80  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17731  006B82  6E10               	movwf	memcpy@d1^0,c
 17732  006B84  6A11               	clrf	(memcpy@d1+1)^0,c
 17733  006B86  C026  F012         	movff	NormalKeyGen@serial,memcpy@s1
 17734  006B8A  C027  F013         	movff	NormalKeyGen@serial+1,memcpy@s1+1
 17735  006B8E  0E00               	movlw	0
 17736  006B90  6E15               	movwf	(memcpy@n+1)^0,c
 17737  006B92  0E04               	movlw	4
 17738  006B94  6E14               	movwf	memcpy@n^0,c
 17739  006B96  EC18  F046         	call	_memcpy	;wreg free
 17740                           
 17741                           ;keeloqDecrypt_MC50.c: 95:     memcpy(HOPtemp, Buffer, 4);
 17742  006B9A  0E28               	movlw	low NormalKeyGen@HOPtemp
 17743  006B9C  6E10               	movwf	memcpy@d1^0,c
 17744  006B9E  6A11               	clrf	(memcpy@d1+1)^0,c
 17745  006BA0  0E30               	movlw	low NormalKeyGen@Buffer
 17746  006BA2  6E12               	movwf	memcpy@s1^0,c
 17747  006BA4  6A13               	clrf	(memcpy@s1+1)^0,c
 17748  006BA6  0E00               	movlw	0
 17749  006BA8  6E15               	movwf	(memcpy@n+1)^0,c
 17750  006BAA  0E04               	movlw	4
 17751  006BAC  6E14               	movwf	memcpy@n^0,c
 17752  006BAE  EC18  F046         	call	_memcpy	;wreg free
 17753                           
 17754                           ;keeloqDecrypt_MC50.c: 97:     memcpy(SEED, &Buffer[4], 4);
 17755  006BB2  0EDB               	movlw	low NormalKeyGen@SEED
 17756  006BB4  6E10               	movwf	memcpy@d1^0,c
 17757  006BB6  0E02               	movlw	high NormalKeyGen@SEED
 17758  006BB8  6E11               	movwf	(memcpy@d1+1)^0,c
 17759  006BBA  0E34               	movlw	low (NormalKeyGen@Buffer+4)
 17760  006BBC  6E12               	movwf	memcpy@s1^0,c
 17761  006BBE  6A13               	clrf	(memcpy@s1+1)^0,c
 17762  006BC0  0E00               	movlw	0
 17763  006BC2  6E15               	movwf	(memcpy@n+1)^0,c
 17764  006BC4  0E04               	movlw	4
 17765  006BC6  6E14               	movwf	memcpy@n^0,c
 17766  006BC8  EC18  F046         	call	_memcpy	;wreg free
 17767                           
 17768                           ;keeloqDecrypt_MC50.c: 98:     SEED[3] &= 0x0f;
 17769  006BCC  0E0F               	movlw	15
 17770  006BCE  0102               	movlb	2	; () banked
 17771  006BD0  17DE               	andwf	(NormalKeyGen@SEED+3)& (0+255),f,b
 17772                           
 17773                           ; BSR set to: 2
 17774                           ;keeloqDecrypt_MC50.c: 101:     memcpy(Buffer, SEED, 4);
 17775  006BD2  0E30               	movlw	low NormalKeyGen@Buffer
 17776  006BD4  6E10               	movwf	memcpy@d1^0,c
 17777  006BD6  6A11               	clrf	(memcpy@d1+1)^0,c
 17778  006BD8  0EDB               	movlw	low NormalKeyGen@SEED
 17779  006BDA  6E12               	movwf	memcpy@s1^0,c
 17780  006BDC  0E02               	movlw	high NormalKeyGen@SEED
 17781  006BDE  6E13               	movwf	(memcpy@s1+1)^0,c
 17782  006BE0  0E00               	movlw	0
 17783  006BE2  6E15               	movwf	(memcpy@n+1)^0,c
 17784  006BE4  0E04               	movlw	4
 17785  006BE6  6E14               	movwf	memcpy@n^0,c
 17786  006BE8  EC18  F046         	call	_memcpy	;wreg free
 17787                           
 17788                           ;keeloqDecrypt_MC50.c: 102:     Buffer[3] |= 0x20;
 17789  006BEC  8A33               	bsf	(NormalKeyGen@Buffer+3)^0,5,c
 17790                           
 17791                           ;keeloqDecrypt_MC50.c: 103:     LoadManufCode();
 17792  006BEE  EC7A  F049         	call	_LoadManufCode	;wreg free
 17793                           
 17794                           ; BSR set to: 2
 17795                           ;keeloqDecrypt_MC50.c: 104:     Decrypt(Buffer);
 17796  006BF2  0E30               	movlw	low NormalKeyGen@Buffer
 17797  006BF4  6E1B               	movwf	Decrypt@packet^0,c
 17798  006BF6  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17799  006BF8  EC27  F039         	call	_Decrypt	;wreg free
 17800                           
 17801                           ;keeloqDecrypt_MC50.c: 105:     memcpy(SKEYtemp, Buffer, 4);
 17802  006BFC  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17803  006BFE  6E10               	movwf	memcpy@d1^0,c
 17804  006C00  6A11               	clrf	(memcpy@d1+1)^0,c
 17805  006C02  0E30               	movlw	low NormalKeyGen@Buffer
 17806  006C04  6E12               	movwf	memcpy@s1^0,c
 17807  006C06  6A13               	clrf	(memcpy@s1+1)^0,c
 17808  006C08  0E00               	movlw	0
 17809  006C0A  6E15               	movwf	(memcpy@n+1)^0,c
 17810  006C0C  0E04               	movlw	4
 17811  006C0E  6E14               	movwf	memcpy@n^0,c
 17812  006C10  EC18  F046         	call	_memcpy	;wreg free
 17813                           
 17814                           ;keeloqDecrypt_MC50.c: 108:     memcpy(Buffer, SEED, 4);
 17815  006C14  0E30               	movlw	low NormalKeyGen@Buffer
 17816  006C16  6E10               	movwf	memcpy@d1^0,c
 17817  006C18  6A11               	clrf	(memcpy@d1+1)^0,c
 17818  006C1A  0EDB               	movlw	low NormalKeyGen@SEED
 17819  006C1C  6E12               	movwf	memcpy@s1^0,c
 17820  006C1E  0E02               	movlw	high NormalKeyGen@SEED
 17821  006C20  6E13               	movwf	(memcpy@s1+1)^0,c
 17822  006C22  0E00               	movlw	0
 17823  006C24  6E15               	movwf	(memcpy@n+1)^0,c
 17824  006C26  0E04               	movlw	4
 17825  006C28  6E14               	movwf	memcpy@n^0,c
 17826  006C2A  EC18  F046         	call	_memcpy	;wreg free
 17827                           
 17828                           ;keeloqDecrypt_MC50.c: 109:     Buffer[3] |= 0x60;
 17829  006C2E  0E60               	movlw	96
 17830  006C30  1233               	iorwf	(NormalKeyGen@Buffer+3)^0,f,c
 17831                           
 17832                           ;keeloqDecrypt_MC50.c: 110:     LoadManufCode();
 17833  006C32  EC7A  F049         	call	_LoadManufCode	;wreg free
 17834                           
 17835                           ; BSR set to: 2
 17836                           ;keeloqDecrypt_MC50.c: 111:     Decrypt(Buffer);
 17837  006C36  0E30               	movlw	low NormalKeyGen@Buffer
 17838  006C38  6E1B               	movwf	Decrypt@packet^0,c
 17839  006C3A  6A1C               	clrf	(Decrypt@packet+1)^0,c
 17840  006C3C  EC27  F039         	call	_Decrypt	;wreg free
 17841                           
 17842                           ;keeloqDecrypt_MC50.c: 112:     memcpy(&DKEY[4], Buffer, 4);
 17843  006C40  0ED7               	movlw	low (_DKEY+4)
 17844  006C42  6E10               	movwf	memcpy@d1^0,c
 17845  006C44  0E02               	movlw	high (_DKEY+4)
 17846  006C46  6E11               	movwf	(memcpy@d1+1)^0,c
 17847  006C48  0E30               	movlw	low NormalKeyGen@Buffer
 17848  006C4A  6E12               	movwf	memcpy@s1^0,c
 17849  006C4C  6A13               	clrf	(memcpy@s1+1)^0,c
 17850  006C4E  0E00               	movlw	0
 17851  006C50  6E15               	movwf	(memcpy@n+1)^0,c
 17852  006C52  0E04               	movlw	4
 17853  006C54  6E14               	movwf	memcpy@n^0,c
 17854  006C56  EC18  F046         	call	_memcpy	;wreg free
 17855                           
 17856                           ;keeloqDecrypt_MC50.c: 113:     memcpy(DKEY, SKEYtemp, 4);
 17857  006C5A  0ED3               	movlw	low _DKEY
 17858  006C5C  6E10               	movwf	memcpy@d1^0,c
 17859  006C5E  0E02               	movlw	high _DKEY
 17860  006C60  6E11               	movwf	(memcpy@d1+1)^0,c
 17861  006C62  0E2C               	movlw	low NormalKeyGen@SKEYtemp
 17862  006C64  6E12               	movwf	memcpy@s1^0,c
 17863  006C66  6A13               	clrf	(memcpy@s1+1)^0,c
 17864  006C68  0E00               	movlw	0
 17865  006C6A  6E15               	movwf	(memcpy@n+1)^0,c
 17866  006C6C  0E04               	movlw	4
 17867  006C6E  6E14               	movwf	memcpy@n^0,c
 17868  006C70  EC18  F046         	call	_memcpy	;wreg free
 17869                           
 17870                           ;keeloqDecrypt_MC50.c: 116:     memcpy(Buffer, HOPtemp, 4);
 17871  006C74  0E30               	movlw	low NormalKeyGen@Buffer
 17872  006C76  6E10               	movwf	memcpy@d1^0,c
 17873  006C78  6A11               	clrf	(memcpy@d1+1)^0,c
 17874  006C7A  0E28               	movlw	low NormalKeyGen@HOPtemp
 17875  006C7C  6E12               	movwf	memcpy@s1^0,c
 17876  006C7E  6A13               	clrf	(memcpy@s1+1)^0,c
 17877  006C80  0E00               	movlw	0
 17878  006C82  6E15               	movwf	(memcpy@n+1)^0,c
 17879  006C84  0E04               	movlw	4
 17880  006C86  6E14               	movwf	memcpy@n^0,c
 17881  006C88  EC18  F046         	call	_memcpy	;wreg free
 17882  006C8C  0012               	return		;funcret
 17883  006C8E                     __end_of_NormalKeyGen:
 17884                           	callstack 0
 17885                           
 17886 ;; *************** function _LoadManufCode *****************
 17887 ;; Defined at:
 17888 ;;		line 63 in file "keeloqDecrypt_MC50.c"
 17889 ;; Parameters:    Size  Location     Type
 17890 ;;		None
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;		None
 17893 ;; Return value:  Size  Location     Type
 17894 ;;                  1    wreg      void 
 17895 ;; Registers used:
 17896 ;;		wreg, status,2
 17897 ;; Tracked objects:
 17898 ;;		On entry : 0/2
 17899 ;;		On exit  : 3F/2
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;Total ram usage:        0 bytes
 17907 ;; Hardware stack levels used: 1
 17908 ;; Hardware stack levels required when called: 4
 17909 ;; This function calls:
 17910 ;;		Nothing
 17911 ;; This function is called by:
 17912 ;;		_NormalKeyGen
 17913 ;; This function uses a non-reentrant model
 17914 ;;
 17915                           
 17916                           	psect	text61
 17917  0092F4                     __ptext61:
 17918                           	callstack 0
 17919  0092F4                     _LoadManufCode:
 17920                           	callstack 22
 17921                           
 17922                           ;keeloqDecrypt_MC50.c: 64:     DKEY[0] = 0xFF;
 17923                           
 17924                           ;incstack = 0
 17925  0092F4  0102               	movlb	2	; () banked
 17926  0092F6  69D3               	setf	_DKEY& (0+255),b
 17927                           
 17928                           ; BSR set to: 2
 17929                           ;keeloqDecrypt_MC50.c: 65:     DKEY[1] = 0xCA;
 17930  0092F8  0ECA               	movlw	202
 17931  0092FA  6FD4               	movwf	(_DKEY+1)& (0+255),b
 17932                           
 17933                           ;keeloqDecrypt_MC50.c: 66:     DKEY[2] = 0x76;
 17934  0092FC  0E76               	movlw	118
 17935  0092FE  6FD5               	movwf	(_DKEY+2)& (0+255),b
 17936                           
 17937                           ;keeloqDecrypt_MC50.c: 67:     DKEY[3] = 0x94;
 17938  009300  0E94               	movlw	148
 17939  009302  6FD6               	movwf	(_DKEY+3)& (0+255),b
 17940                           
 17941                           ;keeloqDecrypt_MC50.c: 68:     DKEY[4] = 0x22;
 17942  009304  0E22               	movlw	34
 17943  009306  6FD7               	movwf	(_DKEY+4)& (0+255),b
 17944                           
 17945                           ;keeloqDecrypt_MC50.c: 69:     DKEY[5] = 0x68;
 17946  009308  0E68               	movlw	104
 17947  00930A  6FD8               	movwf	(_DKEY+5)& (0+255),b
 17948                           
 17949                           ;keeloqDecrypt_MC50.c: 70:     DKEY[6] = 0x27;
 17950  00930C  0E27               	movlw	39
 17951  00930E  6FD9               	movwf	(_DKEY+6)& (0+255),b
 17952                           
 17953                           ;keeloqDecrypt_MC50.c: 71:     DKEY[7] = 0x57;
 17954  009310  0E57               	movlw	87
 17955  009312  6FDA               	movwf	(_DKEY+7)& (0+255),b
 17956                           
 17957                           ; BSR set to: 2
 17958  009314  0012               	return		;funcret
 17959  009316                     __end_of_LoadManufCode:
 17960                           	callstack 0
 17961                           
 17962 ;; *************** function _Decrypt *****************
 17963 ;; Defined at:
 17964 ;;		line 142 in file "keeloqDecrypt_MC50.c"
 17965 ;; Parameters:    Size  Location     Type
 17966 ;;  packet          2   26[COMRAM] PTR unsigned char 
 17967 ;;		 -> SecureKeyGen@HOPtemp(4), NormalKeyGen@Buffer(8), classic_data(16), 
 17968 ;; Auto vars:     Size  Location     Type
 17969 ;;  Buffer          4   33[COMRAM] unsigned char [4]
 17970 ;;  aux             1   32[COMRAM] unsigned char 
 17971 ;;  p               1   31[COMRAM] char 
 17972 ;;  j               1   30[COMRAM] unsigned char 
 17973 ;;  i               1   29[COMRAM] unsigned char 
 17974 ;;  key             1   28[COMRAM] unsigned char 
 17975 ;; Return value:  Size  Location     Type
 17976 ;;                  1    wreg      void 
 17977 ;; Registers used:
 17978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17979 ;; Tracked objects:
 17980 ;;		On entry : 0/0
 17981 ;;		On exit  : 0/0
 17982 ;;		Unchanged: 0/0
 17983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17985 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17987 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17988 ;;Total ram usage:       11 bytes
 17989 ;; Hardware stack levels used: 1
 17990 ;; Hardware stack levels required when called: 5
 17991 ;; This function calls:
 17992 ;;		_memcpy
 17993 ;; This function is called by:
 17994 ;;		_NormalKeyGen
 17995 ;;		_keeloq_classic_decrypt_packet
 17996 ;; This function uses a non-reentrant model
 17997 ;;
 17998                           
 17999                           	psect	text62
 18000  00724E                     __ptext62:
 18001                           	callstack 0
 18002  00724E                     _Decrypt:
 18003                           	callstack 21
 18004                           
 18005                           ;keeloqDecrypt_MC50.c: 143:     uint_fast8_t i, j;;keeloqDecrypt_MC50.c: 144:     uint8_
      +                          t key, aux;;keeloqDecrypt_MC50.c: 146:     int8_t p;;keeloqDecrypt_MC50.c: 147:     uint
      +                          8_t Buffer[4];;keeloqDecrypt_MC50.c: 149:     memcpy(Buffer, packet, 4);
 18006                           
 18007                           ; BSR set to: 2
 18008                           ;incstack = 0
 18009  00724E  0E22               	movlw	low Decrypt@Buffer
 18010  007250  6E10               	movwf	memcpy@d1^0,c
 18011  007252  6A11               	clrf	(memcpy@d1+1)^0,c
 18012  007254  C01B  F012         	movff	Decrypt@packet,memcpy@s1
 18013  007258  C01C  F013         	movff	Decrypt@packet+1,memcpy@s1+1
 18014  00725C  0E00               	movlw	0
 18015  00725E  6E15               	movwf	(memcpy@n+1)^0,c
 18016  007260  0E04               	movlw	4
 18017  007262  6E14               	movwf	memcpy@n^0,c
 18018  007264  EC18  F046         	call	_memcpy	;wreg free
 18019                           
 18020                           ;keeloqDecrypt_MC50.c: 151:     p = 1;
 18021  007268  0E01               	movlw	1
 18022  00726A  6E20               	movwf	Decrypt@p^0,c
 18023                           
 18024                           ;keeloqDecrypt_MC50.c: 153:     for (j = 66; j > 0; j--) {
 18025  00726C  0E42               	movlw	66
 18026  00726E  6E1F               	movwf	Decrypt@j^0,c
 18027  007270                     l19896:
 18028                           
 18029                           ;keeloqDecrypt_MC50.c: 154:         key = DKEY[p--];
 18030  007270  0ED3               	movlw	low _DKEY
 18031  007272  2420               	addwf	Decrypt@p^0,w,c
 18032  007274  6ED9               	movwf	fsr2l,c
 18033  007276  6ADA               	clrf	fsr2h,c
 18034  007278  0E02               	movlw	high _DKEY
 18035  00727A  22DA               	addwfc	fsr2h,f,c
 18036  00727C  50DF               	movf	indf2,w,c
 18037  00727E  6E1D               	movwf	Decrypt@key^0,c
 18038  007280  0620               	decf	Decrypt@p^0,f,c
 18039                           
 18040                           ;keeloqDecrypt_MC50.c: 155:         if (p < 0)
 18041  007282  AE20               	btfss	Decrypt@p^0,7,c
 18042  007284  D002               	goto	l19904
 18043                           
 18044                           ;keeloqDecrypt_MC50.c: 156:             p += 8;
 18045  007286  0E08               	movlw	8
 18046  007288  2620               	addwf	Decrypt@p^0,f,c
 18047  00728A                     l19904:
 18048                           
 18049                           ;keeloqDecrypt_MC50.c: 157:         for (i = 8; i > 0; i--) {
 18050  00728A  0E08               	movlw	8
 18051  00728C  6E1E               	movwf	Decrypt@i^0,c
 18052  00728E                     l1854:
 18053                           
 18054                           ;keeloqDecrypt_MC50.c: 159:             if ((( (Buffer[3]) & (1<<(6))) != 0)) {
 18055  00728E  AC25               	btfss	(Decrypt@Buffer+3)^0,6,c
 18056  007290  D006               	goto	l1856
 18057                           
 18058                           ;keeloqDecrypt_MC50.c: 160:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18059  007292  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18060  007294  D002               	goto	l19914
 18061                           
 18062                           ;keeloqDecrypt_MC50.c: 161:                     aux = 0b00111010;
 18063  007296  0E3A               	movlw	58
 18064  007298  D007               	goto	L81
 18065  00729A                     l19914:
 18066                           
 18067                           ;keeloqDecrypt_MC50.c: 163:                     aux = 0b01011100;
 18068  00729A  0E5C               	movlw	92
 18069  00729C  D005               	goto	L81
 18070  00729E                     l1856:
 18071                           
 18072                           ;keeloqDecrypt_MC50.c: 165:                 if (!(( (Buffer[3]) & (1<<(1))) != 0))
 18073  00729E  B225               	btfsc	(Decrypt@Buffer+3)^0,1,c
 18074  0072A0  D002               	goto	l19918
 18075                           
 18076                           ;keeloqDecrypt_MC50.c: 166:                     aux = 0b01110100;
 18077  0072A2  0E74               	movlw	116
 18078  0072A4  D001               	goto	L81
 18079  0072A6                     l19918:
 18080                           
 18081                           ;keeloqDecrypt_MC50.c: 168:                     aux = 0b00101110;
 18082  0072A6  0E2E               	movlw	46
 18083  0072A8                     L81:
 18084  0072A8  6E21               	movwf	Decrypt@aux^0,c
 18085                           
 18086                           ;keeloqDecrypt_MC50.c: 172:             if ((( (Buffer[2]) & (1<<(3))) != 0))
 18087  0072AA  B624               	btfsc	(Decrypt@Buffer+2)^0,3,c
 18088                           
 18089                           ;keeloqDecrypt_MC50.c: 173:                 aux = (aux << 4) | (aux >> 4);
 18090  0072AC  3A21               	swapf	Decrypt@aux^0,f,c
 18091                           
 18092                           ;keeloqDecrypt_MC50.c: 174:             if ((( (Buffer[1]) & (1<<(0))) != 0))
 18093  0072AE  A023               	btfss	(Decrypt@Buffer+1)^0,0,c
 18094  0072B0  D004               	goto	l19926
 18095                           
 18096                           ;keeloqDecrypt_MC50.c: 175:                 aux <<= 2;
 18097  0072B2  90D8               	bcf	status,0,c
 18098  0072B4  3621               	rlcf	Decrypt@aux^0,f,c
 18099  0072B6  90D8               	bcf	status,0,c
 18100  0072B8  3621               	rlcf	Decrypt@aux^0,f,c
 18101  0072BA                     l19926:
 18102                           
 18103                           ;keeloqDecrypt_MC50.c: 176:             if ((( (Buffer[0]) & (1<<(0))) != 0))
 18104  0072BA  A022               	btfss	Decrypt@Buffer^0,0,c
 18105  0072BC  D002               	goto	l1864
 18106                           
 18107                           ;keeloqDecrypt_MC50.c: 177:                 aux <<= 1;
 18108  0072BE  90D8               	bcf	status,0,c
 18109  0072C0  3621               	rlcf	Decrypt@aux^0,f,c
 18110  0072C2                     l1864:
 18111                           
 18112                           ;keeloqDecrypt_MC50.c: 180:             aux ^= Buffer[1] ^ Buffer[3] ^ key;
 18113  0072C2  5023               	movf	(Decrypt@Buffer+1)^0,w,c
 18114  0072C4  1825               	xorwf	(Decrypt@Buffer+3)^0,w,c
 18115  0072C6  181D               	xorwf	Decrypt@key^0,w,c
 18116  0072C8  1A21               	xorwf	Decrypt@aux^0,f,c
 18117                           
 18118                           ;keeloqDecrypt_MC50.c: 182:             Buffer[3] = (Buffer[3] << 1) | (Buffer[2] >> 7);
 18119  0072CA  90D8               	bcf	status,0,c
 18120  0072CC  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18121  0072CE  3425               	rlcf	(Decrypt@Buffer+3)^0,w,c
 18122  0072D0  6E25               	movwf	(Decrypt@Buffer+3)^0,c
 18123                           
 18124                           ;keeloqDecrypt_MC50.c: 183:             Buffer[2] = (Buffer[2] << 1) | (Buffer[1] >> 7);
 18125  0072D2  90D8               	bcf	status,0,c
 18126  0072D4  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18127  0072D6  3424               	rlcf	(Decrypt@Buffer+2)^0,w,c
 18128  0072D8  6E24               	movwf	(Decrypt@Buffer+2)^0,c
 18129                           
 18130                           ;keeloqDecrypt_MC50.c: 184:             Buffer[1] = (Buffer[1] << 1) | (Buffer[0] >> 7);
 18131  0072DA  90D8               	bcf	status,0,c
 18132  0072DC  3422               	rlcf	Decrypt@Buffer^0,w,c
 18133  0072DE  3423               	rlcf	(Decrypt@Buffer+1)^0,w,c
 18134  0072E0  6E23               	movwf	(Decrypt@Buffer+1)^0,c
 18135                           
 18136                           ;keeloqDecrypt_MC50.c: 185:             Buffer[0] = (Buffer[0] << 1) | (aux >> 7);
 18137  0072E2  90D8               	bcf	status,0,c
 18138  0072E4  3421               	rlcf	Decrypt@aux^0,w,c
 18139  0072E6  3422               	rlcf	Decrypt@Buffer^0,w,c
 18140  0072E8  6E22               	movwf	Decrypt@Buffer^0,c
 18141                           
 18142                           ;keeloqDecrypt_MC50.c: 188:             key <<= 1;
 18143  0072EA  90D8               	bcf	status,0,c
 18144  0072EC  361D               	rlcf	Decrypt@key^0,f,c
 18145                           
 18146                           ;keeloqDecrypt_MC50.c: 189:         }
 18147  0072EE  061E               	decf	Decrypt@i^0,f,c
 18148  0072F0  501E               	movf	Decrypt@i^0,w,c
 18149  0072F2  A4D8               	btfss	status,2,c
 18150  0072F4  D7CC               	goto	l1854
 18151                           
 18152                           ;keeloqDecrypt_MC50.c: 190:     }
 18153  0072F6  061F               	decf	Decrypt@j^0,f,c
 18154  0072F8  501F               	movf	Decrypt@j^0,w,c
 18155  0072FA  A4D8               	btfss	status,2,c
 18156  0072FC  D7B9               	goto	l19896
 18157                           
 18158                           ;keeloqDecrypt_MC50.c: 192:     memcpy(packet, Buffer, 4);
 18159  0072FE  C01B  F010         	movff	Decrypt@packet,memcpy@d1
 18160  007302  C01C  F011         	movff	Decrypt@packet+1,memcpy@d1+1
 18161  007306  0E22               	movlw	low Decrypt@Buffer
 18162  007308  6E12               	movwf	memcpy@s1^0,c
 18163  00730A  6A13               	clrf	(memcpy@s1+1)^0,c
 18164  00730C  0E00               	movlw	0
 18165  00730E  6E15               	movwf	(memcpy@n+1)^0,c
 18166  007310  0E04               	movlw	4
 18167  007312  6E14               	movwf	memcpy@n^0,c
 18168  007314  EC18  F046         	call	_memcpy	;wreg free
 18169  007318  0012               	return		;funcret
 18170  00731A                     __end_of_Decrypt:
 18171                           	callstack 0
 18172                           
 18173 ;; *************** function _HopCHK *****************
 18174 ;; Defined at:
 18175 ;;		line 236 in file "keeloqDecrypt_MC50.c"
 18176 ;; Parameters:    Size  Location     Type
 18177 ;;  data            2   35[COMRAM] PTR struct .
 18178 ;;		 -> classic_data(16), 
 18179 ;; Auto vars:     Size  Location     Type
 18180 ;;  hopDiff         2   37[COMRAM] short 
 18181 ;; Return value:  Size  Location     Type
 18182 ;;                  1    wreg      enum E10730
 18183 ;; Registers used:
 18184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18185 ;; Tracked objects:
 18186 ;;		On entry : 3F/0
 18187 ;;		On exit  : 3C/0
 18188 ;;		Unchanged: 0/0
 18189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18193 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18194 ;;Total ram usage:        4 bytes
 18195 ;; Hardware stack levels used: 1
 18196 ;; Hardware stack levels required when called: 6
 18197 ;; This function calls:
 18198 ;;		_ReqResync
 18199 ;;		_getHopCode
 18200 ;; This function is called by:
 18201 ;;		_keeloqDecryptPacket
 18202 ;; This function uses a non-reentrant model
 18203 ;;
 18204                           
 18205                           	psect	text63
 18206  007BFE                     __ptext63:
 18207                           	callstack 0
 18208  007BFE                     _HopCHK:
 18209                           	callstack 22
 18210                           
 18211                           ; BSR set to: 0
 18212                           ;keeloqDecrypt_MC50.c: 237:     int16_t hopDiff;;keeloqDecrypt_MC50.c: 238:     Hop = da
      +                          ta->sync;
 18213                           
 18214                           ;incstack = 0
 18215  007BFE  EE20 F008          	lfsr	2,8
 18216  007C02  5024               	movf	HopCHK@data^0,w,c
 18217  007C04  26D9               	addwf	fsr2l,f,c
 18218  007C06  5025               	movf	(HopCHK@data+1)^0,w,c
 18219  007C08  22DA               	addwfc	fsr2h,f,c
 18220  007C0A  CFDE F07C          	movff	postinc2,_Hop
 18221  007C0E  CFDD F07D          	movff	postdec2,_Hop+1
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;keeloqDecrypt_MC50.c: 239:     EHop=getHopCode(data);
 18225  007C12  C024  F016         	movff	HopCHK@data,getHopCode@data
 18226  007C16  C025  F017         	movff	HopCHK@data+1,getHopCode@data+1
 18227  007C1A  ECE4  F032         	call	_getHopCode	;wreg free
 18228  007C1E  C016  F28E         	movff	?_getHopCode,_EHop
 18229  007C22  C017  F28F         	movff	?_getHopCode+1,_EHop+1
 18230                           
 18231                           ;keeloqDecrypt_MC50.c: 241:     if (F2Chance)
 18232  007C26  0101               	movlb	1	; () banked
 18233  007C28  5196               	movf	_F2Chance& (0+255),w,b
 18234  007C2A  B4D8               	btfsc	status,2,c
 18235  007C2C  D010               	goto	l20656
 18236                           
 18237                           ; BSR set to: 1
 18238                           ;keeloqDecrypt_MC50.c: 242:         if (NextHop == Hop) {
 18239  007C2E  0100               	movlb	0	; () banked
 18240  007C30  517C               	movf	_Hop& (0+255),w,b
 18241  007C32  0102               	movlb	2	; () banked
 18242  007C34  1990               	xorwf	_NextHop& (0+255),w,b
 18243  007C36  E10B               	bnz	l20656
 18244  007C38  0100               	movlb	0	; () banked
 18245  007C3A  517D               	movf	(_Hop+1)& (0+255),w,b
 18246  007C3C  0102               	movlb	2	; () banked
 18247  007C3E  1991               	xorwf	(_NextHop+1)& (0+255),w,b
 18248  007C40  A4D8               	btfss	status,2,c
 18249  007C42  D005               	goto	l20656
 18250                           
 18251                           ; BSR set to: 2
 18252                           ;keeloqDecrypt_MC50.c: 243:             F2Chance = 0;
 18253  007C44  0E00               	movlw	0
 18254  007C46  0101               	movlb	1	; () banked
 18255  007C48  6F96               	movwf	_F2Chance& (0+255),b
 18256  007C4A                     l20652:
 18257                           
 18258                           ;keeloqDecrypt_MC50.c: 245:             return VALID_PACKET;
 18259  007C4A  0E01               	movlw	1
 18260  007C4C  0012               	return	
 18261  007C4E                     l20656:
 18262                           
 18263                           ;keeloqDecrypt_MC50.c: 249:     hopDiff = Hop - EHop;
 18264  007C4E  0102               	movlb	2	; () banked
 18265  007C50  518E               	movf	_EHop& (0+255),w,b
 18266  007C52  0100               	movlb	0	; () banked
 18267  007C54  5D7C               	subwf	_Hop& (0+255),w,b
 18268  007C56  6E26               	movwf	HopCHK@hopDiff^0,c
 18269  007C58  0102               	movlb	2	; () banked
 18270  007C5A  518F               	movf	(_EHop+1)& (0+255),w,b
 18271  007C5C  0100               	movlb	0	; () banked
 18272  007C5E  597D               	subwfb	(_Hop+1)& (0+255),w,b
 18273  007C60  6E27               	movwf	(HopCHK@hopDiff+1)^0,c
 18274                           
 18275                           ;keeloqDecrypt_MC50.c: 251:     if (hopDiff < 0) {
 18276  007C62  AE27               	btfss	(HopCHK@hopDiff+1)^0,7,c
 18277  007C64  D002               	goto	l20664
 18278                           
 18279                           ; BSR set to: 0
 18280                           ;keeloqDecrypt_MC50.c: 254:         return HOP_CHECK_FAIL;
 18281  007C66  0E0A               	movlw	10
 18282  007C68  0012               	return	
 18283  007C6A                     l20664:
 18284                           
 18285                           ; BSR set to: 0
 18286  007C6A  BE27               	btfsc	(HopCHK@hopDiff+1)^0,7,c
 18287  007C6C  D7EE               	goto	l20652
 18288  007C6E  5027               	movf	(HopCHK@hopDiff+1)^0,w,c
 18289  007C70  E104               	bnz	u23780
 18290  007C72  0E11               	movlw	17
 18291  007C74  5C26               	subwf	HopCHK@hopDiff^0,w,c
 18292  007C76  A0D8               	btfss	status,0,c
 18293  007C78  D7E8               	goto	l20652
 18294  007C7A                     u23780:
 18295                           
 18296                           ; BSR set to: 0
 18297                           ;keeloqDecrypt_MC50.c: 257:         return ReqResync(Hop);
 18298  007C7A  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18299  007C7E  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18300  007C82  EC43  F04A         	call	_ReqResync	;wreg free
 18301  007C86  0012               	return		;funcret
 18302  007C88                     __end_of_HopCHK:
 18303                           	callstack 0
 18304                           
 18305 ;; *************** function _getHopCode *****************
 18306 ;; Defined at:
 18307 ;;		line 266 in file "keeloqDecrypt_MC50.c"
 18308 ;; Parameters:    Size  Location     Type
 18309 ;;  data            2   21[COMRAM] PTR struct .
 18310 ;;		 -> classic_data(16), 
 18311 ;; Auto vars:     Size  Location     Type
 18312 ;;  tempHop         2   31[COMRAM] unsigned short 
 18313 ;;  i               1   34[COMRAM] unsigned char 
 18314 ;;  tempPos         1   33[COMRAM] char 
 18315 ;; Return value:  Size  Location     Type
 18316 ;;                  2   21[COMRAM] unsigned short 
 18317 ;; Registers used:
 18318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18319 ;; Tracked objects:
 18320 ;;		On entry : 3F/0
 18321 ;;		On exit  : 3D/0
 18322 ;;		Unchanged: 0/0
 18323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18325 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18326 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18327 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18328 ;;Total ram usage:       14 bytes
 18329 ;; Hardware stack levels used: 1
 18330 ;; Hardware stack levels required when called: 5
 18331 ;; This function calls:
 18332 ;;		_ReqResync
 18333 ;;		___wmul
 18334 ;; This function is called by:
 18335 ;;		_HopCHK
 18336 ;; This function uses a non-reentrant model
 18337 ;;
 18338                           
 18339                           	psect	text64
 18340  0065C8                     __ptext64:
 18341                           	callstack 0
 18342  0065C8                     _getHopCode:
 18343                           	callstack 22
 18344                           
 18345                           ; BSR set to: 0
 18346                           ;keeloqDecrypt_MC50.c: 268:     uint16_t tempHop=0;
 18347                           
 18348                           ;incstack = 0
 18349  0065C8  0E00               	movlw	0
 18350  0065CA  6E21               	movwf	(getHopCode@tempHop+1)^0,c
 18351  0065CC  0E00               	movlw	0
 18352  0065CE  6E20               	movwf	getHopCode@tempHop^0,c
 18353                           
 18354                           ; BSR set to: 0
 18355                           ;keeloqDecrypt_MC50.c: 269:     int8_t tempPos=-1;
 18356  0065D0  6822               	setf	getHopCode@tempPos^0,c
 18357                           
 18358                           ;keeloqDecrypt_MC50.c: 270:     for(i=0;i<25;i++)
 18359  0065D2  0E00               	movlw	0
 18360  0065D4  6E23               	movwf	getHopCode@i^0,c
 18361  0065D6                     l20144:
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;keeloqDecrypt_MC50.c: 271:     {;keeloqDecrypt_MC50.c: 272:         if(listSyncValues[i
      +                          ].serial==data->serialnumber)
 18365  0065D6  EE20 F004          	lfsr	2,4
 18366  0065DA  5016               	movf	getHopCode@data^0,w,c
 18367  0065DC  26D9               	addwf	fsr2l,f,c
 18368  0065DE  5017               	movf	(getHopCode@data+1)^0,w,c
 18369  0065E0  22DA               	addwfc	fsr2h,f,c
 18370  0065E2  5023               	movf	getHopCode@i^0,w,c
 18371  0065E4  0D06               	mullw	6
 18372  0065E6  0E00               	movlw	low _listSyncValues
 18373  0065E8  24F3               	addwf	243,w,c
 18374  0065EA  6EE1               	movwf	fsr1l,c
 18375  0065EC  0E03               	movlw	high _listSyncValues
 18376  0065EE  20F4               	addwfc	prodh,w,c
 18377  0065F0  6EE2               	movwf	fsr1h,c
 18378  0065F2  50DE               	movf	postinc2,w,c
 18379  0065F4  18E6               	xorwf	postinc1,w,c
 18380  0065F6  E118               	bnz	l20150
 18381  0065F8  50DE               	movf	postinc2,w,c
 18382  0065FA  18E6               	xorwf	postinc1,w,c
 18383  0065FC  E115               	bnz	l20150
 18384  0065FE  50DE               	movf	postinc2,w,c
 18385  006600  18E6               	xorwf	postinc1,w,c
 18386  006602  E112               	bnz	l20150
 18387  006604  50DE               	movf	postinc2,w,c
 18388  006606  18E6               	xorwf	postinc1,w,c
 18389  006608  A4D8               	btfss	status,2,c
 18390  00660A  D00E               	goto	l20150
 18391                           
 18392                           ; BSR set to: 0
 18393                           ;keeloqDecrypt_MC50.c: 273:         {;keeloqDecrypt_MC50.c: 274:             tempHop=lis
      +                          tSyncValues[i].sync;
 18394  00660C  5023               	movf	getHopCode@i^0,w,c
 18395  00660E  0D06               	mullw	6
 18396  006610  0E04               	movlw	low (_listSyncValues+4)
 18397  006612  24F3               	addwf	243,w,c
 18398  006614  6ED9               	movwf	fsr2l,c
 18399  006616  0E03               	movlw	high (_listSyncValues+4)
 18400  006618  20F4               	addwfc	prodh,w,c
 18401  00661A  6EDA               	movwf	fsr2h,c
 18402  00661C  CFDE F020          	movff	postinc2,getHopCode@tempHop
 18403  006620  CFDD F021          	movff	postdec2,getHopCode@tempHop+1
 18404                           
 18405                           ; BSR set to: 0
 18406                           ;keeloqDecrypt_MC50.c: 275:             tempPos=i;
 18407  006624  C023  F022         	movff	getHopCode@i,getHopCode@tempPos
 18408  006628                     l20150:
 18409                           
 18410                           ; BSR set to: 0
 18411                           ;keeloqDecrypt_MC50.c: 278:     }
 18412  006628  2A23               	incf	getHopCode@i^0,f,c
 18413                           
 18414                           ; BSR set to: 0
 18415  00662A  0E18               	movlw	24
 18416  00662C  6423               	cpfsgt	getHopCode@i^0,c
 18417  00662E  D7D3               	goto	l20144
 18418                           
 18419                           ; BSR set to: 0
 18420                           ;keeloqDecrypt_MC50.c: 280:     if(tempPos<0)
 18421  006630  AE22               	btfss	getHopCode@tempPos^0,7,c
 18422  006632  D050               	goto	l20170
 18423                           
 18424                           ; BSR set to: 0
 18425                           ;keeloqDecrypt_MC50.c: 281:     {;keeloqDecrypt_MC50.c: 282:         listSyncValues[poin
      +                          tSync].serial=data->serialnumber;
 18426  006634  EE20 F004          	lfsr	2,4
 18427  006638  5016               	movf	getHopCode@data^0,w,c
 18428  00663A  26D9               	addwf	fsr2l,f,c
 18429  00663C  5017               	movf	(getHopCode@data+1)^0,w,c
 18430  00663E  22DA               	addwfc	fsr2h,f,c
 18431  006640  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18432  006644  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18433  006648  0E00               	movlw	0
 18434  00664A  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18435  00664C  0E06               	movlw	6
 18436  00664E  6E12               	movwf	___wmul@multiplicand^0,c
 18437  006650  EC2F  F049         	call	___wmul	;wreg free
 18438  006654  0E00               	movlw	low _listSyncValues
 18439  006656  2410               	addwf	?___wmul^0,w,c
 18440  006658  6EE1               	movwf	fsr1l,c
 18441  00665A  0E03               	movlw	high _listSyncValues
 18442  00665C  2011               	addwfc	(?___wmul+1)^0,w,c
 18443  00665E  6EE2               	movwf	fsr1h,c
 18444  006660  CFDE FFE6          	movff	postinc2,postinc1
 18445  006664  CFDE FFE6          	movff	postinc2,postinc1
 18446  006668  CFDE FFE6          	movff	postinc2,postinc1
 18447  00666C  CFDE FFE6          	movff	postinc2,postinc1
 18448                           
 18449                           ;keeloqDecrypt_MC50.c: 283:         listSyncValues[pointSync].sync=data->sync;
 18450  006670  EE20 F008          	lfsr	2,8
 18451  006674  5016               	movf	getHopCode@data^0,w,c
 18452  006676  26D9               	addwf	fsr2l,f,c
 18453  006678  5017               	movf	(getHopCode@data+1)^0,w,c
 18454  00667A  22DA               	addwfc	fsr2h,f,c
 18455  00667C  C07A  F010         	movff	_pointSync,___wmul@multiplier	;volatile
 18456  006680  C07B  F011         	movff	_pointSync+1,___wmul@multiplier+1	;volatile
 18457  006684  0E00               	movlw	0
 18458  006686  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 18459  006688  0E06               	movlw	6
 18460  00668A  6E12               	movwf	___wmul@multiplicand^0,c
 18461  00668C  EC2F  F049         	call	___wmul	;wreg free
 18462  006690  0E04               	movlw	low (_listSyncValues+4)
 18463  006692  2410               	addwf	?___wmul^0,w,c
 18464  006694  6EE1               	movwf	fsr1l,c
 18465  006696  0E03               	movlw	high (_listSyncValues+4)
 18466  006698  2011               	addwfc	(?___wmul+1)^0,w,c
 18467  00669A  6EE2               	movwf	fsr1h,c
 18468  00669C  CFDE FFE6          	movff	postinc2,postinc1
 18469  0066A0  CFDD FFE5          	movff	postdec2,postdec1
 18470                           
 18471                           ;keeloqDecrypt_MC50.c: 284:         pointSync++;
 18472  0066A4  0100               	movlb	0	; () banked
 18473  0066A6  4B7A               	infsnz	_pointSync& (0+255),f,b	;volatile
 18474  0066A8  2B7B               	incf	(_pointSync+1)& (0+255),f,b	;volatile
 18475                           
 18476                           ; BSR set to: 0
 18477                           ;keeloqDecrypt_MC50.c: 285:         if(pointSync>=25)
 18478  0066AA  517B               	movf	(_pointSync+1)& (0+255),w,b	;volatile
 18479  0066AC  E104               	bnz	u23100
 18480  0066AE  0E19               	movlw	25
 18481  0066B0  5D7A               	subwf	_pointSync& (0+255),w,b	;volatile
 18482  0066B2  A0D8               	btfss	status,0,c
 18483  0066B4  D004               	goto	l20164
 18484  0066B6                     u23100:
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;keeloqDecrypt_MC50.c: 286:         {;keeloqDecrypt_MC50.c: 287:             pointSync=0
      +                          ;
 18488  0066B6  0E00               	movlw	0
 18489  0066B8  6F7B               	movwf	(_pointSync+1)& (0+255),b	;volatile
 18490  0066BA  0E00               	movlw	0
 18491  0066BC  6F7A               	movwf	_pointSync& (0+255),b	;volatile
 18492  0066BE                     l20164:
 18493                           
 18494                           ; BSR set to: 0
 18495                           ;keeloqDecrypt_MC50.c: 289:         return ReqResync(Hop);
 18496  0066BE  C07C  F010         	movff	_Hop,ReqResync@CurrentHop
 18497  0066C2  C07D  F011         	movff	_Hop+1,ReqResync@CurrentHop+1
 18498  0066C6  EC43  F04A         	call	_ReqResync	;wreg free
 18499  0066CA  6E18               	movwf	??_getHopCode^0,c
 18500  0066CC  5018               	movf	??_getHopCode^0,w,c
 18501  0066CE  6E16               	movwf	?_getHopCode^0,c
 18502  0066D0  6A17               	clrf	(?_getHopCode+1)^0,c
 18503  0066D2  0012               	return	
 18504  0066D4                     l20170:
 18505                           
 18506                           ; BSR set to: 0
 18507                           ;keeloqDecrypt_MC50.c: 292:     {;keeloqDecrypt_MC50.c: 293:         listSyncValues[temp
      +                          Pos].sync=Hop;
 18508  0066D4  5022               	movf	getHopCode@tempPos^0,w,c
 18509  0066D6  0D06               	mullw	6
 18510  0066D8  0E04               	movlw	low (_listSyncValues+4)
 18511  0066DA  24F3               	addwf	243,w,c
 18512  0066DC  6ED9               	movwf	fsr2l,c
 18513  0066DE  0E03               	movlw	high (_listSyncValues+4)
 18514  0066E0  20F4               	addwfc	prodh,w,c
 18515  0066E2  6EDA               	movwf	fsr2h,c
 18516  0066E4  C07C  FFDE         	movff	_Hop,postinc2
 18517  0066E8  C07D  FFDD         	movff	_Hop+1,postdec2
 18518                           
 18519                           ; BSR set to: 0
 18520                           ;keeloqDecrypt_MC50.c: 296:     return tempHop;
 18521  0066EC  C020  F016         	movff	getHopCode@tempHop,?_getHopCode
 18522  0066F0  C021  F017         	movff	getHopCode@tempHop+1,?_getHopCode+1
 18523  0066F4  0012               	return		;funcret
 18524  0066F6                     __end_of_getHopCode:
 18525                           	callstack 0
 18526                           
 18527 ;; *************** function _ReqResync *****************
 18528 ;; Defined at:
 18529 ;;		line 224 in file "keeloqDecrypt_MC50.c"
 18530 ;; Parameters:    Size  Location     Type
 18531 ;;  CurrentHop      2   15[COMRAM] unsigned short 
 18532 ;; Auto vars:     Size  Location     Type
 18533 ;;		None
 18534 ;; Return value:  Size  Location     Type
 18535 ;;                  1    wreg      enum E10730
 18536 ;; Registers used:
 18537 ;;		wreg, status,2, status,0
 18538 ;; Tracked objects:
 18539 ;;		On entry : 3F/0
 18540 ;;		On exit  : 3F/2
 18541 ;;		Unchanged: 0/0
 18542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18547 ;;Total ram usage:        2 bytes
 18548 ;; Hardware stack levels used: 1
 18549 ;; Hardware stack levels required when called: 4
 18550 ;; This function calls:
 18551 ;;		Nothing
 18552 ;; This function is called by:
 18553 ;;		_HopCHK
 18554 ;;		_getHopCode
 18555 ;; This function uses a non-reentrant model
 18556 ;;
 18557                           
 18558                           	psect	text65
 18559  009486                     __ptext65:
 18560                           	callstack 0
 18561  009486                     _ReqResync:
 18562                           	callstack 22
 18563                           
 18564                           ; BSR set to: 0
 18565                           ;keeloqDecrypt_MC50.c: 225:     F2Chance = 1;
 18566                           
 18567                           ;incstack = 0
 18568  009486  0E01               	movlw	1
 18569  009488  0101               	movlb	1	; () banked
 18570  00948A  6F96               	movwf	_F2Chance& (0+255),b
 18571                           
 18572                           ; BSR set to: 1
 18573                           ;keeloqDecrypt_MC50.c: 226:     NextHop = CurrentHop + 1;
 18574  00948C  0E01               	movlw	1
 18575  00948E  2410               	addwf	ReqResync@CurrentHop^0,w,c
 18576  009490  0102               	movlb	2	; () banked
 18577  009492  6F90               	movwf	_NextHop& (0+255),b
 18578  009494  0E00               	movlw	0
 18579  009496  2011               	addwfc	(ReqResync@CurrentHop+1)^0,w,c
 18580  009498  6F91               	movwf	(_NextHop+1)& (0+255),b
 18581                           
 18582                           ; BSR set to: 2
 18583                           ;keeloqDecrypt_MC50.c: 228:     return RESYNC_REQ;
 18584  00949A  0E09               	movlw	9
 18585                           
 18586                           ; BSR set to: 2
 18587  00949C  0012               	return		;funcret
 18588  00949E                     __end_of_ReqResync:
 18589                           	callstack 0
 18590                           
 18591 ;; *************** function _DecCHK *****************
 18592 ;; Defined at:
 18593 ;;		line 206 in file "keeloqDecrypt_MC50.c"
 18594 ;; Parameters:    Size  Location     Type
 18595 ;;  data            2   15[COMRAM] PTR struct .
 18596 ;;		 -> classic_data(16), 
 18597 ;; Auto vars:     Size  Location     Type
 18598 ;;		None
 18599 ;; Return value:  Size  Location     Type
 18600 ;;                  1    wreg      _Bool 
 18601 ;; Registers used:
 18602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18603 ;; Tracked objects:
 18604 ;;		On entry : 3F/0
 18605 ;;		On exit  : 3F/0
 18606 ;;		Unchanged: 3F/0
 18607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18611 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18612 ;;Total ram usage:        4 bytes
 18613 ;; Hardware stack levels used: 1
 18614 ;; Hardware stack levels required when called: 4
 18615 ;; This function calls:
 18616 ;;		Nothing
 18617 ;; This function is called by:
 18618 ;;		_keeloqDecryptPacket
 18619 ;; This function uses a non-reentrant model
 18620 ;;
 18621                           
 18622                           	psect	text66
 18623  008E98                     __ptext66:
 18624                           	callstack 0
 18625  008E98                     _DecCHK:
 18626                           	callstack 24
 18627                           
 18628                           ; BSR set to: 0
 18629                           ;keeloqDecrypt_MC50.c: 208:     if (((data->fcode1 ^ data->fcode2) & 0x0f) != 0)
 18630                           
 18631                           ; BSR set to: 2
 18632                           ;incstack = 0
 18633  008E98  EE20 F00D          	lfsr	2,13
 18634  008E9C  5010               	movf	DecCHK@data^0,w,c
 18635  008E9E  26D9               	addwf	fsr2l,f,c
 18636  008EA0  5011               	movf	(DecCHK@data+1)^0,w,c
 18637  008EA2  22DA               	addwfc	fsr2h,f,c
 18638  008EA4  50DF               	movf	indf2,w,c
 18639  008EA6  6E12               	movwf	??_DecCHK^0,c
 18640  008EA8  EE20 F00C          	lfsr	2,12
 18641  008EAC  5010               	movf	DecCHK@data^0,w,c
 18642  008EAE  26D9               	addwf	fsr2l,f,c
 18643  008EB0  5011               	movf	(DecCHK@data+1)^0,w,c
 18644  008EB2  22DA               	addwfc	fsr2h,f,c
 18645  008EB4  50DF               	movf	indf2,w,c
 18646  008EB6  1812               	xorwf	??_DecCHK^0,w,c
 18647  008EB8  6E13               	movwf	(??_DecCHK+1)^0,c
 18648  008EBA  0E0F               	movlw	15
 18649  008EBC  1613               	andwf	(??_DecCHK+1)^0,f,c
 18650  008EBE  B4D8               	btfsc	status,2,c
 18651  008EC0  D002               	goto	l20638
 18652                           
 18653                           ; BSR set to: 0
 18654                           ;keeloqDecrypt_MC50.c: 209:         return 0;
 18655  008EC2  0E00               	movlw	0
 18656  008EC4  0012               	return	
 18657  008EC6                     l20638:
 18658                           
 18659                           ; BSR set to: 0
 18660                           ;keeloqDecrypt_MC50.c: 211:     return 1;
 18661  008EC6  0E01               	movlw	1
 18662                           
 18663                           ; BSR set to: 0
 18664  008EC8  0012               	return		;funcret
 18665  008ECA                     __end_of_DecCHK:
 18666                           	callstack 0
 18667                           
 18668 ;; *************** function _DecryptPacket_12BIT *****************
 18669 ;; Defined at:
 18670 ;;		line 370 in file "keeloqDecrypt_MC50.c"
 18671 ;; Parameters:    Size  Location     Type
 18672 ;;  data            2    8[BANK0 ] PTR unsigned char 
 18673 ;;		 -> BufferRF(9), 
 18674 ;;  classic_data    2   10[BANK0 ] PTR struct .
 18675 ;;		 -> classic_data(16), 
 18676 ;; Auto vars:     Size  Location     Type
 18677 ;;  commandType     1   12[BANK0 ] enum E10539
 18678 ;; Return value:  Size  Location     Type
 18679 ;;                  1    wreg      enum E10539
 18680 ;; Registers used:
 18681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18682 ;; Tracked objects:
 18683 ;;		On entry : 3F/0
 18684 ;;		On exit  : 3F/0
 18685 ;;		Unchanged: 0/0
 18686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18690 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18691 ;;Total ram usage:        5 bytes
 18692 ;; Hardware stack levels used: 1
 18693 ;; Hardware stack levels required when called: 14
 18694 ;; This function calls:
 18695 ;;		_memcpy
 18696 ;;		_validateRemoteSerialNumber
 18697 ;; This function is called by:
 18698 ;;		_readRFButtons
 18699 ;; This function uses a non-reentrant model
 18700 ;;
 18701                           
 18702                           	psect	text67
 18703  007A5A                     __ptext67:
 18704                           	callstack 0
 18705  007A5A                     _DecryptPacket_12BIT:
 18706                           	callstack 15
 18707                           
 18708                           ; BSR set to: 0
 18709                           ;keeloqDecrypt_MC50.c: 370: TypeCMD DecryptPacket_12BIT (char* data,classic_encoder_t* c
      +                          lassic_data);keeloqDecrypt_MC50.c: 371: {;keeloqDecrypt_MC50.c: 372:     TypeCMD command
      +                          Type;;keeloqDecrypt_MC50.c: 373:     memcpy(&classic_data->serialnumber, data, 4);
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;incstack = 0
 18713  007A5A  0E04               	movlw	4
 18714  007A5C  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18715  007A5E  6E10               	movwf	memcpy@d1^0,c
 18716  007A60  0E00               	movlw	0
 18717  007A62  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18718  007A64  6E11               	movwf	(memcpy@d1+1)^0,c
 18719  007A66  C0E0  F012         	movff	DecryptPacket_12BIT@data,memcpy@s1
 18720  007A6A  C0E1  F013         	movff	DecryptPacket_12BIT@data+1,memcpy@s1+1
 18721  007A6E  0E00               	movlw	0
 18722  007A70  6E15               	movwf	(memcpy@n+1)^0,c
 18723  007A72  0E04               	movlw	4
 18724  007A74  6E14               	movwf	memcpy@n^0,c
 18725  007A76  EC18  F046         	call	_memcpy	;wreg free
 18726                           
 18727                           ;keeloqDecrypt_MC50.c: 374:     commandType=validateRemoteSerialNumber(classic_data->ser
      +                          ialnumber,NO,&classic_data->positionMem);
 18728  007A7A  0100               	movlb	0	; () banked
 18729  007A7C  EE20 F004          	lfsr	2,4
 18730  007A80  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18731  007A82  26D9               	addwf	fsr2l,f,c
 18732  007A84  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18733  007A86  22DA               	addwfc	fsr2h,f,c
 18734  007A88  CFDE F02E          	movff	postinc2,validateRemoteSerialNumber@serial
 18735  007A8C  CFDE F02F          	movff	postinc2,validateRemoteSerialNumber@serial+1
 18736  007A90  CFDE F030          	movff	postinc2,validateRemoteSerialNumber@serial+2
 18737  007A94  CFDE F031          	movff	postinc2,validateRemoteSerialNumber@serial+3
 18738  007A98  0E00               	movlw	0
 18739  007A9A  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 18740  007A9C  0E0F               	movlw	15
 18741  007A9E  25E2               	addwf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18742  007AA0  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 18743  007AA2  0E00               	movlw	0
 18744  007AA4  21E3               	addwfc	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18745  007AA6  6E34               	movwf	(validateRemoteSerialNumber@position+1)^0,c
 18746  007AA8  ECC9  F02C         	call	_validateRemoteSerialNumber	;wreg free
 18747  007AAC  6FE4               	movwf	DecryptPacket_12BIT@commandType& (0+255),b
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;keeloqDecrypt_MC50.c: 375:     classic_data->fcode1 = 0;
 18751  007AAE  EE20 F00C          	lfsr	2,12
 18752  007AB2  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18753  007AB4  26D9               	addwf	fsr2l,f,c
 18754  007AB6  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18755  007AB8  22DA               	addwfc	fsr2h,f,c
 18756  007ABA  0E00               	movlw	0
 18757  007ABC  6EDF               	movwf	indf2,c
 18758                           
 18759                           ; BSR set to: 0
 18760                           ;keeloqDecrypt_MC50.c: 376:     classic_data->sync = 0;
 18761  007ABE  EE20 F008          	lfsr	2,8
 18762  007AC2  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18763  007AC4  26D9               	addwf	fsr2l,f,c
 18764  007AC6  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18765  007AC8  22DA               	addwfc	fsr2h,f,c
 18766  007ACA  0E00               	movlw	0
 18767  007ACC  6EDE               	movwf	postinc2,c
 18768  007ACE  0E00               	movlw	0
 18769  007AD0  6EDD               	movwf	postdec2,c
 18770                           
 18771                           ; BSR set to: 0
 18772                           ;keeloqDecrypt_MC50.c: 377:     classic_data->type=DIP_12BIT;
 18773  007AD2  EE20 F00E          	lfsr	2,14
 18774  007AD6  51E2               	movf	DecryptPacket_12BIT@classic_data& (0+255),w,b
 18775  007AD8  26D9               	addwf	fsr2l,f,c
 18776  007ADA  51E3               	movf	(DecryptPacket_12BIT@classic_data+1)& (0+255),w,b
 18777  007ADC  22DA               	addwfc	fsr2h,f,c
 18778  007ADE  0E02               	movlw	2
 18779  007AE0  6EDF               	movwf	indf2,c
 18780                           
 18781                           ; BSR set to: 0
 18782                           ;keeloqDecrypt_MC50.c: 386:     return commandType;
 18783  007AE2  51E4               	movf	DecryptPacket_12BIT@commandType& (0+255),w,b
 18784                           
 18785                           ; BSR set to: 0
 18786  007AE4  0012               	return		;funcret
 18787  007AE6                     __end_of_DecryptPacket_12BIT:
 18788                           	callstack 0
 18789                           
 18790 ;; *************** function _readInputs *****************
 18791 ;; Defined at:
 18792 ;;		line 528 in file "inputs_MC50.c"
 18793 ;; Parameters:    Size  Location     Type
 18794 ;;		None
 18795 ;; Auto vars:     Size  Location     Type
 18796 ;;		None
 18797 ;; Return value:  Size  Location     Type
 18798 ;;                  1    wreg      void 
 18799 ;; Registers used:
 18800 ;;		wreg, status,2, status,0
 18801 ;; Tracked objects:
 18802 ;;		On entry : 3F/1
 18803 ;;		On exit  : 3E/0
 18804 ;;		Unchanged: 0/0
 18805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18810 ;;Total ram usage:        0 bytes
 18811 ;; Hardware stack levels used: 1
 18812 ;; Hardware stack levels required when called: 4
 18813 ;; This function calls:
 18814 ;;		Nothing
 18815 ;; This function is called by:
 18816 ;;		_main
 18817 ;; This function uses a non-reentrant model
 18818 ;;
 18819                           
 18820                           	psect	text68
 18821  006C8E                     __ptext68:
 18822                           	callstack 0
 18823  006C8E                     _readInputs:
 18824                           	callstack 26
 18825                           
 18826                           ; BSR set to: 1
 18827                           ;inputs_MC50.c: 533:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoClose
      +                          AUX=PORTAbits.RA1;}
 18828                           
 18829                           ; BSR set to: 0
 18830                           ;incstack = 0
 18831  006C8E  0100               	movlb	0	; () banked
 18832  006C90  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18833  006C92  A4D8               	btfss	status,2,c
 18834  006C94  D006               	goto	l16876
 18835                           
 18836                           ; BSR set to: 0
 18837  006C96  0E00               	movlw	0
 18838  006C98  B28D               	btfsc	141,1,c	;volatile
 18839  006C9A  0E01               	movlw	1
 18840  006C9C  0101               	movlb	1	; () banked
 18841  006C9E  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18842  006CA0  D005               	goto	l16878
 18843  006CA2                     l16876:
 18844                           
 18845                           ; BSR set to: 0
 18846  006CA2  0E00               	movlw	0
 18847  006CA4  B48D               	btfsc	141,2,c	;volatile
 18848  006CA6  0E01               	movlw	1
 18849  006CA8  0101               	movlb	1	; () banked
 18850  006CAA  6F78               	movwf	(_fimdecurso+3)& (0+255),b	;volatile
 18851  006CAC                     l16878:
 18852                           
 18853                           ; BSR set to: 1
 18854                           ;inputs_MC50.c: 541:     if (fimdecurso.FimdeCursoCloseAUX==fimdecurso.FimdeCursoCloseOL
      +                          D)
 18855  006CAC  5179               	movf	(_fimdecurso+4)& (0+255),w,b	;volatile
 18856  006CAE  1978               	xorwf	(_fimdecurso+3)& (0+255),w,b	;volatile
 18857  006CB0  A4D8               	btfss	status,2,c
 18858  006CB2  D002               	goto	l1726
 18859                           
 18860                           ; BSR set to: 1
 18861                           ;inputs_MC50.c: 542:     {;inputs_MC50.c: 543:            fimdecurso.FimdeCursoCloseTime
      +                          r++;
 18862  006CB4  2B7A               	incf	(_fimdecurso+5)& (0+255),f,b	;volatile
 18863                           
 18864                           ;inputs_MC50.c: 544:     }
 18865  006CB6  D004               	goto	l1727
 18866  006CB8                     l1726:
 18867                           
 18868                           ; BSR set to: 1
 18869                           ;inputs_MC50.c: 547:     {;inputs_MC50.c: 548:             fimdecurso.FimdeCursoCloseOLD
      +                           = fimdecurso.FimdeCursoCloseAUX;
 18870  006CB8  C178  F179         	movff	_fimdecurso+3,_fimdecurso+4	;volatile
 18871                           
 18872                           ; BSR set to: 1
 18873                           ;inputs_MC50.c: 549:             fimdecurso.FimdeCursoCloseTimer=0;
 18874  006CBC  0E00               	movlw	0
 18875  006CBE  6F7A               	movwf	(_fimdecurso+5)& (0+255),b	;volatile
 18876  006CC0                     l1727:
 18877                           
 18878                           ; BSR set to: 1
 18879                           ;inputs_MC50.c: 553:     if (fimdecurso.FimdeCursoCloseTimer>=( 50/50))
 18880  006CC0  517A               	movf	(_fimdecurso+5)& (0+255),w,b	;volatile
 18881  006CC2  A4D8               	btfss	status,2,c
 18882                           
 18883                           ; BSR set to: 1
 18884                           ;inputs_MC50.c: 554:     {;inputs_MC50.c: 555:         var_sys.FimCurso_CloseIsEnabled=f
      +                          imdecurso.FimdeCursoCloseAUX;
 18885  006CC4  C178  F103         	movff	_fimdecurso+3,_var_sys+3	;volatile
 18886                           
 18887                           ; BSR set to: 1
 18888                           ;inputs_MC50.c: 564:     if(var_sys_NVM.Direction_motor == 0){fimdecurso.FimdeCursoOpenA
      +                          UX=PORTAbits.RA2;}
 18889  006CC8  0100               	movlb	0	; () banked
 18890  006CCA  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 18891  006CCC  A4D8               	btfss	status,2,c
 18892  006CCE  D006               	goto	l16890
 18893                           
 18894                           ; BSR set to: 0
 18895  006CD0  0E00               	movlw	0
 18896  006CD2  B48D               	btfsc	141,2,c	;volatile
 18897  006CD4  0E01               	movlw	1
 18898  006CD6  0101               	movlb	1	; () banked
 18899  006CD8  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 18900  006CDA  D005               	goto	l16892
 18901  006CDC                     l16890:
 18902                           
 18903                           ; BSR set to: 0
 18904  006CDC  0E00               	movlw	0
 18905  006CDE  B28D               	btfsc	141,1,c	;volatile
 18906  006CE0  0E01               	movlw	1
 18907  006CE2  0101               	movlb	1	; () banked
 18908  006CE4  6F75               	movwf	_fimdecurso& (0+255),b	;volatile
 18909  006CE6                     l16892:
 18910                           
 18911                           ; BSR set to: 1
 18912                           ;inputs_MC50.c: 570:     if (fimdecurso.FimdeCursoOpenAUX==fimdecurso.FimdeCursoOpenOLD)
 18913  006CE6  5175               	movf	_fimdecurso& (0+255),w,b	;volatile
 18914  006CE8  1976               	xorwf	(_fimdecurso+1)& (0+255),w,b	;volatile
 18915  006CEA  A4D8               	btfss	status,2,c
 18916  006CEC  D002               	goto	l1731
 18917                           
 18918                           ; BSR set to: 1
 18919                           ;inputs_MC50.c: 571:     {;inputs_MC50.c: 572:            fimdecurso.FimdeCursoOpenTimer
      +                          ++;
 18920  006CEE  2B77               	incf	(_fimdecurso+2)& (0+255),f,b	;volatile
 18921                           
 18922                           ;inputs_MC50.c: 573:     }
 18923  006CF0  D004               	goto	l1732
 18924  006CF2                     l1731:
 18925                           
 18926                           ; BSR set to: 1
 18927                           ;inputs_MC50.c: 576:     {;inputs_MC50.c: 577:             fimdecurso.FimdeCursoOpenOLD 
      +                          = fimdecurso.FimdeCursoOpenAUX;
 18928  006CF2  C175  F176         	movff	_fimdecurso,_fimdecurso+1	;volatile
 18929                           
 18930                           ; BSR set to: 1
 18931                           ;inputs_MC50.c: 578:             fimdecurso.FimdeCursoOpenTimer=0;
 18932  006CF6  0E00               	movlw	0
 18933  006CF8  6F77               	movwf	(_fimdecurso+2)& (0+255),b	;volatile
 18934  006CFA                     l1732:
 18935                           
 18936                           ; BSR set to: 1
 18937                           ;inputs_MC50.c: 582:     if (fimdecurso.FimdeCursoOpenTimer>=( 50/50))
 18938  006CFA  5177               	movf	(_fimdecurso+2)& (0+255),w,b	;volatile
 18939  006CFC  A4D8               	btfss	status,2,c
 18940                           
 18941                           ; BSR set to: 1
 18942                           ;inputs_MC50.c: 583:     {;inputs_MC50.c: 584:         var_sys.FimCurso_OpenIsEnabled=fi
      +                          mdecurso.FimdeCursoOpenAUX;
 18943  006CFE  C175  F104         	movff	_fimdecurso,_var_sys+4	;volatile
 18944                           
 18945                           ; BSR set to: 1
 18946                           ;inputs_MC50.c: 589:     security.PhotoCellAUX=PORTAbits.RA4;
 18947  006D02  0E00               	movlw	0
 18948  006D04  B88D               	btfsc	141,4,c	;volatile
 18949  006D06  0E01               	movlw	1
 18950  006D08  6F6A               	movwf	_security& (0+255),b	;volatile
 18951                           
 18952                           ; BSR set to: 1
 18953                           ;inputs_MC50.c: 594:     if (security.PhotoCellAUX==security.PhotoCellOLD)
 18954  006D0A  516A               	movf	_security& (0+255),w,b	;volatile
 18955  006D0C  196B               	xorwf	(_security+1)& (0+255),w,b	;volatile
 18956  006D0E  A4D8               	btfss	status,2,c
 18957  006D10  D002               	goto	l1734
 18958                           
 18959                           ; BSR set to: 1
 18960                           ;inputs_MC50.c: 595:     {;inputs_MC50.c: 596:            security.PhotoCellTimer++;
 18961  006D12  2B6C               	incf	(_security+2)& (0+255),f,b	;volatile
 18962                           
 18963                           ;inputs_MC50.c: 597:     }
 18964  006D14  D004               	goto	l1735
 18965  006D16                     l1734:
 18966                           
 18967                           ; BSR set to: 1
 18968                           ;inputs_MC50.c: 600:     {;inputs_MC50.c: 601:             security.PhotoCellOLD = secur
      +                          ity.PhotoCellAUX;
 18969  006D16  C16A  F16B         	movff	_security,_security+1	;volatile
 18970                           
 18971                           ; BSR set to: 1
 18972                           ;inputs_MC50.c: 602:             security.PhotoCellTimer=0;
 18973  006D1A  0E00               	movlw	0
 18974  006D1C  6F6C               	movwf	(_security+2)& (0+255),b	;volatile
 18975  006D1E                     l1735:
 18976                           
 18977                           ; BSR set to: 1
 18978                           ;inputs_MC50.c: 606:     if (security.PhotoCellTimer>=( 50/50))
 18979  006D1E  516C               	movf	(_security+2)& (0+255),w,b	;volatile
 18980  006D20  A4D8               	btfss	status,2,c
 18981                           
 18982                           ; BSR set to: 1
 18983                           ;inputs_MC50.c: 607:     {;inputs_MC50.c: 608:         var_sys.photoCellIsObstructed=sec
      +                          urity.PhotoCellAUX;
 18984  006D22  C16A  F101         	movff	_security,_var_sys+1	;volatile
 18985                           
 18986                           ; BSR set to: 1
 18987                           ;inputs_MC50.c: 612:     security.SecurityBarAUX=PORTAbits.RA5;
 18988  006D26  0E00               	movlw	0
 18989  006D28  BA8D               	btfsc	141,5,c	;volatile
 18990  006D2A  0E01               	movlw	1
 18991  006D2C  6F6D               	movwf	(_security+3)& (0+255),b	;volatile
 18992                           
 18993                           ; BSR set to: 1
 18994                           ;inputs_MC50.c: 616:     if (security.SecurityBarAUX==security.SecurityBarOLD)
 18995  006D2E  516E               	movf	(_security+4)& (0+255),w,b	;volatile
 18996  006D30  196D               	xorwf	(_security+3)& (0+255),w,b	;volatile
 18997  006D32  A4D8               	btfss	status,2,c
 18998  006D34  D002               	goto	l1737
 18999                           
 19000                           ; BSR set to: 1
 19001                           ;inputs_MC50.c: 617:     {;inputs_MC50.c: 618:            security.SecurityBarTimer++;
 19002  006D36  2B6F               	incf	(_security+5)& (0+255),f,b	;volatile
 19003                           
 19004                           ;inputs_MC50.c: 619:     }
 19005  006D38  D004               	goto	l1738
 19006  006D3A                     l1737:
 19007                           
 19008                           ; BSR set to: 1
 19009                           ;inputs_MC50.c: 622:     {;inputs_MC50.c: 623:             security.SecurityBarOLD = sec
      +                          urity.SecurityBarAUX;
 19010  006D3A  C16D  F16E         	movff	_security+3,_security+4	;volatile
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;inputs_MC50.c: 624:             security.SecurityBarTimer=0;
 19014  006D3E  0E00               	movlw	0
 19015  006D40  6F6F               	movwf	(_security+5)& (0+255),b	;volatile
 19016  006D42                     l1738:
 19017                           
 19018                           ; BSR set to: 1
 19019                           ;inputs_MC50.c: 628:     if (security.SecurityBarTimer>=( 50/50))
 19020  006D42  516F               	movf	(_security+5)& (0+255),w,b	;volatile
 19021  006D44  A4D8               	btfss	status,2,c
 19022                           
 19023                           ; BSR set to: 1
 19024                           ;inputs_MC50.c: 629:     {;inputs_MC50.c: 630:         security.SecurityBarSTATE=securit
      +                          y.SecurityBarAUX;
 19025  006D46  C16D  F170         	movff	_security+3,_security+6	;volatile
 19026                           
 19027                           ; BSR set to: 1
 19028                           ;inputs_MC50.c: 633:     security.SecurityBar8K2AUX=PORTAbits.RA6;
 19029  006D4A  0E00               	movlw	0
 19030  006D4C  BC8D               	btfsc	141,6,c	;volatile
 19031  006D4E  0E01               	movlw	1
 19032  006D50  6F71               	movwf	(_security+7)& (0+255),b	;volatile
 19033                           
 19034                           ; BSR set to: 1
 19035                           ;inputs_MC50.c: 637:     if (security.SecurityBar8K2AUX==security.SecurityBar8K2OLD)
 19036  006D52  5172               	movf	(_security+8)& (0+255),w,b	;volatile
 19037  006D54  1971               	xorwf	(_security+7)& (0+255),w,b	;volatile
 19038  006D56  A4D8               	btfss	status,2,c
 19039  006D58  D002               	goto	l1740
 19040                           
 19041                           ; BSR set to: 1
 19042                           ;inputs_MC50.c: 638:     {;inputs_MC50.c: 639:            security.SecurityBar8K2Timer++
      +                          ;
 19043  006D5A  2B73               	incf	(_security+9)& (0+255),f,b	;volatile
 19044                           
 19045                           ;inputs_MC50.c: 640:     }
 19046  006D5C  D004               	goto	l1741
 19047  006D5E                     l1740:
 19048                           
 19049                           ; BSR set to: 1
 19050                           ;inputs_MC50.c: 643:     {;inputs_MC50.c: 644:             security.SecurityBar8K2OLD = 
      +                          security.SecurityBar8K2AUX;
 19051  006D5E  C171  F172         	movff	_security+7,_security+8	;volatile
 19052                           
 19053                           ; BSR set to: 1
 19054                           ;inputs_MC50.c: 645:             security.SecurityBar8K2Timer=0;
 19055  006D62  0E00               	movlw	0
 19056  006D64  6F73               	movwf	(_security+9)& (0+255),b	;volatile
 19057  006D66                     l1741:
 19058                           
 19059                           ; BSR set to: 1
 19060                           ;inputs_MC50.c: 649:     if (security.SecurityBar8K2Timer>=( 50/50))
 19061  006D66  5173               	movf	(_security+9)& (0+255),w,b	;volatile
 19062  006D68  A4D8               	btfss	status,2,c
 19063                           
 19064                           ; BSR set to: 1
 19065                           ;inputs_MC50.c: 650:     {;inputs_MC50.c: 651:         security.SecurityBar8K2STATE=secu
      +                          rity.SecurityBar8K2AUX;
 19066  006D6A  C171  F174         	movff	_security+7,_security+10	;volatile
 19067                           
 19068                           ; BSR set to: 1
 19069                           ;inputs_MC50.c: 655:     if (var_sys_NVM.securityBandType == 0)
 19070  006D6E  0100               	movlb	0	; () banked
 19071  006D70  51A2               	movf	(_var_sys_NVM+10)& (0+255),w,b	;volatile
 19072  006D72  A4D8               	btfss	status,2,c
 19073  006D74  D00D               	goto	l1743
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;inputs_MC50.c: 656:     {;inputs_MC50.c: 657:         if(security.SecurityBarSTATE==0 &
      +                          & security.SecurityBar8K2STATE==1)
 19077  006D76  0101               	movlb	1	; () banked
 19078  006D78  5170               	movf	(_security+6)& (0+255),w,b	;volatile
 19079  006D7A  A4D8               	btfss	status,2,c
 19080  006D7C  D006               	goto	l16938
 19081                           
 19082                           ; BSR set to: 1
 19083  006D7E  0574               	decf	(_security+10)& (0+255),w,b	;volatile
 19084  006D80  A4D8               	btfss	status,2,c
 19085  006D82  D003               	goto	l16938
 19086                           
 19087                           ; BSR set to: 1
 19088                           ;inputs_MC50.c: 658:         {;inputs_MC50.c: 659:             var_sys.SecurityBarIsObst
      +                          ructed = NO;
 19089  006D84  0E00               	movlw	0
 19090  006D86  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19091                           
 19092                           ;inputs_MC50.c: 660:         }
 19093  006D88  0012               	return	
 19094  006D8A                     l16938:
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;inputs_MC50.c: 662:         {;inputs_MC50.c: 663:             var_sys.SecurityBarIsObst
      +                          ructed = YES;
 19098  006D8A  0E01               	movlw	1
 19099  006D8C  6F02               	movwf	(_var_sys+2)& (0+255),b	;volatile
 19100  006D8E  0012               	return	
 19101  006D90                     l1743:
 19102                           
 19103                           ; BSR set to: 0
 19104                           ;inputs_MC50.c: 667:     {;inputs_MC50.c: 668:         var_sys.SecurityBarIsObstructed =
      +                           security.SecurityBarSTATE;
 19105  006D90  C170  F102         	movff	_security+6,_var_sys+2	;volatile
 19106  006D94  0012               	return		;funcret
 19107  006D96                     __end_of_readInputs:
 19108                           	callstack 0
 19109                           
 19110 ;; *************** function _loadNVM_VarSystem *****************
 19111 ;; Defined at:
 19112 ;;		line 139 in file "controlMemory_MC50.c"
 19113 ;; Parameters:    Size  Location     Type
 19114 ;;		None
 19115 ;; Auto vars:     Size  Location     Type
 19116 ;;		None
 19117 ;; Return value:  Size  Location     Type
 19118 ;;                  1    wreg      void 
 19119 ;; Registers used:
 19120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19121 ;; Tracked objects:
 19122 ;;		On entry : 3F/0
 19123 ;;		On exit  : 0/0
 19124 ;;		Unchanged: 0/0
 19125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19130 ;;Total ram usage:        0 bytes
 19131 ;; Hardware stack levels used: 1
 19132 ;; Hardware stack levels required when called: 15
 19133 ;; This function calls:
 19134 ;;		_I2C1_Read1ByteRegister
 19135 ;;		_ResetDefaultMemory
 19136 ;;		_SaveNVM_VarSystem
 19137 ;;		_checkNVM_VarSystem
 19138 ;;		_i2c_readDataBlock
 19139 ;; This function is called by:
 19140 ;;		_main
 19141 ;; This function uses a non-reentrant model
 19142 ;;
 19143                           
 19144                           	psect	text69
 19145  0066F6                     __ptext69:
 19146                           	callstack 0
 19147  0066F6                     _loadNVM_VarSystem:
 19148                           	callstack 15
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;controlMemory_MC50.c: 141:     if((I2C1_Read1ByteRegister(0x50, 0) == 0xFF) && (I2C1_Re
      +                          ad1ByteRegister(0x50, 16) == 0xFF))
 19152                           
 19153                           ;incstack = 0
 19154  0066F6  0E00               	movlw	0
 19155  0066F8  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19156  0066FA  0E50               	movlw	80
 19157  0066FC  EC6A  F043         	call	_I2C1_Read1ByteRegister
 19158  006700  0AFF               	xorlw	255
 19159  006702  A4D8               	btfss	status,2,c
 19160  006704  D04C               	goto	l23112
 19161  006706  0E10               	movlw	16
 19162  006708  6E22               	movwf	I2C1_Read1ByteRegister@reg^0,c
 19163  00670A  0E50               	movlw	80
 19164  00670C  EC6A  F043         	call	_I2C1_Read1ByteRegister
 19165  006710  0AFF               	xorlw	255
 19166  006712  A4D8               	btfss	status,2,c
 19167  006714  D044               	goto	l23112
 19168                           
 19169                           ;controlMemory_MC50.c: 142:     {;controlMemory_MC50.c: 143:         ResetDefaultMemory(
      +                          SC);
 19170  006716  0E00               	movlw	0
 19171  006718  ECFC  F02F         	call	_ResetDefaultMemory
 19172                           
 19173                           ;controlMemory_MC50.c: 144:         var_sys_NVM.learningTimeToClose = 0;
 19174  00671C  0E00               	movlw	0
 19175  00671E  0100               	movlb	0	; () banked
 19176  006720  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 19177  006722  0E00               	movlw	0
 19178  006724  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 19179  006726  0E00               	movlw	0
 19180  006728  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 19181  00672A  0E00               	movlw	0
 19182  00672C  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 19183                           
 19184                           ; BSR set to: 0
 19185                           ;controlMemory_MC50.c: 145:         var_sys_NVM.learningTimeToOpen = 0;
 19186  00672E  0E00               	movlw	0
 19187  006730  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 19188  006732  0E00               	movlw	0
 19189  006734  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 19190  006736  0E00               	movlw	0
 19191  006738  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 19192  00673A  0E00               	movlw	0
 19193  00673C  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 19194                           
 19195                           ; BSR set to: 0
 19196                           ;controlMemory_MC50.c: 146:         var_sys_NVM.learningCurrentNormalClose = 0;
 19197  00673E  0E00               	movlw	0
 19198  006740  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 19199  006742  0E00               	movlw	0
 19200  006744  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 19201                           
 19202                           ; BSR set to: 0
 19203                           ;controlMemory_MC50.c: 147:         var_sys_NVM.learningCurrentNormalOpen = 0;
 19204  006746  0E00               	movlw	0
 19205  006748  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 19206  00674A  0E00               	movlw	0
 19207  00674C  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 19208                           
 19209                           ; BSR set to: 0
 19210                           ;controlMemory_MC50.c: 148:         var_sys_NVM.learningCurrentDecelarationClose = 0;
 19211  00674E  0E00               	movlw	0
 19212  006750  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 19213  006752  0E00               	movlw	0
 19214  006754  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 19215  006756  0E00               	movlw	0
 19216  006758  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 19217  00675A  0E00               	movlw	0
 19218  00675C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 19219                           
 19220                           ; BSR set to: 0
 19221                           ;controlMemory_MC50.c: 149:         var_sys_NVM.learningCurrentDecelarationOpen = 0;
 19222  00675E  0E00               	movlw	0
 19223  006760  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 19224  006762  0E00               	movlw	0
 19225  006764  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 19226  006766  0E00               	movlw	0
 19227  006768  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 19228  00676A  0E00               	movlw	0
 19229  00676C  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 19230                           
 19231                           ;controlMemory_MC50.c: 150:         SaveNVM_VarSystem(pageMemoryLearningVars);
 19232  00676E  0E03               	movlw	3
 19233  006770  EC16  F047         	call	_SaveNVM_VarSystem
 19234                           
 19235                           ;controlMemory_MC50.c: 151:         var_sys_NVM.positionRemotesFull = 0;
 19236  006774  0E00               	movlw	0
 19237  006776  0100               	movlb	0	; () banked
 19238  006778  6FB8               	movwf	(_var_sys_NVM+32)& (0+255),b	;volatile
 19239                           
 19240                           ; BSR set to: 0
 19241                           ;controlMemory_MC50.c: 152:         var_sys_NVM.positionRemotesWalk = 0;
 19242  00677A  0E00               	movlw	0
 19243  00677C  6FB9               	movwf	(_var_sys_NVM+33)& (0+255),b	;volatile
 19244                           
 19245                           ; BSR set to: 0
 19246                           ;controlMemory_MC50.c: 153:         var_sys_NVM.OnlyRollingCode = NO;
 19247  00677E  0E00               	movlw	0
 19248  006780  6FBE               	movwf	(_var_sys_NVM+38)& (0+255),b	;volatile
 19249                           
 19250                           ; BSR set to: 0
 19251                           ;controlMemory_MC50.c: 154:         var_sys_NVM.counterMoves = 0;
 19252  006782  0E00               	movlw	0
 19253  006784  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 19254  006786  0E00               	movlw	0
 19255  006788  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 19256  00678A  0E00               	movlw	0
 19257  00678C  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 19258  00678E  0E00               	movlw	0
 19259  006790  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 19260                           
 19261                           ;controlMemory_MC50.c: 155:        SaveNVM_VarSystem(pageMemoryCounters);
 19262  006792  0E02               	movlw	2
 19263  006794  EC16  F047         	call	_SaveNVM_VarSystem
 19264                           
 19265                           ;controlMemory_MC50.c: 157:          var_sys_NVM.TypeofMotor = 0;
 19266  006798  0E00               	movlw	0
 19267  00679A  0100               	movlb	0	; () banked
 19268  00679C  6FB4               	movwf	(_var_sys_NVM+28)& (0+255),b	;volatile
 19269  00679E                     l23112:
 19270                           
 19271                           ;controlMemory_MC50.c: 160:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryP * 16),(ch
      +                          ar*)&var_sys_NVM,16);
 19272  00679E  0E00               	movlw	0
 19273  0067A0  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19274  0067A2  0E00               	movlw	0
 19275  0067A4  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19276  0067A6  0E98               	movlw	low _var_sys_NVM
 19277  0067A8  6E24               	movwf	i2c_readDataBlock@data^0,c
 19278  0067AA  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19279  0067AC  0E00               	movlw	0
 19280  0067AE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19281  0067B0  0E10               	movlw	16
 19282  0067B2  6E26               	movwf	i2c_readDataBlock@len^0,c
 19283  0067B4  0E50               	movlw	80
 19284  0067B6  ECBE  F040         	call	_i2c_readDataBlock
 19285                           
 19286                           ;controlMemory_MC50.c: 161:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryE * 16),(ch
      +                          ar*)&var_sys_NVM.homemPresente, 16);
 19287  0067BA  0E00               	movlw	0
 19288  0067BC  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19289  0067BE  0E10               	movlw	16
 19290  0067C0  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19291  0067C2  0EA8               	movlw	low (_var_sys_NVM+16)
 19292  0067C4  6E24               	movwf	i2c_readDataBlock@data^0,c
 19293  0067C6  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19294  0067C8  0E00               	movlw	0
 19295  0067CA  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19296  0067CC  0E10               	movlw	16
 19297  0067CE  6E26               	movwf	i2c_readDataBlock@len^0,c
 19298  0067D0  0E50               	movlw	80
 19299  0067D2  ECBE  F040         	call	_i2c_readDataBlock
 19300                           
 19301                           ;controlMemory_MC50.c: 162:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryCounters * 
      +                          16),(char*)&var_sys_NVM.positionRemotesFull,16);
 19302  0067D6  0E00               	movlw	0
 19303  0067D8  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19304  0067DA  0E20               	movlw	32
 19305  0067DC  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19306  0067DE  0EB8               	movlw	low (_var_sys_NVM+32)
 19307  0067E0  6E24               	movwf	i2c_readDataBlock@data^0,c
 19308  0067E2  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19309  0067E4  0E00               	movlw	0
 19310  0067E6  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19311  0067E8  0E10               	movlw	16
 19312  0067EA  6E26               	movwf	i2c_readDataBlock@len^0,c
 19313  0067EC  0E50               	movlw	80
 19314  0067EE  ECBE  F040         	call	_i2c_readDataBlock
 19315                           
 19316                           ;controlMemory_MC50.c: 163:     i2c_readDataBlock(0x50, (uint16_t)(pageMemoryLearningVar
      +                          s * 16),(char*)&var_sys_NVM.learningCurrentNormalClose, 16);
 19317  0067F2  0E00               	movlw	0
 19318  0067F4  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 19319  0067F6  0E30               	movlw	48
 19320  0067F8  6E22               	movwf	i2c_readDataBlock@reg^0,c
 19321  0067FA  0EC8               	movlw	low (_var_sys_NVM+48)
 19322  0067FC  6E24               	movwf	i2c_readDataBlock@data^0,c
 19323  0067FE  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 19324  006800  0E00               	movlw	0
 19325  006802  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 19326  006804  0E10               	movlw	16
 19327  006806  6E26               	movwf	i2c_readDataBlock@len^0,c
 19328  006808  0E50               	movlw	80
 19329  00680A  ECBE  F040         	call	_i2c_readDataBlock
 19330                           
 19331                           ;controlMemory_MC50.c: 166:     checkNVM_VarSystem();
 19332  00680E  ECF9  F02B         	call	_checkNVM_VarSystem	;wreg free
 19333                           
 19334                           ;controlMemory_MC50.c: 168:     var_sys.actualCounterMoves=var_sys_NVM.counterMoves;
 19335  006812  C0BA  F13C         	movff	_var_sys_NVM+34,_var_sys+60	;volatile
 19336  006816  C0BB  F13D         	movff	_var_sys_NVM+35,_var_sys+61	;volatile
 19337  00681A  C0BC  F13E         	movff	_var_sys_NVM+36,_var_sys+62	;volatile
 19338  00681E  C0BD  F13F         	movff	_var_sys_NVM+37,_var_sys+63	;volatile
 19339  006822  0012               	return		;funcret
 19340  006824                     __end_of_loadNVM_VarSystem:
 19341                           	callstack 0
 19342                           
 19343 ;; *************** function _checkNVM_VarSystem *****************
 19344 ;; Defined at:
 19345 ;;		line 314 in file "controlMemory_MC50.c"
 19346 ;; Parameters:    Size  Location     Type
 19347 ;;		None
 19348 ;; Auto vars:     Size  Location     Type
 19349 ;;  saveParam       1   57[COMRAM] unsigned char 
 19350 ;; Return value:  Size  Location     Type
 19351 ;;                  1    wreg      void 
 19352 ;; Registers used:
 19353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19354 ;; Tracked objects:
 19355 ;;		On entry : 0/2
 19356 ;;		On exit  : 0/0
 19357 ;;		Unchanged: 0/0
 19358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19363 ;;Total ram usage:        1 bytes
 19364 ;; Hardware stack levels used: 1
 19365 ;; Hardware stack levels required when called: 14
 19366 ;; This function calls:
 19367 ;;		_SaveNVM_VarSystem
 19368 ;; This function is called by:
 19369 ;;		_loadNVM_VarSystem
 19370 ;; This function uses a non-reentrant model
 19371 ;;
 19372                           
 19373                           	psect	text70
 19374  0057F2                     __ptext70:
 19375                           	callstack 0
 19376  0057F2                     _checkNVM_VarSystem:
 19377                           	callstack 15
 19378                           
 19379                           ;controlMemory_MC50.c: 316:     char saveParam;;controlMemory_MC50.c: 319:     saveParam
      +                           = 0;
 19380                           
 19381                           ;incstack = 0
 19382  0057F2  0E00               	movlw	0
 19383  0057F4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19384                           
 19385                           ;controlMemory_MC50.c: 327:     if ( var_sys_NVM.decelarationOpen>45 )
 19386  0057F6  0E2D               	movlw	45
 19387  0057F8  0100               	movlb	0	; () banked
 19388  0057FA  6598               	cpfsgt	_var_sys_NVM& (0+255),b	;volatile
 19389  0057FC  D004               	goto	l21562
 19390                           
 19391                           ; BSR set to: 0
 19392                           ;controlMemory_MC50.c: 328:     {;controlMemory_MC50.c: 330:         var_sys_NVM.decelar
      +                          ationOpen = 3;
 19393  0057FE  0E03               	movlw	3
 19394  005800  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19395                           
 19396                           ;controlMemory_MC50.c: 331:         saveParam=1;
 19397  005802  0E01               	movlw	1
 19398  005804  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19399  005806                     l21562:
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;controlMemory_MC50.c: 334:     if ( var_sys_NVM.decelarationClose>45 )
 19403  005806  0E2D               	movlw	45
 19404  005808  6599               	cpfsgt	(_var_sys_NVM+1)& (0+255),b	;volatile
 19405  00580A  D004               	goto	l1490
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;controlMemory_MC50.c: 335:     {;controlMemory_MC50.c: 337:         var_sys_NVM.decelar
      +                          ationClose = 3;
 19409  00580C  0E03               	movlw	3
 19410  00580E  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19411                           
 19412                           ;controlMemory_MC50.c: 338:         saveParam=1;
 19413  005810  0E01               	movlw	1
 19414  005812  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19415  005814                     l1490:
 19416                           
 19417                           ; BSR set to: 0
 19418                           ;controlMemory_MC50.c: 341:     if ( (var_sys_NVM.motorPower<1) || (var_sys_NVM.motorPow
      +                          er>9) )
 19419  005814  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 19420  005816  B4D8               	btfsc	status,2,c
 19421  005818  D003               	goto	u24800
 19422                           
 19423                           ; BSR set to: 0
 19424  00581A  0E09               	movlw	9
 19425  00581C  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 19426  00581E  D004               	goto	l21570
 19427  005820                     u24800:
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;controlMemory_MC50.c: 342:     {;controlMemory_MC50.c: 344:         var_sys_NVM.motorPo
      +                          wer = 9;
 19431  005820  0E09               	movlw	9
 19432  005822  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19433                           
 19434                           ;controlMemory_MC50.c: 345:         saveParam=1;
 19435  005824  0E01               	movlw	1
 19436  005826  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19437  005828                     l21570:
 19438                           
 19439                           ; BSR set to: 0
 19440                           ;controlMemory_MC50.c: 348:     if ( var_sys_NVM.motorSensitivity>9 )
 19441  005828  0E09               	movlw	9
 19442  00582A  659B               	cpfsgt	(_var_sys_NVM+3)& (0+255),b	;volatile
 19443  00582C  D004               	goto	l21574
 19444                           
 19445                           ; BSR set to: 0
 19446                           ;controlMemory_MC50.c: 349:     {;controlMemory_MC50.c: 351:         var_sys_NVM.motorSe
      +                          nsitivity = 0;
 19447  00582E  0E00               	movlw	0
 19448  005830  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19449                           
 19450                           ;controlMemory_MC50.c: 352:         saveParam=1;
 19451  005832  0E01               	movlw	1
 19452  005834  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19453  005836                     l21574:
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;controlMemory_MC50.c: 355:     if ( var_sys_NVM.walkTime>99 )
 19457  005836  0E63               	movlw	99
 19458  005838  659C               	cpfsgt	(_var_sys_NVM+4)& (0+255),b	;volatile
 19459  00583A  D004               	goto	l21578
 19460                           
 19461                           ; BSR set to: 0
 19462                           ;controlMemory_MC50.c: 356:     {;controlMemory_MC50.c: 358:         var_sys_NVM.walkTim
      +                          e = 10;
 19463  00583C  0E0A               	movlw	10
 19464  00583E  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 19465                           
 19466                           ;controlMemory_MC50.c: 359:         saveParam=1;
 19467  005840  0E01               	movlw	1
 19468  005842  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19469  005844                     l21578:
 19470                           
 19471                           ; BSR set to: 0
 19472                           ;controlMemory_MC50.c: 362:     if ( var_sys_NVM.autoTimeFullClose>99 )
 19473  005844  0E63               	movlw	99
 19474  005846  659D               	cpfsgt	(_var_sys_NVM+5)& (0+255),b	;volatile
 19475  005848  D004               	goto	l21582
 19476                           
 19477                           ; BSR set to: 0
 19478                           ;controlMemory_MC50.c: 363:     {;controlMemory_MC50.c: 365:         var_sys_NVM.autoTim
      +                          eFullClose = 0;
 19479  00584A  0E00               	movlw	0
 19480  00584C  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19481                           
 19482                           ;controlMemory_MC50.c: 366:         saveParam=1;
 19483  00584E  0E01               	movlw	1
 19484  005850  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19485  005852                     l21582:
 19486                           
 19487                           ; BSR set to: 0
 19488                           ;controlMemory_MC50.c: 369:     if ( var_sys_NVM.autoTimeWalkClose>99 )
 19489  005852  0E63               	movlw	99
 19490  005854  659E               	cpfsgt	(_var_sys_NVM+6)& (0+255),b	;volatile
 19491  005856  D004               	goto	l21586
 19492                           
 19493                           ; BSR set to: 0
 19494                           ;controlMemory_MC50.c: 370:     {;controlMemory_MC50.c: 372:         var_sys_NVM.autoTim
      +                          eWalkClose = 0;
 19495  005858  0E00               	movlw	0
 19496  00585A  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19497                           
 19498                           ;controlMemory_MC50.c: 373:         saveParam=1;
 19499  00585C  0E01               	movlw	1
 19500  00585E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19501  005860                     l21586:
 19502                           
 19503                           ; BSR set to: 0
 19504                           ;controlMemory_MC50.c: 376:     if ( var_sys_NVM.photoCellIsON>1 )
 19505  005860  0E01               	movlw	1
 19506  005862  659F               	cpfsgt	(_var_sys_NVM+7)& (0+255),b	;volatile
 19507  005864  D004               	goto	l21590
 19508                           
 19509                           ; BSR set to: 0
 19510                           ;controlMemory_MC50.c: 377:     {;controlMemory_MC50.c: 379:         var_sys_NVM.photoCe
      +                          llIsON = 0;
 19511  005866  0E00               	movlw	0
 19512  005868  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19513                           
 19514                           ;controlMemory_MC50.c: 380:         saveParam=1;
 19515  00586A  0E01               	movlw	1
 19516  00586C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19517  00586E                     l21590:
 19518                           
 19519                           ; BSR set to: 0
 19520                           ;controlMemory_MC50.c: 383:     if ( var_sys_NVM.photoCellInOpen>1 )
 19521  00586E  0E01               	movlw	1
 19522  005870  65A0               	cpfsgt	(_var_sys_NVM+8)& (0+255),b	;volatile
 19523  005872  D004               	goto	l21594
 19524                           
 19525                           ; BSR set to: 0
 19526                           ;controlMemory_MC50.c: 384:     {;controlMemory_MC50.c: 386:         var_sys_NVM.photoCe
      +                          llInOpen = 0;
 19527  005874  0E00               	movlw	0
 19528  005876  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19529                           
 19530                           ;controlMemory_MC50.c: 387:         saveParam=1;
 19531  005878  0E01               	movlw	1
 19532  00587A  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19533  00587C                     l21594:
 19534                           
 19535                           ; BSR set to: 0
 19536                           ;controlMemory_MC50.c: 390:     if ( var_sys_NVM.securityBandIsON>1 )
 19537  00587C  0E01               	movlw	1
 19538  00587E  65A1               	cpfsgt	(_var_sys_NVM+9)& (0+255),b	;volatile
 19539  005880  D004               	goto	l21598
 19540                           
 19541                           ; BSR set to: 0
 19542                           ;controlMemory_MC50.c: 391:     {;controlMemory_MC50.c: 393:         var_sys_NVM.securit
      +                          yBandIsON = 0 ;
 19543  005882  0E00               	movlw	0
 19544  005884  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19545                           
 19546                           ;controlMemory_MC50.c: 394:         saveParam=1;
 19547  005886  0E01               	movlw	1
 19548  005888  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19549  00588A                     l21598:
 19550                           
 19551                           ; BSR set to: 0
 19552                           ;controlMemory_MC50.c: 397:     if ( var_sys_NVM.securityBandType>1 )
 19553  00588A  0E01               	movlw	1
 19554  00588C  65A2               	cpfsgt	(_var_sys_NVM+10)& (0+255),b	;volatile
 19555  00588E  D004               	goto	l21602
 19556                           
 19557                           ; BSR set to: 0
 19558                           ;controlMemory_MC50.c: 398:     {;controlMemory_MC50.c: 400:         var_sys_NVM.securit
      +                          yBandType = 1;
 19559  005890  0E01               	movlw	1
 19560  005892  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19561                           
 19562                           ;controlMemory_MC50.c: 401:         saveParam=1;
 19563  005894  0E01               	movlw	1
 19564  005896  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19565  005898                     l21602:
 19566                           
 19567                           ; BSR set to: 0
 19568                           ;controlMemory_MC50.c: 404:     if ( var_sys_NVM.securityBandInOpen>1 )
 19569  005898  0E01               	movlw	1
 19570  00589A  65A3               	cpfsgt	(_var_sys_NVM+11)& (0+255),b	;volatile
 19571  00589C  D004               	goto	l21606
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;controlMemory_MC50.c: 405:     {;controlMemory_MC50.c: 407:         var_sys_NVM.securit
      +                          yBandInOpen = 0;
 19575  00589E  0E00               	movlw	0
 19576  0058A0  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19577                           
 19578                           ;controlMemory_MC50.c: 408:         saveParam=1;
 19579  0058A2  0E01               	movlw	1
 19580  0058A4  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19581  0058A6                     l21606:
 19582                           
 19583                           ; BSR set to: 0
 19584                           ;controlMemory_MC50.c: 411:     if ( var_sys_NVM.operationMode>2 )
 19585  0058A6  0E02               	movlw	2
 19586  0058A8  65A4               	cpfsgt	(_var_sys_NVM+12)& (0+255),b	;volatile
 19587  0058AA  D004               	goto	l21610
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;controlMemory_MC50.c: 412:     {;controlMemory_MC50.c: 414:         var_sys_NVM.operati
      +                          onMode = 0;
 19591  0058AC  0E00               	movlw	0
 19592  0058AE  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19593                           
 19594                           ;controlMemory_MC50.c: 415:         saveParam=1;
 19595  0058B0  0E01               	movlw	1
 19596  0058B2  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19597  0058B4                     l21610:
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;controlMemory_MC50.c: 418:     if ( var_sys_NVM.flashLightMode>3 )
 19601  0058B4  0E03               	movlw	3
 19602  0058B6  65A5               	cpfsgt	(_var_sys_NVM+13)& (0+255),b	;volatile
 19603  0058B8  D004               	goto	l21614
 19604                           
 19605                           ; BSR set to: 0
 19606                           ;controlMemory_MC50.c: 419:     {;controlMemory_MC50.c: 421:         var_sys_NVM.flashLi
      +                          ghtMode = 0;
 19607  0058BA  0E00               	movlw	0
 19608  0058BC  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19609                           
 19610                           ;controlMemory_MC50.c: 422:         saveParam=1;
 19611  0058BE  0E01               	movlw	1
 19612  0058C0  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19613  0058C2                     l21614:
 19614                           
 19615                           ; BSR set to: 0
 19616                           ;controlMemory_MC50.c: 425:     if ( var_sys_NVM.programmingDistance>1 )
 19617  0058C2  0E01               	movlw	1
 19618  0058C4  65A6               	cpfsgt	(_var_sys_NVM+14)& (0+255),b	;volatile
 19619  0058C6  D004               	goto	l21618
 19620                           
 19621                           ; BSR set to: 0
 19622                           ;controlMemory_MC50.c: 426:     {;controlMemory_MC50.c: 428:         var_sys_NVM.program
      +                          mingDistance = 0;
 19623  0058C8  0E00               	movlw	0
 19624  0058CA  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19625                           
 19626                           ;controlMemory_MC50.c: 429:         saveParam=1;
 19627  0058CC  0E01               	movlw	1
 19628  0058CE  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19629  0058D0                     l21618:
 19630                           
 19631                           ; BSR set to: 0
 19632                           ;controlMemory_MC50.c: 432:     if ( var_sys_NVM.decelarationSensivity>9 )
 19633  0058D0  0E09               	movlw	9
 19634  0058D2  65A7               	cpfsgt	(_var_sys_NVM+15)& (0+255),b	;volatile
 19635  0058D4  D004               	goto	l21622
 19636                           
 19637                           ; BSR set to: 0
 19638                           ;controlMemory_MC50.c: 433:     {;controlMemory_MC50.c: 435:         var_sys_NVM.decelar
      +                          ationSensivity = 0;
 19639  0058D6  0E00               	movlw	0
 19640  0058D8  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19641                           
 19642                           ;controlMemory_MC50.c: 436:         saveParam=1;
 19643  0058DA  0E01               	movlw	1
 19644  0058DC  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19645  0058DE                     l21622:
 19646                           
 19647                           ; BSR set to: 0
 19648                           ;controlMemory_MC50.c: 441:     if ( var_sys_NVM.homemPresente>2 )
 19649  0058DE  0E02               	movlw	2
 19650  0058E0  65A8               	cpfsgt	(_var_sys_NVM+16)& (0+255),b	;volatile
 19651  0058E2  D004               	goto	l21626
 19652                           
 19653                           ; BSR set to: 0
 19654                           ;controlMemory_MC50.c: 442:     {;controlMemory_MC50.c: 444:         var_sys_NVM.homemPr
      +                          esente = 0;
 19655  0058E4  0E00               	movlw	0
 19656  0058E6  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19657                           
 19658                           ;controlMemory_MC50.c: 445:         saveParam=1;
 19659  0058E8  0E01               	movlw	1
 19660  0058EA  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19661  0058EC                     l21626:
 19662                           
 19663                           ; BSR set to: 0
 19664                           ;controlMemory_MC50.c: 448:     if ( var_sys_NVM.logicDigital>1 )
 19665  0058EC  0E01               	movlw	1
 19666  0058EE  65A9               	cpfsgt	(_var_sys_NVM+17)& (0+255),b	;volatile
 19667  0058F0  D004               	goto	l21630
 19668                           
 19669                           ; BSR set to: 0
 19670                           ;controlMemory_MC50.c: 449:     {;controlMemory_MC50.c: 451:         var_sys_NVM.logicDi
      +                          gital = 0;
 19671  0058F2  0E00               	movlw	0
 19672  0058F4  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19673                           
 19674                           ;controlMemory_MC50.c: 452:         saveParam=1;
 19675  0058F6  0E01               	movlw	1
 19676  0058F8  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19677  0058FA                     l21630:
 19678                           
 19679                           ; BSR set to: 0
 19680                           ;controlMemory_MC50.c: 455:     if ( var_sys_NVM.softStart>9 )
 19681  0058FA  0E09               	movlw	9
 19682  0058FC  65AA               	cpfsgt	(_var_sys_NVM+18)& (0+255),b	;volatile
 19683  0058FE  D004               	goto	l21634
 19684                           
 19685                           ; BSR set to: 0
 19686                           ;controlMemory_MC50.c: 456:     {;controlMemory_MC50.c: 458:         var_sys_NVM.softSta
      +                          rt = 0;
 19687  005900  0E00               	movlw	0
 19688  005902  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 19689                           
 19690                           ;controlMemory_MC50.c: 459:         saveParam=1;
 19691  005904  0E01               	movlw	1
 19692  005906  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19693  005908                     l21634:
 19694                           
 19695                           ; BSR set to: 0
 19696                           ;controlMemory_MC50.c: 463:     if ( var_sys_NVM.ligthTime>99 )
 19697  005908  0E63               	movlw	99
 19698  00590A  65AC               	cpfsgt	(_var_sys_NVM+20)& (0+255),b	;volatile
 19699  00590C  D004               	goto	l21638
 19700                           
 19701                           ; BSR set to: 0
 19702                           ;controlMemory_MC50.c: 464:     {;controlMemory_MC50.c: 466:         var_sys_NVM.ligthTi
      +                          me = 3;
 19703  00590E  0E03               	movlw	3
 19704  005910  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19705                           
 19706                           ;controlMemory_MC50.c: 467:         saveParam=1;
 19707  005912  0E01               	movlw	1
 19708  005914  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19709  005916                     l21638:
 19710                           
 19711                           ; BSR set to: 0
 19712                           ;controlMemory_MC50.c: 470:     if ( var_sys_NVM.folow_me>9 )
 19713  005916  0E09               	movlw	9
 19714  005918  65AD               	cpfsgt	(_var_sys_NVM+21)& (0+255),b	;volatile
 19715  00591A  D004               	goto	l21642
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;controlMemory_MC50.c: 471:     {;controlMemory_MC50.c: 473:         var_sys_NVM.folow_m
      +                          e = 0;
 19719  00591C  0E00               	movlw	0
 19720  00591E  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19721                           
 19722                           ;controlMemory_MC50.c: 474:         saveParam=1;
 19723  005920  0E01               	movlw	1
 19724  005922  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19725  005924                     l21642:
 19726                           
 19727                           ; BSR set to: 0
 19728                           ;controlMemory_MC50.c: 479:     if ( var_sys_NVM.electricBrake>1 )
 19729  005924  0E01               	movlw	1
 19730  005926  65AF               	cpfsgt	(_var_sys_NVM+23)& (0+255),b	;volatile
 19731  005928  D004               	goto	l1512
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;controlMemory_MC50.c: 480:     {;controlMemory_MC50.c: 482:         var_sys_NVM.electri
      +                          cBrake = 0;
 19735  00592A  0E00               	movlw	0
 19736  00592C  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19737                           
 19738                           ;controlMemory_MC50.c: 483:         saveParam=1;
 19739  00592E  0E01               	movlw	1
 19740  005930  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19741  005932                     l1512:
 19742                           
 19743                           ; BSR set to: 0
 19744                           ;controlMemory_MC50.c: 486:     if ( (var_sys_NVM.velocityDecelaration<1) || (var_sys_NV
      +                          M.velocityDecelaration>9) )
 19745  005932  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 19746  005934  B4D8               	btfsc	status,2,c
 19747  005936  D003               	goto	u25010
 19748                           
 19749                           ; BSR set to: 0
 19750  005938  0E09               	movlw	9
 19751  00593A  65B0               	cpfsgt	(_var_sys_NVM+24)& (0+255),b	;volatile
 19752  00593C  D004               	goto	l21650
 19753  00593E                     u25010:
 19754                           
 19755                           ; BSR set to: 0
 19756                           ;controlMemory_MC50.c: 487:     {;controlMemory_MC50.c: 489:         var_sys_NVM.velocit
      +                          yDecelaration = 5;
 19757  00593E  0E05               	movlw	5
 19758  005940  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19759                           
 19760                           ;controlMemory_MC50.c: 490:         saveParam=1;
 19761  005942  0E01               	movlw	1
 19762  005944  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19763  005946                     l21650:
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;controlMemory_MC50.c: 493:     if ( var_sys_NVM.flashRGBMode>3 )
 19767  005946  0E03               	movlw	3
 19768  005948  65B1               	cpfsgt	(_var_sys_NVM+25)& (0+255),b	;volatile
 19769  00594A  D004               	goto	l21654
 19770                           
 19771                           ; BSR set to: 0
 19772                           ;controlMemory_MC50.c: 494:     {;controlMemory_MC50.c: 496:         var_sys_NVM.flashRG
      +                          BMode = 3;
 19773  00594C  0E03               	movlw	3
 19774  00594E  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19775                           
 19776                           ;controlMemory_MC50.c: 497:         saveParam=1;
 19777  005950  0E01               	movlw	1
 19778  005952  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19779  005954                     l21654:
 19780                           
 19781                           ; BSR set to: 0
 19782                           ;controlMemory_MC50.c: 499:         if ( var_sys_NVM.Stopboton > 1 )
 19783  005954  0E01               	movlw	1
 19784  005956  65AE               	cpfsgt	(_var_sys_NVM+22)& (0+255),b	;volatile
 19785  005958  D004               	goto	l21658
 19786                           
 19787                           ; BSR set to: 0
 19788                           ;controlMemory_MC50.c: 500:     {;controlMemory_MC50.c: 502:         var_sys_NVM.Stopbot
      +                          on = 0 ;
 19789  00595A  0E00               	movlw	0
 19790  00595C  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19791                           
 19792                           ;controlMemory_MC50.c: 503:         saveParam=1;
 19793  00595E  0E01               	movlw	1
 19794  005960  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19795  005962                     l21658:
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;controlMemory_MC50.c: 505:         if ( var_sys_NVM.Direction_motor>1 )
 19799  005962  0E01               	movlw	1
 19800  005964  65B3               	cpfsgt	(_var_sys_NVM+27)& (0+255),b	;volatile
 19801  005966  D004               	goto	l21662
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;controlMemory_MC50.c: 506:     {;controlMemory_MC50.c: 508:         var_sys_NVM.Directi
      +                          on_motor = 1;
 19805  005968  0E01               	movlw	1
 19806  00596A  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19807                           
 19808                           ;controlMemory_MC50.c: 509:         saveParam=1;
 19809  00596C  0E01               	movlw	1
 19810  00596E  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19811  005970                     l21662:
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;controlMemory_MC50.c: 511:         if ( var_sys_NVM.softstop>9 )
 19815  005970  0E09               	movlw	9
 19816  005972  65AB               	cpfsgt	(_var_sys_NVM+19)& (0+255),b	;volatile
 19817  005974  D004               	goto	l1519
 19818                           
 19819                           ; BSR set to: 0
 19820                           ;controlMemory_MC50.c: 512:     {;controlMemory_MC50.c: 514:         var_sys_NVM.softsto
      +                          p = 0;
 19821  005976  0E00               	movlw	0
 19822  005978  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19823                           
 19824                           ;controlMemory_MC50.c: 515:         saveParam=1;
 19825  00597A  0E01               	movlw	1
 19826  00597C  6E3A               	movwf	checkNVM_VarSystem@saveParam^0,c
 19827  00597E                     l1519:
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;controlMemory_MC50.c: 540:     if ( saveParam != 0 )
 19831  00597E  503A               	movf	checkNVM_VarSystem@saveParam^0,w,c
 19832  005980  B4D8               	btfsc	status,2,c
 19833  005982  0012               	return	
 19834                           
 19835                           ; BSR set to: 0
 19836                           ;controlMemory_MC50.c: 541:     {;controlMemory_MC50.c: 542:         SaveNVM_VarSystem(p
      +                          ageMemoryP);
 19837  005984  0E00               	movlw	0
 19838  005986  EC16  F047         	call	_SaveNVM_VarSystem
 19839                           
 19840                           ;controlMemory_MC50.c: 543:         SaveNVM_VarSystem(pageMemoryE);
 19841  00598A  0E01               	movlw	1
 19842  00598C  EC16  F047         	call	_SaveNVM_VarSystem
 19843  005990  0012               	return		;funcret
 19844  005992                     __end_of_checkNVM_VarSystem:
 19845                           	callstack 0
 19846                           
 19847 ;; *************** function _ResetDefaultMemory *****************
 19848 ;; Defined at:
 19849 ;;		line 186 in file "controlMemory_MC50.c"
 19850 ;; Parameters:    Size  Location     Type
 19851 ;;  type            1    wreg     unsigned char 
 19852 ;; Auto vars:     Size  Location     Type
 19853 ;;  type            1   57[COMRAM] unsigned char 
 19854 ;; Return value:  Size  Location     Type
 19855 ;;                  1    wreg      void 
 19856 ;; Registers used:
 19857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19858 ;; Tracked objects:
 19859 ;;		On entry : 31/0
 19860 ;;		On exit  : 0/0
 19861 ;;		Unchanged: 0/0
 19862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19867 ;;Total ram usage:        1 bytes
 19868 ;; Hardware stack levels used: 1
 19869 ;; Hardware stack levels required when called: 14
 19870 ;; This function calls:
 19871 ;;		_SaveNVM_VarSystem
 19872 ;; This function is called by:
 19873 ;;		_loadNVM_VarSystem
 19874 ;;		_sm_execute_menuConfiguration
 19875 ;; This function uses a non-reentrant model
 19876 ;;
 19877                           
 19878                           	psect	text71
 19879  005FF8                     __ptext71:
 19880                           	callstack 0
 19881  005FF8                     _ResetDefaultMemory:
 19882                           	callstack 14
 19883                           
 19884                           ;incstack = 0
 19885                           ;ResetDefaultMemory@type stored from wreg
 19886  005FF8  6E3A               	movwf	ResetDefaultMemory@type^0,c
 19887                           
 19888                           ;controlMemory_MC50.c: 186: void ResetDefaultMemory(unsigned char type);controlMemory_MC
      +                          50.c: 187: {;controlMemory_MC50.c: 190:     var_sys_NVM.decelarationOpen = 3;
 19889  005FFA  0E03               	movlw	3
 19890  005FFC  0100               	movlb	0	; () banked
 19891  005FFE  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 19892                           
 19893                           ;controlMemory_MC50.c: 191:     var_sys_NVM.motorPower = 9;
 19894  006000  0E09               	movlw	9
 19895  006002  6F9A               	movwf	(_var_sys_NVM+2)& (0+255),b	;volatile
 19896                           
 19897                           ;controlMemory_MC50.c: 192:     var_sys_NVM.decelarationClose = 3;
 19898  006004  0E03               	movlw	3
 19899  006006  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 19900                           
 19901                           ;controlMemory_MC50.c: 193:     var_sys_NVM.photoCellIsON = 0;
 19902  006008  0E00               	movlw	0
 19903  00600A  6F9F               	movwf	(_var_sys_NVM+7)& (0+255),b	;volatile
 19904                           
 19905                           ;controlMemory_MC50.c: 194:     var_sys_NVM.photoCellInOpen = 0;
 19906  00600C  0E00               	movlw	0
 19907  00600E  6FA0               	movwf	(_var_sys_NVM+8)& (0+255),b	;volatile
 19908                           
 19909                           ;controlMemory_MC50.c: 195:     var_sys_NVM.securityBandIsON = 0 ;
 19910  006010  0E00               	movlw	0
 19911  006012  6FA1               	movwf	(_var_sys_NVM+9)& (0+255),b	;volatile
 19912                           
 19913                           ;controlMemory_MC50.c: 196:     var_sys_NVM.securityBandType = 1;
 19914  006014  0E01               	movlw	1
 19915  006016  6FA2               	movwf	(_var_sys_NVM+10)& (0+255),b	;volatile
 19916                           
 19917                           ;controlMemory_MC50.c: 197:     var_sys_NVM.securityBandInOpen = 0;
 19918  006018  0E00               	movlw	0
 19919  00601A  6FA3               	movwf	(_var_sys_NVM+11)& (0+255),b	;volatile
 19920                           
 19921                           ;controlMemory_MC50.c: 198:     var_sys_NVM.flashLightMode = 0;
 19922  00601C  0E00               	movlw	0
 19923  00601E  6FA5               	movwf	(_var_sys_NVM+13)& (0+255),b	;volatile
 19924                           
 19925                           ;controlMemory_MC50.c: 199:     var_sys_NVM.programmingDistance = 0;
 19926  006020  0E00               	movlw	0
 19927  006022  6FA6               	movwf	(_var_sys_NVM+14)& (0+255),b	;volatile
 19928                           
 19929                           ;controlMemory_MC50.c: 200:     var_sys_NVM.decelarationSensivity = 0;
 19930  006024  0E00               	movlw	0
 19931  006026  6FA7               	movwf	(_var_sys_NVM+15)& (0+255),b	;volatile
 19932                           
 19933                           ;controlMemory_MC50.c: 201:     var_sys_NVM.homemPresente = 0;
 19934  006028  0E00               	movlw	0
 19935  00602A  6FA8               	movwf	(_var_sys_NVM+16)& (0+255),b	;volatile
 19936                           
 19937                           ;controlMemory_MC50.c: 202:     var_sys_NVM.autoTimeWalkClose = 0;
 19938  00602C  0E00               	movlw	0
 19939  00602E  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19940                           
 19941                           ;controlMemory_MC50.c: 203:     var_sys_NVM.ligthTime = 3;
 19942  006030  0E03               	movlw	3
 19943  006032  6FAC               	movwf	(_var_sys_NVM+20)& (0+255),b	;volatile
 19944                           
 19945                           ;controlMemory_MC50.c: 204:     var_sys_NVM.folow_me = 0;
 19946  006034  0E00               	movlw	0
 19947  006036  6FAD               	movwf	(_var_sys_NVM+21)& (0+255),b	;volatile
 19948                           
 19949                           ;controlMemory_MC50.c: 205:     var_sys_NVM.electricBrake = 0;
 19950  006038  0E00               	movlw	0
 19951  00603A  6FAF               	movwf	(_var_sys_NVM+23)& (0+255),b	;volatile
 19952                           
 19953                           ;controlMemory_MC50.c: 206:     var_sys_NVM.autoTimeWalkClose = 0;
 19954  00603C  0E00               	movlw	0
 19955  00603E  6F9E               	movwf	(_var_sys_NVM+6)& (0+255),b	;volatile
 19956                           
 19957                           ;controlMemory_MC50.c: 207:     var_sys_NVM.Direction_motor = 1 ;
 19958  006040  0E01               	movlw	1
 19959  006042  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 19960                           
 19961                           ; BSR set to: 0
 19962                           ;controlMemory_MC50.c: 210:     if (type == SC){
 19963  006044  503A               	movf	ResetDefaultMemory@type^0,w,c
 19964  006046  A4D8               	btfss	status,2,c
 19965  006048  D014               	goto	l20364
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;controlMemory_MC50.c: 212:         var_sys_NVM.motorSensitivity = 0;
 19969  00604A  0E00               	movlw	0
 19970  00604C  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 19971                           
 19972                           ;controlMemory_MC50.c: 213:         var_sys_NVM.logicDigital = 0;
 19973  00604E  0E00               	movlw	0
 19974  006050  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 19975                           
 19976                           ;controlMemory_MC50.c: 214:         var_sys_NVM.Stopboton = 0;
 19977  006052  0E00               	movlw	0
 19978  006054  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 19979                           
 19980                           ;controlMemory_MC50.c: 215:         var_sys_NVM.autoTimeFullClose = 0;
 19981  006056  0E00               	movlw	0
 19982  006058  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 19983                           
 19984                           ;controlMemory_MC50.c: 216:         var_sys_NVM.operationMode = 0;
 19985  00605A  0E00               	movlw	0
 19986  00605C  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 19987                           
 19988                           ;controlMemory_MC50.c: 217:         var_sys_NVM.velocityDecelaration = 5;
 19989  00605E  0E05               	movlw	5
 19990  006060  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 19991                           
 19992                           ;controlMemory_MC50.c: 218:         var_sys_NVM.flashRGBMode = 3;
 19993  006062  0E03               	movlw	3
 19994  006064  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 19995                           
 19996                           ;controlMemory_MC50.c: 219:         var_sys_NVM.softstop = 0;
 19997  006066  0E00               	movlw	0
 19998  006068  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 19999                           
 20000                           ;controlMemory_MC50.c: 220:         var_sys_NVM.softStart = 0;
 20001  00606A  0E00               	movlw	0
 20002  00606C  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20003                           
 20004                           ;controlMemory_MC50.c: 221:         var_sys_NVM.walkTime = 10;
 20005  00606E  0E0A               	movlw	10
 20006  006070  D039               	goto	L82
 20007  006072                     l20364:
 20008                           
 20009                           ; BSR set to: 0
 20010  006072  043A               	decf	ResetDefaultMemory@type^0,w,c
 20011  006074  A4D8               	btfss	status,2,c
 20012  006076  D01B               	goto	l20368
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;controlMemory_MC50.c: 225:         var_sys_NVM.decelarationClose = 4;
 20016  006078  0E04               	movlw	4
 20017  00607A  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20018                           
 20019                           ;controlMemory_MC50.c: 226:         var_sys_NVM.decelarationOpen = 4;
 20020  00607C  0E04               	movlw	4
 20021  00607E  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20022                           
 20023                           ;controlMemory_MC50.c: 227:         var_sys_NVM.motorSensitivity = 4;
 20024  006080  0E04               	movlw	4
 20025  006082  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20026                           
 20027                           ;controlMemory_MC50.c: 228:         var_sys_NVM.logicDigital = 1;
 20028  006084  0E01               	movlw	1
 20029  006086  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20030                           
 20031                           ;controlMemory_MC50.c: 229:         var_sys_NVM.Stopboton = 1;
 20032  006088  0E01               	movlw	1
 20033  00608A  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20034                           
 20035                           ;controlMemory_MC50.c: 230:         var_sys_NVM.autoTimeFullClose = 0;
 20036  00608C  0E00               	movlw	0
 20037  00608E  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20038                           
 20039                           ;controlMemory_MC50.c: 231:         var_sys_NVM.operationMode = 0;
 20040  006090  0E00               	movlw	0
 20041  006092  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20042                           
 20043                           ;controlMemory_MC50.c: 232:         var_sys_NVM.velocityDecelaration = 5;
 20044  006094  0E05               	movlw	5
 20045  006096  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20046                           
 20047                           ;controlMemory_MC50.c: 233:         var_sys_NVM.flashRGBMode = 3;
 20048  006098  0E03               	movlw	3
 20049  00609A  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20050                           
 20051                           ;controlMemory_MC50.c: 234:         var_sys_NVM.softstop = 0;
 20052  00609C  0E00               	movlw	0
 20053  00609E  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20054                           
 20055                           ;controlMemory_MC50.c: 235:         var_sys_NVM.softStart = 5;
 20056  0060A0  0E05               	movlw	5
 20057  0060A2  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20058                           
 20059                           ;controlMemory_MC50.c: 236:         var_sys_NVM.walkTime = 0;
 20060  0060A4  0E00               	movlw	0
 20061  0060A6  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20062                           
 20063                           ;controlMemory_MC50.c: 237:         var_sys_NVM.Direction_motor = 0 ;
 20064  0060A8  0E00               	movlw	0
 20065  0060AA  6FB3               	movwf	(_var_sys_NVM+27)& (0+255),b	;volatile
 20066                           
 20067                           ;controlMemory_MC50.c: 239:     }
 20068  0060AC  D01C               	goto	l20372
 20069  0060AE                     l20368:
 20070                           
 20071                           ; BSR set to: 0
 20072  0060AE  0E02               	movlw	2
 20073  0060B0  183A               	xorwf	ResetDefaultMemory@type^0,w,c
 20074  0060B2  A4D8               	btfss	status,2,c
 20075  0060B4  D018               	goto	l20372
 20076                           
 20077                           ; BSR set to: 0
 20078                           ;controlMemory_MC50.c: 241:         var_sys_NVM.decelarationClose = 6;
 20079  0060B6  0E06               	movlw	6
 20080  0060B8  6F99               	movwf	(_var_sys_NVM+1)& (0+255),b	;volatile
 20081                           
 20082                           ;controlMemory_MC50.c: 242:         var_sys_NVM.decelarationOpen = 2;
 20083  0060BA  0E02               	movlw	2
 20084  0060BC  6F98               	movwf	_var_sys_NVM& (0+255),b	;volatile
 20085                           
 20086                           ;controlMemory_MC50.c: 243:         var_sys_NVM.motorSensitivity = 0;
 20087  0060BE  0E00               	movlw	0
 20088  0060C0  6F9B               	movwf	(_var_sys_NVM+3)& (0+255),b	;volatile
 20089                           
 20090                           ;controlMemory_MC50.c: 244:         var_sys_NVM.logicDigital = 0;
 20091  0060C2  0E00               	movlw	0
 20092  0060C4  6FA9               	movwf	(_var_sys_NVM+17)& (0+255),b	;volatile
 20093                           
 20094                           ;controlMemory_MC50.c: 245:         var_sys_NVM.Stopboton = 0;
 20095  0060C6  0E00               	movlw	0
 20096  0060C8  6FAE               	movwf	(_var_sys_NVM+22)& (0+255),b	;volatile
 20097                           
 20098                           ;controlMemory_MC50.c: 246:         var_sys_NVM.autoTimeFullClose = 0;
 20099  0060CA  0E00               	movlw	0
 20100  0060CC  6F9D               	movwf	(_var_sys_NVM+5)& (0+255),b	;volatile
 20101                           
 20102                           ;controlMemory_MC50.c: 247:         var_sys_NVM.operationMode = 2;
 20103  0060CE  0E02               	movlw	2
 20104  0060D0  6FA4               	movwf	(_var_sys_NVM+12)& (0+255),b	;volatile
 20105                           
 20106                           ;controlMemory_MC50.c: 248:         var_sys_NVM.velocityDecelaration = 5;
 20107  0060D2  0E05               	movlw	5
 20108  0060D4  6FB0               	movwf	(_var_sys_NVM+24)& (0+255),b	;volatile
 20109                           
 20110                           ;controlMemory_MC50.c: 249:         var_sys_NVM.flashRGBMode = 1;
 20111  0060D6  0E01               	movlw	1
 20112  0060D8  6FB1               	movwf	(_var_sys_NVM+25)& (0+255),b	;volatile
 20113                           
 20114                           ;controlMemory_MC50.c: 250:         var_sys_NVM.softstop = 5;
 20115  0060DA  0E05               	movlw	5
 20116  0060DC  6FAB               	movwf	(_var_sys_NVM+19)& (0+255),b	;volatile
 20117                           
 20118                           ;controlMemory_MC50.c: 251:         var_sys_NVM.softStart = 0;
 20119  0060DE  0E00               	movlw	0
 20120  0060E0  6FAA               	movwf	(_var_sys_NVM+18)& (0+255),b	;volatile
 20121                           
 20122                           ;controlMemory_MC50.c: 252:         var_sys_NVM.walkTime = 0;
 20123  0060E2  0E00               	movlw	0
 20124  0060E4                     L82:
 20125  0060E4  6F9C               	movwf	(_var_sys_NVM+4)& (0+255),b	;volatile
 20126  0060E6                     l20372:
 20127                           
 20128                           ; BSR set to: 0
 20129                           ;controlMemory_MC50.c: 260:     SaveNVM_VarSystem(pageMemoryE);
 20130  0060E6  0E01               	movlw	1
 20131  0060E8  EC16  F047         	call	_SaveNVM_VarSystem
 20132                           
 20133                           ;controlMemory_MC50.c: 261:     SaveNVM_VarSystem(pageMemoryP);
 20134  0060EC  0E00               	movlw	0
 20135  0060EE  EC16  F047         	call	_SaveNVM_VarSystem
 20136                           
 20137                           ;controlMemory_MC50.c: 266:     var_sys_NVM.learningTimeToClose = 0;
 20138  0060F2  0E00               	movlw	0
 20139  0060F4  0100               	movlb	0	; () banked
 20140  0060F6  6FD0               	movwf	(_var_sys_NVM+56)& (0+255),b	;volatile
 20141  0060F8  0E00               	movlw	0
 20142  0060FA  6FD1               	movwf	(_var_sys_NVM+57)& (0+255),b	;volatile
 20143  0060FC  0E00               	movlw	0
 20144  0060FE  6FD2               	movwf	(_var_sys_NVM+58)& (0+255),b	;volatile
 20145  006100  0E00               	movlw	0
 20146  006102  6FD3               	movwf	(_var_sys_NVM+59)& (0+255),b	;volatile
 20147                           
 20148                           ;controlMemory_MC50.c: 267:     var_sys_NVM.learningTimeToOpen = 0;
 20149  006104  0E00               	movlw	0
 20150  006106  6FCC               	movwf	(_var_sys_NVM+52)& (0+255),b	;volatile
 20151  006108  0E00               	movlw	0
 20152  00610A  6FCD               	movwf	(_var_sys_NVM+53)& (0+255),b	;volatile
 20153  00610C  0E00               	movlw	0
 20154  00610E  6FCE               	movwf	(_var_sys_NVM+54)& (0+255),b	;volatile
 20155  006110  0E00               	movlw	0
 20156  006112  6FCF               	movwf	(_var_sys_NVM+55)& (0+255),b	;volatile
 20157                           
 20158                           ;controlMemory_MC50.c: 268:     var_sys_NVM.learningCurrentNormalClose = 0;
 20159  006114  0E00               	movlw	0
 20160  006116  6FC9               	movwf	(_var_sys_NVM+49)& (0+255),b	;volatile
 20161  006118  0E00               	movlw	0
 20162  00611A  6FC8               	movwf	(_var_sys_NVM+48)& (0+255),b	;volatile
 20163                           
 20164                           ;controlMemory_MC50.c: 269:     var_sys_NVM.learningCurrentNormalOpen = 0;
 20165  00611C  0E00               	movlw	0
 20166  00611E  6FCB               	movwf	(_var_sys_NVM+51)& (0+255),b	;volatile
 20167  006120  0E00               	movlw	0
 20168  006122  6FCA               	movwf	(_var_sys_NVM+50)& (0+255),b	;volatile
 20169                           
 20170                           ;controlMemory_MC50.c: 270:     var_sys_NVM.learningCurrentDecelarationClose = 0;
 20171  006124  0E00               	movlw	0
 20172  006126  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 20173  006128  0E00               	movlw	0
 20174  00612A  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 20175  00612C  0E00               	movlw	0
 20176  00612E  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 20177  006130  0E00               	movlw	0
 20178  006132  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 20179                           
 20180                           ;controlMemory_MC50.c: 271:     var_sys_NVM.learningCurrentDecelarationOpen = 0;
 20181  006134  0E00               	movlw	0
 20182  006136  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 20183  006138  0E00               	movlw	0
 20184  00613A  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 20185  00613C  0E00               	movlw	0
 20186  00613E  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 20187  006140  0E00               	movlw	0
 20188  006142  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;controlMemory_MC50.c: 277:     if ((PORTAbits.RA2 == 0) && (PORTAbits.RA1 == 0) && (POR
      +                          TBbits.RB0 == 0)&&(PORTAbits.RA5==0)){
 20192  006144  A48D               	btfss	141,2,c	;volatile
 20193                           
 20194                           ; BSR set to: 0
 20195  006146  B28D               	btfsc	141,1,c	;volatile
 20196  006148  D015               	goto	l20386
 20197                           
 20198                           ; BSR set to: 0
 20199  00614A  A08E               	btfss	142,0,c	;volatile
 20200                           
 20201                           ; BSR set to: 0
 20202  00614C  BA8D               	btfsc	141,5,c	;volatile
 20203  00614E  D012               	goto	l20386
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;controlMemory_MC50.c: 278:      var_sys.actualCounterMoves = 0;
 20207  006150  0E00               	movlw	0
 20208  006152  0101               	movlb	1	; () banked
 20209  006154  6F3C               	movwf	(_var_sys+60)& (0+255),b	;volatile
 20210  006156  0E00               	movlw	0
 20211  006158  6F3D               	movwf	(_var_sys+61)& (0+255),b	;volatile
 20212  00615A  0E00               	movlw	0
 20213  00615C  6F3E               	movwf	(_var_sys+62)& (0+255),b	;volatile
 20214  00615E  0E00               	movlw	0
 20215  006160  6F3F               	movwf	(_var_sys+63)& (0+255),b	;volatile
 20216                           
 20217                           ;controlMemory_MC50.c: 279:      var_sys_NVM.counterMoves = 0;
 20218  006162  0E00               	movlw	0
 20219  006164  0100               	movlb	0	; () banked
 20220  006166  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 20221  006168  0E00               	movlw	0
 20222  00616A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 20223  00616C  0E00               	movlw	0
 20224  00616E  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 20225  006170  0E00               	movlw	0
 20226  006172  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 20227  006174                     l20386:
 20228                           
 20229                           ; BSR set to: 0
 20230                           ;controlMemory_MC50.c: 284:     SaveNVM_VarSystem(pageMemoryCounters);
 20231  006174  0E02               	movlw	2
 20232  006176  EC16  F047         	call	_SaveNVM_VarSystem
 20233                           
 20234                           ;controlMemory_MC50.c: 285:     SaveNVM_VarSystem(pageMemoryLearningVars);
 20235  00617A  0E03               	movlw	3
 20236  00617C  EC16  F047         	call	_SaveNVM_VarSystem
 20237  006180  0012               	return		;funcret
 20238  006182                     __end_of_ResetDefaultMemory:
 20239                           	callstack 0
 20240                           
 20241 ;; *************** function _I2C1_Read1ByteRegister *****************
 20242 ;; Defined at:
 20243 ;;		line 65 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20244 ;; Parameters:    Size  Location     Type
 20245 ;;  address         1    wreg     unsigned char 
 20246 ;;  reg             1   33[COMRAM] unsigned char 
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;  address         1   34[COMRAM] unsigned char 
 20249 ;;  returnValue     1   35[COMRAM] unsigned char 
 20250 ;; Return value:  Size  Location     Type
 20251 ;;                  1    wreg      unsigned char 
 20252 ;; Registers used:
 20253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20254 ;; Tracked objects:
 20255 ;;		On entry : 31/0
 20256 ;;		On exit  : 33/2
 20257 ;;		Unchanged: 0/0
 20258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20259 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20262 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20263 ;;Total ram usage:        3 bytes
 20264 ;; Hardware stack levels used: 1
 20265 ;; Hardware stack levels required when called: 12
 20266 ;; This function calls:
 20267 ;;		_I2C1_Close
 20268 ;;		_I2C1_MasterWrite
 20269 ;;		_I2C1_Open
 20270 ;;		_I2C1_SetAddressNackCallback
 20271 ;;		_I2C1_SetBuffer
 20272 ;;		_I2C1_SetDataCompleteCallback
 20273 ;; This function is called by:
 20274 ;;		_loadNVM_VarSystem
 20275 ;; This function uses a non-reentrant model
 20276 ;;
 20277                           
 20278                           	psect	text72
 20279  0086D4                     __ptext72:
 20280                           	callstack 0
 20281  0086D4                     _I2C1_Read1ByteRegister:
 20282                           	callstack 17
 20283                           
 20284                           ;incstack = 0
 20285                           ;I2C1_Read1ByteRegister@address stored from wreg
 20286  0086D4  6E23               	movwf	I2C1_Read1ByteRegister@address^0,c
 20287                           
 20288                           ;mcc_generated_files/examples/i2c1_master_example.c: 65: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           66: {;mcc_generated_files/examples/i2c1_master_example.c: 67:     uint8_t returnValue =
      +                           0x00;
 20289  0086D6  0E00               	movlw	0
 20290  0086D8  6E24               	movwf	I2C1_Read1ByteRegister@returnValue^0,c
 20291  0086DA                     l21540:
 20292  0086DA  5023               	movf	I2C1_Read1ByteRegister@address^0,w,c
 20293  0086DC  ECC9  F03E         	call	_I2C1_Open
 20294  0086E0  0900               	iorlw	0
 20295  0086E2  B4D8               	btfsc	status,2,c
 20296  0086E4  D7FA               	goto	l21540
 20297                           
 20298                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 20299  0086E6  0E8E               	movlw	low _rd1RegCompleteHandler@i2c1_master_example$F500
 20300  0086E8  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 20301  0086EA  0E90               	movlw	high _rd1RegCompleteHandler@i2c1_master_example$F500
 20302  0086EC  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 20303  0086EE  0E24               	movlw	low I2C1_Read1ByteRegister@returnValue
 20304  0086F0  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 20305  0086F2  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 20306  0086F4  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 20307                           
 20308                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_SetBuffer(&reg,1);
 20309  0086F8  0E22               	movlw	low I2C1_Read1ByteRegister@reg
 20310  0086FA  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 20311  0086FC  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 20312  0086FE  0E00               	movlw	0
 20313  008700  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 20314  008702  0E01               	movlw	1
 20315  008704  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 20316  008706  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 20317                           
 20318                           ; BSR set to: 2
 20319                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 20320  00870A  0E00               	movlw	0
 20321  00870C  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 20322  00870E  0E00               	movlw	0
 20323  008710  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 20324  008712  0E00               	movlw	0
 20325  008714  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 20326  008716  0E00               	movlw	0
 20327  008718  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 20328  00871A  EC5B  F04A         	call	_I2C1_SetAddressNackCallback	;wreg free
 20329                           
 20330                           ;mcc_generated_files/examples/i2c1_master_example.c: 73:     I2C1_MasterWrite();
 20331  00871E  EC29  F04B         	call	_I2C1_MasterWrite	;wreg free
 20332  008722                     l21550:
 20333  008722  EC9C  F049         	call	_I2C1_Close	;wreg free
 20334  008726  06E8               	decf	wreg,f,c
 20335  008728  B4D8               	btfsc	status,2,c
 20336  00872A  D7FB               	goto	l21550
 20337                           
 20338                           ;mcc_generated_files/examples/i2c1_master_example.c: 76:     return returnValue;
 20339  00872C  5024               	movf	I2C1_Read1ByteRegister@returnValue^0,w,c
 20340  00872E  0012               	return		;funcret
 20341  008730                     __end_of_I2C1_Read1ByteRegister:
 20342                           	callstack 0
 20343                           
 20344 ;; *************** function _getKeyPressed *****************
 20345 ;; Defined at:
 20346 ;;		line 217 in file "inputs_MC50.c"
 20347 ;; Parameters:    Size  Location     Type
 20348 ;;		None
 20349 ;; Auto vars:     Size  Location     Type
 20350 ;;  temp            1   15[COMRAM] char 
 20351 ;; Return value:  Size  Location     Type
 20352 ;;                  1    wreg      char 
 20353 ;; Registers used:
 20354 ;;		wreg, status,2, status,0
 20355 ;; Tracked objects:
 20356 ;;		On entry : 3E/1
 20357 ;;		On exit  : 3D/0
 20358 ;;		Unchanged: 0/0
 20359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20364 ;;Total ram usage:        1 bytes
 20365 ;; Hardware stack levels used: 1
 20366 ;; Hardware stack levels required when called: 4
 20367 ;; This function calls:
 20368 ;;		Nothing
 20369 ;; This function is called by:
 20370 ;;		_main
 20371 ;; This function uses a non-reentrant model
 20372 ;;
 20373                           
 20374                           	psect	text73
 20375  00949E                     __ptext73:
 20376                           	callstack 0
 20377  00949E                     _getKeyPressed:
 20378                           	callstack 26
 20379                           
 20380                           ;inputs_MC50.c: 218:     signed char temp=-1;
 20381                           
 20382                           ;incstack = 0
 20383  00949E  6810               	setf	getKeyPressed@temp^0,c
 20384                           
 20385                           ;inputs_MC50.c: 219:     if(RFFull)
 20386  0094A0  0100               	movlb	0	; () banked
 20387  0094A2  518B               	movf	_RFFull& (0+255),w,b	;volatile
 20388  0094A4  B4D8               	btfsc	status,2,c
 20389  0094A6  D005               	goto	l16770
 20390                           
 20391                           ; BSR set to: 0
 20392                           ;inputs_MC50.c: 220:     {;inputs_MC50.c: 221:         temp=(BufferRF[7]&0xF0)>>4;
 20393  0094A8  0102               	movlb	2	; () banked
 20394  0094AA  39D1               	swapf	(_BufferRF+7)& (0+255),w,b
 20395  0094AC  0B0F               	andlw	15
 20396  0094AE  0B0F               	andlw	15
 20397  0094B0  6E10               	movwf	getKeyPressed@temp^0,c
 20398  0094B2                     l16770:
 20399                           
 20400                           ;inputs_MC50.c: 223:     return temp;
 20401  0094B2  5010               	movf	getKeyPressed@temp^0,w,c
 20402  0094B4  0012               	return		;funcret
 20403  0094B6                     __end_of_getKeyPressed:
 20404                           	callstack 0
 20405                           
 20406 ;; *************** function _eusartparser *****************
 20407 ;; Defined at:
 20408 ;;		line 458 in file "eusartparser.c"
 20409 ;; Parameters:    Size  Location     Type
 20410 ;;  package         1    8[BANK0 ] PTR struct package_t
 20411 ;;		 -> main@package(7), 
 20412 ;; Auto vars:     Size  Location     Type
 20413 ;;  i               1   25[BANK0 ] unsigned char 
 20414 ;;  i               1   26[BANK0 ] unsigned char 
 20415 ;;  i               1   24[BANK0 ] unsigned char 
 20416 ;;  i               1   23[BANK0 ] unsigned char 
 20417 ;;  i               1   21[BANK0 ] unsigned char 
 20418 ;;  i               1   20[BANK0 ] unsigned char 
 20419 ;;  a               7    0        struct package_t
 20420 ;;  serial          4   15[BANK0 ] unsigned long 
 20421 ;;  relcounter      1   22[BANK0 ] unsigned char 
 20422 ;;  pos             1   19[BANK0 ] unsigned char 
 20423 ;; Return value:  Size  Location     Type
 20424 ;;                  1    wreg      void 
 20425 ;; Registers used:
 20426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20427 ;; Tracked objects:
 20428 ;;		On entry : 3F/0
 20429 ;;		On exit  : 0/0
 20430 ;;		Unchanged: 0/0
 20431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20432 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20433 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20434 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20435 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20436 ;;Total ram usage:       19 bytes
 20437 ;; Hardware stack levels used: 1
 20438 ;; Hardware stack levels required when called: 14
 20439 ;; This function calls:
 20440 ;;		_RemoveSerial
 20441 ;;		_SaveNVM_VarSystem
 20442 ;;		_cmdMemoryIsEmpty
 20443 ;;		_confirmpackage
 20444 ;;		_read_eusartparser
 20445 ;;		_saveNewSerial
 20446 ;;		_validateRemoteSerialNumber
 20447 ;;		_write_eusartparser
 20448 ;;		_write_package
 20449 ;; This function is called by:
 20450 ;;		_main
 20451 ;; This function uses a non-reentrant model
 20452 ;;
 20453                           
 20454                           	psect	text74
 20455  002EB0                     __ptext74:
 20456                           	callstack 0
 20457  002EB0                     _eusartparser:
 20458                           	callstack 16
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;eusartparser.c: 459:         struct package_t a;;eusartparser.c: 460:         uint8_t r
      +                          elcounter;;eusartparser.c: 461:         static _Bool save_f=0;;eusartparser.c: 462:     
      +                              static uint16_t buffer=0x0000;;eusartparser.c: 463:         uint32_t serial;;eusartp
      +                          arser.c: 464:         char pos;;eusartparser.c: 466:         switch(package->functioncod
      +                          e){
 20462                           
 20463                           ;incstack = 0
 20464  002EB0  D21E               	goto	l23408
 20465  002EB2                     l23206:
 20466                           
 20467                           ; BSR set to: 0
 20468                           ;eusartparser.c: 468:                 if(programmer_enable)
 20469  002EB2  5185               	movf	_programmer_enable& (0+255),w,b
 20470  002EB4  B4D8               	btfsc	status,2,c
 20471  002EB6  D004               	goto	l23210
 20472                           
 20473                           ; BSR set to: 0
 20474                           ;eusartparser.c: 469:                     read_eusartparser(package);
 20475  002EB8  C0E0  F018         	movff	eusartparser@package,read_eusartparser@package
 20476  002EBC  ECD4  F014         	call	_read_eusartparser	;wreg free
 20477  002EC0                     l23210:
 20478                           
 20479                           ;eusartparser.c: 470:                 confirmpackage(package, 1);
 20480  002EC0  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 20481  002EC4  0E01               	movlw	1
 20482  002EC6  6E12               	movwf	confirmpackage@confirm^0,c
 20483  002EC8  EC3C  F045         	call	_confirmpackage	;wreg free
 20484  002ECC                     l23212:
 20485                           
 20486                           ;eusartparser.c: 471:                 write_package(*package);
 20487  002ECC  0100               	movlb	0	; () banked
 20488  002ECE  51E0               	movf	eusartparser@package& (0+255),w,b
 20489  002ED0  6ED9               	movwf	fsr2l,c
 20490  002ED2  6ADA               	clrf	fsr2h,c
 20491  002ED4  EE00  F011         	lfsr	0,write_package@package
 20492  002ED8  0E06               	movlw	6
 20493  002EDA                     u28271:
 20494  002EDA  CFDB FFEB          	movff	plusw2,plusw0
 20495  002EDE  06E8               	decf	wreg,f,c
 20496  002EE0  E2FC               	bc	u28271
 20497  002EE2  ECC3  F047         	call	_write_package	;wreg free
 20498                           
 20499                           ;eusartparser.c: 472:                 break;
 20500  002EE6  0012               	return	
 20501  002EE8                     l23214:
 20502                           
 20503                           ; BSR set to: 0
 20504                           ;eusartparser.c: 475:                 if(programmer_enable)
 20505  002EE8  5185               	movf	_programmer_enable& (0+255),w,b
 20506  002EEA  B4D8               	btfsc	status,2,c
 20507  002EEC  D7E9               	goto	l23210
 20508                           
 20509                           ; BSR set to: 0
 20510                           ;eusartparser.c: 476:                     write_eusartparser(*package);
 20511  002EEE  51E0               	movf	eusartparser@package& (0+255),w,b
 20512  002EF0  6ED9               	movwf	fsr2l,c
 20513  002EF2  6ADA               	clrf	fsr2h,c
 20514  002EF4  EE00  F010         	lfsr	0,write_eusartparser@package
 20515  002EF8  0E06               	movlw	6
 20516  002EFA                     u28291:
 20517  002EFA  CFDB FFEB          	movff	plusw2,plusw0
 20518  002EFE  06E8               	decf	wreg,f,c
 20519  002F00  E2FC               	bc	u28291
 20520  002F02  ECA1  F019         	call	_write_eusartparser	;wreg free
 20521  002F06  D7DC               	goto	l23210
 20522  002F08                     l23222:
 20523                           
 20524                           ; BSR set to: 0
 20525                           ;eusartparser.c: 482:                 if(programmer_enable){
 20526  002F08  5185               	movf	_programmer_enable& (0+255),w,b
 20527  002F0A  B4D8               	btfsc	status,2,c
 20528  002F0C  D008               	goto	l23228
 20529                           
 20530                           ; BSR set to: 0
 20531                           ;eusartparser.c: 483:                     SaveNVM_VarSystem(pageMemoryE);
 20532  002F0E  0E01               	movlw	1
 20533  002F10  EC16  F047         	call	_SaveNVM_VarSystem
 20534                           
 20535                           ;eusartparser.c: 484:                     SaveNVM_VarSystem(pageMemoryP);
 20536  002F14  0E00               	movlw	0
 20537  002F16  EC16  F047         	call	_SaveNVM_VarSystem
 20538                           
 20539                           ;eusartparser.c: 485:                     programmer_enable=0;
 20540  002F1A  0E00               	movlw	0
 20541  002F1C  D005               	goto	L83
 20542  002F1E                     l23228:
 20543                           
 20544                           ; BSR set to: 0
 20545                           ;eusartparser.c: 488:                     if((sm_state_Main_t)main_stateMachine.current_
      +                          state==st_standBy)
 20546  002F1E  0101               	movlb	1	; () banked
 20547  002F20  51EE               	movf	_main_stateMachine& (0+255),w,b
 20548  002F22  A4D8               	btfss	status,2,c
 20549  002F24  D004               	goto	l23232
 20550                           
 20551                           ; BSR set to: 1
 20552                           ;eusartparser.c: 489:                         programmer_enable=1;
 20553  002F26  0E01               	movlw	1
 20554  002F28                     L83:
 20555  002F28  0100               	movlb	0	; () banked
 20556  002F2A  6F85               	movwf	_programmer_enable& (0+255),b
 20557  002F2C  D017               	goto	l23240
 20558  002F2E                     l23232:
 20559                           
 20560                           ; BSR set to: 1
 20561                           ;eusartparser.c: 491:                         package->data.data16=(uint16_t)2;
 20562  002F2E  0100               	movlb	0	; () banked
 20563  002F30  51E0               	movf	eusartparser@package& (0+255),w,b
 20564  002F32  6ED9               	movwf	fsr2l,c
 20565  002F34  6ADA               	clrf	fsr2h,c
 20566  002F36  0E02               	movlw	2
 20567  002F38  26D9               	addwf	fsr2l,f,c
 20568  002F3A  0E02               	movlw	2
 20569  002F3C  6EDE               	movwf	postinc2,c
 20570  002F3E  0E00               	movlw	0
 20571  002F40  6EDD               	movwf	postdec2,c
 20572  002F42                     l23234:
 20573                           
 20574                           ; BSR set to: 0
 20575                           ;eusartparser.c: 492:                         write_package(*package);
 20576  002F42  51E0               	movf	eusartparser@package& (0+255),w,b
 20577  002F44  6ED9               	movwf	fsr2l,c
 20578  002F46  6ADA               	clrf	fsr2h,c
 20579  002F48  EE00  F011         	lfsr	0,write_package@package
 20580  002F4C  0E06               	movlw	6
 20581  002F4E                     u28321:
 20582  002F4E  CFDB FFEB          	movff	plusw2,plusw0
 20583  002F52  06E8               	decf	wreg,f,c
 20584  002F54  E2FC               	bc	u28321
 20585  002F56  ECC3  F047         	call	_write_package	;wreg free
 20586  002F5A  D7B2               	goto	l23210
 20587  002F5C                     l23240:
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;eusartparser.c: 499:                 package->data.data16=(uint16_t)programmer_enable;
 20591  002F5C  5185               	movf	_programmer_enable& (0+255),w,b
 20592  002F5E  6FE1               	movwf	??_eusartparser& (0+255),b
 20593  002F60  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20594  002F62  51E0               	movf	eusartparser@package& (0+255),w,b
 20595  002F64  6ED9               	movwf	fsr2l,c
 20596  002F66  6ADA               	clrf	fsr2h,c
 20597  002F68  0E02               	movlw	2
 20598  002F6A  26D9               	addwf	fsr2l,f,c
 20599  002F6C  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20600  002F70  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20601  002F74  D7E6               	goto	l23234
 20602  002F76                     l23252:
 20603                           
 20604                           ; BSR set to: 0
 20605                           ;eusartparser.c: 509:                 package->address=0x00;
 20606  002F76  51E0               	movf	eusartparser@package& (0+255),w,b
 20607  002F78  6ED9               	movwf	fsr2l,c
 20608  002F7A  6ADA               	clrf	fsr2h,c
 20609  002F7C  0E01               	movlw	1
 20610  002F7E  26D9               	addwf	fsr2l,f,c
 20611  002F80  0E00               	movlw	0
 20612  002F82  6EDF               	movwf	indf2,c
 20613                           
 20614                           ;eusartparser.c: 510:                 package->data.data16=var_sys_NVM.positionRemotesFu
      +                          ll;
 20615  002F84  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20616  002F86  6FE1               	movwf	??_eusartparser& (0+255),b
 20617  002F88  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20618  002F8A  51E0               	movf	eusartparser@package& (0+255),w,b
 20619  002F8C  6ED9               	movwf	fsr2l,c
 20620  002F8E  6ADA               	clrf	fsr2h,c
 20621  002F90  0E02               	movlw	2
 20622  002F92  26D9               	addwf	fsr2l,f,c
 20623  002F94  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20624  002F98  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20625                           
 20626                           ; BSR set to: 0
 20627                           ;eusartparser.c: 511:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20628  002F9C  0E00               	movlw	0
 20629  002F9E  6FEC               	movwf	eusartparser@i& (0+255),b
 20630  002FA0  D013               	goto	l23262
 20631  002FA2                     l23256:
 20632                           
 20633                           ; BSR set to: 0
 20634                           ;eusartparser.c: 512:                 if(cmdMemoryIsEmpty(0,i)==1)
 20635  002FA2  C0EC  F02E         	movff	eusartparser@i,cmdMemoryIsEmpty@position
 20636  002FA6  0E00               	movlw	0
 20637  002FA8  EC9C  F03C         	call	_cmdMemoryIsEmpty
 20638  002FAC  06E8               	decf	wreg,f,c
 20639  002FAE  A4D8               	btfss	status,2,c
 20640  002FB0  D009               	goto	l23260
 20641                           
 20642                           ;eusartparser.c: 513:                     package->data.data16--;
 20643  002FB2  0100               	movlb	0	; () banked
 20644  002FB4  51E0               	movf	eusartparser@package& (0+255),w,b
 20645  002FB6  6ED9               	movwf	fsr2l,c
 20646  002FB8  6ADA               	clrf	fsr2h,c
 20647  002FBA  0E02               	movlw	2
 20648  002FBC  26D9               	addwf	fsr2l,f,c
 20649  002FBE  06DE               	decf	postinc2,f,c
 20650  002FC0  0E00               	movlw	0
 20651  002FC2  5ADD               	subwfb	postdec2,f,c
 20652  002FC4                     l23260:
 20653  002FC4  0100               	movlb	0	; () banked
 20654  002FC6  2BEC               	incf	eusartparser@i& (0+255),f,b
 20655  002FC8                     l23262:
 20656                           
 20657                           ; BSR set to: 0
 20658  002FC8  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20659  002FCA  5DEC               	subwf	eusartparser@i& (0+255),w,b
 20660  002FCC  B0D8               	btfsc	status,0,c
 20661  002FCE  D7B9               	goto	l23234
 20662  002FD0  D7E8               	goto	l23256
 20663  002FD2                     l23270:
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;eusartparser.c: 519:                 package->address=0x00;
 20667  002FD2  51E0               	movf	eusartparser@package& (0+255),w,b
 20668  002FD4  6ED9               	movwf	fsr2l,c
 20669  002FD6  6ADA               	clrf	fsr2h,c
 20670  002FD8  0E01               	movlw	1
 20671  002FDA  26D9               	addwf	fsr2l,f,c
 20672  002FDC  0E00               	movlw	0
 20673  002FDE  6EDF               	movwf	indf2,c
 20674                           
 20675                           ;eusartparser.c: 520:                 package->data.data16=0;
 20676  002FE0  51E0               	movf	eusartparser@package& (0+255),w,b
 20677  002FE2  6ED9               	movwf	fsr2l,c
 20678  002FE4  6ADA               	clrf	fsr2h,c
 20679  002FE6  0E02               	movlw	2
 20680  002FE8  26D9               	addwf	fsr2l,f,c
 20681  002FEA  0E00               	movlw	0
 20682  002FEC  6EDE               	movwf	postinc2,c
 20683  002FEE  0E00               	movlw	0
 20684  002FF0  6EDD               	movwf	postdec2,c
 20685                           
 20686                           ; BSR set to: 0
 20687                           ;eusartparser.c: 521:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20688  002FF2  0E00               	movlw	0
 20689  002FF4  6FED               	movwf	eusartparser@i_7272& (0+255),b
 20690  002FF6  D013               	goto	l23280
 20691  002FF8                     l23274:
 20692                           
 20693                           ; BSR set to: 0
 20694                           ;eusartparser.c: 522:                 if(cmdMemoryIsEmpty(0,i)==1)
 20695  002FF8  C0ED  F02E         	movff	eusartparser@i_7272,cmdMemoryIsEmpty@position
 20696  002FFC  0E00               	movlw	0
 20697  002FFE  EC9C  F03C         	call	_cmdMemoryIsEmpty
 20698  003002  06E8               	decf	wreg,f,c
 20699  003004  A4D8               	btfss	status,2,c
 20700  003006  D009               	goto	l23278
 20701                           
 20702                           ;eusartparser.c: 523:                     package->data.data16++;
 20703  003008  0100               	movlb	0	; () banked
 20704  00300A  51E0               	movf	eusartparser@package& (0+255),w,b
 20705  00300C  6ED9               	movwf	fsr2l,c
 20706  00300E  6ADA               	clrf	fsr2h,c
 20707  003010  0E02               	movlw	2
 20708  003012  26D9               	addwf	fsr2l,f,c
 20709  003014  2ADE               	incf	postinc2,f,c
 20710  003016  0E00               	movlw	0
 20711  003018  22DD               	addwfc	postdec2,f,c
 20712  00301A                     l23278:
 20713  00301A  0100               	movlb	0	; () banked
 20714  00301C  2BED               	incf	eusartparser@i_7272& (0+255),f,b
 20715  00301E                     l23280:
 20716                           
 20717                           ; BSR set to: 0
 20718  00301E  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20719  003020  5DED               	subwf	eusartparser@i_7272& (0+255),w,b
 20720  003022  B0D8               	btfsc	status,0,c
 20721  003024  D78E               	goto	l23234
 20722  003026  D7E8               	goto	l23274
 20723  003028                     l23288:
 20724                           
 20725                           ; BSR set to: 0
 20726                           ;eusartparser.c: 529:                 relcounter=0;
 20727  003028  0E00               	movlw	0
 20728  00302A  6FEE               	movwf	eusartparser@relcounter& (0+255),b
 20729                           
 20730                           ;eusartparser.c: 530:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20731  00302C  0E00               	movlw	0
 20732  00302E  6FEF               	movwf	eusartparser@i_7273& (0+255),b
 20733  003030  D02B               	goto	l23300
 20734  003032                     l23290:
 20735                           
 20736                           ; BSR set to: 0
 20737                           ;eusartparser.c: 531:                     if(cmdMemoryIsEmpty(0,i)==0){
 20738  003032  C0EF  F02E         	movff	eusartparser@i_7273,cmdMemoryIsEmpty@position
 20739  003036  0E00               	movlw	0
 20740  003038  EC9C  F03C         	call	_cmdMemoryIsEmpty
 20741  00303C  0900               	iorlw	0
 20742  00303E  A4D8               	btfss	status,2,c
 20743  003040  D021               	goto	l23298
 20744                           
 20745                           ;eusartparser.c: 532:                         package->data.data16=(uint16_t)i;
 20746  003042  0100               	movlb	0	; () banked
 20747  003044  51EF               	movf	eusartparser@i_7273& (0+255),w,b
 20748  003046  6FE1               	movwf	??_eusartparser& (0+255),b
 20749  003048  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20750  00304A  51E0               	movf	eusartparser@package& (0+255),w,b
 20751  00304C  6ED9               	movwf	fsr2l,c
 20752  00304E  6ADA               	clrf	fsr2h,c
 20753  003050  0E02               	movlw	2
 20754  003052  26D9               	addwf	fsr2l,f,c
 20755  003054  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20756  003058  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20757                           
 20758                           ;eusartparser.c: 533:                         package->address=relcounter;
 20759  00305C  51E0               	movf	eusartparser@package& (0+255),w,b
 20760  00305E  6ED9               	movwf	fsr2l,c
 20761  003060  6ADA               	clrf	fsr2h,c
 20762  003062  0E01               	movlw	1
 20763  003064  26D9               	addwf	fsr2l,f,c
 20764  003066  C0EE  FFDF         	movff	eusartparser@relcounter,indf2
 20765                           
 20766                           ; BSR set to: 0
 20767                           ;eusartparser.c: 534:                         relcounter++;
 20768  00306A  2BEE               	incf	eusartparser@relcounter& (0+255),f,b
 20769                           
 20770                           ; BSR set to: 0
 20771                           ;eusartparser.c: 535:                         write_package(*package);
 20772  00306C  51E0               	movf	eusartparser@package& (0+255),w,b
 20773  00306E  6ED9               	movwf	fsr2l,c
 20774  003070  6ADA               	clrf	fsr2h,c
 20775  003072  EE00  F011         	lfsr	0,write_package@package
 20776  003076  0E06               	movlw	6
 20777  003078                     u28381:
 20778  003078  CFDB FFEB          	movff	plusw2,plusw0
 20779  00307C  06E8               	decf	wreg,f,c
 20780  00307E  E2FC               	bc	u28381
 20781  003080  ECC3  F047         	call	_write_package	;wreg free
 20782  003084                     l23298:
 20783  003084  0100               	movlb	0	; () banked
 20784  003086  2BEF               	incf	eusartparser@i_7273& (0+255),f,b
 20785  003088                     l23300:
 20786                           
 20787                           ; BSR set to: 0
 20788  003088  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20789  00308A  5DEF               	subwf	eusartparser@i_7273& (0+255),w,b
 20790  00308C  B0D8               	btfsc	status,0,c
 20791  00308E  D718               	goto	l23210
 20792  003090  D7D0               	goto	l23290
 20793  003092                     l23306:
 20794                           
 20795                           ; BSR set to: 0
 20796                           ;eusartparser.c: 541:                 relcounter=0;
 20797  003092  0E00               	movlw	0
 20798  003094  6FEE               	movwf	eusartparser@relcounter& (0+255),b
 20799                           
 20800                           ;eusartparser.c: 542:                 for(uint8_t i=0;i<var_sys_NVM.positionRemotesFull;
      +                          i++)
 20801  003096  0E00               	movlw	0
 20802  003098  6FF0               	movwf	eusartparser@i_7274& (0+255),b
 20803  00309A  D02B               	goto	l23318
 20804  00309C                     l23308:
 20805                           
 20806                           ; BSR set to: 0
 20807                           ;eusartparser.c: 543:                     if(cmdMemoryIsEmpty(0,i)==1){
 20808  00309C  C0F0  F02E         	movff	eusartparser@i_7274,cmdMemoryIsEmpty@position
 20809  0030A0  0E00               	movlw	0
 20810  0030A2  EC9C  F03C         	call	_cmdMemoryIsEmpty
 20811  0030A6  06E8               	decf	wreg,f,c
 20812  0030A8  A4D8               	btfss	status,2,c
 20813  0030AA  D021               	goto	l23316
 20814                           
 20815                           ;eusartparser.c: 544:                         package->data.data16=(uint16_t)i;
 20816  0030AC  0100               	movlb	0	; () banked
 20817  0030AE  51F0               	movf	eusartparser@i_7274& (0+255),w,b
 20818  0030B0  6FE1               	movwf	??_eusartparser& (0+255),b
 20819  0030B2  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 20820  0030B4  51E0               	movf	eusartparser@package& (0+255),w,b
 20821  0030B6  6ED9               	movwf	fsr2l,c
 20822  0030B8  6ADA               	clrf	fsr2h,c
 20823  0030BA  0E02               	movlw	2
 20824  0030BC  26D9               	addwf	fsr2l,f,c
 20825  0030BE  C0E1  FFDE         	movff	??_eusartparser,postinc2
 20826  0030C2  C0E2  FFDD         	movff	??_eusartparser+1,postdec2
 20827                           
 20828                           ;eusartparser.c: 545:                         package->address=relcounter;
 20829  0030C6  51E0               	movf	eusartparser@package& (0+255),w,b
 20830  0030C8  6ED9               	movwf	fsr2l,c
 20831  0030CA  6ADA               	clrf	fsr2h,c
 20832  0030CC  0E01               	movlw	1
 20833  0030CE  26D9               	addwf	fsr2l,f,c
 20834  0030D0  C0EE  FFDF         	movff	eusartparser@relcounter,indf2
 20835                           
 20836                           ; BSR set to: 0
 20837                           ;eusartparser.c: 546:                         relcounter++;
 20838  0030D4  2BEE               	incf	eusartparser@relcounter& (0+255),f,b
 20839                           
 20840                           ; BSR set to: 0
 20841                           ;eusartparser.c: 547:                         write_package(*package);
 20842  0030D6  51E0               	movf	eusartparser@package& (0+255),w,b
 20843  0030D8  6ED9               	movwf	fsr2l,c
 20844  0030DA  6ADA               	clrf	fsr2h,c
 20845  0030DC  EE00  F011         	lfsr	0,write_package@package
 20846  0030E0  0E06               	movlw	6
 20847  0030E2                     u28411:
 20848  0030E2  CFDB FFEB          	movff	plusw2,plusw0
 20849  0030E6  06E8               	decf	wreg,f,c
 20850  0030E8  E2FC               	bc	u28411
 20851  0030EA  ECC3  F047         	call	_write_package	;wreg free
 20852  0030EE                     l23316:
 20853  0030EE  0100               	movlb	0	; () banked
 20854  0030F0  2BF0               	incf	eusartparser@i_7274& (0+255),f,b
 20855  0030F2                     l23318:
 20856                           
 20857                           ; BSR set to: 0
 20858  0030F2  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 20859  0030F4  5DF0               	subwf	eusartparser@i_7274& (0+255),w,b
 20860  0030F6  B0D8               	btfsc	status,0,c
 20861  0030F8  D6E3               	goto	l23210
 20862  0030FA  D7D0               	goto	l23308
 20863  0030FC                     l23324:
 20864                           
 20865                           ; BSR set to: 0
 20866                           ;eusartparser.c: 553:                 if(save_f==0){
 20867  0030FC  0101               	movlb	1	; () banked
 20868  0030FE  518B               	movf	eusartparser@save_f& (0+255),w,b
 20869  003100  A4D8               	btfss	status,2,c
 20870  003102  D021               	goto	l23334
 20871                           
 20872                           ; BSR set to: 1
 20873                           ;eusartparser.c: 554:                     buffer=package->data.data16;
 20874  003104  0100               	movlb	0	; () banked
 20875  003106  51E0               	movf	eusartparser@package& (0+255),w,b
 20876  003108  6ED9               	movwf	fsr2l,c
 20877  00310A  6ADA               	clrf	fsr2h,c
 20878  00310C  0E02               	movlw	2
 20879  00310E  26D9               	addwf	fsr2l,f,c
 20880  003110  CFDE F28C          	movff	postinc2,eusartparser@buffer
 20881  003114  CFDD F28D          	movff	postdec2,eusartparser@buffer+1
 20882                           
 20883                           ; BSR set to: 0
 20884                           ;eusartparser.c: 555:                     confirmpackage(package, 1);
 20885  003118  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 20886  00311C  0E01               	movlw	1
 20887  00311E  6E12               	movwf	confirmpackage@confirm^0,c
 20888  003120  EC3C  F045         	call	_confirmpackage	;wreg free
 20889                           
 20890                           ;eusartparser.c: 556:                     write_package(*package);
 20891  003124  0100               	movlb	0	; () banked
 20892  003126  51E0               	movf	eusartparser@package& (0+255),w,b
 20893  003128  6ED9               	movwf	fsr2l,c
 20894  00312A  6ADA               	clrf	fsr2h,c
 20895  00312C  EE00  F011         	lfsr	0,write_package@package
 20896  003130  0E06               	movlw	6
 20897  003132                     u28441:
 20898  003132  CFDB FFEB          	movff	plusw2,plusw0
 20899  003136  06E8               	decf	wreg,f,c
 20900  003138  E2FC               	bc	u28441
 20901  00313A  ECC3  F047         	call	_write_package	;wreg free
 20902                           
 20903                           ;eusartparser.c: 557:                     save_f=1;
 20904  00313E  0E01               	movlw	1
 20905  003140  0101               	movlb	1	; () banked
 20906  003142  6F8B               	movwf	eusartparser@save_f& (0+255),b
 20907                           
 20908                           ;eusartparser.c: 558:                 }
 20909  003144  0012               	return	
 20910  003146                     l23334:
 20911                           
 20912                           ; BSR set to: 1
 20913                           ;eusartparser.c: 560:                     serial=((uint32_t)buffer<<16)+(uint32_t)packag
      +                          e->data.data16;
 20914  003146  0100               	movlb	0	; () banked
 20915  003148  51E0               	movf	eusartparser@package& (0+255),w,b
 20916  00314A  6ED9               	movwf	fsr2l,c
 20917  00314C  6ADA               	clrf	fsr2h,c
 20918  00314E  0E02               	movlw	2
 20919  003150  26D9               	addwf	fsr2l,f,c
 20920  003152  CFDE F0E1          	movff	postinc2,??_eusartparser
 20921  003156  CFDD F0E2          	movff	postdec2,??_eusartparser+1
 20922  00315A  0102               	movlb	2	; () banked
 20923  00315C  518C               	movf	eusartparser@buffer& (0+255),w,b
 20924  00315E  0100               	movlb	0	; () banked
 20925  003160  6FE3               	movwf	(??_eusartparser+2)& (0+255),b
 20926  003162  0102               	movlb	2	; () banked
 20927  003164  518D               	movf	(eusartparser@buffer+1)& (0+255),w,b
 20928  003166  0100               	movlb	0	; () banked
 20929  003168  6FE4               	movwf	(??_eusartparser+3)& (0+255),b
 20930  00316A  6BE5               	clrf	(??_eusartparser+4)& (0+255),b
 20931  00316C  6BE6               	clrf	(??_eusartparser+5)& (0+255),b
 20932  00316E  C0E4  F0E6         	movff	??_eusartparser+3,??_eusartparser+5
 20933  003172  C0E3  F0E5         	movff	??_eusartparser+2,??_eusartparser+4
 20934  003176  6BE4               	clrf	(??_eusartparser+3)& (0+255),b
 20935  003178  6BE3               	clrf	(??_eusartparser+2)& (0+255),b
 20936  00317A  51E1               	movf	??_eusartparser& (0+255),w,b
 20937  00317C  25E3               	addwf	(??_eusartparser+2)& (0+255),w,b
 20938  00317E  6FE7               	movwf	eusartparser@serial& (0+255),b
 20939  003180  51E2               	movf	(??_eusartparser+1)& (0+255),w,b
 20940  003182  21E4               	addwfc	(??_eusartparser+3)& (0+255),w,b
 20941  003184  6FE8               	movwf	(eusartparser@serial+1)& (0+255),b
 20942  003186  0E00               	movlw	0
 20943  003188  21E5               	addwfc	(??_eusartparser+4)& (0+255),w,b
 20944  00318A  6FE9               	movwf	(eusartparser@serial+2)& (0+255),b
 20945  00318C  0E00               	movlw	0
 20946  00318E  21E6               	addwfc	(??_eusartparser+5)& (0+255),w,b
 20947  003190  6FEA               	movwf	(eusartparser@serial+3)& (0+255),b
 20948                           
 20949                           ; BSR set to: 0
 20950                           ;eusartparser.c: 561:                     if(validateRemoteSerialNumber(serial, NO, &pos
      +                          )==NoCMD){
 20951  003192  C0E7  F02E         	movff	eusartparser@serial,validateRemoteSerialNumber@serial
 20952  003196  C0E8  F02F         	movff	eusartparser@serial+1,validateRemoteSerialNumber@serial+1
 20953  00319A  C0E9  F030         	movff	eusartparser@serial+2,validateRemoteSerialNumber@serial+2
 20954  00319E  C0EA  F031         	movff	eusartparser@serial+3,validateRemoteSerialNumber@serial+3
 20955  0031A2  0E00               	movlw	0
 20956  0031A4  6E32               	movwf	validateRemoteSerialNumber@VerifyOnlySerial^0,c
 20957  0031A6  0EEB               	movlw	low eusartparser@pos
 20958  0031A8  6E33               	movwf	validateRemoteSerialNumber@position^0,c
 20959  0031AA  6A34               	clrf	(validateRemoteSerialNumber@position+1)^0,c
 20960  0031AC  ECC9  F02C         	call	_validateRemoteSerialNumber	;wreg free
 20961  0031B0  0900               	iorlw	0
 20962  0031B2  A4D8               	btfss	status,2,c
 20963  0031B4  D049               	goto	u28500
 20964                           
 20965                           ; BSR set to: 0
 20966                           ;eusartparser.c: 562:                         for(uint8_t i=0;;i++)
 20967  0031B6  0E00               	movlw	0
 20968  0031B8  6FF1               	movwf	eusartparser@i_7275& (0+255),b
 20969  0031BA                     l23340:
 20970                           
 20971                           ; BSR set to: 0
 20972                           ;eusartparser.c: 563:                             if(cmdMemoryIsEmpty(0,i)==1&&package->
      +                          address==0){
 20973  0031BA  C0F1  F02E         	movff	eusartparser@i_7275,cmdMemoryIsEmpty@position
 20974  0031BE  0E00               	movlw	0
 20975  0031C0  EC9C  F03C         	call	_cmdMemoryIsEmpty
 20976  0031C4  06E8               	decf	wreg,f,c
 20977  0031C6  A4D8               	btfss	status,2,c
 20978  0031C8  D02A               	goto	l23352
 20979  0031CA  0100               	movlb	0	; () banked
 20980  0031CC  51E0               	movf	eusartparser@package& (0+255),w,b
 20981  0031CE  6ED9               	movwf	fsr2l,c
 20982  0031D0  6ADA               	clrf	fsr2h,c
 20983  0031D2  0E01               	movlw	1
 20984  0031D4  26D9               	addwf	fsr2l,f,c
 20985  0031D6  50DF               	movf	indf2,w,c
 20986  0031D8  A4D8               	btfss	status,2,c
 20987  0031DA  D021               	goto	l23352
 20988                           
 20989                           ; BSR set to: 0
 20990                           ;eusartparser.c: 564:                                 saveNewSerial(0,serial,i);
 20991  0031DC  C0E7  F0D8         	movff	eusartparser@serial,saveNewSerial@tempSerial
 20992  0031E0  C0E8  F0D9         	movff	eusartparser@serial+1,saveNewSerial@tempSerial+1
 20993  0031E4  C0E9  F0DA         	movff	eusartparser@serial+2,saveNewSerial@tempSerial+2
 20994  0031E8  C0EA  F0DB         	movff	eusartparser@serial+3,saveNewSerial@tempSerial+3
 20995  0031EC  C0F1  F0DC         	movff	eusartparser@i_7275,saveNewSerial@position
 20996  0031F0  0E00               	movlw	0
 20997  0031F2  EC6B  F041         	call	_saveNewSerial
 20998  0031F6                     l23346:
 20999                           
 21000                           ;eusartparser.c: 565:                                 confirmpackage(package, 1);
 21001  0031F6  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 21002  0031FA  0E01               	movlw	1
 21003  0031FC  6E12               	movwf	confirmpackage@confirm^0,c
 21004  0031FE  EC3C  F045         	call	_confirmpackage	;wreg free
 21005  003202                     l23348:
 21006                           
 21007                           ;eusartparser.c: 566:                                 write_package(*package);
 21008  003202  0100               	movlb	0	; () banked
 21009  003204  51E0               	movf	eusartparser@package& (0+255),w,b
 21010  003206  6ED9               	movwf	fsr2l,c
 21011  003208  6ADA               	clrf	fsr2h,c
 21012  00320A  EE00  F011         	lfsr	0,write_package@package
 21013  00320E  0E06               	movlw	6
 21014  003210                     u28481:
 21015  003210  CFDB FFEB          	movff	plusw2,plusw0
 21016  003214  06E8               	decf	wreg,f,c
 21017  003216  E2FC               	bc	u28481
 21018  003218  ECC3  F047         	call	_write_package	;wreg free
 21019                           
 21020                           ;eusartparser.c: 567:                                 break;
 21021  00321C  D01E               	goto	l23368
 21022  00321E                     l23352:
 21023  00321E  C0F1  F02E         	movff	eusartparser@i_7275,cmdMemoryIsEmpty@position
 21024  003222  0E00               	movlw	0
 21025  003224  EC9C  F03C         	call	_cmdMemoryIsEmpty
 21026  003228  06E8               	decf	wreg,f,c
 21027  00322A  A4D8               	btfss	status,2,c
 21028  00322C  D008               	goto	l23356
 21029                           
 21030                           ;eusartparser.c: 570:                                 package->address--;
 21031  00322E  0100               	movlb	0	; () banked
 21032  003230  51E0               	movf	eusartparser@package& (0+255),w,b
 21033  003232  6ED9               	movwf	fsr2l,c
 21034  003234  6ADA               	clrf	fsr2h,c
 21035  003236  0E01               	movlw	1
 21036  003238  26D9               	addwf	fsr2l,f,c
 21037  00323A  06DF               	decf	indf2,f,c
 21038                           
 21039                           ;eusartparser.c: 571:                             }
 21040  00323C  D00C               	goto	l23362
 21041  00323E                     l23356:
 21042  00323E  0100               	movlb	0	; () banked
 21043  003240  51F1               	movf	eusartparser@i_7275& (0+255),w,b
 21044  003242  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21045  003244  A4D8               	btfss	status,2,c
 21046  003246  D007               	goto	l23362
 21047  003248                     u28500:
 21048                           
 21049                           ; BSR set to: 0
 21050                           ;eusartparser.c: 573:                                 confirmpackage(package, 0);
 21051  003248  C0E0  F011         	movff	eusartparser@package,confirmpackage@package
 21052  00324C  0E00               	movlw	0
 21053  00324E  6E12               	movwf	confirmpackage@confirm^0,c
 21054  003250  EC3C  F045         	call	_confirmpackage	;wreg free
 21055  003254  D7D6               	goto	l23348
 21056  003256                     l23362:
 21057                           
 21058                           ; BSR set to: 0
 21059  003256  2BF1               	incf	eusartparser@i_7275& (0+255),f,b
 21060  003258  D7B0               	goto	l23340
 21061  00325A                     l23368:
 21062                           
 21063                           ;eusartparser.c: 582:                     save_f=0;
 21064  00325A  0E00               	movlw	0
 21065  00325C  0101               	movlb	1	; () banked
 21066  00325E  6F8B               	movwf	eusartparser@save_f& (0+255),b
 21067  003260  0012               	return	
 21068  003262                     l23370:
 21069                           
 21070                           ; BSR set to: 0
 21071                           ;eusartparser.c: 586:                 for(uint8_t i=0;;i++)
 21072  003262  0E00               	movlw	0
 21073  003264  6FF2               	movwf	eusartparser@i_7276& (0+255),b
 21074  003266                     l23372:
 21075                           
 21076                           ; BSR set to: 0
 21077                           ;eusartparser.c: 587:                     if(cmdMemoryIsEmpty(0,i)==0&&package->address=
      +                          =0){
 21078  003266  C0F2  F02E         	movff	eusartparser@i_7276,cmdMemoryIsEmpty@position
 21079  00326A  0E00               	movlw	0
 21080  00326C  EC9C  F03C         	call	_cmdMemoryIsEmpty
 21081  003270  0900               	iorlw	0
 21082  003272  A4D8               	btfss	status,2,c
 21083  003274  D00F               	goto	l23386
 21084  003276  0100               	movlb	0	; () banked
 21085  003278  51E0               	movf	eusartparser@package& (0+255),w,b
 21086  00327A  6ED9               	movwf	fsr2l,c
 21087  00327C  6ADA               	clrf	fsr2h,c
 21088  00327E  0E01               	movlw	1
 21089  003280  26D9               	addwf	fsr2l,f,c
 21090  003282  50DF               	movf	indf2,w,c
 21091  003284  A4D8               	btfss	status,2,c
 21092  003286  D006               	goto	l23386
 21093                           
 21094                           ; BSR set to: 0
 21095                           ;eusartparser.c: 588:                         RemoveSerial(0, i);
 21096  003288  C0F2  F03A         	movff	eusartparser@i_7276,RemoveSerial@position
 21097  00328C  0E00               	movlw	0
 21098  00328E  EC4C  F03F         	call	_RemoveSerial
 21099  003292  D7B1               	goto	l23346
 21100  003294                     l23386:
 21101  003294  C0F2  F02E         	movff	eusartparser@i_7276,cmdMemoryIsEmpty@position
 21102  003298  0E00               	movlw	0
 21103  00329A  EC9C  F03C         	call	_cmdMemoryIsEmpty
 21104  00329E  0900               	iorlw	0
 21105  0032A0  A4D8               	btfss	status,2,c
 21106  0032A2  D008               	goto	l23390
 21107                           
 21108                           ;eusartparser.c: 595:                         package->address--;
 21109  0032A4  0100               	movlb	0	; () banked
 21110  0032A6  51E0               	movf	eusartparser@package& (0+255),w,b
 21111  0032A8  6ED9               	movwf	fsr2l,c
 21112  0032AA  6ADA               	clrf	fsr2h,c
 21113  0032AC  0E01               	movlw	1
 21114  0032AE  26D9               	addwf	fsr2l,f,c
 21115  0032B0  06DF               	decf	indf2,f,c
 21116                           
 21117                           ;eusartparser.c: 596:                     }
 21118  0032B2  D005               	goto	l23398
 21119  0032B4                     l23390:
 21120  0032B4  0100               	movlb	0	; () banked
 21121  0032B6  51F2               	movf	eusartparser@i_7276& (0+255),w,b
 21122  0032B8  19B8               	xorwf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 21123  0032BA  B4D8               	btfsc	status,2,c
 21124  0032BC  D7C5               	goto	u28500
 21125  0032BE                     l23398:
 21126                           
 21127                           ; BSR set to: 0
 21128  0032BE  2BF2               	incf	eusartparser@i_7276& (0+255),f,b
 21129  0032C0  D7D2               	goto	l23372
 21130  0032C2                     l23400:
 21131                           
 21132                           ; BSR set to: 0
 21133                           ;eusartparser.c: 606:                 package->functioncode=0x03;
 21134  0032C2  51E0               	movf	eusartparser@package& (0+255),w,b
 21135  0032C4  6ED9               	movwf	fsr2l,c
 21136  0032C6  6ADA               	clrf	fsr2h,c
 21137  0032C8  0E03               	movlw	3
 21138  0032CA  6EDF               	movwf	indf2,c
 21139                           
 21140                           ; BSR set to: 0
 21141                           ;eusartparser.c: 607:                 package->address=0x00;
 21142  0032CC  51E0               	movf	eusartparser@package& (0+255),w,b
 21143  0032CE  6ED9               	movwf	fsr2l,c
 21144  0032D0  6ADA               	clrf	fsr2h,c
 21145  0032D2  0E01               	movlw	1
 21146  0032D4  26D9               	addwf	fsr2l,f,c
 21147  0032D6  0E00               	movlw	0
 21148  0032D8  6EDF               	movwf	indf2,c
 21149                           
 21150                           ; BSR set to: 0
 21151                           ;eusartparser.c: 608:                 package->data.data16=0x0000;
 21152  0032DA  51E0               	movf	eusartparser@package& (0+255),w,b
 21153  0032DC  6ED9               	movwf	fsr2l,c
 21154  0032DE  6ADA               	clrf	fsr2h,c
 21155  0032E0  0E02               	movlw	2
 21156  0032E2  26D9               	addwf	fsr2l,f,c
 21157  0032E4  0E00               	movlw	0
 21158  0032E6  6EDE               	movwf	postinc2,c
 21159  0032E8  0E00               	movlw	0
 21160  0032EA  6EDD               	movwf	postdec2,c
 21161  0032EC  D5EF               	goto	l23212
 21162  0032EE                     l23408:
 21163                           
 21164                           ; BSR set to: 0
 21165  0032EE  51E0               	movf	eusartparser@package& (0+255),w,b
 21166  0032F0  6ED9               	movwf	fsr2l,c
 21167  0032F2  6ADA               	clrf	fsr2h,c
 21168  0032F4  50DF               	movf	indf2,w,c
 21169  0032F6  6FE1               	movwf	??_eusartparser& (0+255),b
 21170  0032F8  6BE2               	clrf	(??_eusartparser+1)& (0+255),b
 21171                           
 21172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21173                           ; Switch size 1, requested type "simple"
 21174                           ; Number of cases is 1, Range of values is 0 to 0
 21175                           ; switch strategies available:
 21176                           ; Name         Instructions Cycles
 21177                           ; simple_byte            4     3 (average)
 21178                           ;	Chosen strategy is simple_byte
 21179  0032FA  51E2               	movf	(??_eusartparser+1)& (0+255),w,b
 21180  0032FC  0A00               	xorlw	0	; case 0
 21181  0032FE  A4D8               	btfss	status,2,c
 21182  003300  D7E0               	goto	l23400
 21183                           
 21184                           ; BSR set to: 0
 21185                           ; Switch size 1, requested type "simple"
 21186                           ; Number of cases is 10, Range of values is 0 to 9
 21187                           ; switch strategies available:
 21188                           ; Name         Instructions Cycles
 21189                           ; simple_byte           31    16 (average)
 21190                           ;	Chosen strategy is simple_byte
 21191  003302  51E1               	movf	??_eusartparser& (0+255),w,b
 21192  003304  0A00               	xorlw	0	; case 0
 21193  003306  B4D8               	btfsc	status,2,c
 21194  003308  D5D4               	goto	l23206
 21195  00330A  0A01               	xorlw	1	; case 1
 21196  00330C  B4D8               	btfsc	status,2,c
 21197  00330E  D5EC               	goto	l23214
 21198  003310  0A03               	xorlw	3	; case 2
 21199  003312  B4D8               	btfsc	status,2,c
 21200  003314  D5F9               	goto	l23222
 21201  003316  0A01               	xorlw	1	; case 3
 21202  003318  B4D8               	btfsc	status,2,c
 21203  00331A  D5D2               	goto	l23210
 21204  00331C  0A07               	xorlw	7	; case 4
 21205  00331E  B4D8               	btfsc	status,2,c
 21206  003320  D62A               	goto	l23252
 21207  003322  0A01               	xorlw	1	; case 5
 21208  003324  B4D8               	btfsc	status,2,c
 21209  003326  D655               	goto	l23270
 21210  003328  0A03               	xorlw	3	; case 6
 21211  00332A  B4D8               	btfsc	status,2,c
 21212  00332C  D67D               	goto	l23288
 21213  00332E  0A01               	xorlw	1	; case 7
 21214  003330  B4D8               	btfsc	status,2,c
 21215  003332  D6AF               	goto	l23306
 21216  003334  0A0F               	xorlw	15	; case 8
 21217  003336  B4D8               	btfsc	status,2,c
 21218  003338  D6E1               	goto	l23324
 21219  00333A  0A01               	xorlw	1	; case 9
 21220  00333C  B4D8               	btfsc	status,2,c
 21221  00333E  D791               	goto	l23370
 21222  003340  D7C0               	goto	l23400
 21223  003342                     __end_of_eusartparser:
 21224                           	callstack 0
 21225                           
 21226 ;; *************** function _write_eusartparser *****************
 21227 ;; Defined at:
 21228 ;;		line 248 in file "eusartparser.c"
 21229 ;; Parameters:    Size  Location     Type
 21230 ;;  package         7   15[COMRAM] struct package_t
 21231 ;; Auto vars:     Size  Location     Type
 21232 ;;  debug2          2   32[COMRAM] volatile int 
 21233 ;;  debug           2   30[COMRAM] volatile int 
 21234 ;; Return value:  Size  Location     Type
 21235 ;;                  1    wreg      void 
 21236 ;; Registers used:
 21237 ;;		wreg, status,2, status,0
 21238 ;; Tracked objects:
 21239 ;;		On entry : 3F/0
 21240 ;;		On exit  : 3F/0
 21241 ;;		Unchanged: 0/0
 21242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21243 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21244 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21245 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21246 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21247 ;;Total ram usage:       19 bytes
 21248 ;; Hardware stack levels used: 1
 21249 ;; Hardware stack levels required when called: 4
 21250 ;; This function calls:
 21251 ;;		Nothing
 21252 ;; This function is called by:
 21253 ;;		_eusartparser
 21254 ;; This function uses a non-reentrant model
 21255 ;;
 21256                           
 21257                           	psect	text75
 21258  003342                     __ptext75:
 21259                           	callstack 0
 21260  003342                     _write_eusartparser:
 21261                           	callstack 25
 21262                           
 21263                           ; BSR set to: 0
 21264                           ;eusartparser.c: 249:         volatile int debug=(uint8_t)package.address;
 21265                           
 21266                           ;incstack = 0
 21267  003342  C011  F01F         	movff	write_eusartparser@package+1,write_eusartparser@debug	;volatile
 21268  003346  6A20               	clrf	(write_eusartparser@debug+1)^0,c	;volatile
 21269                           
 21270                           ; BSR set to: 0
 21271                           ;eusartparser.c: 250:         volatile int debug2=0x10;
 21272  003348  0E00               	movlw	0
 21273  00334A  6E22               	movwf	(write_eusartparser@debug2+1)^0,c	;volatile
 21274  00334C  0E10               	movlw	16
 21275  00334E  6E21               	movwf	write_eusartparser@debug2^0,c	;volatile
 21276                           
 21277                           ;eusartparser.c: 251:         switch((uint8_t)package.address){
 21278  003350  D180               	goto	l16450
 21279  003352                     l3597:
 21280                           
 21281                           ; BSR set to: 0
 21282                           ;eusartparser.c: 256:                 var_sys_NVM.decelarationOpen=package.data.data8[0]
      +                          ;
 21283  003352  C012  F098         	movff	write_eusartparser@package+2,_var_sys_NVM	;volatile
 21284                           
 21285                           ;eusartparser.c: 257:                 var_sys_NVM.decelarationClose=package.data.data8[1
      +                          ];
 21286  003356  C013  F099         	movff	write_eusartparser@package+3,_var_sys_NVM+1	;volatile
 21287                           
 21288                           ;eusartparser.c: 258:                 break;
 21289  00335A  0012               	return	
 21290  00335C                     l3599:
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;eusartparser.c: 262:                 var_sys_NVM.motorPower=package.data.data8[0];
 21294  00335C  C012  F09A         	movff	write_eusartparser@package+2,_var_sys_NVM+2	;volatile
 21295                           
 21296                           ;eusartparser.c: 263:                 var_sys_NVM.motorSensitivity=package.data.data8[1]
      +                          ;
 21297  003360  C013  F09B         	movff	write_eusartparser@package+3,_var_sys_NVM+3	;volatile
 21298                           
 21299                           ;eusartparser.c: 264:                 break;
 21300  003364  0012               	return	
 21301  003366                     l3600:
 21302                           
 21303                           ; BSR set to: 0
 21304                           ;eusartparser.c: 268:                 var_sys_NVM.walkTime=package.data.data8[1];
 21305  003366  C013  F09C         	movff	write_eusartparser@package+3,_var_sys_NVM+4	;volatile
 21306                           
 21307                           ;eusartparser.c: 269:                 break;
 21308  00336A  0012               	return	
 21309  00336C                     l3602:
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;eusartparser.c: 274:                 var_sys_NVM.autoTimeFullClose=package.data.data8[0
      +                          ];
 21313  00336C  C012  F09D         	movff	write_eusartparser@package+2,_var_sys_NVM+5	;volatile
 21314                           
 21315                           ;eusartparser.c: 275:                 var_sys_NVM.autoTimeWalkClose=package.data.data8[1
      +                          ];
 21316  003370  C013  F09E         	movff	write_eusartparser@package+3,_var_sys_NVM+6	;volatile
 21317                           
 21318                           ;eusartparser.c: 276:                 break;
 21319  003374  0012               	return	
 21320  003376                     l3604:
 21321                           
 21322                           ; BSR set to: 0
 21323                           ;eusartparser.c: 281:                 var_sys_NVM.photoCellIsON=package.data.data8[0];
 21324  003376  C012  F09F         	movff	write_eusartparser@package+2,_var_sys_NVM+7	;volatile
 21325                           
 21326                           ;eusartparser.c: 282:                 var_sys_NVM.photoCellInOpen=package.data.data8[1];
 21327  00337A  C013  F0A0         	movff	write_eusartparser@package+3,_var_sys_NVM+8	;volatile
 21328                           
 21329                           ;eusartparser.c: 283:                 break;
 21330  00337E  0012               	return	
 21331  003380                     l3605:
 21332                           
 21333                           ; BSR set to: 0
 21334                           ;eusartparser.c: 287:                 var_sys_NVM.securityBandIsON=package.data.data8[0]
      +                          ;
 21335  003380  C012  F0A1         	movff	write_eusartparser@package+2,_var_sys_NVM+9	;volatile
 21336                           
 21337                           ;eusartparser.c: 288:                 var_sys_NVM.securityBandType=package.data.data8[1]
      +                          ;
 21338  003384  C013  F0A2         	movff	write_eusartparser@package+3,_var_sys_NVM+10	;volatile
 21339                           
 21340                           ;eusartparser.c: 289:                 break;
 21341  003388  0012               	return	
 21342  00338A                     l3606:
 21343                           
 21344                           ; BSR set to: 0
 21345                           ;eusartparser.c: 293:                 var_sys_NVM.securityBandInOpen=package.data.data8[
      +                          1];
 21346  00338A  C013  F0A3         	movff	write_eusartparser@package+3,_var_sys_NVM+11	;volatile
 21347                           
 21348                           ;eusartparser.c: 294:                 break;
 21349  00338E  0012               	return	
 21350  003390                     l3607:
 21351                           
 21352                           ; BSR set to: 0
 21353                           ;eusartparser.c: 298:                 var_sys_NVM.operationMode=package.data.data8[1];
 21354  003390  C013  F0A4         	movff	write_eusartparser@package+3,_var_sys_NVM+12	;volatile
 21355                           
 21356                           ;eusartparser.c: 299:                 break;
 21357  003394  0012               	return	
 21358  003396                     l3608:
 21359                           
 21360                           ; BSR set to: 0
 21361                           ;eusartparser.c: 303:                 var_sys_NVM.flashLightMode=package.data.data8[1];
 21362  003396  C013  F0A5         	movff	write_eusartparser@package+3,_var_sys_NVM+13	;volatile
 21363                           
 21364                           ;eusartparser.c: 304:                 break;
 21365  00339A  0012               	return	
 21366  00339C                     l3609:
 21367                           
 21368                           ; BSR set to: 0
 21369                           ;eusartparser.c: 308:                 var_sys_NVM.programmingDistance=package.data.data8
      +                          [1];
 21370  00339C  C013  F0A6         	movff	write_eusartparser@package+3,_var_sys_NVM+14	;volatile
 21371                           
 21372                           ;eusartparser.c: 309:                 break;
 21373  0033A0  0012               	return	
 21374  0033A2                     l3610:
 21375                           
 21376                           ; BSR set to: 0
 21377                           ;eusartparser.c: 313:                 var_sys_NVM.decelarationSensivity=package.data.dat
      +                          a8[1];
 21378  0033A2  C013  F0A7         	movff	write_eusartparser@package+3,_var_sys_NVM+15	;volatile
 21379                           
 21380                           ;eusartparser.c: 314:                 break;
 21381  0033A6  0012               	return	
 21382  0033A8                     l3611:
 21383                           
 21384                           ; BSR set to: 0
 21385                           ;eusartparser.c: 319:                 var_sys_NVM.homemPresente=package.data.data8[1];
 21386  0033A8  C013  F0A8         	movff	write_eusartparser@package+3,_var_sys_NVM+16	;volatile
 21387                           
 21388                           ;eusartparser.c: 320:                 break;
 21389  0033AC  0012               	return	
 21390  0033AE                     l3613:
 21391                           
 21392                           ; BSR set to: 0
 21393                           ;eusartparser.c: 325:                 var_sys_NVM.logicDigital=package.data.data8[1];
 21394  0033AE  C013  F0A9         	movff	write_eusartparser@package+3,_var_sys_NVM+17	;volatile
 21395                           
 21396                           ;eusartparser.c: 326:                 break;
 21397  0033B2  0012               	return	
 21398  0033B4                     l3614:
 21399                           
 21400                           ; BSR set to: 0
 21401                           ;eusartparser.c: 330:                 var_sys_NVM.softStart=package.data.data8[0];
 21402  0033B4  C012  F0AA         	movff	write_eusartparser@package+2,_var_sys_NVM+18	;volatile
 21403                           
 21404                           ;eusartparser.c: 331:                 var_sys_NVM.softstop=package.data.data8[1];
 21405  0033B8  C013  F0AB         	movff	write_eusartparser@package+3,_var_sys_NVM+19	;volatile
 21406                           
 21407                           ;eusartparser.c: 332:                 break;
 21408  0033BC  0012               	return	
 21409  0033BE                     l3616:
 21410                           
 21411                           ; BSR set to: 0
 21412                           ;eusartparser.c: 337:                 var_sys_NVM.ligthTime=package.data.data8[1];
 21413  0033BE  C013  F0AC         	movff	write_eusartparser@package+3,_var_sys_NVM+20	;volatile
 21414                           
 21415                           ;eusartparser.c: 338:                 break;
 21416  0033C2  0012               	return	
 21417  0033C4                     l3618:
 21418                           
 21419                           ; BSR set to: 0
 21420                           ;eusartparser.c: 343:                 var_sys_NVM.folow_me=package.data.data8[1];
 21421  0033C4  C013  F0AD         	movff	write_eusartparser@package+3,_var_sys_NVM+21	;volatile
 21422                           
 21423                           ;eusartparser.c: 344:                 break;
 21424  0033C8  0012               	return	
 21425  0033CA                     l3619:
 21426                           
 21427                           ; BSR set to: 0
 21428                           ;eusartparser.c: 348:                 var_sys_NVM.Stopboton=package.data.data8[1];
 21429  0033CA  C013  F0AE         	movff	write_eusartparser@package+3,_var_sys_NVM+22	;volatile
 21430                           
 21431                           ;eusartparser.c: 349:                 break;
 21432  0033CE  0012               	return	
 21433  0033D0                     l3620:
 21434                           
 21435                           ; BSR set to: 0
 21436                           ;eusartparser.c: 353:                 var_sys_NVM.electricBrake=package.data.data8[1];
 21437  0033D0  C013  F0AF         	movff	write_eusartparser@package+3,_var_sys_NVM+23	;volatile
 21438                           
 21439                           ;eusartparser.c: 354:                 break;
 21440  0033D4  0012               	return	
 21441  0033D6                     l3621:
 21442                           
 21443                           ; BSR set to: 0
 21444                           ;eusartparser.c: 358:                 var_sys_NVM.velocityDecelaration=package.data.data
      +                          8[1];
 21445  0033D6  C013  F0B0         	movff	write_eusartparser@package+3,_var_sys_NVM+24	;volatile
 21446                           
 21447                           ;eusartparser.c: 359:                 break;
 21448  0033DA  0012               	return	
 21449  0033DC                     l3623:
 21450                           
 21451                           ; BSR set to: 0
 21452                           ;eusartparser.c: 364:                 var_sys_NVM.flashRGBMode=package.data.data8[1];
 21453  0033DC  C013  F0B1         	movff	write_eusartparser@package+3,_var_sys_NVM+25	;volatile
 21454                           
 21455                           ;eusartparser.c: 365:                 break;
 21456  0033E0  0012               	return	
 21457  0033E2                     l3624:
 21458                           
 21459                           ; BSR set to: 0
 21460                           ;eusartparser.c: 369:                 var_sys_NVM.Direction_motor=package.data.data8[1];
 21461  0033E2  C013  F0B3         	movff	write_eusartparser@package+3,_var_sys_NVM+27	;volatile
 21462                           
 21463                           ;eusartparser.c: 370:                 break;
 21464  0033E6  0012               	return	
 21465  0033E8                     l3625:
 21466                           
 21467                           ; BSR set to: 0
 21468                           ;eusartparser.c: 374:                 var_sys_NVM.TypeofMotor=package.data.data8[1];
 21469  0033E8  C013  F0B4         	movff	write_eusartparser@package+3,_var_sys_NVM+28	;volatile
 21470                           
 21471                           ;eusartparser.c: 375:                 break;
 21472  0033EC  0012               	return	
 21473  0033EE                     l3626:
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;eusartparser.c: 379:                 var_sys_NVM.positionRemotesFull=package.data.data8
      +                          [0];
 21477  0033EE  C012  F0B8         	movff	write_eusartparser@package+2,_var_sys_NVM+32	;volatile
 21478                           
 21479                           ;eusartparser.c: 380:                 var_sys_NVM.positionRemotesWalk=package.data.data8
      +                          [1];
 21480  0033F2  C013  F0B9         	movff	write_eusartparser@package+3,_var_sys_NVM+33	;volatile
 21481                           
 21482                           ;eusartparser.c: 381:                 break;
 21483  0033F6  0012               	return	
 21484  0033F8                     l16428:
 21485                           
 21486                           ; BSR set to: 0
 21487                           ;eusartparser.c: 384:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21488  0033F8  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21489  0033FA  6E17               	movwf	??_write_eusartparser^0,c
 21490  0033FC  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21491  0033FE  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21492  003400  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21493  003402  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21494  003404  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21495  003408  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21496  00340C  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21497  00340E  6A17               	clrf	??_write_eusartparser^0,c
 21498  003410  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21499  003412  1017               	iorwf	??_write_eusartparser^0,w,c
 21500  003414  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21501  003416  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21502  003418  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21503  00341A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21504  00341C  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21505  00341E  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21506  003420  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21507  003422  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21508  003424  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21509  003426  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21510                           
 21511                           ;eusartparser.c: 385:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(1*16));
 21512  003428  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21513  00342A  6E17               	movwf	??_write_eusartparser^0,c
 21514  00342C  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21515  00342E  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21516  003430  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21517  003432  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21518  003434  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21519  003438  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21520  00343C  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21521  00343E  6A17               	clrf	??_write_eusartparser^0,c
 21522  003440  1C17               	comf	??_write_eusartparser^0,w,c
 21523  003442  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21524  003444  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21525  003446  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21526  003448  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21527  00344A  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21528  00344C  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21529  00344E  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21530  003450  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21531  003452  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21532  003454  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21533  003456  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21534  003458  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21535  00345A  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21536  00345C  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21537  00345E  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21538  003460  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21539  003462  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21540  003464  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21541  003466  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21542                           
 21543                           ;eusartparser.c: 386:                 break;
 21544  003468  0012               	return	
 21545  00346A                     l16430:
 21546                           
 21547                           ; BSR set to: 0
 21548                           ;eusartparser.c: 388:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves|
      +                          ((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21549  00346A  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21550  00346C  11BA               	iorwf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21551  00346E  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21552  003470  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21553  003472  11BB               	iorwf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21554  003474  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21555  003476  0E00               	movlw	0
 21556  003478  11BC               	iorwf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21557  00347A  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21558  00347C  0E00               	movlw	0
 21559  00347E  11BD               	iorwf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21560  003480  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21561                           
 21562                           ;eusartparser.c: 389:                 var_sys_NVM.counterMoves=var_sys_NVM.counterMoves&
      +                          ~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_t)(0*16));
 21563  003482  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21564  003484  6E17               	movwf	??_write_eusartparser^0,c
 21565  003486  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21566  003488  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21567  00348A  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21568  00348C  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21569  00348E  1C17               	comf	??_write_eusartparser^0,w,c
 21570  003490  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21571  003492  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21572  003494  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21573  003496  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21574  003498  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21575  00349A  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21576  00349C  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21577  00349E  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 21578  0034A0  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21579  0034A2  6FBA               	movwf	(_var_sys_NVM+34)& (0+255),b	;volatile
 21580  0034A4  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 21581  0034A6  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21582  0034A8  6FBB               	movwf	(_var_sys_NVM+35)& (0+255),b	;volatile
 21583  0034AA  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 21584  0034AC  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21585  0034AE  6FBC               	movwf	(_var_sys_NVM+36)& (0+255),b	;volatile
 21586  0034B0  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 21587  0034B2  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21588  0034B4  6FBD               	movwf	(_var_sys_NVM+37)& (0+255),b	;volatile
 21589                           
 21590                           ;eusartparser.c: 390:                 break;
 21591  0034B6  0012               	return	
 21592  0034B8                     l3629:
 21593                           
 21594                           ; BSR set to: 0
 21595                           ;eusartparser.c: 395:                 var_sys_NVM.OnlyRollingCode=package.data.data8[1];
 21596  0034B8  C013  F0BE         	movff	write_eusartparser@package+3,_var_sys_NVM+38	;volatile
 21597                           
 21598                           ;eusartparser.c: 396:                 break;
 21599  0034BC  0012               	return	
 21600  0034BE                     l16432:
 21601                           
 21602                           ; BSR set to: 0
 21603                           ;eusartparser.c: 399:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21604  0034BE  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21605  0034C0  6E17               	movwf	??_write_eusartparser^0,c
 21606  0034C2  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21607  0034C4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21608  0034C6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21609  0034C8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21610  0034CA  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21611  0034CE  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21612  0034D2  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21613  0034D4  6A17               	clrf	??_write_eusartparser^0,c
 21614  0034D6  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21615  0034D8  1017               	iorwf	??_write_eusartparser^0,w,c
 21616  0034DA  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21617  0034DC  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21618  0034DE  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21619  0034E0  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21620  0034E2  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21621  0034E4  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21622  0034E6  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21623  0034E8  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21624  0034EA  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21625  0034EC  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21626                           
 21627                           ;eusartparser.c: 400:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(1*16));
 21628  0034EE  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21629  0034F0  6E17               	movwf	??_write_eusartparser^0,c
 21630  0034F2  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21631  0034F4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21632  0034F6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21633  0034F8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21634  0034FA  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21635  0034FE  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21636  003502  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21637  003504  6A17               	clrf	??_write_eusartparser^0,c
 21638  003506  1C17               	comf	??_write_eusartparser^0,w,c
 21639  003508  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21640  00350A  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21641  00350C  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21642  00350E  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21643  003510  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21644  003512  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21645  003514  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21646  003516  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21647  003518  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21648  00351A  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21649  00351C  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21650  00351E  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21651  003520  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21652  003522  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21653  003524  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21654  003526  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21655  003528  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21656  00352A  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21657  00352C  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21658                           
 21659                           ;eusartparser.c: 401:                 break;
 21660  00352E  0012               	return	
 21661  003530                     l16434:
 21662                           
 21663                           ; BSR set to: 0
 21664                           ;eusartparser.c: 403:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21665  003530  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21666  003532  11C0               	iorwf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21667  003534  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21668  003536  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21669  003538  11C1               	iorwf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21670  00353A  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21671  00353C  0E00               	movlw	0
 21672  00353E  11C2               	iorwf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21673  003540  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21674  003542  0E00               	movlw	0
 21675  003544  11C3               	iorwf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21676  003546  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21677                           
 21678                           ;eusartparser.c: 404:                 var_sys_NVM.learningCurrentDecelarationClose=var_s
      +                          ys_NVM.learningCurrentDecelarationClose&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint
      +                          8_t)(0*16));
 21679  003548  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21680  00354A  6E17               	movwf	??_write_eusartparser^0,c
 21681  00354C  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21682  00354E  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21683  003550  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21684  003552  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21685  003554  1C17               	comf	??_write_eusartparser^0,w,c
 21686  003556  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21687  003558  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21688  00355A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21689  00355C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21690  00355E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21691  003560  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21692  003562  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21693  003564  51C0               	movf	(_var_sys_NVM+40)& (0+255),w,b	;volatile
 21694  003566  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21695  003568  6FC0               	movwf	(_var_sys_NVM+40)& (0+255),b	;volatile
 21696  00356A  51C1               	movf	(_var_sys_NVM+41)& (0+255),w,b	;volatile
 21697  00356C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21698  00356E  6FC1               	movwf	(_var_sys_NVM+41)& (0+255),b	;volatile
 21699  003570  51C2               	movf	(_var_sys_NVM+42)& (0+255),w,b	;volatile
 21700  003572  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21701  003574  6FC2               	movwf	(_var_sys_NVM+42)& (0+255),b	;volatile
 21702  003576  51C3               	movf	(_var_sys_NVM+43)& (0+255),w,b	;volatile
 21703  003578  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21704  00357A  6FC3               	movwf	(_var_sys_NVM+43)& (0+255),b	;volatile
 21705                           
 21706                           ;eusartparser.c: 405:                 break;
 21707  00357C  0012               	return	
 21708  00357E                     l16436:
 21709                           
 21710                           ; BSR set to: 0
 21711                           ;eusartparser.c: 408:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (1*16));
 21712  00357E  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21713  003580  6E17               	movwf	??_write_eusartparser^0,c
 21714  003582  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21715  003584  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21716  003586  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21717  003588  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21718  00358A  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21719  00358E  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21720  003592  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21721  003594  6A17               	clrf	??_write_eusartparser^0,c
 21722  003596  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21723  003598  1017               	iorwf	??_write_eusartparser^0,w,c
 21724  00359A  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21725  00359C  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21726  00359E  1018               	iorwf	(??_write_eusartparser+1)^0,w,c
 21727  0035A0  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21728  0035A2  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21729  0035A4  1019               	iorwf	(??_write_eusartparser+2)^0,w,c
 21730  0035A6  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21731  0035A8  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21732  0035AA  101A               	iorwf	(??_write_eusartparser+3)^0,w,c
 21733  0035AC  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21734                           
 21735                           ;eusartparser.c: 409:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(1*16));
 21736  0035AE  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21737  0035B0  6E17               	movwf	??_write_eusartparser^0,c
 21738  0035B2  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21739  0035B4  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21740  0035B6  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21741  0035B8  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21742  0035BA  C018  F01A         	movff	??_write_eusartparser+1,??_write_eusartparser+3
 21743  0035BE  C017  F019         	movff	??_write_eusartparser,??_write_eusartparser+2
 21744  0035C2  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21745  0035C4  6A17               	clrf	??_write_eusartparser^0,c
 21746  0035C6  1C17               	comf	??_write_eusartparser^0,w,c
 21747  0035C8  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21748  0035CA  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21749  0035CC  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21750  0035CE  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21751  0035D0  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21752  0035D2  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21753  0035D4  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21754  0035D6  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21755  0035D8  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21756  0035DA  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21757  0035DC  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21758  0035DE  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21759  0035E0  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21760  0035E2  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21761  0035E4  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21762  0035E6  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21763  0035E8  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21764  0035EA  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21765  0035EC  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21766                           
 21767                           ;eusartparser.c: 410:                 break;
 21768  0035EE  0012               	return	
 21769  0035F0                     l16438:
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;eusartparser.c: 412:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen|((uint32_t)(package.data.data16&0xFFFF)<<(uint8_t)
      +                          (0*16));
 21773  0035F0  5012               	movf	(write_eusartparser@package+2)^0,w,c
 21774  0035F2  11C4               	iorwf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21775  0035F4  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21776  0035F6  5013               	movf	(write_eusartparser@package+3)^0,w,c
 21777  0035F8  11C5               	iorwf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21778  0035FA  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21779  0035FC  0E00               	movlw	0
 21780  0035FE  11C6               	iorwf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21781  003600  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21782  003602  0E00               	movlw	0
 21783  003604  11C7               	iorwf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21784  003606  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21785                           
 21786                           ;eusartparser.c: 413:                 var_sys_NVM.learningCurrentDecelarationOpen=var_sy
      +                          s_NVM.learningCurrentDecelarationOpen&~((uint32_t)(~package.data.data16&0xFFFF)<<(uint8_
      +                          t)(0*16));
 21787  003608  1C12               	comf	(write_eusartparser@package+2)^0,w,c
 21788  00360A  6E17               	movwf	??_write_eusartparser^0,c
 21789  00360C  1C13               	comf	(write_eusartparser@package+3)^0,w,c
 21790  00360E  6E18               	movwf	(??_write_eusartparser+1)^0,c
 21791  003610  6A19               	clrf	(??_write_eusartparser+2)^0,c
 21792  003612  6A1A               	clrf	(??_write_eusartparser+3)^0,c
 21793  003614  1C17               	comf	??_write_eusartparser^0,w,c
 21794  003616  6E1B               	movwf	(??_write_eusartparser+4)^0,c
 21795  003618  1C18               	comf	(??_write_eusartparser+1)^0,w,c
 21796  00361A  6E1C               	movwf	(??_write_eusartparser+5)^0,c
 21797  00361C  1C19               	comf	(??_write_eusartparser+2)^0,w,c
 21798  00361E  6E1D               	movwf	(??_write_eusartparser+6)^0,c
 21799  003620  1C1A               	comf	(??_write_eusartparser+3)^0,w,c
 21800  003622  6E1E               	movwf	(??_write_eusartparser+7)^0,c
 21801  003624  51C4               	movf	(_var_sys_NVM+44)& (0+255),w,b	;volatile
 21802  003626  141B               	andwf	(??_write_eusartparser+4)^0,w,c
 21803  003628  6FC4               	movwf	(_var_sys_NVM+44)& (0+255),b	;volatile
 21804  00362A  51C5               	movf	(_var_sys_NVM+45)& (0+255),w,b	;volatile
 21805  00362C  141C               	andwf	(??_write_eusartparser+5)^0,w,c
 21806  00362E  6FC5               	movwf	(_var_sys_NVM+45)& (0+255),b	;volatile
 21807  003630  51C6               	movf	(_var_sys_NVM+46)& (0+255),w,b	;volatile
 21808  003632  141D               	andwf	(??_write_eusartparser+6)^0,w,c
 21809  003634  6FC6               	movwf	(_var_sys_NVM+46)& (0+255),b	;volatile
 21810  003636  51C7               	movf	(_var_sys_NVM+47)& (0+255),w,b	;volatile
 21811  003638  141E               	andwf	(??_write_eusartparser+7)^0,w,c
 21812  00363A  6FC7               	movwf	(_var_sys_NVM+47)& (0+255),b	;volatile
 21813                           
 21814                           ;eusartparser.c: 414:                 break;
 21815  00363C  0012               	return	
 21816  00363E                     l3634:
 21817                           
 21818                           ; BSR set to: 0
 21819                           ;eusartparser.c: 417:                 var_sys_NVM.learningCurrentNormalClose=package.dat
      +                          a.data16;
 21820  00363E  C012  F0C8         	movff	write_eusartparser@package+2,_var_sys_NVM+48	;volatile
 21821  003642  C013  F0C9         	movff	write_eusartparser@package+3,_var_sys_NVM+49	;volatile
 21822                           
 21823                           ;eusartparser.c: 418:                 break;
 21824  003646  0012               	return	
 21825  003648                     l3635:
 21826                           
 21827                           ; BSR set to: 0
 21828                           ;eusartparser.c: 421:                 var_sys_NVM.learningCurrentNormalOpen=package.data
      +                          .data16;
 21829  003648  C012  F0CA         	movff	write_eusartparser@package+2,_var_sys_NVM+50	;volatile
 21830  00364C  C013  F0CB         	movff	write_eusartparser@package+3,_var_sys_NVM+51	;volatile
 21831                           
 21832                           ;eusartparser.c: 422:                 break;
 21833  003650  0012               	return	
 21834  003652                     l16450:
 21835                           
 21836                           ; BSR set to: 0
 21837  003652  5011               	movf	(write_eusartparser@package+1)^0,w,c
 21838  003654  6E17               	movwf	??_write_eusartparser^0,c
 21839  003656  6A18               	clrf	(??_write_eusartparser+1)^0,c
 21840                           
 21841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21842                           ; Switch size 1, requested type "simple"
 21843                           ; Number of cases is 1, Range of values is 0 to 0
 21844                           ; switch strategies available:
 21845                           ; Name         Instructions Cycles
 21846                           ; simple_byte            4     3 (average)
 21847                           ;	Chosen strategy is simple_byte
 21848  003658  5018               	movf	(??_write_eusartparser+1)^0,w,c
 21849  00365A  0A00               	xorlw	0	; case 0
 21850  00365C  A4D8               	btfss	status,2,c
 21851  00365E  0012               	return	
 21852                           
 21853                           ; BSR set to: 0
 21854                           ; Switch size 1, requested type "simple"
 21855                           ; Number of cases is 43, Range of values is 0 to 51
 21856                           ; switch strategies available:
 21857                           ; Name         Instructions Cycles
 21858                           ; simple_byte          130    66 (average)
 21859                           ;	Chosen strategy is simple_byte
 21860  003660  5017               	movf	??_write_eusartparser^0,w,c
 21861  003662  0A00               	xorlw	0	; case 0
 21862  003664  B4D8               	btfsc	status,2,c
 21863  003666  D675               	goto	l3597
 21864  003668  0A02               	xorlw	2	; case 2
 21865  00366A  B4D8               	btfsc	status,2,c
 21866  00366C  D67F               	goto	l3602
 21867  00366E  0A01               	xorlw	1	; case 3
 21868  003670  B4D8               	btfsc	status,2,c
 21869  003672  D6A5               	goto	l3616
 21870  003674  0A06               	xorlw	6	; case 5
 21871  003676  B4D8               	btfsc	status,2,c
 21872  003678  D67E               	goto	l3604
 21873  00367A  0A02               	xorlw	2	; case 7
 21874  00367C  B4D8               	btfsc	status,2,c
 21875  00367E  D697               	goto	l3613
 21876  003680  0A0F               	xorlw	15	; case 8
 21877  003682  B4D8               	btfsc	status,2,c
 21878  003684  D6AB               	goto	l3623
 21879  003686  0A02               	xorlw	2	; case 10
 21880  003688  B4D8               	btfsc	status,2,c
 21881  00368A  D69C               	goto	l3618
 21882  00368C  0A1A               	xorlw	26	; case 16
 21883  00368E  B4D8               	btfsc	status,2,c
 21884  003690  D660               	goto	l3597
 21885  003692  0A01               	xorlw	1	; case 17
 21886  003694  B4D8               	btfsc	status,2,c
 21887  003696  D662               	goto	l3599
 21888  003698  0A03               	xorlw	3	; case 18
 21889  00369A  B4D8               	btfsc	status,2,c
 21890  00369C  D664               	goto	l3600
 21891  00369E  0A01               	xorlw	1	; case 19
 21892  0036A0  B4D8               	btfsc	status,2,c
 21893  0036A2  D664               	goto	l3602
 21894  0036A4  0A07               	xorlw	7	; case 20
 21895  0036A6  B4D8               	btfsc	status,2,c
 21896  0036A8  D666               	goto	l3604
 21897  0036AA  0A01               	xorlw	1	; case 21
 21898  0036AC  B4D8               	btfsc	status,2,c
 21899  0036AE  D668               	goto	l3605
 21900  0036B0  0A03               	xorlw	3	; case 22
 21901  0036B2  B4D8               	btfsc	status,2,c
 21902  0036B4  D66A               	goto	l3606
 21903  0036B6  0A01               	xorlw	1	; case 23
 21904  0036B8  B4D8               	btfsc	status,2,c
 21905  0036BA  D66A               	goto	l3607
 21906  0036BC  0A0F               	xorlw	15	; case 24
 21907  0036BE  B4D8               	btfsc	status,2,c
 21908  0036C0  D66A               	goto	l3608
 21909  0036C2  0A01               	xorlw	1	; case 25
 21910  0036C4  B4D8               	btfsc	status,2,c
 21911  0036C6  D66A               	goto	l3609
 21912  0036C8  0A03               	xorlw	3	; case 26
 21913  0036CA  B4D8               	btfsc	status,2,c
 21914  0036CC  D66A               	goto	l3610
 21915  0036CE  0A01               	xorlw	1	; case 27
 21916  0036D0  B4D8               	btfsc	status,2,c
 21917  0036D2  D66A               	goto	l3611
 21918  0036D4  0A07               	xorlw	7	; case 28
 21919  0036D6  B4D8               	btfsc	status,2,c
 21920  0036D8  D66A               	goto	l3613
 21921  0036DA  0A01               	xorlw	1	; case 29
 21922  0036DC  B4D8               	btfsc	status,2,c
 21923  0036DE  D66A               	goto	l3614
 21924  0036E0  0A03               	xorlw	3	; case 30
 21925  0036E2  B4D8               	btfsc	status,2,c
 21926  0036E4  D66C               	goto	l3616
 21927  0036E6  0A01               	xorlw	1	; case 31
 21928  0036E8  B4D8               	btfsc	status,2,c
 21929  0036EA  D66C               	goto	l3618
 21930  0036EC  0A3F               	xorlw	63	; case 32
 21931  0036EE  B4D8               	btfsc	status,2,c
 21932  0036F0  D66C               	goto	l3619
 21933  0036F2  0A01               	xorlw	1	; case 33
 21934  0036F4  B4D8               	btfsc	status,2,c
 21935  0036F6  D66C               	goto	l3620
 21936  0036F8  0A03               	xorlw	3	; case 34
 21937  0036FA  B4D8               	btfsc	status,2,c
 21938  0036FC  D66C               	goto	l3621
 21939  0036FE  0A01               	xorlw	1	; case 35
 21940  003700  B4D8               	btfsc	status,2,c
 21941  003702  D66C               	goto	l3623
 21942  003704  0A07               	xorlw	7	; case 36
 21943  003706  B4D8               	btfsc	status,2,c
 21944  003708  D66C               	goto	l3624
 21945  00370A  0A01               	xorlw	1	; case 37
 21946  00370C  B4D8               	btfsc	status,2,c
 21947  00370E  D66C               	goto	l3625
 21948  003710  0A03               	xorlw	3	; case 38
 21949  003712  B4D8               	btfsc	status,2,c
 21950  003714  D66C               	goto	l3626
 21951  003716  0A01               	xorlw	1	; case 39
 21952  003718  B4D8               	btfsc	status,2,c
 21953  00371A  D66E               	goto	l16428
 21954  00371C  0A0F               	xorlw	15	; case 40
 21955  00371E  B4D8               	btfsc	status,2,c
 21956  003720  D6A4               	goto	l16430
 21957  003722  0A01               	xorlw	1	; case 41
 21958  003724  B4D8               	btfsc	status,2,c
 21959  003726  D6C8               	goto	l3629
 21960  003728  0A03               	xorlw	3	; case 42
 21961  00372A  B4D8               	btfsc	status,2,c
 21962  00372C  D6C8               	goto	l16432
 21963  00372E  0A01               	xorlw	1	; case 43
 21964  003730  B4D8               	btfsc	status,2,c
 21965  003732  D6FE               	goto	l16434
 21966  003734  0A07               	xorlw	7	; case 44
 21967  003736  B4D8               	btfsc	status,2,c
 21968  003738  D722               	goto	l16436
 21969  00373A  0A01               	xorlw	1	; case 45
 21970  00373C  B4D8               	btfsc	status,2,c
 21971  00373E  D758               	goto	l16438
 21972  003740  0A03               	xorlw	3	; case 46
 21973  003742  B4D8               	btfsc	status,2,c
 21974  003744  D77C               	goto	l3634
 21975  003746  0A01               	xorlw	1	; case 47
 21976  003748  B4D8               	btfsc	status,2,c
 21977  00374A  D77E               	goto	l3635
 21978  00374C  0A1F               	xorlw	31	; case 48
 21979  00374E  B4D8               	btfsc	status,2,c
 21980  003750  D716               	goto	l16436
 21981  003752  0A01               	xorlw	1	; case 49
 21982  003754  B4D8               	btfsc	status,2,c
 21983  003756  D74C               	goto	l16438
 21984  003758  0A03               	xorlw	3	; case 50
 21985  00375A  B4D8               	btfsc	status,2,c
 21986  00375C  D710               	goto	l16436
 21987  00375E  0A01               	xorlw	1	; case 51
 21988  003760  A4D8               	btfss	status,2,c
 21989  003762  0012               	return	
 21990  003764  D745               	goto	l16438
 21991  003766                     __end_of_write_eusartparser:
 21992                           	callstack 0
 21993                           
 21994 ;; *************** function _validateRemoteSerialNumber *****************
 21995 ;; Defined at:
 21996 ;;		line 27 in file "controlMemory_MC50.c"
 21997 ;; Parameters:    Size  Location     Type
 21998 ;;  serial          4   45[COMRAM] unsigned long 
 21999 ;;  VerifyOnlySe    1   49[COMRAM] enum E10564
 22000 ;;  position        2   50[COMRAM] PTR unsigned char 
 22001 ;;		 -> eusartparser@pos(1), controlSelectRemote@pos(1), classic_data(16), 
 22002 ;; Auto vars:     Size  Location     Type
 22003 ;;  mask            4   52[COMRAM] unsigned long 
 22004 ;;  i               1   57[COMRAM] unsigned char 
 22005 ;;  j               1   56[COMRAM] unsigned char 
 22006 ;; Return value:  Size  Location     Type
 22007 ;;                  1    wreg      enum E10539
 22008 ;; Registers used:
 22009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22010 ;; Tracked objects:
 22011 ;;		On entry : 3F/0
 22012 ;;		On exit  : 3F/0
 22013 ;;		Unchanged: 0/0
 22014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22015 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22016 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22017 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22018 ;;      Totals:        13       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22019 ;;Total ram usage:       21 bytes
 22020 ;; Hardware stack levels used: 1
 22021 ;; Hardware stack levels required when called: 13
 22022 ;; This function calls:
 22023 ;;		_i2c_readDataBlock
 22024 ;; This function is called by:
 22025 ;;		_keeloqDecryptPacket
 22026 ;;		_DecryptPacket_12BIT
 22027 ;;		_controlSelectRemote
 22028 ;;		_eusartparser
 22029 ;; This function uses a non-reentrant model
 22030 ;;
 22031                           
 22032                           	psect	text76
 22033  005992                     __ptext76:
 22034                           	callstack 0
 22035  005992                     _validateRemoteSerialNumber:
 22036                           	callstack 14
 22037                           
 22038                           ; BSR set to: 0
 22039                           ;controlMemory_MC50.c: 29:     char j=0;
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;incstack = 0
 22043  005992  0E00               	movlw	0
 22044  005994  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;controlMemory_MC50.c: 30:     unsigned long mask;;controlMemory_MC50.c: 33:     if(Veri
      +                          fyOnlySerial==YES)
 22048  005996  0432               	decf	validateRemoteSerialNumber@VerifyOnlySerial^0,w,c
 22049  005998  A4D8               	btfss	status,2,c
 22050  00599A  D009               	goto	l1436
 22051                           
 22052                           ; BSR set to: 0
 22053                           ;controlMemory_MC50.c: 34:     {;controlMemory_MC50.c: 35:         mask=0x0FFFFFFF;
 22054  00599C  0EFF               	movlw	255
 22055  00599E  6E35               	movwf	validateRemoteSerialNumber@mask^0,c
 22056  0059A0  0EFF               	movlw	255
 22057  0059A2  6E36               	movwf	(validateRemoteSerialNumber@mask+1)^0,c
 22058  0059A4  0EFF               	movlw	255
 22059  0059A6  6E37               	movwf	(validateRemoteSerialNumber@mask+2)^0,c
 22060  0059A8  0E0F               	movlw	15
 22061  0059AA  6E38               	movwf	(validateRemoteSerialNumber@mask+3)^0,c
 22062                           
 22063                           ;controlMemory_MC50.c: 36:     }
 22064  0059AC  D004               	goto	l19998
 22065  0059AE                     l1436:
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;controlMemory_MC50.c: 38:     {;controlMemory_MC50.c: 39:         mask=0xFFFFFFFF;
 22069  0059AE  6835               	setf	validateRemoteSerialNumber@mask^0,c
 22070  0059B0  6836               	setf	(validateRemoteSerialNumber@mask+1)^0,c
 22071  0059B2  6837               	setf	(validateRemoteSerialNumber@mask+2)^0,c
 22072  0059B4  6838               	setf	(validateRemoteSerialNumber@mask+3)^0,c
 22073  0059B6                     l19998:
 22074                           
 22075                           ; BSR set to: 0
 22076                           ;controlMemory_MC50.c: 42:     for (i=0;i<var_sys_NVM.positionRemotesFull;i++)
 22077  0059B6  0E00               	movlw	0
 22078  0059B8  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 22079  0059BA  D056               	goto	l20016
 22080  0059BC                     l20000:
 22081                           
 22082                           ; BSR set to: 0
 22083                           ;controlMemory_MC50.c: 43:     {;controlMemory_MC50.c: 44:         if(i%4==0)
 22084  0059BC  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 22085  0059C0  0E03               	movlw	3
 22086  0059C2  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 22087  0059C4  A4D8               	btfss	status,2,c
 22088  0059C6  D01C               	goto	l20006
 22089                           
 22090                           ; BSR set to: 0
 22091                           ;controlMemory_MC50.c: 45:         {;controlMemory_MC50.c: 46:             j=0;
 22092  0059C8  0E00               	movlw	0
 22093  0059CA  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22094                           
 22095                           ; BSR set to: 0
 22096                           ;controlMemory_MC50.c: 48:             i2c_readDataBlock(0x50, (uint16_t)(0x0200 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 22097  0059CC  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 22098  0059CE  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 22099  0059D0  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 22100  0059D2  90D8               	bcf	status,0,c
 22101  0059D4  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22102  0059D6  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22103  0059D8  90D8               	bcf	status,0,c
 22104  0059DA  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22105  0059DC  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22106  0059DE  0E00               	movlw	0
 22107  0059E0  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 22108  0059E2  6E22               	movwf	i2c_readDataBlock@reg^0,c
 22109  0059E4  0E02               	movlw	2
 22110  0059E6  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22111  0059E8  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 22112  0059EA  0EA4               	movlw	low _memoryTEMP
 22113  0059EC  6E24               	movwf	i2c_readDataBlock@data^0,c
 22114  0059EE  0E02               	movlw	high _memoryTEMP
 22115  0059F0  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 22116  0059F2  0E00               	movlw	0
 22117  0059F4  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 22118  0059F6  0E10               	movlw	16
 22119  0059F8  6E26               	movwf	i2c_readDataBlock@len^0,c
 22120  0059FA  0E50               	movlw	80
 22121  0059FC  ECBE  F040         	call	_i2c_readDataBlock
 22122  005A00                     l20006:
 22123                           
 22124                           ;controlMemory_MC50.c: 50:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 22125  005A00  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 22126  005A02  0D04               	mullw	4
 22127  005A04  0EA4               	movlw	low _memoryTEMP
 22128  005A06  24F3               	addwf	243,w,c
 22129  005A08  6ED9               	movwf	fsr2l,c
 22130  005A0A  0E02               	movlw	high _memoryTEMP
 22131  005A0C  20F4               	addwfc	prodh,w,c
 22132  005A0E  6EDA               	movwf	fsr2h,c
 22133  005A10  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 22134  005A14  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 22135  005A18  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 22136  005A1C  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 22137  005A20  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 22138  005A22  0100               	movlb	0	; () banked
 22139  005A24  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 22140  005A26  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 22141  005A28  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 22142  005A2A  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22143  005A2C  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 22144  005A2E  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 22145  005A30  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 22146  005A32  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 22147  005A34  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 22148  005A36  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 22149  005A38  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 22150  005A3A  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 22151  005A3C  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 22152  005A3E  E112               	bnz	l20014
 22153  005A40  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 22154  005A42  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 22155  005A44  E10F               	bnz	l20014
 22156  005A46  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 22157  005A48  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 22158  005A4A  E10C               	bnz	l20014
 22159  005A4C  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 22160  005A4E  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 22161  005A50  A4D8               	btfss	status,2,c
 22162  005A52  D008               	goto	l20014
 22163                           
 22164                           ; BSR set to: 0
 22165                           ;controlMemory_MC50.c: 51:         {;controlMemory_MC50.c: 53:             position[0]=i
      +                          ;
 22166  005A54  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 22167  005A58  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 22168  005A5C  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 22169                           
 22170                           ; BSR set to: 0
 22171                           ;controlMemory_MC50.c: 54:             return TypeFull;
 22172  005A60  0E01               	movlw	1
 22173  005A62  0012               	return	
 22174  005A64                     l20014:
 22175                           
 22176                           ; BSR set to: 0
 22177                           ;controlMemory_MC50.c: 57:         j++;
 22178  005A64  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 22179                           
 22180                           ;controlMemory_MC50.c: 59:     }
 22181  005A66  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 22182  005A68                     l20016:
 22183                           
 22184                           ; BSR set to: 0
 22185  005A68  51B8               	movf	(_var_sys_NVM+32)& (0+255),w,b	;volatile
 22186  005A6A  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 22187  005A6C  A0D8               	btfss	status,0,c
 22188  005A6E  D7A6               	goto	l20000
 22189                           
 22190                           ; BSR set to: 0
 22191                           ;controlMemory_MC50.c: 61:     for (i=0;i<var_sys_NVM.positionRemotesWalk;i++)
 22192  005A70  0E00               	movlw	0
 22193  005A72  6E3A               	movwf	validateRemoteSerialNumber@i^0,c
 22194  005A74  D056               	goto	l20036
 22195  005A76                     l20020:
 22196                           
 22197                           ; BSR set to: 0
 22198                           ;controlMemory_MC50.c: 62:     {;controlMemory_MC50.c: 63:         if(i%4==0)
 22199  005A76  C03A  F0D8         	movff	validateRemoteSerialNumber@i,??_validateRemoteSerialNumber
 22200  005A7A  0E03               	movlw	3
 22201  005A7C  17D8               	andwf	??_validateRemoteSerialNumber& (0+255),f,b
 22202  005A7E  A4D8               	btfss	status,2,c
 22203  005A80  D01C               	goto	l20026
 22204                           
 22205                           ; BSR set to: 0
 22206                           ;controlMemory_MC50.c: 64:         {;controlMemory_MC50.c: 65:             j=0;
 22207  005A82  0E00               	movlw	0
 22208  005A84  6E39               	movwf	validateRemoteSerialNumber@j^0,c
 22209                           
 22210                           ; BSR set to: 0
 22211                           ;controlMemory_MC50.c: 66:             i2c_readDataBlock(0x50, (uint16_t)(0x0500 + (i * 
      +                          4)),(char*)memoryTEMP, 16);
 22212  005A86  503A               	movf	validateRemoteSerialNumber@i^0,w,c
 22213  005A88  6FD8               	movwf	??_validateRemoteSerialNumber& (0+255),b
 22214  005A8A  6BD9               	clrf	(??_validateRemoteSerialNumber+1)& (0+255),b
 22215  005A8C  90D8               	bcf	status,0,c
 22216  005A8E  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22217  005A90  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22218  005A92  90D8               	bcf	status,0,c
 22219  005A94  37D8               	rlcf	??_validateRemoteSerialNumber& (0+255),f,b
 22220  005A96  37D9               	rlcf	(??_validateRemoteSerialNumber+1)& (0+255),f,b
 22221  005A98  0E00               	movlw	0
 22222  005A9A  25D8               	addwf	??_validateRemoteSerialNumber& (0+255),w,b
 22223  005A9C  6E22               	movwf	i2c_readDataBlock@reg^0,c
 22224  005A9E  0E05               	movlw	5
 22225  005AA0  21D9               	addwfc	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22226  005AA2  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 22227  005AA4  0EA4               	movlw	low _memoryTEMP
 22228  005AA6  6E24               	movwf	i2c_readDataBlock@data^0,c
 22229  005AA8  0E02               	movlw	high _memoryTEMP
 22230  005AAA  6E25               	movwf	(i2c_readDataBlock@data+1)^0,c
 22231  005AAC  0E00               	movlw	0
 22232  005AAE  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 22233  005AB0  0E10               	movlw	16
 22234  005AB2  6E26               	movwf	i2c_readDataBlock@len^0,c
 22235  005AB4  0E50               	movlw	80
 22236  005AB6  ECBE  F040         	call	_i2c_readDataBlock
 22237  005ABA                     l20026:
 22238                           
 22239                           ;controlMemory_MC50.c: 69:         if((unsigned long)serial==((unsigned long)memoryTEMP[
      +                          j]&mask))
 22240  005ABA  5039               	movf	validateRemoteSerialNumber@j^0,w,c
 22241  005ABC  0D04               	mullw	4
 22242  005ABE  0EA4               	movlw	low _memoryTEMP
 22243  005AC0  24F3               	addwf	243,w,c
 22244  005AC2  6ED9               	movwf	fsr2l,c
 22245  005AC4  0E02               	movlw	high _memoryTEMP
 22246  005AC6  20F4               	addwfc	prodh,w,c
 22247  005AC8  6EDA               	movwf	fsr2h,c
 22248  005ACA  CFDE F0D8          	movff	postinc2,??_validateRemoteSerialNumber
 22249  005ACE  CFDE F0D9          	movff	postinc2,??_validateRemoteSerialNumber+1
 22250  005AD2  CFDE F0DA          	movff	postinc2,??_validateRemoteSerialNumber+2
 22251  005AD6  CFDE F0DB          	movff	postinc2,??_validateRemoteSerialNumber+3
 22252  005ADA  5035               	movf	validateRemoteSerialNumber@mask^0,w,c
 22253  005ADC  0100               	movlb	0	; () banked
 22254  005ADE  15D8               	andwf	??_validateRemoteSerialNumber& (0+255),w,b
 22255  005AE0  6FDC               	movwf	(??_validateRemoteSerialNumber+4)& (0+255),b
 22256  005AE2  5036               	movf	(validateRemoteSerialNumber@mask+1)^0,w,c
 22257  005AE4  15D9               	andwf	(??_validateRemoteSerialNumber+1)& (0+255),w,b
 22258  005AE6  6FDD               	movwf	(??_validateRemoteSerialNumber+5)& (0+255),b
 22259  005AE8  5037               	movf	(validateRemoteSerialNumber@mask+2)^0,w,c
 22260  005AEA  15DA               	andwf	(??_validateRemoteSerialNumber+2)& (0+255),w,b
 22261  005AEC  6FDE               	movwf	(??_validateRemoteSerialNumber+6)& (0+255),b
 22262  005AEE  5038               	movf	(validateRemoteSerialNumber@mask+3)^0,w,c
 22263  005AF0  15DB               	andwf	(??_validateRemoteSerialNumber+3)& (0+255),w,b
 22264  005AF2  6FDF               	movwf	(??_validateRemoteSerialNumber+7)& (0+255),b
 22265  005AF4  502E               	movf	validateRemoteSerialNumber@serial^0,w,c
 22266  005AF6  19DC               	xorwf	(??_validateRemoteSerialNumber+4)& (0+255),w,b
 22267  005AF8  E112               	bnz	l20034
 22268  005AFA  502F               	movf	(validateRemoteSerialNumber@serial+1)^0,w,c
 22269  005AFC  19DD               	xorwf	(??_validateRemoteSerialNumber+5)& (0+255),w,b
 22270  005AFE  E10F               	bnz	l20034
 22271  005B00  5030               	movf	(validateRemoteSerialNumber@serial+2)^0,w,c
 22272  005B02  19DE               	xorwf	(??_validateRemoteSerialNumber+6)& (0+255),w,b
 22273  005B04  E10C               	bnz	l20034
 22274  005B06  5031               	movf	(validateRemoteSerialNumber@serial+3)^0,w,c
 22275  005B08  19DF               	xorwf	(??_validateRemoteSerialNumber+7)& (0+255),w,b
 22276  005B0A  A4D8               	btfss	status,2,c
 22277  005B0C  D008               	goto	l20034
 22278                           
 22279                           ; BSR set to: 0
 22280                           ;controlMemory_MC50.c: 70:         {;controlMemory_MC50.c: 72:             position[0]=i
      +                          ;
 22281  005B0E  C033  FFD9         	movff	validateRemoteSerialNumber@position,fsr2l
 22282  005B12  C034  FFDA         	movff	validateRemoteSerialNumber@position+1,fsr2h
 22283  005B16  C03A  FFDF         	movff	validateRemoteSerialNumber@i,indf2
 22284                           
 22285                           ; BSR set to: 0
 22286                           ;controlMemory_MC50.c: 73:             return TypeWalk;
 22287  005B1A  0E02               	movlw	2
 22288  005B1C  0012               	return	
 22289  005B1E                     l20034:
 22290                           
 22291                           ; BSR set to: 0
 22292                           ;controlMemory_MC50.c: 75:         j++;
 22293  005B1E  2A39               	incf	validateRemoteSerialNumber@j^0,f,c
 22294                           
 22295                           ;controlMemory_MC50.c: 76:     }
 22296  005B20  2A3A               	incf	validateRemoteSerialNumber@i^0,f,c
 22297  005B22                     l20036:
 22298                           
 22299                           ; BSR set to: 0
 22300  005B22  51B9               	movf	(_var_sys_NVM+33)& (0+255),w,b	;volatile
 22301  005B24  5C3A               	subwf	validateRemoteSerialNumber@i^0,w,c
 22302  005B26  A0D8               	btfss	status,0,c
 22303  005B28  D7A6               	goto	l20020
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;controlMemory_MC50.c: 78:     return NoCMD;
 22307  005B2A  0E00               	movlw	0
 22308                           
 22309                           ; BSR set to: 0
 22310  005B2C  0012               	return		;funcret
 22311  005B2E                     __end_of_validateRemoteSerialNumber:
 22312                           	callstack 0
 22313                           
 22314 ;; *************** function _saveNewSerial *****************
 22315 ;; Defined at:
 22316 ;;		line 81 in file "controlMemory_MC50.c"
 22317 ;; Parameters:    Size  Location     Type
 22318 ;;  cmdType         1    wreg     unsigned char 
 22319 ;;  tempSerial      4    0[BANK0 ] unsigned long 
 22320 ;;  position        1    4[BANK0 ] unsigned char 
 22321 ;; Auto vars:     Size  Location     Type
 22322 ;;  cmdType         1   57[COMRAM] unsigned char 
 22323 ;; Return value:  Size  Location     Type
 22324 ;;                  1    wreg      void 
 22325 ;; Registers used:
 22326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22327 ;; Tracked objects:
 22328 ;;		On entry : 3E/1
 22329 ;;		On exit  : 0/0
 22330 ;;		Unchanged: 0/0
 22331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22332 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22334 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22335 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22336 ;;Total ram usage:        8 bytes
 22337 ;; Hardware stack levels used: 1
 22338 ;; Hardware stack levels required when called: 13
 22339 ;; This function calls:
 22340 ;;		_i2c_writeNBytes
 22341 ;; This function is called by:
 22342 ;;		_controlSelectRemote
 22343 ;;		_eusartparser
 22344 ;; This function uses a non-reentrant model
 22345 ;;
 22346                           
 22347                           	psect	text77
 22348  0082D6                     __ptext77:
 22349                           	callstack 0
 22350  0082D6                     _saveNewSerial:
 22351                           	callstack 14
 22352                           
 22353                           ; BSR set to: 0
 22354                           ;incstack = 0
 22355                           ;saveNewSerial@cmdType stored from wreg
 22356  0082D6  6E3A               	movwf	saveNewSerial@cmdType^0,c
 22357                           
 22358                           ;controlMemory_MC50.c: 81: void saveNewSerial(char cmdType,unsigned long tempSerial, cha
      +                          r position);controlMemory_MC50.c: 82: {;controlMemory_MC50.c: 83:     if(cmdType==0)
 22359  0082D8  503A               	movf	saveNewSerial@cmdType^0,w,c
 22360  0082DA  A4D8               	btfss	status,2,c
 22361  0082DC  D01A               	goto	l20046
 22362                           
 22363                           ;controlMemory_MC50.c: 84:     {;controlMemory_MC50.c: 86:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 22364  0082DE  0100               	movlb	0	; () banked
 22365  0082E0  51DC               	movf	saveNewSerial@position& (0+255),w,b
 22366  0082E2  6FDD               	movwf	??_saveNewSerial& (0+255),b
 22367  0082E4  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 22368  0082E6  90D8               	bcf	status,0,c
 22369  0082E8  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22370  0082EA  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22371  0082EC  90D8               	bcf	status,0,c
 22372  0082EE  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22373  0082F0  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22374  0082F2  0E00               	movlw	0
 22375  0082F4  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 22376  0082F6  6E22               	movwf	i2c_writeNBytes@reg^0,c
 22377  0082F8  0E02               	movlw	2
 22378  0082FA  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 22379  0082FC  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 22380  0082FE  0ED8               	movlw	low saveNewSerial@tempSerial
 22381  008300  6E24               	movwf	i2c_writeNBytes@data^0,c
 22382  008302  0E00               	movlw	0
 22383  008304  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 22384  008306  0E04               	movlw	4
 22385  008308  6E25               	movwf	i2c_writeNBytes@len^0,c
 22386  00830A  0E50               	movlw	80
 22387  00830C  ECF9  F040         	call	_i2c_writeNBytes
 22388                           
 22389                           ;controlMemory_MC50.c: 87:     }
 22390  008310  0012               	return	
 22391  008312                     l20046:
 22392                           
 22393                           ;controlMemory_MC50.c: 89:     {;controlMemory_MC50.c: 91:         i2c_writeNBytes(0x50,
      +                           (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 22394  008312  0100               	movlb	0	; () banked
 22395  008314  51DC               	movf	saveNewSerial@position& (0+255),w,b
 22396  008316  6FDD               	movwf	??_saveNewSerial& (0+255),b
 22397  008318  6BDE               	clrf	(??_saveNewSerial+1)& (0+255),b
 22398  00831A  90D8               	bcf	status,0,c
 22399  00831C  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22400  00831E  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22401  008320  90D8               	bcf	status,0,c
 22402  008322  37DD               	rlcf	??_saveNewSerial& (0+255),f,b
 22403  008324  37DE               	rlcf	(??_saveNewSerial+1)& (0+255),f,b
 22404  008326  0E00               	movlw	0
 22405  008328  25DD               	addwf	??_saveNewSerial& (0+255),w,b
 22406  00832A  6E22               	movwf	i2c_writeNBytes@reg^0,c
 22407  00832C  0E05               	movlw	5
 22408  00832E  21DE               	addwfc	(??_saveNewSerial+1)& (0+255),w,b
 22409  008330  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 22410  008332  0ED8               	movlw	low saveNewSerial@tempSerial
 22411  008334  6E24               	movwf	i2c_writeNBytes@data^0,c
 22412  008336  0E00               	movlw	0
 22413  008338  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 22414  00833A  0E04               	movlw	4
 22415  00833C  6E25               	movwf	i2c_writeNBytes@len^0,c
 22416  00833E  0E50               	movlw	80
 22417  008340  ECF9  F040         	call	_i2c_writeNBytes
 22418  008344  0012               	return		;funcret
 22419  008346                     __end_of_saveNewSerial:
 22420                           	callstack 0
 22421                           
 22422 ;; *************** function _read_eusartparser *****************
 22423 ;; Defined at:
 22424 ;;		line 12 in file "eusartparser.c"
 22425 ;; Parameters:    Size  Location     Type
 22426 ;;  package         1   23[COMRAM] PTR struct package_t
 22427 ;;		 -> main@package(7), 
 22428 ;; Auto vars:     Size  Location     Type
 22429 ;;		None
 22430 ;; Return value:  Size  Location     Type
 22431 ;;                  1    wreg      void 
 22432 ;; Registers used:
 22433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22434 ;; Tracked objects:
 22435 ;;		On entry : 3F/0
 22436 ;;		On exit  : 0/0
 22437 ;;		Unchanged: 0/0
 22438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22439 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22442 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22443 ;;Total ram usage:        3 bytes
 22444 ;; Hardware stack levels used: 1
 22445 ;; Hardware stack levels required when called: 6
 22446 ;; This function calls:
 22447 ;;		_write_package
 22448 ;; This function is called by:
 22449 ;;		_eusartparser
 22450 ;; This function uses a non-reentrant model
 22451 ;;
 22452                           
 22453                           	psect	text78
 22454  0029A8                     __ptext78:
 22455                           	callstack 0
 22456  0029A8                     _read_eusartparser:
 22457                           	callstack 23
 22458                           
 22459                           ; BSR set to: 0
 22460                           ;eusartparser.c: 13:         switch(package->address){
 22461                           
 22462                           ;incstack = 0
 22463  0029A8  D203               	goto	l16418
 22464  0029AA                     l16282:
 22465                           
 22466                           ; BSR set to: 0
 22467                           ;eusartparser.c: 18:                 package->data.data8[1]=var_sys_NVM.decelarationClos
      +                          e;
 22468  0029AA  5018               	movf	read_eusartparser@package^0,w,c
 22469  0029AC  6ED9               	movwf	fsr2l,c
 22470  0029AE  6ADA               	clrf	fsr2h,c
 22471  0029B0  0E03               	movlw	3
 22472  0029B2  26D9               	addwf	fsr2l,f,c
 22473  0029B4  C099  FFDF         	movff	_var_sys_NVM+1,indf2	;volatile
 22474                           
 22475                           ;eusartparser.c: 19:                 package->data.data8[0]=var_sys_NVM.decelarationOpen
      +                          ;
 22476  0029B8  5018               	movf	read_eusartparser@package^0,w,c
 22477  0029BA  6ED9               	movwf	fsr2l,c
 22478  0029BC  6ADA               	clrf	fsr2h,c
 22479  0029BE  0E02               	movlw	2
 22480  0029C0  26D9               	addwf	fsr2l,f,c
 22481  0029C2  C098  FFDF         	movff	_var_sys_NVM,indf2	;volatile
 22482  0029C6                     l16284:
 22483                           
 22484                           ; BSR set to: 0
 22485                           ;eusartparser.c: 20:                 write_package(*package);
 22486  0029C6  5018               	movf	read_eusartparser@package^0,w,c
 22487  0029C8  6ED9               	movwf	fsr2l,c
 22488  0029CA  6ADA               	clrf	fsr2h,c
 22489  0029CC  EE00  F011         	lfsr	0,write_package@package
 22490  0029D0  0E06               	movlw	6
 22491  0029D2                     u18341:
 22492  0029D2  CFDB FFEB          	movff	plusw2,plusw0
 22493  0029D6  06E8               	decf	wreg,f,c
 22494  0029D8  E2FC               	bc	u18341
 22495  0029DA  ECC3  F047         	call	_write_package	;wreg free
 22496                           
 22497                           ;eusartparser.c: 21:                 break;
 22498  0029DE  0012               	return	
 22499  0029E0                     l16286:
 22500                           
 22501                           ; BSR set to: 0
 22502                           ;eusartparser.c: 25:                 package->data.data8[1]=var_sys_NVM.motorSensitivity
      +                          ;
 22503  0029E0  5018               	movf	read_eusartparser@package^0,w,c
 22504  0029E2  6ED9               	movwf	fsr2l,c
 22505  0029E4  6ADA               	clrf	fsr2h,c
 22506  0029E6  0E03               	movlw	3
 22507  0029E8  26D9               	addwf	fsr2l,f,c
 22508  0029EA  C09B  FFDF         	movff	_var_sys_NVM+3,indf2	;volatile
 22509                           
 22510                           ;eusartparser.c: 26:                 package->data.data8[0]=var_sys_NVM.motorPower;
 22511  0029EE  5018               	movf	read_eusartparser@package^0,w,c
 22512  0029F0  6ED9               	movwf	fsr2l,c
 22513  0029F2  6ADA               	clrf	fsr2h,c
 22514  0029F4  0E02               	movlw	2
 22515  0029F6  26D9               	addwf	fsr2l,f,c
 22516  0029F8  C09A  FFDF         	movff	_var_sys_NVM+2,indf2	;volatile
 22517  0029FC  D7E4               	goto	l16284
 22518  0029FE                     l16290:
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;eusartparser.c: 32:                 package->data.data8[1]=var_sys_NVM.walkTime;
 22522  0029FE  5018               	movf	read_eusartparser@package^0,w,c
 22523  002A00  6ED9               	movwf	fsr2l,c
 22524  002A02  6ADA               	clrf	fsr2h,c
 22525  002A04  0E03               	movlw	3
 22526  002A06  26D9               	addwf	fsr2l,f,c
 22527  002A08  C09C  FFDF         	movff	_var_sys_NVM+4,indf2	;volatile
 22528  002A0C  D0F9               	goto	L99
 22529  002A0E                     l16294:
 22530                           
 22531                           ; BSR set to: 0
 22532                           ;eusartparser.c: 40:                 package->data.data8[1]=var_sys_NVM.autoTimeWalkClos
      +                          e;
 22533  002A0E  5018               	movf	read_eusartparser@package^0,w,c
 22534  002A10  6ED9               	movwf	fsr2l,c
 22535  002A12  6ADA               	clrf	fsr2h,c
 22536  002A14  0E03               	movlw	3
 22537  002A16  26D9               	addwf	fsr2l,f,c
 22538  002A18  C09E  FFDF         	movff	_var_sys_NVM+6,indf2	;volatile
 22539                           
 22540                           ;eusartparser.c: 41:                 package->data.data8[0]=var_sys_NVM.autoTimeFullClos
      +                          e;
 22541  002A1C  5018               	movf	read_eusartparser@package^0,w,c
 22542  002A1E  6ED9               	movwf	fsr2l,c
 22543  002A20  6ADA               	clrf	fsr2h,c
 22544  002A22  0E02               	movlw	2
 22545  002A24  26D9               	addwf	fsr2l,f,c
 22546  002A26  C09D  FFDF         	movff	_var_sys_NVM+5,indf2	;volatile
 22547  002A2A  D7CD               	goto	l16284
 22548  002A2C                     l16298:
 22549                           
 22550                           ; BSR set to: 0
 22551                           ;eusartparser.c: 48:                 package->data.data8[1]=var_sys_NVM.photoCellInOpen;
 22552  002A2C  5018               	movf	read_eusartparser@package^0,w,c
 22553  002A2E  6ED9               	movwf	fsr2l,c
 22554  002A30  6ADA               	clrf	fsr2h,c
 22555  002A32  0E03               	movlw	3
 22556  002A34  26D9               	addwf	fsr2l,f,c
 22557  002A36  C0A0  FFDF         	movff	_var_sys_NVM+8,indf2	;volatile
 22558                           
 22559                           ;eusartparser.c: 49:                 package->data.data8[0]=var_sys_NVM.photoCellIsON;
 22560  002A3A  5018               	movf	read_eusartparser@package^0,w,c
 22561  002A3C  6ED9               	movwf	fsr2l,c
 22562  002A3E  6ADA               	clrf	fsr2h,c
 22563  002A40  0E02               	movlw	2
 22564  002A42  26D9               	addwf	fsr2l,f,c
 22565  002A44  C09F  FFDF         	movff	_var_sys_NVM+7,indf2	;volatile
 22566  002A48  D7BE               	goto	l16284
 22567  002A4A                     l16302:
 22568                           
 22569                           ; BSR set to: 0
 22570                           ;eusartparser.c: 55:                 package->data.data8[1]=var_sys_NVM.securityBandType
      +                          ;
 22571  002A4A  5018               	movf	read_eusartparser@package^0,w,c
 22572  002A4C  6ED9               	movwf	fsr2l,c
 22573  002A4E  6ADA               	clrf	fsr2h,c
 22574  002A50  0E03               	movlw	3
 22575  002A52  26D9               	addwf	fsr2l,f,c
 22576  002A54  C0A2  FFDF         	movff	_var_sys_NVM+10,indf2	;volatile
 22577                           
 22578                           ;eusartparser.c: 56:                 package->data.data8[0]=var_sys_NVM.securityBandIsON
      +                          ;
 22579  002A58  5018               	movf	read_eusartparser@package^0,w,c
 22580  002A5A  6ED9               	movwf	fsr2l,c
 22581  002A5C  6ADA               	clrf	fsr2h,c
 22582  002A5E  0E02               	movlw	2
 22583  002A60  26D9               	addwf	fsr2l,f,c
 22584  002A62  C0A1  FFDF         	movff	_var_sys_NVM+9,indf2	;volatile
 22585  002A66  D7AF               	goto	l16284
 22586  002A68                     l16306:
 22587                           
 22588                           ; BSR set to: 0
 22589                           ;eusartparser.c: 62:                 package->data.data8[1]=var_sys_NVM.securityBandInOp
      +                          en;
 22590  002A68  5018               	movf	read_eusartparser@package^0,w,c
 22591  002A6A  6ED9               	movwf	fsr2l,c
 22592  002A6C  6ADA               	clrf	fsr2h,c
 22593  002A6E  0E03               	movlw	3
 22594  002A70  26D9               	addwf	fsr2l,f,c
 22595  002A72  C0A3  FFDF         	movff	_var_sys_NVM+11,indf2	;volatile
 22596  002A76  D0C4               	goto	L99
 22597  002A78                     l16310:
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;eusartparser.c: 69:                 package->data.data8[1]=var_sys_NVM.operationMode;
 22601  002A78  5018               	movf	read_eusartparser@package^0,w,c
 22602  002A7A  6ED9               	movwf	fsr2l,c
 22603  002A7C  6ADA               	clrf	fsr2h,c
 22604  002A7E  0E03               	movlw	3
 22605  002A80  26D9               	addwf	fsr2l,f,c
 22606  002A82  C0A4  FFDF         	movff	_var_sys_NVM+12,indf2	;volatile
 22607  002A86  D0BC               	goto	L99
 22608  002A88                     l16314:
 22609                           
 22610                           ; BSR set to: 0
 22611                           ;eusartparser.c: 76:                 package->data.data8[1]=var_sys_NVM.flashLightMode;
 22612  002A88  5018               	movf	read_eusartparser@package^0,w,c
 22613  002A8A  6ED9               	movwf	fsr2l,c
 22614  002A8C  6ADA               	clrf	fsr2h,c
 22615  002A8E  0E03               	movlw	3
 22616  002A90  26D9               	addwf	fsr2l,f,c
 22617  002A92  C0A5  FFDF         	movff	_var_sys_NVM+13,indf2	;volatile
 22618  002A96  D0B4               	goto	L99
 22619  002A98                     l16318:
 22620                           
 22621                           ; BSR set to: 0
 22622                           ;eusartparser.c: 83:                 package->data.data8[1]=var_sys_NVM.programmingDista
      +                          nce;
 22623  002A98  5018               	movf	read_eusartparser@package^0,w,c
 22624  002A9A  6ED9               	movwf	fsr2l,c
 22625  002A9C  6ADA               	clrf	fsr2h,c
 22626  002A9E  0E03               	movlw	3
 22627  002AA0  26D9               	addwf	fsr2l,f,c
 22628  002AA2  C0A6  FFDF         	movff	_var_sys_NVM+14,indf2	;volatile
 22629  002AA6  D0AC               	goto	L99
 22630  002AA8                     l16322:
 22631                           
 22632                           ; BSR set to: 0
 22633                           ;eusartparser.c: 90:                 package->data.data8[1]=var_sys_NVM.decelarationSens
      +                          ivity;
 22634  002AA8  5018               	movf	read_eusartparser@package^0,w,c
 22635  002AAA  6ED9               	movwf	fsr2l,c
 22636  002AAC  6ADA               	clrf	fsr2h,c
 22637  002AAE  0E03               	movlw	3
 22638  002AB0  26D9               	addwf	fsr2l,f,c
 22639  002AB2  C0A7  FFDF         	movff	_var_sys_NVM+15,indf2	;volatile
 22640  002AB6  D0A4               	goto	L99
 22641  002AB8                     l16326:
 22642                           
 22643                           ; BSR set to: 0
 22644                           ;eusartparser.c: 98:                 package->data.data8[1]=var_sys_NVM.homemPresente;
 22645  002AB8  5018               	movf	read_eusartparser@package^0,w,c
 22646  002ABA  6ED9               	movwf	fsr2l,c
 22647  002ABC  6ADA               	clrf	fsr2h,c
 22648  002ABE  0E03               	movlw	3
 22649  002AC0  26D9               	addwf	fsr2l,f,c
 22650  002AC2  C0A8  FFDF         	movff	_var_sys_NVM+16,indf2	;volatile
 22651  002AC6  D09C               	goto	L99
 22652  002AC8                     l16330:
 22653                           
 22654                           ; BSR set to: 0
 22655                           ;eusartparser.c: 106:                 package->data.data8[1]=var_sys_NVM.logicDigital;
 22656  002AC8  5018               	movf	read_eusartparser@package^0,w,c
 22657  002ACA  6ED9               	movwf	fsr2l,c
 22658  002ACC  6ADA               	clrf	fsr2h,c
 22659  002ACE  0E03               	movlw	3
 22660  002AD0  26D9               	addwf	fsr2l,f,c
 22661  002AD2  C0A9  FFDF         	movff	_var_sys_NVM+17,indf2	;volatile
 22662  002AD6  D094               	goto	L99
 22663  002AD8                     l16334:
 22664                           
 22665                           ; BSR set to: 0
 22666                           ;eusartparser.c: 113:                 package->data.data8[1]=var_sys_NVM.softstop;
 22667  002AD8  5018               	movf	read_eusartparser@package^0,w,c
 22668  002ADA  6ED9               	movwf	fsr2l,c
 22669  002ADC  6ADA               	clrf	fsr2h,c
 22670  002ADE  0E03               	movlw	3
 22671  002AE0  26D9               	addwf	fsr2l,f,c
 22672  002AE2  C0AB  FFDF         	movff	_var_sys_NVM+19,indf2	;volatile
 22673                           
 22674                           ;eusartparser.c: 114:                 package->data.data8[0]=var_sys_NVM.softStart;
 22675  002AE6  5018               	movf	read_eusartparser@package^0,w,c
 22676  002AE8  6ED9               	movwf	fsr2l,c
 22677  002AEA  6ADA               	clrf	fsr2h,c
 22678  002AEC  0E02               	movlw	2
 22679  002AEE  26D9               	addwf	fsr2l,f,c
 22680  002AF0  C0AA  FFDF         	movff	_var_sys_NVM+18,indf2	;volatile
 22681  002AF4  D768               	goto	l16284
 22682  002AF6                     l16338:
 22683                           
 22684                           ; BSR set to: 0
 22685                           ;eusartparser.c: 121:                 package->data.data8[1]=var_sys_NVM.ligthTime;
 22686  002AF6  5018               	movf	read_eusartparser@package^0,w,c
 22687  002AF8  6ED9               	movwf	fsr2l,c
 22688  002AFA  6ADA               	clrf	fsr2h,c
 22689  002AFC  0E03               	movlw	3
 22690  002AFE  26D9               	addwf	fsr2l,f,c
 22691  002B00  C0AC  FFDF         	movff	_var_sys_NVM+20,indf2	;volatile
 22692  002B04  D07D               	goto	L99
 22693  002B06                     l16342:
 22694                           
 22695                           ; BSR set to: 0
 22696                           ;eusartparser.c: 129:                 package->data.data8[1]=var_sys_NVM.folow_me;
 22697  002B06  5018               	movf	read_eusartparser@package^0,w,c
 22698  002B08  6ED9               	movwf	fsr2l,c
 22699  002B0A  6ADA               	clrf	fsr2h,c
 22700  002B0C  0E03               	movlw	3
 22701  002B0E  26D9               	addwf	fsr2l,f,c
 22702  002B10  C0AD  FFDF         	movff	_var_sys_NVM+21,indf2	;volatile
 22703  002B14  D075               	goto	L99
 22704  002B16                     l16346:
 22705                           
 22706                           ; BSR set to: 0
 22707                           ;eusartparser.c: 136:                 package->data.data8[1]=var_sys_NVM.Stopboton;
 22708  002B16  5018               	movf	read_eusartparser@package^0,w,c
 22709  002B18  6ED9               	movwf	fsr2l,c
 22710  002B1A  6ADA               	clrf	fsr2h,c
 22711  002B1C  0E03               	movlw	3
 22712  002B1E  26D9               	addwf	fsr2l,f,c
 22713  002B20  C0AE  FFDF         	movff	_var_sys_NVM+22,indf2	;volatile
 22714  002B24  D06D               	goto	L99
 22715  002B26                     l16350:
 22716                           
 22717                           ; BSR set to: 0
 22718                           ;eusartparser.c: 143:                 package->data.data8[1]=var_sys_NVM.electricBrake;
 22719  002B26  5018               	movf	read_eusartparser@package^0,w,c
 22720  002B28  6ED9               	movwf	fsr2l,c
 22721  002B2A  6ADA               	clrf	fsr2h,c
 22722  002B2C  0E03               	movlw	3
 22723  002B2E  26D9               	addwf	fsr2l,f,c
 22724  002B30  C0AF  FFDF         	movff	_var_sys_NVM+23,indf2	;volatile
 22725  002B34  D065               	goto	L99
 22726  002B36                     l16354:
 22727                           
 22728                           ; BSR set to: 0
 22729                           ;eusartparser.c: 150:                 package->data.data8[1]=var_sys_NVM.velocityDecelar
      +                          ation;
 22730  002B36  5018               	movf	read_eusartparser@package^0,w,c
 22731  002B38  6ED9               	movwf	fsr2l,c
 22732  002B3A  6ADA               	clrf	fsr2h,c
 22733  002B3C  0E03               	movlw	3
 22734  002B3E  26D9               	addwf	fsr2l,f,c
 22735  002B40  C0B0  FFDF         	movff	_var_sys_NVM+24,indf2	;volatile
 22736  002B44  D05D               	goto	L99
 22737  002B46                     l16358:
 22738                           
 22739                           ; BSR set to: 0
 22740                           ;eusartparser.c: 158:                 package->data.data8[1]=var_sys_NVM.flashRGBMode;
 22741  002B46  5018               	movf	read_eusartparser@package^0,w,c
 22742  002B48  6ED9               	movwf	fsr2l,c
 22743  002B4A  6ADA               	clrf	fsr2h,c
 22744  002B4C  0E03               	movlw	3
 22745  002B4E  26D9               	addwf	fsr2l,f,c
 22746  002B50  C0B1  FFDF         	movff	_var_sys_NVM+25,indf2	;volatile
 22747  002B54  D055               	goto	L99
 22748  002B56                     l16362:
 22749                           
 22750                           ; BSR set to: 0
 22751                           ;eusartparser.c: 165:                 package->data.data8[1]=var_sys_NVM.Direction_motor
      +                          ;
 22752  002B56  5018               	movf	read_eusartparser@package^0,w,c
 22753  002B58  6ED9               	movwf	fsr2l,c
 22754  002B5A  6ADA               	clrf	fsr2h,c
 22755  002B5C  0E03               	movlw	3
 22756  002B5E  26D9               	addwf	fsr2l,f,c
 22757  002B60  C0B3  FFDF         	movff	_var_sys_NVM+27,indf2	;volatile
 22758  002B64  D04D               	goto	L99
 22759  002B66                     l16366:
 22760                           
 22761                           ; BSR set to: 0
 22762                           ;eusartparser.c: 172:                 package->data.data8[1]=var_sys_NVM.TypeofMotor;
 22763  002B66  5018               	movf	read_eusartparser@package^0,w,c
 22764  002B68  6ED9               	movwf	fsr2l,c
 22765  002B6A  6ADA               	clrf	fsr2h,c
 22766  002B6C  0E03               	movlw	3
 22767  002B6E  26D9               	addwf	fsr2l,f,c
 22768  002B70  C0B4  FFDF         	movff	_var_sys_NVM+28,indf2	;volatile
 22769  002B74  D045               	goto	L99
 22770  002B76                     l16370:
 22771                           
 22772                           ; BSR set to: 0
 22773                           ;eusartparser.c: 179:                 package->data.data8[1]=var_sys_NVM.positionRemotes
      +                          Walk;
 22774  002B76  5018               	movf	read_eusartparser@package^0,w,c
 22775  002B78  6ED9               	movwf	fsr2l,c
 22776  002B7A  6ADA               	clrf	fsr2h,c
 22777  002B7C  0E03               	movlw	3
 22778  002B7E  26D9               	addwf	fsr2l,f,c
 22779  002B80  C0B9  FFDF         	movff	_var_sys_NVM+33,indf2	;volatile
 22780                           
 22781                           ;eusartparser.c: 180:                 package->data.data8[0]=var_sys_NVM.positionRemotes
      +                          Full;
 22782  002B84  5018               	movf	read_eusartparser@package^0,w,c
 22783  002B86  6ED9               	movwf	fsr2l,c
 22784  002B88  6ADA               	clrf	fsr2h,c
 22785  002B8A  0E02               	movlw	2
 22786  002B8C  26D9               	addwf	fsr2l,f,c
 22787  002B8E  C0B8  FFDF         	movff	_var_sys_NVM+32,indf2	;volatile
 22788  002B92  D719               	goto	l16284
 22789  002B94                     l16374:
 22790                           
 22791                           ; BSR set to: 0
 22792                           ;eusartparser.c: 186:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+1);
 22793  002B94  EE20  F0BC         	lfsr	2,_var_sys_NVM+36
 22794  002B98  5018               	movf	read_eusartparser@package^0,w,c
 22795  002B9A  6EE1               	movwf	fsr1l,c
 22796  002B9C  6AE2               	clrf	fsr1h,c
 22797  002B9E  0E02               	movlw	2
 22798  002BA0  26E1               	addwf	fsr1l,f,c
 22799  002BA2  CFDE FFE6          	movff	postinc2,postinc1
 22800  002BA6  CFDD FFE5          	movff	postdec2,postdec1
 22801                           
 22802                           ; BSR set to: 0
 22803                           ;eusartparser.c: 187:                 write_package(*package);
 22804  002BAA  5018               	movf	read_eusartparser@package^0,w,c
 22805  002BAC  6ED9               	movwf	fsr2l,c
 22806  002BAE  6ADA               	clrf	fsr2h,c
 22807  002BB0  EE00  F011         	lfsr	0,write_package@package
 22808  002BB4  0E06               	movlw	6
 22809  002BB6                     u18351:
 22810  002BB6  CFDB FFEB          	movff	plusw2,plusw0
 22811  002BBA  06E8               	decf	wreg,f,c
 22812  002BBC  E2FC               	bc	u18351
 22813  002BBE  ECC3  F047         	call	_write_package	;wreg free
 22814                           
 22815                           ;eusartparser.c: 188:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.c
      +                          ounterMoves))+0);
 22816  002BC2  EE20  F0BA         	lfsr	2,_var_sys_NVM+34
 22817  002BC6  5018               	movf	read_eusartparser@package^0,w,c
 22818  002BC8  6EE1               	movwf	fsr1l,c
 22819  002BCA  6AE2               	clrf	fsr1h,c
 22820  002BCC  0E02               	movlw	2
 22821  002BCE  26E1               	addwf	fsr1l,f,c
 22822  002BD0  CFDE FFE6          	movff	postinc2,postinc1
 22823  002BD4  CFDD FFE5          	movff	postdec2,postdec1
 22824                           
 22825                           ;eusartparser.c: 189:                 write_package(*package);
 22826  002BD8  5018               	movf	read_eusartparser@package^0,w,c
 22827  002BDA  6ED9               	movwf	fsr2l,c
 22828  002BDC  6ADA               	clrf	fsr2h,c
 22829  002BDE  EE00  F011         	lfsr	0,write_package@package
 22830  002BE2  0E06               	movlw	6
 22831  002BE4                     u18361:
 22832  002BE4  CFDB FFEB          	movff	plusw2,plusw0
 22833  002BE8  06E8               	decf	wreg,f,c
 22834  002BEA  E2FC               	bc	u18361
 22835  002BEC  ECC3  F047         	call	_write_package	;wreg free
 22836                           
 22837                           ;eusartparser.c: 190:                 break;
 22838  002BF0  0012               	return	
 22839  002BF2                     l16380:
 22840                           
 22841                           ; BSR set to: 0
 22842                           ;eusartparser.c: 194:                 package->data.data8[1]=var_sys_NVM.OnlyRollingCode
      +                          ;
 22843  002BF2  5018               	movf	read_eusartparser@package^0,w,c
 22844  002BF4  6ED9               	movwf	fsr2l,c
 22845  002BF6  6ADA               	clrf	fsr2h,c
 22846  002BF8  0E03               	movlw	3
 22847  002BFA  26D9               	addwf	fsr2l,f,c
 22848  002BFC  C0BE  FFDF         	movff	_var_sys_NVM+38,indf2	;volatile
 22849  002C00                     L99:
 22850                           
 22851                           ;eusartparser.c: 195:                 package->data.data8[0]=0x00;
 22852  002C00  5018               	movf	read_eusartparser@package^0,w,c
 22853  002C02  6ED9               	movwf	fsr2l,c
 22854  002C04  6ADA               	clrf	fsr2h,c
 22855  002C06  0E02               	movlw	2
 22856  002C08  26D9               	addwf	fsr2l,f,c
 22857  002C0A  0E00               	movlw	0
 22858  002C0C  6EDF               	movwf	indf2,c
 22859  002C0E  D6DB               	goto	l16284
 22860  002C10                     l16384:
 22861                           
 22862                           ; BSR set to: 0
 22863                           ;eusartparser.c: 201:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+1);
 22864  002C10  EE20  F0C2         	lfsr	2,_var_sys_NVM+42
 22865  002C14  5018               	movf	read_eusartparser@package^0,w,c
 22866  002C16  6EE1               	movwf	fsr1l,c
 22867  002C18  6AE2               	clrf	fsr1h,c
 22868  002C1A  0E02               	movlw	2
 22869  002C1C  26E1               	addwf	fsr1l,f,c
 22870  002C1E  CFDE FFE6          	movff	postinc2,postinc1
 22871  002C22  CFDD FFE5          	movff	postdec2,postdec1
 22872                           
 22873                           ; BSR set to: 0
 22874                           ;eusartparser.c: 202:                 write_package(*package);
 22875  002C26  5018               	movf	read_eusartparser@package^0,w,c
 22876  002C28  6ED9               	movwf	fsr2l,c
 22877  002C2A  6ADA               	clrf	fsr2h,c
 22878  002C2C  EE00  F011         	lfsr	0,write_package@package
 22879  002C30  0E06               	movlw	6
 22880  002C32                     u18371:
 22881  002C32  CFDB FFEB          	movff	plusw2,plusw0
 22882  002C36  06E8               	decf	wreg,f,c
 22883  002C38  E2FC               	bc	u18371
 22884  002C3A  ECC3  F047         	call	_write_package	;wreg free
 22885                           
 22886                           ;eusartparser.c: 203:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationClose))+0);
 22887  002C3E  EE20  F0C0         	lfsr	2,_var_sys_NVM+40
 22888  002C42  5018               	movf	read_eusartparser@package^0,w,c
 22889  002C44  6EE1               	movwf	fsr1l,c
 22890  002C46  6AE2               	clrf	fsr1h,c
 22891  002C48  0E02               	movlw	2
 22892  002C4A  26E1               	addwf	fsr1l,f,c
 22893  002C4C  CFDE FFE6          	movff	postinc2,postinc1
 22894  002C50  CFDD FFE5          	movff	postdec2,postdec1
 22895                           
 22896                           ;eusartparser.c: 204:                 write_package(*package);
 22897  002C54  5018               	movf	read_eusartparser@package^0,w,c
 22898  002C56  6ED9               	movwf	fsr2l,c
 22899  002C58  6ADA               	clrf	fsr2h,c
 22900  002C5A  EE00  F011         	lfsr	0,write_package@package
 22901  002C5E  0E06               	movlw	6
 22902  002C60                     u18381:
 22903  002C60  CFDB FFEB          	movff	plusw2,plusw0
 22904  002C64  06E8               	decf	wreg,f,c
 22905  002C66  E2FC               	bc	u18381
 22906  002C68  ECC3  F047         	call	_write_package	;wreg free
 22907                           
 22908                           ;eusartparser.c: 205:                 break;
 22909  002C6C  0012               	return	
 22910  002C6E                     l16390:
 22911                           
 22912                           ; BSR set to: 0
 22913                           ;eusartparser.c: 209:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+1);
 22914  002C6E  EE20  F0C6         	lfsr	2,_var_sys_NVM+46
 22915  002C72  5018               	movf	read_eusartparser@package^0,w,c
 22916  002C74  6EE1               	movwf	fsr1l,c
 22917  002C76  6AE2               	clrf	fsr1h,c
 22918  002C78  0E02               	movlw	2
 22919  002C7A  26E1               	addwf	fsr1l,f,c
 22920  002C7C  CFDE FFE6          	movff	postinc2,postinc1
 22921  002C80  CFDD FFE5          	movff	postdec2,postdec1
 22922                           
 22923                           ; BSR set to: 0
 22924                           ;eusartparser.c: 210:                 write_package(*package);
 22925  002C84  5018               	movf	read_eusartparser@package^0,w,c
 22926  002C86  6ED9               	movwf	fsr2l,c
 22927  002C88  6ADA               	clrf	fsr2h,c
 22928  002C8A  EE00  F011         	lfsr	0,write_package@package
 22929  002C8E  0E06               	movlw	6
 22930  002C90                     u18391:
 22931  002C90  CFDB FFEB          	movff	plusw2,plusw0
 22932  002C94  06E8               	decf	wreg,f,c
 22933  002C96  E2FC               	bc	u18391
 22934  002C98  ECC3  F047         	call	_write_package	;wreg free
 22935                           
 22936                           ;eusartparser.c: 211:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningCurrentDecelarationOpen))+0);
 22937  002C9C  EE20  F0C4         	lfsr	2,_var_sys_NVM+44
 22938  002CA0  5018               	movf	read_eusartparser@package^0,w,c
 22939  002CA2  6EE1               	movwf	fsr1l,c
 22940  002CA4  6AE2               	clrf	fsr1h,c
 22941  002CA6  0E02               	movlw	2
 22942  002CA8  26E1               	addwf	fsr1l,f,c
 22943  002CAA  CFDE FFE6          	movff	postinc2,postinc1
 22944  002CAE  CFDD FFE5          	movff	postdec2,postdec1
 22945                           
 22946                           ;eusartparser.c: 212:                 write_package(*package);
 22947  002CB2  5018               	movf	read_eusartparser@package^0,w,c
 22948  002CB4  6ED9               	movwf	fsr2l,c
 22949  002CB6  6ADA               	clrf	fsr2h,c
 22950  002CB8  EE00  F011         	lfsr	0,write_package@package
 22951  002CBC  0E06               	movlw	6
 22952  002CBE                     u18401:
 22953  002CBE  CFDB FFEB          	movff	plusw2,plusw0
 22954  002CC2  06E8               	decf	wreg,f,c
 22955  002CC4  E2FC               	bc	u18401
 22956  002CC6  ECC3  F047         	call	_write_package	;wreg free
 22957                           
 22958                           ;eusartparser.c: 213:                 break;
 22959  002CCA  0012               	return	
 22960  002CCC                     l16396:
 22961                           
 22962                           ; BSR set to: 0
 22963                           ;eusartparser.c: 217:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalClose;
 22964  002CCC  5018               	movf	read_eusartparser@package^0,w,c
 22965  002CCE  6ED9               	movwf	fsr2l,c
 22966  002CD0  6ADA               	clrf	fsr2h,c
 22967  002CD2  0E02               	movlw	2
 22968  002CD4  26D9               	addwf	fsr2l,f,c
 22969  002CD6  C0C8  FFDE         	movff	_var_sys_NVM+48,postinc2	;volatile
 22970  002CDA  C0C9  FFDD         	movff	_var_sys_NVM+49,postdec2	;volatile
 22971  002CDE  D673               	goto	l16284
 22972  002CE0                     l16400:
 22973                           
 22974                           ; BSR set to: 0
 22975                           ;eusartparser.c: 223:                 package->data.data16=var_sys_NVM.learningCurrentNo
      +                          rmalOpen;
 22976  002CE0  5018               	movf	read_eusartparser@package^0,w,c
 22977  002CE2  6ED9               	movwf	fsr2l,c
 22978  002CE4  6ADA               	clrf	fsr2h,c
 22979  002CE6  0E02               	movlw	2
 22980  002CE8  26D9               	addwf	fsr2l,f,c
 22981  002CEA  C0CA  FFDE         	movff	_var_sys_NVM+50,postinc2	;volatile
 22982  002CEE  C0CB  FFDD         	movff	_var_sys_NVM+51,postdec2	;volatile
 22983  002CF2  D669               	goto	l16284
 22984  002CF4                     l16404:
 22985                           
 22986                           ; BSR set to: 0
 22987                           ;eusartparser.c: 229:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+1);
 22988  002CF4  EE20  F0CE         	lfsr	2,_var_sys_NVM+54
 22989  002CF8  5018               	movf	read_eusartparser@package^0,w,c
 22990  002CFA  6EE1               	movwf	fsr1l,c
 22991  002CFC  6AE2               	clrf	fsr1h,c
 22992  002CFE  0E02               	movlw	2
 22993  002D00  26E1               	addwf	fsr1l,f,c
 22994  002D02  CFDE FFE6          	movff	postinc2,postinc1
 22995  002D06  CFDD FFE5          	movff	postdec2,postdec1
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;eusartparser.c: 230:                 write_package(*package);
 22999  002D0A  5018               	movf	read_eusartparser@package^0,w,c
 23000  002D0C  6ED9               	movwf	fsr2l,c
 23001  002D0E  6ADA               	clrf	fsr2h,c
 23002  002D10  EE00  F011         	lfsr	0,write_package@package
 23003  002D14  0E06               	movlw	6
 23004  002D16                     u18411:
 23005  002D16  CFDB FFEB          	movff	plusw2,plusw0
 23006  002D1A  06E8               	decf	wreg,f,c
 23007  002D1C  E2FC               	bc	u18411
 23008  002D1E  ECC3  F047         	call	_write_package	;wreg free
 23009                           
 23010                           ;eusartparser.c: 231:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToOpen))+0);
 23011  002D22  EE20  F0CC         	lfsr	2,_var_sys_NVM+52
 23012  002D26  5018               	movf	read_eusartparser@package^0,w,c
 23013  002D28  6EE1               	movwf	fsr1l,c
 23014  002D2A  6AE2               	clrf	fsr1h,c
 23015  002D2C  0E02               	movlw	2
 23016  002D2E  26E1               	addwf	fsr1l,f,c
 23017  002D30  CFDE FFE6          	movff	postinc2,postinc1
 23018  002D34  CFDD FFE5          	movff	postdec2,postdec1
 23019                           
 23020                           ;eusartparser.c: 232:                 write_package(*package);
 23021  002D38  5018               	movf	read_eusartparser@package^0,w,c
 23022  002D3A  6ED9               	movwf	fsr2l,c
 23023  002D3C  6ADA               	clrf	fsr2h,c
 23024  002D3E  EE00  F011         	lfsr	0,write_package@package
 23025  002D42  0E06               	movlw	6
 23026  002D44                     u18421:
 23027  002D44  CFDB FFEB          	movff	plusw2,plusw0
 23028  002D48  06E8               	decf	wreg,f,c
 23029  002D4A  E2FC               	bc	u18421
 23030  002D4C  ECC3  F047         	call	_write_package	;wreg free
 23031                           
 23032                           ;eusartparser.c: 233:                 break;
 23033  002D50  0012               	return	
 23034  002D52                     l16410:
 23035                           
 23036                           ; BSR set to: 0
 23037                           ;eusartparser.c: 237:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+1);
 23038  002D52  EE20  F0D2         	lfsr	2,_var_sys_NVM+58
 23039  002D56  5018               	movf	read_eusartparser@package^0,w,c
 23040  002D58  6EE1               	movwf	fsr1l,c
 23041  002D5A  6AE2               	clrf	fsr1h,c
 23042  002D5C  0E02               	movlw	2
 23043  002D5E  26E1               	addwf	fsr1l,f,c
 23044  002D60  CFDE FFE6          	movff	postinc2,postinc1
 23045  002D64  CFDD FFE5          	movff	postdec2,postdec1
 23046                           
 23047                           ; BSR set to: 0
 23048                           ;eusartparser.c: 238:                 write_package(*package);
 23049  002D68  5018               	movf	read_eusartparser@package^0,w,c
 23050  002D6A  6ED9               	movwf	fsr2l,c
 23051  002D6C  6ADA               	clrf	fsr2h,c
 23052  002D6E  EE00  F011         	lfsr	0,write_package@package
 23053  002D72  0E06               	movlw	6
 23054  002D74                     u18431:
 23055  002D74  CFDB FFEB          	movff	plusw2,plusw0
 23056  002D78  06E8               	decf	wreg,f,c
 23057  002D7A  E2FC               	bc	u18431
 23058  002D7C  ECC3  F047         	call	_write_package	;wreg free
 23059                           
 23060                           ;eusartparser.c: 239:                 package->data.data16=*(((uint16_t*)&(var_sys_NVM.l
      +                          earningTimeToClose))+0);
 23061  002D80  EE20  F0D0         	lfsr	2,_var_sys_NVM+56
 23062  002D84  5018               	movf	read_eusartparser@package^0,w,c
 23063  002D86  6EE1               	movwf	fsr1l,c
 23064  002D88  6AE2               	clrf	fsr1h,c
 23065  002D8A  0E02               	movlw	2
 23066  002D8C  26E1               	addwf	fsr1l,f,c
 23067  002D8E  CFDE FFE6          	movff	postinc2,postinc1
 23068  002D92  CFDD FFE5          	movff	postdec2,postdec1
 23069                           
 23070                           ;eusartparser.c: 240:                 write_package(*package);
 23071  002D96  5018               	movf	read_eusartparser@package^0,w,c
 23072  002D98  6ED9               	movwf	fsr2l,c
 23073  002D9A  6ADA               	clrf	fsr2h,c
 23074  002D9C  EE00  F011         	lfsr	0,write_package@package
 23075  002DA0  0E06               	movlw	6
 23076  002DA2                     u18441:
 23077  002DA2  CFDB FFEB          	movff	plusw2,plusw0
 23078  002DA6  06E8               	decf	wreg,f,c
 23079  002DA8  E2FC               	bc	u18441
 23080  002DAA  ECC3  F047         	call	_write_package	;wreg free
 23081                           
 23082                           ;eusartparser.c: 241:                 break;
 23083  002DAE  0012               	return	
 23084  002DB0                     l16418:
 23085                           
 23086                           ; BSR set to: 0
 23087  002DB0  5018               	movf	read_eusartparser@package^0,w,c
 23088  002DB2  6ED9               	movwf	fsr2l,c
 23089  002DB4  6ADA               	clrf	fsr2h,c
 23090  002DB6  0E01               	movlw	1
 23091  002DB8  26D9               	addwf	fsr2l,f,c
 23092  002DBA  50DF               	movf	indf2,w,c
 23093  002DBC  6E19               	movwf	??_read_eusartparser^0,c
 23094  002DBE  6A1A               	clrf	(??_read_eusartparser+1)^0,c
 23095                           
 23096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23097                           ; Switch size 1, requested type "simple"
 23098                           ; Number of cases is 1, Range of values is 0 to 0
 23099                           ; switch strategies available:
 23100                           ; Name         Instructions Cycles
 23101                           ; simple_byte            4     3 (average)
 23102                           ;	Chosen strategy is simple_byte
 23103  002DC0  501A               	movf	(??_read_eusartparser+1)^0,w,c
 23104  002DC2  0A00               	xorlw	0	; case 0
 23105  002DC4  A4D8               	btfss	status,2,c
 23106  002DC6  0012               	return	
 23107                           
 23108                           ; BSR set to: 0
 23109                           ; Switch size 1, requested type "simple"
 23110                           ; Number of cases is 38, Range of values is 0 to 50
 23111                           ; switch strategies available:
 23112                           ; Name         Instructions Cycles
 23113                           ; simple_byte          115    58 (average)
 23114                           ;	Chosen strategy is simple_byte
 23115  002DC8  5019               	movf	??_read_eusartparser^0,w,c
 23116  002DCA  0A00               	xorlw	0	; case 0
 23117  002DCC  B4D8               	btfsc	status,2,c
 23118  002DCE  D5ED               	goto	l16282
 23119  002DD0  0A02               	xorlw	2	; case 2
 23120  002DD2  B4D8               	btfsc	status,2,c
 23121  002DD4  D61C               	goto	l16294
 23122  002DD6  0A01               	xorlw	1	; case 3
 23123  002DD8  B4D8               	btfsc	status,2,c
 23124  002DDA  D68D               	goto	l16338
 23125  002DDC  0A06               	xorlw	6	; case 5
 23126  002DDE  B4D8               	btfsc	status,2,c
 23127  002DE0  D625               	goto	l16298
 23128  002DE2  0A02               	xorlw	2	; case 7
 23129  002DE4  B4D8               	btfsc	status,2,c
 23130  002DE6  D670               	goto	l16330
 23131  002DE8  0A0F               	xorlw	15	; case 8
 23132  002DEA  B4D8               	btfsc	status,2,c
 23133  002DEC  D6AC               	goto	l16358
 23134  002DEE  0A02               	xorlw	2	; case 10
 23135  002DF0  B4D8               	btfsc	status,2,c
 23136  002DF2  D689               	goto	l16342
 23137  002DF4  0A1A               	xorlw	26	; case 16
 23138  002DF6  B4D8               	btfsc	status,2,c
 23139  002DF8  D5D8               	goto	l16282
 23140  002DFA  0A01               	xorlw	1	; case 17
 23141  002DFC  B4D8               	btfsc	status,2,c
 23142  002DFE  D5F0               	goto	l16286
 23143  002E00  0A03               	xorlw	3	; case 18
 23144  002E02  B4D8               	btfsc	status,2,c
 23145  002E04  D5FC               	goto	l16290
 23146  002E06  0A01               	xorlw	1	; case 19
 23147  002E08  B4D8               	btfsc	status,2,c
 23148  002E0A  D601               	goto	l16294
 23149  002E0C  0A07               	xorlw	7	; case 20
 23150  002E0E  B4D8               	btfsc	status,2,c
 23151  002E10  D60D               	goto	l16298
 23152  002E12  0A01               	xorlw	1	; case 21
 23153  002E14  B4D8               	btfsc	status,2,c
 23154  002E16  D619               	goto	l16302
 23155  002E18  0A03               	xorlw	3	; case 22
 23156  002E1A  B4D8               	btfsc	status,2,c
 23157  002E1C  D625               	goto	l16306
 23158  002E1E  0A01               	xorlw	1	; case 23
 23159  002E20  B4D8               	btfsc	status,2,c
 23160  002E22  D62A               	goto	l16310
 23161  002E24  0A0F               	xorlw	15	; case 24
 23162  002E26  B4D8               	btfsc	status,2,c
 23163  002E28  D62F               	goto	l16314
 23164  002E2A  0A01               	xorlw	1	; case 25
 23165  002E2C  B4D8               	btfsc	status,2,c
 23166  002E2E  D634               	goto	l16318
 23167  002E30  0A03               	xorlw	3	; case 26
 23168  002E32  B4D8               	btfsc	status,2,c
 23169  002E34  D639               	goto	l16322
 23170  002E36  0A01               	xorlw	1	; case 27
 23171  002E38  B4D8               	btfsc	status,2,c
 23172  002E3A  D63E               	goto	l16326
 23173  002E3C  0A07               	xorlw	7	; case 28
 23174  002E3E  B4D8               	btfsc	status,2,c
 23175  002E40  D643               	goto	l16330
 23176  002E42  0A01               	xorlw	1	; case 29
 23177  002E44  B4D8               	btfsc	status,2,c
 23178  002E46  D648               	goto	l16334
 23179  002E48  0A03               	xorlw	3	; case 30
 23180  002E4A  B4D8               	btfsc	status,2,c
 23181  002E4C  D654               	goto	l16338
 23182  002E4E  0A01               	xorlw	1	; case 31
 23183  002E50  B4D8               	btfsc	status,2,c
 23184  002E52  D659               	goto	l16342
 23185  002E54  0A3F               	xorlw	63	; case 32
 23186  002E56  B4D8               	btfsc	status,2,c
 23187  002E58  D65E               	goto	l16346
 23188  002E5A  0A01               	xorlw	1	; case 33
 23189  002E5C  B4D8               	btfsc	status,2,c
 23190  002E5E  D663               	goto	l16350
 23191  002E60  0A03               	xorlw	3	; case 34
 23192  002E62  B4D8               	btfsc	status,2,c
 23193  002E64  D668               	goto	l16354
 23194  002E66  0A01               	xorlw	1	; case 35
 23195  002E68  B4D8               	btfsc	status,2,c
 23196  002E6A  D66D               	goto	l16358
 23197  002E6C  0A07               	xorlw	7	; case 36
 23198  002E6E  B4D8               	btfsc	status,2,c
 23199  002E70  D672               	goto	l16362
 23200  002E72  0A01               	xorlw	1	; case 37
 23201  002E74  B4D8               	btfsc	status,2,c
 23202  002E76  D677               	goto	l16366
 23203  002E78  0A03               	xorlw	3	; case 38
 23204  002E7A  B4D8               	btfsc	status,2,c
 23205  002E7C  D67C               	goto	l16370
 23206  002E7E  0A01               	xorlw	1	; case 39
 23207  002E80  B4D8               	btfsc	status,2,c
 23208  002E82  D688               	goto	l16374
 23209  002E84  0A0E               	xorlw	14	; case 41
 23210  002E86  B4D8               	btfsc	status,2,c
 23211  002E88  D6B4               	goto	l16380
 23212  002E8A  0A03               	xorlw	3	; case 42
 23213  002E8C  B4D8               	btfsc	status,2,c
 23214  002E8E  D6C0               	goto	l16384
 23215  002E90  0A06               	xorlw	6	; case 44
 23216  002E92  B4D8               	btfsc	status,2,c
 23217  002E94  D6EC               	goto	l16390
 23218  002E96  0A02               	xorlw	2	; case 46
 23219  002E98  B4D8               	btfsc	status,2,c
 23220  002E9A  D718               	goto	l16396
 23221  002E9C  0A01               	xorlw	1	; case 47
 23222  002E9E  B4D8               	btfsc	status,2,c
 23223  002EA0  D71F               	goto	l16400
 23224  002EA2  0A1F               	xorlw	31	; case 48
 23225  002EA4  B4D8               	btfsc	status,2,c
 23226  002EA6  D726               	goto	l16404
 23227  002EA8  0A02               	xorlw	2	; case 50
 23228  002EAA  A4D8               	btfss	status,2,c
 23229  002EAC  0012               	return	
 23230  002EAE  D751               	goto	l16410
 23231  002EB0                     __end_of_read_eusartparser:
 23232                           	callstack 0
 23233                           
 23234 ;; *************** function _write_package *****************
 23235 ;; Defined at:
 23236 ;;		line 50 in file "eusartpackage.c"
 23237 ;; Parameters:    Size  Location     Type
 23238 ;;  package         7   16[COMRAM] const struct package_t
 23239 ;; Auto vars:     Size  Location     Type
 23240 ;;		None
 23241 ;; Return value:  Size  Location     Type
 23242 ;;                  1    wreg      void 
 23243 ;; Registers used:
 23244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23245 ;; Tracked objects:
 23246 ;;		On entry : 0/0
 23247 ;;		On exit  : 0/0
 23248 ;;		Unchanged: 0/0
 23249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23250 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23253 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23254 ;;Total ram usage:        7 bytes
 23255 ;; Hardware stack levels used: 1
 23256 ;; Hardware stack levels required when called: 5
 23257 ;; This function calls:
 23258 ;;		_EUSART1_Write
 23259 ;; This function is called by:
 23260 ;;		_read_eusartparser
 23261 ;;		_eusartparser
 23262 ;; This function uses a non-reentrant model
 23263 ;;
 23264                           
 23265                           	psect	text79
 23266  008F86                     __ptext79:
 23267                           	callstack 0
 23268  008F86                     _write_package:
 23269                           	callstack 24
 23270                           
 23271                           ;eusartpackage.c: 52:         if(package.valid==0)
 23272                           
 23273                           ;incstack = 0
 23274  008F86  5017               	movf	(write_package@package+6)^0,w,c
 23275  008F88  B4D8               	btfsc	status,2,c
 23276  008F8A  0012               	return	
 23277                           
 23278                           ;eusartpackage.c: 56:         EUSART1_Write(package.startbyte);
 23279  008F8C  5015               	movf	(write_package@package+4)^0,w,c
 23280  008F8E  EC5B  F046         	call	_EUSART1_Write
 23281                           
 23282                           ;eusartpackage.c: 57:         EUSART1_Write(package.functioncode);
 23283  008F92  5011               	movf	write_package@package^0,w,c
 23284  008F94  EC5B  F046         	call	_EUSART1_Write
 23285                           
 23286                           ;eusartpackage.c: 58:         EUSART1_Write(package.address);
 23287  008F98  5012               	movf	(write_package@package+1)^0,w,c
 23288  008F9A  EC5B  F046         	call	_EUSART1_Write
 23289                           
 23290                           ;eusartpackage.c: 59:         EUSART1_Write(package.data.data8[0]);
 23291  008F9E  5013               	movf	(write_package@package+2)^0,w,c
 23292  008FA0  EC5B  F046         	call	_EUSART1_Write
 23293                           
 23294                           ;eusartpackage.c: 60:         EUSART1_Write(package.data.data8[1]);
 23295  008FA4  5014               	movf	(write_package@package+3)^0,w,c
 23296  008FA6  EC5B  F046         	call	_EUSART1_Write
 23297                           
 23298                           ;eusartpackage.c: 61:         EUSART1_Write(package.endbyte);
 23299  008FAA  5016               	movf	(write_package@package+5)^0,w,c
 23300  008FAC  EC5B  F046         	call	_EUSART1_Write
 23301  008FB0  0012               	return		;funcret
 23302  008FB2                     __end_of_write_package:
 23303                           	callstack 0
 23304                           
 23305 ;; *************** function _EUSART1_Write *****************
 23306 ;; Defined at:
 23307 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23308 ;; Parameters:    Size  Location     Type
 23309 ;;  txData          1    wreg     unsigned char 
 23310 ;; Auto vars:     Size  Location     Type
 23311 ;;  txData          1   15[COMRAM] unsigned char 
 23312 ;; Return value:  Size  Location     Type
 23313 ;;                  1    wreg      void 
 23314 ;; Registers used:
 23315 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23316 ;; Tracked objects:
 23317 ;;		On entry : 0/0
 23318 ;;		On exit  : 3F/E
 23319 ;;		Unchanged: 0/0
 23320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23325 ;;Total ram usage:        1 bytes
 23326 ;; Hardware stack levels used: 1
 23327 ;; Hardware stack levels required when called: 4
 23328 ;; This function calls:
 23329 ;;		Nothing
 23330 ;; This function is called by:
 23331 ;;		_write_package
 23332 ;; This function uses a non-reentrant model
 23333 ;;
 23334                           
 23335                           	psect	text80
 23336  008CB6                     __ptext80:
 23337                           	callstack 0
 23338  008CB6                     _EUSART1_Write:
 23339                           	callstack 24
 23340                           
 23341                           ;incstack = 0
 23342                           ;EUSART1_Write@txData stored from wreg
 23343  008CB6  6E10               	movwf	EUSART1_Write@txData^0,c
 23344  008CB8                     
 23345                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23346                           
 23347                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23348  008CB8  0101               	movlb	1	; () banked
 23349  008CBA  51FF               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 23350  008CBC  B4D8               	btfsc	status,2,c
 23351  008CBE  D7FC               	goto	l12260
 23352                           
 23353                           ; BSR set to: 1
 23354                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23355  008CC0  010E               	movlb	14	; () banked
 23356  008CC2  B9C5               	btfsc	197,4,b	;volatile
 23357  008CC4  D003               	goto	l100
 23358                           
 23359                           ; BSR set to: 14
 23360                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23361  008CC6  C010  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 23362                           
 23363                           ;mcc_generated_files/eusart1.c: 182:     }
 23364  008CCA  D012               	goto	l12276
 23365  008CCC                     l100:
 23366                           
 23367                           ; BSR set to: 14
 23368                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23369  008CCC  99C5               	bcf	197,4,b	;volatile
 23370                           
 23371                           ; BSR set to: 14
 23372                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23373  008CCE  0E84               	movlw	low _eusart1TxBuffer
 23374  008CD0  0100               	movlb	0	; () banked
 23375  008CD2  2597               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 23376  008CD4  6ED9               	movwf	fsr2l,c
 23377  008CD6  6ADA               	clrf	fsr2h,c
 23378  008CD8  0E02               	movlw	high _eusart1TxBuffer
 23379  008CDA  22DA               	addwfc	fsr2h,f,c
 23380  008CDC  C010  FFDF         	movff	EUSART1_Write@txData,indf2
 23381                           
 23382                           ; BSR set to: 0
 23383  008CE0  2B97               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 23384                           
 23385                           ; BSR set to: 0
 23386                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 23387  008CE2  0E07               	movlw	7
 23388  008CE4  6597               	cpfsgt	_eusart1TxHead& (0+255),b
 23389  008CE6  D002               	goto	l12274
 23390                           
 23391                           ; BSR set to: 0
 23392                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 23393  008CE8  0E00               	movlw	0
 23394  008CEA  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 23395  008CEC                     l12274:
 23396                           
 23397                           ; BSR set to: 0
 23398                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 23399  008CEC  0101               	movlb	1	; () banked
 23400  008CEE  07FF               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 23401  008CF0                     l12276:
 23402                           
 23403                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 23404  008CF0  010E               	movlb	14	; () banked
 23405  008CF2  89C5               	bsf	197,4,b	;volatile
 23406                           
 23407                           ; BSR set to: 14
 23408  008CF4  0012               	return		;funcret
 23409  008CF6                     __end_of_EUSART1_Write:
 23410                           	callstack 0
 23411                           
 23412 ;; *************** function _confirmpackage *****************
 23413 ;; Defined at:
 23414 ;;		line 448 in file "eusartparser.c"
 23415 ;; Parameters:    Size  Location     Type
 23416 ;;  package         1   16[COMRAM] PTR struct package_t
 23417 ;;		 -> main@package(7), 
 23418 ;;  confirm         1   17[COMRAM] _Bool 
 23419 ;; Auto vars:     Size  Location     Type
 23420 ;;		None
 23421 ;; Return value:  Size  Location     Type
 23422 ;;                  1    wreg      void 
 23423 ;; Registers used:
 23424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23425 ;; Tracked objects:
 23426 ;;		On entry : 0/0
 23427 ;;		On exit  : 0/0
 23428 ;;		Unchanged: 0/0
 23429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23434 ;;Total ram usage:        2 bytes
 23435 ;; Hardware stack levels used: 1
 23436 ;; Hardware stack levels required when called: 5
 23437 ;; This function calls:
 23438 ;;		_init_package
 23439 ;; This function is called by:
 23440 ;;		_eusartparser
 23441 ;; This function uses a non-reentrant model
 23442 ;;
 23443                           
 23444                           	psect	text81
 23445  008A78                     __ptext81:
 23446                           	callstack 0
 23447  008A78                     _confirmpackage:
 23448                           	callstack 24
 23449                           
 23450                           ;eusartparser.c: 449:         init_package(package);
 23451                           
 23452                           ; BSR set to: 14
 23453                           ;incstack = 0
 23454  008A78  C011  F010         	movff	confirmpackage@package,init_package@package
 23455  008A7C  ECD9  F047         	call	_init_package	;wreg free
 23456                           
 23457                           ;eusartparser.c: 450:         package->functioncode=0x03;
 23458  008A80  5011               	movf	confirmpackage@package^0,w,c
 23459  008A82  6ED9               	movwf	fsr2l,c
 23460  008A84  6ADA               	clrf	fsr2h,c
 23461  008A86  0E03               	movlw	3
 23462  008A88  6EDF               	movwf	indf2,c
 23463                           
 23464                           ;eusartparser.c: 451:         package->address=0x00;
 23465  008A8A  5011               	movf	confirmpackage@package^0,w,c
 23466  008A8C  6ED9               	movwf	fsr2l,c
 23467  008A8E  6ADA               	clrf	fsr2h,c
 23468  008A90  0E01               	movlw	1
 23469  008A92  26D9               	addwf	fsr2l,f,c
 23470  008A94  0E00               	movlw	0
 23471  008A96  6EDF               	movwf	indf2,c
 23472                           
 23473                           ;eusartparser.c: 452:         if(confirm==1)
 23474  008A98  0412               	decf	confirmpackage@confirm^0,w,c
 23475  008A9A  A4D8               	btfss	status,2,c
 23476  008A9C  D00A               	goto	l16466
 23477                           
 23478                           ;eusartparser.c: 453:             package->data.data16=0x0001;
 23479  008A9E  5011               	movf	confirmpackage@package^0,w,c
 23480  008AA0  6ED9               	movwf	fsr2l,c
 23481  008AA2  6ADA               	clrf	fsr2h,c
 23482  008AA4  0E02               	movlw	2
 23483  008AA6  26D9               	addwf	fsr2l,f,c
 23484  008AA8  0E01               	movlw	1
 23485  008AAA  6EDE               	movwf	postinc2,c
 23486  008AAC  0E00               	movlw	0
 23487  008AAE  6EDD               	movwf	postdec2,c
 23488  008AB0  0012               	return	
 23489  008AB2                     l16466:
 23490                           
 23491                           ;eusartparser.c: 455:             package->data.data16=0x0000;
 23492  008AB2  5011               	movf	confirmpackage@package^0,w,c
 23493  008AB4  6ED9               	movwf	fsr2l,c
 23494  008AB6  6ADA               	clrf	fsr2h,c
 23495  008AB8  0E02               	movlw	2
 23496  008ABA  26D9               	addwf	fsr2l,f,c
 23497  008ABC  0E00               	movlw	0
 23498  008ABE  6EDE               	movwf	postinc2,c
 23499  008AC0  0E00               	movlw	0
 23500  008AC2  6EDD               	movwf	postdec2,c
 23501  008AC4  0012               	return		;funcret
 23502  008AC6                     __end_of_confirmpackage:
 23503                           	callstack 0
 23504                           
 23505 ;; *************** function _init_package *****************
 23506 ;; Defined at:
 23507 ;;		line 11 in file "eusartpackage.c"
 23508 ;; Parameters:    Size  Location     Type
 23509 ;;  package         1   15[COMRAM] PTR struct package_t
 23510 ;;		 -> main@package(7), 
 23511 ;; Auto vars:     Size  Location     Type
 23512 ;;		None
 23513 ;; Return value:  Size  Location     Type
 23514 ;;                  1    wreg      void 
 23515 ;; Registers used:
 23516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23517 ;; Tracked objects:
 23518 ;;		On entry : 0/0
 23519 ;;		On exit  : 0/0
 23520 ;;		Unchanged: 0/0
 23521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23522 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23526 ;;Total ram usage:        1 bytes
 23527 ;; Hardware stack levels used: 1
 23528 ;; Hardware stack levels required when called: 4
 23529 ;; This function calls:
 23530 ;;		Nothing
 23531 ;; This function is called by:
 23532 ;;		_confirmpackage
 23533 ;; This function uses a non-reentrant model
 23534 ;;
 23535                           
 23536                           	psect	text82
 23537  008FB2                     __ptext82:
 23538                           	callstack 0
 23539  008FB2                     _init_package:
 23540                           	callstack 24
 23541                           
 23542                           ;eusartpackage.c: 12:         package->startbyte=0x0A;
 23543                           
 23544                           ;incstack = 0
 23545  008FB2  5010               	movf	init_package@package^0,w,c
 23546  008FB4  6ED9               	movwf	fsr2l,c
 23547  008FB6  6ADA               	clrf	fsr2h,c
 23548  008FB8  0E04               	movlw	4
 23549  008FBA  26D9               	addwf	fsr2l,f,c
 23550  008FBC  0E0A               	movlw	10
 23551  008FBE  6EDF               	movwf	indf2,c
 23552                           
 23553                           ;eusartpackage.c: 13:         package->endbyte=0x0D;
 23554  008FC0  5010               	movf	init_package@package^0,w,c
 23555  008FC2  6ED9               	movwf	fsr2l,c
 23556  008FC4  6ADA               	clrf	fsr2h,c
 23557  008FC6  0E05               	movlw	5
 23558  008FC8  26D9               	addwf	fsr2l,f,c
 23559  008FCA  0E0D               	movlw	13
 23560  008FCC  6EDF               	movwf	indf2,c
 23561                           
 23562                           ;eusartpackage.c: 14:         package->valid=1;
 23563  008FCE  5010               	movf	init_package@package^0,w,c
 23564  008FD0  6ED9               	movwf	fsr2l,c
 23565  008FD2  6ADA               	clrf	fsr2h,c
 23566  008FD4  0E06               	movlw	6
 23567  008FD6  26D9               	addwf	fsr2l,f,c
 23568  008FD8  0E01               	movlw	1
 23569  008FDA  6EDF               	movwf	indf2,c
 23570  008FDC  0012               	return		;funcret
 23571  008FDE                     __end_of_init_package:
 23572                           	callstack 0
 23573                           
 23574 ;; *************** function _cmdMemoryIsEmpty *****************
 23575 ;; Defined at:
 23576 ;;		line 110 in file "controlMemory_MC50.c"
 23577 ;; Parameters:    Size  Location     Type
 23578 ;;  cmdType         1    wreg     unsigned char 
 23579 ;;  position        1   45[COMRAM] unsigned char 
 23580 ;; Auto vars:     Size  Location     Type
 23581 ;;  cmdType         1   48[COMRAM] unsigned char 
 23582 ;;  tempSerial      4   49[COMRAM] unsigned long 
 23583 ;; Return value:  Size  Location     Type
 23584 ;;                  1    wreg      unsigned char 
 23585 ;; Registers used:
 23586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23587 ;; Tracked objects:
 23588 ;;		On entry : 0/1
 23589 ;;		On exit  : 0/0
 23590 ;;		Unchanged: 0/0
 23591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23592 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23593 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23595 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23596 ;;Total ram usage:        8 bytes
 23597 ;; Hardware stack levels used: 1
 23598 ;; Hardware stack levels required when called: 13
 23599 ;; This function calls:
 23600 ;;		_i2c_readDataBlock
 23601 ;; This function is called by:
 23602 ;;		_setValueToEdit
 23603 ;;		_controlSelectRemote
 23604 ;;		_eusartparser
 23605 ;; This function uses a non-reentrant model
 23606 ;;
 23607                           
 23608                           	psect	text83
 23609  007938                     __ptext83:
 23610                           	callstack 0
 23611  007938                     _cmdMemoryIsEmpty:
 23612                           	callstack 14
 23613                           
 23614                           ;incstack = 0
 23615                           ;cmdMemoryIsEmpty@cmdType stored from wreg
 23616  007938  6E31               	movwf	cmdMemoryIsEmpty@cmdType^0,c
 23617                           
 23618                           ;controlMemory_MC50.c: 110: char cmdMemoryIsEmpty(char cmdType, char position);controlMe
      +                          mory_MC50.c: 111: {;controlMemory_MC50.c: 112:     unsigned long tempSerial=0;
 23619  00793A  0E00               	movlw	0
 23620  00793C  6E32               	movwf	cmdMemoryIsEmpty@tempSerial^0,c
 23621  00793E  0E00               	movlw	0
 23622  007940  6E33               	movwf	(cmdMemoryIsEmpty@tempSerial+1)^0,c
 23623  007942  0E00               	movlw	0
 23624  007944  6E34               	movwf	(cmdMemoryIsEmpty@tempSerial+2)^0,c
 23625  007946  0E00               	movlw	0
 23626  007948  6E35               	movwf	(cmdMemoryIsEmpty@tempSerial+3)^0,c
 23627                           
 23628                           ;controlMemory_MC50.c: 115:      if(cmdType==0)
 23629  00794A  5031               	movf	cmdMemoryIsEmpty@cmdType^0,w,c
 23630  00794C  A4D8               	btfss	status,2,c
 23631  00794E  D01A               	goto	l20062
 23632                           
 23633                           ;controlMemory_MC50.c: 116:     {;controlMemory_MC50.c: 117:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0200 + (position * 4)),(char*)&tempSerial, 4);
 23634  007950  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 23635  007952  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 23636  007954  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 23637  007956  90D8               	bcf	status,0,c
 23638  007958  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23639  00795A  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23640  00795C  90D8               	bcf	status,0,c
 23641  00795E  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23642  007960  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23643  007962  0E00               	movlw	0
 23644  007964  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 23645  007966  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23646  007968  0E02               	movlw	2
 23647  00796A  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 23648  00796C  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23649  00796E  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 23650  007970  6E24               	movwf	i2c_readDataBlock@data^0,c
 23651  007972  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 23652  007974  0E00               	movlw	0
 23653  007976  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23654  007978  0E04               	movlw	4
 23655  00797A  6E26               	movwf	i2c_readDataBlock@len^0,c
 23656  00797C  0E50               	movlw	80
 23657  00797E  ECBE  F040         	call	_i2c_readDataBlock
 23658                           
 23659                           ;controlMemory_MC50.c: 118:     }
 23660  007982  D019               	goto	l20064
 23661  007984                     l20062:
 23662                           
 23663                           ;controlMemory_MC50.c: 120:     {;controlMemory_MC50.c: 121:          i2c_readDataBlock(
      +                          0x50, (uint16_t)(0x0500 + (position * 4)),(char*)&tempSerial, 4);
 23664  007984  502E               	movf	cmdMemoryIsEmpty@position^0,w,c
 23665  007986  6E2F               	movwf	??_cmdMemoryIsEmpty^0,c
 23666  007988  6A30               	clrf	(??_cmdMemoryIsEmpty+1)^0,c
 23667  00798A  90D8               	bcf	status,0,c
 23668  00798C  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23669  00798E  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23670  007990  90D8               	bcf	status,0,c
 23671  007992  362F               	rlcf	??_cmdMemoryIsEmpty^0,f,c
 23672  007994  3630               	rlcf	(??_cmdMemoryIsEmpty+1)^0,f,c
 23673  007996  0E00               	movlw	0
 23674  007998  242F               	addwf	??_cmdMemoryIsEmpty^0,w,c
 23675  00799A  6E22               	movwf	i2c_readDataBlock@reg^0,c
 23676  00799C  0E05               	movlw	5
 23677  00799E  2030               	addwfc	(??_cmdMemoryIsEmpty+1)^0,w,c
 23678  0079A0  6E23               	movwf	(i2c_readDataBlock@reg+1)^0,c
 23679  0079A2  0E32               	movlw	low cmdMemoryIsEmpty@tempSerial
 23680  0079A4  6E24               	movwf	i2c_readDataBlock@data^0,c
 23681  0079A6  6A25               	clrf	(i2c_readDataBlock@data+1)^0,c
 23682  0079A8  0E00               	movlw	0
 23683  0079AA  6E27               	movwf	(i2c_readDataBlock@len+1)^0,c
 23684  0079AC  0E04               	movlw	4
 23685  0079AE  6E26               	movwf	i2c_readDataBlock@len^0,c
 23686  0079B0  0E50               	movlw	80
 23687  0079B2  ECBE  F040         	call	_i2c_readDataBlock
 23688  0079B6                     l20064:
 23689                           
 23690                           ;controlMemory_MC50.c: 124:      if( tempSerial==0)
 23691  0079B6  5032               	movf	cmdMemoryIsEmpty@tempSerial^0,w,c
 23692  0079B8  1033               	iorwf	(cmdMemoryIsEmpty@tempSerial+1)^0,w,c
 23693  0079BA  1034               	iorwf	(cmdMemoryIsEmpty@tempSerial+2)^0,w,c
 23694  0079BC  1035               	iorwf	(cmdMemoryIsEmpty@tempSerial+3)^0,w,c
 23695  0079BE  A4D8               	btfss	status,2,c
 23696  0079C0  D002               	goto	l20072
 23697                           
 23698                           ;controlMemory_MC50.c: 125:      {;controlMemory_MC50.c: 126:          return 1;
 23699  0079C2  0E01               	movlw	1
 23700  0079C4  0012               	return	
 23701  0079C6                     l20072:
 23702                           
 23703                           ;controlMemory_MC50.c: 129:      {;controlMemory_MC50.c: 130:          return 0;
 23704  0079C6  0E00               	movlw	0
 23705  0079C8  0012               	return		;funcret
 23706  0079CA                     __end_of_cmdMemoryIsEmpty:
 23707                           	callstack 0
 23708                           
 23709 ;; *************** function _i2c_readDataBlock *****************
 23710 ;; Defined at:
 23711 ;;		line 147 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 23712 ;; Parameters:    Size  Location     Type
 23713 ;;  address         1    wreg     unsigned char 
 23714 ;;  reg             2   33[COMRAM] unsigned short 
 23715 ;;  data            2   35[COMRAM] PTR void 
 23716 ;;		 -> var_sys_NVM.homemPresente(1), cmdMemoryIsEmpty@tempSerial(4), var_sys_NVM.positionRemotesFull(1), memoryTEMP(16)
      +, 
 23717 ;;		 -> var_sys_NVM.learningCurrentNormalClose(2), var_sys_NVM(64), 
 23718 ;;  len             2   37[COMRAM] unsigned int 
 23719 ;; Auto vars:     Size  Location     Type
 23720 ;;  address         1   40[COMRAM] unsigned char 
 23721 ;;  d               4   41[COMRAM] struct .
 23722 ;; Return value:  Size  Location     Type
 23723 ;;                  1    wreg      void 
 23724 ;; Registers used:
 23725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23726 ;; Tracked objects:
 23727 ;;		On entry : 0/2
 23728 ;;		On exit  : 0/0
 23729 ;;		Unchanged: 0/0
 23730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23731 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23732 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23734 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23735 ;;Total ram usage:       12 bytes
 23736 ;; Hardware stack levels used: 1
 23737 ;; Hardware stack levels required when called: 12
 23738 ;; This function calls:
 23739 ;;		_I2C1_Close
 23740 ;;		_I2C1_MasterWrite
 23741 ;;		_I2C1_Open
 23742 ;;		_I2C1_SetAddressNackCallback
 23743 ;;		_I2C1_SetBuffer
 23744 ;;		_I2C1_SetDataCompleteCallback
 23745 ;; This function is called by:
 23746 ;;		_validateRemoteSerialNumber
 23747 ;;		_cmdMemoryIsEmpty
 23748 ;;		_loadNVM_VarSystem
 23749 ;; This function uses a non-reentrant model
 23750 ;;
 23751                           
 23752                           	psect	text84
 23753  00817C                     __ptext84:
 23754                           	callstack 0
 23755  00817C                     _i2c_readDataBlock:
 23756                           	callstack 14
 23757                           
 23758                           ;incstack = 0
 23759                           ;i2c_readDataBlock@address stored from wreg
 23760  00817C  6E29               	movwf	i2c_readDataBlock@address^0,c
 23761                           
 23762                           ;mcc_generated_files/drivers/i2c_simple_master.c: 147: void i2c_readDataBlock(i2c1_addre
      +                          ss_t address, uint16_t reg, void *data, size_t len);mcc_generated_files/drivers/i2c_simp
      +                          le_master.c: 148: {;mcc_generated_files/drivers/i2c_simple_master.c: 149:     buf_t d;;m
      +                          cc_generated_files/drivers/i2c_simple_master.c: 150:     d.data = data;
 23763  00817E  C024  F02C         	movff	i2c_readDataBlock@data,i2c_readDataBlock@d+2
 23764  008182  C025  F02D         	movff	i2c_readDataBlock@data+1,i2c_readDataBlock@d+3
 23765                           
 23766                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151:     d.len = len;
 23767  008186  C026  F02A         	movff	i2c_readDataBlock@len,i2c_readDataBlock@d
 23768  00818A  C027  F02B         	movff	i2c_readDataBlock@len+1,i2c_readDataBlock@d+1
 23769  00818E                     l19866:
 23770  00818E  5023               	movf	(i2c_readDataBlock@reg+1)^0,w,c
 23771  008190  1029               	iorwf	i2c_readDataBlock@address^0,w,c
 23772  008192  ECC9  F03E         	call	_I2C1_Open
 23773  008196  0900               	iorlw	0
 23774  008198  B4D8               	btfsc	status,2,c
 23775  00819A  D7F9               	goto	l19866
 23776                           
 23777                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          rdBlkRegCompleteHandler,&d);
 23778  00819C  0E36               	movlw	low _rdBlkRegCompleteHandler
 23779  00819E  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 23780  0081A0  0E8D               	movlw	high _rdBlkRegCompleteHandler
 23781  0081A2  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 23782  0081A4  0E2A               	movlw	low i2c_readDataBlock@d
 23783  0081A6  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 23784  0081A8  6A18               	clrf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 23785  0081AA  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 23786                           
 23787                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     I2C1_SetBuffer(&reg,1);
 23788  0081AE  0E22               	movlw	low i2c_readDataBlock@reg
 23789  0081B0  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 23790  0081B2  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 23791  0081B4  0E00               	movlw	0
 23792  0081B6  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 23793  0081B8  0E01               	movlw	1
 23794  0081BA  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 23795  0081BC  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 23796                           
 23797                           ; BSR set to: 2
 23798                           ;mcc_generated_files/drivers/i2c_simple_master.c: 156:     I2C1_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 23799  0081C0  0E00               	movlw	0
 23800  0081C2  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 23801  0081C4  0E00               	movlw	0
 23802  0081C6  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 23803  0081C8  0E00               	movlw	0
 23804  0081CA  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 23805  0081CC  0E00               	movlw	0
 23806  0081CE  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 23807  0081D0  EC5B  F04A         	call	_I2C1_SetAddressNackCallback	;wreg free
 23808                           
 23809                           ;mcc_generated_files/drivers/i2c_simple_master.c: 157:     I2C1_MasterWrite();
 23810  0081D4  EC29  F04B         	call	_I2C1_MasterWrite	;wreg free
 23811  0081D8                     l19876:
 23812  0081D8  EC9C  F049         	call	_I2C1_Close	;wreg free
 23813  0081DC  06E8               	decf	wreg,f,c
 23814  0081DE  B4D8               	btfsc	status,2,c
 23815  0081E0  D7FB               	goto	l19876
 23816                           
 23817                           ;mcc_generated_files/drivers/i2c_simple_master.c: 159:     _delay((unsigned long)((10)*(
      +                          64000000/4000.0)));
 23818  0081E2  0ED0               	movlw	208
 23819  0081E4  6E28               	movwf	??_i2c_readDataBlock^0,c
 23820  0081E6  0ECA               	movlw	202
 23821  0081E8                     u29607:
 23822  0081E8  2EE8               	decfsz	wreg,f,c
 23823  0081EA  D7FE               	bra	u29607
 23824  0081EC  2E28               	decfsz	??_i2c_readDataBlock^0,f,c
 23825  0081EE  D7FC               	bra	u29607
 23826  0081F0  0012               	return		;funcret
 23827  0081F2                     __end_of_i2c_readDataBlock:
 23828                           	callstack 0
 23829                           
 23830 ;; *************** function _RemoveSerial *****************
 23831 ;; Defined at:
 23832 ;;		line 95 in file "controlMemory_MC50.c"
 23833 ;; Parameters:    Size  Location     Type
 23834 ;;  cmdType         1    wreg     unsigned char 
 23835 ;;  position        1   57[COMRAM] unsigned char 
 23836 ;; Auto vars:     Size  Location     Type
 23837 ;;  cmdType         1    2[BANK0 ] unsigned char 
 23838 ;;  tempSerial      4    3[BANK0 ] unsigned long 
 23839 ;; Return value:  Size  Location     Type
 23840 ;;                  1    wreg      void 
 23841 ;; Registers used:
 23842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23843 ;; Tracked objects:
 23844 ;;		On entry : 3E/1
 23845 ;;		On exit  : 0/0
 23846 ;;		Unchanged: 0/0
 23847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23848 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23849 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23850 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23851 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23852 ;;Total ram usage:        8 bytes
 23853 ;; Hardware stack levels used: 1
 23854 ;; Hardware stack levels required when called: 13
 23855 ;; This function calls:
 23856 ;;		_i2c_writeNBytes
 23857 ;; This function is called by:
 23858 ;;		_controlSelectRemote
 23859 ;;		_eusartparser
 23860 ;; This function uses a non-reentrant model
 23861 ;;
 23862                           
 23863                           	psect	text85
 23864  007E98                     __ptext85:
 23865                           	callstack 0
 23866  007E98                     _RemoveSerial:
 23867                           	callstack 14
 23868                           
 23869                           ;incstack = 0
 23870                           ;RemoveSerial@cmdType stored from wreg
 23871  007E98  0100               	movlb	0	; () banked
 23872  007E9A  6FDA               	movwf	RemoveSerial@cmdType& (0+255),b
 23873                           
 23874                           ;controlMemory_MC50.c: 95: void RemoveSerial(char cmdType, char position);controlMemory_
      +                          MC50.c: 96: {;controlMemory_MC50.c: 97:     unsigned long tempSerial=0;
 23875  007E9C  0E00               	movlw	0
 23876  007E9E  0100               	movlb	0	; () banked
 23877  007EA0  6FDB               	movwf	RemoveSerial@tempSerial& (0+255),b
 23878  007EA2  0E00               	movlw	0
 23879  007EA4  6FDC               	movwf	(RemoveSerial@tempSerial+1)& (0+255),b
 23880  007EA6  0E00               	movlw	0
 23881  007EA8  6FDD               	movwf	(RemoveSerial@tempSerial+2)& (0+255),b
 23882  007EAA  0E00               	movlw	0
 23883  007EAC  6FDE               	movwf	(RemoveSerial@tempSerial+3)& (0+255),b
 23884                           
 23885                           ; BSR set to: 0
 23886                           ;controlMemory_MC50.c: 100:     if(cmdType==0)
 23887  007EAE  51DA               	movf	RemoveSerial@cmdType& (0+255),w,b
 23888  007EB0  A4D8               	btfss	status,2,c
 23889  007EB2  D019               	goto	l20054
 23890                           
 23891                           ; BSR set to: 0
 23892                           ;controlMemory_MC50.c: 101:     {;controlMemory_MC50.c: 102:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0200 + (position * 4)), (char*)&tempSerial, 4);
 23893  007EB4  503A               	movf	RemoveSerial@position^0,w,c
 23894  007EB6  6FD8               	movwf	??_RemoveSerial& (0+255),b
 23895  007EB8  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 23896  007EBA  90D8               	bcf	status,0,c
 23897  007EBC  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23898  007EBE  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23899  007EC0  90D8               	bcf	status,0,c
 23900  007EC2  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23901  007EC4  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23902  007EC6  0E00               	movlw	0
 23903  007EC8  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 23904  007ECA  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23905  007ECC  0E02               	movlw	2
 23906  007ECE  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 23907  007ED0  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23908  007ED2  0EDB               	movlw	low RemoveSerial@tempSerial
 23909  007ED4  6E24               	movwf	i2c_writeNBytes@data^0,c
 23910  007ED6  0E00               	movlw	0
 23911  007ED8  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23912  007EDA  0E04               	movlw	4
 23913  007EDC  6E25               	movwf	i2c_writeNBytes@len^0,c
 23914  007EDE  0E50               	movlw	80
 23915  007EE0  ECF9  F040         	call	_i2c_writeNBytes
 23916                           
 23917                           ;controlMemory_MC50.c: 103:     }
 23918  007EE4  0012               	return	
 23919  007EE6                     l20054:
 23920                           
 23921                           ; BSR set to: 0
 23922                           ;controlMemory_MC50.c: 105:     {;controlMemory_MC50.c: 106:        i2c_writeNBytes(0x50
      +                          , (uint16_t)(0x0500 + (position * 4)), (char*)&tempSerial, 4);
 23923  007EE6  503A               	movf	RemoveSerial@position^0,w,c
 23924  007EE8  6FD8               	movwf	??_RemoveSerial& (0+255),b
 23925  007EEA  6BD9               	clrf	(??_RemoveSerial+1)& (0+255),b
 23926  007EEC  90D8               	bcf	status,0,c
 23927  007EEE  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23928  007EF0  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23929  007EF2  90D8               	bcf	status,0,c
 23930  007EF4  37D8               	rlcf	??_RemoveSerial& (0+255),f,b
 23931  007EF6  37D9               	rlcf	(??_RemoveSerial+1)& (0+255),f,b
 23932  007EF8  0E00               	movlw	0
 23933  007EFA  25D8               	addwf	??_RemoveSerial& (0+255),w,b
 23934  007EFC  6E22               	movwf	i2c_writeNBytes@reg^0,c
 23935  007EFE  0E05               	movlw	5
 23936  007F00  21D9               	addwfc	(??_RemoveSerial+1)& (0+255),w,b
 23937  007F02  6E23               	movwf	(i2c_writeNBytes@reg+1)^0,c
 23938  007F04  0EDB               	movlw	low RemoveSerial@tempSerial
 23939  007F06  6E24               	movwf	i2c_writeNBytes@data^0,c
 23940  007F08  0E00               	movlw	0
 23941  007F0A  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 23942  007F0C  0E04               	movlw	4
 23943  007F0E  6E25               	movwf	i2c_writeNBytes@len^0,c
 23944  007F10  0E50               	movlw	80
 23945  007F12  ECF9  F040         	call	_i2c_writeNBytes
 23946  007F16  0012               	return		;funcret
 23947  007F18                     __end_of_RemoveSerial:
 23948                           	callstack 0
 23949                           
 23950 ;; *************** function _WWDT_TimerClear *****************
 23951 ;; Defined at:
 23952 ;;		line 128 in file "mcc_generated_files/mcc.c"
 23953 ;; Parameters:    Size  Location     Type
 23954 ;;		None
 23955 ;; Auto vars:     Size  Location     Type
 23956 ;;  state           1   15[COMRAM] _Bool 
 23957 ;;  readBack        1    0        unsigned char 
 23958 ;; Return value:  Size  Location     Type
 23959 ;;                  1    wreg      void 
 23960 ;; Registers used:
 23961 ;;		wreg, status,2
 23962 ;; Tracked objects:
 23963 ;;		On entry : 0/0
 23964 ;;		On exit  : 0/0
 23965 ;;		Unchanged: 0/0
 23966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23971 ;;Total ram usage:        1 bytes
 23972 ;; Hardware stack levels used: 1
 23973 ;; Hardware stack levels required when called: 4
 23974 ;; This function calls:
 23975 ;;		Nothing
 23976 ;; This function is called by:
 23977 ;;		_main
 23978 ;; This function uses a non-reentrant model
 23979 ;;
 23980                           
 23981                           	psect	text86
 23982  009398                     __ptext86:
 23983                           	callstack 0
 23984  009398                     _WWDT_TimerClear:
 23985                           	callstack 26
 23986                           
 23987                           ;mcc_generated_files/mcc.c: 134:     _Bool state = GIE;
 23988                           
 23989                           ;incstack = 0
 23990  009398  0E00               	movlw	0
 23991  00939A  BEF2               	btfsc	4082,7,c	;volatile
 23992  00939C  0E01               	movlw	1
 23993  00939E  6E10               	movwf	WWDT_TimerClear@state^0,c
 23994                           
 23995                           ;mcc_generated_files/mcc.c: 135:     GIE = 0;
 23996  0093A0  9EF2               	bcf	4082,7,c	;volatile
 23997  0093A2  010E               	movlb	14	; () banked
 23998  0093A4  51D2               	movf	210,w,b	;volatile
 23999  0093A6  0004               	clrwdt		;# 
 24000                           
 24001                           ;mcc_generated_files/mcc.c: 138:     GIE = state;
 24002  0093A8  B010               	btfsc	WWDT_TimerClear@state^0,0,c
 24003  0093AA  D002               	bra	u18865
 24004  0093AC  9EF2               	bcf	4082,7,c	;volatile
 24005  0093AE  D001               	bra	u18866
 24006  0093B0                     u18865:
 24007  0093B0  8EF2               	bsf	4082,7,c	;volatile
 24008  0093B2                     u18866:
 24009  0093B2  0012               	return		;funcret
 24010  0093B4                     __end_of_WWDT_TimerClear:
 24011                           	callstack 0
 24012                           
 24013 ;; *************** function _WWDT_SoftEnable *****************
 24014 ;; Defined at:
 24015 ;;		line 104 in file "mcc_generated_files/mcc.c"
 24016 ;; Parameters:    Size  Location     Type
 24017 ;;		None
 24018 ;; Auto vars:     Size  Location     Type
 24019 ;;		None
 24020 ;; Return value:  Size  Location     Type
 24021 ;;                  1    wreg      void 
 24022 ;; Registers used:
 24023 ;;		None
 24024 ;; Tracked objects:
 24025 ;;		On entry : 3F/E
 24026 ;;		On exit  : 3F/E
 24027 ;;		Unchanged: 0/0
 24028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24033 ;;Total ram usage:        0 bytes
 24034 ;; Hardware stack levels used: 1
 24035 ;; Hardware stack levels required when called: 4
 24036 ;; This function calls:
 24037 ;;		Nothing
 24038 ;; This function is called by:
 24039 ;;		_main
 24040 ;; This function uses a non-reentrant model
 24041 ;;
 24042                           
 24043                           	psect	text87
 24044  0096D8                     __ptext87:
 24045                           	callstack 0
 24046  0096D8                     _WWDT_SoftEnable:
 24047                           	callstack 26
 24048                           
 24049                           ; BSR set to: 14
 24050                           ;mcc_generated_files/mcc.c: 107:     WDTCON0bits.SEN=1;
 24051                           
 24052                           ;incstack = 0
 24053  0096D8  81D2               	bsf	210,0,b	;volatile
 24054                           
 24055                           ; BSR set to: 14
 24056  0096DA  0012               	return		;funcret
 24057  0096DC                     __end_of_WWDT_SoftEnable:
 24058                           	callstack 0
 24059                           
 24060 ;; *************** function _ShowVersion *****************
 24061 ;; Defined at:
 24062 ;;		line 254 in file "main_MC50.c"
 24063 ;; Parameters:    Size  Location     Type
 24064 ;;		None
 24065 ;; Auto vars:     Size  Location     Type
 24066 ;;		None
 24067 ;; Return value:  Size  Location     Type
 24068 ;;                  1    wreg      void 
 24069 ;; Registers used:
 24070 ;;		wreg, status,2, status,0, cstack
 24071 ;; Tracked objects:
 24072 ;;		On entry : 3F/1
 24073 ;;		On exit  : 3F/1
 24074 ;;		Unchanged: 0/0
 24075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24080 ;;Total ram usage:        0 bytes
 24081 ;; Hardware stack levels used: 1
 24082 ;; Hardware stack levels required when called: 5
 24083 ;; This function calls:
 24084 ;;		_SetSegmentValue
 24085 ;; This function is called by:
 24086 ;;		_main
 24087 ;; This function uses a non-reentrant model
 24088 ;;
 24089                           
 24090                           	psect	text88
 24091  0084F6                     __ptext88:
 24092                           	callstack 0
 24093  0084F6                     _ShowVersion:
 24094                           	callstack 25
 24095                           
 24096                           ; BSR set to: 1
 24097                           ;main_MC50.c: 256:     if(ts_system.TimeShowVersion<=0)
 24098                           
 24099                           ; BSR set to: 14
 24100                           ;incstack = 0
 24101  0084F6  BFD8               	btfsc	(_ts_system+61)& (0+255),7,b	;volatile
 24102  0084F8  D005               	goto	u20180
 24103  0084FA  51D8               	movf	(_ts_system+61)& (0+255),w,b	;volatile
 24104  0084FC  E12E               	bnz	l2039
 24105  0084FE  05D7               	decf	(_ts_system+60)& (0+255),w,b	;volatile
 24106  008500  B0D8               	btfsc	status,0,c
 24107  008502  0012               	return	
 24108  008504                     u20180:
 24109                           
 24110                           ; BSR set to: 1
 24111                           ;main_MC50.c: 257:     {;main_MC50.c: 259:             if(var_sys.StateVersion==0)
 24112  008504  5149               	movf	(_var_sys+73)& (0+255),w,b	;volatile
 24113  008506  A4D8               	btfss	status,2,c
 24114  008508  D006               	goto	l17270
 24115                           
 24116                           ; BSR set to: 1
 24117                           ;main_MC50.c: 260:             {;main_MC50.c: 261:                 SetSegmentValue((1/10
      +                          )%10,(1/1)%10);
 24118  00850A  0E01               	movlw	1
 24119  00850C  6E1C               	movwf	SetSegmentValue@d2^0,c
 24120  00850E  0E00               	movlw	0
 24121  008510  EC1D  F04A         	call	_SetSegmentValue
 24122                           
 24123                           ;main_MC50.c: 262:             }
 24124  008514  D01C               	goto	l2034
 24125  008516                     l17270:
 24126                           
 24127                           ; BSR set to: 1
 24128  008516  0549               	decf	(_var_sys+73)& (0+255),w,b	;volatile
 24129  008518  A4D8               	btfss	status,2,c
 24130  00851A  D006               	goto	l17274
 24131                           
 24132                           ; BSR set to: 1
 24133                           ;main_MC50.c: 264:             {;main_MC50.c: 265:                 SetSegmentValue(dr, (
      +                          180/100)%10);
 24134  00851C  0E01               	movlw	1
 24135  00851E  6E1C               	movwf	SetSegmentValue@d2^0,c
 24136  008520  0E14               	movlw	20
 24137  008522  EC1D  F04A         	call	_SetSegmentValue
 24138                           
 24139                           ;main_MC50.c: 266:             }
 24140  008526  D013               	goto	l2034
 24141  008528                     l17274:
 24142                           
 24143                           ; BSR set to: 1
 24144  008528  0E02               	movlw	2
 24145  00852A  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24146  00852C  A4D8               	btfss	status,2,c
 24147  00852E  D006               	goto	l17278
 24148                           
 24149                           ; BSR set to: 1
 24150                           ;main_MC50.c: 268:             {;main_MC50.c: 269:                 SetSegmentValue((180/
      +                          10)%10,(180/1)%10);
 24151  008530  0E00               	movlw	0
 24152  008532  6E1C               	movwf	SetSegmentValue@d2^0,c
 24153  008534  0E08               	movlw	8
 24154  008536  EC1D  F04A         	call	_SetSegmentValue
 24155                           
 24156                           ;main_MC50.c: 270:             }
 24157  00853A  D009               	goto	l2034
 24158  00853C                     l17278:
 24159                           
 24160                           ; BSR set to: 1
 24161  00853C  0E03               	movlw	3
 24162  00853E  1949               	xorwf	(_var_sys+73)& (0+255),w,b	;volatile
 24163  008540  A4D8               	btfss	status,2,c
 24164  008542  D005               	goto	l2034
 24165                           
 24166                           ; BSR set to: 1
 24167                           ;main_MC50.c: 272:             {;main_MC50.c: 273:                SetSegmentValue(dr, d2
      +                          );
 24168  008544  0E02               	movlw	2
 24169  008546  6E1C               	movwf	SetSegmentValue@d2^0,c
 24170  008548  0E14               	movlw	20
 24171  00854A  EC1D  F04A         	call	_SetSegmentValue
 24172  00854E                     l2034:
 24173                           
 24174                           ;main_MC50.c: 282:         var_sys.StateVersion++;
 24175                           
 24176                           ; BSR set to: 1
 24177  00854E  0101               	movlb	1	; () banked
 24178  008550  2B49               	incf	(_var_sys+73)& (0+255),f,b	;volatile
 24179                           
 24180                           ; BSR set to: 1
 24181                           ;main_MC50.c: 283:         ts_system.TimeShowVersion=(1000/50);
 24182  008552  0E00               	movlw	0
 24183  008554  6FD8               	movwf	(_ts_system+61)& (0+255),b	;volatile
 24184  008556  0E14               	movlw	20
 24185  008558  6FD7               	movwf	(_ts_system+60)& (0+255),b	;volatile
 24186  00855A                     l2039:
 24187                           
 24188                           ; BSR set to: 1
 24189  00855A  0012               	return		;funcret
 24190  00855C                     __end_of_ShowVersion:
 24191                           	callstack 0
 24192                           
 24193 ;; *************** function _SetSegmentValue *****************
 24194 ;; Defined at:
 24195 ;;		line 112 in file "outputs_MC50.c"
 24196 ;; Parameters:    Size  Location     Type
 24197 ;;  d1              1    wreg     unsigned char 
 24198 ;;  d2              1   27[COMRAM] unsigned char 
 24199 ;; Auto vars:     Size  Location     Type
 24200 ;;  d1              1   28[COMRAM] unsigned char 
 24201 ;; Return value:  Size  Location     Type
 24202 ;;                  1    wreg      void 
 24203 ;; Registers used:
 24204 ;;		wreg, status,2
 24205 ;; Tracked objects:
 24206 ;;		On entry : 0/0
 24207 ;;		On exit  : 3F/0
 24208 ;;		Unchanged: 0/0
 24209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24210 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24214 ;;Total ram usage:        2 bytes
 24215 ;; Hardware stack levels used: 1
 24216 ;; Hardware stack levels required when called: 4
 24217 ;; This function calls:
 24218 ;;		Nothing
 24219 ;; This function is called by:
 24220 ;;		_main
 24221 ;;		_ShowVersion
 24222 ;;		_controlSelectRemote
 24223 ;; This function uses a non-reentrant model
 24224 ;;
 24225                           
 24226                           	psect	text89
 24227  00943A                     __ptext89:
 24228                           	callstack 0
 24229  00943A                     _SetSegmentValue:
 24230                           	callstack 23
 24231                           
 24232                           ; BSR set to: 1
 24233                           ;incstack = 0
 24234                           ;SetSegmentValue@d1 stored from wreg
 24235  00943A  6E1D               	movwf	SetSegmentValue@d1^0,c
 24236                           
 24237                           ;outputs_MC50.c: 112: void SetSegmentValue(char d1, char d2);outputs_MC50.c: 113: {;outp
      +                          uts_MC50.c: 117:         dispStruct.display_grp.value_display1=d1;
 24238  00943C  C01D  F072         	movff	SetSegmentValue@d1,_dispStruct	;volatile
 24239                           
 24240                           ;outputs_MC50.c: 118:         dispStruct.display_grp.value_display2=d2;
 24241  009440  C01C  F073         	movff	SetSegmentValue@d2,_dispStruct+1	;volatile
 24242                           
 24243                           ;outputs_MC50.c: 119:         dispStruct.intermitentFreq=0;
 24244  009444  0E00               	movlw	0
 24245  009446  0100               	movlb	0	; () banked
 24246  009448  6F76               	movwf	(_dispStruct+4)& (0+255),b	;volatile
 24247  00944A  0E00               	movlw	0
 24248  00944C  6F75               	movwf	(_dispStruct+3)& (0+255),b	;volatile
 24249                           
 24250                           ; BSR set to: 0
 24251                           ;outputs_MC50.c: 120:         dispStruct.upFase=0;
 24252  00944E  0E00               	movlw	0
 24253  009450  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 24254                           
 24255                           ; BSR set to: 0
 24256  009452  0012               	return		;funcret
 24257  009454                     __end_of_SetSegmentValue:
 24258                           	callstack 0
 24259                           
 24260 ;; *************** function _SYSTEM_Initialize *****************
 24261 ;; Defined at:
 24262 ;;		line 50 in file "mcc_generated_files/mcc.c"
 24263 ;; Parameters:    Size  Location     Type
 24264 ;;		None
 24265 ;; Auto vars:     Size  Location     Type
 24266 ;;		None
 24267 ;; Return value:  Size  Location     Type
 24268 ;;                  1    wreg      void 
 24269 ;; Registers used:
 24270 ;;		wreg, status,2, status,0, cstack
 24271 ;; Tracked objects:
 24272 ;;		On entry : 3F/0
 24273 ;;		On exit  : 3F/E
 24274 ;;		Unchanged: 0/0
 24275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24280 ;;Total ram usage:        0 bytes
 24281 ;; Hardware stack levels used: 1
 24282 ;; Hardware stack levels required when called: 6
 24283 ;; This function calls:
 24284 ;;		_ADCC_Initialize
 24285 ;;		_EUSART1_Initialize
 24286 ;;		_I2C1_Initialize
 24287 ;;		_INTERRUPT_Initialize
 24288 ;;		_OSCILLATOR_Initialize
 24289 ;;		_PIN_MANAGER_Initialize
 24290 ;;		_PMD_Initialize
 24291 ;;		_TMR0_Initialize
 24292 ;;		_TMR1_Initialize
 24293 ;;		_TMR2_Initialize
 24294 ;;		_WWDT_Initialize
 24295 ;; This function is called by:
 24296 ;;		_main
 24297 ;; This function uses a non-reentrant model
 24298 ;;
 24299                           
 24300                           	psect	text90
 24301  008F2C                     __ptext90:
 24302                           	callstack 0
 24303  008F2C                     _SYSTEM_Initialize:
 24304                           	callstack 24
 24305                           
 24306                           ; BSR set to: 0
 24307                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 24308                           
 24309                           ; BSR set to: 0
 24310                           ;incstack = 0
 24311  008F2C  EC6E  F04B         	call	_INTERRUPT_Initialize	;wreg free
 24312                           
 24313                           ; BSR set to: 0
 24314                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 24315  008F30  ECDA  F049         	call	_PMD_Initialize	;wreg free
 24316                           
 24317                           ; BSR set to: 14
 24318                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 24319  008F34  ECA9  F04A         	call	_I2C1_Initialize	;wreg free
 24320                           
 24321                           ; BSR set to: 14
 24322                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 24323  008F38  EC50  F03C         	call	_PIN_MANAGER_Initialize	;wreg free
 24324                           
 24325                           ; BSR set to: 14
 24326                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 24327  008F3C  EC7F  F04A         	call	_OSCILLATOR_Initialize	;wreg free
 24328                           
 24329                           ; BSR set to: 14
 24330                           ;mcc_generated_files/mcc.c: 57:     WWDT_Initialize();
 24331  008F40  ECED  F04A         	call	_WWDT_Initialize	;wreg free
 24332                           
 24333                           ; BSR set to: 14
 24334                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 24335  008F44  ECED  F044         	call	_ADCC_Initialize	;wreg free
 24336                           
 24337                           ; BSR set to: 15
 24338                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 24339  008F48  ECEF  F047         	call	_TMR2_Initialize	;wreg free
 24340                           
 24341                           ; BSR set to: 14
 24342                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 24343  008F4C  EC3A  F046         	call	_TMR1_Initialize	;wreg free
 24344                           
 24345                           ; BSR set to: 14
 24346                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 24347  008F50  EC8B  F049         	call	_TMR0_Initialize	;wreg free
 24348                           
 24349                           ; BSR set to: 14
 24350                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
 24351  008F54  EC8C  F03F         	call	_EUSART1_Initialize	;wreg free
 24352                           
 24353                           ; BSR set to: 14
 24354  008F58  0012               	return		;funcret
 24355  008F5A                     __end_of_SYSTEM_Initialize:
 24356                           	callstack 0
 24357                           
 24358 ;; *************** function _WWDT_Initialize *****************
 24359 ;; Defined at:
 24360 ;;		line 96 in file "mcc_generated_files/mcc.c"
 24361 ;; Parameters:    Size  Location     Type
 24362 ;;		None
 24363 ;; Auto vars:     Size  Location     Type
 24364 ;;		None
 24365 ;; Return value:  Size  Location     Type
 24366 ;;                  1    wreg      void 
 24367 ;; Registers used:
 24368 ;;		wreg, status,2
 24369 ;; Tracked objects:
 24370 ;;		On entry : 3F/E
 24371 ;;		On exit  : 3F/E
 24372 ;;		Unchanged: 0/0
 24373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24378 ;;Total ram usage:        0 bytes
 24379 ;; Hardware stack levels used: 1
 24380 ;; Hardware stack levels required when called: 4
 24381 ;; This function calls:
 24382 ;;		Nothing
 24383 ;; This function is called by:
 24384 ;;		_SYSTEM_Initialize
 24385 ;; This function uses a non-reentrant model
 24386 ;;
 24387                           
 24388                           	psect	text91
 24389  0095DA                     __ptext91:
 24390                           	callstack 0
 24391  0095DA                     _WWDT_Initialize:
 24392                           	callstack 25
 24393                           
 24394                           ; BSR set to: 14
 24395                           ;mcc_generated_files/mcc.c: 99:     WDTCON0 = 22;
 24396                           
 24397                           ; BSR set to: 14
 24398                           ;incstack = 0
 24399  0095DA  0E16               	movlw	22
 24400  0095DC  6FD2               	movwf	210,b	;volatile
 24401                           
 24402                           ;mcc_generated_files/mcc.c: 100:     WDTCON1 = 7|32;
 24403  0095DE  0E27               	movlw	39
 24404  0095E0  6FD3               	movwf	211,b	;volatile
 24405                           
 24406                           ; BSR set to: 14
 24407  0095E2  0012               	return		;funcret
 24408  0095E4                     __end_of_WWDT_Initialize:
 24409                           	callstack 0
 24410                           
 24411 ;; *************** function _TMR2_Initialize *****************
 24412 ;; Defined at:
 24413 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 24414 ;; Parameters:    Size  Location     Type
 24415 ;;		None
 24416 ;; Auto vars:     Size  Location     Type
 24417 ;;		None
 24418 ;; Return value:  Size  Location     Type
 24419 ;;                  1    wreg      void 
 24420 ;; Registers used:
 24421 ;;		wreg, status,2, status,0, cstack
 24422 ;; Tracked objects:
 24423 ;;		On entry : 3F/F
 24424 ;;		On exit  : 3F/E
 24425 ;;		Unchanged: 0/0
 24426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24431 ;;Total ram usage:        0 bytes
 24432 ;; Hardware stack levels used: 1
 24433 ;; Hardware stack levels required when called: 5
 24434 ;; This function calls:
 24435 ;;		_TMR2_SetInterruptHandler
 24436 ;; This function is called by:
 24437 ;;		_SYSTEM_Initialize
 24438 ;; This function uses a non-reentrant model
 24439 ;;
 24440                           
 24441                           	psect	text92
 24442  008FDE                     __ptext92:
 24443                           	callstack 0
 24444  008FDE                     _TMR2_Initialize:
 24445                           	callstack 24
 24446                           
 24447                           ; BSR set to: 15
 24448                           ;mcc_generated_files/tmr2.c: 84:     T2CLKCON = 0x02;
 24449                           
 24450                           ; BSR set to: 14
 24451                           ;incstack = 0
 24452  008FDE  0E02               	movlw	2
 24453  008FE0  6EBF               	movwf	191,c	;volatile
 24454                           
 24455                           ;mcc_generated_files/tmr2.c: 87:     T2HLT = 0x40;
 24456  008FE2  0E40               	movlw	64
 24457  008FE4  6EBE               	movwf	190,c	;volatile
 24458                           
 24459                           ;mcc_generated_files/tmr2.c: 90:     T2RST = 0x00;
 24460  008FE6  0E00               	movlw	0
 24461  008FE8  6EC0               	movwf	192,c	;volatile
 24462                           
 24463                           ;mcc_generated_files/tmr2.c: 93:     T2PR = 0xC7;
 24464  008FEA  0EC7               	movlw	199
 24465  008FEC  6EBC               	movwf	188,c	;volatile
 24466                           
 24467                           ;mcc_generated_files/tmr2.c: 96:     T2TMR = 0x00;
 24468  008FEE  0E00               	movlw	0
 24469  008FF0  6EBB               	movwf	187,c	;volatile
 24470                           
 24471                           ; BSR set to: 15
 24472                           ;mcc_generated_files/tmr2.c: 99:     PIR4bits.TMR2IF = 0;
 24473  008FF2  010E               	movlb	14	; () banked
 24474  008FF4  93CE               	bcf	206,1,b	;volatile
 24475                           
 24476                           ; BSR set to: 14
 24477                           ;mcc_generated_files/tmr2.c: 102:     PIE4bits.TMR2IE = 1;
 24478  008FF6  83C6               	bsf	198,1,b	;volatile
 24479                           
 24480                           ; BSR set to: 14
 24481                           ;mcc_generated_files/tmr2.c: 105:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHand
      +                          ler);
 24482  008FF8  0E08               	movlw	low _TMR2_DefaultInterruptHandler
 24483  008FFA  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 24484  008FFC  0E97               	movlw	high _TMR2_DefaultInterruptHandler
 24485  008FFE  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 24486  009000  ECF2  F04A         	call	_TMR2_SetInterruptHandler	;wreg free
 24487                           
 24488                           ; BSR set to: 14
 24489                           ;mcc_generated_files/tmr2.c: 108:     T2CON = 0xD9;
 24490  009004  0ED9               	movlw	217
 24491  009006  6EBD               	movwf	189,c	;volatile
 24492                           
 24493                           ; BSR set to: 14
 24494  009008  0012               	return		;funcret
 24495  00900A                     __end_of_TMR2_Initialize:
 24496                           	callstack 0
 24497                           
 24498 ;; *************** function _TMR2_SetInterruptHandler *****************
 24499 ;; Defined at:
 24500 ;;		line 342 in file "mcc_generated_files/tmr2.c"
 24501 ;; Parameters:    Size  Location     Type
 24502 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24503 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 24504 ;; Auto vars:     Size  Location     Type
 24505 ;;		None
 24506 ;; Return value:  Size  Location     Type
 24507 ;;                  1    wreg      void 
 24508 ;; Registers used:
 24509 ;;		wreg, status,2, status,0
 24510 ;; Tracked objects:
 24511 ;;		On entry : 3F/E
 24512 ;;		On exit  : 3F/E
 24513 ;;		Unchanged: 3F/0
 24514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24519 ;;Total ram usage:        2 bytes
 24520 ;; Hardware stack levels used: 1
 24521 ;; Hardware stack levels required when called: 4
 24522 ;; This function calls:
 24523 ;;		Nothing
 24524 ;; This function is called by:
 24525 ;;		_TMR2_Initialize
 24526 ;; This function uses a non-reentrant model
 24527 ;;
 24528                           
 24529                           	psect	text93
 24530  0095E4                     __ptext93:
 24531                           	callstack 0
 24532  0095E4                     _TMR2_SetInterruptHandler:
 24533                           	callstack 24
 24534                           
 24535                           ; BSR set to: 14
 24536                           ;mcc_generated_files/tmr2.c: 343:     TMR2_InterruptHandler = InterruptHandler;
 24537                           
 24538                           ; BSR set to: 14
 24539                           ;incstack = 0
 24540  0095E4  C010  F2DF         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 24541  0095E8  C011  F2E0         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 24542                           
 24543                           ; BSR set to: 14
 24544  0095EC  0012               	return		;funcret
 24545  0095EE                     __end_of_TMR2_SetInterruptHandler:
 24546                           	callstack 0
 24547                           
 24548 ;; *************** function _TMR1_Initialize *****************
 24549 ;; Defined at:
 24550 ;;		line 66 in file "mcc_generated_files/tmr1.c"
 24551 ;; Parameters:    Size  Location     Type
 24552 ;;		None
 24553 ;; Auto vars:     Size  Location     Type
 24554 ;;		None
 24555 ;; Return value:  Size  Location     Type
 24556 ;;                  1    wreg      void 
 24557 ;; Registers used:
 24558 ;;		wreg, status,2, status,0, cstack
 24559 ;; Tracked objects:
 24560 ;;		On entry : 3F/E
 24561 ;;		On exit  : 3F/E
 24562 ;;		Unchanged: 0/0
 24563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24568 ;;Total ram usage:        2 bytes
 24569 ;; Hardware stack levels used: 1
 24570 ;; Hardware stack levels required when called: 5
 24571 ;; This function calls:
 24572 ;;		_TMR1_SetInterruptHandler
 24573 ;; This function is called by:
 24574 ;;		_SYSTEM_Initialize
 24575 ;; This function uses a non-reentrant model
 24576 ;;
 24577                           
 24578                           	psect	text94
 24579  008C74                     __ptext94:
 24580                           	callstack 0
 24581  008C74                     _TMR1_Initialize:
 24582                           	callstack 24
 24583                           
 24584                           ; BSR set to: 14
 24585                           ;mcc_generated_files/tmr1.c: 71:     T1GCON = 0x00;
 24586                           
 24587                           ; BSR set to: 14
 24588                           ;incstack = 0
 24589  008C74  0E00               	movlw	0
 24590  008C76  6ED0               	movwf	208,c	;volatile
 24591                           
 24592                           ;mcc_generated_files/tmr1.c: 74:     T1GATE = 0x00;
 24593  008C78  0E00               	movlw	0
 24594  008C7A  6ED1               	movwf	209,c	;volatile
 24595                           
 24596                           ;mcc_generated_files/tmr1.c: 77:     T1CLK = 0x01;
 24597  008C7C  0E01               	movlw	1
 24598  008C7E  6ED2               	movwf	210,c	;volatile
 24599                           
 24600                           ; BSR set to: 14
 24601                           ;mcc_generated_files/tmr1.c: 80:     TMR1H = 0xFF;
 24602  008C80  68CE               	setf	206,c	;volatile
 24603                           
 24604                           ;mcc_generated_files/tmr1.c: 83:     TMR1L = 0x38;
 24605  008C82  0E38               	movlw	56
 24606  008C84  6ECD               	movwf	205,c	;volatile
 24607                           
 24608                           ; BSR set to: 14
 24609                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
 24610  008C86  91CE               	bcf	206,0,b	;volatile
 24611                           
 24612                           ; BSR set to: 14
 24613                           ;mcc_generated_files/tmr1.c: 89:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 24614  008C88  50CD               	movf	205,w,c	;volatile
 24615  008C8A  CFCE F012          	movff	4046,??_TMR1_Initialize	;volatile
 24616  008C8E  6A13               	clrf	(??_TMR1_Initialize+1)^0,c
 24617  008C90  C012  F013         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 24618  008C94  6A12               	clrf	??_TMR1_Initialize^0,c
 24619  008C96  1012               	iorwf	??_TMR1_Initialize^0,w,c
 24620  008C98  0102               	movlb	2	; () banked
 24621  008C9A  6FE3               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 24622  008C9C  5013               	movf	(??_TMR1_Initialize+1)^0,w,c
 24623  008C9E  6FE4               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 24624                           
 24625                           ; BSR set to: 2
 24626                           ;mcc_generated_files/tmr1.c: 92:     PIE4bits.TMR1IE = 1;
 24627  008CA0  010E               	movlb	14	; () banked
 24628  008CA2  81C6               	bsf	198,0,b	;volatile
 24629                           
 24630                           ; BSR set to: 14
 24631                           ;mcc_generated_files/tmr1.c: 95:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 24632  008CA4  0E0A               	movlw	low _TMR1_DefaultInterruptHandler
 24633  008CA6  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
 24634  008CA8  0E97               	movlw	high _TMR1_DefaultInterruptHandler
 24635  008CAA  6E11               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
 24636  008CAC  ECF7  F04A         	call	_TMR1_SetInterruptHandler	;wreg free
 24637                           
 24638                           ; BSR set to: 14
 24639                           ;mcc_generated_files/tmr1.c: 98:     T1CON = 0x31;
 24640  008CB0  0E31               	movlw	49
 24641  008CB2  6ECF               	movwf	207,c	;volatile
 24642                           
 24643                           ; BSR set to: 14
 24644  008CB4  0012               	return		;funcret
 24645  008CB6                     __end_of_TMR1_Initialize:
 24646                           	callstack 0
 24647                           
 24648 ;; *************** function _TMR1_SetInterruptHandler *****************
 24649 ;; Defined at:
 24650 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 24651 ;; Parameters:    Size  Location     Type
 24652 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24653 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 24654 ;; Auto vars:     Size  Location     Type
 24655 ;;		None
 24656 ;; Return value:  Size  Location     Type
 24657 ;;                  1    wreg      void 
 24658 ;; Registers used:
 24659 ;;		wreg, status,2, status,0
 24660 ;; Tracked objects:
 24661 ;;		On entry : 3F/E
 24662 ;;		On exit  : 3F/E
 24663 ;;		Unchanged: 3F/0
 24664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24669 ;;Total ram usage:        2 bytes
 24670 ;; Hardware stack levels used: 1
 24671 ;; Hardware stack levels required when called: 4
 24672 ;; This function calls:
 24673 ;;		Nothing
 24674 ;; This function is called by:
 24675 ;;		_TMR1_Initialize
 24676 ;; This function uses a non-reentrant model
 24677 ;;
 24678                           
 24679                           	psect	text95
 24680  0095EE                     __ptext95:
 24681                           	callstack 0
 24682  0095EE                     _TMR1_SetInterruptHandler:
 24683                           	callstack 24
 24684                           
 24685                           ; BSR set to: 14
 24686                           ;mcc_generated_files/tmr1.c: 193:     TMR1_InterruptHandler = InterruptHandler;
 24687                           
 24688                           ; BSR set to: 14
 24689                           ;incstack = 0
 24690  0095EE  C010  F2E1         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 24691  0095F2  C011  F2E2         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 24692                           
 24693                           ; BSR set to: 14
 24694  0095F6  0012               	return		;funcret
 24695  0095F8                     __end_of_TMR1_SetInterruptHandler:
 24696                           	callstack 0
 24697                           
 24698 ;; *************** function _TMR0_Initialize *****************
 24699 ;; Defined at:
 24700 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 24701 ;; Parameters:    Size  Location     Type
 24702 ;;		None
 24703 ;; Auto vars:     Size  Location     Type
 24704 ;;		None
 24705 ;; Return value:  Size  Location     Type
 24706 ;;                  1    wreg      void 
 24707 ;; Registers used:
 24708 ;;		wreg, status,2, status,0, cstack
 24709 ;; Tracked objects:
 24710 ;;		On entry : 3F/E
 24711 ;;		On exit  : 3F/E
 24712 ;;		Unchanged: 0/0
 24713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24718 ;;Total ram usage:        0 bytes
 24719 ;; Hardware stack levels used: 1
 24720 ;; Hardware stack levels required when called: 5
 24721 ;; This function calls:
 24722 ;;		_TMR0_SetInterruptHandler
 24723 ;; This function is called by:
 24724 ;;		_SYSTEM_Initialize
 24725 ;; This function uses a non-reentrant model
 24726 ;;
 24727                           
 24728                           	psect	text96
 24729  009316                     __ptext96:
 24730                           	callstack 0
 24731  009316                     _TMR0_Initialize:
 24732                           	callstack 24
 24733                           
 24734                           ; BSR set to: 14
 24735                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x41;
 24736                           
 24737                           ; BSR set to: 14
 24738                           ;incstack = 0
 24739  009316  0E41               	movlw	65
 24740  009318  6ED6               	movwf	214,c	;volatile
 24741                           
 24742                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x84;
 24743  00931A  0E84               	movlw	132
 24744  00931C  6ED4               	movwf	212,c	;volatile
 24745                           
 24746                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
 24747  00931E  0E00               	movlw	0
 24748  009320  6ED3               	movwf	211,c	;volatile
 24749                           
 24750                           ; BSR set to: 14
 24751                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
 24752  009322  9BCA               	bcf	202,5,b	;volatile
 24753                           
 24754                           ; BSR set to: 14
 24755                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
 24756  009324  8BC2               	bsf	194,5,b	;volatile
 24757                           
 24758                           ; BSR set to: 14
 24759                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 24760  009326  0E0C               	movlw	low _TMR0_DefaultInterruptHandler
 24761  009328  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 24762  00932A  0E97               	movlw	high _TMR0_DefaultInterruptHandler
 24763  00932C  6E11               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 24764  00932E  ECFC  F04A         	call	_TMR0_SetInterruptHandler	;wreg free
 24765                           
 24766                           ; BSR set to: 14
 24767                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x87;
 24768  009332  0E87               	movlw	135
 24769  009334  6ED5               	movwf	213,c	;volatile
 24770                           
 24771                           ; BSR set to: 14
 24772  009336  0012               	return		;funcret
 24773  009338                     __end_of_TMR0_Initialize:
 24774                           	callstack 0
 24775                           
 24776 ;; *************** function _TMR0_SetInterruptHandler *****************
 24777 ;; Defined at:
 24778 ;;		line 143 in file "mcc_generated_files/tmr0.c"
 24779 ;; Parameters:    Size  Location     Type
 24780 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 24781 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 24782 ;; Auto vars:     Size  Location     Type
 24783 ;;		None
 24784 ;; Return value:  Size  Location     Type
 24785 ;;                  1    wreg      void 
 24786 ;; Registers used:
 24787 ;;		wreg, status,2, status,0
 24788 ;; Tracked objects:
 24789 ;;		On entry : 3F/E
 24790 ;;		On exit  : 3F/E
 24791 ;;		Unchanged: 3F/0
 24792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24797 ;;Total ram usage:        2 bytes
 24798 ;; Hardware stack levels used: 1
 24799 ;; Hardware stack levels required when called: 4
 24800 ;; This function calls:
 24801 ;;		Nothing
 24802 ;; This function is called by:
 24803 ;;		_TMR0_Initialize
 24804 ;; This function uses a non-reentrant model
 24805 ;;
 24806                           
 24807                           	psect	text97
 24808  0095F8                     __ptext97:
 24809                           	callstack 0
 24810  0095F8                     _TMR0_SetInterruptHandler:
 24811                           	callstack 24
 24812                           
 24813                           ; BSR set to: 14
 24814                           ;mcc_generated_files/tmr0.c: 144:     TMR0_InterruptHandler = InterruptHandler;
 24815                           
 24816                           ; BSR set to: 14
 24817                           ;incstack = 0
 24818  0095F8  C010  F2E5         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 24819  0095FC  C011  F2E6         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 24820                           
 24821                           ; BSR set to: 14
 24822  009600  0012               	return		;funcret
 24823  009602                     __end_of_TMR0_SetInterruptHandler:
 24824                           	callstack 0
 24825                           
 24826 ;; *************** function _PMD_Initialize *****************
 24827 ;; Defined at:
 24828 ;;		line 79 in file "mcc_generated_files/mcc.c"
 24829 ;; Parameters:    Size  Location     Type
 24830 ;;		None
 24831 ;; Auto vars:     Size  Location     Type
 24832 ;;		None
 24833 ;; Return value:  Size  Location     Type
 24834 ;;                  1    wreg      void 
 24835 ;; Registers used:
 24836 ;;		wreg, status,2
 24837 ;; Tracked objects:
 24838 ;;		On entry : 3F/0
 24839 ;;		On exit  : 3F/E
 24840 ;;		Unchanged: 0/0
 24841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24846 ;;Total ram usage:        0 bytes
 24847 ;; Hardware stack levels used: 1
 24848 ;; Hardware stack levels required when called: 4
 24849 ;; This function calls:
 24850 ;;		Nothing
 24851 ;; This function is called by:
 24852 ;;		_SYSTEM_Initialize
 24853 ;; This function uses a non-reentrant model
 24854 ;;
 24855                           
 24856                           	psect	text98
 24857  0093B4                     __ptext98:
 24858                           	callstack 0
 24859  0093B4                     _PMD_Initialize:
 24860                           	callstack 25
 24861                           
 24862                           ; BSR set to: 0
 24863                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
 24864                           
 24865                           ; BSR set to: 14
 24866                           ;incstack = 0
 24867  0093B4  0E00               	movlw	0
 24868  0093B6  010E               	movlb	14	; () banked
 24869  0093B8  6FE1               	movwf	225,b	;volatile
 24870                           
 24871                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
 24872  0093BA  0E00               	movlw	0
 24873  0093BC  6FE2               	movwf	226,b	;volatile
 24874                           
 24875                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
 24876  0093BE  0E00               	movlw	0
 24877  0093C0  6FE3               	movwf	227,b	;volatile
 24878                           
 24879                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
 24880  0093C2  0E00               	movlw	0
 24881  0093C4  6FE4               	movwf	228,b	;volatile
 24882                           
 24883                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
 24884  0093C6  0E00               	movlw	0
 24885  0093C8  6FE5               	movwf	229,b	;volatile
 24886                           
 24887                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
 24888  0093CA  0E00               	movlw	0
 24889  0093CC  6FE6               	movwf	230,b	;volatile
 24890                           
 24891                           ; BSR set to: 14
 24892  0093CE  0012               	return		;funcret
 24893  0093D0                     __end_of_PMD_Initialize:
 24894                           	callstack 0
 24895                           
 24896 ;; *************** function _PIN_MANAGER_Initialize *****************
 24897 ;; Defined at:
 24898 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 24899 ;; Parameters:    Size  Location     Type
 24900 ;;		None
 24901 ;; Auto vars:     Size  Location     Type
 24902 ;;		None
 24903 ;; Return value:  Size  Location     Type
 24904 ;;                  1    wreg      void 
 24905 ;; Registers used:
 24906 ;;		wreg, status,2
 24907 ;; Tracked objects:
 24908 ;;		On entry : 3F/E
 24909 ;;		On exit  : 3F/E
 24910 ;;		Unchanged: 0/0
 24911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24916 ;;Total ram usage:        0 bytes
 24917 ;; Hardware stack levels used: 1
 24918 ;; Hardware stack levels required when called: 4
 24919 ;; This function calls:
 24920 ;;		Nothing
 24921 ;; This function is called by:
 24922 ;;		_SYSTEM_Initialize
 24923 ;; This function uses a non-reentrant model
 24924 ;;
 24925                           
 24926                           	psect	text99
 24927  0078A0                     __ptext99:
 24928                           	callstack 0
 24929  0078A0                     _PIN_MANAGER_Initialize:
 24930                           	callstack 25
 24931                           
 24932                           ; BSR set to: 14
 24933                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 24934                           
 24935                           ; BSR set to: 14
 24936                           ;incstack = 0
 24937  0078A0  0E00               	movlw	0
 24938  0078A2  6E87               	movwf	135,c	;volatile
 24939                           
 24940                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 24941  0078A4  0E00               	movlw	0
 24942  0078A6  6E86               	movwf	134,c	;volatile
 24943                           
 24944                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 24945  0078A8  0E00               	movlw	0
 24946  0078AA  6E83               	movwf	131,c	;volatile
 24947                           
 24948                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 24949  0078AC  0E00               	movlw	0
 24950  0078AE  6E84               	movwf	132,c	;volatile
 24951                           
 24952                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 24953  0078B0  0E00               	movlw	0
 24954  0078B2  6E85               	movwf	133,c	;volatile
 24955                           
 24956                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
 24957  0078B4  0E00               	movlw	0
 24958  0078B6  6E8C               	movwf	140,c	;volatile
 24959                           
 24960                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x7F;
 24961  0078B8  0E7F               	movlw	127
 24962  0078BA  6E88               	movwf	136,c	;volatile
 24963                           
 24964                           ; BSR set to: 14
 24965                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 24966  0078BC  6889               	setf	137,c	;volatile
 24967                           
 24968                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x58;
 24969  0078BE  0E58               	movlw	88
 24970  0078C0  6E8A               	movwf	138,c	;volatile
 24971                           
 24972                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
 24973  0078C2  0E00               	movlw	0
 24974  0078C4  6E8B               	movwf	139,c	;volatile
 24975                           
 24976                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
 24977  0078C6  0E00               	movlw	0
 24978  0078C8  010F               	movlb	15	; () banked
 24979  0078CA  6F26               	movwf	38,b	;volatile
 24980                           
 24981                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
 24982  0078CC  0E00               	movlw	0
 24983  0078CE  6F21               	movwf	33,b	;volatile
 24984                           
 24985                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
 24986  0078D0  0E00               	movlw	0
 24987  0078D2  6F19               	movwf	25,b	;volatile
 24988                           
 24989                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
 24990  0078D4  0E00               	movlw	0
 24991  0078D6  6F2E               	movwf	46,b	;volatile
 24992                           
 24993                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x01;
 24994  0078D8  0E01               	movlw	1
 24995  0078DA  6F11               	movwf	17,b	;volatile
 24996                           
 24997                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 24998  0078DC  0E00               	movlw	0
 24999  0078DE  6F25               	movwf	37,b	;volatile
 25000                           
 25001                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 25002  0078E0  0E00               	movlw	0
 25003  0078E2  6F2D               	movwf	45,b	;volatile
 25004                           
 25005                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0xF7;
 25006  0078E4  0EF7               	movlw	247
 25007  0078E6  6F18               	movwf	24,b	;volatile
 25008                           
 25009                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 25010  0078E8  0E00               	movlw	0
 25011  0078EA  6F10               	movwf	16,b	;volatile
 25012                           
 25013                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 25014  0078EC  0E00               	movlw	0
 25015  0078EE  6F20               	movwf	32,b	;volatile
 25016                           
 25017                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 25018  0078F0  0E00               	movlw	0
 25019  0078F2  6F2C               	movwf	44,b	;volatile
 25020                           
 25021                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 25022  0078F4  0E00               	movlw	0
 25023  0078F6  6F0F               	movwf	15,b	;volatile
 25024                           
 25025                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 25026  0078F8  0E00               	movlw	0
 25027  0078FA  6F17               	movwf	23,b	;volatile
 25028                           
 25029                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 25030  0078FC  0E00               	movlw	0
 25031  0078FE  6F1F               	movwf	31,b	;volatile
 25032                           
 25033                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 25034  007900  0E00               	movlw	0
 25035  007902  6F24               	movwf	36,b	;volatile
 25036                           
 25037                           ; BSR set to: 15
 25038                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 25039  007904  690E               	setf	14,b	;volatile
 25040                           
 25041                           ; BSR set to: 15
 25042                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 25043  007906  6916               	setf	22,b	;volatile
 25044                           
 25045                           ; BSR set to: 15
 25046                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 25047  007908  691E               	setf	30,b	;volatile
 25048                           
 25049                           ; BSR set to: 15
 25050                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 25051  00790A  6923               	setf	35,b	;volatile
 25052                           
 25053                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 25054  00790C  0E07               	movlw	7
 25055  00790E  6F2B               	movwf	43,b	;volatile
 25056                           
 25057                           ; BSR set to: 15
 25058                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 25059  007910  690D               	setf	13,b	;volatile
 25060                           
 25061                           ; BSR set to: 15
 25062                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 25063  007912  6915               	setf	21,b	;volatile
 25064                           
 25065                           ; BSR set to: 15
 25066                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 25067  007914  691D               	setf	29,b	;volatile
 25068                           
 25069                           ; BSR set to: 15
 25070                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 25071  007916  6922               	setf	34,b	;volatile
 25072                           
 25073                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
 25074  007918  0E0F               	movlw	15
 25075  00791A  6F2A               	movwf	42,b	;volatile
 25076                           
 25077                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 25078  00791C  0E13               	movlw	19
 25079  00791E  010E               	movlb	14	; () banked
 25080  007920  6FB7               	movwf	183,b	;volatile
 25081                           
 25082                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
 25083  007922  0E16               	movlw	22
 25084  007924  6FB5               	movwf	181,b	;volatile
 25085                           
 25086                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
 25087  007926  0E0F               	movlw	15
 25088  007928  6FFA               	movwf	250,b	;volatile
 25089                           
 25090                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x10;
 25091  00792A  0E10               	movlw	16
 25092  00792C  6FFB               	movwf	251,b	;volatile
 25093                           
 25094                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
 25095  00792E  0E09               	movlw	9
 25096  007930  6FFE               	movwf	254,b	;volatile
 25097                           
 25098                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 25099  007932  0E14               	movlw	20
 25100  007934  6FB8               	movwf	184,b	;volatile
 25101                           
 25102                           ; BSR set to: 14
 25103  007936  0012               	return		;funcret
 25104  007938                     __end_of_PIN_MANAGER_Initialize:
 25105                           	callstack 0
 25106                           
 25107 ;; *************** function _OSCILLATOR_Initialize *****************
 25108 ;; Defined at:
 25109 ;;		line 65 in file "mcc_generated_files/mcc.c"
 25110 ;; Parameters:    Size  Location     Type
 25111 ;;		None
 25112 ;; Auto vars:     Size  Location     Type
 25113 ;;		None
 25114 ;; Return value:  Size  Location     Type
 25115 ;;                  1    wreg      void 
 25116 ;; Registers used:
 25117 ;;		wreg, status,2
 25118 ;; Tracked objects:
 25119 ;;		On entry : 3F/E
 25120 ;;		On exit  : 3F/E
 25121 ;;		Unchanged: 0/0
 25122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25127 ;;Total ram usage:        0 bytes
 25128 ;; Hardware stack levels used: 1
 25129 ;; Hardware stack levels required when called: 4
 25130 ;; This function calls:
 25131 ;;		Nothing
 25132 ;; This function is called by:
 25133 ;;		_SYSTEM_Initialize
 25134 ;; This function uses a non-reentrant model
 25135 ;;
 25136                           
 25137                           	psect	text100
 25138  0094FE                     __ptext100:
 25139                           	callstack 0
 25140  0094FE                     _OSCILLATOR_Initialize:
 25141                           	callstack 25
 25142                           
 25143                           ; BSR set to: 14
 25144                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x60;
 25145                           
 25146                           ; BSR set to: 14
 25147                           ;incstack = 0
 25148  0094FE  0E60               	movlw	96
 25149  009500  6FD8               	movwf	216,b	;volatile
 25150                           
 25151                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
 25152  009502  0E00               	movlw	0
 25153  009504  6FDA               	movwf	218,b	;volatile
 25154                           
 25155                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
 25156  009506  0E00               	movlw	0
 25157  009508  6FDC               	movwf	220,b	;volatile
 25158                           
 25159                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x08;
 25160  00950A  0E08               	movlw	8
 25161  00950C  6FDE               	movwf	222,b	;volatile
 25162                           
 25163                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
 25164  00950E  0E00               	movlw	0
 25165  009510  6FDD               	movwf	221,b	;volatile
 25166                           
 25167                           ; BSR set to: 14
 25168  009512  0012               	return		;funcret
 25169  009514                     __end_of_OSCILLATOR_Initialize:
 25170                           	callstack 0
 25171                           
 25172 ;; *************** function _INTERRUPT_Initialize *****************
 25173 ;; Defined at:
 25174 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25175 ;; Parameters:    Size  Location     Type
 25176 ;;		None
 25177 ;; Auto vars:     Size  Location     Type
 25178 ;;		None
 25179 ;; Return value:  Size  Location     Type
 25180 ;;                  1    wreg      void 
 25181 ;; Registers used:
 25182 ;;		None
 25183 ;; Tracked objects:
 25184 ;;		On entry : 3F/0
 25185 ;;		On exit  : 3F/0
 25186 ;;		Unchanged: 3F/0
 25187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25192 ;;Total ram usage:        0 bytes
 25193 ;; Hardware stack levels used: 1
 25194 ;; Hardware stack levels required when called: 4
 25195 ;; This function calls:
 25196 ;;		Nothing
 25197 ;; This function is called by:
 25198 ;;		_SYSTEM_Initialize
 25199 ;; This function uses a non-reentrant model
 25200 ;;
 25201                           
 25202                           	psect	text101
 25203  0096DC                     __ptext101:
 25204                           	callstack 0
 25205  0096DC                     _INTERRUPT_Initialize:
 25206                           	callstack 25
 25207                           
 25208                           ; BSR set to: 0
 25209                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
 25210                           
 25211                           ; BSR set to: 14
 25212                           ;incstack = 0
 25213  0096DC  9AF2               	bcf	242,5,c	;volatile
 25214                           
 25215                           ; BSR set to: 0
 25216  0096DE  0012               	return		;funcret
 25217  0096E0                     __end_of_INTERRUPT_Initialize:
 25218                           	callstack 0
 25219                           
 25220 ;; *************** function _I2C1_Initialize *****************
 25221 ;; Defined at:
 25222 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 25223 ;; Parameters:    Size  Location     Type
 25224 ;;		None
 25225 ;; Auto vars:     Size  Location     Type
 25226 ;;		None
 25227 ;; Return value:  Size  Location     Type
 25228 ;;                  1    wreg      void 
 25229 ;; Registers used:
 25230 ;;		wreg, status,2
 25231 ;; Tracked objects:
 25232 ;;		On entry : 3F/E
 25233 ;;		On exit  : 3F/E
 25234 ;;		Unchanged: 3F/0
 25235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25240 ;;Total ram usage:        0 bytes
 25241 ;; Hardware stack levels used: 1
 25242 ;; Hardware stack levels required when called: 4
 25243 ;; This function calls:
 25244 ;;		Nothing
 25245 ;; This function is called by:
 25246 ;;		_SYSTEM_Initialize
 25247 ;; This function uses a non-reentrant model
 25248 ;;
 25249                           
 25250                           	psect	text102
 25251  009552                     __ptext102:
 25252                           	callstack 0
 25253  009552                     _I2C1_Initialize:
 25254                           	callstack 25
 25255                           
 25256                           ; BSR set to: 14
 25257                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 25258                           
 25259                           ; BSR set to: 0
 25260                           ;incstack = 0
 25261  009552  0E80               	movlw	128
 25262  009554  6E95               	movwf	149,c	;volatile
 25263                           
 25264                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 25265  009556  0E08               	movlw	8
 25266  009558  6E96               	movwf	150,c	;volatile
 25267                           
 25268                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 25269  00955A  0E00               	movlw	0
 25270  00955C  6E97               	movwf	151,c	;volatile
 25271                           
 25272                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x9F;
 25273  00955E  0E9F               	movlw	159
 25274  009560  6E93               	movwf	147,c	;volatile
 25275                           
 25276                           ; BSR set to: 14
 25277                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 25278  009562  9A96               	bcf	150,5,c	;volatile
 25279                           
 25280                           ; BSR set to: 14
 25281  009564  0012               	return		;funcret
 25282  009566                     __end_of_I2C1_Initialize:
 25283                           	callstack 0
 25284                           
 25285 ;; *************** function _EUSART1_Initialize *****************
 25286 ;; Defined at:
 25287 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 25288 ;; Parameters:    Size  Location     Type
 25289 ;;		None
 25290 ;; Auto vars:     Size  Location     Type
 25291 ;;		None
 25292 ;; Return value:  Size  Location     Type
 25293 ;;                  1    wreg      void 
 25294 ;; Registers used:
 25295 ;;		wreg, status,2, status,0, cstack
 25296 ;; Tracked objects:
 25297 ;;		On entry : 3F/E
 25298 ;;		On exit  : 3F/E
 25299 ;;		Unchanged: 0/0
 25300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25305 ;;Total ram usage:        0 bytes
 25306 ;; Hardware stack levels used: 1
 25307 ;; Hardware stack levels required when called: 5
 25308 ;; This function calls:
 25309 ;;		_EUSART1_SetErrorHandler
 25310 ;;		_EUSART1_SetFramingErrorHandler
 25311 ;;		_EUSART1_SetOverrunErrorHandler
 25312 ;;		_EUSART1_SetRxInterruptHandler
 25313 ;;		_EUSART1_SetTxInterruptHandler
 25314 ;; This function is called by:
 25315 ;;		_SYSTEM_Initialize
 25316 ;; This function uses a non-reentrant model
 25317 ;;
 25318                           
 25319                           	psect	text103
 25320  007F18                     __ptext103:
 25321                           	callstack 0
 25322  007F18                     _EUSART1_Initialize:
 25323                           	callstack 24
 25324                           
 25325                           ; BSR set to: 14
 25326                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 25327                           
 25328                           ; BSR set to: 14
 25329                           ;incstack = 0
 25330  007F18  9BC5               	bcf	197,5,b	;volatile
 25331                           
 25332                           ; BSR set to: 14
 25333                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 25334  007F1A  0E06               	movlw	low _EUSART1_Receive_ISR
 25335  007F1C  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
 25336  007F1E  0E78               	movlw	high _EUSART1_Receive_ISR
 25337  007F20  6E11               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
 25338  007F22  EC06  F04B         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 25339                           
 25340                           ; BSR set to: 14
 25341                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 25342  007F26  99C5               	bcf	197,4,b	;volatile
 25343                           
 25344                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 25345  007F28  0ECA               	movlw	low _EUSART1_Transmit_ISR
 25346  007F2A  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
 25347  007F2C  0E8E               	movlw	high _EUSART1_Transmit_ISR
 25348  007F2E  6E11               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
 25349  007F30  EC01  F04B         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 25350                           
 25351                           ; BSR set to: 14
 25352                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 25353  007F34  0E08               	movlw	8
 25354  007F36  6E9F               	movwf	159,c	;volatile
 25355                           
 25356                           ; BSR set to: 14
 25357                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 25358  007F38  0E90               	movlw	144
 25359  007F3A  6E9D               	movwf	157,c	;volatile
 25360                           
 25361                           ; BSR set to: 14
 25362                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 25363  007F3C  0E24               	movlw	36
 25364  007F3E  6E9E               	movwf	158,c	;volatile
 25365                           
 25366                           ; BSR set to: 14
 25367                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x82;
 25368  007F40  0E82               	movlw	130
 25369  007F42  6E9B               	movwf	155,c	;volatile
 25370                           
 25371                           ; BSR set to: 14
 25372                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x06;
 25373  007F44  0E06               	movlw	6
 25374  007F46  6E9C               	movwf	156,c	;volatile
 25375                           
 25376                           ; BSR set to: 14
 25377                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 25378  007F48  0E0E               	movlw	low _EUSART1_DefaultFramingErrorHandler
 25379  007F4A  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
 25380  007F4C  0E97               	movlw	high _EUSART1_DefaultFramingErrorHandler
 25381  007F4E  6E11               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 25382  007F50  EC10  F04B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 25383                           
 25384                           ; BSR set to: 14
 25385                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 25386  007F54  0EC6               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 25387  007F56  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
 25388  007F58  0E96               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 25389  007F5A  6E11               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 25390  007F5C  EC0B  F04B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 25391                           
 25392                           ; BSR set to: 14
 25393                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 25394  007F60  0ECC               	movlw	low _EUSART1_DefaultErrorHandler
 25395  007F62  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
 25396  007F64  0E96               	movlw	high _EUSART1_DefaultErrorHandler
 25397  007F66  6E11               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
 25398  007F68  EC15  F04B         	call	_EUSART1_SetErrorHandler	;wreg free
 25399                           
 25400                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 25401  007F6C  0E00               	movlw	0
 25402  007F6E  0101               	movlb	1	; () banked
 25403  007F70  6F9A               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 25404                           
 25405                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 25406  007F72  0E00               	movlw	0
 25407  007F74  0100               	movlb	0	; () banked
 25408  007F76  6F97               	movwf	_eusart1TxHead& (0+255),b	;volatile
 25409                           
 25410                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 25411  007F78  0E00               	movlw	0
 25412  007F7A  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 25413                           
 25414                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 25415  007F7C  0E08               	movlw	8
 25416  007F7E  0101               	movlb	1	; () banked
 25417  007F80  6FFF               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 25418                           
 25419                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 25420  007F82  0E00               	movlw	0
 25421  007F84  0100               	movlb	0	; () banked
 25422  007F86  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 25423                           
 25424                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 25425  007F88  0E00               	movlw	0
 25426  007F8A  6F94               	movwf	_eusart1RxTail& (0+255),b	;volatile
 25427                           
 25428                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 25429  007F8C  0E00               	movlw	0
 25430  007F8E  6F93               	movwf	_eusart1RxCount& (0+255),b	;volatile
 25431                           
 25432                           ; BSR set to: 0
 25433                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 25434  007F90  010E               	movlb	14	; () banked
 25435  007F92  8BC5               	bsf	197,5,b	;volatile
 25436                           
 25437                           ; BSR set to: 14
 25438  007F94  0012               	return		;funcret
 25439  007F96                     __end_of_EUSART1_Initialize:
 25440                           	callstack 0
 25441                           
 25442 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 25443 ;; Defined at:
 25444 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 25445 ;; Parameters:    Size  Location     Type
 25446 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25447 ;;		 -> EUSART1_Transmit_ISR(1), 
 25448 ;; Auto vars:     Size  Location     Type
 25449 ;;		None
 25450 ;; Return value:  Size  Location     Type
 25451 ;;                  1    wreg      void 
 25452 ;; Registers used:
 25453 ;;		wreg, status,2, status,0
 25454 ;; Tracked objects:
 25455 ;;		On entry : 3F/E
 25456 ;;		On exit  : 3F/E
 25457 ;;		Unchanged: 3F/0
 25458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25463 ;;Total ram usage:        2 bytes
 25464 ;; Hardware stack levels used: 1
 25465 ;; Hardware stack levels required when called: 4
 25466 ;; This function calls:
 25467 ;;		Nothing
 25468 ;; This function is called by:
 25469 ;;		_EUSART1_Initialize
 25470 ;; This function uses a non-reentrant model
 25471 ;;
 25472                           
 25473                           	psect	text104
 25474  009602                     __ptext104:
 25475                           	callstack 0
 25476  009602                     _EUSART1_SetTxInterruptHandler:
 25477                           	callstack 24
 25478                           
 25479                           ; BSR set to: 14
 25480                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 25481                           
 25482                           ; BSR set to: 14
 25483                           ;incstack = 0
 25484  009602  C010  F2EF         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 25485  009606  C011  F2F0         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 25486                           
 25487                           ; BSR set to: 14
 25488  00960A  0012               	return		;funcret
 25489  00960C                     __end_of_EUSART1_SetTxInterruptHandler:
 25490                           	callstack 0
 25491                           
 25492 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 25493 ;; Defined at:
 25494 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 25495 ;; Parameters:    Size  Location     Type
 25496 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25497 ;;		 -> EUSART1_Receive_ISR(1), 
 25498 ;; Auto vars:     Size  Location     Type
 25499 ;;		None
 25500 ;; Return value:  Size  Location     Type
 25501 ;;                  1    wreg      void 
 25502 ;; Registers used:
 25503 ;;		wreg, status,2, status,0
 25504 ;; Tracked objects:
 25505 ;;		On entry : 3F/E
 25506 ;;		On exit  : 3F/E
 25507 ;;		Unchanged: 3F/0
 25508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25513 ;;Total ram usage:        2 bytes
 25514 ;; Hardware stack levels used: 1
 25515 ;; Hardware stack levels required when called: 4
 25516 ;; This function calls:
 25517 ;;		Nothing
 25518 ;; This function is called by:
 25519 ;;		_EUSART1_Initialize
 25520 ;; This function uses a non-reentrant model
 25521 ;;
 25522                           
 25523                           	psect	text105
 25524  00960C                     __ptext105:
 25525                           	callstack 0
 25526  00960C                     _EUSART1_SetRxInterruptHandler:
 25527                           	callstack 24
 25528                           
 25529                           ; BSR set to: 14
 25530                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 25531                           
 25532                           ; BSR set to: 14
 25533                           ;incstack = 0
 25534  00960C  C010  F2ED         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 25535  009610  C011  F2EE         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 25536                           
 25537                           ; BSR set to: 14
 25538  009614  0012               	return		;funcret
 25539  009616                     __end_of_EUSART1_SetRxInterruptHandler:
 25540                           	callstack 0
 25541                           
 25542 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 25543 ;; Defined at:
 25544 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 25545 ;; Parameters:    Size  Location     Type
 25546 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25547 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 25548 ;; Auto vars:     Size  Location     Type
 25549 ;;		None
 25550 ;; Return value:  Size  Location     Type
 25551 ;;                  1    wreg      void 
 25552 ;; Registers used:
 25553 ;;		wreg, status,2, status,0
 25554 ;; Tracked objects:
 25555 ;;		On entry : 3F/E
 25556 ;;		On exit  : 3F/E
 25557 ;;		Unchanged: 3F/0
 25558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25563 ;;Total ram usage:        2 bytes
 25564 ;; Hardware stack levels used: 1
 25565 ;; Hardware stack levels required when called: 4
 25566 ;; This function calls:
 25567 ;;		Nothing
 25568 ;; This function is called by:
 25569 ;;		_EUSART1_Initialize
 25570 ;; This function uses a non-reentrant model
 25571 ;;
 25572                           
 25573                           	psect	text106
 25574  009616                     __ptext106:
 25575                           	callstack 0
 25576  009616                     _EUSART1_SetOverrunErrorHandler:
 25577                           	callstack 24
 25578                           
 25579                           ; BSR set to: 14
 25580                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 25581                           
 25582                           ; BSR set to: 14
 25583                           ;incstack = 0
 25584  009616  C010  F2E9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 25585  00961A  C011  F2EA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 25586                           
 25587                           ; BSR set to: 14
 25588  00961E  0012               	return		;funcret
 25589  009620                     __end_of_EUSART1_SetOverrunErrorHandler:
 25590                           	callstack 0
 25591                           
 25592 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 25593 ;; Defined at:
 25594 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 25595 ;; Parameters:    Size  Location     Type
 25596 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25597 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 25598 ;; Auto vars:     Size  Location     Type
 25599 ;;		None
 25600 ;; Return value:  Size  Location     Type
 25601 ;;                  1    wreg      void 
 25602 ;; Registers used:
 25603 ;;		wreg, status,2, status,0
 25604 ;; Tracked objects:
 25605 ;;		On entry : 3F/E
 25606 ;;		On exit  : 3F/E
 25607 ;;		Unchanged: 3F/0
 25608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25613 ;;Total ram usage:        2 bytes
 25614 ;; Hardware stack levels used: 1
 25615 ;; Hardware stack levels required when called: 4
 25616 ;; This function calls:
 25617 ;;		Nothing
 25618 ;; This function is called by:
 25619 ;;		_EUSART1_Initialize
 25620 ;; This function uses a non-reentrant model
 25621 ;;
 25622                           
 25623                           	psect	text107
 25624  009620                     __ptext107:
 25625                           	callstack 0
 25626  009620                     _EUSART1_SetFramingErrorHandler:
 25627                           	callstack 24
 25628                           
 25629                           ; BSR set to: 14
 25630                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 25631                           
 25632                           ; BSR set to: 14
 25633                           ;incstack = 0
 25634  009620  C010  F2EB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 25635  009624  C011  F2EC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 25636                           
 25637                           ; BSR set to: 14
 25638  009628  0012               	return		;funcret
 25639  00962A                     __end_of_EUSART1_SetFramingErrorHandler:
 25640                           	callstack 0
 25641                           
 25642 ;; *************** function _EUSART1_SetErrorHandler *****************
 25643 ;; Defined at:
 25644 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 25645 ;; Parameters:    Size  Location     Type
 25646 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
 25647 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 25648 ;; Auto vars:     Size  Location     Type
 25649 ;;		None
 25650 ;; Return value:  Size  Location     Type
 25651 ;;                  1    wreg      void 
 25652 ;; Registers used:
 25653 ;;		wreg, status,2, status,0
 25654 ;; Tracked objects:
 25655 ;;		On entry : 3F/E
 25656 ;;		On exit  : 3F/E
 25657 ;;		Unchanged: 3F/0
 25658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25663 ;;Total ram usage:        2 bytes
 25664 ;; Hardware stack levels used: 1
 25665 ;; Hardware stack levels required when called: 4
 25666 ;; This function calls:
 25667 ;;		Nothing
 25668 ;; This function is called by:
 25669 ;;		_EUSART1_Initialize
 25670 ;; This function uses a non-reentrant model
 25671 ;;
 25672                           
 25673                           	psect	text108
 25674  00962A                     __ptext108:
 25675                           	callstack 0
 25676  00962A                     _EUSART1_SetErrorHandler:
 25677                           	callstack 24
 25678                           
 25679                           ; BSR set to: 14
 25680                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 25681                           
 25682                           ; BSR set to: 14
 25683                           ;incstack = 0
 25684  00962A  C010  F2E7         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 25685  00962E  C011  F2E8         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 25686                           
 25687                           ; BSR set to: 14
 25688  009632  0012               	return		;funcret
 25689  009634                     __end_of_EUSART1_SetErrorHandler:
 25690                           	callstack 0
 25691                           
 25692 ;; *************** function _ADCC_Initialize *****************
 25693 ;; Defined at:
 25694 ;;		line 62 in file "mcc_generated_files/adcc.c"
 25695 ;; Parameters:    Size  Location     Type
 25696 ;;		None
 25697 ;; Auto vars:     Size  Location     Type
 25698 ;;		None
 25699 ;; Return value:  Size  Location     Type
 25700 ;;                  1    wreg      void 
 25701 ;; Registers used:
 25702 ;;		wreg, status,2
 25703 ;; Tracked objects:
 25704 ;;		On entry : 3F/E
 25705 ;;		On exit  : 3F/F
 25706 ;;		Unchanged: 0/0
 25707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25712 ;;Total ram usage:        0 bytes
 25713 ;; Hardware stack levels used: 1
 25714 ;; Hardware stack levels required when called: 4
 25715 ;; This function calls:
 25716 ;;		Nothing
 25717 ;; This function is called by:
 25718 ;;		_SYSTEM_Initialize
 25719 ;; This function uses a non-reentrant model
 25720 ;;
 25721                           
 25722                           	psect	text109
 25723  0089DA                     __ptext109:
 25724                           	callstack 0
 25725  0089DA                     _ADCC_Initialize:
 25726                           	callstack 25
 25727                           
 25728                           ; BSR set to: 14
 25729                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 25730                           
 25731                           ; BSR set to: 14
 25732                           ;incstack = 0
 25733  0089DA  0E00               	movlw	0
 25734  0089DC  6E6A               	movwf	106,c	;volatile
 25735                           
 25736                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 25737  0089DE  0E00               	movlw	0
 25738  0089E0  6E6B               	movwf	107,c	;volatile
 25739                           
 25740                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 25741  0089E2  0E00               	movlw	0
 25742  0089E4  6E6C               	movwf	108,c	;volatile
 25743                           
 25744                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 25745  0089E6  0E00               	movlw	0
 25746  0089E8  6E6D               	movwf	109,c	;volatile
 25747                           
 25748                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 25749  0089EA  0E00               	movlw	0
 25750  0089EC  6E68               	movwf	104,c	;volatile
 25751                           
 25752                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 25753  0089EE  0E00               	movlw	0
 25754  0089F0  6E69               	movwf	105,c	;volatile
 25755                           
 25756                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
 25757  0089F2  0E00               	movlw	0
 25758  0089F4  6E66               	movwf	102,c	;volatile
 25759                           
 25760                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
 25761  0089F6  0E00               	movlw	0
 25762  0089F8  010F               	movlb	15	; () banked
 25763  0089FA  6F5F               	movwf	95,b	;volatile
 25764                           
 25765                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
 25766  0089FC  0E00               	movlw	0
 25767  0089FE  6F5D               	movwf	93,b	;volatile
 25768                           
 25769                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
 25770  008A00  0E00               	movlw	0
 25771  008A02  6F5E               	movwf	94,b	;volatile
 25772                           
 25773                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
 25774  008A04  0E00               	movlw	0
 25775  008A06  6F59               	movwf	89,b	;volatile
 25776                           
 25777                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
 25778  008A08  0E00               	movlw	0
 25779  008A0A  6F5A               	movwf	90,b	;volatile
 25780                           
 25781                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
 25782  008A0C  0E00               	movlw	0
 25783  008A0E  6F5B               	movwf	91,b	;volatile
 25784                           
 25785                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
 25786  008A10  0E00               	movlw	0
 25787  008A12  6E65               	movwf	101,c	;volatile
 25788                           
 25789                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
 25790  008A14  0E00               	movlw	0
 25791  008A16  6F58               	movwf	88,b	;volatile
 25792                           
 25793                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
 25794  008A18  0E00               	movlw	0
 25795  008A1A  6F56               	movwf	86,b	;volatile
 25796                           
 25797                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x3F;
 25798  008A1C  0E3F               	movlw	63
 25799  008A1E  6F57               	movwf	87,b	;volatile
 25800                           
 25801                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x80;
 25802  008A20  0E80               	movlw	128
 25803  008A22  6E60               	movwf	96,c	;volatile
 25804                           
 25805                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
 25806  008A24  0E00               	movlw	0
 25807  008A26  6F5C               	movwf	92,b	;volatile
 25808                           
 25809                           ; BSR set to: 15
 25810  008A28  0012               	return		;funcret
 25811  008A2A                     __end_of_ADCC_Initialize:
 25812                           	callstack 0
 25813                           
 25814 ;; *************** function _EUSART1_is_rx_ready *****************
 25815 ;; Defined at:
 25816 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 25817 ;; Parameters:    Size  Location     Type
 25818 ;;		None
 25819 ;; Auto vars:     Size  Location     Type
 25820 ;;		None
 25821 ;; Return value:  Size  Location     Type
 25822 ;;                  1    wreg      _Bool 
 25823 ;; Registers used:
 25824 ;;		wreg, status,2
 25825 ;; Tracked objects:
 25826 ;;		On entry : 0/1
 25827 ;;		On exit  : 3F/0
 25828 ;;		Unchanged: 0/0
 25829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25834 ;;Total ram usage:        0 bytes
 25835 ;; Hardware stack levels used: 1
 25836 ;; Hardware stack levels required when called: 4
 25837 ;; This function calls:
 25838 ;;		Nothing
 25839 ;; This function is called by:
 25840 ;;		_main
 25841 ;; This function uses a non-reentrant model
 25842 ;;
 25843                           
 25844                           	psect	text110
 25845  009578                     __ptext110:
 25846                           	callstack 0
 25847  009578                     _EUSART1_is_rx_ready:
 25848                           	callstack 26
 25849                           
 25850                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 25851                           
 25852                           ; BSR set to: 15
 25853                           ;incstack = 0
 25854  009578  0100               	movlb	0	; () banked
 25855  00957A  5193               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 25856  00957C  B4D8               	btfsc	status,2,c
 25857  00957E  D002               	goto	u18460
 25858  009580  0E01               	movlw	1
 25859  009582  0012               	return	
 25860  009584                     u18460:
 25861  009584  0E00               	movlw	0
 25862                           
 25863                           ; BSR set to: 0
 25864  009586  0012               	return		;funcret
 25865  009588                     __end_of_EUSART1_is_rx_ready:
 25866                           	callstack 0
 25867                           
 25868 ;; *************** function _ControlMotor *****************
 25869 ;; Defined at:
 25870 ;;		line 703 in file "outputs_MC50.c"
 25871 ;; Parameters:    Size  Location     Type
 25872 ;;		None
 25873 ;; Auto vars:     Size  Location     Type
 25874 ;;  stateMotor      1   23[COMRAM] enum E10381
 25875 ;; Return value:  Size  Location     Type
 25876 ;;                  1    wreg      void 
 25877 ;; Registers used:
 25878 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25879 ;; Tracked objects:
 25880 ;;		On entry : 3E/1
 25881 ;;		On exit  : 3E/0
 25882 ;;		Unchanged: 0/0
 25883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25886 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25887 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25888 ;;Total ram usage:        7 bytes
 25889 ;; Hardware stack levels used: 1
 25890 ;; Hardware stack levels required when called: 5
 25891 ;; This function calls:
 25892 ;;		_VerifyElectricalBrake
 25893 ;; This function is called by:
 25894 ;;		_main
 25895 ;; This function uses a non-reentrant model
 25896 ;;
 25897                           
 25898                           	psect	text111
 25899  004BE0                     __ptext111:
 25900                           	callstack 0
 25901  004BE0                     _ControlMotor:
 25902                           	callstack 25
 25903                           
 25904                           ;outputs_MC50.c: 707:     if((var_sys.TimeMaxMotorIsON<=0) && (var_sys.WorkTimeMaxAlarmS
      +                          tate!=Clear) && (var_sys.LearningIsEnabled==NO) && (var_sys.PositionIsLost==NO)){
 25905                           
 25906                           ; BSR set to: 0
 25907                           ;incstack = 0
 25908  004BE0  0101               	movlb	1	; () banked
 25909  004BE2  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 25910  004BE4  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 25911  004BE6  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 25912  004BE8  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 25913  004BEA  A4D8               	btfss	status,2,c
 25914  004BEC  D00D               	goto	l17296
 25915                           
 25916                           ; BSR set to: 1
 25917  004BEE  5142               	movf	(_var_sys+66)& (0+255),w,b	;volatile
 25918  004BF0  B4D8               	btfsc	status,2,c
 25919  004BF2  D00A               	goto	l17296
 25920                           
 25921                           ; BSR set to: 1
 25922  004BF4  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 25923  004BF6  A4D8               	btfss	status,2,c
 25924  004BF8  D007               	goto	l17296
 25925                           
 25926                           ; BSR set to: 1
 25927  004BFA  5148               	movf	(_var_sys+72)& (0+255),w,b	;volatile
 25928  004BFC  A4D8               	btfss	status,2,c
 25929  004BFE  D004               	goto	l17296
 25930                           
 25931                           ; BSR set to: 1
 25932                           ;outputs_MC50.c: 708:         var_sys.StateMotor = Stopped;
 25933  004C00  0E00               	movlw	0
 25934  004C02  6F00               	movwf	_var_sys& (0+255),b	;volatile
 25935                           
 25936                           ;outputs_MC50.c: 709:         var_sys.WorkTimeMaxAlarmState=EmAlarme;
 25937  004C04  0E02               	movlw	2
 25938  004C06  D007               	goto	L100
 25939  004C08                     l17296:
 25940                           
 25941                           ; BSR set to: 1
 25942  004C08  0542               	decf	(_var_sys+66)& (0+255),w,b	;volatile
 25943  004C0A  A4D8               	btfss	status,2,c
 25944  004C0C  D005               	goto	l17302
 25945                           
 25946                           ; BSR set to: 1
 25947  004C0E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25948  004C10  A4D8               	btfss	status,2,c
 25949  004C12  D002               	goto	l17302
 25950                           
 25951                           ; BSR set to: 1
 25952                           ;outputs_MC50.c: 716:     {;outputs_MC50.c: 717:          var_sys.WorkTimeMaxAlarmState=
      +                          Clear;
 25953  004C14  0E00               	movlw	0
 25954  004C16                     L100:
 25955  004C16  6F42               	movwf	(_var_sys+66)& (0+255),b	;volatile
 25956  004C18                     l17302:
 25957                           
 25958                           ; BSR set to: 1
 25959                           ;outputs_MC50.c: 721:     stateMotor_enum stateMotor=VerifyElectricalBrake(var_sys.State
      +                          Motor);
 25960  004C18  5100               	movf	_var_sys& (0+255),w,b	;volatile
 25961  004C1A  EC46  F040         	call	_VerifyElectricalBrake
 25962  004C1E  6E18               	movwf	ControlMotor@stateMotor^0,c
 25963                           
 25964                           ;outputs_MC50.c: 722:     if(stateMotor == Stopped )
 25965  004C20  5018               	movf	ControlMotor@stateMotor^0,w,c
 25966  004C22  A4D8               	btfss	status,2,c
 25967  004C24  D00A               	goto	l17312
 25968                           
 25969                           ;outputs_MC50.c: 723:     {;outputs_MC50.c: 724:         var_sys.InStoping = YES;
 25970  004C26  0E01               	movlw	1
 25971  004C28  0101               	movlb	1	; () banked
 25972  004C2A  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 25973                           
 25974                           ; BSR set to: 1
 25975                           ;outputs_MC50.c: 725:         if(ts_system.ts_TRIACWait>=0)
 25976  004C2C  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 25977  004C2E  0012               	return	
 25978                           
 25979                           ; BSR set to: 1
 25980                           
 25981                           ;outputs_MC50.c: 726:         {;outputs_MC50.c: 727:             do { LATEbits.LATE1 = 0
      +                          ; } while(0);
 25982  004C30  9287               	bcf	135,1,c	;volatile
 25983                           
 25984                           ; BSR set to: 1
 25985                           
 25986                           ;outputs_MC50.c: 728:             do { LATEbits.LATE0 = 0; } while(0);
 25987  004C32  9087               	bcf	135,0,c	;volatile
 25988  004C34                     l17310:
 25989                           
 25990                           ; BSR set to: 1
 25991                           ;outputs_MC50.c: 729:             var_sys.Activatecounter = stoped ;
 25992  004C34  0E00               	movlw	0
 25993  004C36  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 25994  004C38  0012               	return	
 25995  004C3A                     l17312:
 25996  004C3A  0100               	movlb	0	; () banked
 25997  004C3C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 25998  004C3E  A4D8               	btfss	status,2,c
 25999  004C40  D022               	goto	l17328
 26000                           
 26001                           ; BSR set to: 0
 26002  004C42  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 26003  004C44  A4D8               	btfss	status,2,c
 26004  004C46  D01F               	goto	l17328
 26005                           
 26006                           ; BSR set to: 0
 26007  004C48  0101               	movlb	1	; () banked
 26008  004C4A  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26009  004C4C  A4D8               	btfss	status,2,c
 26010  004C4E  D01B               	goto	l17328
 26011                           
 26012                           ; BSR set to: 1
 26013  004C50  5018               	movf	ControlMotor@stateMotor^0,w,c
 26014  004C52  A4D8               	btfss	status,2,c
 26015                           
 26016                           ; BSR set to: 1
 26017  004C54  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26018  004C56  D017               	goto	l17328
 26019  004C58  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26020  004C5A  E103               	bnz	u20350
 26021  004C5C  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 26022  004C5E  A0D8               	btfss	status,0,c
 26023  004C60  D012               	goto	l17328
 26024  004C62                     u20350:
 26025                           
 26026                           ; BSR set to: 1
 26027  004C62  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 26028  004C64  D005               	goto	u20360
 26029  004C66  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 26030  004C68  E10E               	bnz	l17328
 26031  004C6A  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 26032  004C6C  B0D8               	btfsc	status,0,c
 26033  004C6E  D00B               	goto	l17328
 26034  004C70                     u20360:
 26035                           
 26036                           ; BSR set to: 1
 26037                           ;outputs_MC50.c: 739:     {;outputs_MC50.c: 742:         if ( ts_system.TimeElectricBrak
      +                          e<(((5+6)*( 100/50))-(2*( 100/50))) )
 26038  004C70  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26039  004C72  D006               	goto	u20370
 26040  004C74  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26041  004C76  E103               	bnz	u20371
 26042  004C78  0E12               	movlw	18
 26043  004C7A  5DC3               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 26044  004C7C  B0D8               	btfsc	status,0,c
 26045  004C7E                     u20371:
 26046  004C7E  0012               	return	
 26047  004C80                     u20370:
 26048                           
 26049                           ; BSR set to: 1
 26050                           
 26051                           ;outputs_MC50.c: 743:         {;outputs_MC50.c: 748:             do { LATEbits.LATE1 = 1
      +                          ; } while(0);
 26052  004C80  8287               	bsf	135,1,c	;volatile
 26053                           
 26054                           ; BSR set to: 1
 26055                           
 26056                           ;outputs_MC50.c: 749:             do { LATEbits.LATE0 = 1; } while(0);
 26057  004C82  8087               	bsf	135,0,c	;volatile
 26058  004C84  D7D7               	goto	l17310
 26059  004C86                     l17328:
 26060  004C86  0418               	decf	ControlMotor@stateMotor^0,w,c
 26061  004C88  B4D8               	btfsc	status,2,c
 26062  004C8A  D004               	goto	u20390
 26063  004C8C  0E02               	movlw	2
 26064  004C8E  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 26065  004C90  A4D8               	btfss	status,2,c
 26066  004C92  D063               	goto	l17358
 26067  004C94                     u20390:
 26068  004C94  0101               	movlb	1	; () banked
 26069  004C96  5104               	movf	(_var_sys+4)& (0+255),w,b	;volatile
 26070  004C98  A4D8               	btfss	status,2,c
 26071  004C9A  D05F               	goto	l17358
 26072                           
 26073                           ; BSR set to: 1
 26074                           ;outputs_MC50.c: 761:     {;outputs_MC50.c: 762:         if((PORTEbits.RE1==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 1))
 26075  004C9C  B291               	btfsc	145,1,c	;volatile
 26076  004C9E  D004               	goto	u20420
 26077                           
 26078                           ; BSR set to: 1
 26079  004CA0  0100               	movlb	0	; () banked
 26080  004CA2  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26081  004CA4  B4D8               	btfsc	status,2,c
 26082  004CA6  D006               	goto	u20440
 26083  004CA8                     u20420:
 26084  004CA8  B091               	btfsc	145,0,c	;volatile
 26085  004CAA  D04F               	goto	l2348
 26086  004CAC  0100               	movlb	0	; () banked
 26087  004CAE  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26088  004CB0  A4D8               	btfss	status,2,c
 26089  004CB2  D04B               	goto	l2348
 26090  004CB4                     u20440:
 26091                           
 26092                           ; BSR set to: 0
 26093                           ;outputs_MC50.c: 763:         {;outputs_MC50.c: 764:             if((PORTEbits.RE0==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 26094  004CB4  B091               	btfsc	145,0,c	;volatile
 26095  004CB6  D003               	goto	u20460
 26096                           
 26097                           ; BSR set to: 0
 26098  004CB8  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26099  004CBA  B4D8               	btfsc	status,2,c
 26100  004CBC  D005               	goto	u20480
 26101  004CBE                     u20460:
 26102                           
 26103                           ; BSR set to: 0
 26104  004CBE  B291               	btfsc	145,1,c	;volatile
 26105  004CC0  D03A               	goto	l17354
 26106                           
 26107                           ; BSR set to: 0
 26108  004CC2  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26109  004CC4  A4D8               	btfss	status,2,c
 26110  004CC6  D037               	goto	l17354
 26111  004CC8                     u20480:
 26112                           
 26113                           ; BSR set to: 0
 26114                           ;outputs_MC50.c: 765:             {;outputs_MC50.c: 766:                 var_sys.InStopi
      +                          ng = NO;
 26115  004CC8  0E00               	movlw	0
 26116  004CCA  0101               	movlb	1	; () banked
 26117  004CCC  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26118                           
 26119                           ;outputs_MC50.c: 767:                 ts_system.ts_TRIACWait=200;
 26120  004CCE  0E00               	movlw	0
 26121  004CD0  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 26122  004CD2  0EC8               	movlw	200
 26123  004CD4  6FA1               	movwf	(_ts_system+6)& (0+255),b	;volatile
 26124                           
 26125                           ;outputs_MC50.c: 768:                 ts_system.TimeChargeCondesador=(1000/50);
 26126  004CD6  0E00               	movlw	0
 26127  004CD8  6FB6               	movwf	(_ts_system+27)& (0+255),b	;volatile
 26128  004CDA  0E14               	movlw	20
 26129  004CDC  6FB5               	movwf	(_ts_system+26)& (0+255),b	;volatile
 26130                           
 26131                           ; BSR set to: 1
 26132                           ;outputs_MC50.c: 769:                 if (var_sys.FimCurso_CloseIsEnabled == YES|| var_s
      +                          ys.Statedoorcontrol == st_Closed ){
 26133  004CDE  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 26134  004CE0  B4D8               	btfsc	status,2,c
 26135  004CE2  D003               	goto	u20500
 26136                           
 26137                           ; BSR set to: 1
 26138  004CE4  051C               	decf	(_var_sys+28)& (0+255),w,b	;volatile
 26139  004CE6  A4D8               	btfss	status,2,c
 26140  004CE8  D024               	goto	l17352
 26141  004CEA                     u20500:
 26142                           
 26143                           ; BSR set to: 1
 26144                           ;outputs_MC50.c: 770:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+((unsigned int)var_sys_NVM.decelarationOpen)*( 500/50))+var_sys_N
      +                          VM.learningTimeToOpen + (1000/50)*4;
 26145  004CEA  0100               	movlb	0	; () banked
 26146  004CEC  5198               	movf	_var_sys_NVM& (0+255),w,b	;volatile
 26147  004CEE  0D0A               	mullw	10
 26148  004CF0  CFF3 F012          	movff	prodl,??_ControlMotor
 26149  004CF4  CFF4 F013          	movff	prodh,??_ControlMotor+1
 26150  004CF8  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 26151  004CFA  2612               	addwf	??_ControlMotor^0,f,c
 26152  004CFC  0E00               	movlw	0
 26153  004CFE  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 26154  004D00  5012               	movf	??_ControlMotor^0,w,c
 26155  004D02  25CC               	addwf	(_var_sys_NVM+52)& (0+255),w,b	;volatile
 26156  004D04  6E14               	movwf	(??_ControlMotor+2)^0,c
 26157  004D06  5013               	movf	(??_ControlMotor+1)^0,w,c
 26158  004D08  21CD               	addwfc	(_var_sys_NVM+53)& (0+255),w,b	;volatile
 26159  004D0A  6E15               	movwf	(??_ControlMotor+3)^0,c
 26160  004D0C  0E00               	movlw	0
 26161  004D0E  21CE               	addwfc	(_var_sys_NVM+54)& (0+255),w,b	;volatile
 26162  004D10  6E16               	movwf	(??_ControlMotor+4)^0,c
 26163  004D12  0E00               	movlw	0
 26164  004D14  21CF               	addwfc	(_var_sys_NVM+55)& (0+255),w,b	;volatile
 26165  004D16  6E17               	movwf	(??_ControlMotor+5)^0,c
 26166  004D18  0E50               	movlw	80
 26167  004D1A  2414               	addwf	(??_ControlMotor+2)^0,w,c
 26168  004D1C  0101               	movlb	1	; () banked
 26169  004D1E  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 26170  004D20  0E00               	movlw	0
 26171  004D22  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 26172  004D24  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 26173  004D26  0E00               	movlw	0
 26174  004D28  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 26175  004D2A  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 26176  004D2C  0E00               	movlw	0
 26177  004D2E  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 26178  004D30  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 26179  004D32                     l17352:
 26180                           
 26181                           ; BSR set to: 1
 26182                           ;outputs_MC50.c: 775:                 var_sys.Statedoorcontrol = st_Opening;
 26183  004D32  0E02               	movlw	2
 26184  004D34  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 26185  004D36                     l17354:
 26186                           
 26187                           ;outputs_MC50.c: 779:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE0 = 1; } while(0);}
 26188  004D36  0100               	movlb	0	; () banked
 26189  004D38  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26190  004D3A  A4D8               	btfss	status,2,c
 26191  004D3C  D002               	goto	l2365
 26192                           
 26193                           ; BSR set to: 0
 26194  004D3E  8087               	bsf	135,0,c	;volatile
 26195  004D40  D001               	goto	l17356
 26196  004D42                     l2365:
 26197                           
 26198                           ; BSR set to: 0
 26199  004D42  8287               	bsf	135,1,c	;volatile
 26200  004D44                     l17356:
 26201                           
 26202                           ; BSR set to: 0
 26203                           ;outputs_MC50.c: 781:             var_sys.Activatecounter = open ;
 26204  004D44  0E01               	movlw	1
 26205  004D46  0101               	movlb	1	; () banked
 26206  004D48  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26207  004D4A                     l2348:
 26208                           
 26209                           ;outputs_MC50.c: 785:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E1 = 0; } while(0);}
 26210  004D4A  0100               	movlb	0	; () banked
 26211  004D4C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26212  004D4E  A4D8               	btfss	status,2,c
 26213  004D50  D002               	goto	l2371
 26214                           
 26215                           ; BSR set to: 0
 26216  004D52  9287               	bcf	135,1,c	;volatile
 26217  004D54  0012               	return	
 26218  004D56                     l2371:
 26219                           
 26220                           ; BSR set to: 0
 26221  004D56  9087               	bcf	135,0,c	;volatile
 26222  004D58  0012               	return	
 26223  004D5A                     l17358:
 26224  004D5A  0E03               	movlw	3
 26225  004D5C  1818               	xorwf	ControlMotor@stateMotor^0,w,c
 26226  004D5E  A4D8               	btfss	status,2,c
 26227  004D60  0012               	return	
 26228  004D62  0101               	movlb	1	; () banked
 26229  004D64  5103               	movf	(_var_sys+3)& (0+255),w,b	;volatile
 26230  004D66  A4D8               	btfss	status,2,c
 26231  004D68  0012               	return	
 26232                           
 26233                           ; BSR set to: 1
 26234                           ;outputs_MC50.c: 791:     {;outputs_MC50.c: 792:         if((PORTEbits.RE0==0 && var_sys
      +                          _NVM.Direction_motor == 0)||(PORTEbits.RE1==0 && var_sys_NVM.Direction_motor == 1))
 26235  004D6A  B091               	btfsc	145,0,c	;volatile
 26236  004D6C  D004               	goto	u20560
 26237                           
 26238                           ; BSR set to: 1
 26239  004D6E  0100               	movlb	0	; () banked
 26240  004D70  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26241  004D72  B4D8               	btfsc	status,2,c
 26242  004D74  D006               	goto	u20580
 26243  004D76                     u20560:
 26244  004D76  B291               	btfsc	145,1,c	;volatile
 26245  004D78  D050               	goto	l2375
 26246  004D7A  0100               	movlb	0	; () banked
 26247  004D7C  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26248  004D7E  A4D8               	btfss	status,2,c
 26249  004D80  D04C               	goto	l2375
 26250  004D82                     u20580:
 26251                           
 26252                           ; BSR set to: 0
 26253                           ;outputs_MC50.c: 793:         {;outputs_MC50.c: 794:             if((PORTEbits.RE1==0 &&
      +                           var_sys_NVM.Direction_motor == 0)||(PORTEbits.RE0==0 && var_sys_NVM.Direction_motor == 
      +                          1))
 26254  004D82  B291               	btfsc	145,1,c	;volatile
 26255  004D84  D003               	goto	u20600
 26256                           
 26257                           ; BSR set to: 0
 26258  004D86  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26259  004D88  B4D8               	btfsc	status,2,c
 26260  004D8A  D005               	goto	u20620
 26261  004D8C                     u20600:
 26262                           
 26263                           ; BSR set to: 0
 26264  004D8C  B091               	btfsc	145,0,c	;volatile
 26265  004D8E  D03B               	goto	l17382
 26266                           
 26267                           ; BSR set to: 0
 26268  004D90  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26269  004D92  A4D8               	btfss	status,2,c
 26270  004D94  D038               	goto	l17382
 26271  004D96                     u20620:
 26272                           
 26273                           ; BSR set to: 0
 26274                           ;outputs_MC50.c: 795:             {;outputs_MC50.c: 796:                 var_sys.InStopi
      +                          ng = NO;
 26275  004D96  0E00               	movlw	0
 26276  004D98  0101               	movlb	1	; () banked
 26277  004D9A  6F0D               	movwf	(_var_sys+13)& (0+255),b	;volatile
 26278                           
 26279                           ;outputs_MC50.c: 797:                 ts_system.ts_TRIACWait=200;
 26280  004D9C  0E00               	movlw	0
 26281  004D9E  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 26282  004DA0  0EC8               	movlw	200
 26283  004DA2  6FA1               	movwf	(_ts_system+6)& (0+255),b	;volatile
 26284                           
 26285                           ;outputs_MC50.c: 798:                 ts_system.TimeChargeCondesador=(1000/50);
 26286  004DA4  0E00               	movlw	0
 26287  004DA6  6FB6               	movwf	(_ts_system+27)& (0+255),b	;volatile
 26288  004DA8  0E14               	movlw	20
 26289  004DAA  6FB5               	movwf	(_ts_system+26)& (0+255),b	;volatile
 26290                           
 26291                           ; BSR set to: 1
 26292                           ;outputs_MC50.c: 799:                 if (var_sys.FimCurso_OpenIsEnabled == YES|| var_sy
      +                          s.Statedoorcontrol == st_Opened){
 26293  004DAC  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 26294  004DAE  B4D8               	btfsc	status,2,c
 26295  004DB0  D004               	goto	u20640
 26296                           
 26297                           ; BSR set to: 1
 26298  004DB2  0E04               	movlw	4
 26299  004DB4  191C               	xorwf	(_var_sys+28)& (0+255),w,b	;volatile
 26300  004DB6  A4D8               	btfss	status,2,c
 26301  004DB8  D024               	goto	l17380
 26302  004DBA                     u20640:
 26303                           
 26304                           ; BSR set to: 1
 26305                           ;outputs_MC50.c: 800:                 var_sys.TimeMaxMotorIsON=((unsigned int)var_sys_NV
      +                          M.velocityDecelaration+(unsigned int)var_sys_NVM.decelarationClose*( 500/50))+var_sys_NV
      +                          M.learningTimeToClose + (1000/50)*4;
 26306  004DBA  0100               	movlb	0	; () banked
 26307  004DBC  5199               	movf	(_var_sys_NVM+1)& (0+255),w,b	;volatile
 26308  004DBE  0D0A               	mullw	10
 26309  004DC0  CFF3 F012          	movff	prodl,??_ControlMotor
 26310  004DC4  CFF4 F013          	movff	prodh,??_ControlMotor+1
 26311  004DC8  51B0               	movf	(_var_sys_NVM+24)& (0+255),w,b	;volatile
 26312  004DCA  2612               	addwf	??_ControlMotor^0,f,c
 26313  004DCC  0E00               	movlw	0
 26314  004DCE  2213               	addwfc	(??_ControlMotor+1)^0,f,c
 26315  004DD0  5012               	movf	??_ControlMotor^0,w,c
 26316  004DD2  25D0               	addwf	(_var_sys_NVM+56)& (0+255),w,b	;volatile
 26317  004DD4  6E14               	movwf	(??_ControlMotor+2)^0,c
 26318  004DD6  5013               	movf	(??_ControlMotor+1)^0,w,c
 26319  004DD8  21D1               	addwfc	(_var_sys_NVM+57)& (0+255),w,b	;volatile
 26320  004DDA  6E15               	movwf	(??_ControlMotor+3)^0,c
 26321  004DDC  0E00               	movlw	0
 26322  004DDE  21D2               	addwfc	(_var_sys_NVM+58)& (0+255),w,b	;volatile
 26323  004DE0  6E16               	movwf	(??_ControlMotor+4)^0,c
 26324  004DE2  0E00               	movlw	0
 26325  004DE4  21D3               	addwfc	(_var_sys_NVM+59)& (0+255),w,b	;volatile
 26326  004DE6  6E17               	movwf	(??_ControlMotor+5)^0,c
 26327  004DE8  0E50               	movlw	80
 26328  004DEA  2414               	addwf	(??_ControlMotor+2)^0,w,c
 26329  004DEC  0101               	movlb	1	; () banked
 26330  004DEE  6F18               	movwf	(_var_sys+24)& (0+255),b	;volatile
 26331  004DF0  0E00               	movlw	0
 26332  004DF2  2015               	addwfc	(??_ControlMotor+3)^0,w,c
 26333  004DF4  6F19               	movwf	(_var_sys+25)& (0+255),b	;volatile
 26334  004DF6  0E00               	movlw	0
 26335  004DF8  2016               	addwfc	(??_ControlMotor+4)^0,w,c
 26336  004DFA  6F1A               	movwf	(_var_sys+26)& (0+255),b	;volatile
 26337  004DFC  0E00               	movlw	0
 26338  004DFE  2017               	addwfc	(??_ControlMotor+5)^0,w,c
 26339  004E00  6F1B               	movwf	(_var_sys+27)& (0+255),b	;volatile
 26340  004E02                     l17380:
 26341                           
 26342                           ; BSR set to: 1
 26343                           ;outputs_MC50.c: 803:                 var_sys.Statedoorcontrol = st_Closing;
 26344  004E02  0E03               	movlw	3
 26345  004E04  6F1C               	movwf	(_var_sys+28)& (0+255),b	;volatile
 26346  004E06                     l17382:
 26347                           
 26348                           ;outputs_MC50.c: 806:             if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LA
      +                          TE1 = 1; } while(0);}
 26349  004E06  0100               	movlb	0	; () banked
 26350  004E08  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26351  004E0A  A4D8               	btfss	status,2,c
 26352  004E0C  D002               	goto	l2392
 26353                           
 26354                           ; BSR set to: 0
 26355  004E0E  8287               	bsf	135,1,c	;volatile
 26356  004E10  D001               	goto	l17384
 26357  004E12                     l2392:
 26358                           
 26359                           ; BSR set to: 0
 26360  004E12  8087               	bsf	135,0,c	;volatile
 26361  004E14                     l17384:
 26362                           
 26363                           ; BSR set to: 0
 26364                           ;outputs_MC50.c: 808:             var_sys.Activatecounter = close ;
 26365  004E14  0E02               	movlw	2
 26366  004E16  0101               	movlb	1	; () banked
 26367  004E18  6F16               	movwf	(_var_sys+22)& (0+255),b	;volatile
 26368  004E1A                     l2375:
 26369                           
 26370                           ;outputs_MC50.c: 811:            if (var_sys_NVM.Direction_motor == 0){do { LATEbits.LAT
      +                          E0 = 0; } while(0);}
 26371  004E1A  0100               	movlb	0	; () banked
 26372  004E1C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 26373  004E1E  A4D8               	btfss	status,2,c
 26374  004E20  D002               	goto	l2398
 26375                           
 26376                           ; BSR set to: 0
 26377  004E22  9087               	bcf	135,0,c	;volatile
 26378  004E24  0012               	return	
 26379  004E26                     l2398:
 26380                           
 26381                           ; BSR set to: 0
 26382  004E26  9287               	bcf	135,1,c	;volatile
 26383  004E28  0012               	return		;funcret
 26384  004E2A                     __end_of_ControlMotor:
 26385                           	callstack 0
 26386                           
 26387 ;; *************** function _VerifyElectricalBrake *****************
 26388 ;; Defined at:
 26389 ;;		line 658 in file "outputs_MC50.c"
 26390 ;; Parameters:    Size  Location     Type
 26391 ;;  actualState     1    wreg     enum E10381
 26392 ;; Auto vars:     Size  Location     Type
 26393 ;;  actualState     1   16[COMRAM] enum E10381
 26394 ;;  tempState       1   15[COMRAM] enum E10381
 26395 ;; Return value:  Size  Location     Type
 26396 ;;                  1    wreg      enum E10381
 26397 ;; Registers used:
 26398 ;;		wreg, status,2, status,0
 26399 ;; Tracked objects:
 26400 ;;		On entry : 3F/1
 26401 ;;		On exit  : 3E/0
 26402 ;;		Unchanged: 0/0
 26403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26407 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26408 ;;Total ram usage:        2 bytes
 26409 ;; Hardware stack levels used: 1
 26410 ;; Hardware stack levels required when called: 4
 26411 ;; This function calls:
 26412 ;;		Nothing
 26413 ;; This function is called by:
 26414 ;;		_ControlMotor
 26415 ;; This function uses a non-reentrant model
 26416 ;;
 26417                           
 26418                           	psect	text112
 26419  00808C                     __ptext112:
 26420                           	callstack 0
 26421  00808C                     _VerifyElectricalBrake:
 26422                           	callstack 25
 26423                           
 26424                           ;incstack = 0
 26425                           ;VerifyElectricalBrake@actualState stored from wreg
 26426  00808C  6E11               	movwf	VerifyElectricalBrake@actualState^0,c
 26427                           
 26428                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 26429  00808E  C011  F010         	movff	VerifyElectricalBrake@actualState,VerifyElectricalBrake@tempState
 26430                           
 26431                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 26432  008092  0100               	movlb	0	; () banked
 26433  008094  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 26434  008096  A4D8               	btfss	status,2,c
 26435  008098  D02E               	goto	l2318
 26436                           
 26437                           ; BSR set to: 0
 26438  00809A  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 26439  00809C  A4D8               	btfss	status,2,c
 26440  00809E  D02B               	goto	l2318
 26441                           
 26442                           ; BSR set to: 0
 26443  0080A0  0101               	movlb	1	; () banked
 26444  0080A2  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 26445  0080A4  D005               	goto	u15530
 26446  0080A6  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 26447  0080A8  E126               	bnz	l2318
 26448  0080AA  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 26449  0080AC  B0D8               	btfsc	status,0,c
 26450  0080AE  D023               	goto	l2318
 26451  0080B0                     u15530:
 26452                           
 26453                           ; BSR set to: 1
 26454                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 26455  0080B0  5011               	movf	VerifyElectricalBrake@actualState^0,w,c
 26456  0080B2  0100               	movlb	0	; () banked
 26457  0080B4  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 26458  0080B6  B4D8               	btfsc	status,2,c
 26459  0080B8  D00B               	goto	l14956
 26460                           
 26461                           ; BSR set to: 0
 26462  0080BA  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 26463  0080BC  A4D8               	btfss	status,2,c
 26464  0080BE  D008               	goto	l14956
 26465                           
 26466                           ; BSR set to: 0
 26467                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 26468  0080C0  0E01               	movlw	1
 26469  0080C2  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 26470                           
 26471                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 26472  0080C4  0E00               	movlw	0
 26473  0080C6  0101               	movlb	1	; () banked
 26474  0080C8  6FC4               	movwf	(_ts_system+41)& (0+255),b	;volatile
 26475  0080CA  0E16               	movlw	22
 26476  0080CC  6FC3               	movwf	(_ts_system+40)& (0+255),b	;volatile
 26477                           
 26478                           ;outputs_MC50.c: 670:         }
 26479  0080CE  D018               	goto	l2323
 26480  0080D0                     l14956:
 26481                           
 26482                           ; BSR set to: 0
 26483  0080D0  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 26484  0080D2  A4D8               	btfss	status,2,c
 26485  0080D4  D00B               	goto	l14962
 26486                           
 26487                           ; BSR set to: 0
 26488  0080D6  0101               	movlb	1	; () banked
 26489  0080D8  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 26490  0080DA  D008               	goto	l14962
 26491  0080DC  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 26492  0080DE  E103               	bnz	u15570
 26493  0080E0  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 26494  0080E2  A0D8               	btfss	status,0,c
 26495  0080E4  D003               	goto	l14962
 26496  0080E6                     u15570:
 26497                           
 26498                           ; BSR set to: 1
 26499                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 26500  0080E6  0E01               	movlw	1
 26501  0080E8  6E10               	movwf	VerifyElectricalBrake@tempState^0,c
 26502                           
 26503                           ;outputs_MC50.c: 686:         }
 26504  0080EA  D00A               	goto	l2323
 26505  0080EC                     l14962:
 26506                           
 26507                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 26508  0080EC  0E00               	movlw	0
 26509  0080EE  0100               	movlb	0	; () banked
 26510  0080F0  6F78               	movwf	_brakeElectric_st& (0+255),b
 26511                           
 26512                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 26513  0080F2  0E00               	movlw	0
 26514  0080F4  D004               	goto	L101
 26515  0080F6                     l2318:
 26516                           
 26517                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 26518  0080F6  C011  F078         	movff	VerifyElectricalBrake@actualState,_brakeElectric_st
 26519                           
 26520                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 26521  0080FA  0E00               	movlw	0
 26522  0080FC  0100               	movlb	0	; () banked
 26523  0080FE                     L101:
 26524  0080FE  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 26525  008100                     l2323:
 26526                           
 26527                           ;outputs_MC50.c: 700:     return tempState;
 26528  008100  5010               	movf	VerifyElectricalBrake@tempState^0,w,c
 26529  008102  0012               	return		;funcret
 26530  008104                     __end_of_VerifyElectricalBrake:
 26531                           	callstack 0
 26532                           
 26533 ;; *************** function _ControlLights *****************
 26534 ;; Defined at:
 26535 ;;		line 816 in file "outputs_MC50.c"
 26536 ;; Parameters:    Size  Location     Type
 26537 ;;		None
 26538 ;; Auto vars:     Size  Location     Type
 26539 ;;		None
 26540 ;; Return value:  Size  Location     Type
 26541 ;;                  1    wreg      void 
 26542 ;; Registers used:
 26543 ;;		wreg, status,2, status,0, cstack
 26544 ;; Tracked objects:
 26545 ;;		On entry : 3E/1
 26546 ;;		On exit  : 3E/0
 26547 ;;		Unchanged: 0/0
 26548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26553 ;;Total ram usage:        0 bytes
 26554 ;; Hardware stack levels used: 1
 26555 ;; Hardware stack levels required when called: 6
 26556 ;; This function calls:
 26557 ;;		_setFlashLigth_ON
 26558 ;;		_setRGB_ON
 26559 ;; This function is called by:
 26560 ;;		_main
 26561 ;; This function uses a non-reentrant model
 26562 ;;
 26563                           
 26564                           	psect	text113
 26565  003E70                     __ptext113:
 26566                           	callstack 0
 26567  003E70                     _ControlLights:
 26568                           	callstack 24
 26569                           
 26570                           ;outputs_MC50.c: 818:     if(var_sys.DistanceProgrammingActive==YES)
 26571                           
 26572                           ;incstack = 0
 26573  003E70  0101               	movlb	1	; () banked
 26574  003E72  0540               	decf	(_var_sys+64)& (0+255),w,b	;volatile
 26575  003E74  A4D8               	btfss	status,2,c
 26576  003E76  D007               	goto	l17390
 26577                           
 26578                           ; BSR set to: 1
 26579                           ;outputs_MC50.c: 819:     {;outputs_MC50.c: 820:         setFlashLigth_ON((1000/50));
 26580  003E78  0E00               	movlw	0
 26581  003E7A  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26582  003E7C  0E14               	movlw	20
 26583  003E7E  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26584  003E80  ECDB  F046         	call	_setFlashLigth_ON	;wreg free
 26585                           
 26586                           ;outputs_MC50.c: 821:     }
 26587  003E84  D010               	goto	l17396
 26588  003E86                     l17390:
 26589                           
 26590                           ; BSR set to: 1
 26591  003E86  51E3               	movf	_controlGate_stateMachine& (0+255),w,b
 26592  003E88  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26593  003E8A  A4D8               	btfss	status,2,c
 26594  003E8C  D00C               	goto	l17396
 26595                           
 26596                           ; BSR set to: 1
 26597                           ;outputs_MC50.c: 823:     {;outputs_MC50.c: 824:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 26598  003E8E  0E00               	movlw	0
 26599  003E90  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26600                           
 26601                           ;outputs_MC50.c: 825:         var_sys.ControlReleCapacitorClose = 0;
 26602  003E92  0E00               	movlw	0
 26603  003E94  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26604                           
 26605                           ; BSR set to: 1
 26606                           ;outputs_MC50.c: 826:         if (var_sys_NVM.flashLightMode !=3){
 26607  003E96  0E03               	movlw	3
 26608  003E98  0100               	movlb	0	; () banked
 26609  003E9A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26610  003E9C  B4D8               	btfsc	status,2,c
 26611  003E9E  D002               	goto	l2410
 26612                           
 26613                           ; BSR set to: 0
 26614                           
 26615                           ;outputs_MC50.c: 827:            do { LATEbits.LATE2 = 0; } while(0);
 26616  003EA0  9487               	bcf	135,2,c	;volatile
 26617  003EA2  D001               	goto	l17396
 26618  003EA4                     l2410:
 26619                           
 26620                           ; BSR set to: 0
 26621  003EA4  8487               	bsf	135,2,c	;volatile
 26622  003EA6                     l17396:
 26623                           
 26624                           ;outputs_MC50.c: 835:     if (((var_sys.preflashingcontrol == YES || controlGate_stateMa
      +                          chine.current_state==st_Opened) && (ts_system.timeWaitToClose >0) && (ts_system.timeWait
      +                          ToClose <= 3 * (1000/50))) && var_sys_NVM.flashRGBMode == rgb_pre){
 26625  003EA6  0101               	movlb	1	; () banked
 26626  003EA8  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 26627  003EAA  B4D8               	btfsc	status,2,c
 26628  003EAC  D005               	goto	u20710
 26629                           
 26630                           ; BSR set to: 1
 26631  003EAE  0E04               	movlw	4
 26632  003EB0  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
 26633  003EB2  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26634  003EB4  A4D8               	btfss	status,2,c
 26635  003EB6  D01C               	goto	l17408
 26636  003EB8                     u20710:
 26637                           
 26638                           ; BSR set to: 1
 26639  003EB8  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 26640  003EBA  D01A               	goto	l17408
 26641  003EBC  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 26642  003EBE  E103               	bnz	u20720
 26643  003EC0  05AD               	decf	(_ts_system+18)& (0+255),w,b	;volatile
 26644  003EC2  A0D8               	btfss	status,0,c
 26645  003EC4  D015               	goto	l17408
 26646  003EC6                     u20720:
 26647                           
 26648                           ; BSR set to: 1
 26649  003EC6  BFAE               	btfsc	(_ts_system+19)& (0+255),7,b	;volatile
 26650  003EC8  D006               	goto	u20730
 26651  003ECA  51AE               	movf	(_ts_system+19)& (0+255),w,b	;volatile
 26652  003ECC  E111               	bnz	l17408
 26653  003ECE  0E3D               	movlw	61
 26654  003ED0  5DAD               	subwf	(_ts_system+18)& (0+255),w,b	;volatile
 26655  003ED2  B0D8               	btfsc	status,0,c
 26656  003ED4  D00D               	goto	l17408
 26657  003ED6                     u20730:
 26658                           
 26659                           ; BSR set to: 1
 26660  003ED6  0E02               	movlw	2
 26661  003ED8  0100               	movlb	0	; () banked
 26662  003EDA  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26663  003EDC  A4D8               	btfss	status,2,c
 26664  003EDE  D008               	goto	l17408
 26665                           
 26666                           ; BSR set to: 0
 26667                           ;outputs_MC50.c: 836:         setRGB_ON(BLUE,( 200/50));
 26668  003EE0  0E00               	movlw	0
 26669  003EE2  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26670  003EE4  0E04               	movlw	4
 26671  003EE6  6E11               	movwf	setRGB_ON@Freq^0,c
 26672  003EE8  0E01               	movlw	1
 26673  003EEA  ECE5  F03C         	call	_setRGB_ON
 26674                           
 26675                           ;outputs_MC50.c: 838:     }
 26676  003EEE  0012               	return	
 26677  003EF0                     l17408:
 26678  003EF0  0E03               	movlw	3
 26679  003EF2  0101               	movlb	1	; () banked
 26680  003EF4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26681  003EF6  A4D8               	btfss	status,2,c
 26682  003EF8  D04F               	goto	l17438
 26683                           
 26684                           ; BSR set to: 1
 26685                           ;outputs_MC50.c: 842:     {;outputs_MC50.c: 843:         var_sys.ControlReleCapacitorOpe
      +                          n = 0;
 26686  003EFA  0E00               	movlw	0
 26687  003EFC  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26688                           
 26689                           ;outputs_MC50.c: 846:         if (var_sys.ControlReleCapacitorClose==0 && var_sys_NVM.fl
      +                          ashRGBMode==rgb_capacitor)
 26690  003EFE  5129               	movf	(_var_sys+41)& (0+255),w,b	;volatile
 26691  003F00  A4D8               	btfss	status,2,c
 26692  003F02  D013               	goto	l17420
 26693                           
 26694                           ; BSR set to: 1
 26695  003F04  0E03               	movlw	3
 26696  003F06  0100               	movlb	0	; () banked
 26697  003F08  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26698  003F0A  A4D8               	btfss	status,2,c
 26699  003F0C  D00E               	goto	l17420
 26700                           
 26701                           ; BSR set to: 0
 26702                           ;outputs_MC50.c: 847:         {;outputs_MC50.c: 848:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 26703  003F0E  0E00               	movlw	0
 26704  003F10  0101               	movlb	1	; () banked
 26705  003F12  6FDE               	movwf	(_ts_system+67)& (0+255),b	;volatile
 26706  003F14  0E28               	movlw	40
 26707  003F16  6FDD               	movwf	(_ts_system+66)& (0+255),b	;volatile
 26708                           
 26709                           ; BSR set to: 1
 26710                           ;outputs_MC50.c: 849:             setRGB_ON(YELLOW,0);
 26711  003F18  0E00               	movlw	0
 26712  003F1A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26713  003F1C  0E00               	movlw	0
 26714  003F1E  6E11               	movwf	setRGB_ON@Freq^0,c
 26715  003F20  0E04               	movlw	4
 26716  003F22  ECE5  F03C         	call	_setRGB_ON
 26717                           
 26718                           ; BSR set to: 1
 26719                           ;outputs_MC50.c: 850:          var_sys.ControlReleCapacitorClose = 1;
 26720  003F26  0E01               	movlw	1
 26721  003F28  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26722  003F2A                     l17420:
 26723                           
 26724                           ;outputs_MC50.c: 852:         if(ts_system.TimeReleCapacitor<=0 && var_sys_NVM.flashRGBM
      +                          ode==rgb_capacitor)
 26725  003F2A  0101               	movlb	1	; () banked
 26726  003F2C  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26727  003F2E  D005               	goto	u20780
 26728  003F30  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26729  003F32  E105               	bnz	l17424
 26730  003F34  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26731  003F36  B0D8               	btfsc	status,0,c
 26732  003F38  D002               	goto	l17424
 26733  003F3A                     u20780:
 26734                           
 26735                           ; BSR set to: 1
 26736  003F3A  0100               	movlb	0	; () banked
 26737  003F3C  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26738  003F3E                     l17424:
 26739                           
 26740                           ;outputs_MC50.c: 858:         if(var_sys_NVM.flashRGBMode==rgb_pisca && ts_system.TimeRe
      +                          leCapacitor<=0)
 26741  003F3E  0100               	movlb	0	; () banked
 26742  003F40  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26743  003F42  A4D8               	btfss	status,2,c
 26744  003F44  D010               	goto	l17430
 26745                           
 26746                           ; BSR set to: 0
 26747  003F46  0101               	movlb	1	; () banked
 26748  003F48  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 26749  003F4A  D005               	goto	u20800
 26750  003F4C  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 26751  003F4E  E10B               	bnz	l17430
 26752  003F50  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 26753  003F52  B0D8               	btfsc	status,0,c
 26754  003F54  D008               	goto	l17430
 26755  003F56                     u20800:
 26756                           
 26757                           ; BSR set to: 1
 26758                           ;outputs_MC50.c: 860:         {;outputs_MC50.c: 861:             setRGB_ON(RED,( 200/50)
      +                           +( 50/50));
 26759  003F56  0E00               	movlw	0
 26760  003F58  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26761  003F5A  0E05               	movlw	5
 26762  003F5C  6E11               	movwf	setRGB_ON@Freq^0,c
 26763  003F5E  0E03               	movlw	3
 26764  003F60  ECE5  F03C         	call	_setRGB_ON
 26765                           
 26766                           ;outputs_MC50.c: 862:         }
 26767  003F64  D007               	goto	l17432
 26768  003F66                     l17430:
 26769                           
 26770                           ;outputs_MC50.c: 864:         {;outputs_MC50.c: 865:             setRGB_ON(RED,0);
 26771  003F66  0E00               	movlw	0
 26772  003F68  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26773  003F6A  0E00               	movlw	0
 26774  003F6C  6E11               	movwf	setRGB_ON@Freq^0,c
 26775  003F6E  0E03               	movlw	3
 26776  003F70  ECE5  F03C         	call	_setRGB_ON
 26777  003F74                     l17432:
 26778                           
 26779                           ; BSR set to: 1
 26780                           ;outputs_MC50.c: 868:         if(var_sys_NVM.flashLightMode==fixo)
 26781  003F74  0100               	movlb	0	; () banked
 26782  003F76  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26783  003F78  A4D8               	btfss	status,2,c
 26784  003F7A  D007               	goto	l17436
 26785                           
 26786                           ; BSR set to: 0
 26787                           ;outputs_MC50.c: 869:         {;outputs_MC50.c: 871:             setFlashLigth_ON(( 500/
      +                          50));
 26788  003F7C  0E00               	movlw	0
 26789  003F7E  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26790  003F80  0E0A               	movlw	10
 26791  003F82  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26792  003F84  ECDB  F046         	call	_setFlashLigth_ON	;wreg free
 26793                           
 26794                           ;outputs_MC50.c: 873:         }
 26795  003F88  0012               	return	
 26796  003F8A                     l17436:
 26797                           
 26798                           ;outputs_MC50.c: 875:             setFlashLigth_ON(0);
 26799  003F8A  0E00               	movlw	0
 26800  003F8C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 26801  003F8E  0E00               	movlw	0
 26802  003F90  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 26803  003F92  ECDB  F046         	call	_setFlashLigth_ON	;wreg free
 26804  003F96  0012               	return	
 26805  003F98                     l17438:
 26806                           
 26807                           ; BSR set to: 1
 26808  003F98  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26809  003F9A  A4D8               	btfss	status,2,c
 26810  003F9C  D042               	goto	l17466
 26811                           
 26812                           ; BSR set to: 1
 26813  003F9E  05E3               	decf	_controlGate_stateMachine& (0+255),w,b
 26814  003FA0  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 26815  003FA2  A4D8               	btfss	status,2,c
 26816  003FA4  D03E               	goto	l17466
 26817                           
 26818                           ; BSR set to: 1
 26819                           ;outputs_MC50.c: 881:     {;outputs_MC50.c: 882:         if(var_sys.preflashingcontrol !
      +                          = YES){
 26820  003FA6  051D               	decf	(_var_sys+29)& (0+255),w,b	;volatile
 26821  003FA8  A4D8               	btfss	status,2,c
 26822                           
 26823                           ; BSR set to: 1
 26824                           
 26825                           ;outputs_MC50.c: 883:             do { LATAbits.LATA7 = 1; } while(0);
 26826  003FAA  8E83               	bsf	131,7,c	;volatile
 26827                           
 26828                           ; BSR set to: 1
 26829                           ;outputs_MC50.c: 888:         if(var_sys_NVM.flashRGBMode==rgb_pisca)
 26830  003FAC  0100               	movlb	0	; () banked
 26831  003FAE  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26832  003FB0  A4D8               	btfss	status,2,c
 26833  003FB2  D017               	goto	l17454
 26834                           
 26835                           ; BSR set to: 0
 26836                           ;outputs_MC50.c: 889:         {;outputs_MC50.c: 890:             if (var_sys_NVM.TypeofM
      +                          otor == br || var_sys_NVM.TypeofMotor == SE)setRGB_ON(YELLOW,0);
 26837  003FB4  0E02               	movlw	2
 26838  003FB6  19B4               	xorwf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26839  003FB8  B4D8               	btfsc	status,2,c
 26840  003FBA  D003               	goto	u20870
 26841                           
 26842                           ; BSR set to: 0
 26843  003FBC  05B4               	decf	(_var_sys_NVM+28)& (0+255),w,b	;volatile
 26844  003FBE  A4D8               	btfss	status,2,c
 26845  003FC0  D008               	goto	l17452
 26846  003FC2                     u20870:
 26847                           
 26848                           ; BSR set to: 0
 26849  003FC2  0E00               	movlw	0
 26850  003FC4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26851  003FC6  0E00               	movlw	0
 26852  003FC8  6E11               	movwf	setRGB_ON@Freq^0,c
 26853  003FCA  0E04               	movlw	4
 26854  003FCC  ECE5  F03C         	call	_setRGB_ON
 26855  003FD0  D013               	goto	l17458
 26856  003FD2                     l17452:
 26857                           
 26858                           ; BSR set to: 0
 26859  003FD2  0E00               	movlw	0
 26860  003FD4  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26861  003FD6  0E28               	movlw	40
 26862  003FD8  6E11               	movwf	setRGB_ON@Freq^0,c
 26863  003FDA  0E04               	movlw	4
 26864  003FDC  ECE5  F03C         	call	_setRGB_ON
 26865  003FE0  D00B               	goto	l17458
 26866  003FE2                     l17454:
 26867                           
 26868                           ; BSR set to: 0
 26869  003FE2  0E03               	movlw	3
 26870  003FE4  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26871  003FE6  B4D8               	btfsc	status,2,c
 26872  003FE8  D007               	goto	l17458
 26873                           
 26874                           ; BSR set to: 0
 26875  003FEA  0E00               	movlw	0
 26876  003FEC  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26877  003FEE  0E00               	movlw	0
 26878  003FF0  6E11               	movwf	setRGB_ON@Freq^0,c
 26879  003FF2  0E04               	movlw	4
 26880  003FF4  ECE5  F03C         	call	_setRGB_ON
 26881  003FF8                     l17458:
 26882                           
 26883                           ;outputs_MC50.c: 895:         if (var_sys_NVM.flashLightMode != electroiman)
 26884  003FF8  0E03               	movlw	3
 26885  003FFA  0100               	movlb	0	; () banked
 26886  003FFC  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26887  003FFE  B4D8               	btfsc	status,2,c
 26888  004000  0012               	return	
 26889                           
 26890                           ; BSR set to: 0
 26891                           ;outputs_MC50.c: 896:         {;outputs_MC50.c: 897:         if (ts_system.TimeOnFlashLi
      +                          gth>0)
 26892  004002  0101               	movlb	1	; () banked
 26893  004004  BFBE               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 26894  004006  D007               	goto	l2438
 26895  004008  51BE               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 26896  00400A  11BD               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 26897  00400C  11BC               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 26898  00400E  E1BD               	bnz	l17436
 26899  004010  05BB               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 26900  004012  B0D8               	btfsc	status,0,c
 26901  004014  D7BA               	goto	l17436
 26902  004016                     l2438:
 26903                           
 26904                           ; BSR set to: 1
 26905  004016  9487               	bcf	135,2,c	;volatile
 26906                           
 26907                           ; BSR set to: 1
 26908                           ;outputs_MC50.c: 904:             ts_system.timeFreqFlashligth=0;
 26909  004018  0E00               	movlw	0
 26910  00401A  6FBA               	movwf	(_ts_system+31)& (0+255),b	;volatile
 26911  00401C  0E00               	movlw	0
 26912  00401E  6FB9               	movwf	(_ts_system+30)& (0+255),b	;volatile
 26913                           
 26914                           ; BSR set to: 0
 26915                           ;outputs_MC50.c: 907:     }
 26916                           
 26917                           ;outputs_MC50.c: 906:         }
 26918  004020  0012               	return	
 26919  004022                     l17466:
 26920                           
 26921                           ; BSR set to: 1
 26922  004022  5100               	movf	_var_sys& (0+255),w,b	;volatile
 26923  004024  A4D8               	btfss	status,2,c
 26924  004026  D048               	goto	l17500
 26925                           
 26926                           ; BSR set to: 1
 26927                           ;outputs_MC50.c: 911:     {;outputs_MC50.c: 912:         if (( var_sys_NVM.autoTimeFullC
      +                          lose==0 && var_sys.StateMotor == InOpenFull)||((var_sys_NVM.autoTimeWalkClose==0) && var
      +                          _sys_NVM.walkTime >0 && var_sys.StateMotor == InOpenWalk))
 26928  004028  0100               	movlb	0	; () banked
 26929  00402A  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 26930  00402C  A4D8               	btfss	status,2,c
 26931  00402E  D004               	goto	u20930
 26932                           
 26933                           ; BSR set to: 0
 26934  004030  0101               	movlb	1	; () banked
 26935  004032  0500               	decf	_var_sys& (0+255),w,b	;volatile
 26936  004034  B4D8               	btfsc	status,2,c
 26937  004036  D00C               	goto	u20960
 26938  004038                     u20930:
 26939  004038  0100               	movlb	0	; () banked
 26940  00403A  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 26941  00403C  A4D8               	btfss	status,2,c
 26942  00403E  D017               	goto	l17484
 26943                           
 26944                           ; BSR set to: 0
 26945  004040  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 26946  004042  B4D8               	btfsc	status,2,c
 26947  004044  D014               	goto	l17484
 26948                           
 26949                           ; BSR set to: 0
 26950  004046  0E02               	movlw	2
 26951  004048  0101               	movlb	1	; () banked
 26952  00404A  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 26953  00404C  A4D8               	btfss	status,2,c
 26954  00404E  D00F               	goto	l17484
 26955  004050                     u20960:
 26956                           
 26957                           ; BSR set to: 1
 26958                           ;outputs_MC50.c: 913:         {;outputs_MC50.c: 916:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 26959  004050  0E00               	movlw	0
 26960  004052  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 26961                           
 26962                           ;outputs_MC50.c: 917:             var_sys.ControlReleCapacitorClose = 0;
 26963  004054  0E00               	movlw	0
 26964  004056  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 26965                           
 26966                           ; BSR set to: 1
 26967                           ;outputs_MC50.c: 921:             if (var_sys_NVM.flashLightMode != electroiman && var_s
      +                          ys_NVM.flashLightMode != condominio ){
 26968  004058  0E03               	movlw	3
 26969  00405A  0100               	movlb	0	; () banked
 26970  00405C  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26971  00405E  B4D8               	btfsc	status,2,c
 26972  004060  0012               	return	
 26973                           
 26974                           ; BSR set to: 0
 26975  004062  0E02               	movlw	2
 26976  004064  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 26977  004066  B4D8               	btfsc	status,2,c
 26978  004068  0012               	return	
 26979                           
 26980                           ; BSR set to: 0
 26981                           
 26982                           ;outputs_MC50.c: 922:               do { LATEbits.LATE2 = 0; } while(0);
 26983  00406A  9487               	bcf	135,2,c	;volatile
 26984  00406C  0012               	return	
 26985  00406E                     l17484:
 26986                           
 26987                           ;outputs_MC50.c: 927:         {;outputs_MC50.c: 928:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 26988  00406E  0100               	movlb	0	; () banked
 26989  004070  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 26990  004072  A4D8               	btfss	status,2,c
 26991  004074  D008               	goto	l17488
 26992                           
 26993                           ; BSR set to: 0
 26994                           ;outputs_MC50.c: 929:             {;outputs_MC50.c: 930:                 setRGB_ON(BLUE,
      +                          (1000/50));
 26995  004076  0E00               	movlw	0
 26996  004078  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 26997  00407A  0E14               	movlw	20
 26998  00407C  6E11               	movwf	setRGB_ON@Freq^0,c
 26999  00407E  0E01               	movlw	1
 27000  004080  ECE5  F03C         	call	_setRGB_ON
 27001                           
 27002                           ;outputs_MC50.c: 932:             }
 27003  004084  D007               	goto	l17490
 27004  004086                     l17488:
 27005                           
 27006                           ; BSR set to: 0
 27007                           ;outputs_MC50.c: 934:             {;outputs_MC50.c: 935:                 setRGB_ON(BLUE,
      +                          0);
 27008  004086  0E00               	movlw	0
 27009  004088  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27010  00408A  0E00               	movlw	0
 27011  00408C  6E11               	movwf	setRGB_ON@Freq^0,c
 27012  00408E  0E01               	movlw	1
 27013  004090  ECE5  F03C         	call	_setRGB_ON
 27014  004094                     l17490:
 27015                           
 27016                           ; BSR set to: 1
 27017                           ;outputs_MC50.c: 939:             if(var_sys_NVM.flashLightMode==pisca ||var_sys_NVM.fla
      +                          shLightMode==electroiman)
 27018  004094  0100               	movlb	0	; () banked
 27019  004096  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27020  004098  B4D8               	btfsc	status,2,c
 27021  00409A  D004               	goto	u21010
 27022                           
 27023                           ; BSR set to: 0
 27024  00409C  0E03               	movlw	3
 27025  00409E  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27026  0040A0  A4D8               	btfss	status,2,c
 27027  0040A2  D002               	goto	l17494
 27028  0040A4                     u21010:
 27029                           
 27030                           ; BSR set to: 0
 27031                           
 27032                           ;outputs_MC50.c: 940:             {;outputs_MC50.c: 941:                  do { LATEbits.
      +                          LATE2 = 0; } while(0);
 27033  0040A4  9487               	bcf	135,2,c	;volatile
 27034  0040A6  0012               	return	
 27035  0040A8                     l17494:
 27036                           
 27037                           ; BSR set to: 0
 27038  0040A8  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27039  0040AA  B4D8               	btfsc	status,2,c
 27040  0040AC  D76E               	goto	l17436
 27041                           
 27042                           ; BSR set to: 0
 27043  0040AE  0E02               	movlw	2
 27044  0040B0  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27045  0040B2  A4D8               	btfss	status,2,c
 27046  0040B4  0012               	return	
 27047  0040B6  D769               	goto	l17436
 27048  0040B8                     l17500:
 27049                           
 27050                           ; BSR set to: 1
 27051                           ;outputs_MC50.c: 955:     {;outputs_MC50.c: 957:         var_sys.ControlReleCapacitorClo
      +                          se=0;
 27052  0040B8  0E00               	movlw	0
 27053  0040BA  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27054                           
 27055                           ;outputs_MC50.c: 958:         if (var_sys.ControlReleCapacitorOpen==0 && var_sys_NVM.fla
      +                          shRGBMode==rgb_capacitor)
 27056  0040BC  5128               	movf	(_var_sys+40)& (0+255),w,b	;volatile
 27057  0040BE  A4D8               	btfss	status,2,c
 27058  0040C0  D00C               	goto	l17506
 27059                           
 27060                           ; BSR set to: 1
 27061  0040C2  0E03               	movlw	3
 27062  0040C4  0100               	movlb	0	; () banked
 27063  0040C6  19B1               	xorwf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27064  0040C8  A4D8               	btfss	status,2,c
 27065  0040CA  D007               	goto	l17506
 27066                           
 27067                           ; BSR set to: 0
 27068                           ;outputs_MC50.c: 959:         {;outputs_MC50.c: 960:          ts_system.TimeReleCapacito
      +                          r = (1000/50)*2;
 27069  0040CC  0E00               	movlw	0
 27070  0040CE  0101               	movlb	1	; () banked
 27071  0040D0  6FDE               	movwf	(_ts_system+67)& (0+255),b	;volatile
 27072  0040D2  0E28               	movlw	40
 27073  0040D4  6FDD               	movwf	(_ts_system+66)& (0+255),b	;volatile
 27074                           
 27075                           ;outputs_MC50.c: 962:          var_sys.ControlReleCapacitorOpen = 1;
 27076  0040D6  0E01               	movlw	1
 27077  0040D8  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27078  0040DA                     l17506:
 27079                           
 27080                           ;outputs_MC50.c: 964:         if(ts_system.TimeReleCapacitor <=0 && var_sys_NVM.flashRGB
      +                          Mode==rgb_capacitor)
 27081  0040DA  0101               	movlb	1	; () banked
 27082  0040DC  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27083  0040DE  D005               	goto	u21060
 27084  0040E0  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27085  0040E2  E105               	bnz	l17510
 27086  0040E4  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27087  0040E6  B0D8               	btfsc	status,0,c
 27088  0040E8  D002               	goto	l17510
 27089  0040EA                     u21060:
 27090                           
 27091                           ; BSR set to: 1
 27092  0040EA  0100               	movlb	0	; () banked
 27093  0040EC  51B1               	movf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27094  0040EE                     l17510:
 27095                           
 27096                           ;outputs_MC50.c: 969:         if (controlGate_stateMachine.current_state==st_Opened)
 27097  0040EE  0E04               	movlw	4
 27098  0040F0  0101               	movlb	1	; () banked
 27099  0040F2  19E3               	xorwf	_controlGate_stateMachine& (0+255),w,b
 27100  0040F4  11E4               	iorwf	(_controlGate_stateMachine+1)& (0+255),w,b
 27101  0040F6  A4D8               	btfss	status,2,c
 27102  0040F8  D01B               	goto	l17522
 27103                           
 27104                           ; BSR set to: 1
 27105                           ;outputs_MC50.c: 970:         {;outputs_MC50.c: 973:             var_sys.ControlReleCapa
      +                          citorOpen = 0;
 27106  0040FA  0E00               	movlw	0
 27107  0040FC  6F28               	movwf	(_var_sys+40)& (0+255),b	;volatile
 27108                           
 27109                           ;outputs_MC50.c: 974:             var_sys.ControlReleCapacitorClose = 0;
 27110  0040FE  0E00               	movlw	0
 27111  004100  6F29               	movwf	(_var_sys+41)& (0+255),b	;volatile
 27112                           
 27113                           ;outputs_MC50.c: 977:             if (var_sys_NVM.autoTimeFullClose != 0 || ((var_sys_NV
      +                          M.autoTimeWalkClose!=0) && var_sys_NVM.walkTime >0)|| var_sys_NVM.operationMode==2)
 27114  004102  0100               	movlb	0	; () banked
 27115  004104  519D               	movf	(_var_sys_NVM+5)& (0+255),w,b	;volatile
 27116  004106  A4D8               	btfss	status,2,c
 27117  004108  D00A               	goto	u21110
 27118                           
 27119                           ; BSR set to: 0
 27120  00410A  519E               	movf	(_var_sys_NVM+6)& (0+255),w,b	;volatile
 27121  00410C  B4D8               	btfsc	status,2,c
 27122  00410E  D003               	goto	u21100
 27123                           
 27124                           ; BSR set to: 0
 27125  004110  519C               	movf	(_var_sys_NVM+4)& (0+255),w,b	;volatile
 27126  004112  A4D8               	btfss	status,2,c
 27127  004114  D004               	goto	u21110
 27128  004116                     u21100:
 27129                           
 27130                           ; BSR set to: 0
 27131  004116  0E02               	movlw	2
 27132  004118  19A4               	xorwf	(_var_sys_NVM+12)& (0+255),w,b	;volatile
 27133  00411A  A4D8               	btfss	status,2,c
 27134  00411C  D007               	goto	l2472
 27135  00411E                     u21110:
 27136                           
 27137                           ; BSR set to: 0
 27138                           ;outputs_MC50.c: 978:             {;outputs_MC50.c: 979:                    setRGB_ON(BL
      +                          UE,0);
 27139  00411E  0E00               	movlw	0
 27140  004120  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27141  004122  0E00               	movlw	0
 27142  004124  6E11               	movwf	setRGB_ON@Freq^0,c
 27143  004126  0E01               	movlw	1
 27144  004128  ECE5  F03C         	call	_setRGB_ON
 27145  00412C                     l2472:
 27146  00412C  9487               	bcf	135,2,c	;volatile
 27147  00412E  0012               	return	
 27148  004130                     l17522:
 27149                           
 27150                           ; BSR set to: 1
 27151                           ;outputs_MC50.c: 993:         {;outputs_MC50.c: 996:             if(var_sys_NVM.flashRGB
      +                          Mode==rgb_pisca)
 27152  004130  0100               	movlb	0	; () banked
 27153  004132  05B1               	decf	(_var_sys_NVM+25)& (0+255),w,b	;volatile
 27154  004134  A4D8               	btfss	status,2,c
 27155  004136  D008               	goto	l17526
 27156                           
 27157                           ; BSR set to: 0
 27158                           ;outputs_MC50.c: 997:             {;outputs_MC50.c: 998:                 setRGB_ON(GREEN
      +                          ,( 500/50));
 27159  004138  0E00               	movlw	0
 27160  00413A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27161  00413C  0E0A               	movlw	10
 27162  00413E  6E11               	movwf	setRGB_ON@Freq^0,c
 27163  004140  0E02               	movlw	2
 27164  004142  ECE5  F03C         	call	_setRGB_ON
 27165                           
 27166                           ;outputs_MC50.c: 999:             }
 27167  004146  D007               	goto	l17528
 27168  004148                     l17526:
 27169                           
 27170                           ; BSR set to: 0
 27171                           ;outputs_MC50.c: 1001:             {;outputs_MC50.c: 1002:                 setRGB_ON(GRE
      +                          EN,0);
 27172  004148  0E00               	movlw	0
 27173  00414A  6E12               	movwf	(setRGB_ON@Freq+1)^0,c
 27174  00414C  0E00               	movlw	0
 27175  00414E  6E11               	movwf	setRGB_ON@Freq^0,c
 27176  004150  0E02               	movlw	2
 27177  004152  ECE5  F03C         	call	_setRGB_ON
 27178  004156                     l17528:
 27179                           
 27180                           ; BSR set to: 1
 27181                           ;outputs_MC50.c: 1006:             if(var_sys_NVM.flashLightMode==fixo)
 27182  004156  0100               	movlb	0	; () banked
 27183  004158  51A5               	movf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27184  00415A  A4D8               	btfss	status,2,c
 27185  00415C  D007               	goto	l17532
 27186                           
 27187                           ; BSR set to: 0
 27188                           ;outputs_MC50.c: 1007:             {;outputs_MC50.c: 1010:                 setFlashLigth
      +                          _ON((1000/50));
 27189  00415E  0E00               	movlw	0
 27190  004160  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27191  004162  0E14               	movlw	20
 27192  004164  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27193  004166  ECDB  F046         	call	_setFlashLigth_ON	;wreg free
 27194                           
 27195                           ;outputs_MC50.c: 1011:             }
 27196  00416A  D00D               	goto	l17538
 27197  00416C                     l17532:
 27198                           
 27199                           ; BSR set to: 0
 27200  00416C  05A5               	decf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27201  00416E  B4D8               	btfsc	status,2,c
 27202  004170  D004               	goto	u21150
 27203                           
 27204                           ; BSR set to: 0
 27205  004172  0E02               	movlw	2
 27206  004174  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27207  004176  A4D8               	btfss	status,2,c
 27208  004178  D006               	goto	l17538
 27209  00417A                     u21150:
 27210                           
 27211                           ; BSR set to: 0
 27212                           ;outputs_MC50.c: 1013:             {;outputs_MC50.c: 1014:                 setFlashLigth
      +                          _ON(0);
 27213  00417A  0E00               	movlw	0
 27214  00417C  6E11               	movwf	(setFlashLigth_ON@Freq+1)^0,c
 27215  00417E  0E00               	movlw	0
 27216  004180  6E10               	movwf	setFlashLigth_ON@Freq^0,c
 27217  004182  ECDB  F046         	call	_setFlashLigth_ON	;wreg free
 27218  004186                     l17538:
 27219                           
 27220                           ;outputs_MC50.c: 1017:             if (var_sys_NVM.flashLightMode == electroiman)
 27221  004186  0E03               	movlw	3
 27222  004188  0100               	movlb	0	; () banked
 27223  00418A  19A5               	xorwf	(_var_sys_NVM+13)& (0+255),w,b	;volatile
 27224  00418C  A4D8               	btfss	status,2,c
 27225  00418E  0012               	return	
 27226                           
 27227                           ; BSR set to: 0
 27228                           
 27229                           ;outputs_MC50.c: 1018:             {;outputs_MC50.c: 1019:             do { LATEbits.LAT
      +                          E2 = 0; } while(0);
 27230  004190  9487               	bcf	135,2,c	;volatile
 27231  004192  0012               	return		;funcret
 27232  004194                     __end_of_ControlLights:
 27233                           	callstack 0
 27234                           
 27235 ;; *************** function _setRGB_ON *****************
 27236 ;; Defined at:
 27237 ;;		line 1028 in file "outputs_MC50.c"
 27238 ;; Parameters:    Size  Location     Type
 27239 ;;  RGBLigth        1    wreg     enum E10611
 27240 ;;  Freq            2   16[COMRAM] int 
 27241 ;; Auto vars:     Size  Location     Type
 27242 ;;  RGBLigth        1   20[COMRAM] enum E10611
 27243 ;; Return value:  Size  Location     Type
 27244 ;;                  1    wreg      void 
 27245 ;; Registers used:
 27246 ;;		wreg, status,2, status,0, cstack
 27247 ;; Tracked objects:
 27248 ;;		On entry : 3E/0
 27249 ;;		On exit  : 3F/1
 27250 ;;		Unchanged: 0/0
 27251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27255 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27256 ;;Total ram usage:        5 bytes
 27257 ;; Hardware stack levels used: 1
 27258 ;; Hardware stack levels required when called: 5
 27259 ;; This function calls:
 27260 ;;		_RGB_Set
 27261 ;; This function is called by:
 27262 ;;		_ControlLights
 27263 ;; This function uses a non-reentrant model
 27264 ;;
 27265                           
 27266                           	psect	text114
 27267  0079CA                     __ptext114:
 27268                           	callstack 0
 27269  0079CA                     _setRGB_ON:
 27270                           	callstack 24
 27271                           
 27272                           ;incstack = 0
 27273                           ;setRGB_ON@RGBLigth stored from wreg
 27274  0079CA  6E15               	movwf	setRGB_ON@RGBLigth^0,c
 27275                           
 27276                           ;outputs_MC50.c: 1028: void setRGB_ON(RGBY_enum RGBLigth,int Freq);outputs_MC50.c: 1029:
      +                           {;outputs_MC50.c: 1031:     do { LATAbits.LATA7 = 1; } while(0);
 27277  0079CC  8E83               	bsf	131,7,c	;volatile
 27278                           
 27279                           ;outputs_MC50.c: 1037:     if(Freq==0 || var_sys.upFaseRGB==1)
 27280  0079CE  5011               	movf	setRGB_ON@Freq^0,w,c
 27281  0079D0  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 27282  0079D2  B4D8               	btfsc	status,2,c
 27283  0079D4  D015               	goto	l14994
 27284  0079D6  0101               	movlb	1	; () banked
 27285  0079D8  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 27286  0079DA  B4D8               	btfsc	status,2,c
 27287  0079DC  D011               	goto	l14994
 27288  0079DE  D024               	goto	l14996
 27289  0079E0                     l14984:
 27290                           
 27291                           ;outputs_MC50.c: 1043:                 RGB_Set(0x20);
 27292  0079E0  0E20               	movlw	32
 27293  0079E2  ECCC  F04A         	call	_RGB_Set
 27294                           
 27295                           ;outputs_MC50.c: 1044:             break;
 27296  0079E6  D020               	goto	l14996
 27297  0079E8                     l14986:
 27298                           
 27299                           ;outputs_MC50.c: 1047:                 RGB_Set(0x04);
 27300  0079E8  0E04               	movlw	4
 27301  0079EA  ECCC  F04A         	call	_RGB_Set
 27302                           
 27303                           ;outputs_MC50.c: 1048:             break;
 27304  0079EE  D01C               	goto	l14996
 27305  0079F0                     l14988:
 27306                           
 27307                           ;outputs_MC50.c: 1051:                 RGB_Set(0x00);
 27308  0079F0  0E00               	movlw	0
 27309  0079F2  ECCC  F04A         	call	_RGB_Set
 27310                           
 27311                           ;outputs_MC50.c: 1052:             break;
 27312  0079F6  D018               	goto	l14996
 27313  0079F8                     l14990:
 27314                           
 27315                           ;outputs_MC50.c: 1055:                 RGB_Set(0x24);
 27316  0079F8  0E24               	movlw	36
 27317  0079FA  ECCC  F04A         	call	_RGB_Set
 27318                           
 27319                           ;outputs_MC50.c: 1056:             break;
 27320  0079FE  D014               	goto	l14996
 27321  007A00                     l14994:
 27322  007A00  5015               	movf	setRGB_ON@RGBLigth^0,w,c
 27323  007A02  6E13               	movwf	??_setRGB_ON^0,c
 27324  007A04  6A14               	clrf	(??_setRGB_ON+1)^0,c
 27325                           
 27326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27327                           ; Switch size 1, requested type "simple"
 27328                           ; Number of cases is 1, Range of values is 0 to 0
 27329                           ; switch strategies available:
 27330                           ; Name         Instructions Cycles
 27331                           ; simple_byte            4     3 (average)
 27332                           ;	Chosen strategy is simple_byte
 27333  007A06  5014               	movf	(??_setRGB_ON+1)^0,w,c
 27334  007A08  0A00               	xorlw	0	; case 0
 27335  007A0A  A4D8               	btfss	status,2,c
 27336  007A0C  D00D               	goto	l14996
 27337                           
 27338                           ; Switch size 1, requested type "simple"
 27339                           ; Number of cases is 4, Range of values is 1 to 4
 27340                           ; switch strategies available:
 27341                           ; Name         Instructions Cycles
 27342                           ; simple_byte           13     7 (average)
 27343                           ;	Chosen strategy is simple_byte
 27344  007A0E  5013               	movf	??_setRGB_ON^0,w,c
 27345  007A10  0A01               	xorlw	1	; case 1
 27346  007A12  B4D8               	btfsc	status,2,c
 27347  007A14  D7ED               	goto	l14988
 27348  007A16  0A03               	xorlw	3	; case 2
 27349  007A18  B4D8               	btfsc	status,2,c
 27350  007A1A  D7E6               	goto	l14986
 27351  007A1C  0A01               	xorlw	1	; case 3
 27352  007A1E  B4D8               	btfsc	status,2,c
 27353  007A20  D7DF               	goto	l14984
 27354  007A22  0A07               	xorlw	7	; case 4
 27355  007A24  B4D8               	btfsc	status,2,c
 27356  007A26  D7E8               	goto	l14990
 27357  007A28                     l14996:
 27358                           
 27359                           ;outputs_MC50.c: 1061:     if(ts_system.timeFreqRGB<=0 && Freq!=0)
 27360  007A28  0101               	movlb	1	; () banked
 27361  007A2A  BFB8               	btfsc	(_ts_system+29)& (0+255),7,b	;volatile
 27362  007A2C  D005               	goto	u15640
 27363  007A2E  51B8               	movf	(_ts_system+29)& (0+255),w,b	;volatile
 27364  007A30  E113               	bnz	l2502
 27365  007A32  05B7               	decf	(_ts_system+28)& (0+255),w,b	;volatile
 27366  007A34  B0D8               	btfsc	status,0,c
 27367  007A36  0012               	return	
 27368  007A38                     u15640:
 27369                           
 27370                           ; BSR set to: 1
 27371  007A38  5011               	movf	setRGB_ON@Freq^0,w,c
 27372  007A3A  1012               	iorwf	(setRGB_ON@Freq+1)^0,w,c
 27373  007A3C  B4D8               	btfsc	status,2,c
 27374  007A3E  0012               	return	
 27375                           
 27376                           ; BSR set to: 1
 27377                           ;outputs_MC50.c: 1062:     {;outputs_MC50.c: 1063:         ts_system.timeFreqRGB=Freq;
 27378  007A40  C011  F1B7         	movff	setRGB_ON@Freq,_ts_system+28	;volatile
 27379  007A44  C012  F1B8         	movff	setRGB_ON@Freq+1,_ts_system+29	;volatile
 27380                           
 27381                           ; BSR set to: 1
 27382                           ;outputs_MC50.c: 1064:         if(var_sys.upFaseRGB==1)
 27383  007A48  0524               	decf	(_var_sys+36)& (0+255),w,b	;volatile
 27384  007A4A  A4D8               	btfss	status,2,c
 27385  007A4C  D003               	goto	l15006
 27386                           
 27387                           ; BSR set to: 1
 27388                           ;outputs_MC50.c: 1065:         {;outputs_MC50.c: 1066:             var_sys.upFaseRGB=0;
 27389  007A4E  0E00               	movlw	0
 27390  007A50  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 27391                           
 27392                           ;outputs_MC50.c: 1067:         }
 27393  007A52  0012               	return	
 27394  007A54                     l15006:
 27395                           
 27396                           ; BSR set to: 1
 27397                           ;outputs_MC50.c: 1069:         {;outputs_MC50.c: 1070:             var_sys.upFaseRGB=1;
 27398  007A54  0E01               	movlw	1
 27399  007A56  6F24               	movwf	(_var_sys+36)& (0+255),b	;volatile
 27400  007A58                     l2502:
 27401                           
 27402                           ; BSR set to: 1
 27403  007A58  0012               	return		;funcret
 27404  007A5A                     __end_of_setRGB_ON:
 27405                           	callstack 0
 27406                           
 27407 ;; *************** function _RGB_Set *****************
 27408 ;; Defined at:
 27409 ;;		line 98 in file "outputs_MC50.c"
 27410 ;; Parameters:    Size  Location     Type
 27411 ;;  value           1    wreg     unsigned char 
 27412 ;; Auto vars:     Size  Location     Type
 27413 ;;  value           1   15[COMRAM] unsigned char 
 27414 ;; Return value:  Size  Location     Type
 27415 ;;                  1    wreg      void 
 27416 ;; Registers used:
 27417 ;;		wreg, status,2, status,0
 27418 ;; Tracked objects:
 27419 ;;		On entry : 0/0
 27420 ;;		On exit  : 0/0
 27421 ;;		Unchanged: 0/0
 27422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27427 ;;Total ram usage:        1 bytes
 27428 ;; Hardware stack levels used: 1
 27429 ;; Hardware stack levels required when called: 4
 27430 ;; This function calls:
 27431 ;;		Nothing
 27432 ;; This function is called by:
 27433 ;;		_setRGB_ON
 27434 ;; This function uses a non-reentrant model
 27435 ;;
 27436                           
 27437                           	psect	text115
 27438  009598                     __ptext115:
 27439                           	callstack 0
 27440  009598                     _RGB_Set:
 27441                           	callstack 24
 27442                           
 27443                           ; BSR set to: 1
 27444                           ;incstack = 0
 27445                           ;RGB_Set@value stored from wreg
 27446  009598  6E10               	movwf	RGB_Set@value^0,c
 27447                           
 27448                           ;outputs_MC50.c: 98: void RGB_Set(char value);outputs_MC50.c: 99: {;outputs_MC50.c: 100:
      +                              LATC &= 0xdb ;
 27449  00959A  0EDB               	movlw	219
 27450  00959C  1685               	andwf	133,f,c	;volatile
 27451                           
 27452                           ;outputs_MC50.c: 101:    LATC |= value;
 27453  00959E  5010               	movf	RGB_Set@value^0,w,c	;volatile
 27454  0095A0  1285               	iorwf	133,f,c	;volatile
 27455  0095A2  9E83               	bcf	131,7,c	;volatile
 27456  0095A4  0012               	return		;funcret
 27457  0095A6                     __end_of_RGB_Set:
 27458                           	callstack 0
 27459                           
 27460 ;; *************** function _setFlashLigth_ON *****************
 27461 ;; Defined at:
 27462 ;;		line 1077 in file "outputs_MC50.c"
 27463 ;; Parameters:    Size  Location     Type
 27464 ;;  Freq            2   15[COMRAM] int 
 27465 ;; Auto vars:     Size  Location     Type
 27466 ;;		None
 27467 ;; Return value:  Size  Location     Type
 27468 ;;                  1    wreg      void 
 27469 ;; Registers used:
 27470 ;;		wreg, status,2, status,0
 27471 ;; Tracked objects:
 27472 ;;		On entry : 3E/1
 27473 ;;		On exit  : 3F/1
 27474 ;;		Unchanged: 0/0
 27475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27480 ;;Total ram usage:        2 bytes
 27481 ;; Hardware stack levels used: 1
 27482 ;; Hardware stack levels required when called: 4
 27483 ;; This function calls:
 27484 ;;		Nothing
 27485 ;; This function is called by:
 27486 ;;		_ControlLights
 27487 ;; This function uses a non-reentrant model
 27488 ;;
 27489                           
 27490                           	psect	text116
 27491  008DB6                     __ptext116:
 27492                           	callstack 0
 27493  008DB6                     _setFlashLigth_ON:
 27494                           	callstack 25
 27495                           
 27496                           ;outputs_MC50.c: 1077: void setFlashLigth_ON(int Freq);outputs_MC50.c: 1078: {;outputs_M
      +                          C50.c: 1079:     if(Freq==0 || var_sys.upFaseFlashligth==1)
 27497                           
 27498                           ;incstack = 0
 27499  008DB6  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 27500  008DB8  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 27501  008DBA  B4D8               	btfsc	status,2,c
 27502  008DBC  D004               	goto	u15590
 27503  008DBE  0101               	movlb	1	; () banked
 27504  008DC0  0525               	decf	(_var_sys+37)& (0+255),w,b	;volatile
 27505  008DC2  A4D8               	btfss	status,2,c
 27506  008DC4  D002               	goto	l2511
 27507  008DC6                     u15590:
 27508                           
 27509                           ;outputs_MC50.c: 1080:     {;outputs_MC50.c: 1081:         do { LATEbits.LATE2 = 1; } wh
      +                          ile(0);
 27510  008DC6  8487               	bsf	135,2,c	;volatile
 27511  008DC8  D001               	goto	l14972
 27512  008DCA                     l2511:
 27513                           
 27514                           ; BSR set to: 1
 27515  008DCA  9487               	bcf	135,2,c	;volatile
 27516  008DCC                     l14972:
 27517                           
 27518                           ;outputs_MC50.c: 1088:     if(ts_system.timeFreqFlashligth<=0 && Freq!=0)
 27519  008DCC  0101               	movlb	1	; () banked
 27520  008DCE  BFBA               	btfsc	(_ts_system+31)& (0+255),7,b	;volatile
 27521  008DD0  D005               	goto	u15600
 27522  008DD2  51BA               	movf	(_ts_system+31)& (0+255),w,b	;volatile
 27523  008DD4  E10D               	bnz	l2514
 27524  008DD6  05B9               	decf	(_ts_system+30)& (0+255),w,b	;volatile
 27525  008DD8  B0D8               	btfsc	status,0,c
 27526  008DDA  0012               	return	
 27527  008DDC                     u15600:
 27528                           
 27529                           ; BSR set to: 1
 27530  008DDC  5010               	movf	setFlashLigth_ON@Freq^0,w,c
 27531  008DDE  1011               	iorwf	(setFlashLigth_ON@Freq+1)^0,w,c
 27532  008DE0  B4D8               	btfsc	status,2,c
 27533  008DE2  0012               	return	
 27534                           
 27535                           ; BSR set to: 1
 27536                           ;outputs_MC50.c: 1089:     {;outputs_MC50.c: 1090:         ts_system.timeFreqFlashligth=
      +                          Freq;
 27537  008DE4  C010  F1B9         	movff	setFlashLigth_ON@Freq,_ts_system+30	;volatile
 27538  008DE8  C011  F1BA         	movff	setFlashLigth_ON@Freq+1,_ts_system+31	;volatile
 27539                           
 27540                           ; BSR set to: 1
 27541                           ;outputs_MC50.c: 1091:         var_sys.upFaseFlashligth ^= (1 << 0);
 27542  008DEC  0E01               	movlw	1
 27543  008DEE  1B25               	xorwf	(_var_sys+37)& (0+255),f,b	;volatile
 27544  008DF0                     l2514:
 27545                           
 27546                           ; BSR set to: 1
 27547  008DF0  0012               	return		;funcret
 27548  008DF2                     __end_of_setFlashLigth_ON:
 27549                           	callstack 0
 27550                           
 27551 ;; *************** function _ControlInputs *****************
 27552 ;; Defined at:
 27553 ;;		line 674 in file "inputs_MC50.c"
 27554 ;; Parameters:    Size  Location     Type
 27555 ;;		None
 27556 ;; Auto vars:     Size  Location     Type
 27557 ;;		None
 27558 ;; Return value:  Size  Location     Type
 27559 ;;                  1    wreg      void 
 27560 ;; Registers used:
 27561 ;;		wreg, status,2, status,0
 27562 ;; Tracked objects:
 27563 ;;		On entry : 3E/1
 27564 ;;		On exit  : 3E/0
 27565 ;;		Unchanged: 0/0
 27566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27571 ;;Total ram usage:        0 bytes
 27572 ;; Hardware stack levels used: 1
 27573 ;; Hardware stack levels required when called: 4
 27574 ;; This function calls:
 27575 ;;		Nothing
 27576 ;; This function is called by:
 27577 ;;		_main
 27578 ;; This function uses a non-reentrant model
 27579 ;;
 27580                           
 27581                           	psect	text117
 27582  00694C                     __ptext117:
 27583                           	callstack 0
 27584  00694C                     _ControlInputs:
 27585                           	callstack 26
 27586                           
 27587                           ;inputs_MC50.c: 678:     if (( var_sys.StateMotor==InClose || (((PORTEbits.RE1 == 1)&& v
      +                          ar_sys_NVM.Direction_motor == 0)||((PORTEbits.RE0 == 1)&&var_sys_NVM.Direction_motor == 
      +                          1))) && (var_sys.FimCurso_CloseIsEnabled == YES))
 27588                           
 27589                           ; BSR set to: 1
 27590                           ;incstack = 0
 27591  00694C  0E03               	movlw	3
 27592  00694E  0101               	movlb	1	; () banked
 27593  006950  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27594  006952  B4D8               	btfsc	status,2,c
 27595  006954  D00C               	goto	u19560
 27596                           
 27597                           ; BSR set to: 1
 27598  006956  A291               	btfss	145,1,c	;volatile
 27599  006958  D004               	goto	u19540
 27600                           
 27601                           ; BSR set to: 1
 27602  00695A  0100               	movlb	0	; () banked
 27603  00695C  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27604  00695E  B4D8               	btfsc	status,2,c
 27605  006960  D006               	goto	u19560
 27606  006962                     u19540:
 27607  006962  A091               	btfss	145,0,c	;volatile
 27608  006964  D00A               	goto	l16952
 27609  006966  0100               	movlb	0	; () banked
 27610  006968  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27611  00696A  A4D8               	btfss	status,2,c
 27612  00696C  D006               	goto	l16952
 27613  00696E                     u19560:
 27614  00696E  0101               	movlb	1	; () banked
 27615  006970  0503               	decf	(_var_sys+3)& (0+255),w,b	;volatile
 27616  006972  A4D8               	btfss	status,2,c
 27617  006974  D002               	goto	l16952
 27618                           
 27619                           ; BSR set to: 1
 27620                           ;inputs_MC50.c: 679:     {;inputs_MC50.c: 680:         var_sys.StateMotor = Stopped;
 27621  006976  0E00               	movlw	0
 27622  006978  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27623  00697A                     l16952:
 27624                           
 27625                           ;inputs_MC50.c: 683:     if((var_sys.StateMotor==InOpenFull || var_sys.StateMotor==InOpe
      +                          nWalk || (((PORTEbits.RE0 == 1) &&var_sys_NVM.Direction_motor == 0)||((PORTEbits.RE1 == 
      +                          1) && var_sys_NVM.Direction_motor == 1))) && (var_sys.FimCurso_OpenIsEnabled == YES))
 27626  00697A  0101               	movlb	1	; () banked
 27627  00697C  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27628  00697E  B4D8               	btfsc	status,2,c
 27629  006980  D010               	goto	u19630
 27630                           
 27631                           ; BSR set to: 1
 27632  006982  0E02               	movlw	2
 27633  006984  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27634  006986  B4D8               	btfsc	status,2,c
 27635  006988  D00C               	goto	u19630
 27636                           
 27637                           ; BSR set to: 1
 27638  00698A  A091               	btfss	145,0,c	;volatile
 27639  00698C  D004               	goto	u19610
 27640                           
 27641                           ; BSR set to: 1
 27642  00698E  0100               	movlb	0	; () banked
 27643  006990  51B3               	movf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27644  006992  B4D8               	btfsc	status,2,c
 27645  006994  D006               	goto	u19630
 27646  006996                     u19610:
 27647  006996  A291               	btfss	145,1,c	;volatile
 27648  006998  D00A               	goto	l16966
 27649  00699A  0100               	movlb	0	; () banked
 27650  00699C  05B3               	decf	(_var_sys_NVM+27)& (0+255),w,b	;volatile
 27651  00699E  A4D8               	btfss	status,2,c
 27652  0069A0  D006               	goto	l16966
 27653  0069A2                     u19630:
 27654  0069A2  0101               	movlb	1	; () banked
 27655  0069A4  0504               	decf	(_var_sys+4)& (0+255),w,b	;volatile
 27656  0069A6  A4D8               	btfss	status,2,c
 27657  0069A8  D002               	goto	l16966
 27658                           
 27659                           ; BSR set to: 1
 27660                           ;inputs_MC50.c: 684:     {;inputs_MC50.c: 685:         var_sys.StateMotor = Stopped;
 27661  0069AA  0E00               	movlw	0
 27662  0069AC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27663  0069AE                     l16966:
 27664                           
 27665                           ;inputs_MC50.c: 688:     if (var_sys.LearningIsEnabled != YES){
 27666  0069AE  0101               	movlb	1	; () banked
 27667  0069B0  0526               	decf	(_var_sys+38)& (0+255),w,b	;volatile
 27668  0069B2  B4D8               	btfsc	status,2,c
 27669  0069B4  0012               	return	
 27670                           
 27671                           ; BSR set to: 1
 27672                           ;inputs_MC50.c: 690:         if((var_sys_NVM.photoCellIsON == 1) && (var_sys.photoCellIs
      +                          Obstructed == YES) && var_sys.AutoInversionActive==NO)
 27673  0069B6  0100               	movlb	0	; () banked
 27674  0069B8  059F               	decf	(_var_sys_NVM+7)& (0+255),w,b	;volatile
 27675  0069BA  A4D8               	btfss	status,2,c
 27676  0069BC  D02B               	goto	l16992
 27677                           
 27678                           ; BSR set to: 0
 27679  0069BE  0101               	movlb	1	; () banked
 27680  0069C0  0501               	decf	(_var_sys+1)& (0+255),w,b	;volatile
 27681  0069C2  A4D8               	btfss	status,2,c
 27682  0069C4  D027               	goto	l16992
 27683                           
 27684                           ; BSR set to: 1
 27685  0069C6  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 27686  0069C8  A4D8               	btfss	status,2,c
 27687  0069CA  D024               	goto	l16992
 27688                           
 27689                           ; BSR set to: 1
 27690                           ;inputs_MC50.c: 691:         {;inputs_MC50.c: 699:             if((var_sys.StateMotor==I
      +                          nOpenFull || var_sys.StateMotor==InOpenWalk) && (var_sys_NVM.photoCellInOpen==1))
 27691  0069CC  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27692  0069CE  B4D8               	btfsc	status,2,c
 27693  0069D0  D004               	goto	u19700
 27694                           
 27695                           ; BSR set to: 1
 27696  0069D2  0E02               	movlw	2
 27697  0069D4  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27698  0069D6  A4D8               	btfss	status,2,c
 27699  0069D8  D007               	goto	l16982
 27700  0069DA                     u19700:
 27701                           
 27702                           ; BSR set to: 1
 27703  0069DA  0100               	movlb	0	; () banked
 27704  0069DC  05A0               	decf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 27705  0069DE  A4D8               	btfss	status,2,c
 27706  0069E0  D003               	goto	l16982
 27707                           
 27708                           ; BSR set to: 0
 27709                           ;inputs_MC50.c: 700:             {;inputs_MC50.c: 701:                 var_sys.StateMoto
      +                          r = Stopped;
 27710  0069E2  0E00               	movlw	0
 27711  0069E4  0101               	movlb	1	; () banked
 27712  0069E6  D015               	goto	L102
 27713  0069E8                     l16982:
 27714  0069E8  0E03               	movlw	3
 27715  0069EA  0101               	movlb	1	; () banked
 27716  0069EC  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27717  0069EE  A4D8               	btfss	status,2,c
 27718  0069F0  D011               	goto	l16992
 27719                           
 27720                           ; BSR set to: 1
 27721  0069F2  0100               	movlb	0	; () banked
 27722  0069F4  51A0               	movf	(_var_sys_NVM+8)& (0+255),w,b	;volatile
 27723  0069F6  A4D8               	btfss	status,2,c
 27724  0069F8  D00D               	goto	l16992
 27725                           
 27726                           ; BSR set to: 0
 27727  0069FA  0101               	movlb	1	; () banked
 27728  0069FC  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 27729  0069FE  D005               	goto	u19740
 27730  006A00  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 27731  006A02  E108               	bnz	l16992
 27732  006A04  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 27733  006A06  B0D8               	btfsc	status,0,c
 27734  006A08  D005               	goto	l16992
 27735  006A0A                     u19740:
 27736                           
 27737                           ; BSR set to: 1
 27738  006A0A  0527               	decf	(_var_sys+39)& (0+255),w,b	;volatile
 27739  006A0C  A4D8               	btfss	status,2,c
 27740  006A0E  D002               	goto	l16992
 27741                           
 27742                           ; BSR set to: 1
 27743                           ;inputs_MC50.c: 706:             {;inputs_MC50.c: 707:                 var_sys.StateMoto
      +                          r = Stopped;
 27744  006A10  0E00               	movlw	0
 27745  006A12                     L102:
 27746  006A12  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27747  006A14                     l16992:
 27748                           
 27749                           ;inputs_MC50.c: 713:         if((var_sys_NVM.securityBandIsON == 1 || var_sys_NVM.Stopbo
      +                          ton == 1) && (var_sys.SecurityBarIsObstructed == YES && var_sys.AutoInversionActive == N
      +                          O))
 27750  006A14  0100               	movlb	0	; () banked
 27751  006A16  05A1               	decf	(_var_sys_NVM+9)& (0+255),w,b	;volatile
 27752  006A18  B4D8               	btfsc	status,2,c
 27753  006A1A  D003               	goto	u19770
 27754                           
 27755                           ; BSR set to: 0
 27756  006A1C  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 27757  006A1E  A4D8               	btfss	status,2,c
 27758  006A20  0012               	return	
 27759  006A22                     u19770:
 27760                           
 27761                           ; BSR set to: 0
 27762  006A22  0101               	movlb	1	; () banked
 27763  006A24  0502               	decf	(_var_sys+2)& (0+255),w,b	;volatile
 27764  006A26  A4D8               	btfss	status,2,c
 27765  006A28  0012               	return	
 27766                           
 27767                           ; BSR set to: 1
 27768  006A2A  5127               	movf	(_var_sys+39)& (0+255),w,b	;volatile
 27769  006A2C  A4D8               	btfss	status,2,c
 27770  006A2E  0012               	return	
 27771                           
 27772                           ; BSR set to: 1
 27773                           ;inputs_MC50.c: 714:         {;inputs_MC50.c: 723:             if(var_sys.StateMotor == 
      +                          InClose && (var_sys_NVM.securityBandInOpen == 0))
 27774  006A30  0E03               	movlw	3
 27775  006A32  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27776  006A34  A4D8               	btfss	status,2,c
 27777  006A36  D008               	goto	l17006
 27778                           
 27779                           ; BSR set to: 1
 27780  006A38  0100               	movlb	0	; () banked
 27781  006A3A  51A3               	movf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 27782  006A3C  A4D8               	btfss	status,2,c
 27783  006A3E  D004               	goto	l17006
 27784                           
 27785                           ; BSR set to: 0
 27786                           ;inputs_MC50.c: 724:             {;inputs_MC50.c: 725:                 var_sys.StateMoto
      +                          r = Stopped;
 27787  006A40  0E00               	movlw	0
 27788  006A42  0101               	movlb	1	; () banked
 27789  006A44  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27790                           
 27791                           ;inputs_MC50.c: 727:             }
 27792  006A46  0012               	return	
 27793  006A48                     l17006:
 27794  006A48  0101               	movlb	1	; () banked
 27795  006A4A  0500               	decf	_var_sys& (0+255),w,b	;volatile
 27796  006A4C  B4D8               	btfsc	status,2,c
 27797  006A4E  D004               	goto	u19830
 27798                           
 27799                           ; BSR set to: 1
 27800  006A50  0E02               	movlw	2
 27801  006A52  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 27802  006A54  A4D8               	btfss	status,2,c
 27803  006A56  D004               	goto	u19840
 27804  006A58                     u19830:
 27805                           
 27806                           ; BSR set to: 1
 27807  006A58  0100               	movlb	0	; () banked
 27808  006A5A  05A3               	decf	(_var_sys_NVM+11)& (0+255),w,b	;volatile
 27809  006A5C  B4D8               	btfsc	status,2,c
 27810  006A5E  D004               	goto	u19850
 27811  006A60                     u19840:
 27812  006A60  0100               	movlb	0	; () banked
 27813  006A62  05AE               	decf	(_var_sys_NVM+22)& (0+255),w,b	;volatile
 27814  006A64  A4D8               	btfss	status,2,c
 27815  006A66  0012               	return	
 27816  006A68                     u19850:
 27817                           
 27818                           ; BSR set to: 0
 27819                           ;inputs_MC50.c: 730:             {;inputs_MC50.c: 731:                 var_sys.StateMoto
      +                          r = Stopped;
 27820  006A68  0E00               	movlw	0
 27821  006A6A  0101               	movlb	1	; () banked
 27822  006A6C  6F00               	movwf	_var_sys& (0+255),b	;volatile
 27823  006A6E  0012               	return	
 27824  006A70                     __end_of_ControlInputs:
 27825                           	callstack 0
 27826                           
 27827 ;; *************** function _ControlCurrent *****************
 27828 ;; Defined at:
 27829 ;;		line 342 in file "controlCurrent_MC50.c"
 27830 ;; Parameters:    Size  Location     Type
 27831 ;;		None
 27832 ;; Auto vars:     Size  Location     Type
 27833 ;;		None
 27834 ;; Return value:  Size  Location     Type
 27835 ;;                  1    wreg      void 
 27836 ;; Registers used:
 27837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27838 ;; Tracked objects:
 27839 ;;		On entry : 3E/1
 27840 ;;		On exit  : 3E/0
 27841 ;;		Unchanged: 0/0
 27842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27845 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27846 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27847 ;;Total ram usage:        4 bytes
 27848 ;; Hardware stack levels used: 1
 27849 ;; Hardware stack levels required when called: 6
 27850 ;; This function calls:
 27851 ;;		_GetMotorPower
 27852 ;;		_getCurrentComparator
 27853 ;;		_refreshADCZeroOffset
 27854 ;;		_refreshCurrent
 27855 ;; This function is called by:
 27856 ;;		_main
 27857 ;; This function uses a non-reentrant model
 27858 ;;
 27859                           
 27860                           	psect	text118
 27861  006306                     __ptext118:
 27862                           	callstack 0
 27863  006306                     _ControlCurrent:
 27864                           	callstack 24
 27865                           
 27866                           ;controlCurrent_MC50.c: 345:     refreshCurrent();
 27867                           
 27868                           ;incstack = 0
 27869  006306  ECD3  F045         	call	_refreshCurrent	;wreg free
 27870                           
 27871                           ;controlCurrent_MC50.c: 351:     refreshADCZeroOffset();
 27872  00630A  ECCB  F036         	call	_refreshADCZeroOffset	;wreg free
 27873                           
 27874                           ;controlCurrent_MC50.c: 354:     var_sys.velocityActual = GetMotorPower();
 27875  00630E  EC8D  F039         	call	_GetMotorPower	;wreg free
 27876  006312  6E23               	movwf	??_ControlCurrent^0,c
 27877  006314  5023               	movf	??_ControlCurrent^0,w,c
 27878  006316  6F38               	movwf	(_var_sys+56)& (0+255),b	;volatile
 27879  006318  6B39               	clrf	(_var_sys+57)& (0+255),b	;volatile
 27880                           
 27881                           ; BSR set to: 1
 27882                           ;controlCurrent_MC50.c: 355:     var_sys.ActualComparatorCurrent = getCurrentComparator(
      +                          );
 27883  00631A  EC97  F02D         	call	_getCurrentComparator	;wreg free
 27884  00631E  C016  F134         	movff	?_getCurrentComparator,_var_sys+52	;volatile
 27885  006322  C017  F135         	movff	?_getCurrentComparator+1,_var_sys+53	;volatile
 27886  006326  C018  F136         	movff	?_getCurrentComparator+2,_var_sys+54	;volatile
 27887  00632A  C019  F137         	movff	?_getCurrentComparator+3,_var_sys+55	;volatile
 27888                           
 27889                           ; BSR set to: 1
 27890                           ;controlCurrent_MC50.c: 357:     if(var_sys.StateMotor == Stopped)
 27891  00632E  5100               	movf	_var_sys& (0+255),w,b	;volatile
 27892  006330  A4D8               	btfss	status,2,c
 27893  006332  D00F               	goto	l23032
 27894                           
 27895                           ; BSR set to: 1
 27896                           ;controlCurrent_MC50.c: 358:     {;controlCurrent_MC50.c: 360:         numberOfErrorCurr
      +                          ent=0;
 27897  006334  0E00               	movlw	0
 27898  006336  0100               	movlb	0	; () banked
 27899  006338  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 27900                           
 27901                           ;controlCurrent_MC50.c: 361:         var_sys.CurrentAlarmIsOn=NO;
 27902  00633A  0E00               	movlw	0
 27903  00633C  0101               	movlb	1	; () banked
 27904  00633E  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 27905                           
 27906                           ;controlCurrent_MC50.c: 362:         var_sys.InvertionCurrentOpening=NO;
 27907  006340  0E00               	movlw	0
 27908  006342  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 27909                           
 27910                           ;controlCurrent_MC50.c: 363:         var_sys.InvertionCurrentClosing=NO;
 27911  006344  0E00               	movlw	0
 27912  006346  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 27913                           
 27914                           ;controlCurrent_MC50.c: 364:         ts_system.TimeTransitionDecelaration=(1000/50);
 27915  006348  0E00               	movlw	0
 27916  00634A  6FD4               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27917  00634C  0E14               	movlw	20
 27918  00634E  6FD3               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27919                           
 27920                           ;controlCurrent_MC50.c: 365:     }
 27921  006350  0012               	return	
 27922  006352                     l23032:
 27923                           
 27924                           ; BSR set to: 1
 27925  006352  517B               	movf	_powerControl_st& (0+255),w,b
 27926  006354  A4D8               	btfss	status,2,c
 27927  006356  D05D               	goto	l23066
 27928                           
 27929                           ; BSR set to: 1
 27930                           ;controlCurrent_MC50.c: 368:     {;controlCurrent_MC50.c: 376:         ts_system.TimeTra
      +                          nsitionDecelaration=(1000/50);
 27931  006358  0E00               	movlw	0
 27932  00635A  6FD4               	movwf	(_ts_system+57)& (0+255),b	;volatile
 27933  00635C  0E14               	movlw	20
 27934  00635E  6FD3               	movwf	(_ts_system+56)& (0+255),b	;volatile
 27935                           
 27936                           ; BSR set to: 1
 27937                           ;controlCurrent_MC50.c: 377:         if (( var_sys.ActualCurrent>var_sys.ActualComparato
      +                          rCurrent ) && (ts_system.TimeChargeCondesador<=0)&&var_sys_NVM.motorSensitivity!=0 && ts
      +                          _system.TimeReleCapacitor<=0)
 27938  006360  512E               	movf	(_var_sys+46)& (0+255),w,b	;volatile
 27939  006362  6E23               	movwf	??_ControlCurrent^0,c
 27940  006364  512F               	movf	(_var_sys+47)& (0+255),w,b	;volatile
 27941  006366  6E24               	movwf	(??_ControlCurrent+1)^0,c
 27942  006368  6A25               	clrf	(??_ControlCurrent+2)^0,c
 27943  00636A  6A26               	clrf	(??_ControlCurrent+3)^0,c
 27944  00636C  5023               	movf	??_ControlCurrent^0,w,c
 27945  00636E  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 27946  006370  5024               	movf	(??_ControlCurrent+1)^0,w,c
 27947  006372  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 27948  006374  5025               	movf	(??_ControlCurrent+2)^0,w,c
 27949  006376  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 27950  006378  5026               	movf	(??_ControlCurrent+3)^0,w,c
 27951  00637A  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 27952  00637C  B0D8               	btfsc	status,0,c
 27953  00637E  D03E               	goto	l23064
 27954                           
 27955                           ; BSR set to: 1
 27956  006380  BFB6               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 27957  006382  D005               	goto	u27870
 27958  006384  51B6               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 27959  006386  E13A               	bnz	l23064
 27960  006388  05B5               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 27961  00638A  B0D8               	btfsc	status,0,c
 27962  00638C  D037               	goto	l23064
 27963  00638E                     u27870:
 27964                           
 27965                           ; BSR set to: 1
 27966  00638E  0100               	movlb	0	; () banked
 27967  006390  519B               	movf	(_var_sys_NVM+3)& (0+255),w,b	;volatile
 27968  006392  B4D8               	btfsc	status,2,c
 27969  006394  D033               	goto	l23064
 27970                           
 27971                           ; BSR set to: 0
 27972  006396  0101               	movlb	1	; () banked
 27973  006398  BFDE               	btfsc	(_ts_system+67)& (0+255),7,b	;volatile
 27974  00639A  D005               	goto	u27890
 27975  00639C  51DE               	movf	(_ts_system+67)& (0+255),w,b	;volatile
 27976  00639E  E12E               	bnz	l23064
 27977  0063A0  05DD               	decf	(_ts_system+66)& (0+255),w,b	;volatile
 27978  0063A2  B0D8               	btfsc	status,0,c
 27979  0063A4  D02B               	goto	l23064
 27980  0063A6                     u27890:
 27981                           
 27982                           ; BSR set to: 1
 27983                           ;controlCurrent_MC50.c: 378:         {;controlCurrent_MC50.c: 379:              if (numb
      +                          erOfErrorCurrent >=1)
 27984  0063A6  0100               	movlb	0	; () banked
 27985  0063A8  518E               	movf	_numberOfErrorCurrent& (0+255),w,b	;volatile
 27986  0063AA  B4D8               	btfsc	status,2,c
 27987  0063AC  D00B               	goto	l23050
 27988                           
 27989                           ; BSR set to: 0
 27990                           ;controlCurrent_MC50.c: 380:              {;controlCurrent_MC50.c: 381:                 
      +                           if(erroranterior > var_sys.ActualCurrent )
 27991  0063AE  0101               	movlb	1	; () banked
 27992  0063B0  5189               	movf	_erroranterior& (0+255),w,b	;volatile
 27993  0063B2  5D2E               	subwf	(_var_sys+46)& (0+255),w,b	;volatile
 27994  0063B4  518A               	movf	(_erroranterior+1)& (0+255),w,b	;volatile
 27995  0063B6  592F               	subwfb	(_var_sys+47)& (0+255),w,b	;volatile
 27996  0063B8  B0D8               	btfsc	status,0,c
 27997  0063BA  D004               	goto	l23050
 27998                           
 27999                           ; BSR set to: 1
 28000                           ;controlCurrent_MC50.c: 382:                  {;controlCurrent_MC50.c: 383:             
      +                                 numberOfErrorCurrent = 0;
 28001  0063BC  0E00               	movlw	0
 28002  0063BE  0100               	movlb	0	; () banked
 28003  0063C0  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28004                           
 28005                           ;controlCurrent_MC50.c: 384:                  }
 28006  0063C2  D002               	goto	l23052
 28007  0063C4                     l23050:
 28008                           
 28009                           ;controlCurrent_MC50.c: 386:                  {;controlCurrent_MC50.c: 387:             
      +                                 numberOfErrorCurrent++;
 28010  0063C4  0100               	movlb	0	; () banked
 28011  0063C6  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28012  0063C8                     l23052:
 28013                           
 28014                           ; BSR set to: 0
 28015                           ;controlCurrent_MC50.c: 389:                  erroranterior = var_sys.ActualCurrent;
 28016  0063C8  C12E  F189         	movff	_var_sys+46,_erroranterior	;volatile
 28017  0063CC  C12F  F18A         	movff	_var_sys+47,_erroranterior+1	;volatile
 28018                           
 28019                           ; BSR set to: 0
 28020                           ;controlCurrent_MC50.c: 398:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>1)
 28021                           
 28022                           ;controlCurrent_MC50.c: 390:              }
 28023  0063D0  0101               	movlb	1	; () banked
 28024  0063D2  BFCA               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28025  0063D4  D005               	goto	u27920
 28026  0063D6  51CA               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28027  0063D8  E14F               	bnz	l1405
 28028  0063DA  05C9               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28029  0063DC  B0D8               	btfsc	status,0,c
 28030  0063DE  0012               	return	
 28031  0063E0                     u27920:
 28032                           
 28033                           ; BSR set to: 1
 28034  0063E0  0E01               	movlw	1
 28035  0063E2  0100               	movlb	0	; () banked
 28036  0063E4  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28037  0063E6  0012               	return	
 28038                           
 28039                           ; BSR set to: 0
 28040                           ;controlCurrent_MC50.c: 399:             {;controlCurrent_MC50.c: 400:                 v
      +                          ar_sys.StateMotor = Stopped;
 28041  0063E8  0E00               	movlw	0
 28042  0063EA  0101               	movlb	1	; () banked
 28043  0063EC  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28044                           
 28045                           ;controlCurrent_MC50.c: 401:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28046  0063EE  0E00               	movlw	0
 28047  0063F0  6FC6               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28048  0063F2  0EC8               	movlw	200
 28049  0063F4  6FC5               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28050                           
 28051                           ;controlCurrent_MC50.c: 402:                 var_sys.CurrentAlarmIsOn=YES;
 28052  0063F6  0E01               	movlw	1
 28053  0063F8  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28054  0063FA  0012               	return	
 28055  0063FC                     l23064:
 28056                           
 28057                           ;controlCurrent_MC50.c: 409:         {;controlCurrent_MC50.c: 410:             numberOfE
      +                          rrorCurrent=0;
 28058  0063FC  0E00               	movlw	0
 28059  0063FE  0100               	movlb	0	; () banked
 28060  006400  6F8E               	movwf	_numberOfErrorCurrent& (0+255),b	;volatile
 28061                           
 28062                           ;controlCurrent_MC50.c: 411:             var_sys.CurrentAlarmIsOn=NO;
 28063  006402  0E00               	movlw	0
 28064  006404  0101               	movlb	1	; () banked
 28065  006406  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28066                           
 28067                           ;controlCurrent_MC50.c: 412:             var_sys.InvertionCurrentOpening=NO;
 28068  006408  0E00               	movlw	0
 28069  00640A  6F45               	movwf	(_var_sys+69)& (0+255),b	;volatile
 28070                           
 28071                           ;controlCurrent_MC50.c: 413:             var_sys.InvertionCurrentClosing=NO;
 28072  00640C  0E00               	movlw	0
 28073  00640E  6F44               	movwf	(_var_sys+68)& (0+255),b	;volatile
 28074  006410  0012               	return	
 28075  006412                     l23066:
 28076                           
 28077                           ; BSR set to: 1
 28078                           ;controlCurrent_MC50.c: 419:     {;controlCurrent_MC50.c: 420:         if( ( var_sys.Act
      +                          ualHistCurrent<var_sys.ActualComparatorCurrent ) && (ts_system.TimeChargeCondesador<=0)&
      +                          &ts_system.TimeTransitionDecelaration<=0&&var_sys_NVM.decelarationSensivity!=0)
 28079  006412  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 28080  006414  5D30               	subwf	(_var_sys+48)& (0+255),w,b	;volatile
 28081  006416  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 28082  006418  5931               	subwfb	(_var_sys+49)& (0+255),w,b	;volatile
 28083  00641A  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 28084  00641C  5932               	subwfb	(_var_sys+50)& (0+255),w,b	;volatile
 28085  00641E  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 28086  006420  5933               	subwfb	(_var_sys+51)& (0+255),w,b	;volatile
 28087  006422  B0D8               	btfsc	status,0,c
 28088  006424  D7EB               	goto	l23064
 28089                           
 28090                           ; BSR set to: 1
 28091  006426  BFB6               	btfsc	(_ts_system+27)& (0+255),7,b	;volatile
 28092  006428  D005               	goto	u27950
 28093  00642A  51B6               	movf	(_ts_system+27)& (0+255),w,b	;volatile
 28094  00642C  E1E7               	bnz	l23064
 28095  00642E  05B5               	decf	(_ts_system+26)& (0+255),w,b	;volatile
 28096  006430  B0D8               	btfsc	status,0,c
 28097  006432  D7E4               	goto	l23064
 28098  006434                     u27950:
 28099                           
 28100                           ; BSR set to: 1
 28101  006434  BFD4               	btfsc	(_ts_system+57)& (0+255),7,b	;volatile
 28102  006436  D005               	goto	u27960
 28103  006438  51D4               	movf	(_ts_system+57)& (0+255),w,b	;volatile
 28104  00643A  E1E0               	bnz	l23064
 28105  00643C  05D3               	decf	(_ts_system+56)& (0+255),w,b	;volatile
 28106  00643E  B0D8               	btfsc	status,0,c
 28107  006440  D7DD               	goto	l23064
 28108  006442                     u27960:
 28109                           
 28110                           ; BSR set to: 1
 28111  006442  0100               	movlb	0	; () banked
 28112  006444  51A7               	movf	(_var_sys_NVM+15)& (0+255),w,b	;volatile
 28113  006446  B4D8               	btfsc	status,2,c
 28114  006448  D7D9               	goto	l23064
 28115                           
 28116                           ; BSR set to: 0
 28117                           ;controlCurrent_MC50.c: 421:         {;controlCurrent_MC50.c: 423:             numberOfE
      +                          rrorCurrent++;
 28118  00644A  2B8E               	incf	_numberOfErrorCurrent& (0+255),f,b	;volatile
 28119                           
 28120                           ; BSR set to: 0
 28121                           ;controlCurrent_MC50.c: 424:             if(ts_system.TimeCurrentWaitForAlarm<=0&&number
      +                          OfErrorCurrent>2)
 28122  00644C  0101               	movlb	1	; () banked
 28123  00644E  BFCA               	btfsc	(_ts_system+47)& (0+255),7,b	;volatile
 28124  006450  D005               	goto	u27980
 28125  006452  51CA               	movf	(_ts_system+47)& (0+255),w,b	;volatile
 28126  006454  E111               	bnz	l1405
 28127  006456  05C9               	decf	(_ts_system+46)& (0+255),w,b	;volatile
 28128  006458  B0D8               	btfsc	status,0,c
 28129  00645A  0012               	return	
 28130  00645C                     u27980:
 28131                           
 28132                           ; BSR set to: 1
 28133  00645C  0E02               	movlw	2
 28134  00645E  0100               	movlb	0	; () banked
 28135  006460  658E               	cpfsgt	_numberOfErrorCurrent& (0+255),b	;volatile
 28136  006462  0012               	return	
 28137                           
 28138                           ; BSR set to: 0
 28139                           ;controlCurrent_MC50.c: 425:             {;controlCurrent_MC50.c: 426:                 v
      +                          ar_sys.StateMotor = Stopped;
 28140  006464  0E00               	movlw	0
 28141  006466  0101               	movlb	1	; () banked
 28142  006468  6F00               	movwf	_var_sys& (0+255),b	;volatile
 28143                           
 28144                           ;controlCurrent_MC50.c: 427:                 ts_system.TimeCurrentAlarm= (1000/50)*10;
 28145  00646A  0E00               	movlw	0
 28146  00646C  6FC6               	movwf	(_ts_system+43)& (0+255),b	;volatile
 28147  00646E  0EC8               	movlw	200
 28148  006470  6FC5               	movwf	(_ts_system+42)& (0+255),b	;volatile
 28149                           
 28150                           ;controlCurrent_MC50.c: 428:                 var_sys.CurrentAlarmIsOn=YES;
 28151  006472  0E01               	movlw	1
 28152  006474  6F41               	movwf	(_var_sys+65)& (0+255),b	;volatile
 28153  006476  0012               	return	
 28154  006478                     l1405:
 28155  006478  0012               	return		;funcret
 28156  00647A                     __end_of_ControlCurrent:
 28157                           	callstack 0
 28158                           
 28159 ;; *************** function _refreshCurrent *****************
 28160 ;; Defined at:
 28161 ;;		line 233 in file "controlCurrent_MC50.c"
 28162 ;; Parameters:    Size  Location     Type
 28163 ;;		None
 28164 ;; Auto vars:     Size  Location     Type
 28165 ;;		None
 28166 ;; Return value:  Size  Location     Type
 28167 ;;                  1    wreg      void 
 28168 ;; Registers used:
 28169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28170 ;; Tracked objects:
 28171 ;;		On entry : 3E/1
 28172 ;;		On exit  : 3F/0
 28173 ;;		Unchanged: 0/0
 28174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28179 ;;Total ram usage:        0 bytes
 28180 ;; Hardware stack levels used: 1
 28181 ;; Hardware stack levels required when called: 5
 28182 ;; This function calls:
 28183 ;;		_saveEnergyADCHist
 28184 ;;		_sumEnergyADC
 28185 ;;		_sumHIST
 28186 ;; This function is called by:
 28187 ;;		_ControlCurrent
 28188 ;; This function uses a non-reentrant model
 28189 ;;
 28190                           
 28191                           	psect	text119
 28192  008BA6                     __ptext119:
 28193                           	callstack 0
 28194  008BA6                     _refreshCurrent:
 28195                           	callstack 24
 28196                           
 28197                           ;controlCurrent_MC50.c: 238:     if ( (var_sys_NVM.electricBrake==1) && (ts_system.TimeE
      +                          lectricBrake>0) )
 28198                           
 28199                           ;incstack = 0
 28200  008BA6  0100               	movlb	0	; () banked
 28201  008BA8  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 28202  008BAA  A4D8               	btfss	status,2,c
 28203  008BAC  D008               	goto	l14702
 28204                           
 28205                           ; BSR set to: 0
 28206  008BAE  0101               	movlb	1	; () banked
 28207  008BB0  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 28208  008BB2  D005               	goto	l14702
 28209  008BB4  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 28210  008BB6  E109               	bnz	l1372
 28211  008BB8  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 28212  008BBA  B0D8               	btfsc	status,0,c
 28213  008BBC  D006               	goto	l1372
 28214  008BBE                     l14702:
 28215                           
 28216                           ;controlCurrent_MC50.c: 243:     {;controlCurrent_MC50.c: 245:         var_sys.ActualCur
      +                          rent=sumEnergyADC();
 28217  008BBE  EC73  F03D         	call	_sumEnergyADC	;wreg free
 28218  008BC2  C010  F12E         	movff	?_sumEnergyADC,_var_sys+46	;volatile
 28219  008BC6  C011  F12F         	movff	?_sumEnergyADC+1,_var_sys+47	;volatile
 28220  008BCA                     l1372:
 28221                           
 28222                           ; BSR set to: 1
 28223                           ;controlCurrent_MC50.c: 248:     saveEnergyADCHist(var_sys.ActualCurrent);
 28224  008BCA  C12E  F010         	movff	_var_sys+46,saveEnergyADCHist@valueToSave	;volatile
 28225  008BCE  C12F  F011         	movff	_var_sys+47,saveEnergyADCHist@valueToSave+1	;volatile
 28226  008BD2  ECF5  F048         	call	_saveEnergyADCHist	;wreg free
 28227                           
 28228                           ;controlCurrent_MC50.c: 250:     var_sys.ActualHistCurrent=sumHIST();
 28229  008BD6  ECC8  F037         	call	_sumHIST	;wreg free
 28230  008BDA  C010  F130         	movff	?_sumHIST,_var_sys+48	;volatile
 28231  008BDE  C011  F131         	movff	?_sumHIST+1,_var_sys+49	;volatile
 28232  008BE2  C012  F132         	movff	?_sumHIST+2,_var_sys+50	;volatile
 28233  008BE6  C013  F133         	movff	?_sumHIST+3,_var_sys+51	;volatile
 28234                           
 28235                           ; BSR set to: 0
 28236  008BEA  0012               	return		;funcret
 28237  008BEC                     __end_of_refreshCurrent:
 28238                           	callstack 0
 28239                           
 28240 ;; *************** function _sumHIST *****************
 28241 ;; Defined at:
 28242 ;;		line 199 in file "controlCurrent_MC50.c"
 28243 ;; Parameters:    Size  Location     Type
 28244 ;;		None
 28245 ;; Auto vars:     Size  Location     Type
 28246 ;;  sumH            4   27[COMRAM] unsigned long 
 28247 ;;  min             2   25[COMRAM] unsigned int 
 28248 ;;  max             2   23[COMRAM] unsigned int 
 28249 ;;  i               1   31[COMRAM] unsigned char 
 28250 ;; Return value:  Size  Location     Type
 28251 ;;                  4   15[COMRAM] unsigned long 
 28252 ;; Registers used:
 28253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28254 ;; Tracked objects:
 28255 ;;		On entry : 3F/0
 28256 ;;		On exit  : 3F/0
 28257 ;;		Unchanged: 3F/0
 28258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28260 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28261 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28262 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28263 ;;Total ram usage:       17 bytes
 28264 ;; Hardware stack levels used: 1
 28265 ;; Hardware stack levels required when called: 4
 28266 ;; This function calls:
 28267 ;;		Nothing
 28268 ;; This function is called by:
 28269 ;;		_refreshCurrent
 28270 ;; This function uses a non-reentrant model
 28271 ;;
 28272                           
 28273                           	psect	text120
 28274  006F90                     __ptext120:
 28275                           	callstack 0
 28276  006F90                     _sumHIST:
 28277                           	callstack 24
 28278                           
 28279                           ; BSR set to: 0
 28280                           ;controlCurrent_MC50.c: 201:     unsigned char i;;controlCurrent_MC50.c: 202:     unsign
      +                          ed long sumH = 0;
 28281                           
 28282                           ; BSR set to: 0
 28283                           ;incstack = 0
 28284  006F90  0E00               	movlw	0
 28285  006F92  6E1C               	movwf	sumHIST@sumH^0,c
 28286  006F94  0E00               	movlw	0
 28287  006F96  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28288  006F98  0E00               	movlw	0
 28289  006F9A  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28290  006F9C  0E00               	movlw	0
 28291  006F9E  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28292                           
 28293                           ;controlCurrent_MC50.c: 203:     unsigned int max=0;
 28294  006FA0  0E00               	movlw	0
 28295  006FA2  6E19               	movwf	(sumHIST@max+1)^0,c
 28296  006FA4  0E00               	movlw	0
 28297  006FA6  6E18               	movwf	sumHIST@max^0,c
 28298                           
 28299                           ; BSR set to: 0
 28300                           ;controlCurrent_MC50.c: 204:     unsigned int min=0xFFFF;
 28301  006FA8  681A               	setf	sumHIST@min^0,c
 28302  006FAA  681B               	setf	(sumHIST@min+1)^0,c
 28303                           
 28304                           ;controlCurrent_MC50.c: 207:     for( i = 0; i<(10); i++)
 28305  006FAC  0E00               	movlw	0
 28306  006FAE  6E20               	movwf	sumHIST@i^0,c
 28307  006FB0                     l12854:
 28308                           
 28309                           ; BSR set to: 0
 28310                           ;controlCurrent_MC50.c: 208:     {;controlCurrent_MC50.c: 209:         sumH=sumH+SumEner
      +                          gyADCHist_array[i];
 28311  006FB0  5020               	movf	sumHIST@i^0,w,c
 28312  006FB2  0D02               	mullw	2
 28313  006FB4  0E60               	movlw	low _SumEnergyADCHist_array
 28314  006FB6  24F3               	addwf	243,w,c
 28315  006FB8  6ED9               	movwf	fsr2l,c
 28316  006FBA  0E02               	movlw	high _SumEnergyADCHist_array
 28317  006FBC  20F4               	addwfc	prodh,w,c
 28318  006FBE  6EDA               	movwf	fsr2h,c
 28319  006FC0  CFDE F014          	movff	postinc2,??_sumHIST
 28320  006FC4  CFDD F015          	movff	postdec2,??_sumHIST+1
 28321  006FC8  5014               	movf	??_sumHIST^0,w,c
 28322  006FCA  241C               	addwf	sumHIST@sumH^0,w,c
 28323  006FCC  6E1C               	movwf	sumHIST@sumH^0,c
 28324  006FCE  5015               	movf	(??_sumHIST+1)^0,w,c
 28325  006FD0  201D               	addwfc	(sumHIST@sumH+1)^0,w,c
 28326  006FD2  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28327  006FD4  0E00               	movlw	0
 28328  006FD6  201E               	addwfc	(sumHIST@sumH+2)^0,w,c
 28329  006FD8  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28330  006FDA  0E00               	movlw	0
 28331  006FDC  201F               	addwfc	(sumHIST@sumH+3)^0,w,c
 28332  006FDE  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28333                           
 28334                           ;controlCurrent_MC50.c: 212:         if(SumEnergyADCHist_array[i]>max)
 28335  006FE0  5020               	movf	sumHIST@i^0,w,c
 28336  006FE2  0D02               	mullw	2
 28337  006FE4  0E60               	movlw	low _SumEnergyADCHist_array
 28338  006FE6  24F3               	addwf	243,w,c
 28339  006FE8  6ED9               	movwf	fsr2l,c
 28340  006FEA  0E02               	movlw	high _SumEnergyADCHist_array
 28341  006FEC  20F4               	addwfc	prodh,w,c
 28342  006FEE  6EDA               	movwf	fsr2h,c
 28343  006FF0  50DE               	movf	postinc2,w,c
 28344  006FF2  5C18               	subwf	sumHIST@max^0,w,c
 28345  006FF4  50DE               	movf	postinc2,w,c
 28346  006FF6  5819               	subwfb	(sumHIST@max+1)^0,w,c
 28347  006FF8  B0D8               	btfsc	status,0,c
 28348  006FFA  D00C               	goto	l1366
 28349                           
 28350                           ; BSR set to: 0
 28351                           ;controlCurrent_MC50.c: 213:         {;controlCurrent_MC50.c: 214:             max=SumEn
      +                          ergyADCHist_array[i];
 28352  006FFC  5020               	movf	sumHIST@i^0,w,c
 28353  006FFE  0D02               	mullw	2
 28354  007000  0E60               	movlw	low _SumEnergyADCHist_array
 28355  007002  24F3               	addwf	243,w,c
 28356  007004  6ED9               	movwf	fsr2l,c
 28357  007006  0E02               	movlw	high _SumEnergyADCHist_array
 28358  007008  20F4               	addwfc	prodh,w,c
 28359  00700A  6EDA               	movwf	fsr2h,c
 28360  00700C  CFDE F018          	movff	postinc2,sumHIST@max
 28361  007010  CFDD F019          	movff	postdec2,sumHIST@max+1
 28362  007014                     l1366:
 28363                           
 28364                           ; BSR set to: 0
 28365                           ;controlCurrent_MC50.c: 218:         if(SumEnergyADCHist_array[i]<min)
 28366  007014  5020               	movf	sumHIST@i^0,w,c
 28367  007016  0D02               	mullw	2
 28368  007018  0E60               	movlw	low _SumEnergyADCHist_array
 28369  00701A  24F3               	addwf	243,w,c
 28370  00701C  6ED9               	movwf	fsr2l,c
 28371  00701E  0E02               	movlw	high _SumEnergyADCHist_array
 28372  007020  20F4               	addwfc	prodh,w,c
 28373  007022  6EDA               	movwf	fsr2h,c
 28374  007024  501A               	movf	sumHIST@min^0,w,c
 28375  007026  5CDE               	subwf	postinc2,w,c
 28376  007028  501B               	movf	(sumHIST@min+1)^0,w,c
 28377  00702A  58DE               	subwfb	postinc2,w,c
 28378  00702C  B0D8               	btfsc	status,0,c
 28379  00702E  D00C               	goto	l12860
 28380                           
 28381                           ; BSR set to: 0
 28382                           ;controlCurrent_MC50.c: 219:         {;controlCurrent_MC50.c: 220:             min=SumEn
      +                          ergyADCHist_array[i];
 28383  007030  5020               	movf	sumHIST@i^0,w,c
 28384  007032  0D02               	mullw	2
 28385  007034  0E60               	movlw	low _SumEnergyADCHist_array
 28386  007036  24F3               	addwf	243,w,c
 28387  007038  6ED9               	movwf	fsr2l,c
 28388  00703A  0E02               	movlw	high _SumEnergyADCHist_array
 28389  00703C  20F4               	addwfc	prodh,w,c
 28390  00703E  6EDA               	movwf	fsr2h,c
 28391  007040  CFDE F01A          	movff	postinc2,sumHIST@min
 28392  007044  CFDD F01B          	movff	postdec2,sumHIST@min+1
 28393  007048                     l12860:
 28394                           
 28395                           ; BSR set to: 0
 28396                           ;controlCurrent_MC50.c: 222:     }
 28397  007048  2A20               	incf	sumHIST@i^0,f,c
 28398                           
 28399                           ; BSR set to: 0
 28400  00704A  0E09               	movlw	9
 28401  00704C  6420               	cpfsgt	sumHIST@i^0,c
 28402  00704E  D7B0               	goto	l12854
 28403                           
 28404                           ; BSR set to: 0
 28405                           ;controlCurrent_MC50.c: 224:     sumH = sumH - ( max+min );
 28406  007050  501A               	movf	sumHIST@min^0,w,c
 28407  007052  2418               	addwf	sumHIST@max^0,w,c
 28408  007054  6E14               	movwf	??_sumHIST^0,c
 28409  007056  501B               	movf	(sumHIST@min+1)^0,w,c
 28410  007058  2019               	addwfc	(sumHIST@max+1)^0,w,c
 28411  00705A  6E15               	movwf	(??_sumHIST+1)^0,c
 28412  00705C  6A16               	clrf	(??_sumHIST+2)^0,c
 28413  00705E  6A17               	clrf	(??_sumHIST+3)^0,c
 28414  007060  5014               	movf	??_sumHIST^0,w,c
 28415  007062  5C1C               	subwf	sumHIST@sumH^0,w,c
 28416  007064  6E1C               	movwf	sumHIST@sumH^0,c
 28417  007066  5015               	movf	(??_sumHIST+1)^0,w,c
 28418  007068  581D               	subwfb	(sumHIST@sumH+1)^0,w,c
 28419  00706A  6E1D               	movwf	(sumHIST@sumH+1)^0,c
 28420  00706C  5016               	movf	(??_sumHIST+2)^0,w,c
 28421  00706E  581E               	subwfb	(sumHIST@sumH+2)^0,w,c
 28422  007070  6E1E               	movwf	(sumHIST@sumH+2)^0,c
 28423  007072  5017               	movf	(??_sumHIST+3)^0,w,c
 28424  007074  581F               	subwfb	(sumHIST@sumH+3)^0,w,c
 28425  007076  6E1F               	movwf	(sumHIST@sumH+3)^0,c
 28426                           
 28427                           ; BSR set to: 0
 28428                           ;controlCurrent_MC50.c: 226:     return sumH;
 28429  007078  C01C  F010         	movff	sumHIST@sumH,?_sumHIST
 28430  00707C  C01D  F011         	movff	sumHIST@sumH+1,?_sumHIST+1
 28431  007080  C01E  F012         	movff	sumHIST@sumH+2,?_sumHIST+2
 28432  007084  C01F  F013         	movff	sumHIST@sumH+3,?_sumHIST+3
 28433                           
 28434                           ; BSR set to: 0
 28435  007088  0012               	return		;funcret
 28436  00708A                     __end_of_sumHIST:
 28437                           	callstack 0
 28438                           
 28439 ;; *************** function _sumEnergyADC *****************
 28440 ;; Defined at:
 28441 ;;		line 59 in file "controlCurrent_MC50.c"
 28442 ;; Parameters:    Size  Location     Type
 28443 ;;		None
 28444 ;; Auto vars:     Size  Location     Type
 28445 ;;  auxValue        2   21[COMRAM] unsigned int 
 28446 ;;  sumE            2   19[COMRAM] unsigned int 
 28447 ;;  i               1   23[COMRAM] unsigned char 
 28448 ;; Return value:  Size  Location     Type
 28449 ;;                  2   15[COMRAM] unsigned int 
 28450 ;; Registers used:
 28451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28452 ;; Tracked objects:
 28453 ;;		On entry : 3E/0
 28454 ;;		On exit  : 3F/1
 28455 ;;		Unchanged: 0/0
 28456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28458 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28460 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28461 ;;Total ram usage:        9 bytes
 28462 ;; Hardware stack levels used: 1
 28463 ;; Hardware stack levels required when called: 4
 28464 ;; This function calls:
 28465 ;;		Nothing
 28466 ;; This function is called by:
 28467 ;;		_refreshCurrent
 28468 ;; This function uses a non-reentrant model
 28469 ;;
 28470                           
 28471                           	psect	text121
 28472  007AE6                     __ptext121:
 28473                           	callstack 0
 28474  007AE6                     _sumEnergyADC:
 28475                           	callstack 24
 28476                           
 28477                           ;controlCurrent_MC50.c: 61:     unsigned char i;;controlCurrent_MC50.c: 63:     unsigned
      +                           int sumE = 0;
 28478                           
 28479                           ; BSR set to: 0
 28480                           ;incstack = 0
 28481  007AE6  0E00               	movlw	0
 28482  007AE8  6E15               	movwf	(sumEnergyADC@sumE+1)^0,c
 28483  007AEA  0E00               	movlw	0
 28484  007AEC  6E14               	movwf	sumEnergyADC@sumE^0,c
 28485                           
 28486                           ;controlCurrent_MC50.c: 72:     for ( i=0 ; i<(30) ; i++ )
 28487  007AEE  0E00               	movlw	0
 28488  007AF0  6E18               	movwf	sumEnergyADC@i^0,c
 28489  007AF2                     l12826:
 28490                           
 28491                           ;controlCurrent_MC50.c: 73:     {;controlCurrent_MC50.c: 83:         if ( ADC_array[i] >
      +                           var_sys.ADCZeroOffset )
 28492  007AF2  5018               	movf	sumEnergyADC@i^0,w,c
 28493  007AF4  0D02               	mullw	2
 28494  007AF6  0E00               	movlw	low _ADC_array
 28495  007AF8  24F3               	addwf	243,w,c
 28496  007AFA  6ED9               	movwf	fsr2l,c
 28497  007AFC  0E02               	movlw	high _ADC_array
 28498  007AFE  20F4               	addwfc	prodh,w,c
 28499  007B00  6EDA               	movwf	fsr2h,c
 28500  007B02  50DE               	movf	postinc2,w,c
 28501  007B04  0101               	movlb	1	; () banked
 28502  007B06  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 28503  007B08  50DE               	movf	postinc2,w,c
 28504  007B0A  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 28505  007B0C  B0D8               	btfsc	status,0,c
 28506  007B0E  D012               	goto	l12830
 28507                           
 28508                           ; BSR set to: 1
 28509                           ;controlCurrent_MC50.c: 84:         {;controlCurrent_MC50.c: 85:             auxValue = 
      +                          ( ADC_array[i] - var_sys.ADCZeroOffset );
 28510  007B10  5018               	movf	sumEnergyADC@i^0,w,c
 28511  007B12  0D02               	mullw	2
 28512  007B14  0E00               	movlw	low _ADC_array
 28513  007B16  24F3               	addwf	243,w,c
 28514  007B18  6ED9               	movwf	fsr2l,c
 28515  007B1A  0E02               	movlw	high _ADC_array
 28516  007B1C  20F4               	addwfc	prodh,w,c
 28517  007B1E  6EDA               	movwf	fsr2h,c
 28518  007B20  CFDE F012          	movff	postinc2,??_sumEnergyADC
 28519  007B24  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 28520  007B28  514B               	movf	(_var_sys+75)& (0+255),w,b	;volatile
 28521  007B2A  5C12               	subwf	??_sumEnergyADC^0,w,c
 28522  007B2C  6E16               	movwf	sumEnergyADC@auxValue^0,c
 28523  007B2E  514C               	movf	(_var_sys+76)& (0+255),w,b	;volatile
 28524  007B30  5813               	subwfb	(??_sumEnergyADC+1)^0,w,c
 28525  007B32  D011               	goto	L103
 28526  007B34                     l12830:
 28527                           
 28528                           ; BSR set to: 1
 28529                           ;controlCurrent_MC50.c: 88:         {;controlCurrent_MC50.c: 89:            auxValue = (
      +                           var_sys.ADCZeroOffset - ADC_array[i] );
 28530  007B34  5018               	movf	sumEnergyADC@i^0,w,c
 28531  007B36  0D02               	mullw	2
 28532  007B38  0E00               	movlw	low _ADC_array
 28533  007B3A  24F3               	addwf	243,w,c
 28534  007B3C  6ED9               	movwf	fsr2l,c
 28535  007B3E  0E02               	movlw	high _ADC_array
 28536  007B40  20F4               	addwfc	prodh,w,c
 28537  007B42  6EDA               	movwf	fsr2h,c
 28538  007B44  CFDE F012          	movff	postinc2,??_sumEnergyADC
 28539  007B48  CFDD F013          	movff	postdec2,??_sumEnergyADC+1
 28540  007B4C  5012               	movf	??_sumEnergyADC^0,w,c
 28541  007B4E  5D4B               	subwf	(_var_sys+75)& (0+255),w,b	;volatile
 28542  007B50  6E16               	movwf	sumEnergyADC@auxValue^0,c
 28543  007B52  5013               	movf	(??_sumEnergyADC+1)^0,w,c
 28544  007B54  594C               	subwfb	(_var_sys+76)& (0+255),w,b	;volatile
 28545  007B56                     L103:
 28546  007B56  6E17               	movwf	(sumEnergyADC@auxValue+1)^0,c
 28547                           
 28548                           ; BSR set to: 1
 28549                           ;controlCurrent_MC50.c: 91:         sumE += auxValue;
 28550  007B58  5016               	movf	sumEnergyADC@auxValue^0,w,c
 28551  007B5A  2614               	addwf	sumEnergyADC@sumE^0,f,c
 28552  007B5C  5017               	movf	(sumEnergyADC@auxValue+1)^0,w,c
 28553  007B5E  2215               	addwfc	(sumEnergyADC@sumE+1)^0,f,c
 28554                           
 28555                           ; BSR set to: 1
 28556                           ;controlCurrent_MC50.c: 94:     }
 28557  007B60  2A18               	incf	sumEnergyADC@i^0,f,c
 28558                           
 28559                           ; BSR set to: 1
 28560  007B62  0E1D               	movlw	29
 28561  007B64  6418               	cpfsgt	sumEnergyADC@i^0,c
 28562  007B66  D7C5               	goto	l12826
 28563                           
 28564                           ; BSR set to: 1
 28565                           ;controlCurrent_MC50.c: 96:     return sumE;
 28566  007B68  C014  F010         	movff	sumEnergyADC@sumE,?_sumEnergyADC
 28567  007B6C  C015  F011         	movff	sumEnergyADC@sumE+1,?_sumEnergyADC+1
 28568                           
 28569                           ; BSR set to: 1
 28570  007B70  0012               	return		;funcret
 28571  007B72                     __end_of_sumEnergyADC:
 28572                           	callstack 0
 28573                           
 28574 ;; *************** function _saveEnergyADCHist *****************
 28575 ;; Defined at:
 28576 ;;		line 182 in file "controlCurrent_MC50.c"
 28577 ;; Parameters:    Size  Location     Type
 28578 ;;  valueToSave     2   15[COMRAM] unsigned int 
 28579 ;; Auto vars:     Size  Location     Type
 28580 ;;		None
 28581 ;; Return value:  Size  Location     Type
 28582 ;;                  1    wreg      void 
 28583 ;; Registers used:
 28584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28585 ;; Tracked objects:
 28586 ;;		On entry : 3F/1
 28587 ;;		On exit  : 3F/0
 28588 ;;		Unchanged: 0/0
 28589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28594 ;;Total ram usage:        2 bytes
 28595 ;; Hardware stack levels used: 1
 28596 ;; Hardware stack levels required when called: 4
 28597 ;; This function calls:
 28598 ;;		Nothing
 28599 ;; This function is called by:
 28600 ;;		_refreshCurrent
 28601 ;; This function uses a non-reentrant model
 28602 ;;
 28603                           
 28604                           	psect	text122
 28605  0091EA                     __ptext122:
 28606                           	callstack 0
 28607  0091EA                     _saveEnergyADCHist:
 28608                           	callstack 24
 28609                           
 28610                           ; BSR set to: 1
 28611                           ;controlCurrent_MC50.c: 182: void saveEnergyADCHist(unsigned int valueToSave);controlCur
      +                          rent_MC50.c: 183: {;controlCurrent_MC50.c: 184:     if(idxSaveEnergyADCHist>=10)
 28612                           
 28613                           ; BSR set to: 1
 28614                           ;incstack = 0
 28615  0091EA  0E09               	movlw	9
 28616  0091EC  0100               	movlb	0	; () banked
 28617  0091EE  6590               	cpfsgt	_idxSaveEnergyADCHist& (0+255),b	;volatile
 28618  0091F0  D002               	goto	l12842
 28619                           
 28620                           ; BSR set to: 0
 28621                           ;controlCurrent_MC50.c: 185:     {;controlCurrent_MC50.c: 186:         idxSaveEnergyADCH
      +                          ist=0;
 28622  0091F2  0E00               	movlw	0
 28623  0091F4  6F90               	movwf	_idxSaveEnergyADCHist& (0+255),b	;volatile
 28624  0091F6                     l12842:
 28625                           
 28626                           ; BSR set to: 0
 28627                           ;controlCurrent_MC50.c: 189:     SumEnergyADCHist_array[idxSaveEnergyADCHist]=valueToSav
      +                          e;
 28628  0091F6  5190               	movf	_idxSaveEnergyADCHist& (0+255),w,b	;volatile
 28629  0091F8  0D02               	mullw	2
 28630  0091FA  0E60               	movlw	low _SumEnergyADCHist_array
 28631  0091FC  24F3               	addwf	243,w,c
 28632  0091FE  6ED9               	movwf	fsr2l,c
 28633  009200  0E02               	movlw	high _SumEnergyADCHist_array
 28634  009202  20F4               	addwfc	prodh,w,c
 28635  009204  6EDA               	movwf	fsr2h,c
 28636  009206  C010  FFDE         	movff	saveEnergyADCHist@valueToSave,postinc2
 28637  00920A  C011  FFDD         	movff	saveEnergyADCHist@valueToSave+1,postdec2
 28638                           
 28639                           ; BSR set to: 0
 28640                           ;controlCurrent_MC50.c: 190:     idxSaveEnergyADCHist++;
 28641  00920E  2B90               	incf	_idxSaveEnergyADCHist& (0+255),f,b	;volatile
 28642                           
 28643                           ; BSR set to: 0
 28644  009210  0012               	return		;funcret
 28645  009212                     __end_of_saveEnergyADCHist:
 28646                           	callstack 0
 28647                           
 28648 ;; *************** function _refreshADCZeroOffset *****************
 28649 ;; Defined at:
 28650 ;;		line 103 in file "controlCurrent_MC50.c"
 28651 ;; Parameters:    Size  Location     Type
 28652 ;;		None
 28653 ;; Auto vars:     Size  Location     Type
 28654 ;;  media           2   23[COMRAM] unsigned int 
 28655 ;;  i               1   22[COMRAM] unsigned char 
 28656 ;; Return value:  Size  Location     Type
 28657 ;;                  1    wreg      void 
 28658 ;; Registers used:
 28659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28660 ;; Tracked objects:
 28661 ;;		On entry : 3F/0
 28662 ;;		On exit  : 3E/0
 28663 ;;		Unchanged: 0/0
 28664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28666 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28669 ;;Total ram usage:        3 bytes
 28670 ;; Hardware stack levels used: 1
 28671 ;; Hardware stack levels required when called: 5
 28672 ;; This function calls:
 28673 ;;		___lwdiv
 28674 ;; This function is called by:
 28675 ;;		_ControlCurrent
 28676 ;; This function uses a non-reentrant model
 28677 ;;
 28678                           
 28679                           	psect	text123
 28680  006D96                     __ptext123:
 28681                           	callstack 0
 28682  006D96                     _refreshADCZeroOffset:
 28683                           	callstack 24
 28684                           
 28685                           ; BSR set to: 0
 28686                           ;controlCurrent_MC50.c: 105:     unsigned char i;;controlCurrent_MC50.c: 106:     unsign
      +                          ed int media = 0;
 28687                           
 28688                           ; BSR set to: 0
 28689                           ;incstack = 0
 28690  006D96  0E00               	movlw	0
 28691  006D98  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28692  006D9A  0E00               	movlw	0
 28693  006D9C  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28694                           
 28695                           ;controlCurrent_MC50.c: 109:     if ( var_sys.StateMotor == Stopped )
 28696  006D9E  0101               	movlb	1	; () banked
 28697  006DA0  5100               	movf	_var_sys& (0+255),w,b	;volatile
 28698  006DA2  A4D8               	btfss	status,2,c
 28699  006DA4  0012               	return	
 28700                           
 28701                           ; BSR set to: 1
 28702                           ;controlCurrent_MC50.c: 110:     {;controlCurrent_MC50.c: 111:         if ( ts_system.Ti
      +                          meStopADCZeroOffsetCalc <= 0 )
 28703  006DA6  BFDA               	btfsc	(_ts_system+63)& (0+255),7,b	;volatile
 28704  006DA8  D005               	goto	u14950
 28705  006DAA  51DA               	movf	(_ts_system+63)& (0+255),w,b	;volatile
 28706  006DAC  E172               	bnz	l1357
 28707  006DAE  05D9               	decf	(_ts_system+62)& (0+255),w,b	;volatile
 28708  006DB0  B0D8               	btfsc	status,0,c
 28709  006DB2  0012               	return	
 28710  006DB4                     u14950:
 28711                           
 28712                           ; BSR set to: 1
 28713                           ;controlCurrent_MC50.c: 112:         {;controlCurrent_MC50.c: 113:             ts_system
      +                          .TimeStopADCZeroOffsetCalc = (1000/50);
 28714  006DB4  0E00               	movlw	0
 28715  006DB6  6FDA               	movwf	(_ts_system+63)& (0+255),b	;volatile
 28716  006DB8  0E14               	movlw	20
 28717  006DBA  6FD9               	movwf	(_ts_system+62)& (0+255),b	;volatile
 28718                           
 28719                           ;controlCurrent_MC50.c: 121:             for ( i=0 ; i<(30) ; i++ )
 28720  006DBC  0E00               	movlw	0
 28721  006DBE  6E17               	movwf	refreshADCZeroOffset@i^0,c
 28722  006DC0                     l14654:
 28723                           
 28724                           ;controlCurrent_MC50.c: 122:             {;controlCurrent_MC50.c: 126:                 m
      +                          edia += ADC_array[i];
 28725  006DC0  5017               	movf	refreshADCZeroOffset@i^0,w,c
 28726  006DC2  0D02               	mullw	2
 28727  006DC4  0E00               	movlw	low _ADC_array
 28728  006DC6  24F3               	addwf	243,w,c
 28729  006DC8  6ED9               	movwf	fsr2l,c
 28730  006DCA  0E02               	movlw	high _ADC_array
 28731  006DCC  20F4               	addwfc	prodh,w,c
 28732  006DCE  6EDA               	movwf	fsr2h,c
 28733  006DD0  50DE               	movf	postinc2,w,c
 28734  006DD2  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 28735  006DD4  50DD               	movf	postdec2,w,c
 28736  006DD6  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 28737                           
 28738                           ;controlCurrent_MC50.c: 128:             }
 28739  006DD8  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28740  006DDA  0E1D               	movlw	29
 28741  006DDC  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28742  006DDE  D7F0               	goto	l14654
 28743                           
 28744                           ;controlCurrent_MC50.c: 130:             media = media/30;
 28745  006DE0  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28746  006DE4  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28747  006DE8  0E00               	movlw	0
 28748  006DEA  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28749  006DEC  0E1E               	movlw	30
 28750  006DEE  6E12               	movwf	___lwdiv@divisor^0,c
 28751  006DF0  EC9C  F044         	call	___lwdiv	;wreg free
 28752  006DF4  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28753  006DF8  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28754                           
 28755                           ;controlCurrent_MC50.c: 131:             if ( (media>(510 -20)) && (media<(510 +20)) )
 28756  006DFC  0EEB               	movlw	235
 28757  006DFE  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28758  006E00  0E01               	movlw	1
 28759  006E02  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28760  006E04  A0D8               	btfss	status,0,c
 28761  006E06  D006               	goto	l14668
 28762  006E08  0E12               	movlw	18
 28763  006E0A  5C18               	subwf	refreshADCZeroOffset@media^0,w,c
 28764  006E0C  0E02               	movlw	2
 28765  006E0E  5819               	subwfb	(refreshADCZeroOffset@media+1)^0,w,c
 28766  006E10  A0D8               	btfss	status,0,c
 28767  006E12  D004               	goto	l14670
 28768  006E14                     l14668:
 28769                           
 28770                           ;controlCurrent_MC50.c: 136:             {;controlCurrent_MC50.c: 138:                 m
      +                          edia = 510;
 28771  006E14  0E01               	movlw	1
 28772  006E16  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28773  006E18  0EFE               	movlw	254
 28774  006E1A  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28775  006E1C                     l14670:
 28776                           
 28777                           ;controlCurrent_MC50.c: 142:             if ( idxAdcZeroAquisition >= 30 )
 28778  006E1C  0E1D               	movlw	29
 28779  006E1E  0100               	movlb	0	; () banked
 28780  006E20  658F               	cpfsgt	_idxAdcZeroAquisition& (0+255),b	;volatile
 28781  006E22  D002               	goto	l14674
 28782                           
 28783                           ; BSR set to: 0
 28784                           ;controlCurrent_MC50.c: 143:             {;controlCurrent_MC50.c: 144:                 i
      +                          dxAdcZeroAquisition = 0;
 28785  006E24  0E00               	movlw	0
 28786  006E26  6F8F               	movwf	_idxAdcZeroAquisition& (0+255),b	;volatile
 28787  006E28                     l14674:
 28788                           
 28789                           ; BSR set to: 0
 28790                           ;controlCurrent_MC50.c: 146:             ADC_zero_array[idxAdcZeroAquisition] = media;
 28791  006E28  518F               	movf	_idxAdcZeroAquisition& (0+255),w,b	;volatile
 28792  006E2A  0D02               	mullw	2
 28793  006E2C  0E96               	movlw	low _ADC_zero_array
 28794  006E2E  24F3               	addwf	243,w,c
 28795  006E30  6ED9               	movwf	fsr2l,c
 28796  006E32  0E03               	movlw	high _ADC_zero_array
 28797  006E34  20F4               	addwfc	prodh,w,c
 28798  006E36  6EDA               	movwf	fsr2h,c
 28799  006E38  C018  FFDE         	movff	refreshADCZeroOffset@media,postinc2
 28800  006E3C  C019  FFDD         	movff	refreshADCZeroOffset@media+1,postdec2
 28801                           
 28802                           ; BSR set to: 0
 28803                           ;controlCurrent_MC50.c: 147:             idxAdcZeroAquisition++;
 28804  006E40  2B8F               	incf	_idxAdcZeroAquisition& (0+255),f,b	;volatile
 28805                           
 28806                           ; BSR set to: 0
 28807                           ;controlCurrent_MC50.c: 150:             media = 0;
 28808  006E42  0E00               	movlw	0
 28809  006E44  6E19               	movwf	(refreshADCZeroOffset@media+1)^0,c
 28810  006E46  0E00               	movlw	0
 28811  006E48  6E18               	movwf	refreshADCZeroOffset@media^0,c
 28812                           
 28813                           ; BSR set to: 0
 28814                           ;controlCurrent_MC50.c: 151:             for ( i=0 ; i<(30) ; i++ )
 28815  006E4A  0E00               	movlw	0
 28816  006E4C  6E17               	movwf	refreshADCZeroOffset@i^0,c
 28817  006E4E                     l14686:
 28818                           
 28819                           ; BSR set to: 0
 28820                           ;controlCurrent_MC50.c: 152:             {;controlCurrent_MC50.c: 158:                 m
      +                          edia += ADC_zero_array[i];
 28821  006E4E  5017               	movf	refreshADCZeroOffset@i^0,w,c
 28822  006E50  0D02               	mullw	2
 28823  006E52  0E96               	movlw	low _ADC_zero_array
 28824  006E54  24F3               	addwf	243,w,c
 28825  006E56  6ED9               	movwf	fsr2l,c
 28826  006E58  0E03               	movlw	high _ADC_zero_array
 28827  006E5A  20F4               	addwfc	prodh,w,c
 28828  006E5C  6EDA               	movwf	fsr2h,c
 28829  006E5E  50DE               	movf	postinc2,w,c
 28830  006E60  2618               	addwf	refreshADCZeroOffset@media^0,f,c
 28831  006E62  50DD               	movf	postdec2,w,c
 28832  006E64  2219               	addwfc	(refreshADCZeroOffset@media+1)^0,f,c
 28833                           
 28834                           ; BSR set to: 0
 28835                           ;controlCurrent_MC50.c: 159:             }
 28836  006E66  2A17               	incf	refreshADCZeroOffset@i^0,f,c
 28837                           
 28838                           ; BSR set to: 0
 28839  006E68  0E1D               	movlw	29
 28840  006E6A  6417               	cpfsgt	refreshADCZeroOffset@i^0,c
 28841  006E6C  D7F0               	goto	l14686
 28842                           
 28843                           ; BSR set to: 0
 28844                           ;controlCurrent_MC50.c: 160:             media = media/30;
 28845  006E6E  C018  F010         	movff	refreshADCZeroOffset@media,___lwdiv@dividend
 28846  006E72  C019  F011         	movff	refreshADCZeroOffset@media+1,___lwdiv@dividend+1
 28847  006E76  0E00               	movlw	0
 28848  006E78  6E13               	movwf	(___lwdiv@divisor+1)^0,c
 28849  006E7A  0E1E               	movlw	30
 28850  006E7C  6E12               	movwf	___lwdiv@divisor^0,c
 28851  006E7E  EC9C  F044         	call	___lwdiv	;wreg free
 28852  006E82  C010  F018         	movff	?___lwdiv,refreshADCZeroOffset@media
 28853  006E86  C011  F019         	movff	?___lwdiv+1,refreshADCZeroOffset@media+1
 28854                           
 28855                           ;controlCurrent_MC50.c: 162:             var_sys.ADCZeroOffset = media;
 28856  006E8A  C018  F14B         	movff	refreshADCZeroOffset@media,_var_sys+75	;volatile
 28857  006E8E  C019  F14C         	movff	refreshADCZeroOffset@media+1,_var_sys+76	;volatile
 28858  006E92                     l1357:
 28859  006E92  0012               	return		;funcret
 28860  006E94                     __end_of_refreshADCZeroOffset:
 28861                           	callstack 0
 28862                           
 28863 ;; *************** function ___lwdiv *****************
 28864 ;; Defined at:
 28865 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
 28866 ;; Parameters:    Size  Location     Type
 28867 ;;  dividend        2   15[COMRAM] unsigned int 
 28868 ;;  divisor         2   17[COMRAM] unsigned int 
 28869 ;; Auto vars:     Size  Location     Type
 28870 ;;  quotient        2   19[COMRAM] unsigned int 
 28871 ;;  counter         1   21[COMRAM] unsigned char 
 28872 ;; Return value:  Size  Location     Type
 28873 ;;                  2   15[COMRAM] unsigned int 
 28874 ;; Registers used:
 28875 ;;		wreg, status,2, status,0
 28876 ;; Tracked objects:
 28877 ;;		On entry : 3E/1
 28878 ;;		On exit  : 3E/0
 28879 ;;		Unchanged: 3E/0
 28880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28882 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28884 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28885 ;;Total ram usage:        7 bytes
 28886 ;; Hardware stack levels used: 1
 28887 ;; Hardware stack levels required when called: 4
 28888 ;; This function calls:
 28889 ;;		Nothing
 28890 ;; This function is called by:
 28891 ;;		_refreshADCZeroOffset
 28892 ;;		_sm_execute_menuConfiguration
 28893 ;; This function uses a non-reentrant model
 28894 ;;
 28895                           
 28896                           	psect	text124
 28897  008938                     __ptext124:
 28898                           	callstack 0
 28899  008938                     ___lwdiv:
 28900                           	callstack 24
 28901                           
 28902                           ;incstack = 0
 28903  008938  0E00               	movlw	0
 28904  00893A  6E15               	movwf	(___lwdiv@quotient+1)^0,c
 28905  00893C  0E00               	movlw	0
 28906  00893E  6E14               	movwf	___lwdiv@quotient^0,c
 28907  008940  5012               	movf	___lwdiv@divisor^0,w,c
 28908  008942  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
 28909  008944  B4D8               	btfsc	status,2,c
 28910  008946  D01C               	goto	l4200
 28911  008948  0E01               	movlw	1
 28912  00894A  6E16               	movwf	___lwdiv@counter^0,c
 28913  00894C  D004               	goto	l14134
 28914  00894E                     l14132:
 28915  00894E  90D8               	bcf	status,0,c
 28916  008950  3612               	rlcf	___lwdiv@divisor^0,f,c
 28917  008952  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
 28918  008954  2A16               	incf	___lwdiv@counter^0,f,c
 28919  008956                     l14134:
 28920  008956  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
 28921  008958  D7FA               	goto	l14132
 28922  00895A                     u13970:
 28923  00895A  90D8               	bcf	status,0,c
 28924  00895C  3614               	rlcf	___lwdiv@quotient^0,f,c
 28925  00895E  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
 28926  008960  5012               	movf	___lwdiv@divisor^0,w,c
 28927  008962  5C10               	subwf	___lwdiv@dividend^0,w,c
 28928  008964  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28929  008966  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
 28930  008968  A0D8               	btfss	status,0,c
 28931  00896A  D005               	goto	l14144
 28932  00896C  5012               	movf	___lwdiv@divisor^0,w,c
 28933  00896E  5E10               	subwf	___lwdiv@dividend^0,f,c
 28934  008970  5013               	movf	(___lwdiv@divisor+1)^0,w,c
 28935  008972  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
 28936  008974  8014               	bsf	___lwdiv@quotient^0,0,c
 28937  008976                     l14144:
 28938  008976  90D8               	bcf	status,0,c
 28939  008978  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
 28940  00897A  3212               	rrcf	___lwdiv@divisor^0,f,c
 28941  00897C  2E16               	decfsz	___lwdiv@counter^0,f,c
 28942  00897E  D7ED               	goto	u13970
 28943  008980                     l4200:
 28944  008980  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
 28945  008984  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
 28946  008988  0012               	return		;funcret
 28947  00898A                     __end_of___lwdiv:
 28948                           	callstack 0
 28949                           
 28950 ;; *************** function _getCurrentComparator *****************
 28951 ;; Defined at:
 28952 ;;		line 264 in file "controlCurrent_MC50.c"
 28953 ;; Parameters:    Size  Location     Type
 28954 ;;		None
 28955 ;; Auto vars:     Size  Location     Type
 28956 ;;  x               1   33[COMRAM] unsigned char 
 28957 ;;  tempOffset      2   31[COMRAM] unsigned int 
 28958 ;; Return value:  Size  Location     Type
 28959 ;;                  4   21[COMRAM] unsigned long 
 28960 ;; Registers used:
 28961 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28962 ;; Tracked objects:
 28963 ;;		On entry : 3F/1
 28964 ;;		On exit  : 3F/1
 28965 ;;		Unchanged: 0/0
 28966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28968 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28969 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28970 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28971 ;;Total ram usage:       13 bytes
 28972 ;; Hardware stack levels used: 1
 28973 ;; Hardware stack levels required when called: 5
 28974 ;; This function calls:
 28975 ;;		___wmul
 28976 ;; This function is called by:
 28977 ;;		_ControlCurrent
 28978 ;; This function uses a non-reentrant model
 28979 ;;
 28980                           
 28981                           	psect	text125
 28982  005B2E                     __ptext125:
 28983                           	callstack 0
 28984  005B2E                     _getCurrentComparator:
 28985                           	callstack 24
 28986                           
 28987                           ; BSR set to: 1
 28988                           ;controlCurrent_MC50.c: 269:     if(ts_system.timeSoftStart>0)
 28989                           
 28990                           ; BSR set to: 1
 28991                           
 28992                           ;incstack = 0
 28993  005B2E  BFB2               	btfsc	(_ts_system+23)& (0+255),7,b	;volatile
 28994  005B30  D00A               	goto	l14710
 28995  005B32  51B2               	movf	(_ts_system+23)& (0+255),w,b	;volatile
 28996  005B34  E103               	bnz	u15030
 28997  005B36  05B1               	decf	(_ts_system+22)& (0+255),w,b	;volatile
 28998  005B38  A0D8               	btfss	status,0,c
 28999  005B3A  D005               	goto	l14710
 29000  005B3C                     u15030:
 29001                           
 29002                           ; BSR set to: 1
 29003                           ;controlCurrent_MC50.c: 270:     {;controlCurrent_MC50.c: 271:         ts_system.timewai
      +                          tBeforeSoftStart=(1000/50);
 29004  005B3C  0E00               	movlw	0
 29005  005B3E  6FD6               	movwf	(_ts_system+59)& (0+255),b	;volatile
 29006  005B40  0E14               	movlw	20
 29007  005B42  6FD5               	movwf	(_ts_system+58)& (0+255),b	;volatile
 29008  005B44  D007               	goto	u15040
 29009  005B46                     l14710:
 29010                           
 29011                           ; BSR set to: 1
 29012  005B46  BFD6               	btfsc	(_ts_system+59)& (0+255),7,b	;volatile
 29013  005B48  D009               	goto	l14714
 29014  005B4A  51D6               	movf	(_ts_system+59)& (0+255),w,b	;volatile
 29015  005B4C  E103               	bnz	u15040
 29016  005B4E  05D5               	decf	(_ts_system+58)& (0+255),w,b	;volatile
 29017  005B50  A0D8               	btfss	status,0,c
 29018  005B52  D004               	goto	l14714
 29019  005B54                     u15040:
 29020                           
 29021                           ; BSR set to: 1
 29022                           ;controlCurrent_MC50.c: 276:     {;controlCurrent_MC50.c: 277:         tempOffset=1200;
 29023  005B54  0E04               	movlw	4
 29024  005B56  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29025  005B58  0EB0               	movlw	176
 29026  005B5A  D003               	goto	L104
 29027  005B5C                     l14714:
 29028                           
 29029                           ; BSR set to: 1
 29030                           ;controlCurrent_MC50.c: 280:     {;controlCurrent_MC50.c: 281:         tempOffset=0;
 29031  005B5C  0E00               	movlw	0
 29032  005B5E  6E21               	movwf	(getCurrentComparator@tempOffset+1)^0,c
 29033  005B60  0E00               	movlw	0
 29034  005B62                     L104:
 29035  005B62  6E20               	movwf	getCurrentComparator@tempOffset^0,c
 29036                           
 29037                           ; BSR set to: 1
 29038                           ;controlCurrent_MC50.c: 284:     if(powerControl_st.decelarationActive==NO)
 29039  005B64  517B               	movf	_powerControl_st& (0+255),w,b
 29040  005B66  A4D8               	btfss	status,2,c
 29041  005B68  D05B               	goto	l14730
 29042                           
 29043                           ; BSR set to: 1
 29044                           ;controlCurrent_MC50.c: 285:     {;controlCurrent_MC50.c: 286:         if(var_sys.StateM
      +                          otor==InClose)
 29045  005B6A  0E03               	movlw	3
 29046  005B6C  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29047  005B6E  A4D8               	btfss	status,2,c
 29048  005B70  D005               	goto	l14720
 29049                           
 29050                           ; BSR set to: 1
 29051                           ;controlCurrent_MC50.c: 287:         {;controlCurrent_MC50.c: 288:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalClose;
 29052  005B72  C0C8  F134         	movff	_var_sys_NVM+48,_var_sys+52	;volatile
 29053  005B76  C0C9  F135         	movff	_var_sys_NVM+49,_var_sys+53	;volatile
 29054  005B7A  D004               	goto	L105
 29055  005B7C                     l14720:
 29056                           
 29057                           ; BSR set to: 1
 29058                           ;controlCurrent_MC50.c: 291:         {;controlCurrent_MC50.c: 292:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentNormalOpen;
 29059  005B7C  C0CA  F134         	movff	_var_sys_NVM+50,_var_sys+52	;volatile
 29060  005B80  C0CB  F135         	movff	_var_sys_NVM+51,_var_sys+53	;volatile
 29061  005B84                     L105:
 29062  005B84  6B36               	clrf	(_var_sys+54)& (0+255),b	;volatile
 29063  005B86  6B37               	clrf	(_var_sys+55)& (0+255),b	;volatile
 29064                           
 29065                           ; BSR set to: 1
 29066                           ;controlCurrent_MC50.c: 295:         if(var_sys.ActualComparatorCurrent<=100||(var_sys.A
      +                          ctualComparatorCurrent>(510*30)))
 29067  005B88  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29068  005B8A  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29069  005B8C  1135               	iorwf	(_var_sys+53)& (0+255),w,b	;volatile
 29070  005B8E  E104               	bnz	u15070
 29071  005B90  0E65               	movlw	101
 29072  005B92  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29073  005B94  A0D8               	btfss	status,0,c
 29074  005B96  D009               	goto	u15080
 29075  005B98                     u15070:
 29076                           
 29077                           ; BSR set to: 1
 29078  005B98  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29079  005B9A  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29080  005B9C  E106               	bnz	u15080
 29081  005B9E  0EC5               	movlw	197
 29082  005BA0  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29083  005BA2  0E3B               	movlw	59
 29084  005BA4  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29085  005BA6  A0D8               	btfss	status,0,c
 29086  005BA8  D004               	goto	l1383
 29087  005BAA                     u15080:
 29088                           
 29089                           ; BSR set to: 1
 29090                           ;controlCurrent_MC50.c: 296:         {;controlCurrent_MC50.c: 297:              var_sys.
      +                          ActualComparatorCurrent=(510*30);
 29091  005BAA  0EC4               	movlw	196
 29092  005BAC  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29093  005BAE  0E3B               	movlw	59
 29094  005BB0  D058               	goto	L107
 29095  005BB2                     l1383:
 29096                           
 29097                           ; BSR set to: 1
 29098                           ;controlCurrent_MC50.c: 300:         {;controlCurrent_MC50.c: 301:             unsigned 
      +                          char x=var_sys_NVM.motorSensitivity;
 29099  005BB2  C09B  F022         	movff	_var_sys_NVM+3,getCurrentComparator@x	;volatile
 29100                           
 29101                           ; BSR set to: 1
 29102                           ;controlCurrent_MC50.c: 307:            var_sys.ActualComparatorCurrent=var_sys.ActualCo
      +                          mparatorCurrent+((10*(x*x))+(-200*x)+1300);
 29103  005BB6  5022               	movf	getCurrentComparator@x^0,w,c
 29104  005BB8  0222               	mulwf	getCurrentComparator@x^0,c
 29105  005BBA  CFF3 F010          	movff	prodl,___wmul@multiplier
 29106  005BBE  CFF4 F011          	movff	prodh,___wmul@multiplier+1
 29107  005BC2  0E00               	movlw	0
 29108  005BC4  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29109  005BC6  0E0A               	movlw	10
 29110  005BC8  6E12               	movwf	___wmul@multiplicand^0,c
 29111  005BCA  EC2F  F049         	call	___wmul	;wreg free
 29112  005BCE  C010  F01A         	movff	?___wmul,??_getCurrentComparator
 29113  005BD2  C011  F01B         	movff	?___wmul+1,??_getCurrentComparator+1
 29114  005BD6  C022  F010         	movff	getCurrentComparator@x,___wmul@multiplier
 29115  005BDA  6A11               	clrf	(___wmul@multiplier+1)^0,c
 29116  005BDC  0EFF               	movlw	255
 29117  005BDE  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29118  005BE0  0E38               	movlw	56
 29119  005BE2  6E12               	movwf	___wmul@multiplicand^0,c
 29120  005BE4  EC2F  F049         	call	___wmul	;wreg free
 29121  005BE8  5010               	movf	?___wmul^0,w,c
 29122  005BEA  261A               	addwf	??_getCurrentComparator^0,f,c
 29123  005BEC  5011               	movf	(?___wmul+1)^0,w,c
 29124  005BEE  221B               	addwfc	(??_getCurrentComparator+1)^0,f,c
 29125  005BF0  0E14               	movlw	20
 29126  005BF2  241A               	addwf	??_getCurrentComparator^0,w,c
 29127  005BF4  6E1C               	movwf	(??_getCurrentComparator+2)^0,c
 29128  005BF6  0E05               	movlw	5
 29129  005BF8  201B               	addwfc	(??_getCurrentComparator+1)^0,w,c
 29130  005BFA  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 29131  005BFC  6A1E               	clrf	(??_getCurrentComparator+4)^0,c
 29132  005BFE  BE1D               	btfsc	(??_getCurrentComparator+3)^0,7,c
 29133  005C00  061E               	decf	(??_getCurrentComparator+4)^0,f,c
 29134  005C02  501E               	movf	(??_getCurrentComparator+4)^0,w,c
 29135  005C04  6E1F               	movwf	(??_getCurrentComparator+5)^0,c
 29136  005C06  0101               	movlb	1	; () banked
 29137  005C08  5134               	movf	(_var_sys+52)& (0+255),w,b	;volatile
 29138  005C0A  241C               	addwf	(??_getCurrentComparator+2)^0,w,c
 29139  005C0C  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29140  005C0E  5135               	movf	(_var_sys+53)& (0+255),w,b	;volatile
 29141  005C10  201D               	addwfc	(??_getCurrentComparator+3)^0,w,c
 29142  005C12  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29143  005C14  5136               	movf	(_var_sys+54)& (0+255),w,b	;volatile
 29144  005C16  201E               	addwfc	(??_getCurrentComparator+4)^0,w,c
 29145  005C18  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29146  005C1A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29147  005C1C  201F               	addwfc	(??_getCurrentComparator+5)^0,w,c
 29148  005C1E  D046               	goto	L106
 29149  005C20                     l14730:
 29150                           
 29151                           ; BSR set to: 1
 29152                           ;controlCurrent_MC50.c: 311:     {;controlCurrent_MC50.c: 312:         if(var_sys.StateM
      +                          otor==InClose)
 29153  005C20  0E03               	movlw	3
 29154  005C22  1900               	xorwf	_var_sys& (0+255),w,b	;volatile
 29155  005C24  A4D8               	btfss	status,2,c
 29156  005C26  D009               	goto	l1388
 29157                           
 29158                           ; BSR set to: 1
 29159                           ;controlCurrent_MC50.c: 313:         {;controlCurrent_MC50.c: 314:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationClose;
 29160  005C28  C0C0  F134         	movff	_var_sys_NVM+40,_var_sys+52	;volatile
 29161  005C2C  C0C1  F135         	movff	_var_sys_NVM+41,_var_sys+53	;volatile
 29162  005C30  C0C2  F136         	movff	_var_sys_NVM+42,_var_sys+54	;volatile
 29163  005C34  C0C3  F137         	movff	_var_sys_NVM+43,_var_sys+55	;volatile
 29164                           
 29165                           ;controlCurrent_MC50.c: 315:         }
 29166  005C38  D008               	goto	l14734
 29167  005C3A                     l1388:
 29168                           
 29169                           ; BSR set to: 1
 29170                           ;controlCurrent_MC50.c: 317:         {;controlCurrent_MC50.c: 318:             var_sys.A
      +                          ctualComparatorCurrent=var_sys_NVM.learningCurrentDecelarationOpen ;
 29171  005C3A  C0C4  F134         	movff	_var_sys_NVM+44,_var_sys+52	;volatile
 29172  005C3E  C0C5  F135         	movff	_var_sys_NVM+45,_var_sys+53	;volatile
 29173  005C42  C0C6  F136         	movff	_var_sys_NVM+46,_var_sys+54	;volatile
 29174  005C46  C0C7  F137         	movff	_var_sys_NVM+47,_var_sys+55	;volatile
 29175  005C4A                     l14734:
 29176                           
 29177                           ; BSR set to: 1
 29178                           ;controlCurrent_MC50.c: 321:         if(var_sys.ActualComparatorCurrent<=5000)
 29179  005C4A  5137               	movf	(_var_sys+55)& (0+255),w,b	;volatile
 29180  005C4C  1136               	iorwf	(_var_sys+54)& (0+255),w,b	;volatile
 29181  005C4E  E10E               	bnz	l14738
 29182  005C50  0E89               	movlw	137
 29183  005C52  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29184  005C54  0E13               	movlw	19
 29185  005C56  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29186  005C58  B0D8               	btfsc	status,0,c
 29187  005C5A  D008               	goto	l14738
 29188                           
 29189                           ; BSR set to: 1
 29190                           ;controlCurrent_MC50.c: 322:         {;controlCurrent_MC50.c: 323:             var_sys.A
      +                          ctualComparatorCurrent=5000;
 29191  005C5C  0E88               	movlw	136
 29192  005C5E  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29193  005C60  0E13               	movlw	19
 29194  005C62                     L107:
 29195  005C62  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29196  005C64  0E00               	movlw	0
 29197  005C66  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29198  005C68  0E00               	movlw	0
 29199  005C6A  D020               	goto	L106
 29200  005C6C                     l14738:
 29201                           
 29202                           ; BSR set to: 1
 29203                           ;controlCurrent_MC50.c: 326:         {;controlCurrent_MC50.c: 327:             var_sys.A
      +                          ctualComparatorCurrent=var_sys.ActualComparatorCurrent-(1200 +(500*(10-var_sys_NVM.decel
      +                          arationSensivity)));
 29204  005C6C  C0A7  F010         	movff	_var_sys_NVM+15,___wmul@multiplier	;volatile
 29205  005C70  6A11               	clrf	(___wmul@multiplier+1)^0,c
 29206  005C72  0EFE               	movlw	254
 29207  005C74  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 29208  005C76  0E0C               	movlw	12
 29209  005C78  6E12               	movwf	___wmul@multiplicand^0,c
 29210  005C7A  EC2F  F049         	call	___wmul	;wreg free
 29211  005C7E  0E38               	movlw	56
 29212  005C80  2410               	addwf	?___wmul^0,w,c
 29213  005C82  6E1A               	movwf	??_getCurrentComparator^0,c
 29214  005C84  0E18               	movlw	24
 29215  005C86  2011               	addwfc	(?___wmul+1)^0,w,c
 29216  005C88  6E1B               	movwf	(??_getCurrentComparator+1)^0,c
 29217  005C8A  6A1C               	clrf	(??_getCurrentComparator+2)^0,c
 29218  005C8C  BE1B               	btfsc	(??_getCurrentComparator+1)^0,7,c
 29219  005C8E  061C               	decf	(??_getCurrentComparator+2)^0,f,c
 29220  005C90  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 29221  005C92  6E1D               	movwf	(??_getCurrentComparator+3)^0,c
 29222  005C94  501A               	movf	??_getCurrentComparator^0,w,c
 29223  005C96  0101               	movlb	1	; () banked
 29224  005C98  5D34               	subwf	(_var_sys+52)& (0+255),w,b	;volatile
 29225  005C9A  6F34               	movwf	(_var_sys+52)& (0+255),b	;volatile
 29226  005C9C  501B               	movf	(??_getCurrentComparator+1)^0,w,c
 29227  005C9E  5935               	subwfb	(_var_sys+53)& (0+255),w,b	;volatile
 29228  005CA0  6F35               	movwf	(_var_sys+53)& (0+255),b	;volatile
 29229  005CA2  501C               	movf	(??_getCurrentComparator+2)^0,w,c
 29230  005CA4  5936               	subwfb	(_var_sys+54)& (0+255),w,b	;volatile
 29231  005CA6  6F36               	movwf	(_var_sys+54)& (0+255),b	;volatile
 29232  005CA8  501D               	movf	(??_getCurrentComparator+3)^0,w,c
 29233  005CAA  5937               	subwfb	(_var_sys+55)& (0+255),w,b	;volatile
 29234  005CAC                     L106:
 29235  005CAC  6F37               	movwf	(_var_sys+55)& (0+255),b	;volatile
 29236                           
 29237                           ; BSR set to: 1
 29238                           ;controlCurrent_MC50.c: 332:     return var_sys.ActualComparatorCurrent+tempOffset;
 29239  005CAE  5020               	movf	getCurrentComparator@tempOffset^0,w,c
 29240  005CB0  2534               	addwf	(_var_sys+52)& (0+255),w,b	;volatile
 29241  005CB2  6E16               	movwf	?_getCurrentComparator^0,c
 29242  005CB4  5021               	movf	(getCurrentComparator@tempOffset+1)^0,w,c
 29243  005CB6  2135               	addwfc	(_var_sys+53)& (0+255),w,b	;volatile
 29244  005CB8  6E17               	movwf	(?_getCurrentComparator+1)^0,c
 29245  005CBA  0E00               	movlw	0
 29246  005CBC  2136               	addwfc	(_var_sys+54)& (0+255),w,b	;volatile
 29247  005CBE  6E18               	movwf	(?_getCurrentComparator+2)^0,c
 29248  005CC0  0E00               	movlw	0
 29249  005CC2  2137               	addwfc	(_var_sys+55)& (0+255),w,b	;volatile
 29250  005CC4  6E19               	movwf	(?_getCurrentComparator+3)^0,c
 29251                           
 29252                           ; BSR set to: 1
 29253  005CC6  0012               	return		;funcret
 29254  005CC8                     __end_of_getCurrentComparator:
 29255                           	callstack 0
 29256                           
 29257 ;; *************** function ___wmul *****************
 29258 ;; Defined at:
 29259 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 29260 ;; Parameters:    Size  Location     Type
 29261 ;;  multiplier      2   15[COMRAM] unsigned int 
 29262 ;;  multiplicand    2   17[COMRAM] unsigned int 
 29263 ;; Auto vars:     Size  Location     Type
 29264 ;;  product         2   19[COMRAM] unsigned int 
 29265 ;; Return value:  Size  Location     Type
 29266 ;;                  2   15[COMRAM] unsigned int 
 29267 ;; Registers used:
 29268 ;;		wreg, status,2, status,0, prodl, prodh
 29269 ;; Tracked objects:
 29270 ;;		On entry : 0/0
 29271 ;;		On exit  : 0/0
 29272 ;;		Unchanged: 0/0
 29273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29277 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29278 ;;Total ram usage:        6 bytes
 29279 ;; Hardware stack levels used: 1
 29280 ;; Hardware stack levels required when called: 4
 29281 ;; This function calls:
 29282 ;;		Nothing
 29283 ;; This function is called by:
 29284 ;;		_getCurrentComparator
 29285 ;;		_getHopCode
 29286 ;; This function uses a non-reentrant model
 29287 ;;
 29288                           
 29289                           	psect	text126
 29290  00925E                     __ptext126:
 29291                           	callstack 0
 29292  00925E                     ___wmul:
 29293                           	callstack 22
 29294                           
 29295                           ; BSR set to: 1
 29296                           ;incstack = 0
 29297  00925E  5010               	movf	___wmul@multiplier^0,w,c
 29298  009260  0212               	mulwf	___wmul@multiplicand^0,c
 29299  009262  CFF3 F014          	movff	prodl,___wmul@product
 29300  009266  CFF4 F015          	movff	prodh,___wmul@product+1
 29301  00926A  5010               	movf	___wmul@multiplier^0,w,c
 29302  00926C  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 29303  00926E  50F3               	movf	243,w,c
 29304  009270  2615               	addwf	(___wmul@product+1)^0,f,c
 29305  009272  5011               	movf	(___wmul@multiplier+1)^0,w,c
 29306  009274  0212               	mulwf	___wmul@multiplicand^0,c
 29307  009276  50F3               	movf	243,w,c
 29308  009278  2615               	addwf	(___wmul@product+1)^0,f,c
 29309  00927A  C014  F010         	movff	___wmul@product,?___wmul
 29310  00927E  C015  F011         	movff	___wmul@product+1,?___wmul+1
 29311  009282  0012               	return		;funcret
 29312  009284                     __end_of___wmul:
 29313                           	callstack 0
 29314                           
 29315 ;; *************** function _GetMotorPower *****************
 29316 ;; Defined at:
 29317 ;;		line 405 in file "outputs_MC50.c"
 29318 ;; Parameters:    Size  Location     Type
 29319 ;;		None
 29320 ;; Auto vars:     Size  Location     Type
 29321 ;;  defineatraso    1   18[COMRAM] unsigned char 
 29322 ;; Return value:  Size  Location     Type
 29323 ;;                  1    wreg      unsigned char 
 29324 ;; Registers used:
 29325 ;;		wreg, status,2, status,0, prodl, prodh
 29326 ;; Tracked objects:
 29327 ;;		On entry : 3E/1
 29328 ;;		On exit  : 3F/1
 29329 ;;		Unchanged: 0/0
 29330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29333 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29334 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29335 ;;Total ram usage:        4 bytes
 29336 ;; Hardware stack levels used: 1
 29337 ;; Hardware stack levels required when called: 4
 29338 ;; This function calls:
 29339 ;;		Nothing
 29340 ;; This function is called by:
 29341 ;;		_ControlCurrent
 29342 ;;		_InitSoftStart
 29343 ;;		_InitSoftStop
 29344 ;; This function uses a non-reentrant model
 29345 ;;
 29346                           
 29347                           	psect	text127
 29348  00731A                     __ptext127:
 29349                           	callstack 0
 29350  00731A                     _GetMotorPower:
 29351                           	callstack 22
 29352                           
 29353                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 29354                           
 29355                           ;incstack = 0
 29356  00731A  0101               	movlb	1	; () banked
 29357  00731C  057B               	decf	_powerControl_st& (0+255),w,b
 29358  00731E  A4D8               	btfss	status,2,c
 29359  007320  D006               	goto	l19798
 29360                           
 29361                           ; BSR set to: 1
 29362                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 29363  007322  0100               	movlb	0	; () banked
 29364  007324  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 29365  007326  0D06               	mullw	6
 29366  007328  CFF3 F18F          	movff	prodl,_temppower
 29367                           
 29368                           ;outputs_MC50.c: 416:     }
 29369  00732C  D043               	goto	l2235
 29370  00732E                     l19798:
 29371                           
 29372                           ; BSR set to: 1
 29373                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 29374  00732E  0100               	movlb	0	; () banked
 29375  007330  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 29376  007332  0D06               	mullw	6
 29377  007334  CFF3 F082          	movff	prodl,_fullmotorPower
 29378                           
 29379                           ; BSR set to: 0
 29380                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 29381  007338  0101               	movlb	1	; () banked
 29382  00733A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29383  00733C  D01C               	goto	l19808
 29384  00733E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29385  007340  E103               	bnz	u22570
 29386  007342  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29387  007344  A0D8               	btfss	status,0,c
 29388  007346  D017               	goto	l19808
 29389  007348                     u22570:
 29390                           
 29391                           ; BSR set to: 1
 29392                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 29393  007348  0100               	movlb	0	; () banked
 29394  00734A  5182               	movf	_fullmotorPower& (0+255),w,b
 29395  00734C  6E10               	movwf	??_GetMotorPower^0,c
 29396  00734E  6A11               	clrf	(??_GetMotorPower+1)^0,c
 29397  007350  0101               	movlb	1	; () banked
 29398  007352  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 29399  007354  5C10               	subwf	??_GetMotorPower^0,w,c
 29400  007356  5011               	movf	(??_GetMotorPower+1)^0,w,c
 29401  007358  0A80               	xorlw	128
 29402  00735A  6E12               	movwf	(??_GetMotorPower+2)^0,c
 29403  00735C  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29404  00735E  0A80               	xorlw	128
 29405  007360  5812               	subwfb	(??_GetMotorPower+2)^0,w,c
 29406  007362  B0D8               	btfsc	status,0,c
 29407  007364  D002               	goto	l19806
 29408                           
 29409                           ; BSR set to: 1
 29410                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 29411  007366  0E01               	movlw	1
 29412  007368  D004               	goto	L109
 29413  00736A                     l19806:
 29414                           
 29415                           ; BSR set to: 1
 29416                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 29417  00736A  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 29418  00736C  0100               	movlb	0	; () banked
 29419  00736E  5D82               	subwf	_fullmotorPower& (0+255),w,b
 29420  007370  D017               	goto	L110
 29421  007372                     L109:
 29422  007372  6F8F               	movwf	_temppower& (0+255),b
 29423  007374  D01F               	goto	l2235
 29424  007376                     l19808:
 29425                           
 29426                           ; BSR set to: 1
 29427  007376  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29428  007378  D005               	goto	u22590
 29429  00737A  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29430  00737C  E113               	bnz	l19818
 29431  00737E  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29432  007380  B0D8               	btfsc	status,0,c
 29433  007382  D010               	goto	l19818
 29434  007384                     u22590:
 29435                           
 29436                           ; BSR set to: 1
 29437  007384  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29438  007386  D005               	goto	u22600
 29439  007388  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29440  00738A  E10C               	bnz	l19818
 29441  00738C  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29442  00738E  B0D8               	btfsc	status,0,c
 29443  007390  D009               	goto	l19818
 29444  007392                     u22600:
 29445                           
 29446                           ; BSR set to: 1
 29447                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 29448  007392  C082  F18F         	movff	_fullmotorPower,_temppower
 29449                           
 29450                           ; BSR set to: 1
 29451                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 29452  007396  0E08               	movlw	8
 29453  007398  0100               	movlb	0	; () banked
 29454  00739A  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 29455  00739C  D00B               	goto	l2235
 29456                           
 29457                           ; BSR set to: 0
 29458                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 29459  00739E  0E3A               	movlw	58
 29460  0073A0                     L110:
 29461  0073A0  0101               	movlb	1	; () banked
 29462  0073A2  D7E7               	goto	L109
 29463  0073A4                     l19818:
 29464                           
 29465                           ; BSR set to: 1
 29466  0073A4  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29467  0073A6  D006               	goto	l2235
 29468  0073A8  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29469  0073AA  E102               	bnz	u22620
 29470  0073AC  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29471  0073AE  B0D8               	btfsc	status,0,c
 29472  0073B0                     u22620:
 29473                           
 29474                           ; BSR set to: 1
 29475                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 29476  0073B0  C110  F18F         	movff	_var_sys+16,_temppower	;volatile
 29477  0073B4                     l2235:
 29478                           
 29479                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 29480  0073B4  0101               	movlb	1	; () banked
 29481  0073B6  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 29482  0073B8  D00E               	goto	l19828
 29483  0073BA  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 29484  0073BC  E103               	bnz	u22630
 29485  0073BE  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 29486  0073C0  A0D8               	btfss	status,0,c
 29487  0073C2  D009               	goto	l19828
 29488  0073C4                     u22630:
 29489                           
 29490                           ; BSR set to: 1
 29491  0073C4  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 29492  0073C6  D005               	goto	u22640
 29493  0073C8  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 29494  0073CA  E105               	bnz	l19828
 29495  0073CC  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 29496  0073CE  B0D8               	btfsc	status,0,c
 29497  0073D0  D002               	goto	l19828
 29498  0073D2                     u22640:
 29499                           
 29500                           ; BSR set to: 1
 29501                           ;outputs_MC50.c: 452:     defineatraso = 5;
 29502  0073D2  0E05               	movlw	5
 29503  0073D4  D001               	goto	L108
 29504  0073D6                     l19828:
 29505                           
 29506                           ; BSR set to: 1
 29507                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 29508  0073D6  0E17               	movlw	23
 29509  0073D8                     L108:
 29510  0073D8  6E13               	movwf	GetMotorPower@defineatraso^0,c
 29511                           
 29512                           ; BSR set to: 1
 29513                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 29514  0073DA  518F               	movf	_temppower& (0+255),w,b
 29515  0073DC  2413               	addwf	GetMotorPower@defineatraso^0,w,c
 29516                           
 29517                           ; BSR set to: 1
 29518  0073DE  0012               	return		;funcret
 29519  0073E0                     __end_of_GetMotorPower:
 29520                           	callstack 0
 29521                           
 29522 ;; *************** function _ControlCounterMoves *****************
 29523 ;; Defined at:
 29524 ;;		line 293 in file "controlMemory_MC50.c"
 29525 ;; Parameters:    Size  Location     Type
 29526 ;;		None
 29527 ;; Auto vars:     Size  Location     Type
 29528 ;;		None
 29529 ;; Return value:  Size  Location     Type
 29530 ;;                  1    wreg      void 
 29531 ;; Registers used:
 29532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29533 ;; Tracked objects:
 29534 ;;		On entry : 3E/1
 29535 ;;		On exit  : 0/0
 29536 ;;		Unchanged: 0/0
 29537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29542 ;;Total ram usage:        0 bytes
 29543 ;; Hardware stack levels used: 1
 29544 ;; Hardware stack levels required when called: 14
 29545 ;; This function calls:
 29546 ;;		_SaveNVM_VarSystem
 29547 ;; This function is called by:
 29548 ;;		_main
 29549 ;; This function uses a non-reentrant model
 29550 ;;
 29551                           
 29552                           	psect	text128
 29553  008730                     __ptext128:
 29554                           	callstack 0
 29555  008730                     _ControlCounterMoves:
 29556                           	callstack 16
 29557                           
 29558                           ;controlMemory_MC50.c: 296:     if(ts_system.timeBetweenSaveCounters<=0)
 29559                           
 29560                           ; BSR set to: 1
 29561                           ;incstack = 0
 29562  008730  0101               	movlb	1	; () banked
 29563  008732  BFC2               	btfsc	(_ts_system+39)& (0+255),7,b	;volatile
 29564  008734  D005               	goto	u28020
 29565  008736  51C2               	movf	(_ts_system+39)& (0+255),w,b	;volatile
 29566  008738  E127               	bnz	l1486
 29567  00873A  05C1               	decf	(_ts_system+38)& (0+255),w,b	;volatile
 29568  00873C  B0D8               	btfsc	status,0,c
 29569  00873E  0012               	return	
 29570  008740                     u28020:
 29571                           
 29572                           ; BSR set to: 1
 29573                           ;controlMemory_MC50.c: 297:     {;controlMemory_MC50.c: 298:        ts_system.timeBetwee
      +                          nSaveCounters=((1000/50)*60)*5;
 29574  008740  0E17               	movlw	23
 29575  008742  6FC2               	movwf	(_ts_system+39)& (0+255),b	;volatile
 29576  008744  0E70               	movlw	112
 29577  008746  6FC1               	movwf	(_ts_system+38)& (0+255),b	;volatile
 29578                           
 29579                           ; BSR set to: 1
 29580                           ;controlMemory_MC50.c: 300:        if(var_sys.actualCounterMoves!=var_sys_NVM.counterMov
      +                          es)
 29581  008748  0100               	movlb	0	; () banked
 29582  00874A  51BA               	movf	(_var_sys_NVM+34)& (0+255),w,b	;volatile
 29583  00874C  0101               	movlb	1	; () banked
 29584  00874E  193C               	xorwf	(_var_sys+60)& (0+255),w,b	;volatile
 29585  008750  E110               	bnz	u28030
 29586  008752  0100               	movlb	0	; () banked
 29587  008754  51BB               	movf	(_var_sys_NVM+35)& (0+255),w,b	;volatile
 29588  008756  0101               	movlb	1	; () banked
 29589  008758  193D               	xorwf	(_var_sys+61)& (0+255),w,b	;volatile
 29590  00875A  E10B               	bnz	u28030
 29591  00875C  0100               	movlb	0	; () banked
 29592  00875E  51BC               	movf	(_var_sys_NVM+36)& (0+255),w,b	;volatile
 29593  008760  0101               	movlb	1	; () banked
 29594  008762  193E               	xorwf	(_var_sys+62)& (0+255),w,b	;volatile
 29595  008764  E106               	bnz	u28030
 29596  008766  0100               	movlb	0	; () banked
 29597  008768  51BD               	movf	(_var_sys_NVM+37)& (0+255),w,b	;volatile
 29598  00876A  0101               	movlb	1	; () banked
 29599  00876C  193F               	xorwf	(_var_sys+63)& (0+255),w,b	;volatile
 29600  00876E  B4D8               	btfsc	status,2,c
 29601  008770  0012               	return	
 29602  008772                     u28030:
 29603                           
 29604                           ; BSR set to: 1
 29605                           ;controlMemory_MC50.c: 301:        {;controlMemory_MC50.c: 302:            var_sys_NVM.c
      +                          ounterMoves=var_sys.actualCounterMoves;
 29606  008772  C13C  F0BA         	movff	_var_sys+60,_var_sys_NVM+34	;volatile
 29607  008776  C13D  F0BB         	movff	_var_sys+61,_var_sys_NVM+35	;volatile
 29608  00877A  C13E  F0BC         	movff	_var_sys+62,_var_sys_NVM+36	;volatile
 29609  00877E  C13F  F0BD         	movff	_var_sys+63,_var_sys_NVM+37	;volatile
 29610                           
 29611                           ; BSR set to: 1
 29612                           ;controlMemory_MC50.c: 303:            SaveNVM_VarSystem(pageMemoryCounters);
 29613  008782  0E02               	movlw	2
 29614  008784  EC16  F047         	call	_SaveNVM_VarSystem
 29615  008788                     l1486:
 29616  008788  0012               	return		;funcret
 29617  00878A                     __end_of_ControlCounterMoves:
 29618                           	callstack 0
 29619                           
 29620 ;; *************** function _SaveNVM_VarSystem *****************
 29621 ;; Defined at:
 29622 ;;		line 175 in file "controlMemory_MC50.c"
 29623 ;; Parameters:    Size  Location     Type
 29624 ;;  page            1    wreg     unsigned char 
 29625 ;; Auto vars:     Size  Location     Type
 29626 ;;  page            1    0[BANK0 ] unsigned char 
 29627 ;;  tempAdd         2    1[BANK0 ] unsigned int 
 29628 ;;  point           1    3[BANK0 ] PTR unsigned char 
 29629 ;;		 -> var_sys_NVM(64), 
 29630 ;; Return value:  Size  Location     Type
 29631 ;;                  1    wreg      void 
 29632 ;; Registers used:
 29633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29634 ;; Tracked objects:
 29635 ;;		On entry : 0/0
 29636 ;;		On exit  : 0/0
 29637 ;;		Unchanged: 0/0
 29638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29640 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29642 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29643 ;;Total ram usage:        4 bytes
 29644 ;; Hardware stack levels used: 1
 29645 ;; Hardware stack levels required when called: 13
 29646 ;; This function calls:
 29647 ;;		_i2c_writeNBytes
 29648 ;; This function is called by:
 29649 ;;		_loadNVM_VarSystem
 29650 ;;		_ResetDefaultMemory
 29651 ;;		_ControlCounterMoves
 29652 ;;		_checkNVM_VarSystem
 29653 ;;		_sm_execute_ControlLearning
 29654 ;;		_sm_execute_menuConfiguration
 29655 ;;		_setValueToEdit
 29656 ;;		_controlSelectRemote
 29657 ;;		_eusartparser
 29658 ;; This function uses a non-reentrant model
 29659 ;;
 29660                           
 29661                           	psect	text129
 29662  008E2C                     __ptext129:
 29663                           	callstack 0
 29664  008E2C                     _SaveNVM_VarSystem:
 29665                           	callstack 14
 29666                           
 29667                           ;incstack = 0
 29668                           ;SaveNVM_VarSystem@page stored from wreg
 29669  008E2C  0100               	movlb	0	; () banked
 29670  008E2E  6FD8               	movwf	SaveNVM_VarSystem@page& (0+255),b
 29671                           
 29672                           ;controlMemory_MC50.c: 175: void SaveNVM_VarSystem(unsigned char page);controlMemory_MC5
      +                          0.c: 176: {;controlMemory_MC50.c: 177:     unsigned int tempAdd=page*16;
 29673  008E30  0100               	movlb	0	; () banked
 29674  008E32  51D8               	movf	SaveNVM_VarSystem@page& (0+255),w,b
 29675  008E34  0D10               	mullw	16
 29676  008E36  CFF3 F0D9          	movff	prodl,SaveNVM_VarSystem@tempAdd
 29677  008E3A  CFF4 F0DA          	movff	prodh,SaveNVM_VarSystem@tempAdd+1
 29678                           
 29679                           ; BSR set to: 0
 29680                           ;controlMemory_MC50.c: 178:     char* point=(char*)&var_sys_NVM;
 29681  008E3E  0E98               	movlw	low _var_sys_NVM
 29682  008E40  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 29683                           
 29684                           ; BSR set to: 0
 29685                           ;controlMemory_MC50.c: 179:     point=point+tempAdd;
 29686  008E42  51DB               	movf	SaveNVM_VarSystem@point& (0+255),w,b
 29687  008E44  25D9               	addwf	SaveNVM_VarSystem@tempAdd& (0+255),w,b
 29688  008E46  6FDB               	movwf	SaveNVM_VarSystem@point& (0+255),b
 29689                           
 29690                           ; BSR set to: 0
 29691                           ;controlMemory_MC50.c: 180:    i2c_writeNBytes(0x50, tempAdd, point, 16);
 29692  008E48  C0D9  F022         	movff	SaveNVM_VarSystem@tempAdd,i2c_writeNBytes@reg
 29693  008E4C  C0DA  F023         	movff	SaveNVM_VarSystem@tempAdd+1,i2c_writeNBytes@reg+1
 29694  008E50  C0DB  F024         	movff	SaveNVM_VarSystem@point,i2c_writeNBytes@data
 29695  008E54  0E00               	movlw	0
 29696  008E56  6E26               	movwf	(i2c_writeNBytes@len+1)^0,c
 29697  008E58  0E10               	movlw	16
 29698  008E5A  6E25               	movwf	i2c_writeNBytes@len^0,c
 29699  008E5C  0E50               	movlw	80
 29700  008E5E  ECF9  F040         	call	_i2c_writeNBytes
 29701  008E62  0012               	return		;funcret
 29702  008E64                     __end_of_SaveNVM_VarSystem:
 29703                           	callstack 0
 29704                           
 29705 ;; *************** function _i2c_writeNBytes *****************
 29706 ;; Defined at:
 29707 ;;		line 50 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 29708 ;; Parameters:    Size  Location     Type
 29709 ;;  address         1    wreg     unsigned char 
 29710 ;;  reg             2   33[COMRAM] unsigned short 
 29711 ;;  data            1   35[COMRAM] PTR void 
 29712 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29713 ;;  len             2   36[COMRAM] unsigned int 
 29714 ;; Auto vars:     Size  Location     Type
 29715 ;;  address         1   56[COMRAM] unsigned char 
 29716 ;;  dat            17   39[COMRAM] unsigned char [17]
 29717 ;; Return value:  Size  Location     Type
 29718 ;;                  1    wreg      void 
 29719 ;; Registers used:
 29720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29721 ;; Tracked objects:
 29722 ;;		On entry : 3F/0
 29723 ;;		On exit  : 0/0
 29724 ;;		Unchanged: 0/0
 29725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29726 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29727 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29729 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29730 ;;Total ram usage:       24 bytes
 29731 ;; Hardware stack levels used: 1
 29732 ;; Hardware stack levels required when called: 12
 29733 ;; This function calls:
 29734 ;;		_I2C1_Close
 29735 ;;		_I2C1_MasterWrite
 29736 ;;		_I2C1_Open
 29737 ;;		_I2C1_SetAddressNackCallback
 29738 ;;		_I2C1_SetBuffer
 29739 ;;		_memcpy
 29740 ;; This function is called by:
 29741 ;;		_saveNewSerial
 29742 ;;		_RemoveSerial
 29743 ;;		_SaveNVM_VarSystem
 29744 ;; This function uses a non-reentrant model
 29745 ;;
 29746                           
 29747                           	psect	text130
 29748  0081F2                     __ptext130:
 29749                           	callstack 0
 29750  0081F2                     _i2c_writeNBytes:
 29751                           	callstack 14
 29752                           
 29753                           ;incstack = 0
 29754                           ;i2c_writeNBytes@address stored from wreg
 29755  0081F2  6E39               	movwf	i2c_writeNBytes@address^0,c
 29756                           
 29757                           ;mcc_generated_files/drivers/i2c_simple_master.c: 50: void i2c_writeNBytes(i2c1_address_
      +                          t address, uint16_t reg, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_
      +                          master.c: 51: {;mcc_generated_files/drivers/i2c_simple_master.c: 52:     uint8_t dat[17]
      +                          ;;mcc_generated_files/drivers/i2c_simple_master.c: 53:     dat[0] = reg;
 29758  0081F4  C022  F028         	movff	i2c_writeNBytes@reg,i2c_writeNBytes@dat
 29759                           
 29760                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     memcpy(dat + 1, data, len);
 29761  0081F8  0E29               	movlw	low (i2c_writeNBytes@dat+1)
 29762  0081FA  6E10               	movwf	memcpy@d1^0,c
 29763  0081FC  6A11               	clrf	(memcpy@d1+1)^0,c
 29764  0081FE  C024  F012         	movff	i2c_writeNBytes@data,memcpy@s1
 29765  008202  6A13               	clrf	(memcpy@s1+1)^0,c
 29766  008204  C025  F014         	movff	i2c_writeNBytes@len,memcpy@n
 29767  008208  C026  F015         	movff	i2c_writeNBytes@len+1,memcpy@n+1
 29768  00820C  EC18  F046         	call	_memcpy	;wreg free
 29769  008210                     l19852:
 29770  008210  5023               	movf	(i2c_writeNBytes@reg+1)^0,w,c
 29771  008212  1039               	iorwf	i2c_writeNBytes@address^0,w,c
 29772  008214  ECC9  F03E         	call	_I2C1_Open
 29773  008218  0900               	iorlw	0
 29774  00821A  B4D8               	btfsc	status,2,c
 29775  00821C  D7F9               	goto	l19852
 29776                           
 29777                           ;mcc_generated_files/drivers/i2c_simple_master.c: 56:     I2C1_SetBuffer(dat,len + 1);
 29778  00821E  0E28               	movlw	low i2c_writeNBytes@dat
 29779  008220  6E10               	movwf	I2C1_SetBuffer@buffer^0,c
 29780  008222  6A11               	clrf	(I2C1_SetBuffer@buffer+1)^0,c
 29781  008224  0E01               	movlw	1
 29782  008226  2425               	addwf	i2c_writeNBytes@len^0,w,c
 29783  008228  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 29784  00822A  0E00               	movlw	0
 29785  00822C  2026               	addwfc	(i2c_writeNBytes@len+1)^0,w,c
 29786  00822E  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 29787  008230  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 29788                           
 29789                           ; BSR set to: 2
 29790                           ;mcc_generated_files/drivers/i2c_simple_master.c: 57:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 29791  008234  0E00               	movlw	0
 29792  008236  6E15               	movwf	I2C1_SetAddressNackCallback@cb^0,c
 29793  008238  0E00               	movlw	0
 29794  00823A  6E16               	movwf	(I2C1_SetAddressNackCallback@cb+1)^0,c
 29795  00823C  0E00               	movlw	0
 29796  00823E  6E17               	movwf	I2C1_SetAddressNackCallback@ptr^0,c
 29797  008240  0E00               	movlw	0
 29798  008242  6E18               	movwf	(I2C1_SetAddressNackCallback@ptr+1)^0,c
 29799  008244  EC5B  F04A         	call	_I2C1_SetAddressNackCallback	;wreg free
 29800                           
 29801                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58:     I2C1_MasterWrite();
 29802  008248  EC29  F04B         	call	_I2C1_MasterWrite	;wreg free
 29803  00824C                     l19860:
 29804  00824C  EC9C  F049         	call	_I2C1_Close	;wreg free
 29805  008250  06E8               	decf	wreg,f,c
 29806  008252  B4D8               	btfsc	status,2,c
 29807  008254  D7FB               	goto	l19860
 29808                           
 29809                           ;mcc_generated_files/drivers/i2c_simple_master.c: 60:     _delay((unsigned long)((10)*(6
      +                          4000000/4000.0)));
 29810  008256  0ED0               	movlw	208
 29811  008258  6E27               	movwf	??_i2c_writeNBytes^0,c
 29812  00825A  0ECA               	movlw	202
 29813  00825C                     u29617:
 29814  00825C  2EE8               	decfsz	wreg,f,c
 29815  00825E  D7FE               	bra	u29617
 29816  008260  2E27               	decfsz	??_i2c_writeNBytes^0,f,c
 29817  008262  D7FC               	bra	u29617
 29818  008264  0012               	return		;funcret
 29819  008266                     __end_of_i2c_writeNBytes:
 29820                           	callstack 0
 29821                           
 29822 ;; *************** function _memcpy *****************
 29823 ;; Defined at:
 29824 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memcpy.c"
 29825 ;; Parameters:    Size  Location     Type
 29826 ;;  d1              2   15[COMRAM] PTR void 
 29827 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29828 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29829 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 29830 ;;		 -> i2c_writeNBytes@dat(17), 
 29831 ;;  s1              2   17[COMRAM] PTR const void 
 29832 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29833 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29834 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 29835 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29836 ;;  n               2   19[COMRAM] unsigned int 
 29837 ;; Auto vars:     Size  Location     Type
 29838 ;;  s               2   24[COMRAM] PTR const unsigned char 
 29839 ;;		 -> classic_data.raw_data(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29840 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29841 ;;		 -> NormalKeyGen@Buffer(8), classic_data.serialnumber(4), classic_data(16), BufferRF(9), 
 29842 ;;		 -> RemoveSerial@tempSerial(4), saveNewSerial@tempSerial(4), var_sys_NVM(64), 
 29843 ;;  d               2   22[COMRAM] PTR unsigned char 
 29844 ;;		 -> controlSelectRemote@tempSerial(4), Decrypt@Buffer(4), SecureKeyGen@SKEYtemp(8), SecureKeyGen@HOPtemp(4), 
 29845 ;;		 -> SecureKeyGen@Buffer(8), NormalKeyGen@SKEYtemp(4), NormalKeyGen@SEED(4), NormalKeyGen@HOPtemp(4), 
 29846 ;;		 -> NormalKeyGen@Buffer(8), DKEY(8), classic_data(16), I2C1_WriteNBytes@dat(17), 
 29847 ;;		 -> i2c_writeNBytes@dat(17), 
 29848 ;;  tmp             1   21[COMRAM] unsigned char 
 29849 ;; Return value:  Size  Location     Type
 29850 ;;                  2   15[COMRAM] PTR void 
 29851 ;; Registers used:
 29852 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29853 ;; Tracked objects:
 29854 ;;		On entry : 0/0
 29855 ;;		On exit  : 0/0
 29856 ;;		Unchanged: 0/0
 29857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29858 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29859 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29861 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29862 ;;Total ram usage:       11 bytes
 29863 ;; Hardware stack levels used: 1
 29864 ;; Hardware stack levels required when called: 4
 29865 ;; This function calls:
 29866 ;;		Nothing
 29867 ;; This function is called by:
 29868 ;;		_i2c_writeNBytes
 29869 ;;		_getSerialCmd
 29870 ;;		_NormalKeyGen
 29871 ;;		_Decrypt
 29872 ;;		_keeloqDecryptPacket
 29873 ;;		_DecryptPacket_12BIT
 29874 ;; This function uses a non-reentrant model
 29875 ;;
 29876                           
 29877                           	psect	text131
 29878  008C30                     __ptext131:
 29879                           	callstack 0
 29880  008C30                     _memcpy:
 29881                           	callstack 21
 29882                           
 29883                           ;incstack = 0
 29884  008C30  C012  F019         	movff	memcpy@s1,memcpy@s
 29885  008C34  C013  F01A         	movff	memcpy@s1+1,memcpy@s+1
 29886  008C38  C010  F017         	movff	memcpy@d1,memcpy@d
 29887  008C3C  C011  F018         	movff	memcpy@d1+1,memcpy@d+1
 29888  008C40  D010               	goto	l19792
 29889  008C42                     l19784:
 29890  008C42  C019  FFD9         	movff	memcpy@s,fsr2l
 29891  008C46  C01A  FFDA         	movff	memcpy@s+1,fsr2h
 29892  008C4A  50DF               	movf	indf2,w,c
 29893  008C4C  6E16               	movwf	memcpy@tmp^0,c
 29894  008C4E  4A19               	infsnz	memcpy@s^0,f,c
 29895  008C50  2A1A               	incf	(memcpy@s+1)^0,f,c
 29896  008C52  C017  FFD9         	movff	memcpy@d,fsr2l
 29897  008C56  C018  FFDA         	movff	memcpy@d+1,fsr2h
 29898  008C5A  C016  FFDF         	movff	memcpy@tmp,indf2
 29899  008C5E  4A17               	infsnz	memcpy@d^0,f,c
 29900  008C60  2A18               	incf	(memcpy@d+1)^0,f,c
 29901  008C62                     l19792:
 29902  008C62  0614               	decf	memcpy@n^0,f,c
 29903  008C64  A0D8               	btfss	status,0,c
 29904  008C66  0615               	decf	(memcpy@n+1)^0,f,c
 29905  008C68  2814               	incf	memcpy@n^0,w,c
 29906  008C6A  E1EB               	bnz	l19784
 29907  008C6C  2815               	incf	(memcpy@n+1)^0,w,c
 29908  008C6E  B4D8               	btfsc	status,2,c
 29909  008C70  0012               	return	
 29910  008C72  D7E7               	goto	l19784
 29911  008C74                     __end_of_memcpy:
 29912                           	callstack 0
 29913                           
 29914 ;; *************** function _I2C1_SetAddressNackCallback *****************
 29915 ;; Defined at:
 29916 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 29917 ;; Parameters:    Size  Location     Type
 29918 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 29919 ;;		 -> Absolute function(1), 
 29920 ;;  ptr             2   22[COMRAM] PTR void 
 29921 ;;		 -> NULL(0), 
 29922 ;; Auto vars:     Size  Location     Type
 29923 ;;		None
 29924 ;; Return value:  Size  Location     Type
 29925 ;;                  1    wreg      void 
 29926 ;; Registers used:
 29927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29928 ;; Tracked objects:
 29929 ;;		On entry : 3F/2
 29930 ;;		On exit  : 0/0
 29931 ;;		Unchanged: 0/0
 29932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29936 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29937 ;;Total ram usage:        4 bytes
 29938 ;; Hardware stack levels used: 1
 29939 ;; Hardware stack levels required when called: 5
 29940 ;; This function calls:
 29941 ;;		_I2C1_SetCallback
 29942 ;; This function is called by:
 29943 ;;		_i2c_writeNBytes
 29944 ;;		_i2c_readDataBlock
 29945 ;;		_I2C1_Read1ByteRegister
 29946 ;; This function uses a non-reentrant model
 29947 ;;
 29948                           
 29949                           	psect	text132
 29950  0094B6                     __ptext132:
 29951                           	callstack 0
 29952  0094B6                     _I2C1_SetAddressNackCallback:
 29953                           	callstack 20
 29954                           
 29955                           ; BSR set to: 2
 29956                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 29957                           
 29958                           ;incstack = 0
 29959  0094B6  C015  F010         	movff	I2C1_SetAddressNackCallback@cb,I2C1_SetCallback@cb
 29960  0094BA  C016  F011         	movff	I2C1_SetAddressNackCallback@cb+1,I2C1_SetCallback@cb+1
 29961  0094BE  C017  F012         	movff	I2C1_SetAddressNackCallback@ptr,I2C1_SetCallback@ptr
 29962  0094C2  C018  F013         	movff	I2C1_SetAddressNackCallback@ptr+1,I2C1_SetCallback@ptr+1
 29963  0094C6  0E02               	movlw	2
 29964  0094C8  ECDA  F041         	call	_I2C1_SetCallback
 29965  0094CC  0012               	return		;funcret
 29966  0094CE                     __end_of_I2C1_SetAddressNackCallback:
 29967                           	callstack 0
 29968                           
 29969 ;; *************** function _I2C1_Open *****************
 29970 ;; Defined at:
 29971 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 29972 ;; Parameters:    Size  Location     Type
 29973 ;;  address         1    wreg     unsigned char 
 29974 ;; Auto vars:     Size  Location     Type
 29975 ;;  address         1   15[COMRAM] unsigned char 
 29976 ;;  returnValue     1   16[COMRAM] enum E355
 29977 ;; Return value:  Size  Location     Type
 29978 ;;                  1    wreg      enum E355
 29979 ;; Registers used:
 29980 ;;		wreg, status,2, status,0, cstack
 29981 ;; Tracked objects:
 29982 ;;		On entry : 0/0
 29983 ;;		On exit  : 33/2
 29984 ;;		Unchanged: 0/0
 29985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29990 ;;Total ram usage:        2 bytes
 29991 ;; Hardware stack levels used: 1
 29992 ;; Hardware stack levels required when called: 5
 29993 ;; This function calls:
 29994 ;;		_I2C1_MasterClearIrq
 29995 ;;		_I2C1_MasterOpen
 29996 ;; This function is called by:
 29997 ;;		_i2c_writeNBytes
 29998 ;;		_i2c_readDataBlock
 29999 ;;		_I2C1_Read1ByteRegister
 30000 ;; This function uses a non-reentrant model
 30001 ;;
 30002                           
 30003                           	psect	text133
 30004  007D92                     __ptext133:
 30005                           	callstack 0
 30006  007D92                     _I2C1_Open:
 30007                           	callstack 20
 30008                           
 30009                           ;incstack = 0
 30010                           ;I2C1_Open@address stored from wreg
 30011  007D92  6E10               	movwf	I2C1_Open@address^0,c
 30012                           
 30013                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 30014  007D94  0E01               	movlw	1
 30015  007D96  6E11               	movwf	I2C1_Open@returnValue^0,c
 30016                           
 30017                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 30018  007D98  0102               	movlb	2	; () banked
 30019  007D9A  B55F               	btfsc	(_I2C1_Status+35)& (0+255),2,b
 30020  007D9C  D03A               	goto	l19758
 30021                           
 30022                           ; BSR set to: 2
 30023                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 30024  007D9E  C010  F258         	movff	I2C1_Open@address,_I2C1_Status+28
 30025                           
 30026                           ; BSR set to: 2
 30027                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 30028  007DA2  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30029                           
 30030                           ; BSR set to: 2
 30031                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 30032  007DA4  855F               	bsf	(_I2C1_Status+35)& (0+255),2,b
 30033                           
 30034                           ; BSR set to: 2
 30035                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 30036  007DA6  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30037                           
 30038                           ; BSR set to: 2
 30039                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 30040  007DA8  0E0E               	movlw	14
 30041  007DAA  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30042                           
 30043                           ; BSR set to: 2
 30044                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 30045  007DAC  0E01               	movlw	1
 30046  007DAE  6F57               	movwf	(_I2C1_Status+27)& (0+255),b
 30047  007DB0  0EF4               	movlw	244
 30048  007DB2  6F56               	movwf	(_I2C1_Status+26)& (0+255),b
 30049                           
 30050                           ; BSR set to: 2
 30051                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 30052  007DB4  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 30053                           
 30054                           ; BSR set to: 2
 30055                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 30056  007DB6  0EEC               	movlw	low _I2C1_CallbackReturnStop
 30057  007DB8  6F3C               	movwf	_I2C1_Status& (0+255),b
 30058  007DBA  0E96               	movlw	high _I2C1_CallbackReturnStop
 30059  007DBC  6F3D               	movwf	(_I2C1_Status+1)& (0+255),b
 30060                           
 30061                           ; BSR set to: 2
 30062                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 30063  007DBE  0E00               	movlw	0
 30064  007DC0  6F48               	movwf	(_I2C1_Status+12)& (0+255),b
 30065  007DC2  0E00               	movlw	0
 30066  007DC4  6F49               	movwf	(_I2C1_Status+13)& (0+255),b
 30067                           
 30068                           ; BSR set to: 2
 30069                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 30070  007DC6  0EEC               	movlw	low _I2C1_CallbackReturnStop
 30071  007DC8  6F3E               	movwf	(_I2C1_Status+2)& (0+255),b
 30072  007DCA  0E96               	movlw	high _I2C1_CallbackReturnStop
 30073  007DCC  6F3F               	movwf	(_I2C1_Status+3)& (0+255),b
 30074                           
 30075                           ; BSR set to: 2
 30076                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 30077  007DCE  0E00               	movlw	0
 30078  007DD0  6F4A               	movwf	(_I2C1_Status+14)& (0+255),b
 30079  007DD2  0E00               	movlw	0
 30080  007DD4  6F4B               	movwf	(_I2C1_Status+15)& (0+255),b
 30081                           
 30082                           ; BSR set to: 2
 30083                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30084  007DD6  0EEC               	movlw	low _I2C1_CallbackReturnStop
 30085  007DD8  6F40               	movwf	(_I2C1_Status+4)& (0+255),b
 30086  007DDA  0E96               	movlw	high _I2C1_CallbackReturnStop
 30087  007DDC  6F41               	movwf	(_I2C1_Status+5)& (0+255),b
 30088                           
 30089                           ; BSR set to: 2
 30090                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 30091  007DDE  0E00               	movlw	0
 30092  007DE0  6F4C               	movwf	(_I2C1_Status+16)& (0+255),b
 30093  007DE2  0E00               	movlw	0
 30094  007DE4  6F4D               	movwf	(_I2C1_Status+17)& (0+255),b
 30095                           
 30096                           ; BSR set to: 2
 30097                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 30098  007DE6  0EEC               	movlw	low _I2C1_CallbackReturnStop
 30099  007DE8  6F42               	movwf	(_I2C1_Status+6)& (0+255),b
 30100  007DEA  0E96               	movlw	high _I2C1_CallbackReturnStop
 30101  007DEC  6F43               	movwf	(_I2C1_Status+7)& (0+255),b
 30102                           
 30103                           ; BSR set to: 2
 30104                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 30105  007DEE  0E00               	movlw	0
 30106  007DF0  6F4E               	movwf	(_I2C1_Status+18)& (0+255),b
 30107  007DF2  0E00               	movlw	0
 30108  007DF4  6F4F               	movwf	(_I2C1_Status+19)& (0+255),b
 30109                           
 30110                           ; BSR set to: 2
 30111                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 30112  007DF6  0EE8               	movlw	low _I2C1_CallbackReturnReset
 30113  007DF8  6F44               	movwf	(_I2C1_Status+8)& (0+255),b
 30114  007DFA  0E96               	movlw	high _I2C1_CallbackReturnReset
 30115  007DFC  6F45               	movwf	(_I2C1_Status+9)& (0+255),b
 30116                           
 30117                           ; BSR set to: 2
 30118                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 30119  007DFE  0E00               	movlw	0
 30120  007E00  6F50               	movwf	(_I2C1_Status+20)& (0+255),b
 30121  007E02  0E00               	movlw	0
 30122  007E04  6F51               	movwf	(_I2C1_Status+21)& (0+255),b
 30123                           
 30124                           ; BSR set to: 2
 30125                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 30126  007E06  EC60  F04B         	call	_I2C1_MasterClearIrq	;wreg free
 30127                           
 30128                           ; BSR set to: 14
 30129                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 30130  007E0A  EC67  F04A         	call	_I2C1_MasterOpen	;wreg free
 30131                           
 30132                           ; BSR set to: 14
 30133                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 30134  007E0E  0E00               	movlw	0
 30135  007E10  6E11               	movwf	I2C1_Open@returnValue^0,c
 30136  007E12                     l19758:
 30137                           
 30138                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 30139  007E12  5011               	movf	I2C1_Open@returnValue^0,w,c
 30140  007E14  0012               	return		;funcret
 30141  007E16                     __end_of_I2C1_Open:
 30142                           	callstack 0
 30143                           
 30144 ;; *************** function _I2C1_MasterOpen *****************
 30145 ;; Defined at:
 30146 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 30147 ;; Parameters:    Size  Location     Type
 30148 ;;		None
 30149 ;; Auto vars:     Size  Location     Type
 30150 ;;		None
 30151 ;; Return value:  Size  Location     Type
 30152 ;;                  1    wreg      _Bool 
 30153 ;; Registers used:
 30154 ;;		wreg, status,2
 30155 ;; Tracked objects:
 30156 ;;		On entry : 3F/E
 30157 ;;		On exit  : 3F/E
 30158 ;;		Unchanged: 3F/0
 30159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30164 ;;Total ram usage:        0 bytes
 30165 ;; Hardware stack levels used: 1
 30166 ;; Hardware stack levels required when called: 4
 30167 ;; This function calls:
 30168 ;;		Nothing
 30169 ;; This function is called by:
 30170 ;;		_I2C1_Open
 30171 ;; This function uses a non-reentrant model
 30172 ;;
 30173                           
 30174                           	psect	text134
 30175  0094CE                     __ptext134:
 30176                           	callstack 0
 30177  0094CE                     _I2C1_MasterOpen:
 30178                           	callstack 20
 30179                           
 30180                           ; BSR set to: 14
 30181                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 30182                           
 30183                           ;incstack = 0
 30184  0094CE  BA96               	btfsc	150,5,c	;volatile
 30185  0094D0  0012               	return	
 30186                           
 30187                           ; BSR set to: 14
 30188                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 30189  0094D2  0E80               	movlw	128
 30190  0094D4  6E95               	movwf	149,c	;volatile
 30191                           
 30192                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 30193  0094D6  0E08               	movlw	8
 30194  0094D8  6E96               	movwf	150,c	;volatile
 30195                           
 30196                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 30197  0094DA  0E00               	movlw	0
 30198  0094DC  6E97               	movwf	151,c	;volatile
 30199                           
 30200                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x9F;
 30201  0094DE  0E9F               	movlw	159
 30202  0094E0  6E93               	movwf	147,c	;volatile
 30203                           
 30204                           ; BSR set to: 14
 30205                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 30206  0094E2  8A96               	bsf	150,5,c	;volatile
 30207                           
 30208                           ; BSR set to: 14
 30209  0094E4  0012               	return		;funcret
 30210  0094E6                     __end_of_I2C1_MasterOpen:
 30211                           	callstack 0
 30212                           
 30213 ;; *************** function _I2C1_MasterWrite *****************
 30214 ;; Defined at:
 30215 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 30216 ;; Parameters:    Size  Location     Type
 30217 ;;		None
 30218 ;; Auto vars:     Size  Location     Type
 30219 ;;		None
 30220 ;; Return value:  Size  Location     Type
 30221 ;;                  1    wreg      enum E355
 30222 ;; Registers used:
 30223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30224 ;; Tracked objects:
 30225 ;;		On entry : 0/2
 30226 ;;		On exit  : 3F/2
 30227 ;;		Unchanged: 0/0
 30228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30233 ;;Total ram usage:        0 bytes
 30234 ;; Hardware stack levels used: 1
 30235 ;; Hardware stack levels required when called: 11
 30236 ;; This function calls:
 30237 ;;		_I2C1_MasterOperation
 30238 ;; This function is called by:
 30239 ;;		_i2c_writeNBytes
 30240 ;;		_i2c_readDataBlock
 30241 ;;		_I2C1_Read1ByteRegister
 30242 ;; This function uses a non-reentrant model
 30243 ;;
 30244                           
 30245                           	psect	text135
 30246  009652                     __ptext135:
 30247                           	callstack 0
 30248  009652                     _I2C1_MasterWrite:
 30249                           	callstack 14
 30250                           
 30251                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 30252                           
 30253                           ; BSR set to: 14
 30254                           ;incstack = 0
 30255  009652  0E00               	movlw	0
 30256  009654  EC05  F048         	call	_I2C1_MasterOperation
 30257                           
 30258                           ; BSR set to: 2
 30259  009658  0012               	return		;funcret
 30260  00965A                     __end_of_I2C1_MasterWrite:
 30261                           	callstack 0
 30262                           
 30263 ;; *************** function _I2C1_MasterOperation *****************
 30264 ;; Defined at:
 30265 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 30266 ;; Parameters:    Size  Location     Type
 30267 ;;  read            1    wreg     _Bool 
 30268 ;; Auto vars:     Size  Location     Type
 30269 ;;  read            1   31[COMRAM] _Bool 
 30270 ;;  returnValue     1   32[COMRAM] enum E355
 30271 ;; Return value:  Size  Location     Type
 30272 ;;                  1    wreg      enum E355
 30273 ;; Registers used:
 30274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30275 ;; Tracked objects:
 30276 ;;		On entry : 0/2
 30277 ;;		On exit  : 3F/2
 30278 ;;		Unchanged: 0/0
 30279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30284 ;;Total ram usage:        2 bytes
 30285 ;; Hardware stack levels used: 1
 30286 ;; Hardware stack levels required when called: 10
 30287 ;; This function calls:
 30288 ;;		_I2C1_MasterStart
 30289 ;;		_I2C1_Poller
 30290 ;; This function is called by:
 30291 ;;		_I2C1_MasterWrite
 30292 ;; This function uses a non-reentrant model
 30293 ;;
 30294                           
 30295                           	psect	text136
 30296  00900A                     __ptext136:
 30297                           	callstack 0
 30298  00900A                     _I2C1_MasterOperation:
 30299                           	callstack 14
 30300                           
 30301                           ; BSR set to: 2
 30302                           ;incstack = 0
 30303                           ;I2C1_MasterOperation@read stored from wreg
 30304  00900A  6E20               	movwf	I2C1_MasterOperation@read^0,c
 30305                           
 30306                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 30307  00900C  0E01               	movlw	1
 30308  00900E  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 30309                           
 30310                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 30311  009010  0102               	movlb	2	; () banked
 30312  009012  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 30313  009014  D00E               	goto	l19710
 30314                           
 30315                           ; BSR set to: 2
 30316                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 30317  009016  835F               	bsf	(_I2C1_Status+35)& (0+255),1,b
 30318                           
 30319                           ; BSR set to: 2
 30320                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 30321  009018  0E00               	movlw	0
 30322  00901A  6E21               	movwf	I2C1_MasterOperation@returnValue^0,c
 30323                           
 30324                           ; BSR set to: 2
 30325                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 30326  00901C  5020               	movf	I2C1_MasterOperation@read^0,w,c
 30327  00901E  B4D8               	btfsc	status,2,c
 30328  009020  D002               	goto	l19704
 30329                           
 30330                           ; BSR set to: 2
 30331                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 30332  009022  0E01               	movlw	1
 30333  009024  D001               	goto	L111
 30334  009026                     l19704:
 30335                           
 30336                           ; BSR set to: 2
 30337                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 30338  009026  0E02               	movlw	2
 30339  009028                     L111:
 30340  009028  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30341                           
 30342                           ; BSR set to: 2
 30343                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 30344  00902A  EC7C  F04B         	call	_I2C1_MasterStart	;wreg free
 30345                           
 30346                           ; BSR set to: 2
 30347                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 30348  00902E  ECC4  F04A         	call	_I2C1_Poller	;wreg free
 30349  009032                     l19710:
 30350                           
 30351                           ; BSR set to: 2
 30352                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 30353  009032  5021               	movf	I2C1_MasterOperation@returnValue^0,w,c
 30354                           
 30355                           ; BSR set to: 2
 30356  009034  0012               	return		;funcret
 30357  009036                     __end_of_I2C1_MasterOperation:
 30358                           	callstack 0
 30359                           
 30360 ;; *************** function _I2C1_Poller *****************
 30361 ;; Defined at:
 30362 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 30363 ;; Parameters:    Size  Location     Type
 30364 ;;		None
 30365 ;; Auto vars:     Size  Location     Type
 30366 ;;		None
 30367 ;; Return value:  Size  Location     Type
 30368 ;;                  1    wreg      void 
 30369 ;; Registers used:
 30370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30371 ;; Tracked objects:
 30372 ;;		On entry : 3F/2
 30373 ;;		On exit  : 3F/2
 30374 ;;		Unchanged: 0/0
 30375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30380 ;;Total ram usage:        0 bytes
 30381 ;; Hardware stack levels used: 1
 30382 ;; Hardware stack levels required when called: 9
 30383 ;; This function calls:
 30384 ;;		_I2C1_MasterFsm
 30385 ;;		_I2C1_MasterWaitForEvent
 30386 ;; This function is called by:
 30387 ;;		_I2C1_MasterOperation
 30388 ;; This function uses a non-reentrant model
 30389 ;;
 30390                           
 30391                           	psect	text137
 30392  009588                     __ptext137:
 30393                           	callstack 0
 30394  009588                     _I2C1_Poller:
 30395                           	callstack 14
 30396                           
 30397                           ; BSR set to: 2
 30398                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 30399                           
 30400                           ; BSR set to: 2
 30401                           ;incstack = 0
 30402  009588  D004               	goto	l19678
 30403  00958A                     l19674:
 30404                           
 30405                           ; BSR set to: 2
 30406                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 30407  00958A  EC2D  F04B         	call	_I2C1_MasterWaitForEvent	;wreg free
 30408                           
 30409                           ; BSR set to: 14
 30410                           ;mcc_generated_files/i2c1_master.c: 317:     I2C1_MasterFsm();
 30411  00958E  EC72  F044         	call	_I2C1_MasterFsm	;wreg free
 30412  009592                     l19678:
 30413                           
 30414                           ; BSR set to: 2
 30415                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 30416  009592  A35F               	btfss	(_I2C1_Status+35)& (0+255),1,b
 30417  009594  0012               	return	
 30418  009596  D7F9               	goto	l19674
 30419  009598                     __end_of_I2C1_Poller:
 30420                           	callstack 0
 30421                           
 30422 ;; *************** function _I2C1_MasterWaitForEvent *****************
 30423 ;; Defined at:
 30424 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 30425 ;; Parameters:    Size  Location     Type
 30426 ;;		None
 30427 ;; Auto vars:     Size  Location     Type
 30428 ;;		None
 30429 ;; Return value:  Size  Location     Type
 30430 ;;                  1    wreg      void 
 30431 ;; Registers used:
 30432 ;;		None
 30433 ;; Tracked objects:
 30434 ;;		On entry : 3F/2
 30435 ;;		On exit  : 3F/E
 30436 ;;		Unchanged: 0/0
 30437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30442 ;;Total ram usage:        0 bytes
 30443 ;; Hardware stack levels used: 1
 30444 ;; Hardware stack levels required when called: 4
 30445 ;; This function calls:
 30446 ;;		Nothing
 30447 ;; This function is called by:
 30448 ;;		_I2C1_Poller
 30449 ;; This function uses a non-reentrant model
 30450 ;;
 30451                           
 30452                           	psect	text138
 30453  00965A                     __ptext138:
 30454                           	callstack 0
 30455  00965A                     _I2C1_MasterWaitForEvent:
 30456                           	callstack 18
 30457                           
 30458                           ; BSR set to: 2
 30459                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 30460                           
 30461                           ; BSR set to: 2
 30462                           ;incstack = 0
 30463                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 30464  00965A  010E               	movlb	14	; () banked
 30465  00965C  B1CD               	btfsc	205,0,b	;volatile
 30466  00965E  0012               	return	
 30467  009660  D7FC               	goto	__ptext138
 30468  009662                     __end_of_I2C1_MasterWaitForEvent:
 30469                           	callstack 0
 30470                           
 30471 ;; *************** function _I2C1_MasterFsm *****************
 30472 ;; Defined at:
 30473 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 30474 ;; Parameters:    Size  Location     Type
 30475 ;;		None
 30476 ;; Auto vars:     Size  Location     Type
 30477 ;;		None
 30478 ;; Return value:  Size  Location     Type
 30479 ;;                  1    wreg      void 
 30480 ;; Registers used:
 30481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30482 ;; Tracked objects:
 30483 ;;		On entry : 3F/E
 30484 ;;		On exit  : 3F/2
 30485 ;;		Unchanged: 0/0
 30486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30489 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30490 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30491 ;;Total ram usage:        3 bytes
 30492 ;; Hardware stack levels used: 1
 30493 ;; Hardware stack levels required when called: 8
 30494 ;; This function calls:
 30495 ;;		_I2C1_DO_ADDRESS_NACK
 30496 ;;		_I2C1_DO_IDLE
 30497 ;;		_I2C1_DO_RCEN
 30498 ;;		_I2C1_DO_RESET
 30499 ;;		_I2C1_DO_RX
 30500 ;;		_I2C1_DO_RX_ACK
 30501 ;;		_I2C1_DO_RX_NACK_RESTART
 30502 ;;		_I2C1_DO_RX_NACK_STOP
 30503 ;;		_I2C1_DO_SEND_ADR_READ
 30504 ;;		_I2C1_DO_SEND_ADR_WRITE
 30505 ;;		_I2C1_DO_SEND_RESTART
 30506 ;;		_I2C1_DO_SEND_RESTART_READ
 30507 ;;		_I2C1_DO_SEND_RESTART_WRITE
 30508 ;;		_I2C1_DO_SEND_STOP
 30509 ;;		_I2C1_DO_TX
 30510 ;;		_I2C1_DO_TX_EMPTY
 30511 ;;		_I2C1_MasterClearIrq
 30512 ;;		_I2C1_MasterIsNack
 30513 ;; This function is called by:
 30514 ;;		_I2C1_Poller
 30515 ;; This function uses a non-reentrant model
 30516 ;;
 30517                           
 30518                           	psect	text139
 30519  0088E4                     __ptext139:
 30520                           	callstack 0
 30521  0088E4                     _I2C1_MasterFsm:
 30522                           	callstack 14
 30523                           
 30524                           ; BSR set to: 14
 30525                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 30526                           
 30527                           ; BSR set to: 14
 30528                           ;incstack = 0
 30529  0088E4  EC60  F04B         	call	_I2C1_MasterClearIrq	;wreg free
 30530                           
 30531                           ; BSR set to: 14
 30532                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 30533  0088E8  0102               	movlb	2	; () banked
 30534  0088EA  A15F               	btfss	(_I2C1_Status+35)& (0+255),0,b
 30535  0088EC  D007               	goto	l19668
 30536                           
 30537                           ; BSR set to: 2
 30538  0088EE  ECE1  F04A         	call	_I2C1_MasterIsNack	;wreg free
 30539  0088F2  0900               	iorlw	0
 30540  0088F4  B4D8               	btfsc	status,2,c
 30541  0088F6  D002               	goto	l19668
 30542                           
 30543                           ; BSR set to: 2
 30544                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 30545  0088F8  0E0F               	movlw	15
 30546  0088FA  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30547  0088FC                     l19668:
 30548                           
 30549                           ; BSR set to: 2
 30550                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 30551  0088FC  515D               	movf	(_I2C1_Status+33)& (0+255),w,b
 30552  0088FE  0D02               	mullw	2
 30553  008900  50F3               	movf	243,w,c
 30554  008902  0F01               	addlw	low _i2c1_fsmStateTable
 30555  008904  6E1D               	movwf	??_I2C1_MasterFsm^0,c
 30556  008906  C01D  FFF6         	movff	??_I2C1_MasterFsm,tblptrl
 30557  00890A                     	if	1	;There is more than 1 active tblptr byte
 30558  00890A  0E0F               	movlw	high __smallconst
 30559  00890C  6EF7               	movwf	tblptrh,c
 30560  00890E                     	endif
 30561  00890E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30562  00890E  6AF8               	clrf	tblptru,c
 30563  008910                     	endif
 30564  008910                     	if	0	;tblptru may be non-zero
 30565  008910                     	endif
 30566  008910  0009               	tblrd		*+
 30567  008912  CFF5 F01E          	movff	tablat,??_I2C1_MasterFsm+1
 30568  008916  0009               	tblrd		*+
 30569  008918  CFF5 F01F          	movff	tablat,??_I2C1_MasterFsm+2
 30570  00891C  D801               	call	u22488
 30571  00891E  D009               	goto	u22489
 30572  008920                     u22488:
 30573  008920  0005               	push	
 30574  008922  6EFA               	movwf	pclath,c
 30575  008924  501E               	movf	(??_I2C1_MasterFsm+1)^0,w,c
 30576  008926  6EFD               	movwf	tosl,c
 30577  008928  501F               	movf	(??_I2C1_MasterFsm+2)^0,w,c
 30578  00892A  6EFE               	movwf	tosh,c
 30579  00892C  6AFF               	clrf	tosu,c
 30580  00892E  50FA               	movf	pclath,w,c
 30581  008930  0012               	return		;indir
 30582  008932                     u22489:
 30583  008932  0102               	movlb	2	; () banked
 30584  008934  6F5D               	movwf	(_I2C1_Status+33)& (0+255),b
 30585                           
 30586                           ; BSR set to: 2
 30587  008936  0012               	return		;funcret
 30588  008938                     __end_of_I2C1_MasterFsm:
 30589                           	callstack 0
 30590                           
 30591 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 30592 ;; Defined at:
 30593 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 30594 ;; Parameters:    Size  Location     Type
 30595 ;;		None
 30596 ;; Auto vars:     Size  Location     Type
 30597 ;;		None
 30598 ;; Return value:  Size  Location     Type
 30599 ;;                  1    wreg      enum E10442
 30600 ;; Registers used:
 30601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 30602 ;; Tracked objects:
 30603 ;;		On entry : 3F/2
 30604 ;;		On exit  : 0/0
 30605 ;;		Unchanged: 0/0
 30606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30611 ;;Total ram usage:        2 bytes
 30612 ;; Hardware stack levels used: 1
 30613 ;; Hardware stack levels required when called: 7
 30614 ;; This function calls:
 30615 ;;		Absolute function
 30616 ;;		_I2C1_CallbackReturnReset
 30617 ;;		_I2C1_CallbackReturnStop
 30618 ;;		_I2C1_DO_SEND_RESTART
 30619 ;;		_I2C1_DO_SEND_STOP
 30620 ;;		_rd1RegCompleteHandler
 30621 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 30622 ;;		_rd2RegCompleteHandler
 30623 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 30624 ;;		_rdBlkRegCompleteHandler
 30625 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 30626 ;;		_wr1RegCompleteHandler
 30627 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 30628 ;;		_wr2RegCompleteHandler
 30629 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 30630 ;; This function is called by:
 30631 ;;		_I2C1_MasterFsm
 30632 ;; This function uses a non-reentrant model
 30633 ;;
 30634                           
 30635                           	psect	text140
 30636  008AC6                     __ptext140:
 30637                           	callstack 0
 30638  008AC6                     _I2C1_DO_ADDRESS_NACK:
 30639                           	callstack 14
 30640                           
 30641                           ; BSR set to: 2
 30642                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 30643                           
 30644                           ; BSR set to: 2
 30645                           ;incstack = 0
 30646  008AC6  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 30647                           
 30648                           ; BSR set to: 2
 30649                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 30650  008AC8  0E02               	movlw	2
 30651  008ACA  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30652                           
 30653                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 30654  008ACC  D006               	goto	l19652
 30655  008ACE                     l19642:
 30656                           
 30657                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 30658  008ACE  EC41  F04B         	call	_I2C1_DO_SEND_RESTART	;wreg free
 30659  008AD2  0012               	return	
 30660  008AD4                     l19646:
 30661                           
 30662                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 30663  008AD4  EC3D  F04B         	call	_I2C1_DO_SEND_STOP	;wreg free
 30664  008AD8  0012               	return	
 30665  008ADA                     l19652:
 30666                           
 30667                           ; BSR set to: 2
 30668  008ADA  C24C  F019         	movff	_I2C1_Status+16,I2C1_CallbackReturnReset@funPtr
 30669  008ADE  C24D  F01A         	movff	_I2C1_Status+17,I2C1_CallbackReturnReset@funPtr+1
 30670  008AE2  D801               	call	u22448
 30671  008AE4  D009               	goto	u22449
 30672  008AE6                     u22448:
 30673  008AE6  0005               	push	
 30674  008AE8  6EFA               	movwf	pclath,c
 30675  008AEA  5140               	movf	(_I2C1_Status+4)& (0+255),w,b
 30676  008AEC  6EFD               	movwf	tosl,c
 30677  008AEE  5141               	movf	(_I2C1_Status+5)& (0+255),w,b
 30678  008AF0  6EFE               	movwf	tosh,c
 30679  008AF2  6AFF               	clrf	tosu,c
 30680  008AF4  50FA               	movf	pclath,w,c
 30681  008AF6  0012               	return		;indir
 30682  008AF8                     u22449:
 30683  008AF8  6E1B               	movwf	??_I2C1_DO_ADDRESS_NACK^0,c
 30684  008AFA  6A1C               	clrf	(??_I2C1_DO_ADDRESS_NACK+1)^0,c
 30685                           
 30686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30687                           ; Switch size 1, requested type "simple"
 30688                           ; Number of cases is 1, Range of values is 0 to 0
 30689                           ; switch strategies available:
 30690                           ; Name         Instructions Cycles
 30691                           ; simple_byte            4     3 (average)
 30692                           ;	Chosen strategy is simple_byte
 30693  008AFC  501C               	movf	(??_I2C1_DO_ADDRESS_NACK+1)^0,w,c
 30694  008AFE  0A00               	xorlw	0	; case 0
 30695  008B00  A4D8               	btfss	status,2,c
 30696  008B02  D7E8               	goto	l19646
 30697                           
 30698                           ; Switch size 1, requested type "simple"
 30699                           ; Number of cases is 2, Range of values is 2 to 3
 30700                           ; switch strategies available:
 30701                           ; Name         Instructions Cycles
 30702                           ; simple_byte            7     4 (average)
 30703                           ;	Chosen strategy is simple_byte
 30704  008B04  501B               	movf	??_I2C1_DO_ADDRESS_NACK^0,w,c
 30705  008B06  0A02               	xorlw	2	; case 2
 30706  008B08  B4D8               	btfsc	status,2,c
 30707  008B0A  D7E1               	goto	l19642
 30708  008B0C  0A01               	xorlw	1	; case 3
 30709  008B0E  B4D8               	btfsc	status,2,c
 30710  008B10  D7DE               	goto	l19642
 30711  008B12  D7E0               	goto	l19646
 30712  008B14                     __end_of_I2C1_DO_ADDRESS_NACK:
 30713                           	callstack 0
 30714                           
 30715 ;; *************** function _I2C1_DO_RESET *****************
 30716 ;; Defined at:
 30717 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 30718 ;; Parameters:    Size  Location     Type
 30719 ;;		None
 30720 ;; Auto vars:     Size  Location     Type
 30721 ;;		None
 30722 ;; Return value:  Size  Location     Type
 30723 ;;                  1    wreg      enum E10442
 30724 ;; Registers used:
 30725 ;;		wreg, status,2
 30726 ;; Tracked objects:
 30727 ;;		On entry : 3F/2
 30728 ;;		On exit  : 3F/2
 30729 ;;		Unchanged: 0/0
 30730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30735 ;;Total ram usage:        0 bytes
 30736 ;; Hardware stack levels used: 1
 30737 ;; Hardware stack levels required when called: 4
 30738 ;; This function calls:
 30739 ;;		Nothing
 30740 ;; This function is called by:
 30741 ;;		_I2C1_MasterFsm
 30742 ;; This function uses a non-reentrant model
 30743 ;;
 30744                           
 30745                           	psect	text141
 30746  009634                     __ptext141:
 30747                           	callstack 0
 30748  009634                     _I2C1_DO_RESET:
 30749                           	callstack 17
 30750                           
 30751                           ; BSR set to: 2
 30752                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 30753                           
 30754                           ;incstack = 0
 30755  009634  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 30756                           
 30757                           ; BSR set to: 2
 30758                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 30759  009636  0E00               	movlw	0
 30760  009638  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 30761                           
 30762                           ; BSR set to: 2
 30763                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 30764  00963A  0E0E               	movlw	14
 30765                           
 30766                           ; BSR set to: 2
 30767  00963C  0012               	return		;funcret
 30768  00963E                     __end_of_I2C1_DO_RESET:
 30769                           	callstack 0
 30770                           
 30771 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 30772 ;; Defined at:
 30773 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 30774 ;; Parameters:    Size  Location     Type
 30775 ;;		None
 30776 ;; Auto vars:     Size  Location     Type
 30777 ;;		None
 30778 ;; Return value:  Size  Location     Type
 30779 ;;                  1    wreg      enum E10442
 30780 ;; Registers used:
 30781 ;;		wreg, cstack
 30782 ;; Tracked objects:
 30783 ;;		On entry : 0/2
 30784 ;;		On exit  : 0/0
 30785 ;;		Unchanged: 0/0
 30786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30791 ;;Total ram usage:        0 bytes
 30792 ;; Hardware stack levels used: 1
 30793 ;; Hardware stack levels required when called: 5
 30794 ;; This function calls:
 30795 ;;		_I2C1_MasterSendNack
 30796 ;; This function is called by:
 30797 ;;		_I2C1_DO_RX
 30798 ;;		_I2C1_MasterFsm
 30799 ;; This function uses a non-reentrant model
 30800 ;;
 30801                           
 30802                           	psect	text142
 30803  009662                     __ptext142:
 30804                           	callstack 0
 30805  009662                     _I2C1_DO_RX_NACK_RESTART:
 30806                           	callstack 16
 30807                           
 30808                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 30809                           
 30810                           ; BSR set to: 2
 30811                           ;incstack = 0
 30812  009662  EC5D  F04B         	call	_I2C1_MasterSendNack	;wreg free
 30813                           
 30814                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 30815  009666  0E09               	movlw	9
 30816  009668  0012               	return		;funcret
 30817  00966A                     __end_of_I2C1_DO_RX_NACK_RESTART:
 30818                           	callstack 0
 30819                           
 30820 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 30821 ;; Defined at:
 30822 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 30823 ;; Parameters:    Size  Location     Type
 30824 ;;		None
 30825 ;; Auto vars:     Size  Location     Type
 30826 ;;		None
 30827 ;; Return value:  Size  Location     Type
 30828 ;;                  1    wreg      enum E10442
 30829 ;; Registers used:
 30830 ;;		wreg, cstack
 30831 ;; Tracked objects:
 30832 ;;		On entry : 0/2
 30833 ;;		On exit  : 0/0
 30834 ;;		Unchanged: 0/0
 30835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30840 ;;Total ram usage:        0 bytes
 30841 ;; Hardware stack levels used: 1
 30842 ;; Hardware stack levels required when called: 5
 30843 ;; This function calls:
 30844 ;;		_I2C1_MasterSendNack
 30845 ;; This function is called by:
 30846 ;;		_I2C1_DO_RX
 30847 ;;		_I2C1_MasterFsm
 30848 ;; This function uses a non-reentrant model
 30849 ;;
 30850                           
 30851                           	psect	text143
 30852  00966A                     __ptext143:
 30853                           	callstack 0
 30854  00966A                     _I2C1_DO_RX_NACK_STOP:
 30855                           	callstack 16
 30856                           
 30857                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 30858                           
 30859                           ;incstack = 0
 30860  00966A  EC5D  F04B         	call	_I2C1_MasterSendNack	;wreg free
 30861                           
 30862                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 30863  00966E  0E0A               	movlw	10
 30864  009670  0012               	return		;funcret
 30865  009672                     __end_of_I2C1_DO_RX_NACK_STOP:
 30866                           	callstack 0
 30867                           
 30868 ;; *************** function _I2C1_DO_RX_ACK *****************
 30869 ;; Defined at:
 30870 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 30871 ;; Parameters:    Size  Location     Type
 30872 ;;		None
 30873 ;; Auto vars:     Size  Location     Type
 30874 ;;		None
 30875 ;; Return value:  Size  Location     Type
 30876 ;;                  1    wreg      enum E10442
 30877 ;; Registers used:
 30878 ;;		wreg, cstack
 30879 ;; Tracked objects:
 30880 ;;		On entry : 3F/2
 30881 ;;		On exit  : 3F/2
 30882 ;;		Unchanged: 3F/0
 30883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30888 ;;Total ram usage:        0 bytes
 30889 ;; Hardware stack levels used: 1
 30890 ;; Hardware stack levels required when called: 5
 30891 ;; This function calls:
 30892 ;;		_I2C1_MasterSendAck
 30893 ;; This function is called by:
 30894 ;;		_I2C1_MasterFsm
 30895 ;; This function uses a non-reentrant model
 30896 ;;
 30897                           
 30898                           	psect	text144
 30899  009672                     __ptext144:
 30900                           	callstack 0
 30901  009672                     _I2C1_DO_RX_ACK:
 30902                           	callstack 16
 30903                           
 30904                           ; BSR set to: 2
 30905                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 30906                           
 30907                           ;incstack = 0
 30908  009672  EC5A  F04B         	call	_I2C1_MasterSendAck	;wreg free
 30909                           
 30910                           ; BSR set to: 2
 30911                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 30912  009676  0E05               	movlw	5
 30913                           
 30914                           ; BSR set to: 2
 30915  009678  0012               	return		;funcret
 30916  00967A                     __end_of_I2C1_DO_RX_ACK:
 30917                           	callstack 0
 30918                           
 30919 ;; *************** function _I2C1_DO_SEND_STOP *****************
 30920 ;; Defined at:
 30921 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 30922 ;; Parameters:    Size  Location     Type
 30923 ;;		None
 30924 ;; Auto vars:     Size  Location     Type
 30925 ;;		None
 30926 ;; Return value:  Size  Location     Type
 30927 ;;                  1    wreg      enum E10442
 30928 ;; Registers used:
 30929 ;;		wreg, cstack
 30930 ;; Tracked objects:
 30931 ;;		On entry : 0/2
 30932 ;;		On exit  : 0/0
 30933 ;;		Unchanged: 0/0
 30934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30939 ;;Total ram usage:        0 bytes
 30940 ;; Hardware stack levels used: 1
 30941 ;; Hardware stack levels required when called: 5
 30942 ;; This function calls:
 30943 ;;		_I2C1_MasterStop
 30944 ;; This function is called by:
 30945 ;;		_I2C1_DO_TX
 30946 ;;		_I2C1_DO_TX_EMPTY
 30947 ;;		_I2C1_DO_ADDRESS_NACK
 30948 ;;		_I2C1_MasterFsm
 30949 ;; This function uses a non-reentrant model
 30950 ;;
 30951                           
 30952                           	psect	text145
 30953  00967A                     __ptext145:
 30954                           	callstack 0
 30955  00967A                     _I2C1_DO_SEND_STOP:
 30956                           	callstack 15
 30957                           
 30958                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 30959                           
 30960                           ; BSR set to: 2
 30961                           ;incstack = 0
 30962  00967A  EC78  F04B         	call	_I2C1_MasterStop	;wreg free
 30963                           
 30964                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 30965  00967E  0E00               	movlw	0
 30966  009680  0012               	return		;funcret
 30967  009682                     __end_of_I2C1_DO_SEND_STOP:
 30968                           	callstack 0
 30969                           
 30970 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 30971 ;; Defined at:
 30972 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 30973 ;; Parameters:    Size  Location     Type
 30974 ;;		None
 30975 ;; Auto vars:     Size  Location     Type
 30976 ;;		None
 30977 ;; Return value:  Size  Location     Type
 30978 ;;                  1    wreg      enum E10442
 30979 ;; Registers used:
 30980 ;;		wreg, cstack
 30981 ;; Tracked objects:
 30982 ;;		On entry : 0/2
 30983 ;;		On exit  : 0/0
 30984 ;;		Unchanged: 0/0
 30985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30990 ;;Total ram usage:        0 bytes
 30991 ;; Hardware stack levels used: 1
 30992 ;; Hardware stack levels required when called: 5
 30993 ;; This function calls:
 30994 ;;		_I2C1_MasterEnableRestart
 30995 ;; This function is called by:
 30996 ;;		_I2C1_DO_TX_EMPTY
 30997 ;;		_I2C1_DO_ADDRESS_NACK
 30998 ;;		_I2C1_MasterFsm
 30999 ;; This function uses a non-reentrant model
 31000 ;;
 31001                           
 31002                           	psect	text146
 31003  009682                     __ptext146:
 31004                           	callstack 0
 31005  009682                     _I2C1_DO_SEND_RESTART:
 31006                           	callstack 15
 31007                           
 31008                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 31009                           
 31010                           ;incstack = 0
 31011  009682  EC7A  F04B         	call	_I2C1_MasterEnableRestart	;wreg free
 31012                           
 31013                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 31014  009686  0E01               	movlw	1
 31015  009688  0012               	return		;funcret
 31016  00968A                     __end_of_I2C1_DO_SEND_RESTART:
 31017                           	callstack 0
 31018                           
 31019 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 31020 ;; Defined at:
 31021 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 31022 ;; Parameters:    Size  Location     Type
 31023 ;;		None
 31024 ;; Auto vars:     Size  Location     Type
 31025 ;;		None
 31026 ;; Return value:  Size  Location     Type
 31027 ;;                  1    wreg      enum E10442
 31028 ;; Registers used:
 31029 ;;		wreg, cstack
 31030 ;; Tracked objects:
 31031 ;;		On entry : 0/2
 31032 ;;		On exit  : 0/0
 31033 ;;		Unchanged: 0/0
 31034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31039 ;;Total ram usage:        0 bytes
 31040 ;; Hardware stack levels used: 1
 31041 ;; Hardware stack levels required when called: 5
 31042 ;; This function calls:
 31043 ;;		_I2C1_MasterEnableRestart
 31044 ;; This function is called by:
 31045 ;;		_I2C1_DO_TX
 31046 ;;		_I2C1_MasterFsm
 31047 ;; This function uses a non-reentrant model
 31048 ;;
 31049                           
 31050                           	psect	text147
 31051  00968A                     __ptext147:
 31052                           	callstack 0
 31053  00968A                     _I2C1_DO_SEND_RESTART_WRITE:
 31054                           	callstack 15
 31055                           
 31056                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 31057                           
 31058                           ;incstack = 0
 31059  00968A  EC7A  F04B         	call	_I2C1_MasterEnableRestart	;wreg free
 31060                           
 31061                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 31062  00968E  0E02               	movlw	2
 31063  009690  0012               	return		;funcret
 31064  009692                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 31065                           	callstack 0
 31066                           
 31067 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 31068 ;; Defined at:
 31069 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 31070 ;; Parameters:    Size  Location     Type
 31071 ;;		None
 31072 ;; Auto vars:     Size  Location     Type
 31073 ;;		None
 31074 ;; Return value:  Size  Location     Type
 31075 ;;                  1    wreg      enum E10442
 31076 ;; Registers used:
 31077 ;;		wreg, cstack
 31078 ;; Tracked objects:
 31079 ;;		On entry : 0/2
 31080 ;;		On exit  : 0/0
 31081 ;;		Unchanged: 0/0
 31082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31087 ;;Total ram usage:        0 bytes
 31088 ;; Hardware stack levels used: 1
 31089 ;; Hardware stack levels required when called: 5
 31090 ;; This function calls:
 31091 ;;		_I2C1_MasterEnableRestart
 31092 ;; This function is called by:
 31093 ;;		_I2C1_DO_TX
 31094 ;;		_I2C1_MasterFsm
 31095 ;; This function uses a non-reentrant model
 31096 ;;
 31097                           
 31098                           	psect	text148
 31099  009692                     __ptext148:
 31100                           	callstack 0
 31101  009692                     _I2C1_DO_SEND_RESTART_READ:
 31102                           	callstack 15
 31103                           
 31104                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 31105                           
 31106                           ;incstack = 0
 31107  009692  EC7A  F04B         	call	_I2C1_MasterEnableRestart	;wreg free
 31108                           
 31109                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 31110  009696  0E01               	movlw	1
 31111  009698  0012               	return		;funcret
 31112  00969A                     __end_of_I2C1_DO_SEND_RESTART_READ:
 31113                           	callstack 0
 31114                           
 31115 ;; *************** function _I2C1_DO_RCEN *****************
 31116 ;; Defined at:
 31117 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 31118 ;; Parameters:    Size  Location     Type
 31119 ;;		None
 31120 ;; Auto vars:     Size  Location     Type
 31121 ;;		None
 31122 ;; Return value:  Size  Location     Type
 31123 ;;                  1    wreg      enum E10442
 31124 ;; Registers used:
 31125 ;;		wreg, cstack
 31126 ;; Tracked objects:
 31127 ;;		On entry : 3F/2
 31128 ;;		On exit  : 3F/2
 31129 ;;		Unchanged: 0/0
 31130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31135 ;;Total ram usage:        0 bytes
 31136 ;; Hardware stack levels used: 1
 31137 ;; Hardware stack levels required when called: 5
 31138 ;; This function calls:
 31139 ;;		_I2C1_MasterStartRx
 31140 ;; This function is called by:
 31141 ;;		_I2C1_MasterFsm
 31142 ;; This function uses a non-reentrant model
 31143 ;;
 31144                           
 31145                           	psect	text149
 31146  00963E                     __ptext149:
 31147                           	callstack 0
 31148  00963E                     _I2C1_DO_RCEN:
 31149                           	callstack 16
 31150                           
 31151                           ; BSR set to: 2
 31152                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 31153                           
 31154                           ;incstack = 0
 31155  00963E  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31156                           
 31157                           ; BSR set to: 2
 31158                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 31159  009640  EC72  F04B         	call	_I2C1_MasterStartRx	;wreg free
 31160                           
 31161                           ; BSR set to: 2
 31162                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 31163  009644  0E04               	movlw	4
 31164                           
 31165                           ; BSR set to: 2
 31166  009646  0012               	return		;funcret
 31167  009648                     __end_of_I2C1_DO_RCEN:
 31168                           	callstack 0
 31169                           
 31170 ;; *************** function _I2C1_DO_RX *****************
 31171 ;; Defined at:
 31172 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 31173 ;; Parameters:    Size  Location     Type
 31174 ;;		None
 31175 ;; Auto vars:     Size  Location     Type
 31176 ;;		None
 31177 ;; Return value:  Size  Location     Type
 31178 ;;                  1    wreg      enum E10442
 31179 ;; Registers used:
 31180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31181 ;; Tracked objects:
 31182 ;;		On entry : 3F/2
 31183 ;;		On exit  : 0/0
 31184 ;;		Unchanged: 0/0
 31185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31190 ;;Total ram usage:        2 bytes
 31191 ;; Hardware stack levels used: 1
 31192 ;; Hardware stack levels required when called: 7
 31193 ;; This function calls:
 31194 ;;		Absolute function
 31195 ;;		_I2C1_CallbackReturnReset
 31196 ;;		_I2C1_CallbackReturnStop
 31197 ;;		_I2C1_DO_RX_NACK_RESTART
 31198 ;;		_I2C1_DO_RX_NACK_STOP
 31199 ;;		_I2C1_MasterGetRxData
 31200 ;;		_I2C1_MasterSendAck
 31201 ;;		_rd1RegCompleteHandler
 31202 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31203 ;;		_rd2RegCompleteHandler
 31204 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31205 ;;		_rdBlkRegCompleteHandler
 31206 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31207 ;;		_wr1RegCompleteHandler
 31208 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31209 ;;		_wr2RegCompleteHandler
 31210 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31211 ;; This function is called by:
 31212 ;;		_I2C1_MasterFsm
 31213 ;; This function uses a non-reentrant model
 31214 ;;
 31215                           
 31216                           	psect	text150
 31217  008012                     __ptext150:
 31218                           	callstack 0
 31219  008012                     _I2C1_DO_RX:
 31220                           	callstack 14
 31221                           
 31222                           ; BSR set to: 2
 31223                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 31224                           
 31225                           ; BSR set to: 2
 31226                           ;incstack = 0
 31227  008012  EC70  F04B         	call	_I2C1_MasterGetRxData	;wreg free
 31228  008016  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 31229  00801A  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 31230  00801E  6EDF               	movwf	indf2,c
 31231                           
 31232                           ; BSR set to: 2
 31233  008020  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 31234  008022  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 31235                           
 31236                           ; BSR set to: 2
 31237                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 31238  008024  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 31239  008026  A0D8               	btfss	status,0,c
 31240  008028  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 31241  00802A  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 31242  00802C  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 31243  00802E  B4D8               	btfsc	status,2,c
 31244  008030  D004               	goto	l690
 31245                           
 31246                           ; BSR set to: 2
 31247                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 31248  008032  EC5A  F04B         	call	_I2C1_MasterSendAck	;wreg free
 31249                           
 31250                           ; BSR set to: 2
 31251                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 31252  008036  0E05               	movlw	5
 31253  008038  0012               	return	
 31254  00803A                     l690:
 31255                           
 31256                           ; BSR set to: 2
 31257                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 31258  00803A  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31259                           
 31260                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 31261  00803C  D006               	goto	l19586
 31262  00803E                     l19576:
 31263                           
 31264                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 31265  00803E  EC31  F04B         	call	_I2C1_DO_RX_NACK_RESTART	;wreg free
 31266  008042  0012               	return	
 31267  008044                     l19580:
 31268                           
 31269                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 31270  008044  EC35  F04B         	call	_I2C1_DO_RX_NACK_STOP	;wreg free
 31271  008048  0012               	return	
 31272  00804A                     l19586:
 31273                           
 31274                           ; BSR set to: 2
 31275  00804A  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 31276  00804E  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 31277  008052  D801               	call	u22428
 31278  008054  D009               	goto	u22429
 31279  008056                     u22428:
 31280  008056  0005               	push	
 31281  008058  6EFA               	movwf	pclath,c
 31282  00805A  513C               	movf	_I2C1_Status& (0+255),w,b
 31283  00805C  6EFD               	movwf	tosl,c
 31284  00805E  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 31285  008060  6EFE               	movwf	tosh,c
 31286  008062  6AFF               	clrf	tosu,c
 31287  008064  50FA               	movf	pclath,w,c
 31288  008066  0012               	return		;indir
 31289  008068                     u22429:
 31290  008068  6E1B               	movwf	??_I2C1_DO_RX^0,c
 31291  00806A  6A1C               	clrf	(??_I2C1_DO_RX+1)^0,c
 31292                           
 31293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31294                           ; Switch size 1, requested type "simple"
 31295                           ; Number of cases is 1, Range of values is 0 to 0
 31296                           ; switch strategies available:
 31297                           ; Name         Instructions Cycles
 31298                           ; simple_byte            4     3 (average)
 31299                           ;	Chosen strategy is simple_byte
 31300  00806C  501C               	movf	(??_I2C1_DO_RX+1)^0,w,c
 31301  00806E  0A00               	xorlw	0	; case 0
 31302  008070  A4D8               	btfss	status,2,c
 31303  008072  D7E8               	goto	l19580
 31304                           
 31305                           ; Switch size 1, requested type "simple"
 31306                           ; Number of cases is 4, Range of values is 1 to 4
 31307                           ; switch strategies available:
 31308                           ; Name         Instructions Cycles
 31309                           ; simple_byte           13     7 (average)
 31310                           ;	Chosen strategy is simple_byte
 31311  008074  501B               	movf	??_I2C1_DO_RX^0,w,c
 31312  008076  0A01               	xorlw	1	; case 1
 31313  008078  B4D8               	btfsc	status,2,c
 31314  00807A  D7E4               	goto	l19580
 31315  00807C  0A03               	xorlw	3	; case 2
 31316  00807E  B4D8               	btfsc	status,2,c
 31317  008080  D7DE               	goto	l19576
 31318  008082  0A01               	xorlw	1	; case 3
 31319  008084  B4D8               	btfsc	status,2,c
 31320  008086  D7DB               	goto	l19576
 31321  008088  0A07               	xorlw	7	; case 4
 31322  00808A  D7DC               	goto	l19580
 31323  00808C                     __end_of_I2C1_DO_RX:
 31324                           	callstack 0
 31325                           
 31326 ;; *************** function _I2C1_DO_TX *****************
 31327 ;; Defined at:
 31328 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 31329 ;; Parameters:    Size  Location     Type
 31330 ;;		None
 31331 ;; Auto vars:     Size  Location     Type
 31332 ;;		None
 31333 ;; Return value:  Size  Location     Type
 31334 ;;                  1    wreg      enum E10442
 31335 ;; Registers used:
 31336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31337 ;; Tracked objects:
 31338 ;;		On entry : 3F/2
 31339 ;;		On exit  : 0/0
 31340 ;;		Unchanged: 0/0
 31341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31346 ;;Total ram usage:        2 bytes
 31347 ;; Hardware stack levels used: 1
 31348 ;; Hardware stack levels required when called: 7
 31349 ;; This function calls:
 31350 ;;		Absolute function
 31351 ;;		_I2C1_CallbackReturnReset
 31352 ;;		_I2C1_CallbackReturnStop
 31353 ;;		_I2C1_DO_SEND_RESTART_READ
 31354 ;;		_I2C1_DO_SEND_RESTART_WRITE
 31355 ;;		_I2C1_DO_SEND_STOP
 31356 ;;		_I2C1_MasterIsNack
 31357 ;;		_I2C1_MasterSendTxData
 31358 ;;		_rd1RegCompleteHandler
 31359 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31360 ;;		_rd2RegCompleteHandler
 31361 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31362 ;;		_rdBlkRegCompleteHandler
 31363 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31364 ;;		_wr1RegCompleteHandler
 31365 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31366 ;;		_wr2RegCompleteHandler
 31367 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31368 ;; This function is called by:
 31369 ;;		_I2C1_MasterFsm
 31370 ;; This function uses a non-reentrant model
 31371 ;;
 31372                           
 31373                           	psect	text151
 31374  007B72                     __ptext151:
 31375                           	callstack 0
 31376  007B72                     _I2C1_DO_TX:
 31377                           	callstack 14
 31378                           
 31379                           ; BSR set to: 2
 31380                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 31381                           
 31382                           ;incstack = 0
 31383  007B72  ECE1  F04A         	call	_I2C1_MasterIsNack	;wreg free
 31384  007B76  0900               	iorlw	0
 31385  007B78  A4D8               	btfss	status,2,c
 31386  007B7A  D00A               	goto	l19546
 31387  007B7C  D02A               	goto	l674
 31388  007B7E                     l19532:
 31389                           
 31390                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 31391  007B7E  EC49  F04B         	call	_I2C1_DO_SEND_RESTART_READ	;wreg free
 31392  007B82  0012               	return	
 31393  007B84                     l19536:
 31394                           
 31395                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 31396  007B84  EC45  F04B         	call	_I2C1_DO_SEND_RESTART_WRITE	;wreg free
 31397  007B88  0012               	return	
 31398  007B8A                     l19540:
 31399                           
 31400                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 31401  007B8A  EC3D  F04B         	call	_I2C1_DO_SEND_STOP	;wreg free
 31402  007B8E  0012               	return	
 31403  007B90                     l19546:
 31404                           
 31405                           ; BSR set to: 2
 31406  007B90  C24E  F019         	movff	_I2C1_Status+18,I2C1_CallbackReturnReset@funPtr
 31407  007B94  C24F  F01A         	movff	_I2C1_Status+19,I2C1_CallbackReturnReset@funPtr+1
 31408  007B98  D801               	call	u22398
 31409  007B9A  D009               	goto	u22399
 31410  007B9C                     u22398:
 31411  007B9C  0005               	push	
 31412  007B9E  6EFA               	movwf	pclath,c
 31413  007BA0  5142               	movf	(_I2C1_Status+6)& (0+255),w,b
 31414  007BA2  6EFD               	movwf	tosl,c
 31415  007BA4  5143               	movf	(_I2C1_Status+7)& (0+255),w,b
 31416  007BA6  6EFE               	movwf	tosh,c
 31417  007BA8  6AFF               	clrf	tosu,c
 31418  007BAA  50FA               	movf	pclath,w,c
 31419  007BAC  0012               	return		;indir
 31420  007BAE                     u22399:
 31421  007BAE  6E1B               	movwf	??_I2C1_DO_TX^0,c
 31422  007BB0  6A1C               	clrf	(??_I2C1_DO_TX+1)^0,c
 31423                           
 31424                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31425                           ; Switch size 1, requested type "simple"
 31426                           ; Number of cases is 1, Range of values is 0 to 0
 31427                           ; switch strategies available:
 31428                           ; Name         Instructions Cycles
 31429                           ; simple_byte            4     3 (average)
 31430                           ;	Chosen strategy is simple_byte
 31431  007BB2  501C               	movf	(??_I2C1_DO_TX+1)^0,w,c
 31432  007BB4  0A00               	xorlw	0	; case 0
 31433  007BB6  A4D8               	btfss	status,2,c
 31434  007BB8  D7E8               	goto	l19540
 31435                           
 31436                           ; Switch size 1, requested type "simple"
 31437                           ; Number of cases is 4, Range of values is 1 to 4
 31438                           ; switch strategies available:
 31439                           ; Name         Instructions Cycles
 31440                           ; simple_byte           13     7 (average)
 31441                           ;	Chosen strategy is simple_byte
 31442  007BBA  501B               	movf	??_I2C1_DO_TX^0,w,c
 31443  007BBC  0A01               	xorlw	1	; case 1
 31444  007BBE  B4D8               	btfsc	status,2,c
 31445  007BC0  D7E4               	goto	l19540
 31446  007BC2  0A03               	xorlw	3	; case 2
 31447  007BC4  B4D8               	btfsc	status,2,c
 31448  007BC6  D7DB               	goto	l19532
 31449  007BC8  0A01               	xorlw	1	; case 3
 31450  007BCA  B4D8               	btfsc	status,2,c
 31451  007BCC  D7DB               	goto	l19536
 31452  007BCE  0A07               	xorlw	7	; case 4
 31453  007BD0  D7DC               	goto	l19540
 31454  007BD2                     l674:
 31455                           
 31456                           ; BSR set to: 2
 31457                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 31458  007BD2  915F               	bcf	(_I2C1_Status+35)& (0+255),0,b
 31459                           
 31460                           ; BSR set to: 2
 31461                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 31462  007BD4  C259  FFD9         	movff	_I2C1_Status+29,fsr2l
 31463  007BD8  C25A  FFDA         	movff	_I2C1_Status+30,fsr2h
 31464  007BDC  4B59               	infsnz	(_I2C1_Status+29)& (0+255),f,b
 31465  007BDE  2B5A               	incf	(_I2C1_Status+30)& (0+255),f,b
 31466  007BE0  50DF               	movf	indf2,w,c
 31467  007BE2  EC4D  F04B         	call	_I2C1_MasterSendTxData
 31468                           
 31469                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 31470  007BE6  0102               	movlb	2	; () banked
 31471  007BE8  075B               	decf	(_I2C1_Status+31)& (0+255),f,b
 31472  007BEA  A0D8               	btfss	status,0,c
 31473  007BEC  075C               	decf	(_I2C1_Status+32)& (0+255),f,b
 31474  007BEE  515B               	movf	(_I2C1_Status+31)& (0+255),w,b
 31475  007BF0  115C               	iorwf	(_I2C1_Status+32)& (0+255),w,b
 31476  007BF2  A4D8               	btfss	status,2,c
 31477  007BF4  D002               	goto	l19554
 31478                           
 31479                           ; BSR set to: 2
 31480  007BF6  0E06               	movlw	6
 31481  007BF8  0012               	return	
 31482  007BFA                     l19554:
 31483                           
 31484                           ; BSR set to: 2
 31485  007BFA  0E03               	movlw	3
 31486  007BFC  0012               	return		;funcret
 31487  007BFE                     __end_of_I2C1_DO_TX:
 31488                           	callstack 0
 31489                           
 31490 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 31491 ;; Defined at:
 31492 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 31493 ;; Parameters:    Size  Location     Type
 31494 ;;		None
 31495 ;; Auto vars:     Size  Location     Type
 31496 ;;		None
 31497 ;; Return value:  Size  Location     Type
 31498 ;;                  1    wreg      enum E10442
 31499 ;; Registers used:
 31500 ;;		wreg, status,2, status,0, cstack
 31501 ;; Tracked objects:
 31502 ;;		On entry : 3F/2
 31503 ;;		On exit  : 0/0
 31504 ;;		Unchanged: 0/0
 31505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31510 ;;Total ram usage:        0 bytes
 31511 ;; Hardware stack levels used: 1
 31512 ;; Hardware stack levels required when called: 5
 31513 ;; This function calls:
 31514 ;;		_I2C1_MasterSendTxData
 31515 ;; This function is called by:
 31516 ;;		_I2C1_MasterFsm
 31517 ;; This function uses a non-reentrant model
 31518 ;;
 31519                           
 31520                           	psect	text152
 31521  0095A6                     __ptext152:
 31522                           	callstack 0
 31523  0095A6                     _I2C1_DO_SEND_ADR_WRITE:
 31524                           	callstack 16
 31525                           
 31526                           ; BSR set to: 2
 31527                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 31528                           
 31529                           ;incstack = 0
 31530  0095A6  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 31531                           
 31532                           ; BSR set to: 2
 31533                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 31534  0095A8  5158               	movf	(_I2C1_Status+28)& (0+255),w,b
 31535  0095AA  2558               	addwf	(_I2C1_Status+28)& (0+255),w,b
 31536  0095AC  EC4D  F04B         	call	_I2C1_MasterSendTxData
 31537                           
 31538                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 31539  0095B0  0E03               	movlw	3
 31540  0095B2  0012               	return		;funcret
 31541  0095B4                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 31542                           	callstack 0
 31543                           
 31544 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 31545 ;; Defined at:
 31546 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 31547 ;; Parameters:    Size  Location     Type
 31548 ;;		None
 31549 ;; Auto vars:     Size  Location     Type
 31550 ;;		None
 31551 ;; Return value:  Size  Location     Type
 31552 ;;                  1    wreg      enum E10442
 31553 ;; Registers used:
 31554 ;;		wreg, status,0, cstack
 31555 ;; Tracked objects:
 31556 ;;		On entry : 3F/2
 31557 ;;		On exit  : 0/0
 31558 ;;		Unchanged: 0/0
 31559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31564 ;;Total ram usage:        0 bytes
 31565 ;; Hardware stack levels used: 1
 31566 ;; Hardware stack levels required when called: 5
 31567 ;; This function calls:
 31568 ;;		_I2C1_MasterSendTxData
 31569 ;; This function is called by:
 31570 ;;		_I2C1_MasterFsm
 31571 ;; This function uses a non-reentrant model
 31572 ;;
 31573                           
 31574                           	psect	text153
 31575  0095B4                     __ptext153:
 31576                           	callstack 0
 31577  0095B4                     _I2C1_DO_SEND_ADR_READ:
 31578                           	callstack 16
 31579                           
 31580                           ; BSR set to: 2
 31581                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 31582                           
 31583                           ;incstack = 0
 31584  0095B4  815F               	bsf	(_I2C1_Status+35)& (0+255),0,b
 31585                           
 31586                           ; BSR set to: 2
 31587                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 31588  0095B6  80D8               	bsf	status,0,c
 31589  0095B8  3558               	rlcf	(_I2C1_Status+28)& (0+255),w,b
 31590  0095BA  EC4D  F04B         	call	_I2C1_MasterSendTxData
 31591                           
 31592                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 31593  0095BE  0E05               	movlw	5
 31594  0095C0  0012               	return		;funcret
 31595  0095C2                     __end_of_I2C1_DO_SEND_ADR_READ:
 31596                           	callstack 0
 31597                           
 31598 ;; *************** function _I2C1_DO_IDLE *****************
 31599 ;; Defined at:
 31600 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 31601 ;; Parameters:    Size  Location     Type
 31602 ;;		None
 31603 ;; Auto vars:     Size  Location     Type
 31604 ;;		None
 31605 ;; Return value:  Size  Location     Type
 31606 ;;                  1    wreg      enum E10442
 31607 ;; Registers used:
 31608 ;;		wreg, status,2
 31609 ;; Tracked objects:
 31610 ;;		On entry : 3F/2
 31611 ;;		On exit  : 3F/2
 31612 ;;		Unchanged: 0/0
 31613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31618 ;;Total ram usage:        0 bytes
 31619 ;; Hardware stack levels used: 1
 31620 ;; Hardware stack levels required when called: 4
 31621 ;; This function calls:
 31622 ;;		Nothing
 31623 ;; This function is called by:
 31624 ;;		_I2C1_MasterFsm
 31625 ;; This function uses a non-reentrant model
 31626 ;;
 31627                           
 31628                           	psect	text154
 31629  009648                     __ptext154:
 31630                           	callstack 0
 31631  009648                     _I2C1_DO_IDLE:
 31632                           	callstack 17
 31633                           
 31634                           ; BSR set to: 2
 31635                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 31636                           
 31637                           ;incstack = 0
 31638  009648  935F               	bcf	(_I2C1_Status+35)& (0+255),1,b
 31639                           
 31640                           ; BSR set to: 2
 31641                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 31642  00964A  0E00               	movlw	0
 31643  00964C  6F5E               	movwf	(_I2C1_Status+34)& (0+255),b
 31644                           
 31645                           ; BSR set to: 2
 31646                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 31647  00964E  0E0E               	movlw	14
 31648                           
 31649                           ; BSR set to: 2
 31650  009650  0012               	return		;funcret
 31651  009652                     __end_of_I2C1_DO_IDLE:
 31652                           	callstack 0
 31653                           
 31654 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 31655 ;; Defined at:
 31656 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 31657 ;; Parameters:    Size  Location     Type
 31658 ;;		None
 31659 ;; Auto vars:     Size  Location     Type
 31660 ;;		None
 31661 ;; Return value:  Size  Location     Type
 31662 ;;                  1    wreg      enum E10442
 31663 ;; Registers used:
 31664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 31665 ;; Tracked objects:
 31666 ;;		On entry : 3F/2
 31667 ;;		On exit  : 0/0
 31668 ;;		Unchanged: 0/0
 31669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31674 ;;Total ram usage:        2 bytes
 31675 ;; Hardware stack levels used: 1
 31676 ;; Hardware stack levels required when called: 7
 31677 ;; This function calls:
 31678 ;;		Absolute function
 31679 ;;		_I2C1_CallbackReturnReset
 31680 ;;		_I2C1_CallbackReturnStop
 31681 ;;		_I2C1_DO_SEND_RESTART
 31682 ;;		_I2C1_DO_SEND_STOP
 31683 ;;		_I2C1_MasterSetIrq
 31684 ;;		_rd1RegCompleteHandler
 31685 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 31686 ;;		_rd2RegCompleteHandler
 31687 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 31688 ;;		_rdBlkRegCompleteHandler
 31689 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 31690 ;;		_wr1RegCompleteHandler
 31691 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 31692 ;;		_wr2RegCompleteHandler
 31693 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 31694 ;; This function is called by:
 31695 ;;		_I2C1_MasterFsm
 31696 ;; This function uses a non-reentrant model
 31697 ;;
 31698                           
 31699                           	psect	text155
 31700  0085BE                     __ptext155:
 31701                           	callstack 0
 31702  0085BE                     _I2C1_DO_TX_EMPTY:
 31703                           	callstack 14
 31704                           
 31705                           ; BSR set to: 2
 31706                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 31707                           
 31708                           ; BSR set to: 2
 31709                           ;incstack = 0
 31710  0085BE  875F               	bsf	(_I2C1_Status+35)& (0+255),3,b
 31711                           
 31712                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 31713  0085C0  D00A               	goto	l19618
 31714  0085C2                     l19602:
 31715                           
 31716                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 31717  0085C2  EC41  F04B         	call	_I2C1_DO_SEND_RESTART	;wreg free
 31718  0085C6  0012               	return	
 31719  0085C8                     l19606:
 31720                           
 31721                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 31722  0085C8  EC57  F04B         	call	_I2C1_MasterSetIrq	;wreg free
 31723                           
 31724                           ; BSR set to: 14
 31725                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 31726  0085CC  0E03               	movlw	3
 31727  0085CE  0012               	return	
 31728  0085D0                     l19612:
 31729                           
 31730                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 31731  0085D0  EC3D  F04B         	call	_I2C1_DO_SEND_STOP	;wreg free
 31732  0085D4  0012               	return	
 31733  0085D6                     l19618:
 31734                           
 31735                           ; BSR set to: 2
 31736  0085D6  C248  F019         	movff	_I2C1_Status+12,I2C1_CallbackReturnReset@funPtr
 31737  0085DA  C249  F01A         	movff	_I2C1_Status+13,I2C1_CallbackReturnReset@funPtr+1
 31738  0085DE  D801               	call	u22438
 31739  0085E0  D009               	goto	u22439
 31740  0085E2                     u22438:
 31741  0085E2  0005               	push	
 31742  0085E4  6EFA               	movwf	pclath,c
 31743  0085E6  513C               	movf	_I2C1_Status& (0+255),w,b
 31744  0085E8  6EFD               	movwf	tosl,c
 31745  0085EA  513D               	movf	(_I2C1_Status+1)& (0+255),w,b
 31746  0085EC  6EFE               	movwf	tosh,c
 31747  0085EE  6AFF               	clrf	tosu,c
 31748  0085F0  50FA               	movf	pclath,w,c
 31749  0085F2  0012               	return		;indir
 31750  0085F4                     u22439:
 31751  0085F4  6E1B               	movwf	??_I2C1_DO_TX_EMPTY^0,c
 31752  0085F6  6A1C               	clrf	(??_I2C1_DO_TX_EMPTY+1)^0,c
 31753                           
 31754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31755                           ; Switch size 1, requested type "simple"
 31756                           ; Number of cases is 1, Range of values is 0 to 0
 31757                           ; switch strategies available:
 31758                           ; Name         Instructions Cycles
 31759                           ; simple_byte            4     3 (average)
 31760                           ;	Chosen strategy is simple_byte
 31761  0085F8  501C               	movf	(??_I2C1_DO_TX_EMPTY+1)^0,w,c
 31762  0085FA  0A00               	xorlw	0	; case 0
 31763  0085FC  A4D8               	btfss	status,2,c
 31764  0085FE  D7E8               	goto	l19612
 31765                           
 31766                           ; Switch size 1, requested type "simple"
 31767                           ; Number of cases is 4, Range of values is 1 to 4
 31768                           ; switch strategies available:
 31769                           ; Name         Instructions Cycles
 31770                           ; simple_byte           13     7 (average)
 31771                           ;	Chosen strategy is simple_byte
 31772  008600  501B               	movf	??_I2C1_DO_TX_EMPTY^0,w,c
 31773  008602  0A01               	xorlw	1	; case 1
 31774  008604  B4D8               	btfsc	status,2,c
 31775  008606  D7E4               	goto	l19612
 31776  008608  0A03               	xorlw	3	; case 2
 31777  00860A  B4D8               	btfsc	status,2,c
 31778  00860C  D7DA               	goto	l19602
 31779  00860E  0A01               	xorlw	1	; case 3
 31780  008610  B4D8               	btfsc	status,2,c
 31781  008612  D7D7               	goto	l19602
 31782  008614  0A07               	xorlw	7	; case 4
 31783  008616  B4D8               	btfsc	status,2,c
 31784  008618  D7D7               	goto	l19606
 31785  00861A  D7DA               	goto	l19612
 31786  00861C                     __end_of_I2C1_DO_TX_EMPTY:
 31787                           	callstack 0
 31788                           
 31789 ;; *************** function _I2C1_MasterSetIrq *****************
 31790 ;; Defined at:
 31791 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 31792 ;; Parameters:    Size  Location     Type
 31793 ;;		None
 31794 ;; Auto vars:     Size  Location     Type
 31795 ;;		None
 31796 ;; Return value:  Size  Location     Type
 31797 ;;                  1    wreg      void 
 31798 ;; Registers used:
 31799 ;;		None
 31800 ;; Tracked objects:
 31801 ;;		On entry : 0/2
 31802 ;;		On exit  : 3F/E
 31803 ;;		Unchanged: 0/0
 31804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31809 ;;Total ram usage:        0 bytes
 31810 ;; Hardware stack levels used: 1
 31811 ;; Hardware stack levels required when called: 4
 31812 ;; This function calls:
 31813 ;;		Nothing
 31814 ;; This function is called by:
 31815 ;;		_I2C1_DO_TX_EMPTY
 31816 ;; This function uses a non-reentrant model
 31817 ;;
 31818                           
 31819                           	psect	text156
 31820  0096AE                     __ptext156:
 31821                           	callstack 0
 31822  0096AE                     _I2C1_MasterSetIrq:
 31823                           	callstack 16
 31824                           
 31825                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 31826                           
 31827                           ;incstack = 0
 31828  0096AE  010E               	movlb	14	; () banked
 31829  0096B0  81CD               	bsf	205,0,b	;volatile
 31830                           
 31831                           ; BSR set to: 14
 31832  0096B2  0012               	return		;funcret
 31833  0096B4                     __end_of_I2C1_MasterSetIrq:
 31834                           	callstack 0
 31835                           
 31836 ;; *************** function _I2C1_MasterIsNack *****************
 31837 ;; Defined at:
 31838 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 31839 ;; Parameters:    Size  Location     Type
 31840 ;;		None
 31841 ;; Auto vars:     Size  Location     Type
 31842 ;;		None
 31843 ;; Return value:  Size  Location     Type
 31844 ;;                  1    wreg      _Bool 
 31845 ;; Registers used:
 31846 ;;		wreg
 31847 ;; Tracked objects:
 31848 ;;		On entry : 3F/2
 31849 ;;		On exit  : 3F/2
 31850 ;;		Unchanged: 3F/0
 31851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31856 ;;Total ram usage:        0 bytes
 31857 ;; Hardware stack levels used: 1
 31858 ;; Hardware stack levels required when called: 4
 31859 ;; This function calls:
 31860 ;;		Nothing
 31861 ;; This function is called by:
 31862 ;;		_I2C1_MasterFsm
 31863 ;;		_I2C1_DO_TX
 31864 ;; This function uses a non-reentrant model
 31865 ;;
 31866                           
 31867                           	psect	text157
 31868  0095C2                     __ptext157:
 31869                           	callstack 0
 31870  0095C2                     _I2C1_MasterIsNack:
 31871                           	callstack 17
 31872                           
 31873                           ; BSR set to: 2
 31874                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 31875                           
 31876                           ; BSR set to: 14
 31877                           ;incstack = 0
 31878  0095C2  AC97               	btfss	151,6,c	;volatile
 31879  0095C4  D002               	goto	u22370
 31880  0095C6  0E01               	movlw	1
 31881  0095C8  0012               	return	
 31882  0095CA                     u22370:
 31883  0095CA  0E00               	movlw	0
 31884                           
 31885                           ; BSR set to: 2
 31886  0095CC  0012               	return		;funcret
 31887  0095CE                     __end_of_I2C1_MasterIsNack:
 31888                           	callstack 0
 31889                           
 31890 ;; *************** function _I2C1_MasterSendTxData *****************
 31891 ;; Defined at:
 31892 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 31893 ;; Parameters:    Size  Location     Type
 31894 ;;  data            1    wreg     unsigned char 
 31895 ;; Auto vars:     Size  Location     Type
 31896 ;;  data            1   15[COMRAM] unsigned char 
 31897 ;; Return value:  Size  Location     Type
 31898 ;;                  1    wreg      void 
 31899 ;; Registers used:
 31900 ;;		wreg
 31901 ;; Tracked objects:
 31902 ;;		On entry : 3F/2
 31903 ;;		On exit  : 0/0
 31904 ;;		Unchanged: 0/0
 31905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31910 ;;Total ram usage:        1 bytes
 31911 ;; Hardware stack levels used: 1
 31912 ;; Hardware stack levels required when called: 4
 31913 ;; This function calls:
 31914 ;;		Nothing
 31915 ;; This function is called by:
 31916 ;;		_I2C1_DO_SEND_ADR_READ
 31917 ;;		_I2C1_DO_SEND_ADR_WRITE
 31918 ;;		_I2C1_DO_TX
 31919 ;; This function uses a non-reentrant model
 31920 ;;
 31921                           
 31922                           	psect	text158
 31923  00969A                     __ptext158:
 31924                           	callstack 0
 31925  00969A                     _I2C1_MasterSendTxData:
 31926                           	callstack 16
 31927                           
 31928                           ; BSR set to: 2
 31929                           ;incstack = 0
 31930                           ;I2C1_MasterSendTxData@data stored from wreg
 31931  00969A  6E10               	movwf	I2C1_MasterSendTxData@data^0,c
 31932                           
 31933                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 31934  00969C  C010  FF92         	movff	I2C1_MasterSendTxData@data,3986	;volatile
 31935  0096A0  0012               	return		;funcret
 31936  0096A2                     __end_of_I2C1_MasterSendTxData:
 31937                           	callstack 0
 31938                           
 31939 ;; *************** function _I2C1_MasterSendAck *****************
 31940 ;; Defined at:
 31941 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 31942 ;; Parameters:    Size  Location     Type
 31943 ;;		None
 31944 ;; Auto vars:     Size  Location     Type
 31945 ;;		None
 31946 ;; Return value:  Size  Location     Type
 31947 ;;                  1    wreg      void 
 31948 ;; Registers used:
 31949 ;;		None
 31950 ;; Tracked objects:
 31951 ;;		On entry : 3F/2
 31952 ;;		On exit  : 3F/2
 31953 ;;		Unchanged: 3F/0
 31954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31959 ;;Total ram usage:        0 bytes
 31960 ;; Hardware stack levels used: 1
 31961 ;; Hardware stack levels required when called: 4
 31962 ;; This function calls:
 31963 ;;		Nothing
 31964 ;; This function is called by:
 31965 ;;		_I2C1_DO_RX
 31966 ;;		_I2C1_DO_RX_ACK
 31967 ;; This function uses a non-reentrant model
 31968 ;;
 31969                           
 31970                           	psect	text159
 31971  0096B4                     __ptext159:
 31972                           	callstack 0
 31973  0096B4                     _I2C1_MasterSendAck:
 31974                           	callstack 16
 31975                           
 31976                           ; BSR set to: 2
 31977                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 31978                           
 31979                           ;incstack = 0
 31980  0096B4  9A97               	bcf	151,5,c	;volatile
 31981                           
 31982                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 31983  0096B6  8897               	bsf	151,4,c	;volatile
 31984                           
 31985                           ; BSR set to: 2
 31986  0096B8  0012               	return		;funcret
 31987  0096BA                     __end_of_I2C1_MasterSendAck:
 31988                           	callstack 0
 31989                           
 31990 ;; *************** function _I2C1_MasterGetRxData *****************
 31991 ;; Defined at:
 31992 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 31993 ;; Parameters:    Size  Location     Type
 31994 ;;		None
 31995 ;; Auto vars:     Size  Location     Type
 31996 ;;		None
 31997 ;; Return value:  Size  Location     Type
 31998 ;;                  1    wreg      unsigned char 
 31999 ;; Registers used:
 32000 ;;		wreg, status,2
 32001 ;; Tracked objects:
 32002 ;;		On entry : 3F/2
 32003 ;;		On exit  : 3F/2
 32004 ;;		Unchanged: 3F/0
 32005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32010 ;;Total ram usage:        0 bytes
 32011 ;; Hardware stack levels used: 1
 32012 ;; Hardware stack levels required when called: 4
 32013 ;; This function calls:
 32014 ;;		Nothing
 32015 ;; This function is called by:
 32016 ;;		_I2C1_DO_RX
 32017 ;; This function uses a non-reentrant model
 32018 ;;
 32019                           
 32020                           	psect	text160
 32021  0096E0                     __ptext160:
 32022                           	callstack 0
 32023  0096E0                     _I2C1_MasterGetRxData:
 32024                           	callstack 16
 32025                           
 32026                           ; BSR set to: 2
 32027                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 32028                           
 32029                           ; BSR set to: 2
 32030                           ;incstack = 0
 32031  0096E0  5092               	movf	146,w,c	;volatile
 32032                           
 32033                           ; BSR set to: 2
 32034  0096E2  0012               	return		;funcret
 32035  0096E4                     __end_of_I2C1_MasterGetRxData:
 32036                           	callstack 0
 32037                           
 32038 ;; *************** function _I2C1_MasterSendNack *****************
 32039 ;; Defined at:
 32040 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 32041 ;; Parameters:    Size  Location     Type
 32042 ;;		None
 32043 ;; Auto vars:     Size  Location     Type
 32044 ;;		None
 32045 ;; Return value:  Size  Location     Type
 32046 ;;                  1    wreg      void 
 32047 ;; Registers used:
 32048 ;;		None
 32049 ;; Tracked objects:
 32050 ;;		On entry : 0/2
 32051 ;;		On exit  : 0/0
 32052 ;;		Unchanged: 0/0
 32053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32058 ;;Total ram usage:        0 bytes
 32059 ;; Hardware stack levels used: 1
 32060 ;; Hardware stack levels required when called: 4
 32061 ;; This function calls:
 32062 ;;		Nothing
 32063 ;; This function is called by:
 32064 ;;		_I2C1_DO_RX_NACK_STOP
 32065 ;;		_I2C1_DO_RX_NACK_RESTART
 32066 ;; This function uses a non-reentrant model
 32067 ;;
 32068                           
 32069                           	psect	text161
 32070  0096BA                     __ptext161:
 32071                           	callstack 0
 32072  0096BA                     _I2C1_MasterSendNack:
 32073                           	callstack 16
 32074                           
 32075                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 32076                           
 32077                           ; BSR set to: 2
 32078                           ;incstack = 0
 32079  0096BA  8A97               	bsf	151,5,c	;volatile
 32080                           
 32081                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 32082  0096BC  8897               	bsf	151,4,c	;volatile
 32083  0096BE  0012               	return		;funcret
 32084  0096C0                     __end_of_I2C1_MasterSendNack:
 32085                           	callstack 0
 32086                           
 32087 ;; *************** function _I2C1_MasterStartRx *****************
 32088 ;; Defined at:
 32089 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 32090 ;; Parameters:    Size  Location     Type
 32091 ;;		None
 32092 ;; Auto vars:     Size  Location     Type
 32093 ;;		None
 32094 ;; Return value:  Size  Location     Type
 32095 ;;                  1    wreg      void 
 32096 ;; Registers used:
 32097 ;;		None
 32098 ;; Tracked objects:
 32099 ;;		On entry : 3F/2
 32100 ;;		On exit  : 3F/2
 32101 ;;		Unchanged: 3F/0
 32102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;Total ram usage:        0 bytes
 32108 ;; Hardware stack levels used: 1
 32109 ;; Hardware stack levels required when called: 4
 32110 ;; This function calls:
 32111 ;;		Nothing
 32112 ;; This function is called by:
 32113 ;;		_I2C1_DO_RCEN
 32114 ;; This function uses a non-reentrant model
 32115 ;;
 32116                           
 32117                           	psect	text162
 32118  0096E4                     __ptext162:
 32119                           	callstack 0
 32120  0096E4                     _I2C1_MasterStartRx:
 32121                           	callstack 16
 32122                           
 32123                           ; BSR set to: 2
 32124                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 32125                           
 32126                           ;incstack = 0
 32127  0096E4  8697               	bsf	151,3,c	;volatile
 32128                           
 32129                           ; BSR set to: 2
 32130  0096E6  0012               	return		;funcret
 32131  0096E8                     __end_of_I2C1_MasterStartRx:
 32132                           	callstack 0
 32133                           
 32134 ;; *************** function _I2C1_CallbackReturnReset *****************
 32135 ;; Defined at:
 32136 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 32137 ;; Parameters:    Size  Location     Type
 32138 ;;  funPtr          2   24[COMRAM] PTR void 
 32139 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32140 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32141 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32142 ;; Auto vars:     Size  Location     Type
 32143 ;;		None
 32144 ;; Return value:  Size  Location     Type
 32145 ;;                  1    wreg      enum E360
 32146 ;; Registers used:
 32147 ;;		wreg
 32148 ;; Tracked objects:
 32149 ;;		On entry : 3F/2
 32150 ;;		On exit  : 3F/2
 32151 ;;		Unchanged: 3F/0
 32152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32157 ;;Total ram usage:        2 bytes
 32158 ;; Hardware stack levels used: 1
 32159 ;; Hardware stack levels required when called: 4
 32160 ;; This function calls:
 32161 ;;		Nothing
 32162 ;; This function is called by:
 32163 ;;		_I2C1_Open
 32164 ;;		_I2C1_DO_TX
 32165 ;;		_I2C1_DO_RX
 32166 ;;		_I2C1_DO_TX_EMPTY
 32167 ;;		_I2C1_DO_ADDRESS_NACK
 32168 ;; This function uses a non-reentrant model
 32169 ;;
 32170                           
 32171                           	psect	text163
 32172  0096E8                     __ptext163:
 32173                           	callstack 0
 32174  0096E8                     _I2C1_CallbackReturnReset:
 32175                           	callstack 16
 32176                           
 32177                           ; BSR set to: 2
 32178                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 32179                           
 32180                           ; BSR set to: 2
 32181                           ;incstack = 0
 32182  0096E8  0E05               	movlw	5
 32183                           
 32184                           ; BSR set to: 2
 32185  0096EA  0012               	return		;funcret
 32186  0096EC                     __end_of_I2C1_CallbackReturnReset:
 32187                           	callstack 0
 32188                           
 32189 ;; *************** function _I2C1_CallbackReturnStop *****************
 32190 ;; Defined at:
 32191 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 32192 ;; Parameters:    Size  Location     Type
 32193 ;;  funPtr          2   24[COMRAM] PTR void 
 32194 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32195 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32196 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32197 ;; Auto vars:     Size  Location     Type
 32198 ;;		None
 32199 ;; Return value:  Size  Location     Type
 32200 ;;                  1    wreg      enum E360
 32201 ;; Registers used:
 32202 ;;		wreg
 32203 ;; Tracked objects:
 32204 ;;		On entry : 3F/2
 32205 ;;		On exit  : 3F/2
 32206 ;;		Unchanged: 3F/0
 32207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32212 ;;Total ram usage:        2 bytes
 32213 ;; Hardware stack levels used: 1
 32214 ;; Hardware stack levels required when called: 4
 32215 ;; This function calls:
 32216 ;;		Nothing
 32217 ;; This function is called by:
 32218 ;;		_I2C1_Open
 32219 ;;		_I2C1_SetCallback
 32220 ;;		_I2C1_DO_TX
 32221 ;;		_I2C1_DO_RX
 32222 ;;		_I2C1_DO_TX_EMPTY
 32223 ;;		_I2C1_DO_ADDRESS_NACK
 32224 ;; This function uses a non-reentrant model
 32225 ;;
 32226                           
 32227                           	psect	text164
 32228  0096EC                     __ptext164:
 32229                           	callstack 0
 32230  0096EC                     _I2C1_CallbackReturnStop:
 32231                           	callstack 16
 32232                           
 32233                           ; BSR set to: 2
 32234                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 32235                           
 32236                           ; BSR set to: 2
 32237                           ;incstack = 0
 32238  0096EC  0E01               	movlw	1
 32239                           
 32240                           ; BSR set to: 2
 32241  0096EE  0012               	return		;funcret
 32242  0096F0                     __end_of_I2C1_CallbackReturnStop:
 32243                           	callstack 0
 32244                           
 32245 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F535 *****************
 32246 ;; Defined at:
 32247 ;;		line 176 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32248 ;; Parameters:    Size  Location     Type
 32249 ;;  ptr             2   24[COMRAM] PTR void 
 32250 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32251 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32252 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32253 ;; Auto vars:     Size  Location     Type
 32254 ;;		None
 32255 ;; Return value:  Size  Location     Type
 32256 ;;                  1    wreg      enum E527
 32257 ;; Registers used:
 32258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32259 ;; Tracked objects:
 32260 ;;		On entry : 3F/2
 32261 ;;		On exit  : 0/0
 32262 ;;		Unchanged: 0/0
 32263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32267 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32268 ;;Total ram usage:        2 bytes
 32269 ;; Hardware stack levels used: 1
 32270 ;; Hardware stack levels required when called: 6
 32271 ;; This function calls:
 32272 ;;		_I2C1_SetBuffer
 32273 ;;		_I2C1_SetDataCompleteCallback
 32274 ;; This function is called by:
 32275 ;;		_I2C1_DO_TX
 32276 ;;		_I2C1_DO_RX
 32277 ;;		_I2C1_DO_TX_EMPTY
 32278 ;;		_I2C1_DO_ADDRESS_NACK
 32279 ;; This function uses a non-reentrant model
 32280 ;;
 32281                           
 32282                           	psect	text165
 32283  008CF6                     __ptext165:
 32284                           	callstack 0
 32285  008CF6                     _rdBlkRegCompleteHandler@i2c1_master_example$F535:
 32286                           	callstack 14
 32287                           
 32288                           ; BSR set to: 2
 32289                           ;mcc_generated_files/examples/i2c1_master_example.c: 176: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 177: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 178:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 32290                           
 32291                           ; BSR set to: 2
 32292                           ;incstack = 0
 32293  008CF6  EE20 F002          	lfsr	2,2
 32294  008CFA  5019               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr^0,w,c
 32295  008CFC  26D9               	addwf	fsr2l,f,c
 32296  008CFE  501A               	movf	(rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1)^0,w,c
 32297  008D00  22DA               	addwfc	fsr2h,f,c
 32298  008D02  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 32299  008D06  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 32300  008D0A  C019  FFD9         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr,fsr2l
 32301  008D0E  C01A  FFDA         	movff	rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr+1,fsr2h
 32302  008D12  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 32303  008D16  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 32304  008D1A  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32305                           
 32306                           ; BSR set to: 2
 32307                           ;mcc_generated_files/examples/i2c1_master_example.c: 179:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32308  008D1E  0E00               	movlw	0
 32309  008D20  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32310  008D22  0E00               	movlw	0
 32311  008D24  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32312  008D26  0E00               	movlw	0
 32313  008D28  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32314  008D2A  0E00               	movlw	0
 32315  008D2C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32316  008D2E  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32317                           
 32318                           ;mcc_generated_files/examples/i2c1_master_example.c: 180:     return I2C1_RESTART_READ;
 32319  008D32  0E02               	movlw	2
 32320  008D34  0012               	return		;funcret
 32321  008D36                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535:
 32322                           	callstack 0
 32323                           
 32324 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F517 *****************
 32325 ;; Defined at:
 32326 ;;		line 162 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32327 ;; Parameters:    Size  Location     Type
 32328 ;;  ptr             2   24[COMRAM] PTR void 
 32329 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32330 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32331 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32332 ;; Auto vars:     Size  Location     Type
 32333 ;;		None
 32334 ;; Return value:  Size  Location     Type
 32335 ;;                  1    wreg      enum E527
 32336 ;; Registers used:
 32337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32338 ;; Tracked objects:
 32339 ;;		On entry : 3F/2
 32340 ;;		On exit  : 0/0
 32341 ;;		Unchanged: 0/0
 32342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32347 ;;Total ram usage:        2 bytes
 32348 ;; Hardware stack levels used: 1
 32349 ;; Hardware stack levels required when called: 6
 32350 ;; This function calls:
 32351 ;;		_I2C1_SetBuffer
 32352 ;;		_I2C1_SetDataCompleteCallback
 32353 ;; This function is called by:
 32354 ;;		_I2C1_DO_TX
 32355 ;;		_I2C1_DO_RX
 32356 ;;		_I2C1_DO_TX_EMPTY
 32357 ;;		_I2C1_DO_ADDRESS_NACK
 32358 ;; This function uses a non-reentrant model
 32359 ;;
 32360                           
 32361                           	psect	text166
 32362  009036                     __ptext166:
 32363                           	callstack 0
 32364  009036                     _wr1RegCompleteHandler@i2c1_master_example$F517:
 32365                           	callstack 14
 32366                           
 32367                           ; BSR set to: 2
 32368                           ;mcc_generated_files/examples/i2c1_master_example.c: 162: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 163: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 164:     I2C1_SetBuffer(ptr,1);
 32369                           
 32370                           ;incstack = 0
 32371  009036  C019  F010         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr,I2C1_SetBuffer@buffer
 32372  00903A  C01A  F011         	movff	wr1RegCompleteHandler@i2c1_master_example$F517@ptr+1,I2C1_SetBuffer@buffer+1
 32373  00903E  0E00               	movlw	0
 32374  009040  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32375  009042  0E01               	movlw	1
 32376  009044  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32377  009046  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32378                           
 32379                           ; BSR set to: 2
 32380                           ;mcc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32381  00904A  0E00               	movlw	0
 32382  00904C  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32383  00904E  0E00               	movlw	0
 32384  009050  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32385  009052  0E00               	movlw	0
 32386  009054  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32387  009056  0E00               	movlw	0
 32388  009058  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32389  00905A  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32390                           
 32391                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     return I2C1_CONTINUE;
 32392  00905E  0E04               	movlw	4
 32393  009060  0012               	return		;funcret
 32394  009062                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F517:
 32395                           	callstack 0
 32396                           
 32397 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F511 *****************
 32398 ;; Defined at:
 32399 ;;		line 155 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32400 ;; Parameters:    Size  Location     Type
 32401 ;;  ptr             2   24[COMRAM] PTR void 
 32402 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32403 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32404 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32405 ;; Auto vars:     Size  Location     Type
 32406 ;;		None
 32407 ;; Return value:  Size  Location     Type
 32408 ;;                  1    wreg      enum E527
 32409 ;; Registers used:
 32410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32411 ;; Tracked objects:
 32412 ;;		On entry : 3F/2
 32413 ;;		On exit  : 0/0
 32414 ;;		Unchanged: 0/0
 32415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32420 ;;Total ram usage:        2 bytes
 32421 ;; Hardware stack levels used: 1
 32422 ;; Hardware stack levels required when called: 6
 32423 ;; This function calls:
 32424 ;;		_I2C1_SetBuffer
 32425 ;;		_I2C1_SetDataCompleteCallback
 32426 ;; This function is called by:
 32427 ;;		_I2C1_DO_TX
 32428 ;;		_I2C1_DO_RX
 32429 ;;		_I2C1_DO_TX_EMPTY
 32430 ;;		_I2C1_DO_ADDRESS_NACK
 32431 ;; This function uses a non-reentrant model
 32432 ;;
 32433                           
 32434                           	psect	text167
 32435  009062                     __ptext167:
 32436                           	callstack 0
 32437  009062                     _rd2RegCompleteHandler@i2c1_master_example$F511:
 32438                           	callstack 14
 32439                           
 32440                           ; BSR set to: 2
 32441                           ;mcc_generated_files/examples/i2c1_master_example.c: 155: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 156: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 157:     I2C1_SetBuffer(ptr,2);
 32442                           
 32443                           ;incstack = 0
 32444  009062  C019  F010         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr,I2C1_SetBuffer@buffer
 32445  009066  C01A  F011         	movff	rd2RegCompleteHandler@i2c1_master_example$F511@ptr+1,I2C1_SetBuffer@buffer+1
 32446  00906A  0E00               	movlw	0
 32447  00906C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32448  00906E  0E02               	movlw	2
 32449  009070  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32450  009072  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32451                           
 32452                           ; BSR set to: 2
 32453                           ;mcc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32454  009076  0E00               	movlw	0
 32455  009078  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32456  00907A  0E00               	movlw	0
 32457  00907C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32458  00907E  0E00               	movlw	0
 32459  009080  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32460  009082  0E00               	movlw	0
 32461  009084  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32462  009086  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32463                           
 32464                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     return I2C1_RESTART_READ;
 32465  00908A  0E02               	movlw	2
 32466  00908C  0012               	return		;funcret
 32467  00908E                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F511:
 32468                           	callstack 0
 32469                           
 32470 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F500 *****************
 32471 ;; Defined at:
 32472 ;;		line 148 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32473 ;; Parameters:    Size  Location     Type
 32474 ;;  ptr             2   24[COMRAM] PTR void 
 32475 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32476 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32477 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32478 ;; Auto vars:     Size  Location     Type
 32479 ;;		None
 32480 ;; Return value:  Size  Location     Type
 32481 ;;                  1    wreg      enum E527
 32482 ;; Registers used:
 32483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32484 ;; Tracked objects:
 32485 ;;		On entry : 3F/2
 32486 ;;		On exit  : 0/0
 32487 ;;		Unchanged: 0/0
 32488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32493 ;;Total ram usage:        2 bytes
 32494 ;; Hardware stack levels used: 1
 32495 ;; Hardware stack levels required when called: 6
 32496 ;; This function calls:
 32497 ;;		_I2C1_SetBuffer
 32498 ;;		_I2C1_SetDataCompleteCallback
 32499 ;; This function is called by:
 32500 ;;		_I2C1_Read1ByteRegister
 32501 ;;		_I2C1_DO_TX
 32502 ;;		_I2C1_DO_RX
 32503 ;;		_I2C1_DO_TX_EMPTY
 32504 ;;		_I2C1_DO_ADDRESS_NACK
 32505 ;; This function uses a non-reentrant model
 32506 ;;
 32507                           
 32508                           	psect	text168
 32509  00908E                     __ptext168:
 32510                           	callstack 0
 32511  00908E                     _rd1RegCompleteHandler@i2c1_master_example$F500:
 32512                           	callstack 14
 32513                           
 32514                           ; BSR set to: 2
 32515                           ;mcc_generated_files/examples/i2c1_master_example.c: 148: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 149: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 150:     I2C1_SetBuffer(ptr,1);
 32516                           
 32517                           ;incstack = 0
 32518  00908E  C019  F010         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr,I2C1_SetBuffer@buffer
 32519  009092  C01A  F011         	movff	rd1RegCompleteHandler@i2c1_master_example$F500@ptr+1,I2C1_SetBuffer@buffer+1
 32520  009096  0E00               	movlw	0
 32521  009098  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32522  00909A  0E01               	movlw	1
 32523  00909C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32524  00909E  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32525                           
 32526                           ; BSR set to: 2
 32527                           ;mcc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32528  0090A2  0E00               	movlw	0
 32529  0090A4  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32530  0090A6  0E00               	movlw	0
 32531  0090A8  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32532  0090AA  0E00               	movlw	0
 32533  0090AC  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32534  0090AE  0E00               	movlw	0
 32535  0090B0  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32536  0090B2  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32537                           
 32538                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     return I2C1_RESTART_READ;
 32539  0090B6  0E02               	movlw	2
 32540  0090B8  0012               	return		;funcret
 32541  0090BA                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F500:
 32542                           	callstack 0
 32543                           
 32544 ;; *************** function _rdBlkRegCompleteHandler *****************
 32545 ;; Defined at:
 32546 ;;		line 140 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32547 ;; Parameters:    Size  Location     Type
 32548 ;;  p               2   24[COMRAM] PTR void 
 32549 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32550 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32551 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32552 ;; Auto vars:     Size  Location     Type
 32553 ;;		None
 32554 ;; Return value:  Size  Location     Type
 32555 ;;                  1    wreg      enum E360
 32556 ;; Registers used:
 32557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32558 ;; Tracked objects:
 32559 ;;		On entry : 3F/2
 32560 ;;		On exit  : 0/0
 32561 ;;		Unchanged: 0/0
 32562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32567 ;;Total ram usage:        2 bytes
 32568 ;; Hardware stack levels used: 1
 32569 ;; Hardware stack levels required when called: 6
 32570 ;; This function calls:
 32571 ;;		_I2C1_SetBuffer
 32572 ;;		_I2C1_SetDataCompleteCallback
 32573 ;; This function is called by:
 32574 ;;		_i2c_readDataBlock
 32575 ;;		_I2C1_DO_TX
 32576 ;;		_I2C1_DO_RX
 32577 ;;		_I2C1_DO_TX_EMPTY
 32578 ;;		_I2C1_DO_ADDRESS_NACK
 32579 ;; This function uses a non-reentrant model
 32580 ;;
 32581                           
 32582                           	psect	text169
 32583  008D36                     __ptext169:
 32584                           	callstack 0
 32585  008D36                     _rdBlkRegCompleteHandler:
 32586                           	callstack 14
 32587                           
 32588                           ; BSR set to: 2
 32589                           ;mcc_generated_files/drivers/i2c_simple_master.c: 140: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 141: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 142:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 32590                           
 32591                           ;incstack = 0
 32592  008D36  EE20 F002          	lfsr	2,2
 32593  008D3A  5019               	movf	rdBlkRegCompleteHandler@p^0,w,c
 32594  008D3C  26D9               	addwf	fsr2l,f,c
 32595  008D3E  501A               	movf	(rdBlkRegCompleteHandler@p+1)^0,w,c
 32596  008D40  22DA               	addwfc	fsr2h,f,c
 32597  008D42  CFDE F010          	movff	postinc2,I2C1_SetBuffer@buffer
 32598  008D46  CFDD F011          	movff	postdec2,I2C1_SetBuffer@buffer+1
 32599  008D4A  C019  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
 32600  008D4E  C01A  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
 32601  008D52  CFDE F012          	movff	postinc2,I2C1_SetBuffer@bufferSize
 32602  008D56  CFDD F013          	movff	postdec2,I2C1_SetBuffer@bufferSize+1
 32603  008D5A  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32604                           
 32605                           ; BSR set to: 2
 32606                           ;mcc_generated_files/drivers/i2c_simple_master.c: 143:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 32607  008D5E  0E00               	movlw	0
 32608  008D60  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32609  008D62  0E00               	movlw	0
 32610  008D64  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32611  008D66  0E00               	movlw	0
 32612  008D68  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32613  008D6A  0E00               	movlw	0
 32614  008D6C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32615  008D6E  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32616                           
 32617                           ;mcc_generated_files/drivers/i2c_simple_master.c: 144:     return I2C1_RESTART_READ;
 32618  008D72  0E02               	movlw	2
 32619  008D74  0012               	return		;funcret
 32620  008D76                     __end_of_rdBlkRegCompleteHandler:
 32621                           	callstack 0
 32622                           
 32623 ;; *************** function _wr2RegCompleteHandler *****************
 32624 ;; Defined at:
 32625 ;;		line 116 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32626 ;; Parameters:    Size  Location     Type
 32627 ;;  p               2   24[COMRAM] PTR void 
 32628 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32629 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32630 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32631 ;; Auto vars:     Size  Location     Type
 32632 ;;		None
 32633 ;; Return value:  Size  Location     Type
 32634 ;;                  1    wreg      enum E360
 32635 ;; Registers used:
 32636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32637 ;; Tracked objects:
 32638 ;;		On entry : 3F/2
 32639 ;;		On exit  : 0/0
 32640 ;;		Unchanged: 0/0
 32641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32646 ;;Total ram usage:        2 bytes
 32647 ;; Hardware stack levels used: 1
 32648 ;; Hardware stack levels required when called: 6
 32649 ;; This function calls:
 32650 ;;		_I2C1_SetBuffer
 32651 ;;		_I2C1_SetDataCompleteCallback
 32652 ;; This function is called by:
 32653 ;;		_I2C1_DO_TX
 32654 ;;		_I2C1_DO_RX
 32655 ;;		_I2C1_DO_TX_EMPTY
 32656 ;;		_I2C1_DO_ADDRESS_NACK
 32657 ;; This function uses a non-reentrant model
 32658 ;;
 32659                           
 32660                           	psect	text170
 32661  0090BA                     __ptext170:
 32662                           	callstack 0
 32663  0090BA                     _wr2RegCompleteHandler:
 32664                           	callstack 14
 32665                           
 32666                           ; BSR set to: 2
 32667                           ;mcc_generated_files/drivers/i2c_simple_master.c: 116: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 117: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 118:     I2C1_SetBuffer(p,2);
 32668                           
 32669                           ;incstack = 0
 32670  0090BA  C019  F010         	movff	wr2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32671  0090BE  C01A  F011         	movff	wr2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32672  0090C2  0E00               	movlw	0
 32673  0090C4  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32674  0090C6  0E02               	movlw	2
 32675  0090C8  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32676  0090CA  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32677                           
 32678                           ; BSR set to: 2
 32679                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 32680  0090CE  0E00               	movlw	0
 32681  0090D0  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32682  0090D2  0E00               	movlw	0
 32683  0090D4  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32684  0090D6  0E00               	movlw	0
 32685  0090D8  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32686  0090DA  0E00               	movlw	0
 32687  0090DC  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32688  0090DE  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32689                           
 32690                           ;mcc_generated_files/drivers/i2c_simple_master.c: 120:     return I2C1_CONTINUE;
 32691  0090E2  0E04               	movlw	4
 32692  0090E4  0012               	return		;funcret
 32693  0090E6                     __end_of_wr2RegCompleteHandler:
 32694                           	callstack 0
 32695                           
 32696 ;; *************** function _rd2RegCompleteHandler *****************
 32697 ;; Defined at:
 32698 ;;		line 93 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32699 ;; Parameters:    Size  Location     Type
 32700 ;;  p               2   24[COMRAM] PTR void 
 32701 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32702 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32703 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32704 ;; Auto vars:     Size  Location     Type
 32705 ;;		None
 32706 ;; Return value:  Size  Location     Type
 32707 ;;                  1    wreg      enum E360
 32708 ;; Registers used:
 32709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32710 ;; Tracked objects:
 32711 ;;		On entry : 3F/2
 32712 ;;		On exit  : 0/0
 32713 ;;		Unchanged: 0/0
 32714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32719 ;;Total ram usage:        2 bytes
 32720 ;; Hardware stack levels used: 1
 32721 ;; Hardware stack levels required when called: 6
 32722 ;; This function calls:
 32723 ;;		_I2C1_SetBuffer
 32724 ;;		_I2C1_SetDataCompleteCallback
 32725 ;; This function is called by:
 32726 ;;		_I2C1_DO_TX
 32727 ;;		_I2C1_DO_RX
 32728 ;;		_I2C1_DO_TX_EMPTY
 32729 ;;		_I2C1_DO_ADDRESS_NACK
 32730 ;; This function uses a non-reentrant model
 32731 ;;
 32732                           
 32733                           	psect	text171
 32734  0090E6                     __ptext171:
 32735                           	callstack 0
 32736  0090E6                     _rd2RegCompleteHandler:
 32737                           	callstack 14
 32738                           
 32739                           ; BSR set to: 2
 32740                           ;mcc_generated_files/drivers/i2c_simple_master.c: 93: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 94: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 95:     I2C1_SetBuffer(p,2);
 32741                           
 32742                           ;incstack = 0
 32743  0090E6  C019  F010         	movff	rd2RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32744  0090EA  C01A  F011         	movff	rd2RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32745  0090EE  0E00               	movlw	0
 32746  0090F0  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32747  0090F2  0E02               	movlw	2
 32748  0090F4  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32749  0090F6  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32750                           
 32751                           ; BSR set to: 2
 32752                           ;mcc_generated_files/drivers/i2c_simple_master.c: 96:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32753  0090FA  0E00               	movlw	0
 32754  0090FC  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32755  0090FE  0E00               	movlw	0
 32756  009100  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32757  009102  0E00               	movlw	0
 32758  009104  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32759  009106  0E00               	movlw	0
 32760  009108  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32761  00910A  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32762                           
 32763                           ;mcc_generated_files/drivers/i2c_simple_master.c: 97:     return I2C1_RESTART_READ;
 32764  00910E  0E02               	movlw	2
 32765  009110  0012               	return		;funcret
 32766  009112                     __end_of_rd2RegCompleteHandler:
 32767                           	callstack 0
 32768                           
 32769 ;; *************** function _rd1RegCompleteHandler *****************
 32770 ;; Defined at:
 32771 ;;		line 64 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32772 ;; Parameters:    Size  Location     Type
 32773 ;;  p               2   24[COMRAM] PTR void 
 32774 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32775 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32776 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32777 ;; Auto vars:     Size  Location     Type
 32778 ;;		None
 32779 ;; Return value:  Size  Location     Type
 32780 ;;                  1    wreg      enum E360
 32781 ;; Registers used:
 32782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32783 ;; Tracked objects:
 32784 ;;		On entry : 3F/2
 32785 ;;		On exit  : 0/0
 32786 ;;		Unchanged: 0/0
 32787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32792 ;;Total ram usage:        2 bytes
 32793 ;; Hardware stack levels used: 1
 32794 ;; Hardware stack levels required when called: 6
 32795 ;; This function calls:
 32796 ;;		_I2C1_SetBuffer
 32797 ;;		_I2C1_SetDataCompleteCallback
 32798 ;; This function is called by:
 32799 ;;		_I2C1_DO_TX
 32800 ;;		_I2C1_DO_RX
 32801 ;;		_I2C1_DO_TX_EMPTY
 32802 ;;		_I2C1_DO_ADDRESS_NACK
 32803 ;; This function uses a non-reentrant model
 32804 ;;
 32805                           
 32806                           	psect	text172
 32807  009112                     __ptext172:
 32808                           	callstack 0
 32809  009112                     _rd1RegCompleteHandler:
 32810                           	callstack 14
 32811                           
 32812                           ; BSR set to: 2
 32813                           ;mcc_generated_files/drivers/i2c_simple_master.c: 64: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 65: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 66:     I2C1_SetBuffer(p,1);
 32814                           
 32815                           ;incstack = 0
 32816  009112  C019  F010         	movff	rd1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32817  009116  C01A  F011         	movff	rd1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32818  00911A  0E00               	movlw	0
 32819  00911C  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32820  00911E  0E01               	movlw	1
 32821  009120  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32822  009122  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32823                           
 32824                           ; BSR set to: 2
 32825                           ;mcc_generated_files/drivers/i2c_simple_master.c: 67:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32826  009126  0E00               	movlw	0
 32827  009128  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32828  00912A  0E00               	movlw	0
 32829  00912C  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32830  00912E  0E00               	movlw	0
 32831  009130  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32832  009132  0E00               	movlw	0
 32833  009134  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32834  009136  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32835                           
 32836                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     return I2C1_RESTART_READ;
 32837  00913A  0E02               	movlw	2
 32838  00913C  0012               	return		;funcret
 32839  00913E                     __end_of_rd1RegCompleteHandler:
 32840                           	callstack 0
 32841                           
 32842 ;; *************** function _wr1RegCompleteHandler *****************
 32843 ;; Defined at:
 32844 ;;		line 33 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 32845 ;; Parameters:    Size  Location     Type
 32846 ;;  p               2   24[COMRAM] PTR void 
 32847 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32848 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32849 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32850 ;; Auto vars:     Size  Location     Type
 32851 ;;		None
 32852 ;; Return value:  Size  Location     Type
 32853 ;;                  1    wreg      enum E360
 32854 ;; Registers used:
 32855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32856 ;; Tracked objects:
 32857 ;;		On entry : 3F/2
 32858 ;;		On exit  : 0/0
 32859 ;;		Unchanged: 0/0
 32860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32865 ;;Total ram usage:        2 bytes
 32866 ;; Hardware stack levels used: 1
 32867 ;; Hardware stack levels required when called: 6
 32868 ;; This function calls:
 32869 ;;		_I2C1_SetBuffer
 32870 ;;		_I2C1_SetDataCompleteCallback
 32871 ;; This function is called by:
 32872 ;;		_I2C1_DO_TX
 32873 ;;		_I2C1_DO_RX
 32874 ;;		_I2C1_DO_TX_EMPTY
 32875 ;;		_I2C1_DO_ADDRESS_NACK
 32876 ;; This function uses a non-reentrant model
 32877 ;;
 32878                           
 32879                           	psect	text173
 32880  00913E                     __ptext173:
 32881                           	callstack 0
 32882  00913E                     _wr1RegCompleteHandler:
 32883                           	callstack 14
 32884                           
 32885                           ; BSR set to: 2
 32886                           ;mcc_generated_files/drivers/i2c_simple_master.c: 33: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 34: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 35:     I2C1_SetBuffer(p,1);
 32887                           
 32888                           ;incstack = 0
 32889  00913E  C019  F010         	movff	wr1RegCompleteHandler@p,I2C1_SetBuffer@buffer
 32890  009142  C01A  F011         	movff	wr1RegCompleteHandler@p+1,I2C1_SetBuffer@buffer+1
 32891  009146  0E00               	movlw	0
 32892  009148  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32893  00914A  0E01               	movlw	1
 32894  00914C  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32895  00914E  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32896                           
 32897                           ; BSR set to: 2
 32898                           ;mcc_generated_files/drivers/i2c_simple_master.c: 36:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 32899  009152  0E00               	movlw	0
 32900  009154  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32901  009156  0E00               	movlw	0
 32902  009158  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32903  00915A  0E00               	movlw	0
 32904  00915C  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32905  00915E  0E00               	movlw	0
 32906  009160  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32907  009162  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32908                           
 32909                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     return I2C1_CONTINUE;
 32910  009166  0E04               	movlw	4
 32911  009168  0012               	return		;funcret
 32912  00916A                     __end_of_wr1RegCompleteHandler:
 32913                           	callstack 0
 32914                           
 32915 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F523 *****************
 32916 ;; Defined at:
 32917 ;;		line 169 in file "mcc_generated_files/examples/i2c1_master_example.c"
 32918 ;; Parameters:    Size  Location     Type
 32919 ;;  ptr             2   24[COMRAM] PTR void 
 32920 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32921 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32922 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 32923 ;; Auto vars:     Size  Location     Type
 32924 ;;		None
 32925 ;; Return value:  Size  Location     Type
 32926 ;;                  1    wreg      enum E527
 32927 ;; Registers used:
 32928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32929 ;; Tracked objects:
 32930 ;;		On entry : 3F/2
 32931 ;;		On exit  : 0/0
 32932 ;;		Unchanged: 0/0
 32933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32938 ;;Total ram usage:        2 bytes
 32939 ;; Hardware stack levels used: 1
 32940 ;; Hardware stack levels required when called: 6
 32941 ;; This function calls:
 32942 ;;		_I2C1_SetBuffer
 32943 ;;		_I2C1_SetDataCompleteCallback
 32944 ;; This function is called by:
 32945 ;;		_I2C1_DO_TX
 32946 ;;		_I2C1_DO_RX
 32947 ;;		_I2C1_DO_TX_EMPTY
 32948 ;;		_I2C1_DO_ADDRESS_NACK
 32949 ;; This function uses a non-reentrant model
 32950 ;;
 32951                           
 32952                           	psect	text174
 32953  00916A                     __ptext174:
 32954                           	callstack 0
 32955  00916A                     _wr2RegCompleteHandler@i2c1_master_example$F523:
 32956                           	callstack 14
 32957                           
 32958                           ; BSR set to: 2
 32959                           ;mcc_generated_files/examples/i2c1_master_example.c: 169: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 170: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 171:     I2C1_SetBuffer(ptr,2);
 32960                           
 32961                           ;incstack = 0
 32962  00916A  C019  F010         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr,I2C1_SetBuffer@buffer
 32963  00916E  C01A  F011         	movff	wr2RegCompleteHandler@i2c1_master_example$F523@ptr+1,I2C1_SetBuffer@buffer+1
 32964  009172  0E00               	movlw	0
 32965  009174  6E13               	movwf	(I2C1_SetBuffer@bufferSize+1)^0,c
 32966  009176  0E02               	movlw	2
 32967  009178  6E12               	movwf	I2C1_SetBuffer@bufferSize^0,c
 32968  00917A  EC2A  F04A         	call	_I2C1_SetBuffer	;wreg free
 32969                           
 32970                           ; BSR set to: 2
 32971                           ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 32972  00917E  0E00               	movlw	0
 32973  009180  6E15               	movwf	I2C1_SetDataCompleteCallback@cb^0,c
 32974  009182  0E00               	movlw	0
 32975  009184  6E16               	movwf	(I2C1_SetDataCompleteCallback@cb+1)^0,c
 32976  009186  0E00               	movlw	0
 32977  009188  6E17               	movwf	I2C1_SetDataCompleteCallback@ptr^0,c
 32978  00918A  0E00               	movlw	0
 32979  00918C  6E18               	movwf	(I2C1_SetDataCompleteCallback@ptr+1)^0,c
 32980  00918E  EC73  F04A         	call	_I2C1_SetDataCompleteCallback	;wreg free
 32981                           
 32982                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     return I2C1_CONTINUE;
 32983  009192  0E04               	movlw	4
 32984  009194  0012               	return		;funcret
 32985  009196                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F523:
 32986                           	callstack 0
 32987                           
 32988 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 32989 ;; Defined at:
 32990 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 32991 ;; Parameters:    Size  Location     Type
 32992 ;;  cb              2   20[COMRAM] PTR FTN(PTR void ,)enum 
 32993 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 32994 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 32995 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 32996 ;;  ptr             2   22[COMRAM] PTR void 
 32997 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 32998 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 32999 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33000 ;; Auto vars:     Size  Location     Type
 33001 ;;		None
 33002 ;; Return value:  Size  Location     Type
 33003 ;;                  1    wreg      void 
 33004 ;; Registers used:
 33005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33006 ;; Tracked objects:
 33007 ;;		On entry : 33/2
 33008 ;;		On exit  : 0/0
 33009 ;;		Unchanged: 0/0
 33010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33014 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33015 ;;Total ram usage:        4 bytes
 33016 ;; Hardware stack levels used: 1
 33017 ;; Hardware stack levels required when called: 5
 33018 ;; This function calls:
 33019 ;;		_I2C1_SetCallback
 33020 ;; This function is called by:
 33021 ;;		_wr1RegCompleteHandler
 33022 ;;		_rd1RegCompleteHandler
 33023 ;;		_rd2RegCompleteHandler
 33024 ;;		_wr2RegCompleteHandler
 33025 ;;		_rdBlkRegCompleteHandler
 33026 ;;		_i2c_readDataBlock
 33027 ;;		_I2C1_Read1ByteRegister
 33028 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33029 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33030 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33031 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33032 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33033 ;; This function uses a non-reentrant model
 33034 ;;
 33035                           
 33036                           	psect	text175
 33037  0094E6                     __ptext175:
 33038                           	callstack 0
 33039  0094E6                     _I2C1_SetDataCompleteCallback:
 33040                           	callstack 20
 33041                           
 33042                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 33043                           
 33044                           ;incstack = 0
 33045  0094E6  C015  F010         	movff	I2C1_SetDataCompleteCallback@cb,I2C1_SetCallback@cb
 33046  0094EA  C016  F011         	movff	I2C1_SetDataCompleteCallback@cb+1,I2C1_SetCallback@cb+1
 33047  0094EE  C017  F012         	movff	I2C1_SetDataCompleteCallback@ptr,I2C1_SetCallback@ptr
 33048  0094F2  C018  F013         	movff	I2C1_SetDataCompleteCallback@ptr+1,I2C1_SetCallback@ptr+1
 33049  0094F6  0E00               	movlw	0
 33050  0094F8  ECDA  F041         	call	_I2C1_SetCallback
 33051  0094FC  0012               	return		;funcret
 33052  0094FE                     __end_of_I2C1_SetDataCompleteCallback:
 33053                           	callstack 0
 33054                           
 33055 ;; *************** function _I2C1_SetCallback *****************
 33056 ;; Defined at:
 33057 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 33058 ;; Parameters:    Size  Location     Type
 33059 ;;  idx             1    wreg     enum E10460
 33060 ;;  cb              2   15[COMRAM] PTR FTN(PTR void ,)enum 
 33061 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F535(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F523(1), wr1RegCompleteHandler@i2c1_master_example$F517(1), 
 33062 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F511(1), rd1RegCompleteHandler@i2c1_master_example$F500(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 33063 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 33064 ;;  ptr             2   17[COMRAM] PTR void 
 33065 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 33066 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 33067 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 33068 ;; Auto vars:     Size  Location     Type
 33069 ;;  idx             1   19[COMRAM] enum E10460
 33070 ;; Return value:  Size  Location     Type
 33071 ;;                  1    wreg      void 
 33072 ;; Registers used:
 33073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33074 ;; Tracked objects:
 33075 ;;		On entry : 33/2
 33076 ;;		On exit  : 0/0
 33077 ;;		Unchanged: 0/0
 33078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33082 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33083 ;;Total ram usage:        5 bytes
 33084 ;; Hardware stack levels used: 1
 33085 ;; Hardware stack levels required when called: 4
 33086 ;; This function calls:
 33087 ;;		Nothing
 33088 ;; This function is called by:
 33089 ;;		_I2C1_SetDataCompleteCallback
 33090 ;;		_I2C1_SetAddressNackCallback
 33091 ;; This function uses a non-reentrant model
 33092 ;;
 33093                           
 33094                           	psect	text176
 33095  0083B4                     __ptext176:
 33096                           	callstack 0
 33097  0083B4                     _I2C1_SetCallback:
 33098                           	callstack 20
 33099                           
 33100                           ;incstack = 0
 33101                           ;I2C1_SetCallback@idx stored from wreg
 33102  0083B4  6E14               	movwf	I2C1_SetCallback@idx^0,c
 33103                           
 33104                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 33105  0083B6  5010               	movf	I2C1_SetCallback@cb^0,w,c
 33106  0083B8  1011               	iorwf	(I2C1_SetCallback@cb+1)^0,w,c
 33107  0083BA  B4D8               	btfsc	status,2,c
 33108  0083BC  D019               	goto	l19344
 33109                           
 33110                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 33111  0083BE  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33112  0083C0  0D02               	mullw	2
 33113  0083C2  0E3C               	movlw	low _I2C1_Status
 33114  0083C4  24F3               	addwf	243,w,c
 33115  0083C6  6ED9               	movwf	fsr2l,c
 33116  0083C8  0E02               	movlw	high _I2C1_Status
 33117  0083CA  20F4               	addwfc	prodh,w,c
 33118  0083CC  6EDA               	movwf	fsr2h,c
 33119  0083CE  C010  FFDE         	movff	I2C1_SetCallback@cb,postinc2
 33120  0083D2  C011  FFDD         	movff	I2C1_SetCallback@cb+1,postdec2
 33121                           
 33122                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 33123  0083D6  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33124  0083D8  0D02               	mullw	2
 33125  0083DA  0E48               	movlw	low (_I2C1_Status+12)
 33126  0083DC  24F3               	addwf	243,w,c
 33127  0083DE  6ED9               	movwf	fsr2l,c
 33128  0083E0  0E02               	movlw	high (_I2C1_Status+12)
 33129  0083E2  20F4               	addwfc	prodh,w,c
 33130  0083E4  6EDA               	movwf	fsr2h,c
 33131  0083E6  C012  FFDE         	movff	I2C1_SetCallback@ptr,postinc2
 33132  0083EA  C013  FFDD         	movff	I2C1_SetCallback@ptr+1,postdec2
 33133                           
 33134                           ;mcc_generated_files/i2c1_master.c: 304:     }
 33135  0083EE  0012               	return	
 33136  0083F0                     l19344:
 33137                           
 33138                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 33139  0083F0  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33140  0083F2  0D02               	mullw	2
 33141  0083F4  0E3C               	movlw	low _I2C1_Status
 33142  0083F6  24F3               	addwf	243,w,c
 33143  0083F8  6ED9               	movwf	fsr2l,c
 33144  0083FA  0E02               	movlw	high _I2C1_Status
 33145  0083FC  20F4               	addwfc	prodh,w,c
 33146  0083FE  6EDA               	movwf	fsr2h,c
 33147  008400  0EEC               	movlw	low _I2C1_CallbackReturnStop
 33148  008402  6EDE               	movwf	postinc2,c
 33149  008404  0E96               	movlw	high _I2C1_CallbackReturnStop
 33150  008406  6EDD               	movwf	postdec2,c
 33151                           
 33152                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 33153  008408  5014               	movf	I2C1_SetCallback@idx^0,w,c
 33154  00840A  0D02               	mullw	2
 33155  00840C  0E48               	movlw	low (_I2C1_Status+12)
 33156  00840E  24F3               	addwf	243,w,c
 33157  008410  6ED9               	movwf	fsr2l,c
 33158  008412  0E02               	movlw	high (_I2C1_Status+12)
 33159  008414  20F4               	addwfc	prodh,w,c
 33160  008416  6EDA               	movwf	fsr2h,c
 33161  008418  0E00               	movlw	0
 33162  00841A  6EDE               	movwf	postinc2,c
 33163  00841C  0E00               	movlw	0
 33164  00841E  6EDD               	movwf	postdec2,c
 33165  008420  0012               	return		;funcret
 33166  008422                     __end_of_I2C1_SetCallback:
 33167                           	callstack 0
 33168                           
 33169 ;; *************** function _I2C1_SetBuffer *****************
 33170 ;; Defined at:
 33171 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 33172 ;; Parameters:    Size  Location     Type
 33173 ;;  buffer          2   15[COMRAM] PTR void 
 33174 ;;		 -> cmdMemoryIsEmpty@tempSerial(4), memoryTEMP(16), var_sys_NVM(64), I2C1_ReadDataBlock@reg(1), 
 33175 ;;		 -> I2C1_ReadDataBlock@bufferBlock(4), I2C1_WriteNBytes@dat(17), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegi
      +ster@data(2), 
 33176 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 33177 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(2), i2c_readDataBloc
      +k@d(4), 
 33178 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 33179 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_writeNBytes@dat(17), i2c_write1ByteRegister@reg(1
      +), 
 33180 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 33181 ;;  bufferSize      2   17[COMRAM] unsigned int 
 33182 ;; Auto vars:     Size  Location     Type
 33183 ;;		None
 33184 ;; Return value:  Size  Location     Type
 33185 ;;                  1    wreg      void 
 33186 ;; Registers used:
 33187 ;;		wreg, status,2, status,0
 33188 ;; Tracked objects:
 33189 ;;		On entry : 0/2
 33190 ;;		On exit  : 3F/2
 33191 ;;		Unchanged: 0/0
 33192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33196 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33197 ;;Total ram usage:        4 bytes
 33198 ;; Hardware stack levels used: 1
 33199 ;; Hardware stack levels required when called: 4
 33200 ;; This function calls:
 33201 ;;		Nothing
 33202 ;; This function is called by:
 33203 ;;		_wr1RegCompleteHandler
 33204 ;;		_i2c_writeNBytes
 33205 ;;		_rd1RegCompleteHandler
 33206 ;;		_rd2RegCompleteHandler
 33207 ;;		_wr2RegCompleteHandler
 33208 ;;		_rdBlkRegCompleteHandler
 33209 ;;		_i2c_readDataBlock
 33210 ;;		_I2C1_Read1ByteRegister
 33211 ;;		_rd1RegCompleteHandler@i2c1_master_example$F500
 33212 ;;		_rd2RegCompleteHandler@i2c1_master_example$F511
 33213 ;;		_wr1RegCompleteHandler@i2c1_master_example$F517
 33214 ;;		_wr2RegCompleteHandler@i2c1_master_example$F523
 33215 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F535
 33216 ;; This function uses a non-reentrant model
 33217 ;;
 33218                           
 33219                           	psect	text177
 33220  009454                     __ptext177:
 33221                           	callstack 0
 33222  009454                     _I2C1_SetBuffer:
 33223                           	callstack 21
 33224                           
 33225                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 33226                           
 33227                           ;incstack = 0
 33228  009454  0102               	movlb	2	; () banked
 33229  009456  A75F               	btfss	(_I2C1_Status+35)& (0+255),3,b
 33230  009458  0012               	return	
 33231                           
 33232                           ; BSR set to: 2
 33233                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 33234  00945A  C010  F259         	movff	I2C1_SetBuffer@buffer,_I2C1_Status+29
 33235  00945E  C011  F25A         	movff	I2C1_SetBuffer@buffer+1,_I2C1_Status+30
 33236                           
 33237                           ; BSR set to: 2
 33238                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 33239  009462  C012  F25B         	movff	I2C1_SetBuffer@bufferSize,_I2C1_Status+31
 33240  009466  C013  F25C         	movff	I2C1_SetBuffer@bufferSize+1,_I2C1_Status+32
 33241                           
 33242                           ; BSR set to: 2
 33243                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 33244  00946A  975F               	bcf	(_I2C1_Status+35)& (0+255),3,b
 33245                           
 33246                           ; BSR set to: 2
 33247  00946C  0012               	return		;funcret
 33248  00946E                     __end_of_I2C1_SetBuffer:
 33249                           	callstack 0
 33250                           
 33251 ;; *************** function _I2C1_MasterStop *****************
 33252 ;; Defined at:
 33253 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 33254 ;; Parameters:    Size  Location     Type
 33255 ;;		None
 33256 ;; Auto vars:     Size  Location     Type
 33257 ;;		None
 33258 ;; Return value:  Size  Location     Type
 33259 ;;                  1    wreg      void 
 33260 ;; Registers used:
 33261 ;;		None
 33262 ;; Tracked objects:
 33263 ;;		On entry : 0/2
 33264 ;;		On exit  : 0/0
 33265 ;;		Unchanged: 0/0
 33266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33271 ;;Total ram usage:        0 bytes
 33272 ;; Hardware stack levels used: 1
 33273 ;; Hardware stack levels required when called: 4
 33274 ;; This function calls:
 33275 ;;		Nothing
 33276 ;; This function is called by:
 33277 ;;		_I2C1_DO_SEND_STOP
 33278 ;; This function uses a non-reentrant model
 33279 ;;
 33280                           
 33281                           	psect	text178
 33282  0096F0                     __ptext178:
 33283                           	callstack 0
 33284  0096F0                     _I2C1_MasterStop:
 33285                           	callstack 15
 33286                           
 33287                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 33288                           
 33289                           ; BSR set to: 2
 33290                           ;incstack = 0
 33291  0096F0  8497               	bsf	151,2,c	;volatile
 33292  0096F2  0012               	return		;funcret
 33293  0096F4                     __end_of_I2C1_MasterStop:
 33294                           	callstack 0
 33295                           
 33296 ;; *************** function _I2C1_MasterEnableRestart *****************
 33297 ;; Defined at:
 33298 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 33299 ;; Parameters:    Size  Location     Type
 33300 ;;		None
 33301 ;; Auto vars:     Size  Location     Type
 33302 ;;		None
 33303 ;; Return value:  Size  Location     Type
 33304 ;;                  1    wreg      void 
 33305 ;; Registers used:
 33306 ;;		None
 33307 ;; Tracked objects:
 33308 ;;		On entry : 0/2
 33309 ;;		On exit  : 0/0
 33310 ;;		Unchanged: 0/0
 33311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33316 ;;Total ram usage:        0 bytes
 33317 ;; Hardware stack levels used: 1
 33318 ;; Hardware stack levels required when called: 4
 33319 ;; This function calls:
 33320 ;;		Nothing
 33321 ;; This function is called by:
 33322 ;;		_I2C1_DO_SEND_RESTART_READ
 33323 ;;		_I2C1_DO_SEND_RESTART_WRITE
 33324 ;;		_I2C1_DO_SEND_RESTART
 33325 ;; This function uses a non-reentrant model
 33326 ;;
 33327                           
 33328                           	psect	text179
 33329  0096F4                     __ptext179:
 33330                           	callstack 0
 33331  0096F4                     _I2C1_MasterEnableRestart:
 33332                           	callstack 15
 33333                           
 33334                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 33335                           
 33336                           ;incstack = 0
 33337  0096F4  8297               	bsf	151,1,c	;volatile
 33338  0096F6  0012               	return		;funcret
 33339  0096F8                     __end_of_I2C1_MasterEnableRestart:
 33340                           	callstack 0
 33341                           
 33342 ;; *************** function _I2C1_MasterStart *****************
 33343 ;; Defined at:
 33344 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 33345 ;; Parameters:    Size  Location     Type
 33346 ;;		None
 33347 ;; Auto vars:     Size  Location     Type
 33348 ;;		None
 33349 ;; Return value:  Size  Location     Type
 33350 ;;                  1    wreg      void 
 33351 ;; Registers used:
 33352 ;;		None
 33353 ;; Tracked objects:
 33354 ;;		On entry : 3F/2
 33355 ;;		On exit  : 3F/2
 33356 ;;		Unchanged: 3F/0
 33357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33362 ;;Total ram usage:        0 bytes
 33363 ;; Hardware stack levels used: 1
 33364 ;; Hardware stack levels required when called: 4
 33365 ;; This function calls:
 33366 ;;		Nothing
 33367 ;; This function is called by:
 33368 ;;		_I2C1_MasterOperation
 33369 ;; This function uses a non-reentrant model
 33370 ;;
 33371                           
 33372                           	psect	text180
 33373  0096F8                     __ptext180:
 33374                           	callstack 0
 33375  0096F8                     _I2C1_MasterStart:
 33376                           	callstack 19
 33377                           
 33378                           ; BSR set to: 2
 33379                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 33380                           
 33381                           ;incstack = 0
 33382  0096F8  8097               	bsf	151,0,c	;volatile
 33383                           
 33384                           ; BSR set to: 2
 33385  0096FA  0012               	return		;funcret
 33386  0096FC                     __end_of_I2C1_MasterStart:
 33387                           	callstack 0
 33388                           
 33389 ;; *************** function _I2C1_Close *****************
 33390 ;; Defined at:
 33391 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 33392 ;; Parameters:    Size  Location     Type
 33393 ;;		None
 33394 ;; Auto vars:     Size  Location     Type
 33395 ;;  returnValue     1   15[COMRAM] enum E355
 33396 ;; Return value:  Size  Location     Type
 33397 ;;                  1    wreg      enum E355
 33398 ;; Registers used:
 33399 ;;		wreg, status,2, cstack
 33400 ;; Tracked objects:
 33401 ;;		On entry : 0/2
 33402 ;;		On exit  : 33/2
 33403 ;;		Unchanged: 0/0
 33404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33409 ;;Total ram usage:        1 bytes
 33410 ;; Hardware stack levels used: 1
 33411 ;; Hardware stack levels required when called: 5
 33412 ;; This function calls:
 33413 ;;		_I2C1_MasterClearIrq
 33414 ;;		_I2C1_MasterClose
 33415 ;;		_I2C1_MasterDisableIrq
 33416 ;; This function is called by:
 33417 ;;		_i2c_writeNBytes
 33418 ;;		_i2c_readDataBlock
 33419 ;;		_I2C1_Read1ByteRegister
 33420 ;; This function uses a non-reentrant model
 33421 ;;
 33422                           
 33423                           	psect	text181
 33424  009338                     __ptext181:
 33425                           	callstack 0
 33426  009338                     _I2C1_Close:
 33427                           	callstack 20
 33428                           
 33429                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 33430                           
 33431                           ; BSR set to: 2
 33432                           ;incstack = 0
 33433  009338  0E01               	movlw	1
 33434  00933A  6E10               	movwf	I2C1_Close@returnValue^0,c
 33435                           
 33436                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 33437  00933C  0102               	movlb	2	; () banked
 33438  00933E  B35F               	btfsc	(_I2C1_Status+35)& (0+255),1,b
 33439  009340  D00A               	goto	l19778
 33440                           
 33441                           ; BSR set to: 2
 33442                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 33443  009342  955F               	bcf	(_I2C1_Status+35)& (0+255),2,b
 33444                           
 33445                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 33446  009344  6958               	setf	(_I2C1_Status+28)& (0+255),b
 33447                           
 33448                           ; BSR set to: 2
 33449                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 33450  009346  EC60  F04B         	call	_I2C1_MasterClearIrq	;wreg free
 33451                           
 33452                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 33453  00934A  EC7E  F04B         	call	_I2C1_MasterDisableIrq	;wreg free
 33454                           
 33455                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 33456  00934E  EC80  F04B         	call	_I2C1_MasterClose	;wreg free
 33457                           
 33458                           ; BSR set to: 14
 33459                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 33460  009352  C25E  F010         	movff	_I2C1_Status+34,I2C1_Close@returnValue
 33461  009356                     l19778:
 33462                           
 33463                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 33464  009356  5010               	movf	I2C1_Close@returnValue^0,w,c
 33465  009358  0012               	return		;funcret
 33466  00935A                     __end_of_I2C1_Close:
 33467                           	callstack 0
 33468                           
 33469 ;; *************** function _I2C1_MasterDisableIrq *****************
 33470 ;; Defined at:
 33471 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 33472 ;; Parameters:    Size  Location     Type
 33473 ;;		None
 33474 ;; Auto vars:     Size  Location     Type
 33475 ;;		None
 33476 ;; Return value:  Size  Location     Type
 33477 ;;                  1    wreg      void 
 33478 ;; Registers used:
 33479 ;;		None
 33480 ;; Tracked objects:
 33481 ;;		On entry : 3F/E
 33482 ;;		On exit  : 3F/E
 33483 ;;		Unchanged: 0/0
 33484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33489 ;;Total ram usage:        0 bytes
 33490 ;; Hardware stack levels used: 1
 33491 ;; Hardware stack levels required when called: 4
 33492 ;; This function calls:
 33493 ;;		Nothing
 33494 ;; This function is called by:
 33495 ;;		_I2C1_Close
 33496 ;; This function uses a non-reentrant model
 33497 ;;
 33498                           
 33499                           	psect	text182
 33500  0096FC                     __ptext182:
 33501                           	callstack 0
 33502  0096FC                     _I2C1_MasterDisableIrq:
 33503                           	callstack 20
 33504                           
 33505                           ; BSR set to: 14
 33506                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 33507                           
 33508                           ;incstack = 0
 33509  0096FC  91C5               	bcf	197,0,b	;volatile
 33510                           
 33511                           ; BSR set to: 14
 33512  0096FE  0012               	return		;funcret
 33513  009700                     __end_of_I2C1_MasterDisableIrq:
 33514                           	callstack 0
 33515                           
 33516 ;; *************** function _I2C1_MasterClose *****************
 33517 ;; Defined at:
 33518 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 33519 ;; Parameters:    Size  Location     Type
 33520 ;;		None
 33521 ;; Auto vars:     Size  Location     Type
 33522 ;;		None
 33523 ;; Return value:  Size  Location     Type
 33524 ;;                  1    wreg      void 
 33525 ;; Registers used:
 33526 ;;		None
 33527 ;; Tracked objects:
 33528 ;;		On entry : 3F/E
 33529 ;;		On exit  : 3F/E
 33530 ;;		Unchanged: 3F/0
 33531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33536 ;;Total ram usage:        0 bytes
 33537 ;; Hardware stack levels used: 1
 33538 ;; Hardware stack levels required when called: 4
 33539 ;; This function calls:
 33540 ;;		Nothing
 33541 ;; This function is called by:
 33542 ;;		_I2C1_Close
 33543 ;; This function uses a non-reentrant model
 33544 ;;
 33545                           
 33546                           	psect	text183
 33547  009700                     __ptext183:
 33548                           	callstack 0
 33549  009700                     _I2C1_MasterClose:
 33550                           	callstack 20
 33551                           
 33552                           ; BSR set to: 14
 33553                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 33554                           
 33555                           ; BSR set to: 14
 33556                           ;incstack = 0
 33557  009700  9A96               	bcf	150,5,c	;volatile
 33558                           
 33559                           ; BSR set to: 14
 33560  009702  0012               	return		;funcret
 33561  009704                     __end_of_I2C1_MasterClose:
 33562                           	callstack 0
 33563                           
 33564 ;; *************** function _I2C1_MasterClearIrq *****************
 33565 ;; Defined at:
 33566 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 33567 ;; Parameters:    Size  Location     Type
 33568 ;;		None
 33569 ;; Auto vars:     Size  Location     Type
 33570 ;;		None
 33571 ;; Return value:  Size  Location     Type
 33572 ;;                  1    wreg      void 
 33573 ;; Registers used:
 33574 ;;		None
 33575 ;; Tracked objects:
 33576 ;;		On entry : 33/2
 33577 ;;		On exit  : 3F/E
 33578 ;;		Unchanged: 0/0
 33579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33584 ;;Total ram usage:        0 bytes
 33585 ;; Hardware stack levels used: 1
 33586 ;; Hardware stack levels required when called: 4
 33587 ;; This function calls:
 33588 ;;		Nothing
 33589 ;; This function is called by:
 33590 ;;		_I2C1_Open
 33591 ;;		_I2C1_Close
 33592 ;;		_I2C1_MasterFsm
 33593 ;; This function uses a non-reentrant model
 33594 ;;
 33595                           
 33596                           	psect	text184
 33597  0096C0                     __ptext184:
 33598                           	callstack 0
 33599  0096C0                     _I2C1_MasterClearIrq:
 33600                           	callstack 20
 33601                           
 33602                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 33603                           
 33604                           ; BSR set to: 14
 33605                           ;incstack = 0
 33606  0096C0  010E               	movlb	14	; () banked
 33607  0096C2  91CD               	bcf	205,0,b	;volatile
 33608                           
 33609                           ; BSR set to: 14
 33610  0096C4  0012               	return		;funcret
 33611  0096C6                     __end_of_I2C1_MasterClearIrq:
 33612                           	callstack 0
 33613                           
 33614 ;; *************** function _INTERRUPT_InterruptManager *****************
 33615 ;; Defined at:
 33616 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 33617 ;; Parameters:    Size  Location     Type
 33618 ;;		None
 33619 ;; Auto vars:     Size  Location     Type
 33620 ;;		None
 33621 ;; Return value:  Size  Location     Type
 33622 ;;                  1    wreg      void 
 33623 ;; Registers used:
 33624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33625 ;; Tracked objects:
 33626 ;;		On entry : 0/0
 33627 ;;		On exit  : 0/0
 33628 ;;		Unchanged: 0/0
 33629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33632 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33633 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33634 ;;Total ram usage:        6 bytes
 33635 ;; Hardware stack levels used: 1
 33636 ;; Hardware stack levels required when called: 3
 33637 ;; This function calls:
 33638 ;;		Absolute function
 33639 ;;		_EUSART1_Receive_ISR
 33640 ;;		_EUSART1_Transmit_ISR
 33641 ;;		_TMR0_ISR
 33642 ;;		_TMR1_ISR
 33643 ;;		_TMR2_ISR
 33644 ;; This function is called by:
 33645 ;;		Interrupt level 2
 33646 ;; This function uses a non-reentrant model
 33647 ;;
 33648                           
 33649                           	psect	intcode
 33650  000008                     __pintcode:
 33651                           	callstack 0
 33652  000008                     _INTERRUPT_InterruptManager:
 33653                           	callstack 14
 33654                           
 33655                           ; BSR set to: 14
 33656                           ;incstack = 0
 33657  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 33658  00000A  CFFA F00A          	movff	pclath,??_INTERRUPT_InterruptManager
 33659  00000E  CFFB F00B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 33660  000012  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 33661  000016  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 33662  00001A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+4
 33663  00001E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+5
 33664                           
 33665                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 33666  000022  010E               	movlb	14	; () banked
 33667  000024  BBC2               	btfsc	194,5,b	;volatile
 33668                           
 33669                           ; BSR set to: 14
 33670  000026  ABCA               	btfss	202,5,b	;volatile
 33671  000028  D003               	goto	i2l867
 33672                           
 33673                           ; BSR set to: 14
 33674                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 33675  00002A  EC42  F049         	call	_TMR0_ISR	;wreg free
 33676                           
 33677                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 33678  00002E  D028               	goto	i2l873
 33679  000030                     i2l867:
 33680                           
 33681                           ; BSR set to: 14
 33682  000030  ACF2               	btfss	242,6,c	;volatile
 33683  000032  D026               	goto	i2l873
 33684                           
 33685                           ; BSR set to: 14
 33686                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 33687  000034  B9C5               	btfsc	197,4,b	;volatile
 33688                           
 33689                           ; BSR set to: 14
 33690  000036  A9CD               	btfss	205,4,b	;volatile
 33691  000038  D009               	goto	i2l870
 33692                           
 33693                           ; BSR set to: 14
 33694                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 33695  00003A  D801               	call	i2u2220_48
 33696  00003C  D021               	goto	i2l873
 33697  00003E                     i2u2220_48:
 33698  00003E  0005               	push	
 33699  000040  6EFA               	movwf	pclath,c
 33700  000042  0102               	movlb	2	; () banked
 33701  000044  51EF               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 33702  000046  6EFD               	movwf	tosl,c
 33703  000048  51F0               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 33704  00004A  D00B               	goto	L112
 33705  00004C                     i2l870:
 33706                           
 33707                           ; BSR set to: 14
 33708  00004C  BBC5               	btfsc	197,5,b	;volatile
 33709                           
 33710                           ; BSR set to: 14
 33711  00004E  ABCD               	btfss	205,5,b	;volatile
 33712  000050  D00C               	goto	i2l872
 33713                           
 33714                           ; BSR set to: 14
 33715                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 33716  000052  D801               	call	i2u2223_48
 33717  000054  D015               	goto	i2l873
 33718  000056                     i2u2223_48:
 33719  000056  0005               	push	
 33720  000058  6EFA               	movwf	pclath,c
 33721  00005A  0102               	movlb	2	; () banked
 33722  00005C  51ED               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 33723  00005E  6EFD               	movwf	tosl,c
 33724  000060  51EE               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 33725  000062                     L112:
 33726  000062  6EFE               	movwf	tosh,c
 33727  000064  6AFF               	clrf	tosu,c
 33728  000066  50FA               	movf	pclath,w,c
 33729  000068  0012               	return		;indir
 33730  00006A                     i2l872:
 33731                           
 33732                           ; BSR set to: 14
 33733  00006A  B1C6               	btfsc	198,0,b	;volatile
 33734                           
 33735                           ; BSR set to: 14
 33736  00006C  A1CE               	btfss	206,0,b	;volatile
 33737  00006E  D003               	goto	i2l874
 33738                           
 33739                           ; BSR set to: 14
 33740                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 33741  000070  ECBB  F046         	call	_TMR1_ISR	;wreg free
 33742                           
 33743                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 33744  000074  D005               	goto	i2l873
 33745  000076                     i2l874:
 33746                           
 33747                           ; BSR set to: 14
 33748  000076  B3C6               	btfsc	198,1,b	;volatile
 33749                           
 33750                           ; BSR set to: 14
 33751  000078  A3CE               	btfss	206,1,b	;volatile
 33752  00007A  D002               	goto	i2l873
 33753                           
 33754                           ; BSR set to: 14
 33755                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR2_ISR();
 33756  00007C  EC3D  F032         	call	_TMR2_ISR	;wreg free
 33757  000080                     i2l873:
 33758                           
 33759                           ; BSR set to: 14
 33760  000080  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 33761  000084  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 33762  000088  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 33763  00008C  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 33764  000090  C00B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 33765  000094  C00A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 33766  000098  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 33767  00009A  0011               	retfie		f
 33768  00009C                     __end_of_INTERRUPT_InterruptManager:
 33769                           	callstack 0
 33770                           
 33771 ;; *************** function _TMR2_ISR *****************
 33772 ;; Defined at:
 33773 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 33774 ;; Parameters:    Size  Location     Type
 33775 ;;		None
 33776 ;; Auto vars:     Size  Location     Type
 33777 ;;		None
 33778 ;; Return value:  Size  Location     Type
 33779 ;;                  1    wreg      void 
 33780 ;; Registers used:
 33781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 33782 ;; Tracked objects:
 33783 ;;		On entry : 3F/E
 33784 ;;		On exit  : 0/0
 33785 ;;		Unchanged: 0/0
 33786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33791 ;;Total ram usage:        0 bytes
 33792 ;; Hardware stack levels used: 1
 33793 ;; Hardware stack levels required when called: 2
 33794 ;; This function calls:
 33795 ;;		Absolute function
 33796 ;;		_ReadADC
 33797 ;;		_TMR2_DefaultInterruptHandler
 33798 ;;		_controlTimeslots
 33799 ;;		_refreshSegment
 33800 ;; This function is called by:
 33801 ;;		_INTERRUPT_InterruptManager
 33802 ;; This function uses a non-reentrant model
 33803 ;;
 33804                           
 33805                           	psect	text186
 33806  00647A                     __ptext186:
 33807                           	callstack 0
 33808  00647A                     _TMR2_ISR:
 33809                           	callstack 14
 33810                           
 33811                           ; BSR set to: 14
 33812                           ;mcc_generated_files/tmr2.c: 184:     PIR4bits.TMR2IF = 0;
 33813                           
 33814                           ;incstack = 0
 33815  00647A  93CE               	bcf	206,1,b	;volatile
 33816                           
 33817                           ; BSR set to: 14
 33818                           ;mcc_generated_files/tmr2.c: 188:                 ReadADC();
 33819  00647C  EC47  F044         	call	_ReadADC	;wreg free
 33820                           
 33821                           ;mcc_generated_files/tmr2.c: 191:             refreshSegment();
 33822  006480  EC44  F03E         	call	_refreshSegment	;wreg free
 33823                           
 33824                           ;mcc_generated_files/tmr2.c: 193:             if(ts_system.ts_TimeSlotMain>0)
 33825  006484  0101               	movlb	1	; () banked
 33826  006486  519E               	movf	(_ts_system+3)& (0+255),w,b	;volatile
 33827  006488  A4D8               	btfss	status,2,c
 33828                           
 33829                           ; BSR set to: 1
 33830                           ;mcc_generated_files/tmr2.c: 194:                 {;mcc_generated_files/tmr2.c: 195:    
      +                                       ts_system.ts_TimeSlotMain--;
 33831  00648A  079E               	decf	(_ts_system+3)& (0+255),f,b	;volatile
 33832                           
 33833                           ; BSR set to: 1
 33834                           ;mcc_generated_files/tmr2.c: 198:             if (ts_system.ts_TimeSlot50ms > 0)
 33835  00648C  519C               	movf	(_ts_system+1)& (0+255),w,b	;volatile
 33836  00648E  B4D8               	btfsc	status,2,c
 33837  006490  D002               	goto	i2l16544
 33838                           
 33839                           ; BSR set to: 1
 33840                           ;mcc_generated_files/tmr2.c: 199:                 {;mcc_generated_files/tmr2.c: 200:    
      +                                       ts_system.ts_TimeSlot50ms--;
 33841  006492  079C               	decf	(_ts_system+1)& (0+255),f,b	;volatile
 33842                           
 33843                           ;mcc_generated_files/tmr2.c: 201:                 }
 33844  006494  D089               	goto	i2l16616
 33845  006496                     i2l16544:
 33846                           
 33847                           ; BSR set to: 1
 33848                           ;mcc_generated_files/tmr2.c: 203:                 {;mcc_generated_files/tmr2.c: 204:    
      +                                       ts_system.ts_TimeSlot50ms = 50;
 33849  006496  0E32               	movlw	50
 33850  006498  6F9C               	movwf	(_ts_system+1)& (0+255),b	;volatile
 33851                           
 33852                           ; BSR set to: 1
 33853                           ;mcc_generated_files/tmr2.c: 208:                     controlTimeslots();
 33854  00649A  EC64  F02E         	call	_controlTimeslots	;wreg free
 33855                           
 33856                           ; BSR set to: 1
 33857                           ;mcc_generated_files/tmr2.c: 210:                       if (Counterchoose == 0)
 33858  00649E  0100               	movlb	0	; () banked
 33859  0064A0  5192               	movf	_Counterchoose& (0+255),w,b
 33860  0064A2  A4D8               	btfss	status,2,c
 33861  0064A4  D002               	goto	i2l16552
 33862                           
 33863                           ; BSR set to: 0
 33864                           ;mcc_generated_files/tmr2.c: 211:                                {;mcc_generated_files/t
      +                          mr2.c: 212:                                    Counterchoose = 1;
 33865  0064A6  0E01               	movlw	1
 33866  0064A8  D001               	goto	L113
 33867  0064AA                     i2l16552:
 33868                           
 33869                           ; BSR set to: 0
 33870                           ;mcc_generated_files/tmr2.c: 215:                                {;mcc_generated_files/t
      +                          mr2.c: 216:                                    Counterchoose = 0;
 33871  0064AA  0E00               	movlw	0
 33872  0064AC                     L113:
 33873  0064AC  6F92               	movwf	_Counterchoose& (0+255),b
 33874                           
 33875                           ; BSR set to: 0
 33876                           ;mcc_generated_files/tmr2.c: 218:                            if (var_sys.LearningIsEnabl
      +                          ed==NO)
 33877                           
 33878                           ;mcc_generated_files/tmr2.c: 217:                                }
 33879  0064AE  0101               	movlb	1	; () banked
 33880  0064B0  5126               	movf	(_var_sys+38)& (0+255),w,b	;volatile
 33881  0064B2  A4D8               	btfss	status,2,c
 33882  0064B4  D034               	goto	i2l16578
 33883                           
 33884                           ; BSR set to: 1
 33885                           ;mcc_generated_files/tmr2.c: 219:                            {;mcc_generated_files/tmr2.
      +                          c: 222:                                if (var_sys.TimeMaxMotorIsON > 0 && var_sys.Activ
      +                          atecounter != stoped)
 33886  0064B6  5118               	movf	(_var_sys+24)& (0+255),w,b	;volatile
 33887  0064B8  1119               	iorwf	(_var_sys+25)& (0+255),w,b	;volatile
 33888  0064BA  111A               	iorwf	(_var_sys+26)& (0+255),w,b	;volatile
 33889  0064BC  111B               	iorwf	(_var_sys+27)& (0+255),w,b	;volatile
 33890  0064BE  B4D8               	btfsc	status,2,c
 33891  0064C0  D008               	goto	i2l1266
 33892                           
 33893                           ; BSR set to: 1
 33894  0064C2  5116               	movf	(_var_sys+22)& (0+255),w,b	;volatile
 33895  0064C4  B4D8               	btfsc	status,2,c
 33896  0064C6  D005               	goto	i2l1266
 33897                           
 33898                           ; BSR set to: 1
 33899                           ;mcc_generated_files/tmr2.c: 223:                                {;mcc_generated_files/t
      +                          mr2.c: 225:                                     var_sys.TimeMaxMotorIsON--;
 33900  0064C8  0718               	decf	(_var_sys+24)& (0+255),f,b	;volatile
 33901  0064CA  0E00               	movlw	0
 33902  0064CC  5B19               	subwfb	(_var_sys+25)& (0+255),f,b	;volatile
 33903  0064CE  5B1A               	subwfb	(_var_sys+26)& (0+255),f,b	;volatile
 33904  0064D0  5B1B               	subwfb	(_var_sys+27)& (0+255),f,b	;volatile
 33905  0064D2                     i2l1266:
 33906                           
 33907                           ; BSR set to: 1
 33908                           ;mcc_generated_files/tmr2.c: 230:                                if (var_sys.Activatecou
      +                          nter == open)
 33909  0064D2  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33910  0064D4  A4D8               	btfss	status,2,c
 33911  0064D6  D00E               	goto	i2l16568
 33912                           
 33913                           ; BSR set to: 1
 33914                           ;mcc_generated_files/tmr2.c: 231:                                {;mcc_generated_files/t
      +                          mr2.c: 232:                                    {;mcc_generated_files/tmr2.c: 234:       
      +                                                            if (powerControl_st.decelarationActive==YES)
 33915  0064D8  057B               	decf	_powerControl_st& (0+255),w,b
 33916  0064DA  A4D8               	btfss	status,2,c
 33917  0064DC  D004               	goto	i2u1870_40
 33918                           
 33919                           ; BSR set to: 1
 33920                           ;mcc_generated_files/tmr2.c: 235:                                         {;mcc_generate
      +                          d_files/tmr2.c: 236:                                             if(Counterchoose ==1){
 33921  0064DE  0100               	movlb	0	; () banked
 33922  0064E0  0592               	decf	_Counterchoose& (0+255),w,b
 33923  0064E2  A4D8               	btfss	status,2,c
 33924  0064E4  D061               	goto	i2l16616
 33925  0064E6                     i2u1870_40:
 33926                           
 33927                           ;mcc_generated_files/tmr2.c: 237:                                               var_sys.
      +                          PositionActual++;
 33928  0064E6  0E01               	movlw	1
 33929  0064E8  0101               	movlb	1	; () banked
 33930  0064EA  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33931  0064EC  0E00               	movlw	0
 33932  0064EE  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33933  0064F0  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33934  0064F2  D013               	goto	L114
 33935  0064F4                     i2l16568:
 33936                           
 33937                           ; BSR set to: 1
 33938  0064F4  0E02               	movlw	2
 33939  0064F6  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 33940  0064F8  A4D8               	btfss	status,2,c
 33941  0064FA  D056               	goto	i2l16616
 33942                           
 33943                           ; BSR set to: 1
 33944                           ;mcc_generated_files/tmr2.c: 250:                                {;mcc_generated_files/t
      +                          mr2.c: 251:                                        if (powerControl_st.decelarationActiv
      +                          e==YES)
 33945  0064FC  057B               	decf	_powerControl_st& (0+255),w,b
 33946  0064FE  A4D8               	btfss	status,2,c
 33947  006500  D004               	goto	i2u1873_40
 33948                           
 33949                           ; BSR set to: 1
 33950                           ;mcc_generated_files/tmr2.c: 252:                                         {;mcc_generate
      +                          d_files/tmr2.c: 253:                                             if(Counterchoose ==1){
 33951  006502  0100               	movlb	0	; () banked
 33952  006504  0592               	decf	_Counterchoose& (0+255),w,b
 33953  006506  A4D8               	btfss	status,2,c
 33954  006508  D04F               	goto	i2l16616
 33955  00650A                     i2u1873_40:
 33956                           
 33957                           ;mcc_generated_files/tmr2.c: 254:                                               var_sys.
      +                          PositionActual--;
 33958  00650A  0EFF               	movlw	255
 33959  00650C  0101               	movlb	1	; () banked
 33960  00650E  271E               	addwf	(_var_sys+30)& (0+255),f,b	;volatile
 33961  006510  0EFF               	movlw	255
 33962  006512  231F               	addwfc	(_var_sys+31)& (0+255),f,b	;volatile
 33963  006514  0EFF               	movlw	255
 33964  006516  2320               	addwfc	(_var_sys+32)& (0+255),f,b	;volatile
 33965  006518  0EFF               	movlw	255
 33966  00651A                     L114:
 33967  00651A  2321               	addwfc	(_var_sys+33)& (0+255),f,b	;volatile
 33968                           
 33969                           ;mcc_generated_files/tmr2.c: 263:                            }
 33970  00651C  D045               	goto	i2l16616
 33971  00651E                     i2l16578:
 33972                           
 33973                           ; BSR set to: 1
 33974                           ;mcc_generated_files/tmr2.c: 266:                            {;mcc_generated_files/tmr2.
      +                          c: 267:                                if (var_sys.Counter_Learning ==1)
 33975  00651E  0517               	decf	(_var_sys+23)& (0+255),w,b	;volatile
 33976  006520  A4D8               	btfss	status,2,c
 33977  006522  D01C               	goto	i2l1277
 33978                           
 33979                           ; BSR set to: 1
 33980                           ;mcc_generated_files/tmr2.c: 268:                                {;mcc_generated_files/t
      +                          mr2.c: 270:                                     if (var_sys.Activatecounter == open)
 33981  006524  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 33982  006526  A4D8               	btfss	status,2,c
 33983  006528  D00B               	goto	i2l16588
 33984                           
 33985                           ; BSR set to: 1
 33986                           ;mcc_generated_files/tmr2.c: 271:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 273:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 33987  00652A  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 33988  00652C  B4D8               	btfsc	status,2,c
 33989  00652E  D016               	goto	i2l1277
 33990                           
 33991                           ; BSR set to: 1
 33992                           ;mcc_generated_files/tmr2.c: 282:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 283:                                              learn_st.timeOpen++
      +                          ;
 33993  006530  0E01               	movlw	1
 33994  006532  0100               	movlb	0	; () banked
 33995  006534  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 33996  006536  0E00               	movlw	0
 33997  006538  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 33998  00653A  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 33999  00653C  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34000  00653E  D00E               	goto	i2l1277
 34001  006540                     i2l16588:
 34002                           
 34003                           ; BSR set to: 1
 34004  006540  0E02               	movlw	2
 34005  006542  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34006  006544  A4D8               	btfss	status,2,c
 34007  006546  D00A               	goto	i2l1277
 34008                           
 34009                           ; BSR set to: 1
 34010                           ;mcc_generated_files/tmr2.c: 287:                                     {;mcc_generated_fi
      +                          les/tmr2.c: 289:                                         if (var_sys.LearningDecelaratio
      +                          n ==1)
 34011  006548  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34012  00654A  B4D8               	btfsc	status,2,c
 34013  00654C  D007               	goto	i2l1277
 34014                           
 34015                           ; BSR set to: 1
 34016                           ;mcc_generated_files/tmr2.c: 297:                                             {;mcc_gene
      +                          rated_files/tmr2.c: 298:                                                learn_st.timeClo
      +                          se++;
 34017  00654E  0E01               	movlw	1
 34018  006550  0100               	movlb	0	; () banked
 34019  006552  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 34020  006554  0E00               	movlw	0
 34021  006556  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34022  006558  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34023  00655A  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34024  00655C                     i2l1277:
 34025                           
 34026                           ;mcc_generated_files/tmr2.c: 304:                                 if (var_sys.LearningDe
      +                          celaration ==1 && var_sys.programinAutomatic == 1)
 34027  00655C  0101               	movlb	1	; () banked
 34028  00655E  0547               	decf	(_var_sys+71)& (0+255),w,b	;volatile
 34029  006560  A4D8               	btfss	status,2,c
 34030  006562  D022               	goto	i2l16616
 34031                           
 34032                           ; BSR set to: 1
 34033  006564  052A               	decf	(_var_sys+42)& (0+255),w,b	;volatile
 34034  006566  A4D8               	btfss	status,2,c
 34035  006568  D01F               	goto	i2l16616
 34036                           
 34037                           ; BSR set to: 1
 34038                           ;mcc_generated_files/tmr2.c: 305:                                 {;mcc_generated_files/
      +                          tmr2.c: 308:                                        if ( ts_system.ts_TimeSlot500ms > 0)
 34039  00656A  519B               	movf	_ts_system& (0+255),w,b	;volatile
 34040  00656C  B4D8               	btfsc	status,2,c
 34041  00656E  D002               	goto	i2l16602
 34042                           
 34043                           ; BSR set to: 1
 34044                           ;mcc_generated_files/tmr2.c: 309:                                            {;mcc_gener
      +                          ated_files/tmr2.c: 310:                                                ts_system.ts_Time
      +                          Slot500ms--;
 34045  006570  079B               	decf	_ts_system& (0+255),f,b	;volatile
 34046                           
 34047                           ;mcc_generated_files/tmr2.c: 311:                                            }
 34048  006572  D01A               	goto	i2l16616
 34049  006574                     i2l16602:
 34050                           
 34051                           ; BSR set to: 1
 34052                           ;mcc_generated_files/tmr2.c: 314:                                          {;mcc_generat
      +                          ed_files/tmr2.c: 315:                                             ts_system.ts_TimeSlot5
      +                          00ms = 10;
 34053  006574  0E0A               	movlw	10
 34054  006576  6F9B               	movwf	_ts_system& (0+255),b	;volatile
 34055                           
 34056                           ; BSR set to: 1
 34057                           ;mcc_generated_files/tmr2.c: 317:                                             if ( var_s
      +                          ys.Activatecounter ==open )
 34058  006578  0516               	decf	(_var_sys+22)& (0+255),w,b	;volatile
 34059  00657A  A4D8               	btfss	status,2,c
 34060  00657C  D009               	goto	i2l16610
 34061                           
 34062                           ; BSR set to: 1
 34063                           ;mcc_generated_files/tmr2.c: 318:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 319:                                                  learn_st.ti
      +                          meDecelerationOpen++;
 34064  00657E  0100               	movlb	0	; () banked
 34065  006580  2B69               	incf	(_learn_st+9)& (0+255),f,b	;volatile
 34066                           
 34067                           ; BSR set to: 0
 34068                           ;mcc_generated_files/tmr2.c: 320:                                                  learn
      +                          _st.timeOpen++;
 34069  006582  0E01               	movlw	1
 34070  006584  2764               	addwf	(_learn_st+4)& (0+255),f,b	;volatile
 34071  006586  0E00               	movlw	0
 34072  006588  2365               	addwfc	(_learn_st+5)& (0+255),f,b	;volatile
 34073  00658A  2366               	addwfc	(_learn_st+6)& (0+255),f,b	;volatile
 34074  00658C  2367               	addwfc	(_learn_st+7)& (0+255),f,b	;volatile
 34075                           
 34076                           ;mcc_generated_files/tmr2.c: 322:                                                }
 34077  00658E  D00C               	goto	i2l16616
 34078  006590                     i2l16610:
 34079                           
 34080                           ; BSR set to: 1
 34081  006590  0E02               	movlw	2
 34082  006592  1916               	xorwf	(_var_sys+22)& (0+255),w,b	;volatile
 34083  006594  A4D8               	btfss	status,2,c
 34084  006596  D008               	goto	i2l16616
 34085                           
 34086                           ; BSR set to: 1
 34087                           ;mcc_generated_files/tmr2.c: 325:                                                {;mcc_g
      +                          enerated_files/tmr2.c: 326:                                                  learn_st.ti
      +                          meDecelerationClose++;
 34088  006598  0100               	movlb	0	; () banked
 34089  00659A  2B68               	incf	(_learn_st+8)& (0+255),f,b	;volatile
 34090                           
 34091                           ; BSR set to: 0
 34092                           ;mcc_generated_files/tmr2.c: 327:                                                  learn
      +                          _st.timeClose++;
 34093  00659C  0E01               	movlw	1
 34094  00659E  2760               	addwf	_learn_st& (0+255),f,b	;volatile
 34095  0065A0  0E00               	movlw	0
 34096  0065A2  2361               	addwfc	(_learn_st+1)& (0+255),f,b	;volatile
 34097  0065A4  2362               	addwfc	(_learn_st+2)& (0+255),f,b	;volatile
 34098  0065A6  2363               	addwfc	(_learn_st+3)& (0+255),f,b	;volatile
 34099  0065A8                     i2l16616:
 34100                           
 34101                           ;mcc_generated_files/tmr2.c: 335:     if(TMR2_InterruptHandler)
 34102  0065A8  0102               	movlb	2	; () banked
 34103  0065AA  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34104  0065AC  11E0               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34105  0065AE  B4D8               	btfsc	status,2,c
 34106  0065B0  0012               	return	
 34107                           
 34108                           ; BSR set to: 2
 34109                           ;mcc_generated_files/tmr2.c: 336:     {;mcc_generated_files/tmr2.c: 337:         TMR2_In
      +                          terruptHandler();
 34110  0065B2  D801               	call	i2u1885_48
 34111  0065B4  0012               	return	
 34112  0065B6                     i2u1885_48:
 34113  0065B6  0005               	push	
 34114  0065B8  6EFA               	movwf	pclath,c
 34115  0065BA  51DF               	movf	_TMR2_InterruptHandler& (0+255),w,b
 34116  0065BC  6EFD               	movwf	tosl,c
 34117  0065BE  51E0               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 34118  0065C0  6EFE               	movwf	tosh,c
 34119  0065C2  6AFF               	clrf	tosu,c
 34120  0065C4  50FA               	movf	pclath,w,c
 34121  0065C6  0012               	return		;indir
 34122  0065C8                     __end_of_TMR2_ISR:
 34123                           	callstack 0
 34124                           
 34125 ;; *************** function _refreshSegment *****************
 34126 ;; Defined at:
 34127 ;;		line 50 in file "outputs_MC50.c"
 34128 ;; Parameters:    Size  Location     Type
 34129 ;;		None
 34130 ;; Auto vars:     Size  Location     Type
 34131 ;;		None
 34132 ;; Return value:  Size  Location     Type
 34133 ;;                  1    wreg      void 
 34134 ;; Registers used:
 34135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34136 ;; Tracked objects:
 34137 ;;		On entry : 31/E
 34138 ;;		On exit  : 3E/0
 34139 ;;		Unchanged: 0/0
 34140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34145 ;;Total ram usage:        0 bytes
 34146 ;; Hardware stack levels used: 1
 34147 ;; Hardware stack levels required when called: 1
 34148 ;; This function calls:
 34149 ;;		_Segments_Set
 34150 ;; This function is called by:
 34151 ;;		_TMR2_ISR
 34152 ;; This function uses a non-reentrant model
 34153 ;;
 34154                           
 34155                           	psect	text187
 34156  007C88                     __ptext187:
 34157                           	callstack 0
 34158  007C88                     _refreshSegment:
 34159                           	callstack 14
 34160                           
 34161                           ;outputs_MC50.c: 54:     if (dispStruct.intermitentFreq==0||dispStruct.upFase==1)
 34162                           
 34163                           ;incstack = 0
 34164  007C88  0100               	movlb	0	; () banked
 34165  007C8A  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 34166  007C8C  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 34167  007C8E  B4D8               	btfsc	status,2,c
 34168  007C90  D003               	goto	i2u1486_40
 34169                           
 34170                           ; BSR set to: 0
 34171  007C92  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 34172  007C94  A4D8               	btfss	status,2,c
 34173  007C96  D01F               	goto	i2l2128
 34174  007C98                     i2u1486_40:
 34175                           
 34176                           ; BSR set to: 0
 34177                           ;outputs_MC50.c: 55:     {;outputs_MC50.c: 56:         if (dispStruct.lastDisplay==disp2
      +                          _e)
 34178  007C98  0574               	decf	(_dispStruct+2)& (0+255),w,b	;volatile
 34179  007C9A  A4D8               	btfss	status,2,c
 34180  007C9C  D00D               	goto	i2l2123
 34181                           
 34182                           ; BSR set to: 0
 34183                           
 34184                           ;outputs_MC50.c: 57:         {;outputs_MC50.c: 58:             do { LATCbits.LATC0 = 0; 
      +                          } while(0);
 34185  007C9E  9085               	bcf	133,0,c	;volatile
 34186                           
 34187                           ; BSR set to: 0
 34188                           ;outputs_MC50.c: 59:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play1]);
 34189  007CA0  0ED2               	movlw	low _DispTable
 34190  007CA2  2572               	addwf	_dispStruct& (0+255),w,b	;volatile
 34191  007CA4  6ED9               	movwf	fsr2l,c
 34192  007CA6  6ADA               	clrf	fsr2h,c
 34193  007CA8  0E03               	movlw	high _DispTable
 34194  007CAA  22DA               	addwfc	fsr2h,f,c
 34195  007CAC  50DF               	movf	indf2,w,c
 34196  007CAE  ECE7  F04A         	call	_Segments_Set
 34197  007CB2  8285               	bsf	133,1,c	;volatile
 34198                           
 34199                           ;outputs_MC50.c: 61:             dispStruct.lastDisplay=disp1_e;
 34200  007CB4  0E00               	movlw	0
 34201  007CB6  D00C               	goto	L115
 34202  007CB8                     i2l2123:
 34203                           
 34204                           ; BSR set to: 0
 34205  007CB8  9285               	bcf	133,1,c	;volatile
 34206                           
 34207                           ; BSR set to: 0
 34208                           ;outputs_MC50.c: 66:             Segments_Set(DispTable[dispStruct.display_grp.value_dis
      +                          play2]);
 34209  007CBA  0ED2               	movlw	low _DispTable
 34210  007CBC  2573               	addwf	(_dispStruct+1)& (0+255),w,b	;volatile
 34211  007CBE  6ED9               	movwf	fsr2l,c
 34212  007CC0  6ADA               	clrf	fsr2h,c
 34213  007CC2  0E03               	movlw	high _DispTable
 34214  007CC4  22DA               	addwfc	fsr2h,f,c
 34215  007CC6  50DF               	movf	indf2,w,c
 34216  007CC8  ECE7  F04A         	call	_Segments_Set
 34217  007CCC  8085               	bsf	133,0,c	;volatile
 34218                           
 34219                           ;outputs_MC50.c: 68:             dispStruct.lastDisplay=disp2_e;
 34220  007CCE  0E01               	movlw	1
 34221  007CD0                     L115:
 34222  007CD0  0100               	movlb	0	; () banked
 34223  007CD2  6F74               	movwf	(_dispStruct+2)& (0+255),b	;volatile
 34224  007CD4  D002               	goto	i2l14620
 34225  007CD6                     i2l2128:
 34226                           
 34227                           ; BSR set to: 0
 34228  007CD6  9085               	bcf	133,0,c	;volatile
 34229                           
 34230                           ; BSR set to: 0
 34231                           
 34232                           ;outputs_MC50.c: 75:         do { LATCbits.LATC1 = 0; } while(0);
 34233  007CD8  9285               	bcf	133,1,c	;volatile
 34234  007CDA                     i2l14620:
 34235                           
 34236                           ; BSR set to: 0
 34237                           ;outputs_MC50.c: 79:     if(ts_system.timeFreqDigit<=0 && dispStruct.intermitentFreq!=0)
 34238  007CDA  0101               	movlb	1	; () banked
 34239  007CDC  BFA6               	btfsc	(_ts_system+11)& (0+255),7,b	;volatile
 34240  007CDE  D005               	goto	i2u1488_40
 34241  007CE0  51A6               	movf	(_ts_system+11)& (0+255),w,b	;volatile
 34242  007CE2  E114               	bnz	i2l2135
 34243  007CE4  05A5               	decf	(_ts_system+10)& (0+255),w,b	;volatile
 34244  007CE6  B0D8               	btfsc	status,0,c
 34245  007CE8  0012               	return	
 34246  007CEA                     i2u1488_40:
 34247                           
 34248                           ; BSR set to: 1
 34249  007CEA  0100               	movlb	0	; () banked
 34250  007CEC  5175               	movf	(_dispStruct+3)& (0+255),w,b	;volatile
 34251  007CEE  1176               	iorwf	(_dispStruct+4)& (0+255),w,b	;volatile
 34252  007CF0  B4D8               	btfsc	status,2,c
 34253  007CF2  0012               	return	
 34254                           
 34255                           ; BSR set to: 0
 34256                           ;outputs_MC50.c: 80:     {;outputs_MC50.c: 81:         ts_system.timeFreqDigit=dispStruc
      +                          t.intermitentFreq;
 34257  007CF4  C075  F1A5         	movff	_dispStruct+3,_ts_system+10	;volatile
 34258  007CF8  C076  F1A6         	movff	_dispStruct+4,_ts_system+11	;volatile
 34259                           
 34260                           ; BSR set to: 0
 34261                           ;outputs_MC50.c: 82:         if(dispStruct.upFase==1)
 34262  007CFC  0577               	decf	(_dispStruct+5)& (0+255),w,b	;volatile
 34263  007CFE  A4D8               	btfss	status,2,c
 34264  007D00  D003               	goto	i2l14630
 34265                           
 34266                           ; BSR set to: 0
 34267                           ;outputs_MC50.c: 83:         {;outputs_MC50.c: 84:             dispStruct.upFase = 0;
 34268  007D02  0E00               	movlw	0
 34269  007D04  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 34270                           
 34271                           ;outputs_MC50.c: 85:         }
 34272  007D06  0012               	return	
 34273  007D08                     i2l14630:
 34274                           
 34275                           ; BSR set to: 0
 34276                           ;outputs_MC50.c: 87:         {;outputs_MC50.c: 88:             dispStruct.upFase = 1;
 34277  007D08  0E01               	movlw	1
 34278  007D0A  6F77               	movwf	(_dispStruct+5)& (0+255),b	;volatile
 34279  007D0C                     i2l2135:
 34280  007D0C  0012               	return		;funcret
 34281  007D0E                     __end_of_refreshSegment:
 34282                           	callstack 0
 34283                           
 34284 ;; *************** function _Segments_Set *****************
 34285 ;; Defined at:
 34286 ;;		line 93 in file "outputs_MC50.c"
 34287 ;; Parameters:    Size  Location     Type
 34288 ;;  value           1    wreg     unsigned char 
 34289 ;; Auto vars:     Size  Location     Type
 34290 ;;  value           1    0[COMRAM] unsigned char 
 34291 ;; Return value:  Size  Location     Type
 34292 ;;                  1    wreg      void 
 34293 ;; Registers used:
 34294 ;;		wreg, status,2, status,0
 34295 ;; Tracked objects:
 34296 ;;		On entry : 3F/0
 34297 ;;		On exit  : 0/0
 34298 ;;		Unchanged: 0/0
 34299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34303 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34304 ;;Total ram usage:        1 bytes
 34305 ;; Hardware stack levels used: 1
 34306 ;; This function calls:
 34307 ;;		Nothing
 34308 ;; This function is called by:
 34309 ;;		_refreshSegment
 34310 ;; This function uses a non-reentrant model
 34311 ;;
 34312                           
 34313                           	psect	text188
 34314  0095CE                     __ptext188:
 34315                           	callstack 0
 34316  0095CE                     _Segments_Set:
 34317                           	callstack 14
 34318                           
 34319                           ;incstack = 0
 34320                           ;Segments_Set@value stored from wreg
 34321  0095CE  6E01               	movwf	Segments_Set@value^0,c
 34322                           
 34323                           ;outputs_MC50.c: 93: void Segments_Set(char value);outputs_MC50.c: 94: {;outputs_MC50.c:
      +                           95:    LATD &= 0x80;
 34324  0095D0  0E80               	movlw	128
 34325  0095D2  1686               	andwf	134,f,c	;volatile
 34326                           
 34327                           ;outputs_MC50.c: 96:    LATD |= value;
 34328  0095D4  5001               	movf	Segments_Set@value^0,w,c	;volatile
 34329  0095D6  1286               	iorwf	134,f,c	;volatile
 34330  0095D8  0012               	return		;funcret
 34331  0095DA                     __end_of_Segments_Set:
 34332                           	callstack 0
 34333                           
 34334 ;; *************** function _controlTimeslots *****************
 34335 ;; Defined at:
 34336 ;;		line 190 in file "main_MC50.c"
 34337 ;; Parameters:    Size  Location     Type
 34338 ;;		None
 34339 ;; Auto vars:     Size  Location     Type
 34340 ;;		None
 34341 ;; Return value:  Size  Location     Type
 34342 ;;                  1    wreg      void 
 34343 ;; Registers used:
 34344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34345 ;; Tracked objects:
 34346 ;;		On entry : 3F/1
 34347 ;;		On exit  : 3F/1
 34348 ;;		Unchanged: 0/0
 34349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34354 ;;Total ram usage:        0 bytes
 34355 ;; Hardware stack levels used: 1
 34356 ;; Hardware stack levels required when called: 1
 34357 ;; This function calls:
 34358 ;;		_decrementTimeslot
 34359 ;; This function is called by:
 34360 ;;		_TMR2_ISR
 34361 ;; This function uses a non-reentrant model
 34362 ;;
 34363                           
 34364                           	psect	text189
 34365  005CC8                     __ptext189:
 34366                           	callstack 0
 34367  005CC8                     _controlTimeslots:
 34368                           	callstack 14
 34369                           
 34370                           ; BSR set to: 1
 34371                           ;main_MC50.c: 192:  decrementTimeslot((int*)&ts_system.Debug_TS);
 34372                           
 34373                           ;incstack = 0
 34374  005CC8  0EA3               	movlw	low (_ts_system+8)
 34375  005CCA  6E01               	movwf	decrementTimeslot@ts^0,c
 34376  005CCC  0E01               	movlw	high (_ts_system+8)
 34377  005CCE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34378  005CD0  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34379                           
 34380                           ;main_MC50.c: 193:     decrementTimeslot((int*)&ts_system.timewaitFlashRGB);
 34381  005CD4  0EE1               	movlw	low (_ts_system+70)
 34382  005CD6  6E01               	movwf	decrementTimeslot@ts^0,c
 34383  005CD8  0E01               	movlw	high (_ts_system+70)
 34384  005CDA  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34385  005CDC  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34386                           
 34387                           ;main_MC50.c: 194:     decrementTimeslot((int*)&ts_system.timeFreqDigit);
 34388  005CE0  0EA5               	movlw	low (_ts_system+10)
 34389  005CE2  6E01               	movwf	decrementTimeslot@ts^0,c
 34390  005CE4  0E01               	movlw	high (_ts_system+10)
 34391  005CE6  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34392  005CE8  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34393                           
 34394                           ;main_MC50.c: 195:     decrementTimeslot((int*)&ts_system.timeSinalizationDigit);
 34395  005CEC  0EA7               	movlw	low (_ts_system+12)
 34396  005CEE  6E01               	movwf	decrementTimeslot@ts^0,c
 34397  005CF0  0E01               	movlw	high (_ts_system+12)
 34398  005CF2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34399  005CF4  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34400                           
 34401                           ;main_MC50.c: 196:     decrementTimeslot((int*)&ts_system.timeoutMenu);
 34402  005CF8  0EA9               	movlw	low (_ts_system+14)
 34403  005CFA  6E01               	movwf	decrementTimeslot@ts^0,c
 34404  005CFC  0E01               	movlw	high (_ts_system+14)
 34405  005CFE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34406  005D00  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34407                           
 34408                           ;main_MC50.c: 197:     decrementTimeslot((int*)&ts_system.timeOpenWalk);
 34409  005D04  0EAB               	movlw	low (_ts_system+16)
 34410  005D06  6E01               	movwf	decrementTimeslot@ts^0,c
 34411  005D08  0E01               	movlw	high (_ts_system+16)
 34412  005D0A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34413  005D0C  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34414                           
 34415                           ;main_MC50.c: 198:     decrementTimeslot((int*)&ts_system.timeWaitToClose);
 34416  005D10  0EAD               	movlw	low (_ts_system+18)
 34417  005D12  6E01               	movwf	decrementTimeslot@ts^0,c
 34418  005D14  0E01               	movlw	high (_ts_system+18)
 34419  005D16  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34420  005D18  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34421                           
 34422                           ;main_MC50.c: 199:     decrementTimeslot((int*)&ts_system.TimeLastCommand);
 34423  005D1C  0EAF               	movlw	low (_ts_system+20)
 34424  005D1E  6E01               	movwf	decrementTimeslot@ts^0,c
 34425  005D20  0E01               	movlw	high (_ts_system+20)
 34426  005D22  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34427  005D24  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34428                           
 34429                           ;main_MC50.c: 200:     decrementTimeslot((int*)&ts_system.timeSoftStart);
 34430  005D28  0EB1               	movlw	low (_ts_system+22)
 34431  005D2A  6E01               	movwf	decrementTimeslot@ts^0,c
 34432  005D2C  0E01               	movlw	high (_ts_system+22)
 34433  005D2E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34434  005D30  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34435                           
 34436                           ;main_MC50.c: 201:     decrementTimeslot((int*)&ts_system.TimeChargeCondesador);
 34437  005D34  0EB5               	movlw	low (_ts_system+26)
 34438  005D36  6E01               	movwf	decrementTimeslot@ts^0,c
 34439  005D38  0E01               	movlw	high (_ts_system+26)
 34440  005D3A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34441  005D3C  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34442                           
 34443                           ;main_MC50.c: 203:     decrementTimeslot((int*)&ts_system.timeFreqRGB);
 34444  005D40  0EB7               	movlw	low (_ts_system+28)
 34445  005D42  6E01               	movwf	decrementTimeslot@ts^0,c
 34446  005D44  0E01               	movlw	high (_ts_system+28)
 34447  005D46  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34448  005D48  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34449                           
 34450                           ;main_MC50.c: 204:     decrementTimeslot((int*)&ts_system.timeFreqFlashligth);
 34451  005D4C  0EB9               	movlw	low (_ts_system+30)
 34452  005D4E  6E01               	movwf	decrementTimeslot@ts^0,c
 34453  005D50  0E01               	movlw	high (_ts_system+30)
 34454  005D52  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34455  005D54  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34456                           
 34457                           ;main_MC50.c: 206:     decrementTimeslot((int*)&ts_system.TimeWaitToNextState);
 34458  005D58  0EBF               	movlw	low (_ts_system+36)
 34459  005D5A  6E01               	movwf	decrementTimeslot@ts^0,c
 34460  005D5C  0E01               	movlw	high (_ts_system+36)
 34461  005D5E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34462  005D60  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34463                           
 34464                           ;main_MC50.c: 208:     decrementTimeslot((int*)&ts_system.timeBetweenSaveCounters);
 34465  005D64  0EC1               	movlw	low (_ts_system+38)
 34466  005D66  6E01               	movwf	decrementTimeslot@ts^0,c
 34467  005D68  0E01               	movlw	high (_ts_system+38)
 34468  005D6A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34469  005D6C  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34470                           
 34471                           ;main_MC50.c: 209:     decrementTimeslot((int*)&ts_system.TimeElectricBrake);
 34472  005D70  0EC3               	movlw	low (_ts_system+40)
 34473  005D72  6E01               	movwf	decrementTimeslot@ts^0,c
 34474  005D74  0E01               	movlw	high (_ts_system+40)
 34475  005D76  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34476  005D78  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34477                           
 34478                           ;main_MC50.c: 210:     decrementTimeslot((int*)&ts_system.TimeCurrentAlarm);
 34479  005D7C  0EC5               	movlw	low (_ts_system+42)
 34480  005D7E  6E01               	movwf	decrementTimeslot@ts^0,c
 34481  005D80  0E01               	movlw	high (_ts_system+42)
 34482  005D82  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34483  005D84  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34484                           
 34485                           ;main_MC50.c: 212:     decrementTimeslot((int*)&ts_system.TimeStopedBeforeDecelaration);
 34486  005D88  0EC7               	movlw	low (_ts_system+44)
 34487  005D8A  6E01               	movwf	decrementTimeslot@ts^0,c
 34488  005D8C  0E01               	movlw	high (_ts_system+44)
 34489  005D8E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34490  005D90  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34491                           
 34492                           ;main_MC50.c: 213:     decrementTimeslot((int*)&ts_system.TimeCurrentWaitForAlarm);
 34493  005D94  0EC9               	movlw	low (_ts_system+46)
 34494  005D96  6E01               	movwf	decrementTimeslot@ts^0,c
 34495  005D98  0E01               	movlw	high (_ts_system+46)
 34496  005D9A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34497  005D9C  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34498                           
 34499                           ;main_MC50.c: 214:     decrementTimeslot((int*)&ts_system.TimeInversionStart);
 34500  005DA0  0ECB               	movlw	low (_ts_system+48)
 34501  005DA2  6E01               	movwf	decrementTimeslot@ts^0,c
 34502  005DA4  0E01               	movlw	high (_ts_system+48)
 34503  005DA6  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34504  005DA8  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34505                           
 34506                           ;main_MC50.c: 215:     decrementTimeslot((int*)&ts_system.TimeReleCapacitor);
 34507  005DAC  0EDD               	movlw	low (_ts_system+66)
 34508  005DAE  6E01               	movwf	decrementTimeslot@ts^0,c
 34509  005DB0  0E01               	movlw	high (_ts_system+66)
 34510  005DB2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34511  005DB4  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34512                           
 34513                           ;main_MC50.c: 216:     decrementTimeslot((int*)&ts_system.TimeWaitReleCapacitor);
 34514  005DB8  0EDF               	movlw	low (_ts_system+68)
 34515  005DBA  6E01               	movwf	decrementTimeslot@ts^0,c
 34516  005DBC  0E01               	movlw	high (_ts_system+68)
 34517  005DBE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34518  005DC0  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34519                           
 34520                           ;main_MC50.c: 221:     if ( ( var_sys_NVM.electricBrake==0 ) || ( ts_system.TimeElectric
      +                          Brake<=0 ) )
 34521  005DC4  0100               	movlb	0	; () banked
 34522  005DC6  51AF               	movf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 34523  005DC8  B4D8               	btfsc	status,2,c
 34524  005DCA  D008               	goto	i2u1492_40
 34525                           
 34526                           ; BSR set to: 0
 34527  005DCC  0101               	movlb	1	; () banked
 34528  005DCE  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 34529  005DD0  D005               	goto	i2u1492_40
 34530  005DD2  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 34531  005DD4  E109               	bnz	i2l2019
 34532  005DD6  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 34533  005DD8  B0D8               	btfsc	status,0,c
 34534  005DDA  D006               	goto	i2l2019
 34535  005DDC                     i2u1492_40:
 34536                           
 34537                           ;main_MC50.c: 222:     {;main_MC50.c: 225:         decrementTimeslot((int*)&ts_system.In
      +                          vertionTimeClosingFromOpen);
 34538  005DDC  0ECD               	movlw	low (_ts_system+50)
 34539  005DDE  6E01               	movwf	decrementTimeslot@ts^0,c
 34540  005DE0  0E01               	movlw	high (_ts_system+50)
 34541  005DE2  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34542  005DE4  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34543  005DE8                     i2l2019:
 34544                           
 34545                           ;main_MC50.c: 228:     decrementTimeslot((int*)&ts_system.TimeWaitToGetCurrent);
 34546  005DE8  0ECF               	movlw	low (_ts_system+52)
 34547  005DEA  6E01               	movwf	decrementTimeslot@ts^0,c
 34548  005DEC  0E01               	movlw	high (_ts_system+52)
 34549  005DEE  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34550  005DF0  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34551                           
 34552                           ;main_MC50.c: 229:     decrementTimeslot((int*)&ts_system.TimeLearningDecelaration);
 34553  005DF4  0ED1               	movlw	low (_ts_system+54)
 34554  005DF6  6E01               	movwf	decrementTimeslot@ts^0,c
 34555  005DF8  0E01               	movlw	high (_ts_system+54)
 34556  005DFA  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34557  005DFC  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34558                           
 34559                           ;main_MC50.c: 230:     decrementTimeslot((int*)&ts_system.TimeTransitionDecelaration);
 34560  005E00  0ED3               	movlw	low (_ts_system+56)
 34561  005E02  6E01               	movwf	decrementTimeslot@ts^0,c
 34562  005E04  0E01               	movlw	high (_ts_system+56)
 34563  005E06  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34564  005E08  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34565                           
 34566                           ;main_MC50.c: 232:     decrementTimeslot((int*)&ts_system.timewaitBeforeSoftStart);
 34567  005E0C  0ED5               	movlw	low (_ts_system+58)
 34568  005E0E  6E01               	movwf	decrementTimeslot@ts^0,c
 34569  005E10  0E01               	movlw	high (_ts_system+58)
 34570  005E12  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34571  005E14  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34572                           
 34573                           ;main_MC50.c: 233:     decrementTimeslot((int*)&ts_system.TimeShowVersion);
 34574  005E18  0ED7               	movlw	low (_ts_system+60)
 34575  005E1A  6E01               	movwf	decrementTimeslot@ts^0,c
 34576  005E1C  0E01               	movlw	high (_ts_system+60)
 34577  005E1E  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34578  005E20  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34579                           
 34580                           ;main_MC50.c: 235:     decrementTimeslot((int*)&ts_system.TimeStopADCZeroOffsetCalc);
 34581  005E24  0ED9               	movlw	low (_ts_system+62)
 34582  005E26  6E01               	movwf	decrementTimeslot@ts^0,c
 34583  005E28  0E01               	movlw	high (_ts_system+62)
 34584  005E2A  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34585  005E2C  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34586                           
 34587                           ;main_MC50.c: 237:     decrementTimeslot((int*)&ts_system.TimeStopElectricBrake);
 34588  005E30  0EDB               	movlw	low (_ts_system+64)
 34589  005E32  6E01               	movwf	decrementTimeslot@ts^0,c
 34590  005E34  0E01               	movlw	high (_ts_system+64)
 34591  005E36  6E02               	movwf	(decrementTimeslot@ts+1)^0,c
 34592  005E38  ECE0  F048         	call	_decrementTimeslot	;wreg free
 34593                           
 34594                           ;main_MC50.c: 240:     if (ts_system.TimeOnFlashLigth>0)
 34595  005E3C  0101               	movlb	1	; () banked
 34596  005E3E  BFBE               	btfsc	(_ts_system+35)& (0+255),7,b	;volatile
 34597  005E40  0012               	return	
 34598  005E42  51BE               	movf	(_ts_system+35)& (0+255),w,b	;volatile
 34599  005E44  11BD               	iorwf	(_ts_system+34)& (0+255),w,b	;volatile
 34600  005E46  11BC               	iorwf	(_ts_system+33)& (0+255),w,b	;volatile
 34601  005E48  E103               	bnz	i2u1493_40
 34602  005E4A  05BB               	decf	(_ts_system+32)& (0+255),w,b	;volatile
 34603  005E4C  A0D8               	btfss	status,0,c
 34604  005E4E  0012               	return	
 34605  005E50                     i2u1493_40:
 34606                           
 34607                           ; BSR set to: 1
 34608                           ;main_MC50.c: 241:     {;main_MC50.c: 242:         ts_system.TimeOnFlashLigth--;
 34609  005E50  0EFF               	movlw	255
 34610  005E52  27BB               	addwf	(_ts_system+32)& (0+255),f,b	;volatile
 34611  005E54  0EFF               	movlw	255
 34612  005E56  23BC               	addwfc	(_ts_system+33)& (0+255),f,b	;volatile
 34613  005E58  0EFF               	movlw	255
 34614  005E5A  23BD               	addwfc	(_ts_system+34)& (0+255),f,b	;volatile
 34615  005E5C  0EFF               	movlw	255
 34616  005E5E  23BE               	addwfc	(_ts_system+35)& (0+255),f,b	;volatile
 34617                           
 34618                           ; BSR set to: 1
 34619  005E60  0012               	return		;funcret
 34620  005E62                     __end_of_controlTimeslots:
 34621                           	callstack 0
 34622                           
 34623 ;; *************** function _decrementTimeslot *****************
 34624 ;; Defined at:
 34625 ;;		line 246 in file "main_MC50.c"
 34626 ;; Parameters:    Size  Location     Type
 34627 ;;  ts              2    0[COMRAM] PTR int 
 34628 ;;		 -> ts_system.TimeShowVersion(2), ts_system.TimeLearningDecelaration(2), ts_system.TimeWaitToGetCurrent(2), ts_syste
      +m.InvertionTimeClosingFromOpen(2), 
 34629 ;;		 -> ts_system.TimeWaitReleCapacitor(2), ts_system.TimeInversionStart(2), ts_system.TimeStopedBeforeDecelaration(2), 
      +ts_system.TimeWaitToNextState(2), 
 34630 ;;		 -> ts_system.timeFreqFlashligth(2), ts_system.timeFreqRGB(2), ts_system.timeWaitToClose(2), ts_system.timeOpenWalk(
      +2), 
 34631 ;;		 -> ts_system.timeoutMenu(2), ts_system.timeFreqDigit(2), ts_system.timewaitFlashRGB(2), ts_system.TimeStopElectricB
      +rake(2), 
 34632 ;;		 -> ts_system.Debug_TS(2), ts_system.timeSinalizationDigit(2), ts_system.TimeLastCommand(2), ts_system.timeBetweenSa
      +veCounters(2), 
 34633 ;;		 -> ts_system.TimeCurrentAlarm(2), ts_system.TimeCurrentWaitForAlarm(2), ts_system.TimeReleCapacitor(2), ts_system.T
      +imeChargeCondesador(2), 
 34634 ;;		 -> ts_system.TimeTransitionDecelaration(2), ts_system.timewaitBeforeSoftStart(2), ts_system.timeSoftStart(2), ts_sy
      +stem.TimeElectricBrake(2), 
 34635 ;;		 -> ts_system.TimeStopADCZeroOffsetCalc(2), ts_system(72), 
 34636 ;; Auto vars:     Size  Location     Type
 34637 ;;		None
 34638 ;; Return value:  Size  Location     Type
 34639 ;;                  1    wreg      void 
 34640 ;; Registers used:
 34641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34642 ;; Tracked objects:
 34643 ;;		On entry : 0/1
 34644 ;;		On exit  : 0/0
 34645 ;;		Unchanged: 0/0
 34646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34650 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34651 ;;Total ram usage:        4 bytes
 34652 ;; Hardware stack levels used: 1
 34653 ;; This function calls:
 34654 ;;		Nothing
 34655 ;; This function is called by:
 34656 ;;		_controlTimeslots
 34657 ;; This function uses a non-reentrant model
 34658 ;;
 34659                           
 34660                           	psect	text190
 34661  0091C0                     __ptext190:
 34662                           	callstack 0
 34663  0091C0                     _decrementTimeslot:
 34664                           	callstack 14
 34665                           
 34666                           ;main_MC50.c: 246: void decrementTimeslot(int * ts);main_MC50.c: 247: {;main_MC50.c: 248
      +                          :     if (ts[0]>0)
 34667                           
 34668                           ; BSR set to: 1
 34669                           ;incstack = 0
 34670  0091C0  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 34671  0091C4  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 34672  0091C8  0E01               	movlw	1
 34673  0091CA  BEDB               	btfsc	plusw2,7,c
 34674  0091CC  0012               	return	
 34675  0091CE  0E01               	movlw	1
 34676  0091D0  50DB               	movf	plusw2,w,c
 34677  0091D2  E103               	bnz	i2u1329_40
 34678  0091D4  04DE               	decf	postinc2,w,c
 34679  0091D6  A0D8               	btfss	status,0,c
 34680  0091D8  0012               	return	
 34681  0091DA                     i2u1329_40:
 34682                           
 34683                           ;main_MC50.c: 249:     {;main_MC50.c: 250:         ts[0]--;
 34684  0091DA  C001  FFD9         	movff	decrementTimeslot@ts,fsr2l
 34685  0091DE  C002  FFDA         	movff	decrementTimeslot@ts+1,fsr2h
 34686  0091E2  06DE               	decf	postinc2,f,c
 34687  0091E4  0E00               	movlw	0
 34688  0091E6  5ADD               	subwfb	postdec2,f,c
 34689  0091E8  0012               	return		;funcret
 34690  0091EA                     __end_of_decrementTimeslot:
 34691                           	callstack 0
 34692                           
 34693 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 34694 ;; Defined at:
 34695 ;;		line 346 in file "mcc_generated_files/tmr2.c"
 34696 ;; Parameters:    Size  Location     Type
 34697 ;;		None
 34698 ;; Auto vars:     Size  Location     Type
 34699 ;;		None
 34700 ;; Return value:  Size  Location     Type
 34701 ;;                  1    wreg      void 
 34702 ;; Registers used:
 34703 ;;		None
 34704 ;; Tracked objects:
 34705 ;;		On entry : 3F/2
 34706 ;;		On exit  : 3F/2
 34707 ;;		Unchanged: 3F/0
 34708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34713 ;;Total ram usage:        0 bytes
 34714 ;; Hardware stack levels used: 1
 34715 ;; This function calls:
 34716 ;;		Nothing
 34717 ;; This function is called by:
 34718 ;;		_TMR2_Initialize
 34719 ;;		_TMR2_ISR
 34720 ;; This function uses a non-reentrant model
 34721 ;;
 34722                           
 34723                           	psect	text191
 34724  009708                     __ptext191:
 34725                           	callstack 0
 34726  009708                     _TMR2_DefaultInterruptHandler:
 34727                           	callstack 15
 34728                           
 34729                           ; BSR set to: 2
 34730                           
 34731                           ;incstack = 0
 34732  009708  0012               	return		;funcret
 34733  00970A                     __end_of_TMR2_DefaultInterruptHandler:
 34734                           	callstack 0
 34735                           
 34736 ;; *************** function _ReadADC *****************
 34737 ;; Defined at:
 34738 ;;		line 38 in file "controlCurrent_MC50.c"
 34739 ;; Parameters:    Size  Location     Type
 34740 ;;		None
 34741 ;; Auto vars:     Size  Location     Type
 34742 ;;		None
 34743 ;; Return value:  Size  Location     Type
 34744 ;;                  1    wreg      void 
 34745 ;; Registers used:
 34746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34747 ;; Tracked objects:
 34748 ;;		On entry : 3F/E
 34749 ;;		On exit  : 31/0
 34750 ;;		Unchanged: 0/0
 34751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34754 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34755 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34756 ;;Total ram usage:        3 bytes
 34757 ;; Hardware stack levels used: 1
 34758 ;; Hardware stack levels required when called: 1
 34759 ;; This function calls:
 34760 ;;		_ADCC_GetSingleConversion
 34761 ;; This function is called by:
 34762 ;;		_TMR2_ISR
 34763 ;; This function uses a non-reentrant model
 34764 ;;
 34765                           
 34766                           	psect	text192
 34767  00888E                     __ptext192:
 34768                           	callstack 0
 34769  00888E                     _ReadADC:
 34770                           	callstack 14
 34771                           
 34772                           ; BSR set to: 14
 34773                           ;controlCurrent_MC50.c: 40:      if (!ADCON0bits.GO_nDONE)
 34774                           
 34775                           ; BSR set to: 2
 34776                           ;incstack = 0
 34777  00888E  B060               	btfsc	96,0,c	;volatile
 34778  008890  0012               	return	
 34779                           
 34780                           ; BSR set to: 14
 34781                           ;controlCurrent_MC50.c: 41:      {;controlCurrent_MC50.c: 42:         if ( idxAdcAquisit
      +                          ion >= 30 )
 34782  008892  0E1D               	movlw	29
 34783  008894  0100               	movlb	0	; () banked
 34784  008896  6591               	cpfsgt	_idxAdcAquisition& (0+255),b	;volatile
 34785  008898  D002               	goto	i2l14596
 34786                           
 34787                           ; BSR set to: 0
 34788                           ;controlCurrent_MC50.c: 43:         {;controlCurrent_MC50.c: 44:             idxAdcAquis
      +                          ition=0;
 34789  00889A  0E00               	movlw	0
 34790  00889C  6F91               	movwf	_idxAdcAquisition& (0+255),b	;volatile
 34791  00889E                     i2l14596:
 34792                           
 34793                           ; BSR set to: 0
 34794                           ;controlCurrent_MC50.c: 47:         ADC_array[idxAdcAquisition] = ((unsigned int)((ADRES
      +                          H << 8) + ADRESL)>>6);
 34795  00889E  5063               	movf	99,w,c	;volatile
 34796  0088A0  CF64 F002          	movff	3940,??_ReadADC	;volatile
 34797  0088A4  6A03               	clrf	(??_ReadADC+1)^0,c
 34798  0088A6  C002  F003         	movff	??_ReadADC,??_ReadADC+1
 34799  0088AA  6A02               	clrf	??_ReadADC^0,c
 34800  0088AC  2602               	addwf	??_ReadADC^0,f,c
 34801  0088AE  0E00               	movlw	0
 34802  0088B0  2203               	addwfc	(??_ReadADC+1)^0,f,c
 34803  0088B2  0E06               	movlw	6
 34804  0088B4  6E04               	movwf	(??_ReadADC+2)^0,c
 34805  0088B6                     i2u1484_45:
 34806  0088B6  90D8               	bcf	status,0,c
 34807  0088B8  3203               	rrcf	(??_ReadADC+1)^0,f,c
 34808  0088BA  3202               	rrcf	??_ReadADC^0,f,c
 34809  0088BC  2E04               	decfsz	(??_ReadADC+2)^0,f,c
 34810  0088BE  D7FB               	goto	i2u1484_45
 34811  0088C0  5191               	movf	_idxAdcAquisition& (0+255),w,b	;volatile
 34812  0088C2  0D02               	mullw	2
 34813  0088C4  0E00               	movlw	low _ADC_array
 34814  0088C6  24F3               	addwf	243,w,c
 34815  0088C8  6ED9               	movwf	fsr2l,c
 34816  0088CA  0E02               	movlw	high _ADC_array
 34817  0088CC  20F4               	addwfc	prodh,w,c
 34818  0088CE  6EDA               	movwf	fsr2h,c
 34819  0088D0  C002  FFDE         	movff	??_ReadADC,postinc2
 34820  0088D4  C003  FFDD         	movff	??_ReadADC+1,postdec2
 34821                           
 34822                           ; BSR set to: 0
 34823                           ;controlCurrent_MC50.c: 48:         ADCC_GetSingleConversion(0x00);
 34824  0088D8  0E00               	movlw	0
 34825  0088DA  EC8A  F04A         	call	_ADCC_GetSingleConversion
 34826                           
 34827                           ;controlCurrent_MC50.c: 49:         idxAdcAquisition++;
 34828  0088DE  0100               	movlb	0	; () banked
 34829  0088E0  2B91               	incf	_idxAdcAquisition& (0+255),f,b	;volatile
 34830  0088E2  0012               	return		;funcret
 34831  0088E4                     __end_of_ReadADC:
 34832                           	callstack 0
 34833                           
 34834 ;; *************** function _ADCC_GetSingleConversion *****************
 34835 ;; Defined at:
 34836 ;;		line 131 in file "mcc_generated_files/adcc.c"
 34837 ;; Parameters:    Size  Location     Type
 34838 ;;  channel         1    wreg     enum E10053
 34839 ;; Auto vars:     Size  Location     Type
 34840 ;;  channel         1    0[COMRAM] enum E10053
 34841 ;; Return value:  Size  Location     Type
 34842 ;;                  2  433[None  ] int 
 34843 ;; Registers used:
 34844 ;;		wreg, status,2, cstack
 34845 ;; Tracked objects:
 34846 ;;		On entry : 3F/0
 34847 ;;		On exit  : 0/0
 34848 ;;		Unchanged: 0/0
 34849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34854 ;;Total ram usage:        1 bytes
 34855 ;; Hardware stack levels used: 1
 34856 ;; This function calls:
 34857 ;;		Nothing
 34858 ;; This function is called by:
 34859 ;;		_ReadADC
 34860 ;; This function uses a non-reentrant model
 34861 ;;
 34862                           
 34863                           	psect	text193
 34864  009514                     __ptext193:
 34865                           	callstack 0
 34866  009514                     _ADCC_GetSingleConversion:
 34867                           	callstack 14
 34868                           
 34869                           ;incstack = 0
 34870                           ;ADCC_GetSingleConversion@channel stored from wreg
 34871  009514  6E01               	movwf	ADCC_GetSingleConversion@channel^0,c
 34872                           
 34873                           ;mcc_generated_files/adcc.c: 131: ADCC_GetSingleConversion(adcc_channel_t channel);mcc_g
      +                          enerated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = channel;
 34874  009516  C001  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 34875                           
 34876                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 34877  00951A  8E60               	bsf	96,7,c	;volatile
 34878                           
 34879                           ;mcc_generated_files/adcc.c: 139:       _delay((unsigned long)((5)*(64000000/4000000.0))
      +                          );
 34880  00951C  0E1A               	movlw	26
 34881  00951E                     i2u2962_47:
 34882  00951E  2EE8               	decfsz	wreg,f,c
 34883  009520  D7FE               	bra	i2u2962_47
 34884  009522  D000               	nop2	
 34885                           
 34886                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADCONT = 0;
 34887  009524  9C60               	bcf	96,6,c	;volatile
 34888                           
 34889                           ;mcc_generated_files/adcc.c: 145:     ADCON0bits.ADGO = 1;
 34890  009526  8060               	bsf	96,0,c	;volatile
 34891  009528  0012               	return		;funcret
 34892  00952A                     __end_of_ADCC_GetSingleConversion:
 34893                           	callstack 0
 34894                           
 34895 ;; *************** function _TMR1_ISR *****************
 34896 ;; Defined at:
 34897 ;;		line 166 in file "mcc_generated_files/tmr1.c"
 34898 ;; Parameters:    Size  Location     Type
 34899 ;;		None
 34900 ;; Auto vars:     Size  Location     Type
 34901 ;;		None
 34902 ;; Return value:  Size  Location     Type
 34903 ;;                  1    wreg      void 
 34904 ;; Registers used:
 34905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 34906 ;; Tracked objects:
 34907 ;;		On entry : 3F/E
 34908 ;;		On exit  : 0/0
 34909 ;;		Unchanged: 0/0
 34910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34915 ;;Total ram usage:        0 bytes
 34916 ;; Hardware stack levels used: 1
 34917 ;; Hardware stack levels required when called: 2
 34918 ;; This function calls:
 34919 ;;		Absolute function
 34920 ;;		_TMR1_DefaultInterruptHandler
 34921 ;;		_TMR1_WriteTimer
 34922 ;;		_controlMotorForce
 34923 ;; This function is called by:
 34924 ;;		_INTERRUPT_InterruptManager
 34925 ;; This function uses a non-reentrant model
 34926 ;;
 34927                           
 34928                           	psect	text194
 34929  008D76                     __ptext194:
 34930                           	callstack 0
 34931  008D76                     _TMR1_ISR:
 34932                           	callstack 14
 34933                           
 34934                           ; BSR set to: 14
 34935                           ;mcc_generated_files/tmr1.c: 170:     PIR4bits.TMR1IF = 0;
 34936                           
 34937                           ;incstack = 0
 34938  008D76  91CE               	bcf	206,0,b	;volatile
 34939                           
 34940                           ; BSR set to: 14
 34941                           ;mcc_generated_files/tmr1.c: 172:             controlMotorForce();
 34942  008D78  EC15  F027         	call	_controlMotorForce	;wreg free
 34943                           
 34944                           ;mcc_generated_files/tmr1.c: 173:             if(ts_system.ts_TimeSlotTRIAC>0)
 34945  008D7C  0101               	movlb	1	; () banked
 34946  008D7E  51A0               	movf	(_ts_system+5)& (0+255),w,b	;volatile
 34947  008D80  A4D8               	btfss	status,2,c
 34948                           
 34949                           ; BSR set to: 1
 34950                           ;mcc_generated_files/tmr1.c: 174:             {;mcc_generated_files/tmr1.c: 176:        
      +                                   ts_system.ts_TimeSlotTRIAC--;
 34951  008D82  07A0               	decf	(_ts_system+5)& (0+255),f,b	;volatile
 34952                           
 34953                           ; BSR set to: 1
 34954                           ;mcc_generated_files/tmr1.c: 178:             if (ts_system.ts_TimeSlot1ms > 0 )
 34955  008D84  519D               	movf	(_ts_system+2)& (0+255),w,b	;volatile
 34956  008D86  A4D8               	btfss	status,2,c
 34957                           
 34958                           ; BSR set to: 1
 34959                           ;mcc_generated_files/tmr1.c: 179:             {;mcc_generated_files/tmr1.c: 180:        
      +                               ts_system.ts_TimeSlot1ms--;
 34960  008D88  079D               	decf	(_ts_system+2)& (0+255),f,b	;volatile
 34961                           
 34962                           ; BSR set to: 1
 34963                           ;mcc_generated_files/tmr1.c: 183:     TMR1_WriteTimer(timer1ReloadVal);
 34964  008D8A  C2E3  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 34965  008D8E  C2E4  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 34966  008D92  ECE8  F049         	call	_TMR1_WriteTimer	;wreg free
 34967                           
 34968                           ; BSR set to: 1
 34969                           ;mcc_generated_files/tmr1.c: 185:     if(TMR1_InterruptHandler)
 34970  008D96  0102               	movlb	2	; () banked
 34971  008D98  51E1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34972  008D9A  11E2               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34973  008D9C  B4D8               	btfsc	status,2,c
 34974  008D9E  0012               	return	
 34975                           
 34976                           ; BSR set to: 2
 34977                           ;mcc_generated_files/tmr1.c: 186:     {;mcc_generated_files/tmr1.c: 187:         TMR1_In
      +                          terruptHandler();
 34978  008DA0  D801               	call	i2u1861_48
 34979  008DA2  0012               	return	
 34980  008DA4                     i2u1861_48:
 34981  008DA4  0005               	push	
 34982  008DA6  6EFA               	movwf	pclath,c
 34983  008DA8  51E1               	movf	_TMR1_InterruptHandler& (0+255),w,b
 34984  008DAA  6EFD               	movwf	tosl,c
 34985  008DAC  51E2               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 34986  008DAE  6EFE               	movwf	tosh,c
 34987  008DB0  6AFF               	clrf	tosu,c
 34988  008DB2  50FA               	movf	pclath,w,c
 34989  008DB4  0012               	return		;indir
 34990  008DB6                     __end_of_TMR1_ISR:
 34991                           	callstack 0
 34992                           
 34993 ;; *************** function _controlMotorForce *****************
 34994 ;; Defined at:
 34995 ;;		line 213 in file "outputs_MC50.c"
 34996 ;; Parameters:    Size  Location     Type
 34997 ;;		None
 34998 ;; Auto vars:     Size  Location     Type
 34999 ;;		None
 35000 ;; Return value:  Size  Location     Type
 35001 ;;                  1    wreg      void 
 35002 ;; Registers used:
 35003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35004 ;; Tracked objects:
 35005 ;;		On entry : 3F/E
 35006 ;;		On exit  : 3E/0
 35007 ;;		Unchanged: 0/0
 35008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35011 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35012 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35013 ;;Total ram usage:        5 bytes
 35014 ;; Hardware stack levels used: 1
 35015 ;; Hardware stack levels required when called: 1
 35016 ;; This function calls:
 35017 ;;		i2_GetMotorPower
 35018 ;;		i2_VerifyElectricalBrake
 35019 ;; This function is called by:
 35020 ;;		_TMR1_ISR
 35021 ;; This function uses a non-reentrant model
 35022 ;;
 35023                           
 35024                           	psect	text195
 35025  004E2A                     __ptext195:
 35026                           	callstack 0
 35027  004E2A                     _controlMotorForce:
 35028                           	callstack 14
 35029                           
 35030                           ; BSR set to: 14
 35031                           ;outputs_MC50.c: 217:     difTime=GetMotorPower();
 35032                           
 35033                           ;incstack = 0
 35034  004E2A  ECF0  F039         	call	i2_GetMotorPower	;wreg free
 35035  004E2E  6F90               	movwf	_difTime& (0+255),b
 35036                           
 35037                           ; BSR set to: 1
 35038                           ;outputs_MC50.c: 218:     if(powerControl_st.decelarationActive==YES)
 35039  004E30  057B               	decf	_powerControl_st& (0+255),w,b
 35040  004E32  A4D8               	btfss	status,2,c
 35041  004E34  D00F               	goto	i2l2186
 35042                           
 35043                           ; BSR set to: 1
 35044                           ;outputs_MC50.c: 219:     {;outputs_MC50.c: 220:         if(ts_system.TimeStopedBeforeDe
      +                          celaration>0)
 35045  004E36  BFC8               	btfsc	(_ts_system+45)& (0+255),7,b	;volatile
 35046  004E38  D008               	goto	i2l14484
 35047  004E3A  51C8               	movf	(_ts_system+45)& (0+255),w,b	;volatile
 35048  004E3C  E103               	bnz	i2u1444_40
 35049  004E3E  05C7               	decf	(_ts_system+44)& (0+255),w,b	;volatile
 35050  004E40  A0D8               	btfss	status,0,c
 35051  004E42  D003               	goto	i2l14484
 35052  004E44                     i2u1444_40:
 35053                           
 35054                           ; BSR set to: 1
 35055                           ;outputs_MC50.c: 221:         {;outputs_MC50.c: 222:             StateTRIAC=0;
 35056  004E44  0E00               	movlw	0
 35057  004E46  6F91               	movwf	_StateTRIAC& (0+255),b
 35058                           
 35059                           ;outputs_MC50.c: 223:         }
 35060  004E48  D005               	goto	i2l2186
 35061  004E4A                     i2l14484:
 35062                           
 35063                           ; BSR set to: 1
 35064  004E4A  517D               	movf	(_powerControl_st+2)& (0+255),w,b
 35065  004E4C  5D7F               	subwf	(_powerControl_st+4)& (0+255),w,b
 35066  004E4E  A0D8               	btfss	status,0,c
 35067                           
 35068                           ; BSR set to: 1
 35069                           ;outputs_MC50.c: 225:         {;outputs_MC50.c: 227:             difTime=powerControl_st
      +                          .decelarationPower;
 35070  004E50  C17E  F190         	movff	_powerControl_st+3,_difTime
 35071  004E54                     i2l2186:
 35072                           
 35073                           ; BSR set to: 1
 35074                           ;outputs_MC50.c: 242:     if(PORTAbits.RA3==1 && zeroCrossing==0)
 35075  004E54  A68D               	btfss	141,3,c	;volatile
 35076  004E56  D071               	goto	i2l2190
 35077                           
 35078                           ; BSR set to: 1
 35079  004E58  5193               	movf	_zeroCrossing& (0+255),w,b
 35080  004E5A  A4D8               	btfss	status,2,c
 35081  004E5C  D06E               	goto	i2l2190
 35082                           
 35083                           ; BSR set to: 1
 35084                           ;outputs_MC50.c: 243:     {;outputs_MC50.c: 257:         if ( waitZeroPeak == 0 )
 35085  004E5E  5192               	movf	_waitZeroPeak& (0+255),w,b
 35086  004E60  A4D8               	btfss	status,2,c
 35087  004E62  D016               	goto	i2l14500
 35088                           
 35089                           ; BSR set to: 1
 35090                           ;outputs_MC50.c: 258:         {;outputs_MC50.c: 260:             zeroCrossingWaitTime[ze
      +                          roCrossingWaitTimeIdx] = (zeroCrossingLength>>1);
 35091  004E64  0EF1               	movlw	low _zeroCrossingWaitTime
 35092  004E66  0100               	movlb	0	; () banked
 35093  004E68  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35094  004E6A  6ED9               	movwf	fsr2l,c
 35095  004E6C  6ADA               	clrf	fsr2h,c
 35096  004E6E  0E02               	movlw	high _zeroCrossingWaitTime
 35097  004E70  22DA               	addwfc	fsr2h,f,c
 35098  004E72  0101               	movlb	1	; () banked
 35099  004E74  90D8               	bcf	status,0,c
 35100  004E76  3194               	rrcf	_zeroCrossingLength& (0+255),w,b
 35101  004E78  6EDF               	movwf	indf2,c
 35102                           
 35103                           ; BSR set to: 1
 35104                           ;outputs_MC50.c: 261:             if ( zeroCrossingWaitTimeIdx == 0 )
 35105  004E7A  0100               	movlb	0	; () banked
 35106  004E7C  5184               	movf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35107  004E7E  A4D8               	btfss	status,2,c
 35108  004E80  D002               	goto	i2l14498
 35109                           
 35110                           ; BSR set to: 0
 35111                           ;outputs_MC50.c: 262:             {;outputs_MC50.c: 263:                 zeroCrossingWai
      +                          tTimeIdx = 1;
 35112  004E82  0E01               	movlw	1
 35113  004E84  D001               	goto	L116
 35114  004E86                     i2l14498:
 35115                           
 35116                           ; BSR set to: 0
 35117                           ;outputs_MC50.c: 266:             {;outputs_MC50.c: 267:                 zeroCrossingWai
      +                          tTimeIdx = 0;
 35118  004E86  0E00               	movlw	0
 35119  004E88                     L116:
 35120  004E88  6F84               	movwf	_zeroCrossingWaitTimeIdx& (0+255),b
 35121                           
 35122                           ; BSR set to: 0
 35123                           ;outputs_MC50.c: 270:             zeroCrossingLength = 0;
 35124                           
 35125                           ;outputs_MC50.c: 268:             }
 35126  004E8A  0E00               	movlw	0
 35127  004E8C  0101               	movlb	1	; () banked
 35128  004E8E  6F94               	movwf	_zeroCrossingLength& (0+255),b
 35129  004E90                     i2l14500:
 35130                           
 35131                           ; BSR set to: 1
 35132                           ;outputs_MC50.c: 273:         if ( (difTime<=80) || (ts_system.TimeElectricBrake>0) )
 35133  004E90  0E50               	movlw	80
 35134  004E92  6590               	cpfsgt	_difTime& (0+255),b
 35135  004E94  D007               	goto	i2u1451_40
 35136                           
 35137                           ; BSR set to: 1
 35138  004E96  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35139  004E98  D008               	goto	i2l14506
 35140  004E9A  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35141  004E9C  E103               	bnz	i2u1451_40
 35142  004E9E  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35143  004EA0  A0D8               	btfss	status,0,c
 35144  004EA2  D003               	goto	i2l14506
 35145  004EA4                     i2u1451_40:
 35146                           
 35147                           ; BSR set to: 1
 35148                           
 35149                           ;outputs_MC50.c: 274:         {;outputs_MC50.c: 275:             do { LATDbits.LATD7 = 0
      +                          ; } while(0);
 35150  004EA4  9E86               	bcf	134,7,c	;volatile
 35151                           
 35152                           ; BSR set to: 1
 35153                           ;outputs_MC50.c: 276:             var_sys.TriacON=NO;
 35154  004EA6  0E00               	movlw	0
 35155  004EA8  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35156  004EAA                     i2l14506:
 35157                           
 35158                           ; BSR set to: 1
 35159                           ;outputs_MC50.c: 280:         waitZeroPeak++;
 35160  004EAA  2B92               	incf	_waitZeroPeak& (0+255),f,b
 35161                           
 35162                           ; BSR set to: 1
 35163                           ;outputs_MC50.c: 282:         if ( waitZeroPeak > zeroCrossingWaitTime[zeroCrossingWaitT
      +                          imeIdx] )
 35164  004EAC  0EF1               	movlw	low _zeroCrossingWaitTime
 35165  004EAE  0100               	movlb	0	; () banked
 35166  004EB0  2584               	addwf	_zeroCrossingWaitTimeIdx& (0+255),w,b
 35167  004EB2  6ED9               	movwf	fsr2l,c
 35168  004EB4  6ADA               	clrf	fsr2h,c
 35169  004EB6  0E02               	movlw	high _zeroCrossingWaitTime
 35170  004EB8  22DA               	addwfc	fsr2h,f,c
 35171  004EBA  0101               	movlb	1	; () banked
 35172  004EBC  5192               	movf	_waitZeroPeak& (0+255),w,b
 35173  004EBE  5CDE               	subwf	postinc2,w,c
 35174  004EC0  B0D8               	btfsc	status,0,c
 35175  004EC2  D044               	goto	i2l14536
 35176                           
 35177                           ; BSR set to: 1
 35178                           ;outputs_MC50.c: 284:         {;outputs_MC50.c: 286:             if ((var_sys.Control50o
      +                          r60hz >= 90)&&(var_sys.Control50or60hz <= 105)){
 35179  004EC4  0E59               	movlw	89
 35180  004EC6  654D               	cpfsgt	(_var_sys+77)& (0+255),b	;volatile
 35181  004EC8  D005               	goto	i2l14516
 35182                           
 35183                           ; BSR set to: 1
 35184  004ECA  0E6A               	movlw	106
 35185  004ECC  614D               	cpfslt	(_var_sys+77)& (0+255),b	;volatile
 35186  004ECE  D002               	goto	i2l14516
 35187                           
 35188                           ; BSR set to: 1
 35189                           ;outputs_MC50.c: 287:                 var_sys.Torquerelanty = 1;
 35190  004ED0  0E01               	movlw	1
 35191  004ED2  D001               	goto	L117
 35192  004ED4                     i2l14516:
 35193                           
 35194                           ; BSR set to: 1
 35195                           ;outputs_MC50.c: 290:             {;outputs_MC50.c: 291:                var_sys.Torquere
      +                          lanty = 0;
 35196  004ED4  0E00               	movlw	0
 35197  004ED6                     L117:
 35198  004ED6  6F15               	movwf	(_var_sys+21)& (0+255),b	;volatile
 35199                           
 35200                           ; BSR set to: 1
 35201                           ;outputs_MC50.c: 294:             ts_system.ts_TimeSlotTRIAC=80;
 35202                           
 35203                           ;outputs_MC50.c: 292:             }
 35204  004ED8  0E50               	movlw	80
 35205  004EDA  6FA0               	movwf	(_ts_system+5)& (0+255),b	;volatile
 35206                           
 35207                           ;outputs_MC50.c: 295:             var_sys.Control50or60hz = 0;
 35208  004EDC  0E00               	movlw	0
 35209  004EDE  6F4D               	movwf	(_var_sys+77)& (0+255),b	;volatile
 35210                           
 35211                           ;outputs_MC50.c: 296:             StateTRIAC=1;
 35212  004EE0  0E01               	movlw	1
 35213  004EE2  6F91               	movwf	_StateTRIAC& (0+255),b
 35214                           
 35215                           ;outputs_MC50.c: 297:             zeroCrossing=1;
 35216  004EE4  0E01               	movlw	1
 35217  004EE6  6F93               	movwf	_zeroCrossing& (0+255),b
 35218                           
 35219                           ; BSR set to: 1
 35220                           ;outputs_MC50.c: 298:             powerControl_st.actualCycle++;
 35221  004EE8  2B7F               	incf	(_powerControl_st+4)& (0+255),f,b
 35222                           
 35223                           ; BSR set to: 1
 35224                           ;outputs_MC50.c: 304:             if ( var_sys_NVM.electricBrake==1 && ts_system.TimeEle
      +                          ctricBrake>0 )
 35225  004EEA  0100               	movlb	0	; () banked
 35226  004EEC  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35227  004EEE  A4D8               	btfss	status,2,c
 35228  004EF0  D00E               	goto	i2l14528
 35229                           
 35230                           ; BSR set to: 0
 35231  004EF2  0101               	movlb	1	; () banked
 35232  004EF4  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35233  004EF6  D00B               	goto	i2l14528
 35234  004EF8  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35235  004EFA  E103               	bnz	i2u1456_40
 35236  004EFC  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35237  004EFE  A0D8               	btfss	status,0,c
 35238  004F00  D006               	goto	i2l14528
 35239  004F02                     i2u1456_40:
 35240                           
 35241                           ; BSR set to: 1
 35242                           ;outputs_MC50.c: 305:             {;outputs_MC50.c: 307:                 if ( powerContr
      +                          ol_st.actualCycle>=2 )
 35243  004F02  0E01               	movlw	1
 35244  004F04  657F               	cpfsgt	(_powerControl_st+4)& (0+255),b
 35245  004F06  D022               	goto	i2l14536
 35246  004F08                     i2u1457_40:
 35247                           
 35248                           ; BSR set to: 1
 35249                           ;outputs_MC50.c: 308:                 {;outputs_MC50.c: 309:                     powerCo
      +                          ntrol_st.actualCycle=0;
 35250  004F08  0E00               	movlw	0
 35251  004F0A  6F7F               	movwf	(_powerControl_st+4)& (0+255),b
 35252  004F0C  D01F               	goto	i2l14536
 35253  004F0E                     i2l14528:
 35254                           
 35255                           ;outputs_MC50.c: 313:             {;outputs_MC50.c: 314:                 if ( powerContr
      +                          ol_st.actualCycle>=(powerControl_st.decelarationCyclesOff+powerControl_st.decelarationCy
      +                          clesOn) )
 35256  004F0E  0101               	movlb	1	; () banked
 35257  004F10  517C               	movf	(_powerControl_st+1)& (0+255),w,b
 35258  004F12  C17D  F005         	movff	_powerControl_st+2,??_controlMotorForce
 35259  004F16  6A06               	clrf	(??_controlMotorForce+1)^0,c
 35260  004F18  2605               	addwf	??_controlMotorForce^0,f,c
 35261  004F1A  0E00               	movlw	0
 35262  004F1C  2206               	addwfc	(??_controlMotorForce+1)^0,f,c
 35263  004F1E  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 35264  004F20  6E07               	movwf	(??_controlMotorForce+2)^0,c
 35265  004F22  6A08               	clrf	(??_controlMotorForce+3)^0,c
 35266  004F24  5005               	movf	??_controlMotorForce^0,w,c
 35267  004F26  5C07               	subwf	(??_controlMotorForce+2)^0,w,c
 35268  004F28  5008               	movf	(??_controlMotorForce+3)^0,w,c
 35269  004F2A  0A80               	xorlw	128
 35270  004F2C  6E09               	movwf	(??_controlMotorForce+4)^0,c
 35271  004F2E  5006               	movf	(??_controlMotorForce+1)^0,w,c
 35272  004F30  0A80               	xorlw	128
 35273  004F32  5809               	subwfb	(??_controlMotorForce+4)^0,w,c
 35274  004F34  B0D8               	btfsc	status,0,c
 35275  004F36  D7E8               	goto	i2u1457_40
 35276  004F38  D009               	goto	i2l14536
 35277  004F3A                     i2l2190:
 35278                           
 35279                           ; BSR set to: 1
 35280  004F3A  B68D               	btfsc	141,3,c	;volatile
 35281  004F3C  D007               	goto	i2l14536
 35282                           
 35283                           ; BSR set to: 1
 35284  004F3E  5193               	movf	_zeroCrossing& (0+255),w,b
 35285  004F40  B4D8               	btfsc	status,2,c
 35286  004F42  D004               	goto	i2l14536
 35287                           
 35288                           ; BSR set to: 1
 35289                           ;outputs_MC50.c: 328:     {;outputs_MC50.c: 330:         zeroCrossing=0;
 35290  004F44  0E00               	movlw	0
 35291  004F46  6F93               	movwf	_zeroCrossing& (0+255),b
 35292                           
 35293                           ;outputs_MC50.c: 331:         waitZeroPeak=0;
 35294  004F48  0E00               	movlw	0
 35295  004F4A  6F92               	movwf	_waitZeroPeak& (0+255),b
 35296  004F4C                     i2l14536:
 35297                           
 35298                           ; BSR set to: 1
 35299                           ;outputs_MC50.c: 336:     if ( PORTAbits.RA3!=0 )
 35300  004F4C  B68D               	btfsc	141,3,c	;volatile
 35301                           
 35302                           ; BSR set to: 1
 35303                           ;outputs_MC50.c: 337:     {;outputs_MC50.c: 339:         zeroCrossingLength++;
 35304  004F4E  2B94               	incf	_zeroCrossingLength& (0+255),f,b
 35305                           
 35306                           ; BSR set to: 1
 35307                           ;outputs_MC50.c: 342:    var_sys.Control50or60hz ++;
 35308                           
 35309                           ;outputs_MC50.c: 340:     }
 35310  004F50  2B4D               	incf	(_var_sys+77)& (0+255),f,b	;volatile
 35311                           
 35312                           ; BSR set to: 1
 35313                           ;outputs_MC50.c: 352:     stateMotor = VerifyElectricalBrake(var_sys.StateMotor);
 35314  004F52  5100               	movf	_var_sys& (0+255),w,b	;volatile
 35315  004F54  EC82  F040         	call	i2_VerifyElectricalBrake
 35316  004F58  0100               	movlb	0	; () banked
 35317  004F5A  6F83               	movwf	_stateMotor& (0+255),b
 35318                           
 35319                           ; BSR set to: 0
 35320                           ;outputs_MC50.c: 354:     if ( var_sys_NVM.electricBrake==1 && ts_system.TimeElectricBra
      +                          ke>0 && ts_system.TimeStopElectricBrake<=0 )
 35321  004F5C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35322  004F5E  A4D8               	btfss	status,2,c
 35323  004F60  D02E               	goto	i2l14560
 35324                           
 35325                           ; BSR set to: 0
 35326  004F62  0101               	movlb	1	; () banked
 35327  004F64  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35328  004F66  D02B               	goto	i2l14560
 35329  004F68  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35330  004F6A  E103               	bnz	i2u1463_40
 35331  004F6C  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35332  004F6E  A0D8               	btfss	status,0,c
 35333  004F70  D026               	goto	i2l14560
 35334  004F72                     i2u1463_40:
 35335                           
 35336                           ; BSR set to: 1
 35337  004F72  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 35338  004F74  D005               	goto	i2u1464_40
 35339  004F76  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 35340  004F78  E122               	bnz	i2l14560
 35341  004F7A  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 35342  004F7C  B0D8               	btfsc	status,0,c
 35343  004F7E  D01F               	goto	i2l14560
 35344  004F80                     i2u1464_40:
 35345                           
 35346                           ; BSR set to: 1
 35347                           ;outputs_MC50.c: 355:     {;outputs_MC50.c: 357:         if(stateMotor !=0 && StateTRIAC
      +                          ==1 && ts_system.ts_TRIACWait<=0 && powerControl_st.actualCycle==0 && ts_system.TimeElec
      +                          tricBrake<(((5+6)*( 100/50))-(5*( 100/50))) )
 35348  004F80  0100               	movlb	0	; () banked
 35349  004F82  5183               	movf	_stateMotor& (0+255),w,b
 35350  004F84  B4D8               	btfsc	status,2,c
 35351  004F86  D03A               	goto	i2l14572
 35352                           
 35353                           ; BSR set to: 0
 35354  004F88  0101               	movlb	1	; () banked
 35355  004F8A  0591               	decf	_StateTRIAC& (0+255),w,b
 35356  004F8C  A4D8               	btfss	status,2,c
 35357  004F8E  D036               	goto	i2l14572
 35358                           
 35359                           ; BSR set to: 1
 35360  004F90  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35361  004F92  D005               	goto	i2u1467_40
 35362  004F94  51A2               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35363  004F96  E132               	bnz	i2l14572
 35364  004F98  05A1               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35365  004F9A  B0D8               	btfsc	status,0,c
 35366  004F9C  D02F               	goto	i2l14572
 35367  004F9E                     i2u1467_40:
 35368                           
 35369                           ; BSR set to: 1
 35370  004F9E  517F               	movf	(_powerControl_st+4)& (0+255),w,b
 35371  004FA0  A4D8               	btfss	status,2,c
 35372  004FA2  D02C               	goto	i2l14572
 35373                           
 35374                           ; BSR set to: 1
 35375  004FA4  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35376  004FA6  D006               	goto	i2u1469_40
 35377  004FA8  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35378  004FAA  E128               	bnz	i2l14572
 35379  004FAC  0E0C               	movlw	12
 35380  004FAE  5DC3               	subwf	(_ts_system+40)& (0+255),w,b	;volatile
 35381  004FB0  B0D8               	btfsc	status,0,c
 35382  004FB2  D024               	goto	i2l14572
 35383  004FB4                     i2u1469_40:
 35384                           
 35385                           ; BSR set to: 1
 35386                           
 35387                           ;outputs_MC50.c: 358:         {;outputs_MC50.c: 359:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 35388  004FB4  8E86               	bsf	134,7,c	;volatile
 35389                           
 35390                           ; BSR set to: 1
 35391                           ;outputs_MC50.c: 360:            ts_system.ts_TRIACWait=-(25*200);
 35392  004FB6  0EEC               	movlw	236
 35393  004FB8  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 35394  004FBA  0E78               	movlw	120
 35395  004FBC  D01A               	goto	L118
 35396  004FBE                     i2l14560:
 35397                           
 35398                           ;outputs_MC50.c: 366:     {;outputs_MC50.c: 368:         if(stateMotor !=0 && ts_system.
      +                          ts_TimeSlotTRIAC<difTime && StateTRIAC==1 && ts_system.ts_TRIACWait<=0 && var_sys.InStop
      +                          ing==NO)
 35399  004FBE  0100               	movlb	0	; () banked
 35400  004FC0  5183               	movf	_stateMotor& (0+255),w,b
 35401  004FC2  B4D8               	btfsc	status,2,c
 35402  004FC4  D01B               	goto	i2l14572
 35403                           
 35404                           ; BSR set to: 0
 35405  004FC6  0101               	movlb	1	; () banked
 35406  004FC8  5190               	movf	_difTime& (0+255),w,b
 35407  004FCA  5DA0               	subwf	(_ts_system+5)& (0+255),w,b	;volatile
 35408  004FCC  B0D8               	btfsc	status,0,c
 35409  004FCE  D016               	goto	i2l14572
 35410                           
 35411                           ; BSR set to: 1
 35412  004FD0  0591               	decf	_StateTRIAC& (0+255),w,b
 35413  004FD2  A4D8               	btfss	status,2,c
 35414  004FD4  D013               	goto	i2l14572
 35415                           
 35416                           ; BSR set to: 1
 35417  004FD6  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35418  004FD8  D005               	goto	i2u1473_40
 35419  004FDA  51A2               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35420  004FDC  E10F               	bnz	i2l14572
 35421  004FDE  05A1               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35422  004FE0  B0D8               	btfsc	status,0,c
 35423  004FE2  D00C               	goto	i2l14572
 35424  004FE4                     i2u1473_40:
 35425                           
 35426                           ; BSR set to: 1
 35427  004FE4  510D               	movf	(_var_sys+13)& (0+255),w,b	;volatile
 35428  004FE6  A4D8               	btfss	status,2,c
 35429  004FE8  D009               	goto	i2l14572
 35430                           
 35431                           ; BSR set to: 1
 35432                           
 35433                           ;outputs_MC50.c: 369:         {;outputs_MC50.c: 370:            do { LATDbits.LATD7 = 1;
      +                           } while(0);
 35434  004FEA  8E86               	bsf	134,7,c	;volatile
 35435                           
 35436                           ; BSR set to: 1
 35437                           ;outputs_MC50.c: 371:            ts_system.ts_TRIACWait=-200;
 35438  004FEC  0EFF               	movlw	255
 35439  004FEE  6FA2               	movwf	(_ts_system+7)& (0+255),b	;volatile
 35440  004FF0  0E38               	movlw	56
 35441  004FF2                     L118:
 35442  004FF2  6FA1               	movwf	(_ts_system+6)& (0+255),b	;volatile
 35443                           
 35444                           ;outputs_MC50.c: 372:            var_sys.TriacON=YES;
 35445  004FF4  0E01               	movlw	1
 35446  004FF6  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35447                           
 35448                           ;outputs_MC50.c: 373:            StateTRIAC=0;
 35449  004FF8  0E00               	movlw	0
 35450  004FFA  6F91               	movwf	_StateTRIAC& (0+255),b
 35451  004FFC                     i2l14572:
 35452                           
 35453                           ;outputs_MC50.c: 377:     if (((ts_system.ts_TimeSlotTRIAC <= 20 )&& ts_system.TimeElect
      +                          ricBrake<0) || (stateMotor==0))
 35454  004FFC  0E15               	movlw	21
 35455  004FFE  0101               	movlb	1	; () banked
 35456  005000  61A0               	cpfslt	(_ts_system+5)& (0+255),b	;volatile
 35457  005002  D002               	goto	i2u1476_40
 35458                           
 35459                           ; BSR set to: 1
 35460  005004  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35461  005006  D004               	goto	i2u1477_40
 35462  005008                     i2u1476_40:
 35463                           
 35464                           ; BSR set to: 1
 35465  005008  0100               	movlb	0	; () banked
 35466  00500A  5183               	movf	_stateMotor& (0+255),w,b
 35467  00500C  A4D8               	btfss	status,2,c
 35468  00500E  D004               	goto	i2l2217
 35469  005010                     i2u1477_40:
 35470                           
 35471                           ;outputs_MC50.c: 378:     {;outputs_MC50.c: 384:             do { LATDbits.LATD7 = 0; } 
      +                          while(0);
 35472  005010  9E86               	bcf	134,7,c	;volatile
 35473                           
 35474                           ;outputs_MC50.c: 385:             var_sys.TriacON=NO;
 35475  005012  0E00               	movlw	0
 35476  005014  0101               	movlb	1	; () banked
 35477  005016  6F0C               	movwf	(_var_sys+12)& (0+255),b	;volatile
 35478  005018                     i2l2217:
 35479                           
 35480                           ;outputs_MC50.c: 396:     if(stateMotor !=0 && ts_system.ts_TRIACWait>0)
 35481  005018  0100               	movlb	0	; () banked
 35482  00501A  5183               	movf	_stateMotor& (0+255),w,b
 35483  00501C  B4D8               	btfsc	status,2,c
 35484  00501E  D00C               	goto	i2l14584
 35485                           
 35486                           ; BSR set to: 0
 35487  005020  0101               	movlb	1	; () banked
 35488  005022  BFA2               	btfsc	(_ts_system+7)& (0+255),7,b	;volatile
 35489  005024  D009               	goto	i2l14584
 35490  005026  51A2               	movf	(_ts_system+7)& (0+255),w,b	;volatile
 35491  005028  E103               	bnz	i2u1479_40
 35492  00502A  05A1               	decf	(_ts_system+6)& (0+255),w,b	;volatile
 35493  00502C  A0D8               	btfss	status,0,c
 35494  00502E  D004               	goto	i2l14584
 35495  005030                     i2u1479_40:
 35496                           
 35497                           ; BSR set to: 1
 35498                           ;outputs_MC50.c: 397:     {;outputs_MC50.c: 398:         ts_system.ts_TRIACWait--;
 35499  005030  07A1               	decf	(_ts_system+6)& (0+255),f,b	;volatile
 35500  005032  A0D8               	btfss	status,0,c
 35501  005034  07A2               	decf	(_ts_system+7)& (0+255),f,b	;volatile
 35502                           
 35503                           ;outputs_MC50.c: 399:     }
 35504  005036  0012               	return	
 35505  005038                     i2l14584:
 35506  005038  0100               	movlb	0	; () banked
 35507  00503A  5183               	movf	_stateMotor& (0+255),w,b
 35508  00503C  A4D8               	btfss	status,2,c
 35509  00503E  0012               	return	
 35510                           
 35511                           ; BSR set to: 0
 35512  005040  0101               	movlb	1	; () banked
 35513  005042  AFA2               	btfss	(_ts_system+7)& (0+255),7,b	;volatile
 35514  005044  0012               	return	
 35515                           
 35516                           ; BSR set to: 1
 35517                           ;outputs_MC50.c: 401:     {;outputs_MC50.c: 402:         ts_system.ts_TRIACWait++;
 35518  005046  4BA1               	infsnz	(_ts_system+6)& (0+255),f,b	;volatile
 35519  005048  2BA2               	incf	(_ts_system+7)& (0+255),f,b	;volatile
 35520  00504A  0012               	return		;funcret
 35521  00504C                     __end_of_controlMotorForce:
 35522                           	callstack 0
 35523                           
 35524 ;; *************** function i2_VerifyElectricalBrake *****************
 35525 ;; Defined at:
 35526 ;;		line 658 in file "outputs_MC50.c"
 35527 ;; Parameters:    Size  Location     Type
 35528 ;;  actualState     1    wreg     enum E10381
 35529 ;; Auto vars:     Size  Location     Type
 35530 ;;  actualState     1    1[COMRAM] enum E10381
 35531 ;;  tempState       1    0[COMRAM] enum E10381
 35532 ;; Return value:  Size  Location     Type
 35533 ;;                  1    wreg      enum E10381
 35534 ;; Registers used:
 35535 ;;		wreg, status,2, status,0
 35536 ;; Tracked objects:
 35537 ;;		On entry : 3F/1
 35538 ;;		On exit  : 3E/0
 35539 ;;		Unchanged: 0/0
 35540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35545 ;;Total ram usage:        2 bytes
 35546 ;; Hardware stack levels used: 1
 35547 ;; This function calls:
 35548 ;;		Nothing
 35549 ;; This function is called by:
 35550 ;;		_controlMotorForce
 35551 ;; This function uses a non-reentrant model
 35552 ;;
 35553                           
 35554                           	psect	text196
 35555  008104                     __ptext196:
 35556                           	callstack 0
 35557  008104                     i2_VerifyElectricalBrake:
 35558                           	callstack 14
 35559                           
 35560                           ;incstack = 0
 35561                           ;i2VerifyElectricalBrake@actualState stored from wreg
 35562  008104  6E02               	movwf	i2VerifyElectricalBrake@actualState^0,c
 35563                           
 35564                           ;outputs_MC50.c: 658: stateMotor_enum VerifyElectricalBrake(stateMotor_enum actualState)
      +                          ;outputs_MC50.c: 659: {;outputs_MC50.c: 660:     stateMotor_enum tempState;;outputs_MC50
      +                          .c: 661:     tempState=actualState;
 35565  008106  C002  F001         	movff	i2VerifyElectricalBrake@actualState,i2VerifyElectricalBrake@tempState
 35566                           
 35567                           ;outputs_MC50.c: 662:     if(var_sys_NVM.electricBrake==1 && actualState==Stopped && ts_
      +                          system.TimeStopElectricBrake<=0)
 35568  00810A  0100               	movlb	0	; () banked
 35569  00810C  05AF               	decf	(_var_sys_NVM+23)& (0+255),w,b	;volatile
 35570  00810E  A4D8               	btfss	status,2,c
 35571  008110  D02E               	goto	i2l2318
 35572                           
 35573                           ; BSR set to: 0
 35574  008112  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 35575  008114  A4D8               	btfss	status,2,c
 35576  008116  D02B               	goto	i2l2318
 35577                           
 35578                           ; BSR set to: 0
 35579  008118  0101               	movlb	1	; () banked
 35580  00811A  BFDC               	btfsc	(_ts_system+65)& (0+255),7,b	;volatile
 35581  00811C  D005               	goto	i2u1410_40
 35582  00811E  51DC               	movf	(_ts_system+65)& (0+255),w,b	;volatile
 35583  008120  E126               	bnz	i2l2318
 35584  008122  05DB               	decf	(_ts_system+64)& (0+255),w,b	;volatile
 35585  008124  B0D8               	btfsc	status,0,c
 35586  008126  D023               	goto	i2l2318
 35587  008128                     i2u1410_40:
 35588                           
 35589                           ; BSR set to: 1
 35590                           ;outputs_MC50.c: 663:     {;outputs_MC50.c: 664:         if(actualState!=brakeElectric_s
      +                          t.lastState && brakeElectric_st.ElectricBrakeIsActive==NO )
 35591  008128  5002               	movf	i2VerifyElectricalBrake@actualState^0,w,c
 35592  00812A  0100               	movlb	0	; () banked
 35593  00812C  1978               	xorwf	_brakeElectric_st& (0+255),w,b
 35594  00812E  B4D8               	btfsc	status,2,c
 35595  008130  D00B               	goto	i2l14202
 35596                           
 35597                           ; BSR set to: 0
 35598  008132  5179               	movf	(_brakeElectric_st+1)& (0+255),w,b
 35599  008134  A4D8               	btfss	status,2,c
 35600  008136  D008               	goto	i2l14202
 35601                           
 35602                           ; BSR set to: 0
 35603                           ;outputs_MC50.c: 665:         {;outputs_MC50.c: 666:             brakeElectric_st.Electr
      +                          icBrakeIsActive=YES;
 35604  008138  0E01               	movlw	1
 35605  00813A  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 35606                           
 35607                           ;outputs_MC50.c: 668:             ts_system.TimeElectricBrake=((5+6)*( 100/50));
 35608  00813C  0E00               	movlw	0
 35609  00813E  0101               	movlb	1	; () banked
 35610  008140  6FC4               	movwf	(_ts_system+41)& (0+255),b	;volatile
 35611  008142  0E16               	movlw	22
 35612  008144  6FC3               	movwf	(_ts_system+40)& (0+255),b	;volatile
 35613                           
 35614                           ;outputs_MC50.c: 670:         }
 35615  008146  D018               	goto	i2l2323
 35616  008148                     i2l14202:
 35617                           
 35618                           ; BSR set to: 0
 35619  008148  0579               	decf	(_brakeElectric_st+1)& (0+255),w,b
 35620  00814A  A4D8               	btfss	status,2,c
 35621  00814C  D00B               	goto	i2l14208
 35622                           
 35623                           ; BSR set to: 0
 35624  00814E  0101               	movlb	1	; () banked
 35625  008150  BFC4               	btfsc	(_ts_system+41)& (0+255),7,b	;volatile
 35626  008152  D008               	goto	i2l14208
 35627  008154  51C4               	movf	(_ts_system+41)& (0+255),w,b	;volatile
 35628  008156  E103               	bnz	i2u1414_40
 35629  008158  05C3               	decf	(_ts_system+40)& (0+255),w,b	;volatile
 35630  00815A  A0D8               	btfss	status,0,c
 35631  00815C  D003               	goto	i2l14208
 35632  00815E                     i2u1414_40:
 35633                           
 35634                           ; BSR set to: 1
 35635                           ;outputs_MC50.c: 672:         {;outputs_MC50.c: 673:             tempState=InOpenFull;
 35636  00815E  0E01               	movlw	1
 35637  008160  6E01               	movwf	i2VerifyElectricalBrake@tempState^0,c
 35638                           
 35639                           ;outputs_MC50.c: 686:         }
 35640  008162  D00A               	goto	i2l2323
 35641  008164                     i2l14208:
 35642                           
 35643                           ;outputs_MC50.c: 688:         {;outputs_MC50.c: 689:             brakeElectric_st.lastSt
      +                          ate=Stopped;
 35644  008164  0E00               	movlw	0
 35645  008166  0100               	movlb	0	; () banked
 35646  008168  6F78               	movwf	_brakeElectric_st& (0+255),b
 35647                           
 35648                           ;outputs_MC50.c: 690:             brakeElectric_st.ElectricBrakeIsActive=NO;
 35649  00816A  0E00               	movlw	0
 35650  00816C  D004               	goto	L119
 35651  00816E                     i2l2318:
 35652                           
 35653                           ;outputs_MC50.c: 695:     {;outputs_MC50.c: 696:         brakeElectric_st.lastState=actu
      +                          alState;
 35654  00816E  C002  F078         	movff	i2VerifyElectricalBrake@actualState,_brakeElectric_st
 35655                           
 35656                           ;outputs_MC50.c: 697:         brakeElectric_st.ElectricBrakeIsActive=NO;
 35657  008172  0E00               	movlw	0
 35658  008174  0100               	movlb	0	; () banked
 35659  008176                     L119:
 35660  008176  6F79               	movwf	(_brakeElectric_st+1)& (0+255),b
 35661  008178                     i2l2323:
 35662                           
 35663                           ;outputs_MC50.c: 700:     return tempState;
 35664  008178  5001               	movf	i2VerifyElectricalBrake@tempState^0,w,c
 35665  00817A  0012               	return		;funcret
 35666  00817C                     __end_ofi2_VerifyElectricalBrake:
 35667                           	callstack 0
 35668                           
 35669 ;; *************** function i2_GetMotorPower *****************
 35670 ;; Defined at:
 35671 ;;		line 405 in file "outputs_MC50.c"
 35672 ;; Parameters:    Size  Location     Type
 35673 ;;		None
 35674 ;; Auto vars:     Size  Location     Type
 35675 ;;  defineatraso    1    3[COMRAM] unsigned char 
 35676 ;; Return value:  Size  Location     Type
 35677 ;;                  1    wreg      unsigned char 
 35678 ;; Registers used:
 35679 ;;		wreg, status,2, status,0, prodl, prodh
 35680 ;; Tracked objects:
 35681 ;;		On entry : 3F/E
 35682 ;;		On exit  : 3F/1
 35683 ;;		Unchanged: 0/0
 35684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35687 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35689 ;;Total ram usage:        4 bytes
 35690 ;; Hardware stack levels used: 1
 35691 ;; This function calls:
 35692 ;;		Nothing
 35693 ;; This function is called by:
 35694 ;;		_controlMotorForce
 35695 ;; This function uses a non-reentrant model
 35696 ;;
 35697                           
 35698                           	psect	text197
 35699  0073E0                     __ptext197:
 35700                           	callstack 0
 35701  0073E0                     i2_GetMotorPower:
 35702                           	callstack 14
 35703                           
 35704                           ; BSR set to: 14
 35705                           ;outputs_MC50.c: 408:     unsigned char defineatraso;;outputs_MC50.c: 413:     if(powerC
      +                          ontrol_st.decelarationActive==YES)
 35706                           
 35707                           ;incstack = 0
 35708  0073E0  0101               	movlb	1	; () banked
 35709  0073E2  057B               	decf	_powerControl_st& (0+255),w,b
 35710  0073E4  A4D8               	btfss	status,2,c
 35711  0073E6  D006               	goto	i2l14152
 35712                           
 35713                           ; BSR set to: 1
 35714                           ;outputs_MC50.c: 414:     {;outputs_MC50.c: 415:        temppower=(var_sys_NVM.motorPowe
      +                          r*6);
 35715  0073E8  0100               	movlb	0	; () banked
 35716  0073EA  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 35717  0073EC  0D06               	mullw	6
 35718  0073EE  CFF3 F18F          	movff	prodl,_temppower
 35719                           
 35720                           ;outputs_MC50.c: 416:     }
 35721  0073F2  D043               	goto	i2l2235
 35722  0073F4                     i2l14152:
 35723                           
 35724                           ; BSR set to: 1
 35725                           ;outputs_MC50.c: 418:     {;outputs_MC50.c: 419:         fullmotorPower=(var_sys_NVM.mot
      +                          orPower*6);
 35726  0073F4  0100               	movlb	0	; () banked
 35727  0073F6  519A               	movf	(_var_sys_NVM+2)& (0+255),w,b	;volatile
 35728  0073F8  0D06               	mullw	6
 35729  0073FA  CFF3 F082          	movff	prodl,_fullmotorPower
 35730                           
 35731                           ; BSR set to: 0
 35732                           ;outputs_MC50.c: 421:         if(var_sys.velocityFactor>0)
 35733  0073FE  0101               	movlb	1	; () banked
 35734  007400  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35735  007402  D01C               	goto	i2l14162
 35736  007404  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35737  007406  E103               	bnz	i2u1400_40
 35738  007408  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35739  00740A  A0D8               	btfss	status,0,c
 35740  00740C  D017               	goto	i2l14162
 35741  00740E                     i2u1400_40:
 35742                           
 35743                           ; BSR set to: 1
 35744                           ;outputs_MC50.c: 422:         {;outputs_MC50.c: 423:             if(var_sys.velocityFact
      +                          or>fullmotorPower)
 35745  00740E  0100               	movlb	0	; () banked
 35746  007410  5182               	movf	_fullmotorPower& (0+255),w,b
 35747  007412  6E01               	movwf	??i2_GetMotorPower^0,c
 35748  007414  6A02               	clrf	(??i2_GetMotorPower+1)^0,c
 35749  007416  0101               	movlb	1	; () banked
 35750  007418  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35751  00741A  5C01               	subwf	??i2_GetMotorPower^0,w,c
 35752  00741C  5002               	movf	(??i2_GetMotorPower+1)^0,w,c
 35753  00741E  0A80               	xorlw	128
 35754  007420  6E03               	movwf	(??i2_GetMotorPower+2)^0,c
 35755  007422  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35756  007424  0A80               	xorlw	128
 35757  007426  5803               	subwfb	(??i2_GetMotorPower+2)^0,w,c
 35758  007428  B0D8               	btfsc	status,0,c
 35759  00742A  D002               	goto	i2l14160
 35760                           
 35761                           ; BSR set to: 1
 35762                           ;outputs_MC50.c: 424:             {;outputs_MC50.c: 425:                 temppower=1;
 35763  00742C  0E01               	movlw	1
 35764  00742E  D004               	goto	L121
 35765  007430                     i2l14160:
 35766                           
 35767                           ; BSR set to: 1
 35768                           ;outputs_MC50.c: 428:             {;outputs_MC50.c: 430:                 temppower =full
      +                          motorPower-var_sys.velocityFactor;
 35769  007430  510E               	movf	(_var_sys+14)& (0+255),w,b	;volatile
 35770  007432  0100               	movlb	0	; () banked
 35771  007434  5D82               	subwf	_fullmotorPower& (0+255),w,b
 35772  007436  D017               	goto	L122
 35773  007438                     L121:
 35774  007438  6F8F               	movwf	_temppower& (0+255),b
 35775  00743A  D01F               	goto	i2l2235
 35776  00743C                     i2l14162:
 35777                           
 35778                           ; BSR set to: 1
 35779  00743C  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35780  00743E  D005               	goto	i2u1402_40
 35781  007440  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35782  007442  E113               	bnz	i2l14172
 35783  007444  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35784  007446  B0D8               	btfsc	status,0,c
 35785  007448  D010               	goto	i2l14172
 35786  00744A                     i2u1402_40:
 35787                           
 35788                           ; BSR set to: 1
 35789  00744A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35790  00744C  D005               	goto	i2u1403_40
 35791  00744E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35792  007450  E10C               	bnz	i2l14172
 35793  007452  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35794  007454  B0D8               	btfsc	status,0,c
 35795  007456  D009               	goto	i2l14172
 35796  007458                     i2u1403_40:
 35797                           
 35798                           ; BSR set to: 1
 35799                           ;outputs_MC50.c: 434:         {;outputs_MC50.c: 435:             temppower =fullmotorPow
      +                          er;
 35800  007458  C082  F18F         	movff	_fullmotorPower,_temppower
 35801                           
 35802                           ; BSR set to: 1
 35803                           ;outputs_MC50.c: 438:             if ( var_sys_NVM.motorPower>8 )
 35804  00745C  0E08               	movlw	8
 35805  00745E  0100               	movlb	0	; () banked
 35806  007460  659A               	cpfsgt	(_var_sys_NVM+2)& (0+255),b	;volatile
 35807  007462  D00B               	goto	i2l2235
 35808                           
 35809                           ; BSR set to: 0
 35810                           ;outputs_MC50.c: 439:             {;outputs_MC50.c: 440:                 temppower = 80 
      +                          -23 +1;
 35811  007464  0E3A               	movlw	58
 35812  007466                     L122:
 35813  007466  0101               	movlb	1	; () banked
 35814  007468  D7E7               	goto	L121
 35815  00746A                     i2l14172:
 35816                           
 35817                           ; BSR set to: 1
 35818  00746A  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35819  00746C  D006               	goto	i2l2235
 35820  00746E  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35821  007470  E102               	bnz	i2u1405_40
 35822  007472  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35823  007474  B0D8               	btfsc	status,0,c
 35824  007476                     i2u1405_40:
 35825                           
 35826                           ; BSR set to: 1
 35827                           ;outputs_MC50.c: 447:                 temppower = var_sys.velocityFactorstop;
 35828  007476  C110  F18F         	movff	_var_sys+16,_temppower	;volatile
 35829  00747A                     i2l2235:
 35830                           
 35831                           ;outputs_MC50.c: 451:     if ((var_sys.velocityFactorstop > 0)&&(var_sys.velocityFactor 
      +                          <= 0 )){
 35832  00747A  0101               	movlb	1	; () banked
 35833  00747C  BF11               	btfsc	(_var_sys+17)& (0+255),7,b	;volatile
 35834  00747E  D00E               	goto	i2l14182
 35835  007480  5111               	movf	(_var_sys+17)& (0+255),w,b	;volatile
 35836  007482  E103               	bnz	i2u1406_40
 35837  007484  0510               	decf	(_var_sys+16)& (0+255),w,b	;volatile
 35838  007486  A0D8               	btfss	status,0,c
 35839  007488  D009               	goto	i2l14182
 35840  00748A                     i2u1406_40:
 35841                           
 35842                           ; BSR set to: 1
 35843  00748A  BF0F               	btfsc	(_var_sys+15)& (0+255),7,b	;volatile
 35844  00748C  D005               	goto	i2u1407_40
 35845  00748E  510F               	movf	(_var_sys+15)& (0+255),w,b	;volatile
 35846  007490  E105               	bnz	i2l14182
 35847  007492  050E               	decf	(_var_sys+14)& (0+255),w,b	;volatile
 35848  007494  B0D8               	btfsc	status,0,c
 35849  007496  D002               	goto	i2l14182
 35850  007498                     i2u1407_40:
 35851                           
 35852                           ; BSR set to: 1
 35853                           ;outputs_MC50.c: 452:     defineatraso = 5;
 35854  007498  0E05               	movlw	5
 35855  00749A  D001               	goto	L120
 35856  00749C                     i2l14182:
 35857                           
 35858                           ; BSR set to: 1
 35859                           ;outputs_MC50.c: 455:     {;outputs_MC50.c: 456:     defineatraso = 23;
 35860  00749C  0E17               	movlw	23
 35861  00749E                     L120:
 35862  00749E  6E04               	movwf	i2GetMotorPower@defineatraso^0,c
 35863                           
 35864                           ; BSR set to: 1
 35865                           ;outputs_MC50.c: 459:     return temppower+defineatraso;
 35866  0074A0  518F               	movf	_temppower& (0+255),w,b
 35867  0074A2  2404               	addwf	i2GetMotorPower@defineatraso^0,w,c
 35868                           
 35869                           ; BSR set to: 1
 35870  0074A4  0012               	return		;funcret
 35871  0074A6                     __end_ofi2_GetMotorPower:
 35872                           	callstack 0
 35873                           
 35874 ;; *************** function _TMR1_WriteTimer *****************
 35875 ;; Defined at:
 35876 ;;		line 129 in file "mcc_generated_files/tmr1.c"
 35877 ;; Parameters:    Size  Location     Type
 35878 ;;  timerVal        2    0[COMRAM] unsigned short 
 35879 ;; Auto vars:     Size  Location     Type
 35880 ;;		None
 35881 ;; Return value:  Size  Location     Type
 35882 ;;                  1    wreg      void 
 35883 ;; Registers used:
 35884 ;;		None
 35885 ;; Tracked objects:
 35886 ;;		On entry : 3F/1
 35887 ;;		On exit  : 3F/1
 35888 ;;		Unchanged: 3F/0
 35889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35894 ;;Total ram usage:        2 bytes
 35895 ;; Hardware stack levels used: 1
 35896 ;; This function calls:
 35897 ;;		Nothing
 35898 ;; This function is called by:
 35899 ;;		_TMR1_ISR
 35900 ;; This function uses a non-reentrant model
 35901 ;;
 35902                           
 35903                           	psect	text198
 35904  0093D0                     __ptext198:
 35905                           	callstack 0
 35906  0093D0                     _TMR1_WriteTimer:
 35907                           	callstack 15
 35908                           
 35909                           ; BSR set to: 1
 35910                           ;mcc_generated_files/tmr1.c: 129: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 130: {;mcc_generated_files/tmr1.c: 131:     if (T1CONbits.nT1SYNC == 1)
 35911                           
 35912                           ; BSR set to: 1
 35913                           ;incstack = 0
 35914  0093D0  A4CF               	btfss	207,2,c	;volatile
 35915  0093D2  D007               	goto	i2l1147
 35916                           
 35917                           ; BSR set to: 1
 35918                           ;mcc_generated_files/tmr1.c: 132:     {;mcc_generated_files/tmr1.c: 134:         T1CONbi
      +                          ts.TMR1ON = 0;
 35919  0093D4  90CF               	bcf	207,0,c	;volatile
 35920                           
 35921                           ;mcc_generated_files/tmr1.c: 137:         TMR1H = (uint8_t)(timerVal >> 8);
 35922  0093D6  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35923                           
 35924                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 35925  0093DA  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35926                           
 35927                           ;mcc_generated_files/tmr1.c: 141:         T1CONbits.TMR1ON =1;
 35928  0093DE  80CF               	bsf	207,0,c	;volatile
 35929                           
 35930                           ;mcc_generated_files/tmr1.c: 142:     }
 35931  0093E0  0012               	return	
 35932  0093E2                     i2l1147:
 35933                           
 35934                           ; BSR set to: 1
 35935                           ;mcc_generated_files/tmr1.c: 144:     {;mcc_generated_files/tmr1.c: 146:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 35936  0093E2  C002  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35937                           
 35938                           ;mcc_generated_files/tmr1.c: 147:         TMR1L = (uint8_t)timerVal;
 35939  0093E6  C001  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35940                           
 35941                           ; BSR set to: 1
 35942  0093EA  0012               	return		;funcret
 35943  0093EC                     __end_of_TMR1_WriteTimer:
 35944                           	callstack 0
 35945                           
 35946 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 35947 ;; Defined at:
 35948 ;;		line 196 in file "mcc_generated_files/tmr1.c"
 35949 ;; Parameters:    Size  Location     Type
 35950 ;;		None
 35951 ;; Auto vars:     Size  Location     Type
 35952 ;;		None
 35953 ;; Return value:  Size  Location     Type
 35954 ;;                  1    wreg      void 
 35955 ;; Registers used:
 35956 ;;		None
 35957 ;; Tracked objects:
 35958 ;;		On entry : 3F/2
 35959 ;;		On exit  : 3F/2
 35960 ;;		Unchanged: 3F/0
 35961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35966 ;;Total ram usage:        0 bytes
 35967 ;; Hardware stack levels used: 1
 35968 ;; This function calls:
 35969 ;;		Nothing
 35970 ;; This function is called by:
 35971 ;;		_TMR1_Initialize
 35972 ;;		_TMR1_ISR
 35973 ;; This function uses a non-reentrant model
 35974 ;;
 35975                           
 35976                           	psect	text199
 35977  00970A                     __ptext199:
 35978                           	callstack 0
 35979  00970A                     _TMR1_DefaultInterruptHandler:
 35980                           	callstack 15
 35981                           
 35982                           ; BSR set to: 2
 35983                           
 35984                           ; BSR set to: 1
 35985                           ;incstack = 0
 35986  00970A  0012               	return		;funcret
 35987  00970C                     __end_of_TMR1_DefaultInterruptHandler:
 35988                           	callstack 0
 35989                           
 35990 ;; *************** function _TMR0_ISR *****************
 35991 ;; Defined at:
 35992 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 35993 ;; Parameters:    Size  Location     Type
 35994 ;;		None
 35995 ;; Auto vars:     Size  Location     Type
 35996 ;;		None
 35997 ;; Return value:  Size  Location     Type
 35998 ;;                  1    wreg      void 
 35999 ;; Registers used:
 36000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36001 ;; Tracked objects:
 36002 ;;		On entry : 3F/E
 36003 ;;		On exit  : 0/0
 36004 ;;		Unchanged: 0/0
 36005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36010 ;;Total ram usage:        0 bytes
 36011 ;; Hardware stack levels used: 1
 36012 ;; Hardware stack levels required when called: 1
 36013 ;; This function calls:
 36014 ;;		Absolute function
 36015 ;;		_TMR0_DefaultInterruptHandler
 36016 ;;		_rxi
 36017 ;; This function is called by:
 36018 ;;		_INTERRUPT_InterruptManager
 36019 ;; This function uses a non-reentrant model
 36020 ;;
 36021                           
 36022                           	psect	text200
 36023  009284                     __ptext200:
 36024                           	callstack 0
 36025  009284                     _TMR0_ISR:
 36026                           	callstack 15
 36027                           
 36028                           ; BSR set to: 14
 36029                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
 36030                           
 36031                           ; BSR set to: 2
 36032                           ;incstack = 0
 36033  009284  9BCA               	bcf	202,5,b	;volatile
 36034                           
 36035                           ; BSR set to: 14
 36036                           ;mcc_generated_files/tmr0.c: 132:     rxi();
 36037  009286  EC8B  F023         	call	_rxi	;wreg free
 36038                           
 36039                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
 36040  00928A  0102               	movlb	2	; () banked
 36041  00928C  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36042  00928E  11E6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36043  009290  B4D8               	btfsc	status,2,c
 36044  009292  0012               	return	
 36045                           
 36046                           ; BSR set to: 2
 36047                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
 36048  009294  D801               	call	i2u1857_48
 36049  009296  0012               	return	
 36050  009298                     i2u1857_48:
 36051  009298  0005               	push	
 36052  00929A  6EFA               	movwf	pclath,c
 36053  00929C  51E5               	movf	_TMR0_InterruptHandler& (0+255),w,b
 36054  00929E  6EFD               	movwf	tosl,c
 36055  0092A0  51E6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 36056  0092A2  6EFE               	movwf	tosh,c
 36057  0092A4  6AFF               	clrf	tosu,c
 36058  0092A6  50FA               	movf	pclath,w,c
 36059  0092A8  0012               	return		;indir
 36060  0092AA                     __end_of_TMR0_ISR:
 36061                           	callstack 0
 36062                           
 36063 ;; *************** function _rxi *****************
 36064 ;; Defined at:
 36065 ;;		line 41 in file "inputs_MC50.c"
 36066 ;; Parameters:    Size  Location     Type
 36067 ;;		None
 36068 ;; Auto vars:     Size  Location     Type
 36069 ;;		None
 36070 ;; Return value:  Size  Location     Type
 36071 ;;                  1    wreg      void 
 36072 ;; Registers used:
 36073 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36074 ;; Tracked objects:
 36075 ;;		On entry : 3F/E
 36076 ;;		On exit  : 3C/0
 36077 ;;		Unchanged: 0/0
 36078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36083 ;;Total ram usage:        2 bytes
 36084 ;; Hardware stack levels used: 1
 36085 ;; This function calls:
 36086 ;;		Nothing
 36087 ;; This function is called by:
 36088 ;;		_TMR0_ISR
 36089 ;; This function uses a non-reentrant model
 36090 ;;
 36091                           
 36092                           	psect	text201
 36093  004716                     __ptext201:
 36094                           	callstack 0
 36095  004716                     _rxi:
 36096                           	callstack 15
 36097                           
 36098                           ; BSR set to: 14
 36099                           ;inputs_MC50.c: 43:     RFBit = PORTBbits.RB3;
 36100                           
 36101                           ;incstack = 0
 36102  004716  0E00               	movlw	0
 36103  004718  B68E               	btfsc	142,3,c	;volatile
 36104  00471A  0E01               	movlw	1
 36105  00471C  0100               	movlb	0	; () banked
 36106  00471E  6F89               	movwf	_RFBit& (0+255),b	;volatile
 36107                           
 36108                           ; BSR set to: 0
 36109                           ;inputs_MC50.c: 47:     if (RFFull)
 36110  004720  518B               	movf	_RFFull& (0+255),w,b	;volatile
 36111  004722  A4D8               	btfss	status,2,c
 36112  004724  0012               	return	
 36113  004726  D116               	goto	i2l14466
 36114  004728                     i2l14356:
 36115                           
 36116                           ; BSR set to: 1
 36117                           ;inputs_MC50.c: 53:             if (RFBit == 0) {
 36118  004728  0100               	movlb	0	; () banked
 36119  00472A  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36120  00472C  A4D8               	btfss	status,2,c
 36121  00472E  D004               	goto	i2l14360
 36122                           
 36123                           ; BSR set to: 0
 36124                           ;inputs_MC50.c: 56:                 RFstate = 3;
 36125  004730  0E03               	movlw	3
 36126  004732  0101               	movlb	1	; () banked
 36127  004734  6F99               	movwf	_RFstate& (0+255),b
 36128                           
 36129                           ;inputs_MC50.c: 57:             } else {
 36130  004736  0012               	return	
 36131  004738                     i2l14360:
 36132                           
 36133                           ; BSR set to: 0
 36134                           ;inputs_MC50.c: 58:                 RFcount--;
 36135  004738  077E               	decf	_RFcount& (0+255),f,b
 36136  00473A  A0D8               	btfss	status,0,c
 36137  00473C  077F               	decf	(_RFcount+1)& (0+255),f,b
 36138                           
 36139                           ; BSR set to: 0
 36140                           ;inputs_MC50.c: 59:                 if (RFcount < -10)
 36141  00473E  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 36142  004740  0012               	return	
 36143  004742  0EF6               	movlw	246
 36144  004744  5D7E               	subwf	_RFcount& (0+255),w,b
 36145  004746  0EFF               	movlw	255
 36146  004748  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 36147  00474A  B0D8               	btfsc	status,0,c
 36148  00474C  0012               	return	
 36149  00474E                     i2u1421_40:
 36150  00474E                     i2l14364:
 36151                           
 36152                           ; BSR set to: 0
 36153                           ;inputs_MC50.c: 60:                 {;inputs_MC50.c: 62:                     RFstate = 0
      +                          ;
 36154  00474E  0E00               	movlw	0
 36155  004750  0101               	movlb	1	; () banked
 36156  004752  6F99               	movwf	_RFstate& (0+255),b
 36157  004754  0012               	return	
 36158  004756                     i2l14366:
 36159                           
 36160                           ; BSR set to: 1
 36161                           ;inputs_MC50.c: 67:             if (RFBit) {
 36162  004756  0100               	movlb	0	; () banked
 36163  004758  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36164  00475A  B4D8               	btfsc	status,2,c
 36165  00475C  D02C               	goto	i2l14386
 36166                           
 36167                           ; BSR set to: 0
 36168                           ;inputs_MC50.c: 71:                 RFstate = 2;
 36169  00475E  0E02               	movlw	2
 36170  004760  0101               	movlb	1	; () banked
 36171  004762  6F99               	movwf	_RFstate& (0+255),b
 36172                           
 36173                           ; BSR set to: 1
 36174                           ;inputs_MC50.c: 72:                 BufferRF[Bptr] >>= 1;
 36175  004764  0ECA               	movlw	low _BufferRF
 36176  004766  0100               	movlb	0	; () banked
 36177  004768  258D               	addwf	_Bptr& (0+255),w,b
 36178  00476A  6ED9               	movwf	fsr2l,c
 36179  00476C  6ADA               	clrf	fsr2h,c
 36180  00476E  0E02               	movlw	high _BufferRF
 36181  004770  22DA               	addwfc	fsr2h,f,c
 36182  004772  90D8               	bcf	status,0,c
 36183  004774  32DF               	rrcf	indf2,f,c
 36184                           
 36185                           ; BSR set to: 0
 36186                           ;inputs_MC50.c: 73:                 if (RFcount >= 0) {
 36187  004776  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36188  004778  D008               	goto	i2l14376
 36189                           
 36190                           ; BSR set to: 0
 36191                           ;inputs_MC50.c: 74:                     BufferRF[Bptr] += 0x80;
 36192  00477A  0ECA               	movlw	low _BufferRF
 36193  00477C  258D               	addwf	_Bptr& (0+255),w,b
 36194  00477E  6ED9               	movwf	fsr2l,c
 36195  004780  6ADA               	clrf	fsr2h,c
 36196  004782  0E02               	movlw	high _BufferRF
 36197  004784  22DA               	addwfc	fsr2h,f,c
 36198  004786  0E80               	movlw	128
 36199  004788  26DF               	addwf	indf2,f,c
 36200  00478A                     i2l14376:
 36201                           
 36202                           ; BSR set to: 0
 36203                           ;inputs_MC50.c: 81:                 RFcount = 0;
 36204  00478A  0E00               	movlw	0
 36205  00478C  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36206  00478E  0E00               	movlw	0
 36207  004790  6F7E               	movwf	_RFcount& (0+255),b
 36208                           
 36209                           ; BSR set to: 0
 36210                           ;inputs_MC50.c: 83:                 if ((++BitCount & 7) == 0)
 36211  004792  2B8C               	incf	_BitCount& (0+255),f,b
 36212  004794  C08C  F001         	movff	_BitCount,??_rxi
 36213  004798  0E07               	movlw	7
 36214  00479A  1601               	andwf	??_rxi^0,f,c
 36215  00479C  B4D8               	btfsc	status,2,c
 36216                           
 36217                           ; BSR set to: 0
 36218                           ;inputs_MC50.c: 84:                     Bptr++;
 36219  00479E  2B8D               	incf	_Bptr& (0+255),f,b
 36220                           
 36221                           ; BSR set to: 0
 36222                           ;inputs_MC50.c: 85:                 if (BitCount == 65) {
 36223  0047A0  0E41               	movlw	65
 36224  0047A2  198C               	xorwf	_BitCount& (0+255),w,b
 36225  0047A4  A4D8               	btfss	status,2,c
 36226  0047A6  0012               	return	
 36227                           
 36228                           ; BSR set to: 0
 36229                           ;inputs_MC50.c: 86:                     RFstate = 0;
 36230  0047A8  0E00               	movlw	0
 36231  0047AA  0101               	movlb	1	; () banked
 36232  0047AC  6F99               	movwf	_RFstate& (0+255),b
 36233                           
 36234                           ;inputs_MC50.c: 87:                     RFFull = 1;
 36235  0047AE  0E01               	movlw	1
 36236  0047B0  0100               	movlb	0	; () banked
 36237  0047B2  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 36238  0047B4  0012               	return	
 36239  0047B6                     i2l14386:
 36240                           
 36241                           ; BSR set to: 0
 36242                           ;inputs_MC50.c: 92:                 RFcount++;
 36243  0047B6  4B7E               	infsnz	_RFcount& (0+255),f,b
 36244  0047B8  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36245                           
 36246                           ; BSR set to: 0
 36247                           ;inputs_MC50.c: 93:                 if (RFcount >= 10)
 36248  0047BA  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36249  0047BC  0012               	return	
 36250  0047BE  517F               	movf	(_RFcount+1)& (0+255),w,b
 36251  0047C0  E104               	bnz	i2u1426_40
 36252  0047C2  0E0A               	movlw	10
 36253  0047C4  5D7E               	subwf	_RFcount& (0+255),w,b
 36254  0047C6  A0D8               	btfss	status,0,c
 36255  0047C8  0012               	return	
 36256  0047CA                     i2u1426_40:
 36257                           
 36258                           ; BSR set to: 0
 36259                           ;inputs_MC50.c: 94:                 {;inputs_MC50.c: 96:                     RFstate = 1
      +                          ;
 36260  0047CA  0E01               	movlw	1
 36261  0047CC  0101               	movlb	1	; () banked
 36262  0047CE  6F99               	movwf	_RFstate& (0+255),b
 36263                           
 36264                           ;inputs_MC50.c: 97:                     Bptr = 0;
 36265  0047D0  0E00               	movlw	0
 36266  0047D2  0100               	movlb	0	; () banked
 36267  0047D4  6F8D               	movwf	_Bptr& (0+255),b
 36268                           
 36269                           ;inputs_MC50.c: 98:                     BitCount = 0;
 36270  0047D6  0E00               	movlw	0
 36271  0047D8  6F8C               	movwf	_BitCount& (0+255),b
 36272  0047DA  0012               	return	
 36273  0047DC                     i2l14392:
 36274                           
 36275                           ; BSR set to: 1
 36276                           ;inputs_MC50.c: 103:             if (RFBit) {
 36277  0047DC  0100               	movlb	0	; () banked
 36278  0047DE  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36279  0047E0  B4D8               	btfsc	status,2,c
 36280  0047E2  D030               	goto	i2l14408
 36281                           
 36282                           ; BSR set to: 0
 36283                           ;inputs_MC50.c: 106:                 if ((RFcount < 20) || (RFcount >= 45)) {
 36284  0047E4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36285  0047E6  D00E               	goto	i2u1429_40
 36286  0047E8  517F               	movf	(_RFcount+1)& (0+255),w,b
 36287  0047EA  E104               	bnz	i2u1428_40
 36288  0047EC  0E14               	movlw	20
 36289  0047EE  5D7E               	subwf	_RFcount& (0+255),w,b
 36290  0047F0  A0D8               	btfss	status,0,c
 36291  0047F2  D008               	goto	i2u1429_40
 36292  0047F4                     i2u1428_40:
 36293                           
 36294                           ; BSR set to: 0
 36295  0047F4  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36296  0047F6  D01E               	goto	i2l14406
 36297  0047F8  517F               	movf	(_RFcount+1)& (0+255),w,b
 36298  0047FA  E104               	bnz	i2u1429_40
 36299  0047FC  0E2D               	movlw	45
 36300  0047FE  5D7E               	subwf	_RFcount& (0+255),w,b
 36301  004800  A0D8               	btfss	status,0,c
 36302  004802  D018               	goto	i2l14406
 36303  004804                     i2u1429_40:
 36304                           
 36305                           ; BSR set to: 0
 36306                           ;inputs_MC50.c: 107:                     if((RFcount < 80) || RFcount>=100)
 36307  004804  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36308  004806  D7A3               	goto	i2u1421_40
 36309  004808  517F               	movf	(_RFcount+1)& (0+255),w,b
 36310  00480A  E104               	bnz	i2u1430_40
 36311  00480C  0E50               	movlw	80
 36312  00480E  5D7E               	subwf	_RFcount& (0+255),w,b
 36313  004810  A0D8               	btfss	status,0,c
 36314  004812  D79D               	goto	i2u1421_40
 36315  004814                     i2u1430_40:
 36316                           
 36317                           ; BSR set to: 0
 36318  004814  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36319  004816  D006               	goto	i2l14404
 36320  004818  517F               	movf	(_RFcount+1)& (0+255),w,b
 36321  00481A  E199               	bnz	i2l14364
 36322  00481C  0E64               	movlw	100
 36323  00481E  5D7E               	subwf	_RFcount& (0+255),w,b
 36324  004820  B0D8               	btfsc	status,0,c
 36325  004822  D795               	goto	i2u1421_40
 36326  004824                     i2l14404:
 36327                           
 36328                           ; BSR set to: 0
 36329                           ;inputs_MC50.c: 112:                     {;inputs_MC50.c: 113:                         R
      +                          Fcount = -10;
 36330  004824  0EFF               	movlw	255
 36331  004826  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36332  004828  0EF6               	movlw	246
 36333  00482A  6F7E               	movwf	_RFcount& (0+255),b
 36334                           
 36335                           ;inputs_MC50.c: 114:                         RFstate = 4;
 36336  00482C  0E04               	movlw	4
 36337  00482E  0101               	movlb	1	; () banked
 36338  004830  6F99               	movwf	_RFstate& (0+255),b
 36339  004832  0012               	return	
 36340  004834                     i2l14406:
 36341                           
 36342                           ; BSR set to: 0
 36343                           ;inputs_MC50.c: 118:                     RFcount = 0;
 36344  004834  0E00               	movlw	0
 36345  004836  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36346  004838  0E00               	movlw	0
 36347  00483A  6F7E               	movwf	_RFcount& (0+255),b
 36348                           
 36349                           ;inputs_MC50.c: 119:                     RFstate = 2;
 36350  00483C  0E02               	movlw	2
 36351  00483E  0101               	movlb	1	; () banked
 36352  004840  6F99               	movwf	_RFstate& (0+255),b
 36353  004842  0012               	return	
 36354  004844                     i2l14408:
 36355                           
 36356                           ; BSR set to: 0
 36357                           ;inputs_MC50.c: 122:                 RFcount++;
 36358  004844  4B7E               	infsnz	_RFcount& (0+255),f,b
 36359  004846  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36360  004848  0012               	return	
 36361  00484A                     i2l14410:
 36362                           
 36363                           ; BSR set to: 1
 36364                           ;inputs_MC50.c: 127:             if (RFBit == 0) {
 36365  00484A  0100               	movlb	0	; () banked
 36366  00484C  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36367  00484E  A4D8               	btfss	status,2,c
 36368  004850  D056               	goto	i2l14446
 36369                           
 36370                           ; BSR set to: 0
 36371                           ;inputs_MC50.c: 130:                 RFstate = 5;
 36372  004852  0E05               	movlw	5
 36373  004854  0101               	movlb	1	; () banked
 36374  004856  6F99               	movwf	_RFstate& (0+255),b
 36375                           
 36376                           ; BSR set to: 1
 36377                           ;inputs_MC50.c: 131:                 BufferRF[Bptr] >>= 1;
 36378  004858  0ECA               	movlw	low _BufferRF
 36379  00485A  0100               	movlb	0	; () banked
 36380  00485C  258D               	addwf	_Bptr& (0+255),w,b
 36381  00485E  6ED9               	movwf	fsr2l,c
 36382  004860  6ADA               	clrf	fsr2h,c
 36383  004862  0E02               	movlw	high _BufferRF
 36384  004864  22DA               	addwfc	fsr2h,f,c
 36385  004866  90D8               	bcf	status,0,c
 36386  004868  32DF               	rrcf	indf2,f,c
 36387                           
 36388                           ; BSR set to: 0
 36389                           ;inputs_MC50.c: 132:                 if (RFcount >= 0) {
 36390  00486A  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36391  00486C  D008               	goto	i2l14420
 36392                           
 36393                           ; BSR set to: 0
 36394                           ;inputs_MC50.c: 133:                     BufferRF[Bptr] += 0x80;
 36395  00486E  0ECA               	movlw	low _BufferRF
 36396  004870  258D               	addwf	_Bptr& (0+255),w,b
 36397  004872  6ED9               	movwf	fsr2l,c
 36398  004874  6ADA               	clrf	fsr2h,c
 36399  004876  0E02               	movlw	high _BufferRF
 36400  004878  22DA               	addwfc	fsr2h,f,c
 36401  00487A  0E80               	movlw	128
 36402  00487C  26DF               	addwf	indf2,f,c
 36403  00487E                     i2l14420:
 36404                           
 36405                           ; BSR set to: 0
 36406                           ;inputs_MC50.c: 136:                 RFcount = 0;
 36407  00487E  0E00               	movlw	0
 36408  004880  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36409  004882  0E00               	movlw	0
 36410  004884  6F7E               	movwf	_RFcount& (0+255),b
 36411                           
 36412                           ; BSR set to: 0
 36413                           ;inputs_MC50.c: 138:                 if ((++BitCount & 7) == 0)
 36414  004886  2B8C               	incf	_BitCount& (0+255),f,b
 36415  004888  C08C  F001         	movff	_BitCount,??_rxi
 36416  00488C  0E07               	movlw	7
 36417  00488E  1601               	andwf	??_rxi^0,f,c
 36418  004890  A4D8               	btfss	status,2,c
 36419  004892  D009               	goto	i2l14428
 36420                           
 36421                           ; BSR set to: 0
 36422                           ;inputs_MC50.c: 139:                 {;inputs_MC50.c: 140:                     Bptr++;
 36423  004894  2B8D               	incf	_Bptr& (0+255),f,b
 36424                           
 36425                           ; BSR set to: 0
 36426                           ;inputs_MC50.c: 141:                     BufferRF[Bptr]=0;
 36427  004896  0ECA               	movlw	low _BufferRF
 36428  004898  258D               	addwf	_Bptr& (0+255),w,b
 36429  00489A  6ED9               	movwf	fsr2l,c
 36430  00489C  6ADA               	clrf	fsr2h,c
 36431  00489E  0E02               	movlw	high _BufferRF
 36432  0048A0  22DA               	addwfc	fsr2h,f,c
 36433  0048A2  0E00               	movlw	0
 36434  0048A4  6EDF               	movwf	indf2,c
 36435  0048A6                     i2l14428:
 36436                           
 36437                           ; BSR set to: 0
 36438                           ;inputs_MC50.c: 143:                 if (BitCount == 13) {
 36439  0048A6  0E0D               	movlw	13
 36440  0048A8  198C               	xorwf	_BitCount& (0+255),w,b
 36441  0048AA  A4D8               	btfss	status,2,c
 36442  0048AC  0012               	return	
 36443                           
 36444                           ; BSR set to: 0
 36445                           ;inputs_MC50.c: 144:                     RFstate = 0;
 36446  0048AE  0E00               	movlw	0
 36447  0048B0  0101               	movlb	1	; () banked
 36448  0048B2  6F99               	movwf	_RFstate& (0+255),b
 36449                           
 36450                           ; BSR set to: 1
 36451                           ;inputs_MC50.c: 145:                     if(RFFull_12BIT==1)
 36452  0048B4  0100               	movlb	0	; () banked
 36453  0048B6  058A               	decf	_RFFull_12BIT& (0+255),w,b	;volatile
 36454  0048B8  A4D8               	btfss	status,2,c
 36455  0048BA  D01A               	goto	i2l14440
 36456                           
 36457                           ; BSR set to: 0
 36458                           ;inputs_MC50.c: 146:                     {;inputs_MC50.c: 147:                         i
      +                          f(BufferRF_12BIT[0]==BufferRF[0] && BufferRF_12BIT[1]==BufferRF[1])
 36459  0048BC  0102               	movlb	2	; () banked
 36460  0048BE  51CA               	movf	_BufferRF& (0+255),w,b
 36461  0048C0  0101               	movlb	1	; () banked
 36462  0048C2  1987               	xorwf	_BufferRF_12BIT& (0+255),w,b
 36463  0048C4  A4D8               	btfss	status,2,c
 36464  0048C6  D00F               	goto	i2l1615
 36465                           
 36466                           ; BSR set to: 1
 36467  0048C8  0102               	movlb	2	; () banked
 36468  0048CA  51CB               	movf	(_BufferRF+1)& (0+255),w,b
 36469  0048CC  0101               	movlb	1	; () banked
 36470  0048CE  1988               	xorwf	(_BufferRF_12BIT+1)& (0+255),w,b
 36471  0048D0  A4D8               	btfss	status,2,c
 36472  0048D2  D009               	goto	i2l1615
 36473                           
 36474                           ; BSR set to: 1
 36475                           ;inputs_MC50.c: 148:                         {;inputs_MC50.c: 149:                      
      +                                 RFFull = 1;
 36476  0048D4  0E01               	movlw	1
 36477  0048D6  0100               	movlb	0	; () banked
 36478  0048D8  6F8B               	movwf	_RFFull& (0+255),b	;volatile
 36479                           
 36480                           ;inputs_MC50.c: 150:                             BufferRF[2]=0;
 36481  0048DA  0E00               	movlw	0
 36482  0048DC  0102               	movlb	2	; () banked
 36483  0048DE  6FCC               	movwf	(_BufferRF+2)& (0+255),b
 36484                           
 36485                           ;inputs_MC50.c: 151:                             BufferRF[3]=0;
 36486  0048E0  0E00               	movlw	0
 36487  0048E2  6FCD               	movwf	(_BufferRF+3)& (0+255),b
 36488                           
 36489                           ;inputs_MC50.c: 152:                         }
 36490  0048E4  0012               	return	
 36491  0048E6                     i2l1615:
 36492                           
 36493                           ; BSR set to: 1
 36494                           ;inputs_MC50.c: 154:                         {;inputs_MC50.c: 155:                      
      +                                 BufferRF_12BIT[0]=BufferRF[0];
 36495  0048E6  C2CA  F187         	movff	_BufferRF,_BufferRF_12BIT
 36496                           
 36497                           ;inputs_MC50.c: 156:                             BufferRF_12BIT[1]=BufferRF[1];
 36498  0048EA  C2CB  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 36499  0048EE  0012               	return	
 36500  0048F0                     i2l14440:
 36501                           
 36502                           ; BSR set to: 0
 36503                           ;inputs_MC50.c: 161:                     {;inputs_MC50.c: 162:                         R
      +                          FFull_12BIT=1;
 36504  0048F0  0E01               	movlw	1
 36505  0048F2  6F8A               	movwf	_RFFull_12BIT& (0+255),b	;volatile
 36506                           
 36507                           ; BSR set to: 0
 36508                           ;inputs_MC50.c: 163:                         BufferRF_12BIT[0]=BufferRF[0];
 36509  0048F4  C2CA  F187         	movff	_BufferRF,_BufferRF_12BIT
 36510                           
 36511                           ; BSR set to: 0
 36512                           ;inputs_MC50.c: 164:                         BufferRF_12BIT[1]=BufferRF[1];
 36513  0048F8  C2CB  F188         	movff	_BufferRF+1,_BufferRF_12BIT+1
 36514  0048FC  0012               	return	
 36515  0048FE                     i2l14446:
 36516                           
 36517                           ; BSR set to: 0
 36518                           ;inputs_MC50.c: 168:                 RFcount++;
 36519  0048FE  4B7E               	infsnz	_RFcount& (0+255),f,b
 36520  004900  2B7F               	incf	(_RFcount+1)& (0+255),f,b
 36521                           
 36522                           ; BSR set to: 0
 36523                           ;inputs_MC50.c: 169:                 if (RFcount >= 10)
 36524  004902  BF7F               	btfsc	(_RFcount+1)& (0+255),7,b
 36525  004904  0012               	return	
 36526  004906  517F               	movf	(_RFcount+1)& (0+255),w,b
 36527  004908  E104               	bnz	i2u1439_40
 36528  00490A  0E0A               	movlw	10
 36529  00490C  5D7E               	subwf	_RFcount& (0+255),w,b
 36530  00490E  A0D8               	btfss	status,0,c
 36531  004910  0012               	return	
 36532  004912                     i2u1439_40:
 36533  004912  D71D               	goto	i2u1421_40
 36534  004914                     i2l14452:
 36535                           
 36536                           ; BSR set to: 1
 36537                           ;inputs_MC50.c: 177:             if (RFBit) {
 36538  004914  0100               	movlb	0	; () banked
 36539  004916  5189               	movf	_RFBit& (0+255),w,b	;volatile
 36540  004918  B4D8               	btfsc	status,2,c
 36541  00491A  D004               	goto	i2l14456
 36542                           
 36543                           ; BSR set to: 0
 36544                           ;inputs_MC50.c: 181:                 RFstate = 4;
 36545  00491C  0E04               	movlw	4
 36546  00491E  0101               	movlb	1	; () banked
 36547  004920  6F99               	movwf	_RFstate& (0+255),b
 36548                           
 36549                           ;inputs_MC50.c: 183:             } else {
 36550  004922  0012               	return	
 36551  004924                     i2l14456:
 36552                           
 36553                           ; BSR set to: 0
 36554                           ;inputs_MC50.c: 184:                 RFcount--;
 36555  004924  077E               	decf	_RFcount& (0+255),f,b
 36556  004926  A0D8               	btfss	status,0,c
 36557  004928  077F               	decf	(_RFcount+1)& (0+255),f,b
 36558                           
 36559                           ; BSR set to: 0
 36560                           ;inputs_MC50.c: 185:                 if (RFcount < -10)
 36561  00492A  AF7F               	btfss	(_RFcount+1)& (0+255),7,b
 36562  00492C  0012               	return	
 36563  00492E  0EF6               	movlw	246
 36564  004930  5D7E               	subwf	_RFcount& (0+255),w,b
 36565  004932  0EFF               	movlw	255
 36566  004934  597F               	subwfb	(_RFcount+1)& (0+255),w,b
 36567  004936  B0D8               	btfsc	status,0,c
 36568  004938  0012               	return	
 36569  00493A  D747               	goto	i2u1426_40
 36570  00493C                     i2l14462:
 36571                           
 36572                           ; BSR set to: 1
 36573                           ;inputs_MC50.c: 197:             RFstate = 1;
 36574  00493C  0E01               	movlw	1
 36575  00493E  6F99               	movwf	_RFstate& (0+255),b
 36576                           
 36577                           ;inputs_MC50.c: 198:             RFcount = 0;
 36578  004940  0E00               	movlw	0
 36579  004942  0100               	movlb	0	; () banked
 36580  004944  6F7F               	movwf	(_RFcount+1)& (0+255),b
 36581  004946  0E00               	movlw	0
 36582  004948  6F7E               	movwf	_RFcount& (0+255),b
 36583                           
 36584                           ;inputs_MC50.c: 199:             Bptr = 0;
 36585  00494A  0E00               	movlw	0
 36586  00494C  6F8D               	movwf	_Bptr& (0+255),b
 36587                           
 36588                           ;inputs_MC50.c: 200:             BitCount = 0;
 36589  00494E  0E00               	movlw	0
 36590  004950  6F8C               	movwf	_BitCount& (0+255),b
 36591                           
 36592                           ;inputs_MC50.c: 201:             break;
 36593  004952  0012               	return	
 36594  004954                     i2l14466:
 36595                           
 36596                           ; BSR set to: 0
 36597  004954  0101               	movlb	1	; () banked
 36598  004956  5199               	movf	_RFstate& (0+255),w,b
 36599  004958  6E01               	movwf	??_rxi^0,c
 36600  00495A  6A02               	clrf	(??_rxi+1)^0,c
 36601                           
 36602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36603                           ; Switch size 1, requested type "simple"
 36604                           ; Number of cases is 1, Range of values is 0 to 0
 36605                           ; switch strategies available:
 36606                           ; Name         Instructions Cycles
 36607                           ; simple_byte            4     3 (average)
 36608                           ;	Chosen strategy is simple_byte
 36609  00495C  5002               	movf	(??_rxi+1)^0,w,c
 36610  00495E  0A00               	xorlw	0	; case 0
 36611  004960  A4D8               	btfss	status,2,c
 36612  004962  D7EC               	goto	i2l14462
 36613                           
 36614                           ; BSR set to: 1
 36615                           ; Switch size 1, requested type "simple"
 36616                           ; Number of cases is 6, Range of values is 0 to 5
 36617                           ; switch strategies available:
 36618                           ; Name         Instructions Cycles
 36619                           ; simple_byte           19    10 (average)
 36620                           ;	Chosen strategy is simple_byte
 36621  004964  5001               	movf	??_rxi^0,w,c
 36622  004966  0A00               	xorlw	0	; case 0
 36623  004968  B4D8               	btfsc	status,2,c
 36624  00496A  D7E8               	goto	i2l14462
 36625  00496C  0A01               	xorlw	1	; case 1
 36626  00496E  B4D8               	btfsc	status,2,c
 36627  004970  D735               	goto	i2l14392
 36628  004972  0A03               	xorlw	3	; case 2
 36629  004974  B4D8               	btfsc	status,2,c
 36630  004976  D6D8               	goto	i2l14356
 36631  004978  0A01               	xorlw	1	; case 3
 36632  00497A  B4D8               	btfsc	status,2,c
 36633  00497C  D6EC               	goto	i2l14366
 36634  00497E  0A07               	xorlw	7	; case 4
 36635  004980  B4D8               	btfsc	status,2,c
 36636  004982  D763               	goto	i2l14410
 36637  004984  0A01               	xorlw	1	; case 5
 36638  004986  B4D8               	btfsc	status,2,c
 36639  004988  D7C5               	goto	i2l14452
 36640  00498A  D7D8               	goto	i2l14462
 36641  00498C                     __end_of_rxi:
 36642                           	callstack 0
 36643                           
 36644 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 36645 ;; Defined at:
 36646 ;;		line 147 in file "mcc_generated_files/tmr0.c"
 36647 ;; Parameters:    Size  Location     Type
 36648 ;;		None
 36649 ;; Auto vars:     Size  Location     Type
 36650 ;;		None
 36651 ;; Return value:  Size  Location     Type
 36652 ;;                  1    wreg      void 
 36653 ;; Registers used:
 36654 ;;		None
 36655 ;; Tracked objects:
 36656 ;;		On entry : 3F/2
 36657 ;;		On exit  : 3F/2
 36658 ;;		Unchanged: 3F/0
 36659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36664 ;;Total ram usage:        0 bytes
 36665 ;; Hardware stack levels used: 1
 36666 ;; This function calls:
 36667 ;;		Nothing
 36668 ;; This function is called by:
 36669 ;;		_TMR0_Initialize
 36670 ;;		_TMR0_ISR
 36671 ;; This function uses a non-reentrant model
 36672 ;;
 36673                           
 36674                           	psect	text202
 36675  00970C                     __ptext202:
 36676                           	callstack 0
 36677  00970C                     _TMR0_DefaultInterruptHandler:
 36678                           	callstack 15
 36679                           
 36680                           ; BSR set to: 2
 36681                           
 36682                           ;incstack = 0
 36683  00970C  0012               	return		;funcret
 36684  00970E                     __end_of_TMR0_DefaultInterruptHandler:
 36685                           	callstack 0
 36686                           
 36687 ;; *************** function _EUSART1_Transmit_ISR *****************
 36688 ;; Defined at:
 36689 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 36690 ;; Parameters:    Size  Location     Type
 36691 ;;		None
 36692 ;; Auto vars:     Size  Location     Type
 36693 ;;		None
 36694 ;; Return value:  Size  Location     Type
 36695 ;;                  1    wreg      void 
 36696 ;; Registers used:
 36697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36698 ;; Tracked objects:
 36699 ;;		On entry : 3F/2
 36700 ;;		On exit  : 30/0
 36701 ;;		Unchanged: 0/0
 36702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36707 ;;Total ram usage:        0 bytes
 36708 ;; Hardware stack levels used: 1
 36709 ;; This function calls:
 36710 ;;		Nothing
 36711 ;; This function is called by:
 36712 ;;		_EUSART1_Initialize
 36713 ;;		_INTERRUPT_InterruptManager
 36714 ;; This function uses a non-reentrant model
 36715 ;;
 36716                           
 36717                           	psect	text203
 36718  008ECA                     __ptext203:
 36719                           	callstack 0
 36720  008ECA                     _EUSART1_Transmit_ISR:
 36721                           	callstack 16
 36722                           
 36723                           ; BSR set to: 2
 36724                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 36725                           
 36726                           ; BSR set to: 2
 36727                           ;incstack = 0
 36728  008ECA  0E08               	movlw	8
 36729  008ECC  0101               	movlb	1	; () banked
 36730  008ECE  61FF               	cpfslt	_eusart1TxBufferRemaining& (0+255),b
 36731  008ED0  D012               	goto	i2l106
 36732                           
 36733                           ; BSR set to: 1
 36734                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 36735  008ED2  0E84               	movlw	low _eusart1TxBuffer
 36736  008ED4  0100               	movlb	0	; () banked
 36737  008ED6  2596               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 36738  008ED8  6ED9               	movwf	fsr2l,c
 36739  008EDA  6ADA               	clrf	fsr2h,c
 36740  008EDC  0E02               	movlw	high _eusart1TxBuffer
 36741  008EDE  22DA               	addwfc	fsr2h,f,c
 36742  008EE0  50DF               	movf	indf2,w,c
 36743  008EE2  6E9A               	movwf	154,c	;volatile
 36744                           
 36745                           ; BSR set to: 0
 36746  008EE4  2B96               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 36747                           
 36748                           ; BSR set to: 0
 36749                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 36750  008EE6  0E07               	movlw	7
 36751  008EE8  6596               	cpfsgt	_eusart1TxTail& (0+255),b
 36752  008EEA  D002               	goto	i2l16482
 36753                           
 36754                           ; BSR set to: 0
 36755                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 36756  008EEC  0E00               	movlw	0
 36757  008EEE  6F96               	movwf	_eusart1TxTail& (0+255),b	;volatile
 36758  008EF0                     i2l16482:
 36759                           
 36760                           ; BSR set to: 0
 36761                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 36762  008EF0  0101               	movlb	1	; () banked
 36763  008EF2  2BFF               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 36764                           
 36765                           ;mcc_generated_files/eusart1.c: 209:     }
 36766  008EF4  0012               	return	
 36767  008EF6                     i2l106:
 36768                           
 36769                           ; BSR set to: 1
 36770                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 36771  008EF6  010E               	movlb	14	; () banked
 36772  008EF8  99C5               	bcf	197,4,b	;volatile
 36773  008EFA  0012               	return		;funcret
 36774  008EFC                     __end_of_EUSART1_Transmit_ISR:
 36775                           	callstack 0
 36776                           
 36777 ;; *************** function _EUSART1_Receive_ISR *****************
 36778 ;; Defined at:
 36779 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 36780 ;; Parameters:    Size  Location     Type
 36781 ;;		None
 36782 ;; Auto vars:     Size  Location     Type
 36783 ;;		None
 36784 ;; Return value:  Size  Location     Type
 36785 ;;                  1    wreg      void 
 36786 ;; Registers used:
 36787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36788 ;; Tracked objects:
 36789 ;;		On entry : 3F/2
 36790 ;;		On exit  : 0/0
 36791 ;;		Unchanged: 0/0
 36792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36797 ;;Total ram usage:        0 bytes
 36798 ;; Hardware stack levels used: 1
 36799 ;; Hardware stack levels required when called: 2
 36800 ;; This function calls:
 36801 ;;		Absolute function
 36802 ;;		_EUSART1_DefaultErrorHandler
 36803 ;;		_EUSART1_DefaultFramingErrorHandler
 36804 ;;		_EUSART1_DefaultOverrunErrorHandler
 36805 ;;		_EUSART1_RxDataHandler
 36806 ;; This function is called by:
 36807 ;;		_EUSART1_Initialize
 36808 ;;		_INTERRUPT_InterruptManager
 36809 ;; This function uses a non-reentrant model
 36810 ;;
 36811                           
 36812                           	psect	text204
 36813  007806                     __ptext204:
 36814                           	callstack 0
 36815  007806                     _EUSART1_Receive_ISR:
 36816                           	callstack 14
 36817                           
 36818                           ; BSR set to: 2
 36819                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 36820                           
 36821                           ;incstack = 0
 36822  007806  0E74               	movlw	low _eusart1RxStatusBuffer
 36823  007808  0100               	movlb	0	; () banked
 36824  00780A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36825  00780C  6ED9               	movwf	fsr2l,c
 36826  00780E  6ADA               	clrf	fsr2h,c
 36827  007810  0E02               	movlw	high _eusart1RxStatusBuffer
 36828  007812  22DA               	addwfc	fsr2h,f,c
 36829  007814  0E00               	movlw	0
 36830  007816  6EDF               	movwf	indf2,c
 36831                           
 36832                           ; BSR set to: 0
 36833                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 36834  007818  A49D               	btfss	157,2,c	;volatile
 36835  00781A  D013               	goto	i2u1851_49
 36836                           
 36837                           ; BSR set to: 0
 36838                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 36839  00781C  0E74               	movlw	low _eusart1RxStatusBuffer
 36840  00781E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36841  007820  6ED9               	movwf	fsr2l,c
 36842  007822  6ADA               	clrf	fsr2h,c
 36843  007824  0E02               	movlw	high _eusart1RxStatusBuffer
 36844  007826  22DA               	addwfc	fsr2h,f,c
 36845  007828  0102               	movlb	2	; () banked
 36846  00782A  82DF               	bsf	indf2,1,c
 36847                           
 36848                           ; BSR set to: 2
 36849                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 36850  00782C  D801               	call	i2u1851_48
 36851  00782E  D009               	goto	i2u1851_49
 36852  007830                     i2u1851_48:
 36853  007830  0005               	push	
 36854  007832  6EFA               	movwf	pclath,c
 36855  007834  51EB               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 36856  007836  6EFD               	movwf	tosl,c
 36857  007838  51EC               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 36858  00783A  6EFE               	movwf	tosh,c
 36859  00783C  6AFF               	clrf	tosu,c
 36860  00783E  50FA               	movf	pclath,w,c
 36861  007840  0012               	return		;indir
 36862  007842                     i2u1851_49:
 36863                           
 36864                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 36865  007842  A29D               	btfss	157,1,c	;volatile
 36866  007844  D014               	goto	i2u1853_49
 36867                           
 36868                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 36869  007846  0E74               	movlw	low _eusart1RxStatusBuffer
 36870  007848  0100               	movlb	0	; () banked
 36871  00784A  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36872  00784C  6ED9               	movwf	fsr2l,c
 36873  00784E  6ADA               	clrf	fsr2h,c
 36874  007850  0E02               	movlw	high _eusart1RxStatusBuffer
 36875  007852  22DA               	addwfc	fsr2h,f,c
 36876  007854  0102               	movlb	2	; () banked
 36877  007856  84DF               	bsf	indf2,2,c
 36878                           
 36879                           ; BSR set to: 2
 36880                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 36881  007858  D801               	call	i2u1853_48
 36882  00785A  D009               	goto	i2u1853_49
 36883  00785C                     i2u1853_48:
 36884  00785C  0005               	push	
 36885  00785E  6EFA               	movwf	pclath,c
 36886  007860  51E9               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 36887  007862  6EFD               	movwf	tosl,c
 36888  007864  51EA               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 36889  007866  6EFE               	movwf	tosh,c
 36890  007868  6AFF               	clrf	tosu,c
 36891  00786A  50FA               	movf	pclath,w,c
 36892  00786C  0012               	return		;indir
 36893  00786E                     i2u1853_49:
 36894                           
 36895                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 36896  00786E  0E74               	movlw	low _eusart1RxStatusBuffer
 36897  007870  0100               	movlb	0	; () banked
 36898  007872  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 36899  007874  6ED9               	movwf	fsr2l,c
 36900  007876  6ADA               	clrf	fsr2h,c
 36901  007878  0E02               	movlw	high _eusart1RxStatusBuffer
 36902  00787A  22DA               	addwfc	fsr2h,f,c
 36903  00787C  50DF               	movf	indf2,w,c
 36904  00787E  B4D8               	btfsc	status,2,c
 36905  007880  D00C               	goto	i2l16502
 36906                           
 36907                           ; BSR set to: 0
 36908                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 36909  007882  D801               	call	i2u1855_48
 36910  007884  0012               	return	
 36911  007886                     i2u1855_48:
 36912  007886  0005               	push	
 36913  007888  6EFA               	movwf	pclath,c
 36914  00788A  0102               	movlb	2	; () banked
 36915  00788C  51E7               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 36916  00788E  6EFD               	movwf	tosl,c
 36917  007890  51E8               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 36918  007892  6EFE               	movwf	tosh,c
 36919  007894  6AFF               	clrf	tosu,c
 36920  007896  50FA               	movf	pclath,w,c
 36921  007898  0012               	return		;indir
 36922  00789A                     i2l16502:
 36923                           
 36924                           ; BSR set to: 0
 36925                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 36926  00789A  ECAD  F049         	call	_EUSART1_RxDataHandler	;wreg free
 36927  00789E  0012               	return		;funcret
 36928  0078A0                     __end_of_EUSART1_Receive_ISR:
 36929                           	callstack 0
 36930                           
 36931 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 36932 ;; Defined at:
 36933 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 36934 ;; Parameters:    Size  Location     Type
 36935 ;;		None
 36936 ;; Auto vars:     Size  Location     Type
 36937 ;;		None
 36938 ;; Return value:  Size  Location     Type
 36939 ;;                  1    wreg      void 
 36940 ;; Registers used:
 36941 ;;		None
 36942 ;; Tracked objects:
 36943 ;;		On entry : 3F/2
 36944 ;;		On exit  : 3F/2
 36945 ;;		Unchanged: 3F/0
 36946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36951 ;;Total ram usage:        0 bytes
 36952 ;; Hardware stack levels used: 1
 36953 ;; This function calls:
 36954 ;;		Nothing
 36955 ;; This function is called by:
 36956 ;;		_EUSART1_Initialize
 36957 ;;		_EUSART1_Receive_ISR
 36958 ;; This function uses a non-reentrant model
 36959 ;;
 36960                           
 36961                           	psect	text205
 36962  0096C6                     __ptext205:
 36963                           	callstack 0
 36964  0096C6                     _EUSART1_DefaultOverrunErrorHandler:
 36965                           	callstack 15
 36966                           
 36967                           ; BSR set to: 2
 36968                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 36969                           
 36970                           ;incstack = 0
 36971  0096C6  989D               	bcf	157,4,c	;volatile
 36972                           
 36973                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 36974  0096C8  889D               	bsf	157,4,c	;volatile
 36975                           
 36976                           ; BSR set to: 2
 36977  0096CA  0012               	return		;funcret
 36978  0096CC                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 36979                           	callstack 0
 36980                           
 36981 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 36982 ;; Defined at:
 36983 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 36984 ;; Parameters:    Size  Location     Type
 36985 ;;		None
 36986 ;; Auto vars:     Size  Location     Type
 36987 ;;		None
 36988 ;; Return value:  Size  Location     Type
 36989 ;;                  1    wreg      void 
 36990 ;; Registers used:
 36991 ;;		None
 36992 ;; Tracked objects:
 36993 ;;		On entry : 3F/2
 36994 ;;		On exit  : 3F/2
 36995 ;;		Unchanged: 3F/0
 36996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37001 ;;Total ram usage:        0 bytes
 37002 ;; Hardware stack levels used: 1
 37003 ;; This function calls:
 37004 ;;		Nothing
 37005 ;; This function is called by:
 37006 ;;		_EUSART1_Initialize
 37007 ;;		_EUSART1_Receive_ISR
 37008 ;; This function uses a non-reentrant model
 37009 ;;
 37010                           
 37011                           	psect	text206
 37012  00970E                     __ptext206:
 37013                           	callstack 0
 37014  00970E                     _EUSART1_DefaultFramingErrorHandler:
 37015                           	callstack 15
 37016                           
 37017                           ; BSR set to: 2
 37018                           
 37019                           ; BSR set to: 2
 37020                           ;incstack = 0
 37021  00970E  0012               	return		;funcret
 37022  009710                     __end_of_EUSART1_DefaultFramingErrorHandler:
 37023                           	callstack 0
 37024                           
 37025 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 37026 ;; Defined at:
 37027 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 37028 ;; Parameters:    Size  Location     Type
 37029 ;;		None
 37030 ;; Auto vars:     Size  Location     Type
 37031 ;;		None
 37032 ;; Return value:  Size  Location     Type
 37033 ;;                  1    wreg      void 
 37034 ;; Registers used:
 37035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37036 ;; Tracked objects:
 37037 ;;		On entry : 3F/2
 37038 ;;		On exit  : 3F/0
 37039 ;;		Unchanged: 0/0
 37040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37045 ;;Total ram usage:        0 bytes
 37046 ;; Hardware stack levels used: 1
 37047 ;; Hardware stack levels required when called: 1
 37048 ;; This function calls:
 37049 ;;		_EUSART1_RxDataHandler
 37050 ;; This function is called by:
 37051 ;;		_EUSART1_Initialize
 37052 ;;		_EUSART1_Receive_ISR
 37053 ;; This function uses a non-reentrant model
 37054 ;;
 37055                           
 37056                           	psect	text207
 37057  0096CC                     __ptext207:
 37058                           	callstack 0
 37059  0096CC                     _EUSART1_DefaultErrorHandler:
 37060                           	callstack 14
 37061                           
 37062                           ; BSR set to: 2
 37063                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 37064                           
 37065                           ; BSR set to: 2
 37066                           ;incstack = 0
 37067  0096CC  ECAD  F049         	call	_EUSART1_RxDataHandler	;wreg free
 37068                           
 37069                           ; BSR set to: 0
 37070  0096D0  0012               	return		;funcret
 37071  0096D2                     __end_of_EUSART1_DefaultErrorHandler:
 37072                           	callstack 0
 37073                           
 37074 ;; *************** function _EUSART1_RxDataHandler *****************
 37075 ;; Defined at:
 37076 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 37077 ;; Parameters:    Size  Location     Type
 37078 ;;		None
 37079 ;; Auto vars:     Size  Location     Type
 37080 ;;		None
 37081 ;; Return value:  Size  Location     Type
 37082 ;;                  1    wreg      void 
 37083 ;; Registers used:
 37084 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37085 ;; Tracked objects:
 37086 ;;		On entry : 3D/0
 37087 ;;		On exit  : 3F/0
 37088 ;;		Unchanged: 0/0
 37089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37094 ;;Total ram usage:        0 bytes
 37095 ;; Hardware stack levels used: 1
 37096 ;; This function calls:
 37097 ;;		Nothing
 37098 ;; This function is called by:
 37099 ;;		_EUSART1_Receive_ISR
 37100 ;;		_EUSART1_DefaultErrorHandler
 37101 ;; This function uses a non-reentrant model
 37102 ;;
 37103                           
 37104                           	psect	text208
 37105  00935A                     __ptext208:
 37106                           	callstack 0
 37107  00935A                     _EUSART1_RxDataHandler:
 37108                           	callstack 15
 37109                           
 37110                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 37111                           
 37112                           ; BSR set to: 0
 37113                           ;incstack = 0
 37114  00935A  0E7C               	movlw	low _eusart1RxBuffer
 37115  00935C  0100               	movlb	0	; () banked
 37116  00935E  2595               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 37117  009360  6ED9               	movwf	fsr2l,c
 37118  009362  6ADA               	clrf	fsr2h,c
 37119  009364  0E02               	movlw	high _eusart1RxBuffer
 37120  009366  22DA               	addwfc	fsr2h,f,c
 37121  009368  CF99 FFDF          	movff	3993,indf2	;volatile
 37122                           
 37123                           ; BSR set to: 0
 37124  00936C  2B95               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 37125                           
 37126                           ; BSR set to: 0
 37127                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 37128  00936E  0E07               	movlw	7
 37129  009370  6595               	cpfsgt	_eusart1RxHead& (0+255),b
 37130  009372  D002               	goto	i2l12802
 37131                           
 37132                           ; BSR set to: 0
 37133                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 37134  009374  0E00               	movlw	0
 37135  009376  6F95               	movwf	_eusart1RxHead& (0+255),b	;volatile
 37136  009378                     i2l12802:
 37137                           
 37138                           ; BSR set to: 0
 37139                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 37140  009378  2B93               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 37141                           
 37142                           ; BSR set to: 0
 37143  00937A  0012               	return		;funcret
 37144  00937C                     __end_of_EUSART1_RxDataHandler:
 37145                           	callstack 0
 37146                           
 37147                           	psect	text209
 37148  000000                     __ptext209:
 37149                           	callstack 0
 37150                           
 37151                           	psect	rparam
 37152  0000                     
 37153                           	psect	temp
 37154  000050                     btemp:
 37155                           	callstack 0
 37156  000050                     	ds	1
 37157  0000                     int$flags	set	btemp
 37158  0000                     wtemp8	set	btemp+1
 37159  0000                     ttemp5	set	btemp+1
 37160  0000                     ttemp6	set	btemp+4
 37161  0000                     ttemp7	set	btemp+8
 37162                           
 37163                           	psect	idloc
 37164                           
 37165                           ;Config register IDLOC0 @ 0x200000
 37166                           ;	unspecified, using default values
 37167  200000                     	org	2097152
 37168  200000  0FFF               	dw	4095
 37169                           
 37170                           ;Config register IDLOC1 @ 0x200002
 37171                           ;	unspecified, using default values
 37172  200002                     	org	2097154
 37173  200002  0FFF               	dw	4095
 37174                           
 37175                           ;Config register IDLOC2 @ 0x200004
 37176                           ;	unspecified, using default values
 37177  200004                     	org	2097156
 37178  200004  0FFF               	dw	4095
 37179                           
 37180                           ;Config register IDLOC3 @ 0x200006
 37181                           ;	unspecified, using default values
 37182  200006                     	org	2097158
 37183  200006  0FFF               	dw	4095
 37184                           
 37185                           ;Config register IDLOC4 @ 0x200008
 37186                           ;	unspecified, using default values
 37187  200008                     	org	2097160
 37188  200008  0FFF               	dw	4095
 37189                           
 37190                           ;Config register IDLOC5 @ 0x20000A
 37191                           ;	unspecified, using default values
 37192  20000A                     	org	2097162
 37193  20000A  0FFF               	dw	4095
 37194                           
 37195                           ;Config register IDLOC6 @ 0x20000C
 37196                           ;	unspecified, using default values
 37197  20000C                     	org	2097164
 37198  20000C  0FFF               	dw	4095
 37199                           
 37200                           ;Config register IDLOC7 @ 0x20000E
 37201                           ;	unspecified, using default values
 37202  20000E                     	org	2097166
 37203  20000E  0FFF               	dw	4095
 37204                           
 37205                           	psect	config
 37206                           
 37207                           ;Config register CONFIG1L @ 0x300000
 37208                           ;	External Oscillator mode Selection bits
 37209                           ;	FEXTOSC = OFF, Oscillator not enabled
 37210                           ;	Power-up default value for COSC bits
 37211                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 37212  300000                     	org	3145728
 37213  300000  8C                 	db	140
 37214                           
 37215                           ;Config register CONFIG1H @ 0x300001
 37216                           ;	Clock Out Enable bit
 37217                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 37218                           ;	Clock Switch Enable bit
 37219                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 37220                           ;	Fail-Safe Clock Monitor Enable bit
 37221                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 37222  300001                     	org	3145729
 37223  300001  FF                 	db	255
 37224                           
 37225                           ;Config register CONFIG2L @ 0x300002
 37226                           ;	Master Clear Enable bit
 37227                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 37228                           ;	Power-up Timer Enable bit
 37229                           ;	PWRTE = ON, Power up timer enabled
 37230                           ;	Low-power BOR enable bit
 37231                           ;	LPBOREN = OFF, ULPBOR disabled
 37232                           ;	Brown-out Reset Enable bits
 37233                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 37234  300002                     	org	3145730
 37235  300002  FD                 	db	253
 37236                           
 37237                           ;Config register CONFIG2H @ 0x300003
 37238                           ;	Brown Out Reset Voltage selection bits
 37239                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 37240                           ;	ZCD Disable bit
 37241                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 37242                           ;	PPSLOCK bit One-Way Set Enable bit
 37243                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 37244                           ;	Stack Full/Underflow Reset Enable bit
 37245                           ;	STVREN = ON, Stack full/underflow will cause Reset
 37246                           ;	Debugger Enable bit
 37247                           ;	DEBUG = OFF, Background debugger disabled
 37248                           ;	Extended Instruction Set Enable bit
 37249                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 37250  300003                     	org	3145731
 37251  300003  FF                 	db	255
 37252                           
 37253                           ;Config register CONFIG3L @ 0x300004
 37254                           ;	WDT Period Select bits
 37255                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 37256                           ;	WDT operating mode
 37257                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
 37258  300004                     	org	3145732
 37259  300004  BF                 	db	191
 37260                           
 37261                           ;Config register CONFIG3H @ 0x300005
 37262                           ;	WDT Window Select bits
 37263                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 37264                           ;	WDT input clock selector
 37265                           ;	WDTCCS = SC, Software Control
 37266  300005                     	org	3145733
 37267  300005  FF                 	db	255
 37268                           
 37269                           ;Config register CONFIG4L @ 0x300006
 37270                           ;	Write Protection Block 0
 37271                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 37272                           ;	Write Protection Block 1
 37273                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 37274                           ;	Write Protection Block 2
 37275                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 37276                           ;	Write Protection Block 3
 37277                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 37278  300006                     	org	3145734
 37279  300006  FF                 	db	255
 37280                           
 37281                           ;Config register CONFIG4H @ 0x300007
 37282                           ;	Configuration Register Write Protection bit
 37283                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
 37284                           ;	Boot Block Write Protection bit
 37285                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 37286                           ;	Data EEPROM Write Protection bit
 37287                           ;	WRTD = OFF, Data EEPROM not write-protected
 37288                           ;	Scanner Enable bit
 37289                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
 37290                           ;	Low Voltage Programming Enable bit
 37291                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 37292  300007                     	org	3145735
 37293  300007  DF                 	db	223
 37294                           
 37295                           ;Config register CONFIG5L @ 0x300008
 37296                           ;	UserNVM Program Memory Code Protection bit
 37297                           ;	CP = ON, UserNVM code protection enabled
 37298                           ;	DataNVM Memory Code Protection bit
 37299                           ;	CPD = ON, DataNVM code protection enabled
 37300  300008                     	org	3145736
 37301  300008  FC                 	db	252
 37302                           
 37303                           ;Config register CONFIG5H @ 0x300009
 37304                           ;	unspecified, using default values
 37305  300009                     	org	3145737
 37306  300009  FF                 	db	255
 37307                           
 37308                           ;Config register CONFIG6L @ 0x30000A
 37309                           ;	Table Read Protection Block 0
 37310                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 37311                           ;	Table Read Protection Block 1
 37312                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 37313                           ;	Table Read Protection Block 2
 37314                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 37315                           ;	Table Read Protection Block 3
 37316                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 37317  30000A                     	org	3145738
 37318  30000A  FF                 	db	255
 37319                           
 37320                           ;Config register CONFIG6H @ 0x30000B
 37321                           ;	Boot Block Table Read Protection bit
 37322                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 37323  30000B                     	org	3145739
 37324  30000B  FF                 	db	255
 37325                           tosu	equ	0xFFF
 37326                           tosh	equ	0xFFE
 37327                           tosl	equ	0xFFD
 37328                           stkptr	equ	0xFFC
 37329                           pclatu	equ	0xFFB
 37330                           pclath	equ	0xFFA
 37331                           pcl	equ	0xFF9
 37332                           tblptru	equ	0xFF8
 37333                           tblptrh	equ	0xFF7
 37334                           tblptrl	equ	0xFF6
 37335                           tablat	equ	0xFF5
 37336                           prodh	equ	0xFF4
 37337                           prodl	equ	0xFF3
 37338                           indf0	equ	0xFEF
 37339                           postinc0	equ	0xFEE
 37340                           postdec0	equ	0xFED
 37341                           preinc0	equ	0xFEC
 37342                           plusw0	equ	0xFEB
 37343                           fsr0h	equ	0xFEA
 37344                           fsr0l	equ	0xFE9
 37345                           wreg	equ	0xFE8
 37346                           indf1	equ	0xFE7
 37347                           postinc1	equ	0xFE6
 37348                           postdec1	equ	0xFE5
 37349                           preinc1	equ	0xFE4
 37350                           plusw1	equ	0xFE3
 37351                           fsr1h	equ	0xFE2
 37352                           fsr1l	equ	0xFE1
 37353                           bsr	equ	0xFE0
 37354                           indf2	equ	0xFDF
 37355                           postinc2	equ	0xFDE
 37356                           postdec2	equ	0xFDD
 37357                           preinc2	equ	0xFDC
 37358                           plusw2	equ	0xFDB
 37359                           fsr2h	equ	0xFDA
 37360                           fsr2l	equ	0xFD9
 37361                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        46
    BSS         824
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      79
    BANK0           160     34     156
    BANK1           256      0     256
    BANK2           256      0     243
    BANK3           256      0     247
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    I2C1_DO_TX$8278$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8284$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8290$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX_EMPTY$8296$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8295	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX_EMPTY$8290	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_RX$8289	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_RX$8284	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_DO_TX$8283	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_DO_TX$8278	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$8277	const PTR FTN()enum E10442 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> classic_data.raw_data(BANK2[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), classic_data.serialnumber(BANK2[4]), classic_data(BANK2[16]), BufferRF(BANK2[9]), 
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    confirmpackage@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    read_eusartparser@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    init_package@package	PTR struct package_t size(1) Largest target is 7
		 -> main@package(BANK0[7]), 

    sm_send_event@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_send_event@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_get_current_state@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_get_current_state@psm	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_restart@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_init@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_init@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), controlGate_stateMachine(BANK1[11]), main_stateMachine(BANK1[11]), menuConfiguration_stateMachine(BANK2[11]), 

    sm_execute_menuConfiguration@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_menuConfiguration@psm	PTR struct . size(2) Largest target is 12
		 -> menuConfiguration_stateMachine(BANK2[11]), 

    S6612$Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    edit_Param.Value	PTR unsigned char  size(2) Largest target is 64
		 -> setValueToEdit@value(BANK1[1]), var_sys_NVM.walkTime(BANK0[1]), var_sys_NVM.softStart(BANK0[1]), var_sys_NVM.softstop(BANK0[1]), 
		 -> var_sys_NVM.flashRGBMode(BANK0[1]), var_sys_NVM.velocityDecelaration(BANK0[1]), var_sys_NVM.operationMode(BANK0[1]), var_sys_NVM.autoTimeFullClose(BANK0[1]), 
		 -> var_sys_NVM.Stopboton(BANK0[1]), var_sys_NVM.logicDigital(BANK0[1]), var_sys_NVM.Direction_motor(BANK0[1]), var_sys_NVM.folow_me(BANK0[1]), 
		 -> var_sys_NVM.ligthTime(BANK0[1]), var_sys_NVM.autoTimeWalkClose(BANK0[1]), var_sys_NVM.programmingDistance(BANK0[1]), var_sys_NVM.flashLightMode(BANK0[1]), 
		 -> var_sys_NVM.securityBandInOpen(BANK0[1]), var_sys_NVM.securityBandType(BANK0[1]), var_sys_NVM.securityBandIsON(BANK0[1]), var_sys_NVM.photoCellInOpen(BANK0[1]), 
		 -> var_sys_NVM.photoCellIsON(BANK0[1]), var_sys_NVM.decelarationClose(BANK0[1]), var_sys_NVM.motorPower(BANK0[1]), var_sys_NVM.decelarationOpen(BANK0[1]), 
		 -> var_sys_NVM.homemPresente(BANK0[1]), var_sys_NVM.TypeofMotor(BANK0[1]), var_sys_NVM.positionRemotesWalk(BANK0[1]), var_sys_NVM.decelarationSensivity(BANK0[1]), 
		 -> var_sys_NVM.motorSensitivity(BANK0[1]), var_sys_NVM.electricBrake(BANK0[1]), var_sys_NVM(BANK0[64]), NULL(NULL[0]), 

    sm_execute_main@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_main@psm	PTR struct . size(2) Largest target is 12
		 -> main_stateMachine(BANK1[11]), 

    sm_execute_ControlLearning@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlLearning@psm	PTR struct . size(2) Largest target is 12
		 -> controlLearning_stateMachine(BANK2[11]), 

    sm_execute_ControlGate@psm.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sm_execute_ControlGate@psm	PTR struct . size(2) Largest target is 12
		 -> controlGate_stateMachine(BANK1[11]), 

    decrementTimeslot@ts	PTR int  size(2) Largest target is 72
		 -> ts_system.TimeShowVersion(BANK1[2]), ts_system.TimeLearningDecelaration(BANK1[2]), ts_system.TimeWaitToGetCurrent(BANK1[2]), ts_system.InvertionTimeClosingFromOpen(BANK1[2]), 
		 -> ts_system.TimeWaitReleCapacitor(BANK1[2]), ts_system.TimeInversionStart(BANK1[2]), ts_system.TimeStopedBeforeDecelaration(BANK1[2]), ts_system.TimeWaitToNextState(BANK1[2]), 
		 -> ts_system.timeFreqFlashligth(BANK1[2]), ts_system.timeFreqRGB(BANK1[2]), ts_system.timeWaitToClose(BANK1[2]), ts_system.timeOpenWalk(BANK1[2]), 
		 -> ts_system.timeoutMenu(BANK1[2]), ts_system.timeFreqDigit(BANK1[2]), ts_system.timewaitFlashRGB(BANK1[2]), ts_system.TimeStopElectricBrake(BANK1[2]), 
		 -> ts_system.Debug_TS(BANK1[2]), ts_system.timeSinalizationDigit(BANK1[2]), ts_system.TimeLastCommand(BANK1[2]), ts_system.timeBetweenSaveCounters(BANK1[2]), 
		 -> ts_system.TimeCurrentAlarm(BANK1[2]), ts_system.TimeCurrentWaitForAlarm(BANK1[2]), ts_system.TimeReleCapacitor(BANK1[2]), ts_system.TimeChargeCondesador(BANK1[2]), 
		 -> ts_system.TimeTransitionDecelaration(BANK1[2]), ts_system.timewaitBeforeSoftStart(BANK1[2]), ts_system.timeSoftStart(BANK1[2]), ts_system.TimeElectricBrake(BANK1[2]), 
		 -> ts_system.TimeStopADCZeroOffsetCalc(BANK1[2]), ts_system(BANK1[72]), 

    controlLearning_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    controlGate_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4643$parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    menuConfiguration_stateMachine.parent_machine	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    verifyProgramingMode@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloq_classic_decrypt_packet@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecryptPacket_12BIT@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    DecryptPacket_12BIT@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    keeloqDecryptPacket@data	PTR unsigned char  size(2) Largest target is 9
		 -> BufferRF(BANK2[9]), 

    keeloqDecryptPacket@classic_data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    getHopCode@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    HopCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    DecCHK@data	PTR struct . size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    Decrypt@packet	PTR unsigned char  size(2) Largest target is 16
		 -> SecureKeyGen@HOPtemp(COMRAM[4]), NormalKeyGen@Buffer(COMRAM[8]), classic_data(BANK2[16]), 

    NormalKeyGen@serial	PTR unsigned long  size(2) Largest target is 16
		 -> classic_data(BANK2[16]), 

    sp__getClassicManufCode	PTR void  size(2) Largest target is 8
		 -> DKEY(BANK2[8]), 

    getSerialCmd@serial	PTR unsigned long  size(1) Largest target is 4
		 -> controlSelectRemote@tempSerial(BANK0[4]), 

    SaveNVM_VarSystem@point	PTR unsigned char  size(1) Largest target is 64
		 -> var_sys_NVM(BANK0[64]), 

    validateRemoteSerialNumber@position	PTR unsigned char  size(2) Largest target is 16
		 -> eusartparser@pos(BANK0[1]), controlSelectRemote@pos(BANK0[1]), classic_data(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    I2C1_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), I2C1_ReadDataBlock@reg(COMRAM[1]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_WriteNBytes@dat(COMRAM[17]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@reg(COMRAM[2]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_writeNBytes@dat(COMRAM[17]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S935$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F535(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F523(), wr1RegCompleteHandler@i2c1_master_example$F517(), rd2RegCompleteHandler@i2c1_master_example$F511(), rd1RegCompleteHandler@i2c1_master_example$F500(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E10442[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F523@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F517@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F511@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F500@ptr	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    i2c_readDataBlock@data	PTR void  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    d.data	PTR unsigned char  size(2) Largest target is 64
		 -> var_sys_NVM.homemPresente(BANK0[1]), cmdMemoryIsEmpty@tempSerial(COMRAM[4]), var_sys_NVM.positionRemotesFull(BANK0[1]), memoryTEMP(BANK2[16]), 
		 -> var_sys_NVM.learningCurrentNormalClose(BANK0[2]), var_sys_NVM(BANK0[64]), 

    S429$data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 64
		 -> cmdMemoryIsEmpty@tempSerial(COMRAM[4]), memoryTEMP(BANK2[16]), var_sys_NVM(BANK0[64]), 

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 17
		 -> controlSelectRemote@tempSerial(BANK0[4]), Decrypt@Buffer(COMRAM[4]), SecureKeyGen@SKEYtemp(COMRAM[8]), SecureKeyGen@HOPtemp(COMRAM[4]), 
		 -> SecureKeyGen@Buffer(COMRAM[8]), NormalKeyGen@SKEYtemp(COMRAM[4]), NormalKeyGen@SEED(BANK2[4]), NormalKeyGen@HOPtemp(COMRAM[4]), 
		 -> NormalKeyGen@Buffer(COMRAM[8]), DKEY(BANK2[8]), classic_data(BANK2[16]), I2C1_WriteNBytes@dat(COMRAM[17]), 
		 -> i2c_writeNBytes@dat(COMRAM[17]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 64
		 -> RemoveSerial@tempSerial(BANK0[4]), saveNewSerial@tempSerial(BANK0[4]), var_sys_NVM(BANK0[64]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _sm_execute_menuConfiguration->_ResetDefaultMemory
    _sm_execute_menuConfiguration->_setValueToEdit
    _load_New_Menu->_SetSegmentValueIntermitentMain
    _controlSelectRemote->_RemoveSerial
    _controlSelectRemote->_saveNewSerial
    _controlSelectRemote->_validateRemoteSerialNumber
    _getSerialCmd->_memcpy
    _controlSaveRemote->_SetSegmentValueIntermitentMain
    ___awdiv->___lbmod
    _SetSegmentValueMain->___awdiv
    _controlLearnDigit->_SetSegmentValueLearn
    _sm_execute_ControlGate->_sm_execute_ControlLearning
    _generateErrorLearnig->_sm_init
    _sm_init->_sm_restart
    _setPositionInvertionInOpening->_getTimeDecelaration
    _controlVelocity->_getStateOpenPosition
    _getStateOpenPosition->_getTimeDecelaration
    _InitSoftStop->_GetMotorPower
    _CloseOrder->_sm_send_event
    _setPositionInvertionInClosing->_getTimeDecelaration
    _getTimeDecelaration->___lmul
    ___lmul->___lldiv
    _StopOrder->_sm_send_event
    _GetSecurityStateInClosing->_SetSegmentValueIntermitent
    _WaitPreFlash->_sm_send_event
    _OpenFullOrder->_sm_send_event
    _OpenWalkOrder->_sm_send_event
    _sm_send_event->_sm_get_current_state
    _InitSoftStart->_GetMotorPower
    _GetSecurityStateInOpening->_SetSegmentValueIntermitent
    _GetOpenOrder->_SetSegmentValueIntermitentMain
    _SetSegmentValueIntermitentMain->___awdiv
    _read_package->_EUSART1_Read
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _keeloq_classic_decrypt_packet->_NormalKeyGen
    _NormalKeyGen->_Decrypt
    _Decrypt->_memcpy
    _HopCHK->_getHopCode
    _getHopCode->___wmul
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_ResetDefaultMemory
    _loadNVM_VarSystem->_checkNVM_VarSystem
    _eusartparser->_RemoveSerial
    _eusartparser->_saveNewSerial
    _eusartparser->_validateRemoteSerialNumber
    _validateRemoteSerialNumber->_i2c_readDataBlock
    _saveNewSerial->_i2c_writeNBytes
    _read_eusartparser->_write_package
    _write_package->_EUSART1_Write
    _confirmpackage->_init_package
    _cmdMemoryIsEmpty->_i2c_readDataBlock
    _RemoveSerial->_i2c_writeNBytes
    _ShowVersion->_SetSegmentValue
    _SetSegmentValue->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ControlMotor->_VerifyElectricalBrake
    _ControlLights->_setRGB_ON
    _setRGB_ON->_RGB_Set
    _ControlCurrent->_getCurrentComparator
    _refreshCurrent->_sumHIST
    _refreshADCZeroOffset->___lwdiv
    _getCurrentComparator->___wmul
    _SaveNVM_VarSystem->_i2c_writeNBytes
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F523
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F500
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F511
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F535
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F517
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F523
    _wr2RegCompleteHandler@i2c1_master_example$F523->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F517->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F535->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F511->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F500->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ReadADC
    _refreshSegment->_Segments_Set
    _controlTimeslots->_decrementTimeslot
    _ReadADC->_ADCC_GetSingleConversion
    _TMR1_ISR->_controlMotorForce
    _controlMotorForce->i2_GetMotorPower
    _TMR0_ISR->_rxi

Critical Paths under _main in BANK0

    _main->_eusartparser
    _sm_execute_main->_sm_execute_menuConfiguration
    _sm_execute_menuConfiguration->_controlSelectRemote
    _setValueToEdit->_SaveNVM_VarSystem
    _controlSelectRemote->_validateRemoteSerialNumber
    _sm_execute_ControlGate->_actionZone_Opening
    _sm_execute_ControlLearning->_SaveNVM_VarSystem
    _actionZone_Opening->_setPositionInvertionInClosing
    _controlVelocity->_getStateOpenPosition
    _actionZone_Closing->_setPositionInvertionInClosing
    _readRFButtons->_keeloqDecryptPacket
    _keeloqDecryptPacket->_validateRemoteSerialNumber
    _DecryptPacket_12BIT->_validateRemoteSerialNumber
    _loadNVM_VarSystem->_SaveNVM_VarSystem
    _checkNVM_VarSystem->_SaveNVM_VarSystem
    _ResetDefaultMemory->_SaveNVM_VarSystem
    _eusartparser->_validateRemoteSerialNumber
    _ControlCounterMoves->_SaveNVM_VarSystem

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0 8513084
                                             27 BANK0      7     7      0
                _ControlCounterMoves
                     _ControlCurrent
                      _ControlInputs
                      _ControlLights
                       _ControlMotor
                _EUSART1_is_rx_ready
                       _InitReceiver
                  _SYSTEM_Initialize
                    _SetSegmentValue
                        _ShowVersion
                    _WWDT_SoftEnable
                    _WWDT_TimerClear
                    _controlVelocity
                       _eusartparser
                      _getKeyPressed
                  _loadNVM_VarSystem
                         _readInputs
                      _readRFButtons
                       _read_package
                         _readbutton
             _sm_execute_ControlGate
                    _sm_execute_main
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_execute_main                                      4     2      2 3267220
                                             21 BANK0      4     2      2
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                      _load_New_Menu
       _sm_execute_menuConfiguration
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_menuConfiguration                         4     2      2 3241796
                                             17 BANK0      4     2      2
                    _ClearFlag_rfCMD
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___lbdiv
                            ___lldiv
                             ___lmul
                            ___lwdiv
                  _controlLearnDigit
                  _controlSaveRemote
                _controlSelectRemote
                      _load_New_Menu
                     _setValueToEdit
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setValueToEdit                                       6     5      1  717511
                                             57 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                       _InitReceiver
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                      _load_New_Menu
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) _load_New_Menu                                        4     4      0    7093
                                             31 COMRAM     4     4      0
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
 ---------------------------------------------------------------------------------
 (4) _InitReceiver                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlSelectRemote                                  9     9      0 1775059
                                              8 BANK0      9     9      0
                    _ClearFlag_rfCMD
                       _RemoveSerial
                  _SaveNVM_VarSystem
                    _SetSegmentValue
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                   _cmdMemoryIsEmpty
                       _getSerialCmd
                      _getTypeRemote
                      _saveNewSerial
                      _sm_send_event
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (4) _getTypeRemote                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _getSerialCmd                                         2     1      1    6667
                                             26 COMRAM     2     1      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _controlSaveRemote                                    1     1      0   20456
                                             31 COMRAM     1     1      0
                    _ClearFlag_rfCMD
     _SetSegmentValueIntermitentMain
                _SetSegmentValueMain
                            ___awdiv
                            ___lbmod
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1    1223
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                             19 COMRAM     8     4      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueMain                                  2     1      1    2020
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _ClearFlag_rfCMD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _controlLearnDigit                                    0     0      0      22
               _SetSegmentValueLearn
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValueLearn                                 3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _sm_execute_ControlGate                               5     3      2  633789
                                             15 BANK0      5     3      2
                       _GetOpenOrder
         _SetSegmentValueIntermitent
                       _WaitPreFlash
                  _actionZone_Closed
                 _actionZone_Closing
                  _actionZone_Opened
                 _actionZone_Opening
         _sm_execute_ControlLearning
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_execute_ControlLearning                           5     3      2  372027
                                             57 COMRAM     1     1      0
                                              4 BANK0      4     2      2
                       _GetOpenOrder
                  _SaveNVM_VarSystem
                      _calculateMean
                 _clearLearningValue
               _generateErrorLearnig
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _generateErrorLearnig                                 0     0      0    2622
                            _sm_init
 ---------------------------------------------------------------------------------
 (1) _sm_init                                              5     0      5    2622
                                             17 COMRAM     5     0      5
                         _sm_restart
 ---------------------------------------------------------------------------------
 (2) _sm_restart                                           2     0      2     214
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _clearLearningValue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateMean                                       12     4      8    1241
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opening                                   3     3      0   52477
                                             12 BANK0      3     3      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
         _SetSegmentValueIntermitent
                          _StopOrder
                     _VerifyFollowMe
                    _controlVelocity
      _setPositionInvertionInClosing
      _setPositionInvertionInOpening
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInOpening                        8     8      0    1207
                                             49 COMRAM     8     8      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (3) _controlVelocity                                      1     1      0    3806
                                              2 BANK0      1     1      0
          _ControlDecelarationFactor
                       _InitSoftStop
               _getStateOpenPosition
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getStateOpenPosition                                11    11      0    2562
                                             49 COMRAM     9     9      0
                                              0 BANK0      2     2      0
                             ___lmul
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _InitSoftStop                                         1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (4) _ControlDecelarationFactor                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _actionZone_Opened                                    2     2      0   42796
                                             31 COMRAM     2     2      0
                         _CloseOrder
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                     _VerifyFollowMe
 ---------------------------------------------------------------------------------
 (3) _VerifyFollowMe                                       1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _CloseOrder                                           0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closing                                   2     2      0   58040
                                             49 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInClosing
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
         _SetSegmentValueIntermitent
                          _StopOrder
                             ___lmul
      _setPositionInvertionInClosing
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _setPositionInvertionInClosing                       12    12      0    1207
                                              0 BANK0     12    12      0
                _getTimeDecelaration
 ---------------------------------------------------------------------------------
 (4) _getTimeDecelaration                                  9     5      4    1207
                                             40 COMRAM     9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1176
                                             28 COMRAM    12     4      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _StopOrder                                            0     0      0   11256
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInClosing                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (2) _actionZone_Closed                                    2     2      0   65057
                                             31 COMRAM     2     2      0
                       _GetOpenOrder
          _GetSecurityStateInOpening
                   _InitFullAutoTime
                   _InitWalkAutoTime
                      _OpenFullOrder
                      _OpenWalkOrder
                       _WaitPreFlash
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _WaitPreFlash                                         0     0      0   22549
                   _InitFullAutoTime
                      _OpenFullOrder
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _OpenFullOrder                                        0     0      0   11293
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (3) _InitFullAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OpenWalkOrder                                        4     4      0   11389
                                             23 COMRAM     4     4      0
                      _InitSoftStart
                      _sm_send_event
 ---------------------------------------------------------------------------------
 (2) _sm_send_event                                        6     2      4   11256
                                             17 COMRAM     6     2      4
               _sm_get_current_state
 ---------------------------------------------------------------------------------
 (3) _sm_get_current_state                                 2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _InitSoftStart                                        1     1      0      37
                                             19 COMRAM     1     1      0
                      _GetMotorPower
 ---------------------------------------------------------------------------------
 (3) _InitWalkAutoTime                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetSecurityStateInOpening                            0     0      0    1893
         _SetSegmentValueIntermitent
 ---------------------------------------------------------------------------------
 (3) _SetSegmentValueIntermitent                           4     1      3    1893
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _GetOpenOrder                                         0     0      0    6454
     _SetSegmentValueIntermitentMain
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1    1861
                                             15 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _SetSegmentValueIntermitentMain                       4     1      3    4593
                                             27 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _readbutton                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_package                                        14     7      7     283
                                             16 COMRAM    14     7      7
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readRFButtons                                        0     0      0  740967
                _DecryptPacket_12BIT
                _keeloqDecryptPacket
 ---------------------------------------------------------------------------------
 (2) _keeloqDecryptPacket                                 10     6      4  384372
                                              8 BANK0     10     6      4
                             _DecCHK
                             _HopCHK
      _keeloq_classic_decrypt_packet
                             _memcpy
         _validateRemoteSerialNumber
               _verifyProgramingMode
 ---------------------------------------------------------------------------------
 (3) _verifyProgramingMode                                 3     1      2     152
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _keeloq_classic_decrypt_packet                        5     3      2   23218
                                             55 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                            _Decrypt
                       _NormalKeyGen
 ---------------------------------------------------------------------------------
 (4) _NormalKeyGen                                        18    16      2   15069
                                             37 COMRAM    18    16      2
                            _Decrypt
                      _LoadManufCode
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _LoadManufCode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Decrypt                                             11     9      2    7935
                                             26 COMRAM    11     9      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _HopCHK                                               4     2      2    3536
                                             35 COMRAM     4     2      2
                          _ReqResync
                         _getHopCode
 ---------------------------------------------------------------------------------
 (4) _getHopCode                                          14    12      2    3145
                                             21 COMRAM    14    12      2
                          _ReqResync
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _ReqResync                                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DecCHK                                               4     2      2     242
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DecryptPacket_12BIT                                  5     1      4  356595
                                              8 BANK0      5     1      4
                             _memcpy
         _validateRemoteSerialNumber
 ---------------------------------------------------------------------------------
 (1) _readInputs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loadNVM_VarSystem                                    0     0      0 1741500
             _I2C1_Read1ByteRegister
                 _ResetDefaultMemory
                  _SaveNVM_VarSystem
                 _checkNVM_VarSystem
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (2) _checkNVM_VarSystem                                   1     1      0  349391
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (3) _ResetDefaultMemory                                   1     1      0  349369
                                             57 COMRAM     1     1      0
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               3     2      1  345691
                                             33 COMRAM     3     2      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _getKeyPressed                                        1     1      0      24
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusartparser                                        26    25      1 1765094
                                              8 BANK0     19    18      1
                       _RemoveSerial
                  _SaveNVM_VarSystem
                   _cmdMemoryIsEmpty
                     _confirmpackage
                  _read_eusartparser
                      _saveNewSerial
         _validateRemoteSerialNumber
                 _write_eusartparser
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_eusartparser                                  19    12      7    1343
                                             15 COMRAM    19    12      7
 ---------------------------------------------------------------------------------
 (4) _validateRemoteSerialNumber                          21    14      7  349686
                                             45 COMRAM    13     6      7
                                              0 BANK0      8     8      0
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (4) _saveNewSerial                                        8     3      5  349630
                                             57 COMRAM     1     1      0
                                              0 BANK0      7     2      5
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _read_eusartparser                                    3     2      1    6822
                                             23 COMRAM     3     2      1
                      _write_package
 ---------------------------------------------------------------------------------
 (2) _write_package                                        7     0      7    4612
                                             16 COMRAM     7     0      7
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      44
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _confirmpackage                                       2     0      2    2554
                                             16 COMRAM     2     0      2
                       _init_package
 ---------------------------------------------------------------------------------
 (3) _init_package                                         1     0      1     142
                                             15 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _cmdMemoryIsEmpty                                     8     7      1  348961
                                             45 COMRAM     8     7      1
                  _i2c_readDataBlock
 ---------------------------------------------------------------------------------
 (5) _i2c_readDataBlock                                   12     6      6  347773
                                             33 COMRAM    12     6      6
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _RemoveSerial                                         8     7      1  349453
                                             57 COMRAM     1     0      1
                                              0 BANK0      7     7      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _WWDT_TimerClear                                      2     2      0      25
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WWDT_SoftEnable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowVersion                                          0     0      0     500
                    _SetSegmentValue
 ---------------------------------------------------------------------------------
 (4) _SetSegmentValue                                      2     1      1     500
                                             27 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             17 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlMotor                                         7     7      0     223
                                             17 COMRAM     7     7      0
              _VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (2) _VerifyElectricalBrake                                2     2      0     112
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ControlLights                                        0     0      0    1620
                   _setFlashLigth_ON
                          _setRGB_ON
 ---------------------------------------------------------------------------------
 (2) _setRGB_ON                                            5     3      2    1022
                                             16 COMRAM     5     3      2
                            _RGB_Set
 ---------------------------------------------------------------------------------
 (3) _RGB_Set                                              1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setFlashLigth_ON                                     2     0      2     598
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ControlInputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ControlCurrent                                       4     4      0    4118
                                             34 COMRAM     4     4      0
                      _GetMotorPower
               _getCurrentComparator
               _refreshADCZeroOffset
                     _refreshCurrent
 ---------------------------------------------------------------------------------
 (2) _refreshCurrent                                       0     0      0     576
                  _saveEnergyADCHist
                       _sumEnergyADC
                            _sumHIST
 ---------------------------------------------------------------------------------
 (3) _sumHIST                                             17    13      4     317
                                             15 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _sumEnergyADC                                         9     7      2     161
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _saveEnergyADCHist                                    2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _refreshADCZeroOffset                                 3     3      0     893
                                             22 COMRAM     3     3      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _getCurrentComparator                                13     9      4    2612
                                             21 COMRAM    13     9      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2519
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _GetMotorPower                                        4     4      0      37
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ControlCounterMoves                                  0     0      0  349276
                  _SaveNVM_VarSystem
 ---------------------------------------------------------------------------------
 (4) _SaveNVM_VarSystem                                    4     4      0  349276
                                              0 BANK0      4     4      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeNBytes                                     24    19      5  349112
                                             33 COMRAM    24    19      5
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6    6478
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetAddressNackCallback                          4     0      4    2859
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_Open                                            2     2      0      68
                                             15 COMRAM     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWrite                                     0     0      0  334109
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterOperation                                 2     2      0  334109
                                             31 COMRAM     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C1_Poller                                          0     0      0  334041
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterFsm                                       3     3      0  334041
                                             28 COMRAM     3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX_EMPTY                                    2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_TX                                          2     2      0   83518
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_SEND_ADR_READ                               0     0      0      31
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendTxData                               1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX                                          2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_DO_ADDRESS_NACK                                2     2      0   83487
                                             26 COMRAM     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler@i2c1_master_example$F523      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler@i2c1_master_example$F517      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler@i2c1_master_example$F535    2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             2     0      2    8343
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler@i2c1_master_example$F511      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler@i2c1_master_example$F500      2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               2     0      2    8312
                                             24 COMRAM     2     0      2
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetDataCompleteCallback                         4     0      4    4339
                                             20 COMRAM     4     0      4
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C1_SetCallback                                     5     1      4     997
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_SetBuffer                                       4     0      4    3942
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnStop                             2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _I2C1_CallbackReturnReset                            2     0      2     305
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Close                                           1     1      0      37
                                             15 COMRAM     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          6     6      0    2657
                                              9 COMRAM     6     6      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0    2292
                   Absolute function *
                            _ReadADC
       _TMR2_DefaultInterruptHandler *
                   _controlTimeslots
                     _refreshSegment
 ---------------------------------------------------------------------------------
 (16) _refreshSegment                                      0     0      0      22
                       _Segments_Set
 ---------------------------------------------------------------------------------
 (17) _Segments_Set                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _controlTimeslots                                    0     0      0    2248
                  _decrementTimeslot
 ---------------------------------------------------------------------------------
 (17) _decrementTimeslot                                   4     2      2    2248
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _ReadADC                                             3     3      0      22
                                              1 COMRAM     3     3      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (17) _ADCC_GetSingleConversion                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0     365
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _controlMotorForce
 ---------------------------------------------------------------------------------
 (16) _controlMotorForce                                   5     5      0     136
                                              4 COMRAM     5     5      0
                    i2_GetMotorPower
            i2_VerifyElectricalBrake
 ---------------------------------------------------------------------------------
 (17) i2_VerifyElectricalBrake                             2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (17) i2_GetMotorPower                                     4     4      0      24
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (16) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                                _rxi
 ---------------------------------------------------------------------------------
 (16) _rxi                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ControlCounterMoves
     _SaveNVM_VarSystem
       _i2c_writeNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
             _I2C1_Poller
               _I2C1_MasterFsm
                 _I2C1_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                     _I2C1_MasterEnableRestart
                   _I2C1_DO_SEND_STOP *
                     _I2C1_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                       _I2C1_SetCallback
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                     _I2C1_SetBuffer
                     _I2C1_SetDataCompleteCallback
                 _I2C1_DO_IDLE *
                 _I2C1_DO_RCEN *
                   _I2C1_MasterStartRx
                 _I2C1_DO_RESET *
                 _I2C1_DO_RX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_RX_NACK_RESTART *
                     _I2C1_MasterSendNack
                   _I2C1_DO_RX_NACK_STOP *
                     _I2C1_MasterSendNack
                   _I2C1_MasterGetRxData *
                   _I2C1_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_RX_ACK *
                   _I2C1_MasterSendAck
                 _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_DO_RX_NACK_STOP *
                 _I2C1_DO_SEND_ADR_READ *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_ADR_WRITE *
                   _I2C1_MasterSendTxData
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                 _I2C1_DO_TX *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterIsNack *
                   _I2C1_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C1_CallbackReturnReset *
                   _I2C1_CallbackReturnStop *
                   _I2C1_DO_SEND_RESTART *
                   _I2C1_DO_SEND_STOP *
                   _I2C1_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd1RegCompleteHandler@i2c1_master_example$F500 *
                   _rd2RegCompleteHandler *
                   _rd2RegCompleteHandler@i2c1_master_example$F511 *
                   _rdBlkRegCompleteHandler *
                   _rdBlkRegCompleteHandler@i2c1_master_example$F535 *
                   _wr1RegCompleteHandler *
                   _wr1RegCompleteHandler@i2c1_master_example$F517 *
                   _wr2RegCompleteHandler *
                   _wr2RegCompleteHandler@i2c1_master_example$F523 *
                 _I2C1_MasterClearIrq *
                 _I2C1_MasterIsNack *
               _I2C1_MasterWaitForEvent
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterOpen
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
         _memcpy
   _ControlCurrent
     _GetMotorPower
     _getCurrentComparator
       ___wmul
     _refreshADCZeroOffset
       ___lwdiv
     _refreshCurrent
       _saveEnergyADCHist
       _sumEnergyADC
       _sumHIST
   _ControlInputs
   _ControlLights
     _setFlashLigth_ON
     _setRGB_ON
       _RGB_Set
   _ControlMotor
     _VerifyElectricalBrake
   _EUSART1_is_rx_ready
   _InitReceiver
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WWDT_Initialize
   _SetSegmentValue
     ___awdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _ShowVersion
     _SetSegmentValue
   _WWDT_SoftEnable
   _WWDT_TimerClear
   _controlVelocity
     _ControlDecelarationFactor
     _InitSoftStop
       _GetMotorPower
     _getStateOpenPosition
       ___lmul
         ___lldiv (ARG)
       _getTimeDecelaration
         ___lmul
     _getTimeDecelaration
   _eusartparser
     _RemoveSerial
       _i2c_writeNBytes
     _SaveNVM_VarSystem
     _cmdMemoryIsEmpty
       _i2c_readDataBlock
         _I2C1_Close
         _I2C1_MasterWrite
         _I2C1_Open
         _I2C1_SetAddressNackCallback
         _I2C1_SetBuffer
         _I2C1_SetDataCompleteCallback
     _confirmpackage
       _init_package
     _read_eusartparser
       _write_package
         _EUSART1_Write
     _saveNewSerial
       _i2c_writeNBytes
     _validateRemoteSerialNumber
       _i2c_readDataBlock
     _write_eusartparser
     _write_package
   _getKeyPressed
   _loadNVM_VarSystem
     _I2C1_Read1ByteRegister
       _I2C1_Close
       _I2C1_MasterWrite
       _I2C1_Open
       _I2C1_SetAddressNackCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _ResetDefaultMemory
       _SaveNVM_VarSystem
     _SaveNVM_VarSystem
     _checkNVM_VarSystem
       _SaveNVM_VarSystem
     _i2c_readDataBlock
   _readInputs
   _readRFButtons
     _DecryptPacket_12BIT
       _memcpy
       _validateRemoteSerialNumber
     _keeloqDecryptPacket
       _DecCHK
       _HopCHK
         _ReqResync
         _getHopCode
           _ReqResync
           ___wmul
       _keeloq_classic_decrypt_packet
         _Decrypt
           _memcpy
         _NormalKeyGen
           _Decrypt
           _LoadManufCode
           _memcpy
       _memcpy
       _validateRemoteSerialNumber
       _verifyProgramingMode
   _read_package
     _EUSART1_Read
   _readbutton
   _sm_execute_ControlGate
     _GetOpenOrder
       _SetSegmentValueIntermitentMain
         ___awdiv (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbdiv
     _SetSegmentValueIntermitent
     _WaitPreFlash
       _InitFullAutoTime
       _OpenFullOrder
         _InitSoftStart
           _GetMotorPower
         _sm_send_event
           _sm_get_current_state
       _sm_send_event
     _actionZone_Closed
       _GetOpenOrder
       _GetSecurityStateInOpening
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
         _InitSoftStart
         _sm_send_event
       _WaitPreFlash
       _sm_send_event
     _actionZone_Closing
       _GetOpenOrder
       _GetSecurityStateInClosing
         _SetSegmentValueIntermitent
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _SetSegmentValueIntermitent
       _StopOrder
         _sm_send_event
       ___lmul
       _setPositionInvertionInClosing
         _getTimeDecelaration
       _sm_send_event
     _actionZone_Opened
       _CloseOrder
         _InitSoftStart
         _sm_send_event
       _GetOpenOrder
       _GetSecurityStateInClosing
       _InitFullAutoTime
       _InitWalkAutoTime
       _OpenFullOrder
       _OpenWalkOrder
       _VerifyFollowMe
     _actionZone_Opening
       _CloseOrder
       _GetOpenOrder
       _GetSecurityStateInClosing
       _GetSecurityStateInOpening
       _InitFullAutoTime
       _InitWalkAutoTime
       _SetSegmentValueIntermitent
       _StopOrder
       _VerifyFollowMe
       _controlVelocity
       _setPositionInvertionInClosing
       _setPositionInvertionInOpening
         _getTimeDecelaration
       _sm_send_event
     _sm_execute_ControlLearning
       _GetOpenOrder
       _SaveNVM_VarSystem
       _calculateMean
       _clearLearningValue
       _generateErrorLearnig
         _sm_init
           _sm_restart
       _sm_send_event
     _sm_send_event
   _sm_execute_main
     _SetSegmentValueIntermitentMain
     _SetSegmentValueMain
       ___awdiv (ARG)
       ___lbdiv (ARG)
       ___lbmod (ARG)
     _load_New_Menu
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
     _sm_execute_menuConfiguration
       _ClearFlag_rfCMD
       _ResetDefaultMemory
       _SaveNVM_VarSystem
       _SetSegmentValueIntermitentMain
       _SetSegmentValueMain
       ___lbdiv
       ___lldiv
       ___lmul
       ___lwdiv
       _controlLearnDigit
         _SetSegmentValueLearn
       _controlSaveRemote
         _ClearFlag_rfCMD
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _sm_send_event
       _controlSelectRemote
         _ClearFlag_rfCMD
         _RemoveSerial
         _SaveNVM_VarSystem
         _SetSegmentValue
         _SetSegmentValueIntermitentMain
         _SetSegmentValueMain
         ___awdiv
         ___lbmod
         _cmdMemoryIsEmpty
         _getSerialCmd
           _memcpy
         _getTypeRemote
         _saveNewSerial
         _sm_send_event
         _validateRemoteSerialNumber
       _load_New_Menu
       _setValueToEdit
         _InitReceiver
         _SaveNVM_VarSystem
         _cmdMemoryIsEmpty
         _load_New_Menu
         _sm_send_event
       _sm_send_event
     _sm_send_event
   _sm_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rxi *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _controlMotorForce *
       i2_GetMotorPower
       i2_VerifyElectricalBrake
   _TMR2_ISR *
     Absolute function(Fake) *
     _ReadADC *
       _ADCC_GetSingleConversion
     _TMR2_DefaultInterruptHandler *
     _controlTimeslots *
       _decrementTimeslot
     _refreshSegment *
       _Segments_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F3       9       94.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     22      9C       5       97.5%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4F       1       84.0%
BITBIGSFRllll       28      0       0      59        0.0%
BITBIGSFRhlllll     27      0       0      42        0.0%
BITBIGSFRhhllll     1B      0       0      37        0.0%
BITBIGSFRhhlh       1A      0       0      35        0.0%
BITBIGSFRhlllll     13      0       0      48        0.0%
BITBIGSFRhlllhh      F      0       0      41        0.0%
BITBIGSFRhlllll      E      0       0      46        0.0%
BITBIGSFRhhh         D      0       0      34        0.0%
BITBIGSFRhhllll      C      0       0      36        0.0%
BITBIGSFRllh         9      0       0      57        0.0%
BITBIGSFRhlllll      4      0       0      52        0.0%
BITBIGSFRhlllll      3      0       0      44        0.0%
BITBIGSFRhlllll      3      0       0      43        0.0%
BITBIGSFRhlllll      3      0       0      53        0.0%
BITBIGSFRhlllll      3      0       0      55        0.0%
BITBIGSFRhlllll      2      0       0      47        0.0%
BITBIGSFRhlllhh      2      0       0      40        0.0%
BITBIGSFRhlllll      2      0       0      49        0.0%
BITBIGSFRhlllll      2      0       0      54        0.0%
BITBIGSFRlh          2      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      58        0.0%
BITBIGSFRhlllll      1      0       0      45        0.0%
BITBIGSFRhlllll      1      0       0      50        0.0%
BITBIGSFRhlllll      1      0       0      51        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D5      60        0.0%
DATA                 0      0     3D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 15:29:52 2022

                                        ?_ClearFlag_rfCMD 0001  
                              cmdMemoryIsEmpty@tempSerial 0032  
                                           _Counterchoose 0092  
                        __end_of_TMR2_SetInterruptHandler 95EE  
                                _eusart1TxBufferRemaining 01FF  
                            SetSegmentValueIntermitent@d1 0013  
                            SetSegmentValueIntermitent@d2 0010  
                                    ??_checkNVM_VarSystem 003A  
                                            ___awdiv@sign 0019  
                                     ___wmul@multiplicand 0012  
                           __end_of_VerifyElectricalBrake 8104  
                                           _LoadManufCode 92F4  
                                        ?_SetSegmentValue 001C  
                                                     l100 8CCC  
                            ??_sm_execute_ControlLearning 00DE  
                                                     l674 7BD2  
                                                     l690 803A  
                                                     _GIE 007F97  
                                                     _Hop 007C  
                                   ?_I2C1_MasterOperation 0001  
                                         _timer1ReloadVal 02E3  
                                 keeloqDecryptPacket@data 00E0  
                                                     _rxi 4716  
                                  ControlMotor@stateMotor 0018  
                                         _TMR2_Initialize 8FDE  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                  ?_I2C1_MasterSendTxData 0001  
                                       load_New_Menu@Menu 0022  
                                    _I2C1_DO_RX_NACK_STOP 966A  
                               ?_I2C1_MasterEnableRestart 0001  
                                       _SaveNVM_VarSystem 8E2C  
                        validateRemoteSerialNumber@serial 002E  
                                    I2C1_SetBuffer@buffer 0010  
                                       getKeyPressed@temp 0010  
                                     eusartparser@package 00E0  
                                   getCurrentComparator@x 0022  
                                      ?_SaveNVM_VarSystem 0001  
                                 ??_rd2RegCompleteHandler 001B  
                                                    l2034 854E  
                                                    l1405 6478  
                                       readRFButtons@key1 0088  
                                                    l2039 855A  
                                                    l1512 5932  
                                                    l2410 3EA4  
                                                    l2306 5268  
                                                    l2235 73B4  
                                                    l2323 8100  
                                                    l1372 8BCA  
                                                    l1436 59AE  
                                                    l3060 26D2  
                                                    l1357 6E92  
                                                    l1366 7014  
                                                    l2502 7A58  
                                                    l2318 80F6  
                                                    l1383 5BB2  
                                                    l2511 8DCA  
                                                    l1519 597E  
                                                    l4200 8980  
                                                    l3048 2546  
                                                    l2249 6B7C  
                                                    l2514 8DF0  
                                                    l1490 5814  
                                                    l2371 4D56  
                                                    l1731 6CF2  
                                                    l3083 2718  
                                                    l1388 5C3A  
                                                    l2348 4D4A  
                                                    l1740 6D5E  
                                                    l1732 6CFA  
                                                    l1652 5F70  
                                                    l3228 1066  
                                                    l2365 4D42  
                                                    l1741 6D66  
                                                    l1486 8788  
                                                    l2438 4016  
                                                    l1734 6D16  
                                                    l1726 6CB8  
                                                    l1662 5FB8  
                                                    l2375 4E1A  
                                                    l1743 6D90  
                                                    l1735 6D1E  
                                                    l1727 6CC0  
                                                    l2472 412C  
                                                    l2392 4E12  
                                                    l3600 3366  
                                                    l1737 6D3A  
                                                    l1649 5EFA  
                                                    l3433 23C8  
                                                    l3353 1FA0  
                                                    l3097 27F2  
                                                    l3610 33A2  
                                                    l3602 336C  
                                                    l1738 6D42  
                                                    l2722 5294  
                                                    l3611 33A8  
                                                    l3507 8676  
                                                    l3620 33D0  
                                                    l3604 3376  
                                                    l2580 82D4  
                                                    l2724 52CA  
                                                    l3621 33D6  
                                                    l3613 33AE  
                                                    l3605 3380  
                                                    l2805 4714  
                                                    l2725 538A  
                                                    l2398 4E26  
                                                    l3614 33B4  
                                                    l3606 338A  
                                                    l1854 728E  
                                                    l2718 4BDE  
                                                    l3623 33DC  
                                                    l3607 3390  
                                                    l3375 209A  
                                                    l3367 2060  
                                                    l3624 33E2  
                                                    l3616 33BE  
                                                    l3608 3396  
                                                    l1864 72C2  
                                                    l1856 729E  
                                                    l2648 3CDE  
                                                    l3625 33E8  
                                                    l3609 339C  
                                                    l3385 21DE  
                                                    l3634 363E  
                                                    l3626 33EE  
                                                    l3618 33C4  
                                                    l3386 21FE  
                                                    l3635 3648  
                                                    l3619 33CA  
                                                    l2907 19FC  
                                                    l3483 760E  
                                                    l3629 34B8  
                                                    l2768 4530  
                                                    l3736 7E86  
                                                    l3489 8F2A  
                                                    l3597 3352  
                                                    l3599 335C  
                                                    ?_rxi 0001  
                                                    _DKEY 02D3  
                                                    _LATA 000F83  
                                                    _LATB 000F84  
                                                    _LATC 000F85  
                                                    _LATD 000F86  
                                                    _LATE 000F87  
                                             main@package 00F3  
                                                    _T2PR 000FBC  
                                                    _PMD0 000EE1  
                                                    _PMD1 000EE2  
                                                    _PMD2 000EE3  
                                                    _PMD3 000EE4  
                                                    _PMD4 000EE5  
                                                    _PMD5 000EE6  
                                                    _EHop 028E  
                                           eusartparser@i 00EC  
                                                    _WPUA 000F10  
                                                    _WPUB 000F18  
                                                    _WPUC 000F20  
                                                    _WPUD 000F25  
                                                    _WPUE 000F2D  
                                         __end_of_RGB_Set 95A6  
                                 ??_wr2RegCompleteHandler 001B  
                                                    _Bptr 008D  
                                        ??_I2C1_MasterFsm 001D  
                                           _EUSART1_Write 8CB6  
                               ??_I2C1_CallbackReturnStop 001B  
                                __end_of_controlTimeslots 5E62  
                                                    _main 6182  
                                           ?_EUSART1_Read 0001  
                                         ?_confirmpackage 0011  
                                                    _temp 0080  
                                                    fsr1h 000FE2  
                                                    fsr2h 000FDA  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                                    btemp 0050  
                                    saveNewSerial@cmdType 003A  
                                     ??_SaveNVM_VarSystem 003A  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 009C  
                                        ??_I2C1_SetBuffer 0014  
                                          ??_ControlMotor 0012  
                                         __end_of_Decrypt 731A  
                                ?i2_VerifyElectricalBrake 0001  
                                        getSerialCmd@temp 001C  
                                           ?_InitReceiver 0001  
                              ??_TMR1_SetInterruptHandler 0012  
                                            ___param_bank 000000  
                                         i2_GetMotorPower 73E0  
                                         __end_of_ReadADC 88E4  
                           I2C1_CallbackReturnStop@funPtr 0019  
                                         ??_getTypeRemote 0010  
                                                   ??_rxi 0001  
                                    __end_of_GetOpenOrder 57F2  
                                 __end_of_TMR0_Initialize 9338  
                                          ?_LoadManufCode 0001  
                          ??_TMR0_DefaultInterruptHandler 0001  
                                           ?_InitSoftStop 0001  
                           sm_execute_ControlLearning@psm 00DC  
                           __end_of_OSCILLATOR_Initialize 9514  
                      SetSegmentValueIntermitentMain@time 001D  
                                                   l20000 59BC  
                                                   l20020 5A76  
                                                   l20014 5A64  
                                                   l20006 5A00  
                                                   l20016 5A68  
                                                   l20034 5B1E  
                                                   l20026 5ABA  
                                                   l20202 6AC4  
                                                   l21010 206E  
                                                   l20036 5B22  
                                                   l20300 42EC  
                                                   l21012 2076  
                                                   l20054 7EE6  
                                                   l20062 7984  
                                                   l20046 8312  
                                                   l20150 6628  
                                                   l20310 4384  
                                                   l20302 431A  
                                                   l21110 224E  
                                                   l21102 2218  
                                                   l21022 208A  
                                                   l21014 207E  
                                                   l21006 2012  
                                                   l20072 79C6  
                                                   l20064 79B6  
                                                   l20144 65D6  
                                                   l20208 6B18  
                                                   l20312 439E  
                                                   l20304 4336  
                                                   l21112 226A  
                                                   l21104 2242  
                                                   l20170 66D4  
                                                   l20402 5664  
                                                   l20322 4422  
                                                   l20306 4352  
                                                   l21122 2298  
                                                   l21106 2246  
                                                   l21042 20B2  
                                                   l21034 20A2  
                                                   l12260 8CB8  
                                                   l20164 66BE  
                                                   l20500 5762  
                                                   l20420 56A2  
                                                   l20092 8A56  
                                                   l20308 436A  
                                                   l20316 43B0  
                                                   l20260 41B4  
                                                   l21212 239C  
                                                   l21204 2398  
                                                   l21140 22D4  
                                                   l21132 22AC  
                                                   l21116 2284  
                                                   l21052 210C  
                                                   l20350 8E20  
                                                   l20342 8E0A  
                                                   l22014 52FE  
                                                   l14110 7E38  
                                                   l12510 6EF8  
                                                   l12502 6EDA  
                                                   l20094 8A70  
                                                   l20326 445E  
                                                   l20318 4414  
                                                   l21150 22FC  
                                                   l21126 22A0  
                                                   l21118 228E  
                                                   l21062 211C  
                                                   l20512 57AE  
                                                   l20432 56CA  
                                                   l20408 5668  
                                                   l22104 5428  
                                                   l22024 5322  
                                                   l14112 7E44  
                                                   l20096 8A74  
                                                   l20272 41D4  
                                                   l20264 41BE  
                                                   l21232 23F4  
                                                   l21240 2420  
                                                   l21152 2300  
                                                   l21144 22DC  
                                                   l21128 22A4  
                                                   l21072 21A4  
                                                   l21064 216A  
                                                   l21048 20FA  
                                                   l12274 8CEC  
                                                   l20338 8E04  
                                                   l20354 8E28  
                                                   l20426 56A6  
                                                   l20442 56CE  
                                                   l22202 4620  
                                                   l22130 44B0  
                                                   l22034 5340  
                                                   l20194 6A86  
                                                   l14122 7E78  
                                                   l12522 6F28  
                                                   l12514 6F04  
                                                   l12506 6EEC  
                                                   l20290 4248  
                                                   l20266 41C4  
                                                   l21218 23BA  
                                                   l21162 2322  
                                                   l21146 22F8  
                                                   l21138 22D0  
                                                   l21250 2448  
                                                   l14132 894E  
                                                   l12276 8CF0  
                                                   l20372 60E6  
                                                   l20364 6072  
                                                   l20524 57EE  
                                                   l20516 57B2  
                                                   l20540 779A  
                                                   l20612 7726  
                                                   l22212 463C  
                                                   l22132 44C6  
                                                   l22108 5434  
                                                   l22060 5386  
                                                   l22044 535E  
                                                   l22036 5348  
                                                   l22028 532C  
                                                   l12540 6F68  
                                                   l12532 6F50  
                                                   l12516 6F0E  
                                                   l20292 4274  
                                                   l20284 4216  
                                                   l21228 23E2  
                                                   l21172 2332  
                                                   l21164 2326  
                                                   l21156 2304  
                                                   l21252 249A  
                                                   l14134 8956  
                                                   l15006 7A54  
                                                   l22230 4676  
                                                   l22206 4628  
                                                   l22214 4642  
                                                   l22054 5370  
                                                   l21502 3AA4  
                                                   l21414 3856  
                                                   l21406 37FA  
                                                   l20294 4290  
                                                   l20278 4206  
                                                   l21238 2404  
                                                   l21166 232A  
                                                   l14144 8976  
                                                   l23032 6352  
                                                   l20368 60AE  
                                                   l23112 679E  
                                                   l20480 5734  
                                                   l20464 5702  
                                                   l20560 77CC  
                                                   l22224 4666  
                                                   l22144 451E  
                                                   l20720 509C  
                                                   l22304 18F0  
                                                   l12536 6F5C  
                                                   l12528 6F42  
                                                   l12544 6F72  
                                                   l12720 7D50  
                                                   l12712 7D32  
                                                   l21440 394A  
                                                   l21416 388E  
                                                   l21408 37FC  
                                                   l20296 42B4  
                                                   l21192 2370  
                                                   l21184 2366  
                                                   l21168 232E  
                                                   l23008 1840  
                                                   l23050 63C4  
                                                   l23210 2EC0  
                                                   l20386 6174  
                                                   l21610 58B4  
                                                   l21602 5898  
                                                   l14250 8B96  
                                                   l20458 56FA  
                                                   l20546 779E  
                                                   l22242 4688  
                                                   l22090 53F8  
                                                   l20810 5206  
                                                   l20714 5082  
                                                   l12490 6EA6  
                                                   l12730 7D70  
                                                   l12706 7D22  
                                                   l21530 75CE  
                                                   l21450 3984  
                                                   l21418 3894  
                                                   l20298 42D0  
                                                   l21178 235C  
                                                   l23052 63C8  
                                                   l23300 3088  
                                                   l23212 2ECC  
                                                   l21540 86DA  
                                                   l20652 7C4A  
                                                   l21700 5592  
                                                   l23140 5E86  
                                                   l20628 775C  
                                                   l22244 468C  
                                                   l22228 466E  
                                                   l22164 4596  
                                                   l22068 53A4  
                                                   l20708 5070  
                                                   l22324 195E  
                                                   l22316 1938  
                                                   l22308 1914  
                                                   l14092 8F24  
                                                   l21508 3ABA  
                                                   l21436 3910  
                                                   l12830 7B34  
                                                   l23222 2F08  
                                                   l23214 2EE8  
                                                   l23206 2EB2  
                                                   l21550 8722  
                                                   l21630 58FA  
                                                   l21622 58DE  
                                                   l21614 58C2  
                                                   l21606 58A6  
                                                   l20638 8EC6  
                                                   l21710 55D8  
                                                   l20486 573C  
                                                   l22246 4692  
                                                   l22078 53CA  
                                                   l20902 718E  
                                                   l22422 1B6A  
                                                   l12718 7D48  
                                                   l12734 7D7A  
                                                   l21198 238E  
                                                   l23064 63FC  
                                                   l23400 32C2  
                                                   l23232 2F2E  
                                                   l23240 2F5C  
                                                   l20664 7C6A  
                                                   l20656 7C4E  
                                                   l20576 7802  
                                                   l20592 76F4  
                                                   l22280 46FC  
                                                   l22264 46CA  
                                                   l22256 46B0  
                                                   l22184 45E2  
                                                   l20816 522A  
                                                   l20744 5128  
                                                   l20912 7202  
                                                   l22424 1B74  
                                                   l22352 19DA  
                                                   l22344 19B2  
                                                   l22336 199A  
                                                   l22328 1978  
                                                   l12496 6EC0  
                                                   l21480 3A18  
                                                   l21448 3970  
                                                   l12842 91F6  
                                                   l12826 7AF2  
                                                   l23066 6412  
                                                   l23306 3092  
                                                   l23234 2F42  
                                                   l21650 5946  
                                                   l21642 5924  
                                                   l21634 5908  
                                                   l21626 58EC  
                                                   l21618 58D0  
                                                   l21570 5828  
                                                   l21562 5806  
                                                   l23170 5F2E  
                                                   l23162 5F00  
                                                   l20826 5254  
                                                   l20818 5230  
                                                   l20754 5146  
                                                   l22610 1F06  
                                                   l22530 1D80  
                                                   l22418 1B5C  
                                                   l22362 19FE  
                                                   l12738 7D88  
                                                   l12770 91A0  
                                                   l12860 7048  
                                                   l23340 31BA  
                                                   l23324 30FC  
                                                   l23316 30EE  
                                                   l23308 309C  
                                                   l23260 2FC4  
                                                   l23252 2F76  
                                                   l23228 2F1E  
                                                   l20692 8E94  
                                                   l20684 8E7C  
                                                   l20932 68CC  
                                                   l22196 4606  
                                                   l20908 71C8  
                                                   l21820 49C6  
                                                   l22604 1EF0  
                                                   l22516 1D50  
                                                   l22620 1F54  
                                                   l22364 1A3E  
                                                   l21396 37D8  
                                                   l14710 5B46  
                                                   l12854 6FB0  
                                                   l14702 8BBE  
                                                   l17006 6A48  
                                                   l16310 2A78  
                                                   l16302 2A4A  
                                                   l23334 3146  
                                                   l23318 30F2  
                                                   l23270 2FD2  
                                                   l23262 2FC8  
                                                   l21662 5970  
                                                   l21654 5954  
                                                   l21638 5916  
                                                   l21590 586E  
                                                   l21582 5852  
                                                   l21574 5836  
                                                   l21726 5604  
                                                   l23174 5F54  
                                                   l20870 8396  
                                                   l20838 8298  
                                                   l20598 76F8  
                                                   l20926 6888  
                                                   l20918 683C  
                                                   l21822 49DC  
                                                   l20950 857A  
                                                   l22446 1BE4  
                                                   l22390 1AF0  
                                                   l22382 1AB2  
                                                   l22366 1A54  
                                                   l14720 5B7C  
                                                   l16400 2CE0  
                                                   l23352 321E  
                                                   l23280 301E  
                                                   l23256 2FA2  
                                                   l23408 32EE  
                                                   l23192 5FD4  
                                                   l23176 5F5A  
                                                   l20872 83A2  
                                                   l20768 5174  
                                                   l21904 4B2A  
                                                   l20952 85AC  
                                                   l22384 1AD0  
                                                   l22296 18BE  
                                                   l22288 188E  
                                                   l20960 1FAA  
                                                   l22800 1360  
                                                   l22640 0F44  
                                                   l23512 2642  
                                                   l23432 250C  
                                                   l23424 24CA  
                                                   l14730 5C20  
                                                   l14714 5B5C  
                                                   l16410 2D52  
                                                   l16330 2AC8  
                                                   l16322 2AA8  
                                                   l16314 2A88  
                                                   l16306 2A68  
                                                   l23370 3262  
                                                   l23362 3256  
                                                   l23346 31F6  
                                                   l23290 3032  
                                                   l23274 2FF8  
                                                   l21658 5962  
                                                   l21594 587C  
                                                   l21586 5860  
                                                   l21578 5844  
                                                   l21682 550A  
                                                   l23194 5FDC  
                                                   l17026 89AC  
                                                   l21770 7648  
                                                   l21906 4B30  
                                                   l22570 1E76  
                                                   l22546 1DEC  
                                                   l22538 1D9E  
                                                   l22490 1CE0  
                                                   l22458 1C3A  
                                                   l12778 91B8  
                                                   l20962 1FB2  
                                                   l22730 11DC  
                                                   l23522 266E  
                                                   l23506 262A  
                                                   l23418 24A2  
                                                   l23442 2548  
                                                   l16404 2CF4  
                                                   l23372 3266  
                                                   l23356 323E  
                                                   l23348 3202  
                                                   l21692 557E  
                                                   l20876 83AA  
                                                   l21772 765E  
                                                   l20788 51D6  
                                                   l20796 51F4  
                                                   l21940 4B76  
                                                   l21836 4A0A  
                                                   l22572 1E80  
                                                   l20980 1FEE  
                                                   l20964 1FBA  
                                                   l22740 11FA  
                                                   l22724 11AA  
                                                   l22708 112A  
                                                   l22652 0FAA  
                                                   l22644 0F66  
                                                   l22636 0F24  
                                                   l23452 259C  
                                                   l23436 252E  
                                                   l23428 24EC  
                                                   l23444 2574  
                                                   l14734 5C4A  
                                                   l14670 6E1C  
                                                   l14654 6DC0  
                                                   l17310 4C34  
                                                   l17302 4C18  
                                                   l16350 2B26  
                                                   l16342 2B06  
                                                   l16334 2AD8  
                                                   l16326 2AB8  
                                                   l16318 2A98  
                                                   l16430 346A  
                                                   l23390 32B4  
                                                   l23278 301A  
                                                   l21598 588A  
                                                   l21694 558E  
                                                   l21678 5500  
                                                   l23198 5FE8  
                                                   l21950 4B92  
                                                   l21942 4B7A  
                                                   l21926 4B4A  
                                                   l21870 4ABA  
                                                   l22478 1C8A  
                                                   l20974 1FD6  
                                                   l20966 1FC2  
                                                   l22830 1412  
                                                   l22726 11AC  
                                                   l22718 1190  
                                                   l23606 27AE  
                                                   l23542 26C8  
                                                   l23518 265C  
                                                   l23446 258A  
                                                   l17312 4C3A  
                                                   l16432 34BE  
                                                   l23368 325A  
                                                   l23288 3028  
                                                   l21792 769A  
                                                   l21944 4B80  
                                                   l21856 4A7A  
                                                   l22592 1ED8  
                                                   l20976 1FDE  
                                                   l22904 15D0  
                                                   l22832 1416  
                                                   l22816 13CC  
                                                   l22744 1226  
                                                   l22728 11D6  
                                                   l22680 101E  
                                                   l22672 0FFC  
                                                   l22664 0FE4  
                                                   l22656 0FCC  
                                                   l22648 0F88  
                                                   l23712 294E  
                                                   l23544 26D4  
                                                   l23536 26A8  
                                                   l14738 5C6C  
                                                   l14674 6E28  
                                                   l16370 2B76  
                                                   l16362 2B56  
                                                   l16354 2B36  
                                                   l16346 2B16  
                                                   l16338 2AF6  
                                                   l16290 29FE  
                                                   l16282 29AA  
                                                   l16418 2DB0  
                                                   l16434 3530  
                                                   l16450 3652  
                                                   l23386 3294  
                                                   l23298 3084  
                                                   l21786 7690  
                                                   l21962 4BBC  
                                                   l23802 3CA0  
                                                   l20978 1FE6  
                                                   l22834 1422  
                                                   l22762 12B6  
                                                   l23626 27E2  
                                                   l23618 27C4  
                                                   l23546 26E2  
                                                   l23466 25D8  
                                                   l23458 25BC  
                                                   l23722 297A  
                                                   l14668 6E14  
                                                   l17500 40B8  
                                                   l17420 3F2A  
                                                   l16380 2BF2  
                                                   l16284 29C6  
                                                   l16436 357E  
                                                   l16428 33F8  
                                                   l21876 4AD2  
                                                   l23812 3CE0  
                                                   l20996 2006  
                                                   l20988 1FFA  
                                                   l22916 160A  
                                                   l23716 2962  
                                                   l23652 283A  
                                                   l23556 2708  
                                                   l23476 25E6  
                                                   l14686 6E4E  
                                                   l17510 40EE  
                                                   l17430 3F66  
                                                   l17270 8516  
                                                   l16390 2C6E  
                                                   l16374 2B94  
                                                   l16366 2B66  
                                                   l16358 2B46  
                                                   l16294 2A0E  
                                                   l16286 29E0  
                                                   l16438 35F0  
                                                   l23398 32BE  
                                                   l21982 5284  
                                                   l23750 3B84  
                                                   l23814 3D20  
                                                   l23742 3B4A  
                                                   l22942 1688  
                                                   l22934 1666  
                                                   l22766 12D8  
                                                   l22694 1068  
                                                   l23718 296E  
                                                   l23662 285C  
                                                   l17432 3F74  
                                                   l17424 3F3E  
                                                   l17408 3EF0  
                                                   l17352 4D32  
                                                   l17328 4C86  
                                                   l16384 2C10  
                                                   l21888 4AF6  
                                                   l23816 3D36  
                                                   l22928 164E  
                                                   l22864 14D0  
                                                   l22856 147C  
                                                   l22848 145E  
                                                   l22792 1344  
                                                   l22784 1328  
                                                   l22688 1044  
                                                   l22696 10AC  
                                                   l23648 282A  
                                                   l23592 278A  
                                                   l23584 2770  
                                                   l23496 261A  
                                                   l23488 25FC  
                                                   l17522 4130  
                                                   l17506 40DA  
                                                   l14962 80EC  
                                                   l17354 4D36  
                                                   l17274 8528  
                                                   l16466 8AB2  
                                                   l16298 2A2C  
                                                   l23770 3BDE  
                                                   l23746 3B6C  
                                                   l23738 3B3C  
                                                   l22962 16CE  
                                                   l22946 1694  
                                                   l22858 147E  
                                                   l22698 10C2  
                                                   l23578 2752  
                                                   l14972 8DCC  
                                                   l17532 416C  
                                                   l17452 3FD2  
                                                   l17436 3F8A  
                                                   l14956 80D0  
                                                   l17380 4E02  
                                                   l17356 4D44  
                                                   l16396 2CCC  
                                                   l23860 3E06  
                                                   l22964 16D6  
                                                   l22956 16BC  
                                                   l22884 1562  
                                                   l22868 14F2  
                                                   l23668 2880  
                                                   l23940 626C  
                                                   l23916 61C8  
                                                   l14990 79F8  
                                                   l17526 4148  
                                                   l17454 3FE2  
                                                   l17438 3F98  
                                                   l17390 3E86  
                                                   l17382 4E06  
                                                   l17358 4D5A  
                                                   l17278 853C  
                                                   l23862 3E0A  
                                                   l23838 3DA0  
                                                   l23774 3C00  
                                                   l23758 3BA6  
                                                   l22990 17F4  
                                                   l22974 1710  
                                                   l23694 28EE  
                                                   l23926 61DE  
                                                   l14984 79E0  
                                                   l17528 4156  
                                                   l17384 4E14  
                                                   l17296 4C08  
                                                   l23872 3E22  
                                                   l23864 3E16  
                                                   l22992 17FA  
                                                   l22984 17DE  
                                                   l22888 1584  
                                                   l23696 2902  
                                                   l14986 79E8  
                                                   l14994 7A00  
                                                   l17538 4186  
                                                   l17490 4094  
                                                   l17458 3FF8  
                                                   l17466 4022  
                                                   l16770 94B2  
                                                   l16850 844A  
                                                   l23858 3E00  
                                                   l23786 3C3C  
                                                   l23946 6292  
                                                   l14988 79F0  
                                                   l14996 7A28  
                                                   l17484 406E  
                                                   l17396 3EA6  
                                                   l23868 3E1C  
                                                   l22988 17EE  
                                                   l23956 62B0  
                                                   l17494 40A8  
                                                   l23878 3E30  
                                                   l23798 3C7E  
                                                   l19344 83F0  
                                                   l16952 697A  
                                                   l17488 4086  
                                                   l16848 8446  
                                                   l19602 85C2  
                                                   l16938 6D8A  
                                                   l16890 6CDC  
                                                   l16866 847E  
                                                   l16858 8468  
                                                   l19612 85D0  
                                                   l19540 7B8A  
                                                   l19532 7B7E  
                                                   l16892 6CE6  
                                                   l16876 6CA2  
                                                   l16868 8482  
                                    write_package@package 0011  
                                   _eusart1RxStatusBuffer 0274  
                                                   l19606 85C8  
                                                   l19710 9032  
                                                   l16982 69E8  
                                                   l16966 69AE  
                                                   l16878 6CAC  
                                                   l19536 7B84  
                                                   l19704 9026  
                                                   l16992 6A14  
                                                   l19618 85D6  
                                                   l19554 7BFA  
                                                   l19546 7B90  
                                                   l19642 8ACE  
                                                   l19580 8044  
                                                   l19652 8ADA  
                                                   l19646 8AD4  
                                                   l19806 736A  
                                                   l19576 803E  
                                                   l19808 7376  
                                                   l19904 728A  
                                                   l19840 8848  
                                                   l19586 804A  
                                                   l19674 958A  
                                                   l19818 73A4  
                                                   l19914 729A  
                                                   l19668 88FC  
                                                   l19860 824C  
                                                   l19852 8210  
                                                   l19828 73D6  
                                                   l19844 885C  
                                                   l19678 9592  
                                                   l19758 7E12  
                                                   l19926 72BA  
                                                   l19918 72A6  
                                                   l19950 70CE  
                                                   l19784 8C42  
                                                   l19792 8C62  
                                                   l19778 9356  
                                                   l19866 818E  
                                                   l19962 713E  
                                                   l19954 70FA  
                                                   l19876 81D8  
                                                   l19798 732E  
                                                   l19990 8C1A  
                                                   l19896 7270  
                                                   l19984 86BC  
                                                   l19998 59B6  
                                                   _ADACQ 000F5C  
                                       __end_of_I2C1_Open 7E16  
                                                   _ADCAP 000F5D  
                                                   _ADACT 000F56  
                                   __end_of_saveNewSerial 8346  
                                                   ?_main 0001  
                                                   _ADCLK 000F57  
                                                   _ADCNT 000F67  
                                                   _ADPCH 000F5F  
                                                   _ADREF 000F58  
                                         __end_of___awdiv 7D92  
                          ?_keeloq_classic_decrypt_packet 0038  
                                         __end_of___lbdiv 8E2C  
                                                   _ADPRE 000F5E  
                                                   _ADRPT 000F66  
                                         __end_of___lbmod 91C0  
                                            _zeroCrossing 0193  
                                         __end_of___lldiv 7E98  
                                                   _T1CLK 000FD2  
                                                   u21010 40A4  
                                                   u21100 4116  
                                         ___awdiv@divisor 0016  
                                                   u21110 411E  
                                                   _T1CON 000FCF  
                                                   u21060 40EA  
                                                   u20500 4CEA  
                                                   u20420 4CA8  
                                                   u20180 8504  
                                                   u12340 7D54  
                                                   u21150 417A  
                                                   u20350 4C62  
                                                   u20600 4D8C  
                                                   u20440 4CB4  
                                                   u20360 4C70  
                                                   _T2CON 000FBD  
                                                   u20370 4C80  
                                                   u20371 4C7E  
                                                   u20620 4D96  
                                                   u20460 4CBE  
                                                   u23100 66B6  
                                                   u15030 5B3C  
                                                   u20710 3EB8  
                                                   u20390 4C94  
                                                   u23110 6A82  
                                                   u15040 5B54  
                                                   u20800 3F56  
                                                   u20720 3EC6  
                                                   u20640 4DBA  
                                                   u20560 4D76  
                                                   u20480 4CC8  
                                                   u20730 3ED6  
                                                   u23210 8B20  
                                                   u20580 4D82  
                                                   u24020 5190  
                                                   u15070 5B98  
                                                   u24110 5216  
                                                   u24030 51A0  
                                                   u22600 7392  
                                                   u15080 5BAA  
                                                   u23320 8E0E  
                                                   u24040 51A8  
                                                   u22370 95CA  
                                                   u20930 4038  
                                                   u25010 593E  
                                                   u24210 8370  
                                                   u23170 6B26  
                                                   u24130 523E  
                                                   u22428 8056  
                                                   u22620 73B0  
                                                   u20780 3F3A  
                                                   u23420 5640  
                                                   u13900 8F0C  
                                                   _T2HLT 000FBE  
                                                   u22429 8068  
                                                   u22438 85E2  
                                                   u22630 73C4  
                                                   u20870 3FC2  
                                                   u22439 85F4  
                                                   u22448 8AE6  
                                                   u22640 73D2  
                                                   u15600 8DDC  
                                                   u20960 4050  
                                                   u25120 55A2  
                                                   u24400 3788  
                                                   u22449 8AF8  
                                                   u22570 7348  
                                                   u15530 80B0  
                                                   u23450 569E  
                                                   u24170 8286  
                                                   u13940 7E48  
                                                   u24500 38CE  
                                                   u22398 7B9C  
                                                   u22590 7384  
                                                   u24190 82A8  
                                                   u25230 766C  
                                                   u22399 7BAE  
                                                   u22488 8920  
                                                   u15640 7A38  
                                                   u26200 4614  
                                                   u26120 45AA  
                                                   u26040 5452  
                                                   u25320 49F2  
                                                   u22489 8932  
                                                   u22825 70DA  
                                                   u26041 5450  
                                                   u13970 895A  
                                                   u15570 80E6  
                                                   u25410 4AA6  
                                                   u24450 3814  
                                                   u22860 8662  
                                                   u26300 46C0  
                                                   u26140 45BE  
                                                   u24620 39EA  
                                                   u24380 23EE  
                                                   u22845 714A  
                                                   u14950 6DB4  
                                                   u15590 8DC6  
                                                   u26230 465A  
                                                   u23910 50E2  
                                                   u25510 4B5E  
                                                   u27110 1F04  
                                                   u27030 1E06  
                                                   u24390 3782  
                                                   u23815 87D0  
                                                   u24800 5820  
                                                   u23920 50F2  
                                                   u25600 4BD4  
                                                   u25440 4AE0  
                                                   u27120 1F20  
                                                   u27040 1E0C  
                                                   u18401 2CBE  
                                                   u27121 1F1E  
                                                   u22890 86B4  
                                                   u26170 45F0  
                                                   u26090 44E4  
                                                   u23930 50FA  
                                                   u25370 4A30  
                                                   u27130 1F2E  
                                                   u24730 756C  
                                                   u18411 2D16  
                                                   u28020 8740  
                                                   u23780 7C7A  
                                                   u23860 508E  
                                                   u26420 18E4  
                                                   u24660 3A8C  
                                                   u18421 2D44  
                                                   u18341 29D2  
                                                   u28030 8772  
                                                   u26270 46A0  
                                                   u26190 45FC  
                                                   u25470 4B04  
                                                   u25390 4A92  
                                                   u24590 39B0  
                                                   u18431 2D74  
                                                   u18351 2BB6  
                                                   u27080 1EEA  
                                                   u18441 2DA2  
                                                   u18361 2BE4  
                                                   u28130 5F20  
                                                   u19330 8460  
                                                   u23970 5156  
                                                   u23890 50D2  
                                                   u26610 1A8E  
                                                   u27410 128A  
                                                   u29010 2802  
                                         __end_of___lwdiv 898A  
                                                   u18371 2C32  
                                                   u23971 5154  
                                                   u29011 2800  
                                                   u18460 9584  
                                                   u28220 5FB8  
                                                   u28140 5F2E  
                                                   u25820 533C  
                                                   u26700 1B64  
                                                   u27420 12E6  
                                                   u18381 2C60  
                                                   u27405 1274  
                                                   u25750 52F8  
                                                   u26390 18B2  
                                                   u27430 12EC  
                                                   u27270 105A  
                                                   u18391 2C90  
                                                   u27415 1286  
                                                   u28160 5F54  
                                                   u26800 1C64  
                                                   u26720 1B88  
                                                   u27600 14A4  
                                                   u28321 2F4E  
                                                   u26801 1C62  
                                                   u19610 6996  
                                                   u28170 5F68  
                                                   u26730 1B90  
                                                   u26650 1B0C  
                                                   u27450 1336  
                                                   u28411 30E2  
                                                   u19700 69DA  
                                                   u19540 6962  
                                                   u28500 3248  
                                                   u25940 53D8  
                                                   u26900 1D2E  
                                                   u26820 1CA8  
                                                   u26740 1BAA  
                                                   u26660 1B14  
                                                   u29300 3B60  
                                                   u27460 133C  
                                                   u29220 291A  
                                                   u29140 28AE  
                                                   u29060 2848  
                                                   u26901 1D2C  
                                                   u26821 1CA6  
                                                   u26741 1BA8  
                                                   u27605 14A0  
                                                   u19630 69A2  
                                                   u25790 531C  
                                                   u26830 1CB6  
                                                   u26670 1B2E  
                                                   u27710 1630  
                                                   u27550 1430  
                                                   u27470 1352  
                                                   u28271 2EDA  
                                                   u26671 1B2C  
                                                   u27471 1350  
                                                   u19560 696E  
                                                   u26760 1C02  
                                                   u29320 3B9A  
                                                   u27800 16E6  
                                                   u27720 1644  
                                                   u27640 1536  
                                                   u27560 1436  
                                                   u28441 3132  
                                                   u26761 1C00  
                                                   u27801 16E4  
                                                   u26930 1D62  
                                                   u26770 1C10  
                                                   u29250 2932  
                                                   u28291 2EFA  
                                                   u27635 1520  
                                                   u19740 6A0A  
                                                   u25980 5408  
                                                   u27740 165E  
                                                   u29180 28CC  
                                                   _T2TMR 000FBB  
                                                   u28381 3078  
                                                   u27725 1640  
                                                   u27645 1532  
                                                   u19830 6A58  
                                                   u26950 1D6E  
                                                   u26790 1C4A  
                                                   u29350 3BD2  
                                                   u27670 15E0  
                                                   u27920 63E0  
                                                   u19840 6A60  
                                                   u26880 1D04  
                                                   u29520 3D90  
                                                   u27680 15E6  
                                                   u28560 24BE  
                                                   u18865 93B0  
                                                   u28481 3210  
                                                   u19850 6A68  
                                                   u19770 6A22  
                                                   u18866 93B2  
                                                   u26970 1D9C  
                                                   u26890 1D0A  
                                                   u29370 3BF4  
                                                   u27690 161A  
                                                   _T2RST 000FC0  
                                                   u27691 1618  
                                                   u27595 148E  
                                                   u19860 8994  
                                                   u26980 1DB8  
                                                   u28900 2740  
                                                   u26981 1DB6  
                                                   u27950 6434  
                                                   u27870 638E  
                                                   u26990 1DC6  
                                                   u28830 2702  
                                                   u28590 2522  
                                                   u29607 81E8  
                                                   u19871 89A2  
                                                   u27960 6442  
                                                   u29480 3D52  
                                                   u29617 825C  
                                                   u29561 6280  
                                                   i2l106 8EF6  
                                                   u27890 63A6  
                                                   u28770 267E  
                                                   u27980 645C  
                                                   u28790 26B6  
                                                   u28880 2730  
                                                   i2l870 004C  
                                                   i2l872 006A  
                                                   i2l873 0080  
                                                   i2l874 0076  
                                                   i2l867 0030  
                                         ___awdiv@counter 0018  
                                              _CloseOrder 9212  
                              __end_of_i2c1_fsmStateTable 0F21  
                                                   _OSCEN 000EDC  
                                                   _TMR0H 000FD4  
                                                   _TMR1H 000FCE  
                                                   _TMR0L 000FD3  
                                                   _TMR1L 000FCD  
                                                   _RFBit 0089  
                                                   _PORTB 000F8E  
                               __end_of_SaveNVM_VarSystem 8E64  
                          DecryptPacket_12BIT@commandType 00E4  
                                                   _TRISA 000F88  
                                                   _TRISB 000F89  
                                                   _TRISC 000F8A  
                                                   _TRISD 000F8B  
                                                   _TRISE 000F8C  
                                  ??_I2C1_MasterGetRxData 0010  
                                   ?_I2C1_DO_RX_NACK_STOP 0001  
                             validateRemoteSerialNumber@i 003A  
                             validateRemoteSerialNumber@j 0039  
                                     ___lmul@multiplicand 0021  
                               ?_TMR0_SetInterruptHandler 0010  
                                           _InitSoftStart 8678  
                              ??_I2C1_CallbackReturnReset 001B  
                                       ??_I2C1_MasterOpen 0010  
                                        _idxAdcAquisition 0091  
                                    _EUSART1_Transmit_ISR 8ECA  
                                       ??_I2C1_MasterStop 0010  
                                       ??_I2C1_Initialize 0010  
                               GetMotorPower@defineatraso 0013  
                                        __end_of_TMR0_ISR 92AA  
                                        __end_of_TMR1_ISR 8DB6  
                                        __end_of_TMR2_ISR 65C8  
                                    _idxSaveEnergyADCHist 0090  
                                                   _rfCMD 003B  
                                                   _aux_i 018D  
                          actionZone_Closed@typeOpenOrder 0021  
                                        _setFlashLigth_ON 8DB6  
                                          ?_EUSART1_Write 0001  
                                          readbutton@key1 0086  
                                   SetSegmentValueMain@d1 001D  
                                          readbutton@key2 0197  
                                   SetSegmentValueMain@d2 001C  
                                 __end_of_TMR1_Initialize 8CB6  
                                    setFlashLigth_ON@Freq 0010  
                                                   pclath 000FFA  
       rd1RegCompleteHandler@i2c1_master_example$F500@ptr 0019  
                                                   pclatu 000FFB  
                                         __end_of_sumHIST 708A  
                                         __end_of_sm_init 8838  
                                                   tablat 000FF5  
       rd2RegCompleteHandler@i2c1_master_example$F511@ptr 0019  
       wr2RegCompleteHandler@i2c1_master_example$F523@ptr 0019  
       wr1RegCompleteHandler@i2c1_master_example$F517@ptr 0019  
     rdBlkRegCompleteHandler@i2c1_master_example$F535@ptr 0019  
                                          ??_EUSART1_Read 0010  
                                                   plusw0 000FEB  
                                                   plusw2 000FDB  
                                 __end_of_sm_execute_main 29A8  
                                                   ttemp5 0051  
                                                   ttemp6 0054  
                                                   ttemp7 0058  
                                                   status 000FD8  
                                         ??_ControlLights 0016  
                                                   wtemp8 0051  
                                            ??_I2C1_DO_RX 001B  
                                            ??_I2C1_DO_TX 001B  
                                         ??_ControlInputs 0010  
                                         ___lbdiv@divisor 0010  
              __end_of_EUSART1_DefaultFramingErrorHandler 9710  
                    ??_EUSART1_DefaultFramingErrorHandler 0001  
                     ?_EUSART1_DefaultFramingErrorHandler 0001  
                      _EUSART1_DefaultFramingErrorHandler 970E  
                                         _TMR1_WriteTimer 93D0  
                                  ??_I2C1_DO_ADDRESS_NACK 001B  
                                         ___lbdiv@counter 0012  
                            __end_of_getStateOpenPosition 6B80  
                                            ??_I2C1_Close 0010  
                                          ??_InitReceiver 0010  
                        VerifyElectricalBrake@actualState 0011  
                      i2VerifyElectricalBrake@actualState 0002  
                                         __initialization 74A6  
                                 cmdMemoryIsEmpty@cmdType 0031  
                             ?_SetSegmentValueIntermitent 0010  
                              __end_of_EUSART1_Initialize 7F96  
                                            __end_of_main 6306  
                         sm_execute_menuConfiguration@psm 00E9  
                             __end_of_DecryptPacket_12BIT 7AE6  
                                          _refreshCurrent 8BA6  
                                          ??_InitSoftStop 0014  
                      validateRemoteSerialNumber@position 0033  
                                 __end_of_TMR2_Initialize 900A  
                             ?_INTERRUPT_InterruptManager 0001  
                                          _refreshSegment 7C88  
                                  ??_I2C1_MasterOperation 0020  
                                _TMR2_SetInterruptHandler 95E4  
                                                  ??_main 003B  
                                       ??_WWDT_Initialize 0010  
                                           __activetblptr 000003  
                                       Segments_Set@value 0001  
                                   saveNewSerial@position 00DC  
                      __end_of_validateRemoteSerialNumber 5B2E  
                              _validateRemoteSerialNumber 5992  
                                          ?_InitSoftStart 0001  
                                   ?_EUSART1_Transmit_ISR 0001  
                                           sumEnergyADC@i 0018  
                                      __end_of_I2C1_DO_RX 808C  
                                      __end_of_I2C1_DO_TX 7BFE  
                                       ?_InitWalkAutoTime 0001  
                                       ??_controlVelocity 00DA  
                                               ??_RGB_Set 0010  
                              ?_ControlDecelarationFactor 0001  
                                    __end_of_getSerialCmd 8A78  
                  __end_of_SetSegmentValueIntermitentMain 9552  
                          _SetSegmentValueIntermitentMain 953E  
                                      __end_of_I2C1_Close 935A  
                                                  _ADACCH 000F71  
                                                  _ADACCL 000F70  
                                 ?_I2C1_Read1ByteRegister 0022  
                                      ??_InitWalkAutoTime 0010  
                                                  _ADCON0 000F60  
                                                  _ADCON1 000F59  
                                                  _ADCON2 000F5A  
                                                  _ADCON3 000F5B  
                                                  _ADERRH 000F6F  
                                                  _ADERRL 000F6E  
                                                  _ADLTHH 000F6B  
                                                  _ADLTHL 000F6A  
                                                  _ADRESH 000F64  
                                                  _ADRESL 000F63  
                                                  _ADSTAT 000F65  
                                                  _ADUTHH 000F6D  
                                        ___awdiv@dividend 0014  
                                                  _ADUTHL 000F6C  
                                                  _ANSELA 000F11  
                                                  _ANSELB 000F19  
                                                  _ANSELC 000F21  
                                                  _ANSELD 000F26  
                                                  _ANSELE 000F2E  
                                                  _T0CON0 000FD5  
                                                  _T0CON1 000FD6  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                     readRFButtons@serial 0181  
                                                  _IOCBN3 00789B  
                                                  _IOCBP3 0078A3  
                                                  _RC1REG 000F99  
                                           _readRFButtons 5E62  
                                                  _RC1STA 000F9D  
                                                  _RC3PPS 000EFA  
                                 TMR1_WriteTimer@timerVal 0001  
                                                  _RC4PPS 000EFB  
                                                  _ODCONA 000F0F  
                                                  _ODCONB 000F17  
                                                  _ODCONC 000F1F  
                                                  _ODCOND 000F24  
                                                  _ODCONE 000F2C  
                                                  _RC7PPS 000EFE  
                                   __end_of_GetMotorPower 73E0  
                                                  i2l1147 93E2  
                                                  i2l2019 5DE8  
                                                  i2l2123 7CB8  
                                                  i2l2135 7D0C  
                                                  i2l2128 7CD6  
                                                  i2l2217 5018  
                                                  i2l1266 64D2  
                                                  i2l2235 747A  
                                                  i2l2323 8178  
                                                  i2l1277 655C  
                                                  i2l2318 816E  
                                                  i2l2190 4F3A  
                                                  i2l1615 48E6  
                                                  i2l2186 4E54  
                                                  _INLVLA 000F0D  
                                                  _INLVLB 000F15  
                                                  _INLVLC 000F1D  
                                                  _INLVLD 000F22  
                                                  _INLVLE 000F2A  
                                               ??_Decrypt 001D  
                                  calculateMean@meanValue 0010  
                                                  _OSCFRQ 000EDE  
                         __end_ofi2_VerifyElectricalBrake 817C  
                                                  _TMR0IE 007615  
                                                  _TMR0IF 007655  
                                                  _RX1PPS 000EB5  
                            __end_of_refreshADCZeroOffset 6E94  
                                           ?_init_package 0010  
                                                  _TX1REG 000F9A  
                                                  _TX1STA 000F9E  
                                __end_of_cmdMemoryIsEmpty 79CA  
                                       ?_I2C1_MasterClose 0001  
                                                  _DecCHK 8E98  
                                 __end_ofi2_GetMotorPower 74A6  
                                                  _RFFull 008B  
                                rdBlkRegCompleteHandler@p 0019  
                                               ??_ReadADC 0002  
                                 ??_I2C1_MasterDisableIrq 0010  
                                       ?_I2C1_MasterStart 0001  
                                         eusartparser@pos 00EB  
                    __end_of_sm_execute_menuConfiguration 1886  
                            _sm_execute_menuConfiguration 0F22  
                                       ?_I2C1_MasterWrite 0001  
                                                  _HopCHK 7BFE  
                                ?_I2C1_MasterWaitForEvent 0001  
                                      ??_I2C1_MasterClose 0010  
                                        _I2C1_DO_TX_EMPTY 85BE  
                                 controlSelectRemote@temp 00E8  
                                  _SumEnergyADCHist_array 0260  
                                      ??_I2C1_MasterStart 0010  
                                      ??_I2C1_MasterWrite 0022  
                                       _decrementTimeslot 91C0  
                    __end_of_TMR1_DefaultInterruptHandler 970C  
                            _TMR1_DefaultInterruptHandler 970A  
                                  __end_of_refreshCurrent 8BEC  
                                           ?_read_package 0011  
                                                  ___lmul 8838  
                                         ??_LoadManufCode 0010  
                                                  ___wmul 925E  
                                  __end_of_refreshSegment 7D0E  
                                               ??___awdiv 0018  
                                               ??___lbdiv 0011  
                                               ??___lbmod 0011  
                                               ??___lldiv 0018  
                                      ?_decrementTimeslot 0001  
                                               ??___lwdiv 0014  
                                       ??_i2c_writeNBytes 0027  
                                           _load_New_Menu 4194  
                             __end_of_keeloqDecryptPacket 562A  
                                ?_EUSART1_SetErrorHandler 0010  
                                                  _memcpy 8C30  
                                        ?_TMR0_Initialize 0001  
                                                  clear_0 751C  
                                                  clear_1 7528  
                                                  clear_2 7534  
                                                  clear_3 7540  
                                                  clear_4 754C  
                                        ___awdiv@quotient 001A  
                                       ??_WWDT_TimerClear 0010  
                      __end_of_sm_execute_ControlLearning 1F94  
                              _sm_execute_ControlLearning 1886  
                                                  isa$std 000001  
                        ??_EUSART1_SetOverrunErrorHandler 0012  
                         ?_EUSART1_SetOverrunErrorHandler 0010  
                                       ??_WWDT_SoftEnable 0010  
                                ??_I2C1_DO_SEND_ADR_WRITE 0011  
                          SetSegmentValueIntermitent@time 0011  
                                  setValueToEdit@menuType 00DE  
                                       ?_I2C1_SetCallback 0010  
                                  ??_I2C1_DO_RX_NACK_STOP 0010  
                                           ??_ShowVersion 001E  
                                         _ADCC_Initialize 89DA  
                                     ??_decrementTimeslot 0003  
                                             ?_CloseOrder 0001  
                                   _I2C1_DO_SEND_ADR_READ 95B4  
                                          _PMD_Initialize 93B4  
                                              _StateTRIAC 0191  
                                           ?_eusartparser 00E0  
                           ?_I2C1_SetDataCompleteCallback 0015  
                                      ??_I2C1_SetCallback 0014  
                                            __mediumconst 0000  
                          __end_of_I2C1_Read1ByteRegister 8730  
                                    __end_of_ControlMotor 4E2A  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                           Decrypt@Buffer 0022  
                                                  tblptru 000FF8  
                                               ??_sumHIST 0014  
                                               ??_sm_init 0017  
                                   SaveNVM_VarSystem@page 00D8  
                              __end_of_actionZone_Closing 4716  
                               ?_ADCC_GetSingleConversion 0001  
                                         ??_EUSART1_Write 0010  
                       __end_of_ControlDecelarationFactor 9486  
                TMR2_SetInterruptHandler@InterruptHandler 0010  
                TMR1_SetInterruptHandler@InterruptHandler 0010  
                TMR0_SetInterruptHandler@InterruptHandler 0010  
                                        ??_ControlCurrent 0023  
                                  setValueToEdit@posindex 00DF  
                                 __end_of_TMR1_WriteTimer 93EC  
                                         _eusart1RxBuffer 027C  
                                          ?_readRFButtons 0001  
                                        ___lbdiv@dividend 0011  
                                 _I2C1_DO_RX_NACK_RESTART 9662  
                                         _eusart1TxBuffer 0284  
                                     _SetSegmentValueMain 9406  
                                        ?_TMR1_Initialize 0001  
                                          ??_init_package 0011  
                                       _SYSTEM_Initialize 8F2C  
                              __end_of_actionZone_Opening 4BE0  
                          I2C1_SetDataCompleteCallback@cb 0015  
                                         ___lbmod@divisor 0010  
                                              __accesstop 0060  
                                 __end_of__initialization 7552  
                                         ___lbmod@counter 0012  
                                           Decrypt@packet 001B  
                           setValueToEdit@haveValueToEdit 00E0  
                                        ?_sm_execute_main 00ED  
                                          _setValueToEdit 1F94  
                                      getSerialCmd@serial 001B  
                         I2C1_MasterOperation@returnValue 0021  
                                      ?_SYSTEM_Initialize 0001  
                                           ___rparam_used 000001  
                               __end_of_decrementTimeslot 91EA  
                                           ??_I2C1_Poller 0020  
                                           ?_Segments_Set 0001  
                                          ??_read_package 0018  
                         ??_setPositionInvertionInClosing 00D8  
                           ?_sm_execute_menuConfiguration 00E9  
                           __end_of_EUSART1_RxDataHandler 937C  
                                 _rdBlkRegCompleteHandler 8D36  
                                          __pcstackCOMRAM 0001  
                                         ?_refreshCurrent 0001  
                                   __end_of_getKeyPressed 94B6  
                                            __pidataBANK0 9704  
                                            __pidataBANK1 96D2  
                                            __pidataBANK2 9706  
                                            __pidataBANK3 92AA  
                                     ??_SYSTEM_Initialize 0014  
                        __end_of_I2C1_MasterEnableRestart 96F8  
                                          ?_load_New_Menu 0001  
                               sm_execute_ControlGate@psm 00E7  
                                               ?_TMR0_ISR 0001  
                                         ?_refreshSegment 0001  
                                               ?_TMR1_ISR 0001  
                                               ?_TMR2_ISR 0001  
                           ?_TMR1_DefaultInterruptHandler 0001  
                         ??_setPositionInvertionInOpening 0032  
                                    ?_SetSegmentValueMain 001C  
                                        ?_TMR2_Initialize 0001  
                                        ___lbdiv@quotient 0013  
                                  __end_of_PMD_Initialize 93D0  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0010  
                                 ??_I2C1_MasterSendTxData 0010  
                                         ??_InitSoftStart 0014  
                                    __end_of_EUSART1_Read 8BA6  
                                          ??_eusartparser 00E1  
                                  ??_EUSART1_Transmit_ISR 0001  
                                    _getStateOpenPosition 6A70  
                               write_eusartparser@package 0010  
                                           ?_RemoveSerial 003A  
                                    __end_of_InitReceiver 9406  
                         actionZone_Closing@typeOpenOrder 0033  
                             __end_of_EUSART1_Receive_ISR 78A0  
                                   __end_of_I2C1_DO_RESET 963E  
                          keeloqDecryptPacket@commandType 00E9  
                                        sumEnergyADC@sumE 0014  
                        verifyProgramingMode@classic_data 0010  
                                       __end_of_ReqResync 949E  
                             VerifyFollowMe@securityClose 0010  
                                        ??_confirmpackage 0013  
                               __end_of_SYSTEM_Initialize 8F5A  
                                     __end_of_ShowVersion 855C  
                                           _eusart1RxHead 0095  
                                           _eusart1TxHead 0097  
                                           _eusart1RxTail 0094  
                                              __pbssBANK0 0060  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                  __end_of_setValueToEdit 24A0  
                                           _eusart1TxTail 0096  
                         __end_of_I2C1_MasterWaitForEvent 9662  
                       _EUSART1_TxDefaultInterruptHandler 02EF  
                                            _GetOpenOrder 562A  
                                    __end_of_InitSoftStop 8B5E  
                         ??_EUSART1_SetRxInterruptHandler 0012  
                          validateRemoteSerialNumber@mask 0035  
                                cmdMemoryIsEmpty@position 002E  
                           __end_of_rd2RegCompleteHandler 9112  
                                    I2C1_Open@returnValue 0011  
                                                 ?_DecCHK 0010  
                                           ?_WaitPreFlash 0001  
                                        ?i2_GetMotorPower 0001  
                            __end_of_SetSegmentValueLearn 6F90  
                                       ?_controlTimeslots 0001  
                           __end_of_wr2RegCompleteHandler 90E6  
                                           ?_NormalKeyGen 0026  
                                   __end_of_sm_send_event 8678  
                                   _rd1RegCompleteHandler 9112  
                                                 ?_HopCHK 0024  
                                          ??_Segments_Set 0001  
              validateRemoteSerialNumber@VerifyOnlySerial 0032  
                                              _edit_Param 0046  
                                       _I2C1_DO_SEND_STOP 967A  
                                      ??_controlTimeslots 0005  
                                           _button_struct 004C  
                                   _wr1RegCompleteHandler 913E  
                         __end_of_EUSART1_SetErrorHandler 9634  
                                       getHopCode@tempHop 0020  
                                       getHopCode@tempPos 0022  
                        __end_of_TMR0_SetInterruptHandler 9602  
                                                 ?___lmul 001D  
                                      ?_I2C1_DO_SEND_STOP 0001  
                                                 ?___wmul 0010  
                                              ??_TMR0_ISR 0003  
                                              _getHopCode 65C8  
                                              ??_TMR1_ISR 000A  
                                              ??_TMR2_ISR 0005  
                                 __end_of_ADCC_Initialize 8A2A  
                                         _I2C1_MasterOpen 94CE  
                                   ??_SetSegmentValueMain 001D  
                                         _I2C1_MasterStop 96F0  
                                         _I2C1_Initialize 9552  
                                     __end_of_I2C1_Poller 9598  
                                __end_of_setFlashLigth_ON 8DF2  
                                                 _ADFLTRH 000F73  
                                                 _ADFLTRL 000F72  
                                                 ?_memcpy 0010  
                                    readRFButtons@keyType 0087  
                                       __end_of_StopOrder 9398  
                                          ___lmul@product 0025  
                                                 _ADPREVH 000F62  
                                                 _ADPREVL 000F61  
                                write_eusartparser@debug2 0021  
                              __end_of_ResetDefaultMemory 6182  
                                                 _ADSTPTH 000F69  
                                                 _ADSTPTL 000F68  
                          _menuConfiguration_stateMachine 02BF  
                                         ?_PMD_Initialize 0001  
                       keeloq_classic_decrypt_packet@data 0038  
                                  ?_I2C1_DO_SEND_ADR_READ 0001  
                                           _erroranterior 0189  
                                     ??_I2C1_DO_SEND_STOP 0010  
                  __end_of_EUSART1_SetFramingErrorHandler 962A  
                          _EUSART1_SetFramingErrorHandler 9620  
                                    _refreshADCZeroOffset 6D96  
                                ??_sm_execute_ControlGate 00E9  
                                   i2c_readDataBlock@data 0024  
                                   _VerifyElectricalBrake 808C  
                                                 i2l14202 8148  
                                                 i2l14160 7430  
                                                 i2l14152 73F4  
                                                 i2l14208 8164  
                                                 i2l12802 9378  
                                                 i2l14410 484A  
                                                 i2l14162 743C  
                                                 i2l14420 487E  
                                                 i2l14404 4824  
                                                 i2l14172 746A  
                                                 i2l14500 4E90  
                                                 i2l14406 4834  
                                                 i2l14182 749C  
                                                 i2l14440 48F0  
                                                 i2l14408 4844  
                                                 i2l14360 4738  
                                                 i2l14506 4EAA  
                                                 i2l14452 4914  
                                                 i2l14428 48A6  
                                                 i2l14364 474E  
                                                 i2l14356 4728  
                                                 i2l14516 4ED4  
                                                 i2l14620 7CDA  
                                                 i2l14462 493C  
                                                 i2l14446 48FE  
                                                 i2l14366 4756  
                                                 i2l14630 7D08  
                                                 i2l14456 4924  
                                                 i2l14392 47DC  
                                                 i2l14376 478A  
                                                 i2l14560 4FBE  
                                                 i2l14528 4F0E  
                                                 i2l14536 4F4C  
                                                 i2l14386 47B6  
                                                 i2l14466 4954  
                                                 i2l14572 4FFC  
                                                 i2l14484 4E4A  
                                                 i2l16502 789A  
                                                 i2l14584 5038  
                                                 i2l14498 4E86  
                                                 i2l16610 6590  
                                                 i2l16602 6574  
                                                 i2l14596 889E  
                                                 i2l16552 64AA  
                                                 i2l16616 65A8  
                                                 i2l16544 6496  
                                                 i2l16482 8EF0  
                                                 i2l16568 64F4  
                                                 i2l16578 651E  
                                                 i2l16588 6540  
                          actionZone_Opened@typeOpenOrder 0021  
                                   ?_getStateOpenPosition 0001  
                                          ??_RemoveSerial 00D8  
                                              _fimdecurso 0175  
                            ?_EUSART1_DefaultErrorHandler 0001  
                                       _I2C1_MasterIsNack 95C2  
                                                 _SP1BRGH 000F9C  
                                                 _SP1BRGL 000F9B  
                                              _dispStruct 0072  
                                                 _OSCCON1 000ED8  
                                                 _OSCCON3 000EDA  
                                               _I2C1_Open 7D92  
                               ??_I2C1_DO_RX_NACK_RESTART 0010  
                                                 _RGB_Set 9598  
                                              _auxCounter 00FA  
                                         ??_readRFButtons 003B  
                                                 _OSCTUNE 000EDD  
                                       _I2C1_MasterSetIrq 96AE  
                                                 _SSP1ADD 000F93  
                                                 _SLRCONA 000F0E  
                                                 _SLRCONB 000F16  
                                                 _SLRCONC 000F1E  
                                                 _SLRCOND 000F23  
                                                 _SLRCONE 000F2B  
                                                 _WDTCON0 000ED2  
                                                 _SSP1BUF 000F92  
                                                 _WDTCON1 000ED3  
                                      ?_I2C1_MasterIsNack 0001  
                              ?_I2C1_DO_SEND_RESTART_READ 0001  
                          ??_I2C1_SetDataCompleteCallback 0019  
                                        ?_TMR1_WriteTimer 0001  
                                      ?_I2C1_MasterSetIrq 0001  
                            __end_of_generateErrorLearnig 84F6  
                                            _classic_data 0294  
                                          load_New_Menu@i 0023  
                                         ?_setValueToEdit 003A  
                                                 _RFcount 007E  
                         ??_keeloq_classic_decrypt_packet 00D8  
                                                 _Decrypt 724E  
                                  eusartparser@relcounter 00EE  
                                          ??_WaitPreFlash 0018  
                                                 _RFstate 0199  
                                      _i2c1_fsmStateTable 0F01  
                                          ??_NormalKeyGen 0028  
                                     ??_I2C1_MasterIsNack 0010  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F500 90BA  
          _rd1RegCompleteHandler@i2c1_master_example$F500 908E  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F511 908E  
          _rd2RegCompleteHandler@i2c1_master_example$F511 9062  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F523 9196  
          _wr2RegCompleteHandler@i2c1_master_example$F523 916A  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F517 9062  
                               __end_of_I2C1_DO_SEND_STOP 9682  
          _wr1RegCompleteHandler@i2c1_master_example$F517 9036  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F535 8D36  
        _rdBlkRegCompleteHandler@i2c1_master_example$F535 8CF6  
                               ??_rdBlkRegCompleteHandler 001B  
                          getCurrentComparator@tempOffset 0020  
                                                 _ReadADC 888E  
                                      I2C1_SetCallback@cb 0010  
                                           _write_package 8F86  
                                     ??_I2C1_MasterSetIrq 0010  
                                     _controlSelectRemote 3766  
                              __end_of_clearLearningValue 8012  
                                                 _NextHop 0290  
                                                 __Hparam 0000  
                              __end_of_write_eusartparser 3766  
                                                 __Lparam 0000  
                                         _WWDT_Initialize 95DA  
                                         ??_load_New_Menu 0020  
                              ??_TMR2_SetInterruptHandler 0012  
                                               _ADC_array 0200  
                                            _getSerialCmd 8A2A  
                                                 ___awdiv 7D0E  
                                                 ___lbdiv 8DF2  
                                                 ___lbmod 9196  
                                                 ___lldiv 7E16  
                                              _readInputs 6C8E  
                                         _controlVelocity 504C  
                                                 ___lwdiv 8938  
                                           _OpenFullOrder 9238  
                                            __psmallconst 0F00  
                                     RemoveSerial@cmdType 00DA  
                   __end_of_setPositionInvertionInClosing 694C  
                           _setPositionInvertionInClosing 6824  
                          ??_sm_execute_menuConfiguration 00EB  
                                     _EUSART1_is_rx_ready 9578  
                                          getHopCode@data 0016  
                                                 _difTime 0190  
                                                 __pcinit 74A6  
                                           ?_I2C1_DO_IDLE 0001  
                                           ?_I2C1_DO_RCEN 0001  
                                                 __ramtop 0F00  
                                  i2c_writeNBytes@address 0039  
                                   __end_of_getTypeRemote 96A8  
                                    __end_of_init_package 8FDE  
                                                 __ptext0 6182  
                                                 __ptext1 24A0  
                                                 __ptext2 0F22  
                                                 __ptext3 1F94  
                                                 __ptext4 4194  
                                                 __ptext5 93EC  
                                                 __ptext6 3766  
                                                 __ptext7 96A2  
                                                 __ptext8 8A2A  
                                                 __ptext9 755C  
                                   ?_refreshADCZeroOffset 0001  
                                              _memoryTEMP 02A4  
                                      i2c_readDataBlock@d 002A  
                                _I2C1_MasterEnableRestart 96F4  
                          ??_TMR1_DefaultInterruptHandler 0001  
                               __end_of_I2C1_MasterIsNack 95CE  
                            ?_I2C1_SetAddressNackCallback 0015  
                                               _T1CONbits 000FCF  
                   __end_of_setPositionInvertionInOpening 724E  
                           _setPositionInvertionInOpening 7172  
                                                 _lastKey 0195  
                                              _readbutton 8422  
                                   _OSCILLATOR_Initialize 94FE  
                                   OpenWalkOrder@diffTime 001A  
                                             _ShowVersion 84F6  
                                    ?_controlSelectRemote 0001  
                             ?_validateRemoteSerialNumber 002E  
                                        _InitFullAutoTime 9420  
                               __end_of_I2C1_MasterSetIrq 96B4  
                             checkNVM_VarSystem@saveParam 003A  
                                                 _menu_st 0151  
                                __end_of_I2C1_DO_TX_EMPTY 861C  
                                  RemoveSerial@tempSerial 00DB  
                                       __end_of_setRGB_ON 7A5A  
                                      _EUSART1_Initialize 7F18  
                                ??_PIN_MANAGER_Initialize 0010  
                               ?_TMR1_SetInterruptHandler 0010  
                                              ?_I2C1_Open 0001  
                                                 _sumHIST 6F90  
                                                 _sm_init 87E2  
                                          _BufferRF_12BIT 0187  
                                             sumHIST@sumH 001C  
                                    __end_of_read_package 89DA  
                                                 _var_sys 0100  
                           ??_EUSART1_DefaultErrorHandler 0001  
                             ??_ControlDecelarationFactor 0010  
                                ?_I2C1_CallbackReturnStop 0019  
                                     init_package@package 0010  
                                           _OpenWalkOrder 8346  
                                    _zeroCrossingWaitTime 02F1  
                                       SetSegmentValue@d1 001D  
                                       SetSegmentValue@d2 001C  
                       __end_of_I2C1_DO_SEND_RESTART_READ 969A  
                                    end_of_initialization 7552  
                              __end_of_I2C1_MasterSendAck 96BA  
                                    ?_EUSART1_is_rx_ready 0001  
                                     _I2C1_MasterClearIrq 96C0  
                                     ?_EUSART1_Initialize 0001  
                                               _PCON0bits 000FD7  
                                                 memcpy@d 0017  
                                                 memcpy@n 0014  
                                                 memcpy@s 0019  
                              __end_of_I2C1_MasterStartRx 96E8  
                             _EUSART1_OverrunErrorHandler 02E9  
                                  ?_rd1RegCompleteHandler 0019  
                                         _i2c_writeNBytes 81F2  
                              ?_GetSecurityStateInClosing 0001  
                                  _I2C1_DO_SEND_ADR_WRITE 95A6  
                                       ?_cmdMemoryIsEmpty 002E  
                                          ?_write_package 0011  
                                           _calculateMean 855C  
                            __end_of_sm_get_current_state 9578  
                                               i2u1400_40 740E  
                                               i2u1402_40 744A  
                                               i2u1410_40 8128  
                                               i2u1403_40 7458  
                                               i2u1421_40 474E  
                                               i2u1405_40 7476  
                                               i2u2220_48 003E  
                                               i2u1430_40 4814  
                                               i2u1406_40 748A  
                                               i2u1414_40 815E  
                                               i2u1407_40 7498  
                                               i2u2223_48 0056  
                                               i2u1329_40 91DA  
                                               i2u1426_40 47CA  
                                               i2u1451_40 4EA4  
                                               i2u1428_40 47F4  
                                               i2u1444_40 4E44  
                                               i2u1429_40 4804  
                                               i2u1439_40 4912  
                                               i2u1463_40 4F72  
                            __end_of_I2C1_DO_SEND_RESTART 968A  
                                               i2u1464_40 4F80  
                                               i2u1456_40 4F02  
                                               i2u1473_40 4FE4  
                                               i2u1457_40 4F08  
                                               i2u1467_40 4F9E  
                                    __end_of_eusartparser 3342  
                                               i2u1476_40 5008  
                                               i2u1492_40 5DDC  
                                         _WWDT_TimerClear 9398  
                                               i2u1484_45 88B6  
                                               i2u1477_40 5010  
                                               i2u1469_40 4FB4  
                                               i2u1493_40 5E50  
                                 __end_of_I2C1_MasterOpen 94E6  
                                  ?_wr1RegCompleteHandler 0019  
                                               i2u1486_40 7C98  
                                               i2u1479_40 5030  
                                               i2u1488_40 7CEA  
                                   __end_of_ControlLights 4194  
                                               i2u1851_48 7830  
                                               i2u1851_49 7842  
                                 __end_of_I2C1_MasterStop 96F4  
                                               i2u1853_48 785C  
                                               i2u1861_48 8DA4  
                                               i2u1870_40 64E6  
                                               i2u1853_49 786E  
                                               i2u1855_48 7886  
                                 __end_of_I2C1_Initialize 9566  
                                               i2u1873_40 650A  
                                               i2u1857_48 9298  
                                         ___lldiv@divisor 0014  
                                               i2u1885_48 65B6  
                                   __end_of_ControlInputs 6A70  
                   __end_of_EUSART1_SetRxInterruptHandler 9616  
                           _EUSART1_SetRxInterruptHandler 960C  
                                               i2u2962_47 951E  
                                             _I2C1_Poller 9588  
                        ??_SetSegmentValueIntermitentMain 001F  
                         ?_SetSegmentValueIntermitentMain 001C  
                                         _WWDT_SoftEnable 96D8  
                                         ___lldiv@counter 001C  
                                      ??_cmdMemoryIsEmpty 002F  
                               ?_I2C1_CallbackReturnReset 0019  
                           __end_of_I2C1_MasterDisableIrq 9700  
                                             _I2C1_Status 023C  
                              ?_GetSecurityStateInOpening 0001  
                                            _ControlMotor 4BE0  
                                  SaveNVM_VarSystem@point 00DB  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                             ?_getHopCode 0016  
                                          ?_OpenFullOrder 0001  
                        SetSegmentValueIntermitentMain@d1 001F  
                        SetSegmentValueIntermitentMain@d2 001C  
                                     _I2C1_MasterSendNack 96BA  
                                           HopCHK@hopDiff 0026  
                     __end_of_I2C1_SetAddressNackCallback 94CE  
                             _I2C1_SetAddressNackCallback 94B6  
                                        ?_ADCC_Initialize 0001  
                                     _getTimeDecelaration 708A  
                                              _sm_restart 8BEC  
                        __end_of_ADCC_GetSingleConversion 952A  
                                    ?_I2C1_MasterClearIrq 0001  
                                          ??_I2C1_DO_IDLE 0010  
                                    ??_EUSART1_Initialize 0012  
                                        NormalKeyGen@SEED 02DB  
                                          ??_I2C1_DO_RCEN 0010  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 9692  
                              _I2C1_DO_SEND_RESTART_WRITE 968A  
                       actionZone_Closing@securityClosing 0032  
                             ?_sm_execute_ControlLearning 00DC  
                                _TMR0_SetInterruptHandler 95F8  
                                               _PORTAbits 000F8D  
                                               _PORTBbits 000F8E  
                                  ?_VerifyElectricalBrake 0001  
                                               _PORTEbits 000F91  
                         __end_of_rdBlkRegCompleteHandler 8D76  
                                  ??_getStateOpenPosition 0032  
                                            ??_CloseOrder 0018  
                                   ??_controlSelectRemote 00E0  
                                    _SetSegmentValueLearn 6E94  
                           ??_I2C1_SetAddressNackCallback 0019  
                               I2C1_Read1ByteRegister@reg 0022  
                                        ___lbmod@dividend 0011  
                                    __end_of_Segments_Set 95DA  
                                     _ControlCounterMoves 8730  
                            _controlLearning_stateMachine 02B4  
                         I2C1_SetDataCompleteCallback@ptr 0017  
                                          ?_OpenWalkOrder 0001  
                                              _stateMotor 0083  
                                      eusartparser@i_7272 00ED  
                                      eusartparser@i_7273 00EF  
                                      eusartparser@i_7274 00F0  
                                      eusartparser@i_7275 00F1  
                                      eusartparser@i_7276 00F2  
                                           ?_sumEnergyADC 0010  
                          I2C1_CallbackReturnReset@funPtr 0019  
                       actionZone_Opening@securityClosing 00E4  
                                    ?_I2C1_MasterSendNack 0001  
                         keeloqDecryptPacket@classic_data 00E2  
                                     EUSART1_Write@txData 0010  
                                       ??_ClearFlag_rfCMD 0010  
                                    ?_getTimeDecelaration 0029  
                                   ??_EUSART1_is_rx_ready 0010  
                                       _saveEnergyADCHist 91EA  
                                 __end_of_WWDT_Initialize 95E4  
                                             ___lbmod@rem 0013  
                       actionZone_Opening@securityOpening 00E5  
                                      eusartparser@buffer 028C  
                                          ?_calculateMean 0010  
                                        ??_refreshCurrent 0021  
                                       ??_SetSegmentValue 001D  
                                            _EUSART1_Read 8B5E  
                                      ?_saveEnergyADCHist 0010  
                                      eusartparser@save_f 018B  
                       __end_of_GetSecurityStateInClosing 7760  
                                      eusartparser@serial 00E7  
                                        ??_refreshSegment 0002  
                                          __end_of_DecCHK 8ECA  
                                       _controlLearnDigit 8EFC  
                                 __end_of_controlVelocity 526A  
                                    ?_ControlCounterMoves 0001  
                                     setValueToEdit@value 01F9  
                                      _actionZone_Closing 448A  
                                    __end_of_RemoveSerial 7F18  
                                          __end_of_HopCHK 7C88  
                                      __end_of_CloseOrder 9238  
                                 _zeroCrossingWaitTimeIdx 0084  
                                            _InitReceiver 93EC  
                               _ControlDecelarationFactor 946E  
                                      ?_controlLearnDigit 0001  
                                    _timer0ReloadVal16bit 0292  
                       __end_of_GetSecurityStateInOpening 7806  
                                       setRGB_ON@RGBLigth 0015  
                                     ??_saveEnergyADCHist 0012  
                            __end_of_INTERRUPT_Initialize 96E0  
                                      _actionZone_Opening 498C  
                                   ??_I2C1_MasterClearIrq 0010  
                    __end_of_TMR2_DefaultInterruptHandler 970A  
                            _TMR2_DefaultInterruptHandler 9708  
                                             ?_readInputs 0001  
                                               _DispTable 03D2  
                                          __end_of___lmul 888E  
                                   __end_of_LoadManufCode 9316  
                                     ?_actionZone_Closing 0001  
                                          __end_of___wmul 9284  
                                          _I2C1_DO_RX_ACK 9672  
                                  ??_refreshADCZeroOffset 0017  
                                    _generateErrorLearnig 848E  
                                            _InitSoftStop 8B14  
                                     ??_controlLearnDigit 0013  
                                 i2_VerifyElectricalBrake 8104  
                                          __end_of_memcpy 8C74  
                                  ?_OSCILLATOR_Initialize 0001  
                                    __end_of_WaitPreFlash 82D6  
                            __end_of_getCurrentComparator 5CC8  
                                      sm_send_event@event 0014  
                                    __end_of_NormalKeyGen 6C8E  
                                           _saveNewSerial 82D6  
                                             ?_readbutton 0001  
                                     ?_actionZone_Opening 0001  
                                   ?_SetSegmentValueLearn 0001  
                         __end_of_I2C1_CallbackReturnStop 96F0  
                          ?_setPositionInvertionInClosing 0001  
                           __end_of_I2C1_MasterSendTxData 96A2  
                                       _read_eusartparser 29A8  
                                   refreshADCZeroOffset@i 0017  
                                     start_initialization 74A6  
                             i2GetMotorPower@defineatraso 0004  
                                             ??_I2C1_Open 0010  
                                          ??_sumEnergyADC 0012  
                                      ?_read_eusartparser 0018  
                                             __end_of_rxi 498C  
                                   ??_I2C1_MasterSendNack 0010  
                                 __end_of_i2c_writeNBytes 8266  
                          ?_setPositionInvertionInOpening 0001  
                                   ??_getTimeDecelaration 002D  
           EUSART1_SetRxInterruptHandler@interruptHandler 0010  
           EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                               __end_of_saveEnergyADCHist 9212  
                                 __end_of_WWDT_TimerClear 93B4  
                                    ??_actionZone_Closing 0032  
                                   __end_of_EUSART1_Write 8CF6  
                                 __end_of_WWDT_SoftEnable 96DC  
                                         ??_write_package 0018  
                                  rd1RegCompleteHandler@p 0019  
                            __end_of_verifyProgramingMode 8E98  
                                               _ReqResync 9486  
                               __end_of_controlLearnDigit 8F2C  
                                     ??_read_eusartparser 0019  
                                                ??_DecCHK 0012  
                                       _programmer_enable 0085  
                                    ??_actionZone_Opening 003B  
                                  _sm_execute_ControlGate 3B26  
                 sm_execute_ControlLearning@typeOpenOrder 003A  
                                                ??_HopCHK 0026  
                               refreshADCZeroOffset@media 0018  
                                I2C1_SetBuffer@bufferSize 0012  
                                   ??_ControlCounterMoves 003A  
                                       _controlSaveRemote 755C  
                                        ?_I2C1_MasterOpen 0001  
                            keeloqDecryptPacket@hop_error 00E8  
                                        ?_I2C1_MasterStop 0001  
                                        ?_I2C1_Initialize 0001  
                                 saveNewSerial@tempSerial 00D8  
                                  controlSelectRemote@pos 00E2  
                                         ??_OpenFullOrder 0018  
                                   calculateMean@newValue 0014  
                                      ?_controlSaveRemote 0001  
                                 sm_get_current_state@psm 0010  
                                        ??_PMD_Initialize 0010  
                                                ??___lmul 0025  
                                  __end_of_I2C1_DO_RX_ACK 967A  
                                                ??___wmul 0014  
                                      _zeroCrossingLength 0194  
                                          _VerifyFollowMe 92D0  
                                  wr1RegCompleteHandler@p 0019  
                                   _EUSART1_RxDataHandler 935A  
                                 ??_I2C1_DO_SEND_ADR_READ 0010  
                          ?_EUSART1_SetRxInterruptHandler 0010  
                                             ?_sm_restart 0010  
                                             __pdataBANK0 00FA  
                                             __pdataBANK1 01FA  
                                             __pdataBANK2 02F1  
                                             __pdataBANK3 03D2  
                                   ?_generateErrorLearnig 0001  
                                                ??_memcpy 0016  
                                       ?_setFlashLigth_ON 0010  
                           ?_TMR2_DefaultInterruptHandler 0001  
                                       _controlMotorForce 4E2A  
                                     ??_controlSaveRemote 0020  
                               __end_of_read_eusartparser 2EB0  
                                          ?_saveNewSerial 00D8  
                                        I2C1_Open@address 0010  
                                          _eusart1RxCount 0093  
                                      ??_setFlashLigth_ON 0012  
                                _ADCC_GetSingleConversion 9514  
                                      ?_controlMotorForce 0001  
                                   __end_of_InitSoftStart 86D4  
                                               _StopOrder 937C  
                                    _sm_get_current_state 9566  
                                             __pbssCOMRAM 003B  
                                         ??_OpenWalkOrder 0018  
                                    _I2C1_DO_SEND_RESTART 9682  
                                getTimeDecelaration@state 0031  
                       _EUSART1_RxDefaultInterruptHandler 02ED  
                                           __pcstackBANK0 00D8  
                                        ??_setValueToEdit 00DC  
                                                ?_RGB_Set 0001  
                                        _brakeElectric_st 0078  
                             ??_I2C1_DO_SEND_RESTART_READ 0010  
                                     ??_controlMotorForce 0005  
                                      _ResetDefaultMemory 5FF8  
                                         ??_calculateMean 0018  
                         ??_EUSART1_SetTxInterruptHandler 0012  
                                    __end_of_I2C1_DO_IDLE 9652  
                        ??_EUSART1_SetFramingErrorHandler 0012  
                         ?_EUSART1_SetFramingErrorHandler 0010  
                                                ?_Decrypt 001B  
                                    __end_of_I2C1_DO_RCEN 9648  
                                           _GetMotorPower 731A  
                                        ?_WWDT_Initialize 0001  
                                              ?_ReqResync 0010  
                               __end_of_controlSaveRemote 7610  
                                            _init_package 8FB2  
                           I2C1_SetAddressNackCallback@cb 0015  
                                      sm_execute_main@psm 00ED  
                                                ?_ReadADC 0001  
                                            RGB_Set@value 0010  
                                   _TMR0_InterruptHandler 02E5  
                                     ?_ResetDefaultMemory 0001  
                                               __pnvBANK1 01FF  
                                               __pnvBANK2 02DF  
                                   _rd2RegCompleteHandler 90E6  
                                        _InitWalkAutoTime 952A  
                                        ?_controlVelocity 0001  
                                __end_of_InitFullAutoTime 943A  
                             __end_of_SetSegmentValueMain 9420  
                          VerifyElectricalBrake@tempState 0010  
                        i2VerifyElectricalBrake@tempState 0001  
                                        ___lwdiv@dividend 0010  
                                  _PIN_MANAGER_Initialize 78A0  
                                  __end_of_VerifyFollowMe 92F4  
                                   _wr2RegCompleteHandler 90BA  
                              ??_I2C1_MasterEnableRestart 0010  
                                               __pintcode 0008  
                                            _read_package 898A  
                                          _I2C1_MasterFsm 88E4  
                              __end_of_checkNVM_VarSystem 5992  
                        __end_of_TMR1_SetInterruptHandler 95F8  
                         ADCC_GetSingleConversion@channel 0001  
                                         ?_I2C1_DO_RX_ACK 0001  
                                                ?___awdiv 0014  
                                               __ptext100 94FE  
                                               __ptext101 96DC  
                                                ?___lbdiv 0010  
                                               __ptext110 9578  
                                               __ptext102 9552  
                                               __ptext111 4BE0  
                                               __ptext103 7F18  
                                               __ptext200 9284  
                                               __ptext120 6F90  
                                               __ptext112 808C  
                                               __ptext104 9602  
                                               __ptext201 4716  
                                               __ptext121 7AE6  
                                               __ptext113 3E70  
                                               __ptext105 960C  
                                               __ptext202 970C  
                                               __ptext130 81F2  
                                               __ptext122 91EA  
                                               __ptext114 79CA  
                                               __ptext106 9616  
                                               __ptext203 8ECA  
                                               __ptext131 8C30  
                                               __ptext123 6D96  
                                               __ptext115 9598  
                                               __ptext107 9620  
                                               __ptext204 7806  
                                               __ptext140 8AC6  
                                               __ptext132 94B6  
                                               __ptext124 8938  
                                               __ptext116 8DB6  
                                               __ptext108 962A  
                                               __ptext205 96C6  
                                               __ptext141 9634  
                                               __ptext133 7D92  
                                               __ptext125 5B2E  
                                               __ptext117 694C  
                                               __ptext109 89DA  
                                               __ptext206 970E  
                                               __ptext150 8012  
                                               __ptext142 9662  
                                               __ptext134 94CE  
                                               __ptext126 925E  
                                               __ptext118 6306  
                                               __ptext207 96CC  
                                               __ptext151 7B72  
                                               __ptext143 966A  
                                               __ptext135 9652  
                                               __ptext127 731A  
                                               __ptext119 8BA6  
                                               __ptext208 935A  
                                               __ptext160 96E0  
                                               __ptext152 95A6  
                                               __ptext144 9672  
                                               __ptext136 900A  
                                               __ptext128 8730  
                                               __ptext209 0000  
                                               __ptext161 96BA  
                                               __ptext153 95B4  
                                               __ptext145 967A  
                                               __ptext137 9588  
                                               __ptext129 8E2C  
                                               __ptext170 90BA  
                                               __ptext162 96E4  
                                               __ptext154 9648  
                                               __ptext146 9682  
                                               __ptext138 965A  
                                               __ptext171 90E6  
                                               __ptext163 96E8  
                                               __ptext155 85BE  
                                               __ptext147 968A  
                                               __ptext139 88E4  
                                               __ptext180 96F8  
                                               __ptext172 9112  
                                               __ptext164 96EC  
                                               __ptext156 96AE  
                                               __ptext148 9692  
                                               __ptext181 9338  
                                               __ptext173 913E  
                                               __ptext165 8CF6  
                                               __ptext157 95C2  
                                               __ptext149 963E  
                                               __ptext190 91C0  
                                               __ptext182 96FC  
                                               __ptext174 916A  
                                               __ptext166 9036  
                                               __ptext158 969A  
                                               __ptext191 9708  
                                               __ptext183 9700  
                                               __ptext175 94E6  
                                               __ptext167 9062  
                                               __ptext159 96B4  
                                               __ptext192 888E  
                                               __ptext184 96C0  
                                               __ptext176 83B4  
                                               __ptext168 908E  
                                               __ptext193 9514  
                                               __ptext177 9454  
                                               __ptext169 8D36  
                                               __ptext194 8D76  
                                               __ptext186 647A  
                                               __ptext178 96F0  
                                               __ptext195 4E2A  
                                               __ptext187 7C88  
                                               __ptext179 96F4  
                                               __ptext196 8104  
                                               __ptext188 95CE  
                                               __ptext197 73E0  
                                               __ptext189 5CC8  
                                               __ptext198 93D0  
                                               __ptext199 970A  
                                                ?___lbmod 0010  
                                 write_eusartparser@debug 001F  
                            ??_SetSegmentValueIntermitent 0013  
                                                ?___lldiv 0010  
                               ??i2_VerifyElectricalBrake 0001  
                               __end_of_controlMotorForce 504C  
                                                ?___lwdiv 0010  
                                   confirmpackage@confirm 0012  
                                    i2c_readDataBlock@len 0026  
                                    i2c_readDataBlock@reg 0022  
                                   confirmpackage@package 0011  
                                 _I2C1_MasterWaitForEvent 965A  
                                        _I2C1_MasterClose 9700  
                         DecryptPacket_12BIT@classic_data 00E2  
                                ??_I2C1_Read1ByteRegister 0023  
                                          _I2C1_SetBuffer 9454  
                            ??_INTERRUPT_InterruptManager 000A  
                                  ??_SetSegmentValueLearn 0010  
                                        _I2C1_MasterStart 96F8  
                                    NormalKeyGen@SKEYtemp 002C  
                                        _I2C1_MasterWrite 9652  
                                      _clearLearningValue 7F96  
                                      _write_eusartparser 3342  
                                    ??_ResetDefaultMemory 003A  
                                                _BAUD1CON 000F9F  
                                             __smallconst 0F00  
                                   ?_sm_get_current_state 0010  
                                            ?_ShowVersion 0001  
                                                _F2Chance 0196  
                                              ?_StopOrder 0001  
              __end_of_EUSART1_DefaultOverrunErrorHandler 96CC  
                    ??_EUSART1_DefaultOverrunErrorHandler 0001  
                     ?_EUSART1_DefaultOverrunErrorHandler 0001  
                      _EUSART1_DefaultOverrunErrorHandler 96C6  
                                   ?_I2C1_DO_SEND_RESTART 0001  
                                       _i2c_readDataBlock 817C  
                                            _eusartparser 2EB0  
                                    _EUSART1_ErrorHandler 02E7  
                                       ?_I2C1_DO_TX_EMPTY 0001  
                                                ?_sumHIST 0010  
                                                ?_sm_init 0012  
                                 _EUSART1_SetErrorHandler 962A  
                                      ?_i2c_readDataBlock 0022  
                                     ReqResync@CurrentHop 0010  
                        __end_of_I2C1_CallbackReturnReset 96EC  
                                     ?_clearLearningValue 0001  
                                        ___lwdiv@quotient 0014  
                                     ?_write_eusartparser 0010  
                                        ?_i2c_writeNBytes 0022  
                                      ??_I2C1_DO_TX_EMPTY 001B  
                                                _T2CLKCON 000FBF  
                                   __end_of_readRFButtons 5FF8  
                                 ??_rd1RegCompleteHandler 001B  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0001  
                                               _setRGB_ON 79CA  
                               I2C1_MasterSendTxData@data 0010  
                                        ?_WWDT_TimerClear 0001  
                                    _INTERRUPT_Initialize 96DC  
                                          ?_GetMotorPower 0001  
                                 ??_wr1RegCompleteHandler 001B  
                                        ?_WWDT_SoftEnable 0001  
                                              sumHIST@max 0018  
                                              sumHIST@min 001A  
                                       ??_TMR0_Initialize 0012  
                                     ??_i2c_readDataBlock 0028  
                                        _I2C1_SetCallback 83B4  
                                              sm_init@psm 0012  
                                          ___wmul@product 0014  
                                                _LATAbits 000F83  
                 EUSART1_SetErrorHandler@interruptHandler 0010  
                                                _LATCbits 000F85  
                                read_eusartparser@package 0018  
                                                _LATDbits 000F86  
                                                _LATEbits 000F87  
                                              _I2C1_DO_RX 8012  
                                              _I2C1_DO_TX 7B72  
                             ??_GetSecurityStateInClosing 0014  
                                                _PIE0bits 000EC2  
                                    _getCurrentComparator 5B2E  
                                                _PIE3bits 000EC5  
                                                _PIE4bits 000EC6  
                                              DecCHK@data 0010  
                                                Decrypt@i 001E  
                                                Decrypt@j 001F  
                                                Decrypt@p 0020  
                                         _firstselectflag 01FE  
                                     _DecryptPacket_12BIT 7A5A  
                                              _I2C1_Close 9338  
                         setValueToEdit@ParameterSelected 003A  
                                            ?_I2C1_Poller 0001  
                                  __end_of_I2C1_MasterFsm 8938  
                            __end_of_I2C1_MasterGetRxData 96E4  
                              ??_TMR0_SetInterruptHandler 0012  
                                                _PIR0bits 000ECA  
                                            _Segments_Set 95CE  
                                                _PIR3bits 000ECD  
                                         ?_VerifyFollowMe 0001  
                                                _PIR4bits 000ECE  
                                readRFButtons@rollingCode 0185  
                             ??_GetSecurityStateInOpening 0014  
                                  ?_EUSART1_RxDataHandler 0001  
                                    ??_clearLearningValue 0010  
                                      _I2C1_MasterSendAck 96B4  
                                    ??_write_eusartparser 0017  
                                    __end_of_sumEnergyADC 7B72  
                               _I2C1_DO_SEND_RESTART_READ 9692  
                                            ??_getHopCode 0018  
                                               _pointSync 007A  
                                   __end_of_load_New_Menu 448A  
                                                _SSP1CON1 000F96  
                                                _SSP1CON2 000F97  
                                  ??_generateErrorLearnig 0017  
                                                _TMR0_ISR 9284  
                                                _TMR1_ISR 8D76  
                                                _TMR2_ISR 647A  
                                           _getKeyPressed 949E  
                                 ??_VerifyElectricalBrake 0010  
                                  __end_of_I2C1_SetBuffer 946E  
                                               _temppower 018F  
                                         _powerControl_st 017B  
                                                _SSP1STAT 000F95  
                    __end_of_I2C1_SetDataCompleteCallback 94FE  
                            _I2C1_SetDataCompleteCallback 94E6  
                                      _I2C1_MasterStartRx 96E4  
                                         ??_saveNewSerial 00DD  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0001  
                                       ??_TMR1_Initialize 0012  
                                         _ClearFlag_rfCMD 96A8  
                                     ?_I2C1_MasterSendAck 0001  
                                              _ADCON0bits 000F60  
                               __end_of_i2c_readDataBlock 81F2  
                                       ___wmul@multiplier 0010  
                                ?_I2C1_DO_RX_NACK_RESTART 0001  
                                    _verifyProgramingMode 8E64  
                                       ??_sm_execute_main 00EF  
                                    _numberOfErrorCurrent 008E  
                                    ?_DecryptPacket_12BIT 00E0  
                                               _ts_system 019B  
                                                _BitCount 008C  
                                     ?_I2C1_MasterStartRx 0001  
                            __end_of_I2C1_DO_ADDRESS_NACK 8B14  
                          controlSelectRemote@validSerial 00E1  
                          ??_TMR2_DefaultInterruptHandler 0001  
                                       _actionZone_Closed 7610  
                               ?_TMR2_SetInterruptHandler 0010  
                                    _idxAdcZeroAquisition 008F  
                                         _SetSegmentValue 943A  
                                            _RemoveSerial 7E98  
                          getStateOpenPosition@stateMotor 00D9  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 95B4  
                                       _actionZone_Opened 526A  
                                           _I2C1_DO_RESET 9634  
                                      ?_actionZone_Closed 0001  
                                                _BufferRF 02CA  
                                     read_package@package 0018  
                                       ___lmul@multiplier 001D  
                                               copy_data0 74BA  
                                               copy_data1 74F2  
                                   ?_INTERRUPT_Initialize 0001  
                                              ?_setRGB_ON 0011  
                                   I2C1_Close@returnValue 0010  
                                ?_rdBlkRegCompleteHandler 0019  
                                      ?_actionZone_Opened 0001  
                                        _Abertura_pedonal 018E  
                                     I2C1_SetCallback@idx 0014  
                                     I2C1_SetCallback@ptr 0012  
                                      __end_of_getHopCode 66F6  
                                             ??_ReqResync 0012  
                                    ??_I2C1_MasterSendAck 0010  
                                       ??_TMR2_Initialize 0012  
                                   EUSART1_Read@readValue 0010  
                                  ?_rd2RegCompleteHandler 0019  
                                     ??_actionZone_Closed 0020  
                                            _WaitPreFlash 8266  
                                   ?_getCurrentComparator 0016  
                            __end_of_I2C1_MasterOperation 9036  
                                            _NormalKeyGen 6B80  
                     sm_execute_ControlGate@typeOpenOrder 00EB  
                                  ?_wr2RegCompleteHandler 0019  
                                    ??_I2C1_MasterStartRx 0010  
                                     ??_actionZone_Opened 0020  
                            saveEnergyADCHist@valueToSave 0010  
                   __end_of_EUSART1_SetTxInterruptHandler 960C  
                           _EUSART1_SetTxInterruptHandler 9602  
                                           _sm_send_event 861C  
                                     _keeloqDecryptPacket 5458  
                                                __Hrparam 0000  
                                         ?_I2C1_MasterFsm 0001  
                                               memcpy@tmp 0016  
                                                __Lrparam 0000  
                                    sumEnergyADC@auxValue 0016  
                                     i2c_writeNBytes@data 0024  
                         actionZone_Opening@typeOpenOrder 00E6  
                                          ?_getKeyPressed 0001  
                               ??_I2C1_MasterWaitForEvent 0010  
                                       _main_stateMachine 01EE  
                                   _I2C1_MasterDisableIrq 96FC  
                                            ??_readInputs 0010  
                                 ??_OSCILLATOR_Initialize 0010  
                             __end_of_controlSelectRemote 3B26  
                                         ?_I2C1_SetBuffer 0010  
                                          _fullmotorPower 0082  
                                  ResetDefaultMemory@type 003A  
                                        _controlTimeslots 5CC8  
                                _TMR1_SetInterruptHandler 95EE  
                                  ??_sm_get_current_state 0012  
                                   ?_verifyProgramingMode 0010  
                               _GetSecurityStateInClosing 76BA  
                       I2C1_Read1ByteRegister@returnValue 0024  
                                  ??_I2C1_DO_SEND_RESTART 0010  
                                            ??_readbutton 0010  
                               __end_of_actionZone_Closed 76BA  
                                   ??_DecryptPacket_12BIT 003B  
                                   _TMR1_InterruptHandler 02E1  
                               ??_EUSART1_SetErrorHandler 0012  
                                       ??i2_GetMotorPower 0001  
                     __end_of_EUSART1_DefaultErrorHandler 96D2  
                             _EUSART1_DefaultErrorHandler 96CC  
                                             ??_StopOrder 0018  
                             __end_of_EUSART1_is_rx_ready 9588  
                                    ?_keeloqDecryptPacket 00E0  
                               __end_of_actionZone_Opened 5458  
                               getStateOpenPosition@state 00D8  
                               _GetSecurityStateInOpening 7760  
                                         ___lwdiv@divisor 0012  
                                          ?_I2C1_DO_RESET 0001  
                                         ___lwdiv@counter 0016  
                                                __ptext10 9196  
                                                __ptext11 7D0E  
                                                __ptext20 87E2  
                                                __ptext12 9406  
                                                __ptext21 8BEC  
                                                __ptext13 96A8  
                                                __ptext30 526A  
                                                __ptext22 7F96  
                                                __ptext14 8EFC  
                                                __ptext31 92D0  
                                                __ptext23 855C  
                                                __ptext15 6E94  
                                                __ptext40 8266  
                                                __ptext32 9212  
                                                __ptext24 498C  
                                                __ptext16 7E16  
                                                __ptext41 9238  
                                                __ptext33 448A  
                                                __ptext25 7172  
                                                __ptext17 3B26  
                                                __ptext50 562A  
                                                __ptext42 9420  
                                                __ptext34 6824  
                                                __ptext26 504C  
                                                __ptext18 1886  
                                                __ptext51 8DF2  
                                                __ptext43 8346  
                                                __ptext35 708A  
                                                __ptext27 6A70  
                                                __ptext19 848E  
                                                __ptext60 6B80  
                                                __ptext52 953E  
                                                __ptext44 861C  
                                                __ptext36 8838  
                                                __ptext28 8B14  
                                                __ptext61 92F4  
                                                __ptext53 8422  
                                                __ptext45 9566  
                                                __ptext37 937C  
                                                __ptext29 946E  
                                                __ptext70 57F2  
                                                __ptext62 724E  
                                                __ptext54 898A  
                                                __ptext46 8678  
                                                __ptext38 76BA  
                                                __ptext71 5FF8  
                                                __ptext63 7BFE  
                                                __ptext55 8B5E  
                                                __ptext47 952A  
                                                __ptext39 7610  
                                                __ptext80 8CB6  
                                                __ptext72 86D4  
                                                __ptext64 65C8  
                                                __ptext56 5E62  
                                                __ptext48 7760  
                                                __ptext81 8A78  
                                                __ptext73 949E  
                                                __ptext65 9486  
                                                __ptext57 5458  
                                                __ptext49 8F5A  
                                                __ptext90 8F2C  
                                                __ptext82 8FB2  
                                                __ptext74 2EB0  
                                                __ptext66 8E98  
                                                __ptext58 8E64  
                                                __ptext91 95DA  
                                                __ptext83 7938  
                                                __ptext75 3342  
                                                __ptext67 7A5A  
                                                __ptext59 878A  
                                                __ptext92 8FDE  
                                                __ptext84 817C  
                                                __ptext76 5992  
                                                __ptext68 6C8E  
                                                __ptext93 95E4  
                                                __ptext85 7E98  
                                                __ptext77 82D6  
                                                __ptext69 66F6  
                                                __ptext94 8C74  
                                                __ptext86 9398  
                                                __ptext78 29A8  
                                                __ptext95 95EE  
                                                __ptext87 96D8  
                                                __ptext79 8F86  
                                                __ptext96 9316  
                                                __ptext88 84F6  
                                                __ptext97 95F8  
                                                __ptext89 943A  
                                                __ptext98 93B4  
                                                __ptext99 78A0  
                                            _SSP1CON1bits 000F96  
                                            _SSP1CON2bits 000F97  
                                     NormalKeyGen@HOPtemp 0028  
                                         ??_GetMotorPower 0010  
                                _controlGate_stateMachine 01E3  
                                           ?_GetOpenOrder 0001  
                                 ?_sm_execute_ControlGate 00E7  
                                 DecryptPacket_12BIT@data 00E0  
               ??_wr1RegCompleteHandler@pic18f46k40$F7740 001B  
               ??_wr2RegCompleteHandler@pic18f46k40$F7760 001B  
                ?_rd2RegCompleteHandler@pic18f46k40$F7752 0019  
                                                _learn_st 0060  
               ??_rd2RegCompleteHandler@pic18f46k40$F7754 001B  
                ?_rd1RegCompleteHandler@pic18f46k40$F7746 0019  
                ?_wr1RegCompleteHandler@pic18f46k40$F7738 0019  
               ??_rd1RegCompleteHandler@pic18f46k40$F7748 001B  
              ?_rdBlkRegCompleteHandler@pic18f46k40$F7764 0019  
             ??_rdBlkRegCompleteHandler@pic18f46k40$F7766 001B  
                ?_wr2RegCompleteHandler@pic18f46k40$F7758 0019  
                                      __end_of_readInputs 6D96  
                                _I2C1_CallbackReturnReset 96E8  
                                             ?_I2C1_DO_RX 0001  
                                             ?_I2C1_DO_TX 0001  
                                          ?_sm_send_event 0012  
                    __end_of_TMR0_DefaultInterruptHandler 970E  
                            _TMR0_DefaultInterruptHandler 970C  
                                i2c_readDataBlock@address 0029  
                             __end_of_I2C1_MasterClearIrq 96C6  
                            __end_of_I2C1_DO_RX_NACK_STOP 9672  
                                             ?_I2C1_Close 0001  
                                          _ControlCurrent 6306  
                                                _security 016A  
                                    RemoveSerial@position 003A  
                                      __end_of_readbutton 848E  
                                              _RC1STAbits 000F9D  
          EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                 __end_of_ClearFlag_rfCMD 96AE  
                                    sm_init@initial_state 0014  
                      __end_of_SetSegmentValueIntermitent 8F86  
                              _SetSegmentValueIntermitent 8F5A  
                                                isa$xinst 000000  
                              ??_ADCC_GetSingleConversion 0001  
                                                int$flags 0050  
                         __end_of_I2C1_DO_RX_NACK_RESTART 966A  
                           SetSegmentValueLearn@direction 0012  
                                            ??_sm_restart 0012  
                                I2C1_MasterOperation@read 0020  
                      __end_of_INTERRUPT_InterruptManager 009C  
                              _INTERRUPT_InterruptManager 0008  
                                       _loadNVM_VarSystem 66F6  
                                SaveNVM_VarSystem@tempAdd 00D9  
                                       ??_TMR1_WriteTimer 0003  
                                 __end_of_SetSegmentValue 9454  
                           __end_of_I2C1_DO_SEND_ADR_READ 95C2  
                             _EUSART1_FramingErrorHandler 02EB  
                                            _I2C1_DO_IDLE 9648  
                                     _EUSART1_Receive_ISR 7806  
                                            _I2C1_DO_RCEN 963E  
                                     decrementTimeslot@ts 0001  
                                      ?_loadNVM_VarSystem 0001  
                           controlSelectRemote@tempSerial 00E4  
                                           _getTypeRemote 96A2  
                             __end_of_I2C1_MasterSendNack 96C0  
                                        sm_send_event@psm 0012  
                             __end_of_getTimeDecelaration 7172  
                                   ??_keeloqDecryptPacket 00E4  
                                            _waitZeroPeak 0192  
                                __end_of_InitWalkAutoTime 953E  
                                              _INTCONbits 000FF2  
                                       _aux_in_auto_close 018C  
                                                memcpy@d1 0010  
                                                memcpy@s1 0012  
                          I2C1_SetAddressNackCallback@ptr 0017  
                                      i2c_writeNBytes@dat 0028  
                                      i2c_writeNBytes@len 0025  
                                      i2c_writeNBytes@reg 0022  
                                    _I2C1_MasterGetRxData 96E0  
                                   _I2C1_MasterSendTxData 969A  
                                     ??_loadNVM_VarSystem 003B  
                                           sm_restart@psm 0010  
                                  ??_INTERRUPT_Initialize 0010  
                                            _RFFull_12BIT 008A  
                                    _control_limit_switch 0081  
                          __end_of_sm_execute_ControlGate 3E70  
                                              Decrypt@aux 0021  
                                              Decrypt@key 001D  
                                          ??_GetOpenOrder 0020  
                                             ??_setRGB_ON 0013  
                             __end_of_ControlCounterMoves 878A  
                                                intlevel2 0000  
                        actionZone_Opened@securityClosing 0020  
                        actionZone_Closed@securityOpening 0020  
                                __end_of_I2C1_MasterClose 9704  
                                    ?_EUSART1_Receive_ISR 0001  
                                  _I2C1_Read1ByteRegister 86D4  
                                 readRFButtons@typeRemote 0198  
                                  ??_getCurrentComparator 001A  
                                  rd2RegCompleteHandler@p 0019  
                                      __end_of_sm_restart 8C30  
                                        ___lldiv@dividend 0010  
                                 ?_PIN_MANAGER_Initialize 0001  
                                  __end_of_ControlCurrent 647A  
                           I2C1_Read1ByteRegister@address 0023  
                                __end_of_I2C1_MasterStart 96FC  
                                __end_of_I2C1_MasterWrite 965A  
                                   __end_of_write_package 8FB2  
                                             _tempCounter 01FA  
                  __end_of_EUSART1_SetOverrunErrorHandler 9620  
                          _EUSART1_SetOverrunErrorHandler 9616  
                                        ??_I2C1_DO_RX_ACK 0010  
                                             _WDTCON0bits 000ED2  
                                             getHopCode@i 0023  
                                 _I2C1_CallbackReturnStop 96EC  
                            __end_of_EUSART1_Transmit_ISR 8EFC  
                                          _confirmpackage 8A78  
                                      NormalKeyGen@Buffer 0030  
                                                sumHIST@i 0020  
                                         ??_getKeyPressed 0010  
                                           _ControlLights 3E70  
                                       ?_InitFullAutoTime 0001  
                                           _ControlInputs 694C  
                           ?_TMR0_DefaultInterruptHandler 0001  
                                    _I2C1_DO_ADDRESS_NACK 8AC6  
                                              HopCHK@data 0024  
                                  ?_I2C1_MasterDisableIrq 0001  
                                           ?_getSerialCmd 001B  
                                          _ADC_zero_array 0396  
                               __end_of_loadNVM_VarSystem 6824  
                                      ??_InitFullAutoTime 0010  
                   __end_of_keeloq_classic_decrypt_packet 87E2  
                           _keeloq_classic_decrypt_packet 878A  
                                   __end_of_OpenFullOrder 925E  
                                  wr2RegCompleteHandler@p 0019  
          EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                          ?_EUSART1_SetTxInterruptHandler 0010  
                                  ??_verifyProgramingMode 0012  
                                      _eusart1RxLastError 019A  
                                          ?_getTypeRemote 0001  
                                        _cmdMemoryIsEmpty 7938  
                                      NormalKeyGen@serial 0026  
                                __end_of_I2C1_SetCallback 8422  
                                             _var_sys_NVM 0098  
                                              _SSP1DATPPS 000EB8  
                                              _SSP1CLKPPS 000EB7  
                                         ??_I2C1_DO_RESET 0010  
                                    WWDT_TimerClear@state 0010  
                                        ___lldiv@quotient 0018  
                                    _I2C1_MasterOperation 900A  
                                         _TMR0_Initialize 9316  
                            ??_validateRemoteSerialNumber 00D8  
                                      _checkNVM_VarSystem 57F2  
                                   ?_I2C1_MasterGetRxData 0001  
                           controlSelectRemote@typeRemote 00E3  
                                   __end_of_OpenWalkOrder 83B4  
                                            _sumEnergyADC 7AE6  
                                          _listSyncValues 0300  
                                           setRGB_ON@Freq 0011  
                                     ?_checkNVM_VarSystem 0001  
                                   ??_EUSART1_Receive_ISR 0001  
                          __end_of_PIN_MANAGER_Initialize 7938  
                                       ??_ADCC_Initialize 0010  
                           __end_of_rd1RegCompleteHandler 913E  
                                         ??_sm_send_event 0016  
                                        ??_VerifyFollowMe 0010  
                                   __end_of_calculateMean 85BE  
                                        sm_init@hist_mode 0016  
                                  __end_of_confirmpackage 8AC6  
                                         ?_ControlCurrent 0001  
                           __end_of_wr1RegCompleteHandler 916A  
                                   _TMR2_InterruptHandler 02DF  
                                 ??_EUSART1_RxDataHandler 0001  
                                          ?_ControlLights 0001  
                                         _TMR1_Initialize 8C74  
                                          ?_ControlInputs 0001  
                                   ?_I2C1_DO_ADDRESS_NACK 0001  
                                          ??_getSerialCmd 001C  
                                           ?_ControlMotor 0001  
                                         _sm_execute_main 24A0  
